MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.30 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                19. April 2016
Time:                17.30 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O39OKZ1E 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl22\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O39OKZ1E new;
MPRINT(EM_DIAGRAM):   run;
1288854    filename emflow
1288854  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl22\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl22\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Scoring NEURAL31_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1288855    *------------------------------------------------------------*;
1288856    * Ensmbl22: Scoring NEURAL31_TRAIN data;
1288857    *------------------------------------------------------------*;
1288858    data EMWS8.Ensmbl22_TRAIN
1288859    / view=EMWS8.Ensmbl22_TRAIN
1288860    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl22_TRAIN / view=EMWS8.Ensmbl22_TRAIN ;
1288861    set EMWS8.Neural31_TRAIN
1288862    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural31_TRAIN ;
1288863    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl22\EMFLOWSCORE.sas.
1288864   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1288865   +* Ensmbl22: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Combine model for DepVar;
1288866   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1288867   +* Ensmbl22: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Scoring Code of model 1 of 7;
1288868   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1288869   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1288870   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1288871   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1288872   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
1288873   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1288874   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1288875   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
1288876   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1288877   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
1288878   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1288879   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1288880   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
1288881   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1288882   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
1288883   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1288884   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1288885   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
1288886   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1288887   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
1288888   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1288889   +
1288890   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1288891   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1288891  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1288892   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1288893   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1288894   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1288895   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1288896   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
1288897   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1288898   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
1288899   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1288900   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
1288901   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1288902   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1288903   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1288904   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1288905   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1288906   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1288907   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
1288908   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1288909   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
1288910   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1288911   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
1288912   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1288913   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1288914   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
1288915   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1288916   +* NODE: Meta2;
MPRINT(EM_DIAGRAM):   * NODE: Meta2;
1288917   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1288918   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1288919   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1288920   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1288921   +* NODE: Neural31;
MPRINT(EM_DIAGRAM):   * NODE: Neural31;
1288922   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1288923   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1288924   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1288925   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1288926   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1288927   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1288928   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1288929   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1288930   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1288931   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1288932   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1288933   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1288934   +LENGTH _WARN_ $4
1288935   +      F_DepVar  $ 12
1288936   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1288937   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1288938   +
1288939   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1288940   +
1288941   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1288942   +
1288943   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1288944   +
1288945   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1288946   +
1288947   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1288948   +
1288949   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1288950   +
1288951   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1288952   +
1288953   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1288954   +
1288955   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1288956   +
1288957   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1288958   +
1288959   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1288960   +
1288961   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1288962   +
1288963   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1288964   +
1288965   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1288966   +
1288967   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1288968   +
1288969   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1288970   +
1288971   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1288972   +
1288973   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1288974   +
1288975   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1288976   +
1288977   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1288978   +
1288979   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1288980   +
1288981   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1288982   +
1288983   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1288984   +
1288985   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1288986   +
1288987   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1288988   +
1288989   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1288990   +
1288991   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1288992   +
1288993   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1288994   +
1288995   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1288996   +
1288997   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1288998   +
1288999   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1289000   +
1289001   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1289002   +
1289003   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1289004   +
1289005   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1289006   +
1289007   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1289008   +
1289009   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1289010   +
1289011   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1289012   +
1289013   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1289014   +
1289015   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1289016   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1289017   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1289018   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1289019   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1289020   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1289021   +end;
MPRINT(EM_DIAGRAM):   end;
1289022   +else do;
MPRINT(EM_DIAGRAM):   else do;
1289023   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1289024   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1289025   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1289026   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1289027   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1289028   +   end;
MPRINT(EM_DIAGRAM):   end;
1289029   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1289030   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1289031   +   end;
MPRINT(EM_DIAGRAM):   end;
1289032   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1289033   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1289034   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1289035   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1289036   +   end;
MPRINT(EM_DIAGRAM):   end;
1289037   +end;
MPRINT(EM_DIAGRAM):   end;
1289038   +
1289039   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1289040   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1289041   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1289042   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1289043   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1289044   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1289045   +end;
MPRINT(EM_DIAGRAM):   end;
1289046   +else do;
MPRINT(EM_DIAGRAM):   else do;
1289047   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1289048   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1289049   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1289050   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1289051   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1289052   +   end;
MPRINT(EM_DIAGRAM):   end;
1289053   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1289054   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1289055   +   end;
MPRINT(EM_DIAGRAM):   end;
1289056   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1289057   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1289058   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1289059   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1289060   +   end;
MPRINT(EM_DIAGRAM):   end;
1289061   +end;
MPRINT(EM_DIAGRAM):   end;
1289062   +
1289063   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1289064   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1289065   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1289066   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1289067   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1289068   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1289069   +end;
MPRINT(EM_DIAGRAM):   end;
1289070   +else do;
MPRINT(EM_DIAGRAM):   else do;
1289071   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1289072   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1289073   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1289074   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1289075   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1289076   +   end;
MPRINT(EM_DIAGRAM):   end;
1289077   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1289078   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1289079   +   end;
MPRINT(EM_DIAGRAM):   end;
1289080   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1289081   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1289082   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1289083   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1289084   +   end;
MPRINT(EM_DIAGRAM):   end;
1289085   +end;
MPRINT(EM_DIAGRAM):   end;
1289086   +
1289087   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1289088   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1289089   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1289090   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1289091   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1289092   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1289093   +end;
MPRINT(EM_DIAGRAM):   end;
1289094   +else do;
MPRINT(EM_DIAGRAM):   else do;
1289095   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1289096   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1289097   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1289098   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1289099   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1289100   +   end;
MPRINT(EM_DIAGRAM):   end;
1289101   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1289102   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1289103   +   end;
MPRINT(EM_DIAGRAM):   end;
1289104   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1289105   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1289106   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1289107   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1289108   +   end;
MPRINT(EM_DIAGRAM):   end;
1289109   +end;
MPRINT(EM_DIAGRAM):   end;
1289110   +
1289111   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1289112   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1289113   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1289114   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1289115   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1289116   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1289117   +end;
MPRINT(EM_DIAGRAM):   end;
1289118   +else do;
MPRINT(EM_DIAGRAM):   else do;
1289119   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1289120   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1289121   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1289122   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1289123   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1289124   +   end;
MPRINT(EM_DIAGRAM):   end;
1289125   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1289126   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1289127   +   end;
MPRINT(EM_DIAGRAM):   end;
1289128   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1289129   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1289130   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1289131   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1289132   +   end;
MPRINT(EM_DIAGRAM):   end;
1289133   +end;
MPRINT(EM_DIAGRAM):   end;
1289134   +
1289135   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1289136   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1289137   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1289138   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1289139   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1289140   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1289141   +end;
MPRINT(EM_DIAGRAM):   end;
1289142   +else do;
MPRINT(EM_DIAGRAM):   else do;
1289143   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1289144   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1289145   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1289146   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1289147   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1289148   +   end;
MPRINT(EM_DIAGRAM):   end;
1289149   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1289150   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1289151   +   end;
MPRINT(EM_DIAGRAM):   end;
1289152   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1289153   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1289154   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1289155   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1289156   +   end;
MPRINT(EM_DIAGRAM):   end;
1289157   +end;
MPRINT(EM_DIAGRAM):   end;
1289158   +
1289159   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1289160   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1289161   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1289162   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1289163   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1289164   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1289165   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1289166   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1289167   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1289168   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1289169   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1289170   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1289171   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1289172   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1289173   +end;
MPRINT(EM_DIAGRAM):   end;
1289174   +else do;
MPRINT(EM_DIAGRAM):   else do;
1289175   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1289176   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1289177   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1289178   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1289179   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1289180   +   end;
MPRINT(EM_DIAGRAM):   end;
1289181   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1289182   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1289183   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1289184   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1289185   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1289186   +   end;
MPRINT(EM_DIAGRAM):   end;
1289187   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1289188   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1289189   +   end;
MPRINT(EM_DIAGRAM):   end;
1289190   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1289191   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1289192   +   end;
MPRINT(EM_DIAGRAM):   end;
1289193   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1289194   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1289195   +   end;
MPRINT(EM_DIAGRAM):   end;
1289196   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1289197   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1289198   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1289199   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1289200   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1289201   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1289202   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1289203   +   end;
MPRINT(EM_DIAGRAM):   end;
1289204   +end;
MPRINT(EM_DIAGRAM):   end;
1289205   +
1289206   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1289207   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1289208   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1289209   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1289210   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1289211   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1289212   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1289213   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1289214   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1289215   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1289216   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1289217   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1289218   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1289219   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1289220   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1289221   +end;
MPRINT(EM_DIAGRAM):   end;
1289222   +else do;
MPRINT(EM_DIAGRAM):   else do;
1289223   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1289224   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1289225   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1289226   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1289227   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1289228   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1289229   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1289230   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1289231   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1289232   +         end;
MPRINT(EM_DIAGRAM):   end;
1289233   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1289234   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1289235   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1289236   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1289237   +            end;
MPRINT(EM_DIAGRAM):   end;
1289238   +         end;
MPRINT(EM_DIAGRAM):   end;
1289239   +      end;
MPRINT(EM_DIAGRAM):   end;
1289240   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1289241   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1289242   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1289243   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1289244   +         end;
MPRINT(EM_DIAGRAM):   end;
1289245   +      end;
MPRINT(EM_DIAGRAM):   end;
1289246   +   end;
MPRINT(EM_DIAGRAM):   end;
1289247   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1289248   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1289249   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1289250   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1289251   +      end;
MPRINT(EM_DIAGRAM):   end;
1289252   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1289253   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1289254   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1289255   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1289256   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1289257   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1289258   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1289259   +         end;
MPRINT(EM_DIAGRAM):   end;
1289260   +      end;
MPRINT(EM_DIAGRAM):   end;
1289261   +   end;
MPRINT(EM_DIAGRAM):   end;
1289262   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1289263   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1289264   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1289265   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1289266   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1289267   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1289268   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1289269   +   end;
MPRINT(EM_DIAGRAM):   end;
1289270   +end;
MPRINT(EM_DIAGRAM):   end;
1289271   +
1289272   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1289273   +*** Checking missing input Interval
1289274   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1289275   +
1289276   +IF NMISS(
1289277   +   Income ,
1289278   +   Kidhome ,
1289279   +   MntFishProducts ,
1289280   +   MntFruits ,
1289281   +   MntGoldProds ,
1289282   +   MntMeatProducts ,
1289283   +   MntSweetProducts ,
1289284   +   MntWines ,
1289285   +   NumCatalogPurchases ,
1289286   +   NumDealsPurchases ,
1289287   +   NumStorePurchases ,
1289288   +   NumWebPurchases ,
1289289   +   NumWebVisitsMonth ,
1289290   +   Recency ,
1289291   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
1289292   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1289293   +
1289294   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1289295   +END;
MPRINT(EM_DIAGRAM):   END;
1289296   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1289297   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1289298   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1289299   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1289300   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1289301   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1289302   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1289303   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1289304   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1289305   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1289306   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1289307   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1289308   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1289309   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1289310   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1289311   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1289312   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1289313   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1289314   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1289315   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1289316   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1289317   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1289318   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1289319   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1289320   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1289321   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1289322   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1289323   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1289324   +END;
MPRINT(EM_DIAGRAM):   END;
1289325   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1289326   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1289327   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1289328   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1289329   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1289330   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1289331   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1289332   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1289333   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1289334   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1289335   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1289336   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1289337   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1289338   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1289339   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1289340   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1289341   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1289342   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1289343   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1289344   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1289345   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1289346   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1289347   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1289348   +   ELSE S_NumCatalogPurchases
1289349   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1289350   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1289351   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1289352   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1289353   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1289354   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1289355   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1289356   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1289357   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1289358   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1289359   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1289360   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1289361   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1289362   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1289363   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1289364   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1289365   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1289366   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1289367   +END;
MPRINT(EM_DIAGRAM):   END;
1289368   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1289369   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1289370   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1289371   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1289372   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1289373   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1289374   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1289375   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1289376   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1289377   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1289378   +   H11  =    -1.33502235588914 * S_Income  +     0.86914778071024 * S_Kidhome
1289379   +          +     0.06177226616611 * S_MntFishProducts
1289380   +          +     0.22465531888584 * S_MntFruits  +    -0.01216018017424 *
1289381   +        S_MntGoldProds  +    -0.10435601171346 * S_MntMeatProducts
1289382   +          +     0.19245635559754 * S_MntSweetProducts
1289383   +          +    -0.06473329764962 * S_MntWines  +    -0.40260570275107 *
1289384   +        S_NumCatalogPurchases  +    -0.01043435397255 * S_NumDealsPurchases
1289385   +          +    -0.35392759932805 * S_NumStorePurchases
1289386   +          +     -0.2443007642616 * S_NumWebPurchases
1289387   +          +    -0.72667572173837 * S_NumWebVisitsMonth
1289388   +          +     0.97336679863544 * S_Recency  +     0.72544205905496 *
1289389   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -1.33502235588914 * S_Income + 0.86914778071024 * S_Kidhome + 
0.06177226616611 * S_MntFishProducts + 0.22465531888584 * S_MntFruits + -0.01216018017424 * 
S_MntGoldProds + -0.10435601171346 * S_MntMeatProducts + 0.19245635559754 * S_MntSweetProducts 
+ -0.06473329764962 * S_MntWines + -0.40260570275107 * S_NumCatalogPurchases + 
-0.01043435397255 * S_NumDealsPurchases + -0.35392759932805 * S_NumStorePurchases + 
-0.2443007642616 * S_NumWebPurchases + -0.72667572173837 * S_NumWebVisitsMonth + 
0.97336679863544 * S_Recency + 0.72544205905496 * S_Teenhome ;
1289390   +   H12  =    -0.09105644521483 * S_Income  +     0.01920168996111 * S_Kidhome
1289391   +          +     0.00012212205827 * S_MntFishProducts
1289392   +          +     0.00032664246198 * S_MntFruits  +    -0.02161363659377 *
1289393   +        S_MntGoldProds  +    -0.40917729724893 * S_MntMeatProducts
1289394   +          +     0.01459978689352 * S_MntSweetProducts
1289395   +          +     0.28732983017398 * S_MntWines  +    -0.26033282919423 *
1289396   +        S_NumCatalogPurchases  +      -0.306688498482 * S_NumDealsPurchases
1289397   +          +      0.4054643699817 * S_NumStorePurchases
1289398   +          +     0.27747327375374 * S_NumWebPurchases
1289399   +          +    -0.31325270852641 * S_NumWebVisitsMonth
1289400   +          +      0.3707065492652 * S_Recency  +     0.05681262835219 *
1289401   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.09105644521483 * S_Income + 0.01920168996111 * S_Kidhome + 
0.00012212205827 * S_MntFishProducts + 0.00032664246198 * S_MntFruits + -0.02161363659377 * 
S_MntGoldProds + -0.40917729724893 * S_MntMeatProducts + 0.01459978689352 * S_MntSweetProducts 
+ 0.28732983017398 * S_MntWines + -0.26033282919423 * S_NumCatalogPurchases + -0.306688498482 
* S_NumDealsPurchases + 0.4054643699817 * S_NumStorePurchases + 0.27747327375374 * 
S_NumWebPurchases + -0.31325270852641 * S_NumWebVisitsMonth + 0.3707065492652 * S_Recency + 
0.05681262835219 * S_Teenhome ;
1289402   +   H11  = H11  +     0.23904403737743 * AcceptedCmp10
1289403   +          +     0.12365860406863 * AcceptedCmp20  +     0.28547657706908 *
1289404   +        AcceptedCmp30  +     0.37587337003909 * AcceptedCmp40
1289405   +          +    -0.04113029526683 * AcceptedCmp50  +      0.2596440604013 *
1289406   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.23904403737743 * AcceptedCmp10 + 0.12365860406863 * 
AcceptedCmp20 + 0.28547657706908 * AcceptedCmp30 + 0.37587337003909 * AcceptedCmp40 + 
-0.04113029526683 * AcceptedCmp50 + 0.2596440604013 * Complain0 ;
1289407   +   H12  = H12  +     0.25336773034662 * AcceptedCmp10
1289408   +          +     0.39499004620022 * AcceptedCmp20  +     0.19852127214148 *
1289409   +        AcceptedCmp30  +     0.19215250383325 * AcceptedCmp40
1289410   +          +     0.27213364707939 * AcceptedCmp50  +    -0.00774901485124 *
1289411   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.25336773034662 * AcceptedCmp10 + 0.39499004620022 * 
AcceptedCmp20 + 0.19852127214148 * AcceptedCmp30 + 0.19215250383325 * AcceptedCmp40 + 
0.27213364707939 * AcceptedCmp50 + -0.00774901485124 * Complain0 ;
1289412   +   H11  = H11  +    -0.05263155952227 * Education2n_Cycle
1289413   +          +    -1.40124591386453 * EducationBasic  +     0.43501491332678 *
1289414   +        EducationGraduation  +     0.77305262508081 * EducationMaster
1289415   +          +    -0.43667846017683 * Marital_StatusDivorced
1289416   +          +     1.33507828005472 * Marital_StatusMarried
1289417   +          +    -0.75026283842664 * Marital_StatusSingle
1289418   +          +     0.84436594207558 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.05263155952227 * Education2n_Cycle + -1.40124591386453 * 
EducationBasic + 0.43501491332678 * EducationGraduation + 0.77305262508081 * EducationMaster + 
-0.43667846017683 * Marital_StatusDivorced + 1.33507828005472 * Marital_StatusMarried + 
-0.75026283842664 * Marital_StatusSingle + 0.84436594207558 * Marital_StatusTogether ;
1289419   +   H12  = H12  +     0.08398432584098 * Education2n_Cycle
1289420   +          +     0.12375156883157 * EducationBasic  +     -0.0901891766073 *
1289421   +        EducationGraduation  +    -0.07691770257441 * EducationMaster
1289422   +          +    -0.03531690128173 * Marital_StatusDivorced
1289423   +          +    -0.04344171367809 * Marital_StatusMarried
1289424   +          +    -0.05137362653166 * Marital_StatusSingle
1289425   +          +    -0.01265518570667 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.08398432584098 * Education2n_Cycle + 0.12375156883157 * 
EducationBasic + -0.0901891766073 * EducationGraduation + -0.07691770257441 * EducationMaster 
+ -0.03531690128173 * Marital_StatusDivorced + -0.04344171367809 * Marital_StatusMarried + 
-0.05137362653166 * Marital_StatusSingle + -0.01265518570667 * Marital_StatusTogether ;
1289426   +   H11  =     1.86846527977677 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.86846527977677 + H11 ;
1289427   +   H12  =    -0.42494263287735 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.42494263287735 + H12 ;
1289428   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1289429   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1289430   +END;
MPRINT(EM_DIAGRAM):   END;
1289431   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1289432   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1289433   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1289434   +END;
MPRINT(EM_DIAGRAM):   END;
1289435   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1289436   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1289437   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1289438   +
1289439   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1289440   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1289441   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1289442   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1289443   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1289444   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1289445   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1289446   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1289447   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1289448   +end;
MPRINT(EM_DIAGRAM):   end;
1289449   +else do;
MPRINT(EM_DIAGRAM):   else do;
1289450   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1289451   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1289452   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1289453   +   end;
MPRINT(EM_DIAGRAM):   end;
1289454   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1289455   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1289456   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1289457   +   end;
MPRINT(EM_DIAGRAM):   end;
1289458   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1289459   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1289460   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1289461   +   end;
MPRINT(EM_DIAGRAM):   end;
1289462   +end;
MPRINT(EM_DIAGRAM):   end;
1289463   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1289464   +   P_DepVar1  =    -5.43090515434696 * H11  +    -9.08673127131886 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.43090515434696 * H11 + -9.08673127131886 * H12 ;
1289465   +   P_DepVar1  =      2.7752946076831 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.7752946076831 + P_DepVar1 ;
1289466   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1289467   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1289468   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1289469   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1289470   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1289471   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1289472   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1289473   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1289474   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1289475   +END;
MPRINT(EM_DIAGRAM):   END;
1289476   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1289477   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1289478   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1289479   +END;
MPRINT(EM_DIAGRAM):   END;
1289480   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1289481   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1289482   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1289483   +END;
MPRINT(EM_DIAGRAM):   END;
1289484   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1289485   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1289486   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1289487   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1289488   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1289489   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1289490   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1289491   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1289492   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1289493   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1289494   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1289495   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1289496   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1289497   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1289498   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1289499   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1289500   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1289501   +END;
MPRINT(EM_DIAGRAM):   END;
1289502   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1289503   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1289504   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1289505   +drop
1289506   +H11
1289507   +H12
1289508   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
1289509   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1289510   +* Renaming variables for Neural31;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural31;
1289511   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1289512   +* Renaming Posterior variables for Neural31;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural31;
1289513   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1289514   +drop Neural31_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural31_P_DepVar1;
1289515   +Neural31_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural31_P_DepVar1 = P_DepVar1;
1289516   +drop Neural31_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural31_P_DepVar0;
1289517   +Neural31_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural31_P_DepVar0 = P_DepVar0;
1289518   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1289519   +* Renaming _WARN_ variable for Neural31;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural31;
1289520   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1289521   +length Neural31_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural31_WARN_ $4;
1289522   +drop Neural31_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural31_WARN_;
1289523   +Neural31_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural31_WARN_ = _WARN_;
1289524   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1289525   +* Ensmbl22: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Scoring Code of model 2 of 7;
1289526   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1289527   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1289528   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1289529   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1289530   +* NODE: Neural32;
MPRINT(EM_DIAGRAM):   * NODE: Neural32;
1289531   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1289532   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1289533   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1289534   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1289535   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1289536   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1289537   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1289538   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1289539   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1289540   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1289541   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1289542   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1289543   +LENGTH _WARN_ $4
1289544   +      F_DepVar  $ 12
1289545   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1289546   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1289547   +
1289548   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1289549   +
1289550   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1289551   +
1289552   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1289553   +
1289554   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1289555   +
1289556   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1289557   +
1289558   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1289559   +
1289560   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1289561   +
1289562   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1289563   +
1289564   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1289565   +
1289566   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1289567   +
1289568   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1289569   +
1289570   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1289571   +
1289572   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1289573   +
1289574   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1289575   +
1289576   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1289577   +
1289578   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1289579   +
1289580   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1289581   +
1289582   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1289583   +
1289584   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1289585   +
1289586   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1289587   +
1289588   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1289589   +
1289590   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1289591   +
1289592   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1289593   +
1289594   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1289595   +
1289596   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1289597   +
1289598   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1289599   +
1289600   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1289601   +
1289602   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1289603   +
1289604   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1289605   +
1289606   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1289607   +
1289608   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1289609   +
1289610   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1289611   +
1289612   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1289613   +
1289614   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1289615   +
1289616   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1289617   +
1289618   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1289619   +
1289620   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1289621   +
1289622   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1289623   +
1289624   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1289625   +
1289626   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1289627   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1289628   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1289629   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1289630   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1289631   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1289632   +end;
MPRINT(EM_DIAGRAM):   end;
1289633   +else do;
MPRINT(EM_DIAGRAM):   else do;
1289634   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1289635   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1289636   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1289637   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1289638   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1289639   +   end;
MPRINT(EM_DIAGRAM):   end;
1289640   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1289641   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1289642   +   end;
MPRINT(EM_DIAGRAM):   end;
1289643   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1289644   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1289645   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1289646   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1289647   +   end;
MPRINT(EM_DIAGRAM):   end;
1289648   +end;
MPRINT(EM_DIAGRAM):   end;
1289649   +
1289650   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1289651   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1289652   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1289653   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1289654   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1289655   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1289656   +end;
MPRINT(EM_DIAGRAM):   end;
1289657   +else do;
MPRINT(EM_DIAGRAM):   else do;
1289658   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1289659   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1289660   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1289661   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1289662   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1289663   +   end;
MPRINT(EM_DIAGRAM):   end;
1289664   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1289665   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1289666   +   end;
MPRINT(EM_DIAGRAM):   end;
1289667   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1289668   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1289669   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1289670   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1289671   +   end;
MPRINT(EM_DIAGRAM):   end;
1289672   +end;
MPRINT(EM_DIAGRAM):   end;
1289673   +
1289674   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1289675   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1289676   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1289677   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1289678   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1289679   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1289680   +end;
MPRINT(EM_DIAGRAM):   end;
1289681   +else do;
MPRINT(EM_DIAGRAM):   else do;
1289682   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1289683   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1289684   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1289685   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1289686   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1289687   +   end;
MPRINT(EM_DIAGRAM):   end;
1289688   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1289689   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1289690   +   end;
MPRINT(EM_DIAGRAM):   end;
1289691   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1289692   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1289693   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1289694   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1289695   +   end;
MPRINT(EM_DIAGRAM):   end;
1289696   +end;
MPRINT(EM_DIAGRAM):   end;
1289697   +
1289698   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1289699   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1289700   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1289701   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1289702   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1289703   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1289704   +end;
MPRINT(EM_DIAGRAM):   end;
1289705   +else do;
MPRINT(EM_DIAGRAM):   else do;
1289706   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1289707   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1289708   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1289709   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1289710   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1289711   +   end;
MPRINT(EM_DIAGRAM):   end;
1289712   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1289713   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1289714   +   end;
MPRINT(EM_DIAGRAM):   end;
1289715   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1289716   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1289717   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1289718   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1289719   +   end;
MPRINT(EM_DIAGRAM):   end;
1289720   +end;
MPRINT(EM_DIAGRAM):   end;
1289721   +
1289722   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1289723   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1289724   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1289725   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1289726   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1289727   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1289728   +end;
MPRINT(EM_DIAGRAM):   end;
1289729   +else do;
MPRINT(EM_DIAGRAM):   else do;
1289730   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1289731   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1289732   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1289733   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1289734   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1289735   +   end;
MPRINT(EM_DIAGRAM):   end;
1289736   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1289737   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1289738   +   end;
MPRINT(EM_DIAGRAM):   end;
1289739   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1289740   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1289741   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1289742   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1289743   +   end;
MPRINT(EM_DIAGRAM):   end;
1289744   +end;
MPRINT(EM_DIAGRAM):   end;
1289745   +
1289746   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1289747   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1289748   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1289749   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1289750   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1289751   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1289752   +end;
MPRINT(EM_DIAGRAM):   end;
1289753   +else do;
MPRINT(EM_DIAGRAM):   else do;
1289754   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1289755   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1289756   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1289757   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1289758   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1289759   +   end;
MPRINT(EM_DIAGRAM):   end;
1289760   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1289761   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1289762   +   end;
MPRINT(EM_DIAGRAM):   end;
1289763   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1289764   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1289765   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1289766   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1289767   +   end;
MPRINT(EM_DIAGRAM):   end;
1289768   +end;
MPRINT(EM_DIAGRAM):   end;
1289769   +
1289770   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1289771   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1289772   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1289773   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1289774   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1289775   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1289776   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1289777   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1289778   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1289779   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1289780   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1289781   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1289782   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1289783   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1289784   +end;
MPRINT(EM_DIAGRAM):   end;
1289785   +else do;
MPRINT(EM_DIAGRAM):   else do;
1289786   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1289787   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1289788   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1289789   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1289790   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1289791   +   end;
MPRINT(EM_DIAGRAM):   end;
1289792   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1289793   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1289794   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1289795   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1289796   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1289797   +   end;
MPRINT(EM_DIAGRAM):   end;
1289798   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1289799   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1289800   +   end;
MPRINT(EM_DIAGRAM):   end;
1289801   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1289802   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1289803   +   end;
MPRINT(EM_DIAGRAM):   end;
1289804   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1289805   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1289806   +   end;
MPRINT(EM_DIAGRAM):   end;
1289807   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1289808   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1289809   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1289810   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1289811   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1289812   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1289813   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1289814   +   end;
MPRINT(EM_DIAGRAM):   end;
1289815   +end;
MPRINT(EM_DIAGRAM):   end;
1289816   +
1289817   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1289818   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1289819   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1289820   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1289821   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1289822   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1289823   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1289824   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1289825   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1289826   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1289827   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1289828   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1289829   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1289830   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1289831   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1289832   +end;
MPRINT(EM_DIAGRAM):   end;
1289833   +else do;
MPRINT(EM_DIAGRAM):   else do;
1289834   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1289835   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1289836   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1289837   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1289838   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1289839   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1289840   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1289841   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1289842   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1289843   +         end;
MPRINT(EM_DIAGRAM):   end;
1289844   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1289845   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1289846   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1289847   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1289848   +            end;
MPRINT(EM_DIAGRAM):   end;
1289849   +         end;
MPRINT(EM_DIAGRAM):   end;
1289850   +      end;
MPRINT(EM_DIAGRAM):   end;
1289851   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1289852   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1289853   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1289854   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1289855   +         end;
MPRINT(EM_DIAGRAM):   end;
1289856   +      end;
MPRINT(EM_DIAGRAM):   end;
1289857   +   end;
MPRINT(EM_DIAGRAM):   end;
1289858   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1289859   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1289860   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1289861   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1289862   +      end;
MPRINT(EM_DIAGRAM):   end;
1289863   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1289864   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1289865   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1289866   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1289867   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1289868   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1289869   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1289870   +         end;
MPRINT(EM_DIAGRAM):   end;
1289871   +      end;
MPRINT(EM_DIAGRAM):   end;
1289872   +   end;
MPRINT(EM_DIAGRAM):   end;
1289873   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1289874   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1289875   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1289876   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1289877   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1289878   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1289879   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1289880   +   end;
MPRINT(EM_DIAGRAM):   end;
1289881   +end;
MPRINT(EM_DIAGRAM):   end;
1289882   +
1289883   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1289884   +*** Checking missing input Interval
1289885   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1289886   +
1289887   +IF NMISS(
1289888   +   Income ,
1289889   +   Kidhome ,
1289890   +   MntFishProducts ,
1289891   +   MntFruits ,
1289892   +   MntGoldProds ,
1289893   +   MntMeatProducts ,
1289894   +   MntSweetProducts ,
1289895   +   MntWines ,
1289896   +   NumCatalogPurchases ,
1289897   +   NumDealsPurchases ,
1289898   +   NumStorePurchases ,
1289899   +   NumWebPurchases ,
1289900   +   NumWebVisitsMonth ,
1289901   +   Recency ,
1289902   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
1289903   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1289904   +
1289905   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1289906   +END;
MPRINT(EM_DIAGRAM):   END;
1289907   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1289908   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1289909   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1289910   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1289911   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1289912   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1289913   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1289914   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1289915   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1289916   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1289917   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1289918   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1289919   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1289920   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1289921   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1289922   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1289923   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1289924   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1289925   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1289926   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1289927   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1289928   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1289929   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1289930   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1289931   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1289932   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1289933   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1289934   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1289935   +END;
MPRINT(EM_DIAGRAM):   END;
1289936   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1289937   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1289938   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1289939   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1289940   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1289941   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1289942   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1289943   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1289944   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1289945   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1289946   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1289947   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1289948   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1289949   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1289950   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1289951   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1289952   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1289953   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1289954   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1289955   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1289956   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1289957   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1289958   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1289959   +   ELSE S_NumCatalogPurchases
1289960   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1289961   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1289962   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1289963   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1289964   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1289965   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1289966   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1289967   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1289968   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1289969   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1289970   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1289971   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1289972   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1289973   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1289974   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1289975   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1289976   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1289977   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1289978   +END;
MPRINT(EM_DIAGRAM):   END;
1289979   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1289980   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1289981   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1289982   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1289983   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1289984   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1289985   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1289986   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1289987   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1289988   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1289989   +   H11  =     1.40261108800308 * S_Income  +     -0.8062097507842 * S_Kidhome
1289990   +          +    -0.12974862644982 * S_MntFishProducts
1289991   +          +     0.08065642800368 * S_MntFruits  +    -0.12102130003972 *
1289992   +        S_MntGoldProds  +     0.19226249622126 * S_MntMeatProducts
1289993   +          +    -0.12290326901613 * S_MntSweetProducts
1289994   +          +     0.07790241176978 * S_MntWines  +     0.36123042724896 *
1289995   +        S_NumCatalogPurchases  +    -0.01034406765754 * S_NumDealsPurchases
1289996   +          +     0.09738032540137 * S_NumStorePurchases
1289997   +          +     0.44459515215205 * S_NumWebPurchases
1289998   +          +      0.8471075994578 * S_NumWebVisitsMonth
1289999   +          +    -1.10667985160899 * S_Recency  +    -0.88509832868515 *
1290000   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 1.40261108800308 * S_Income + -0.8062097507842 * S_Kidhome + 
-0.12974862644982 * S_MntFishProducts + 0.08065642800368 * S_MntFruits + -0.12102130003972 * 
S_MntGoldProds + 0.19226249622126 * S_MntMeatProducts + -0.12290326901613 * S_MntSweetProducts 
+ 0.07790241176978 * S_MntWines + 0.36123042724896 * S_NumCatalogPurchases + -0.01034406765754 
* S_NumDealsPurchases + 0.09738032540137 * S_NumStorePurchases + 0.44459515215205 * 
S_NumWebPurchases + 0.8471075994578 * S_NumWebVisitsMonth + -1.10667985160899 * S_Recency + 
-0.88509832868515 * S_Teenhome ;
1290001   +   H12  =     0.51266936686642 * S_Income  +     0.26909433357851 * S_Kidhome
1290002   +          +     0.02406077596811 * S_MntFishProducts
1290003   +          +    -0.57443793453522 * S_MntFruits  +     0.36824731232149 *
1290004   +        S_MntGoldProds  +     0.40177289143061 * S_MntMeatProducts
1290005   +          +     -0.1147507059349 * S_MntSweetProducts
1290006   +          +    -0.66379351187459 * S_MntWines  +     1.33407347415468 *
1290007   +        S_NumCatalogPurchases  +     1.00633891197299 * S_NumDealsPurchases
1290008   +          +    -0.23920969262322 * S_NumStorePurchases
1290009   +          +     -0.6008837862932 * S_NumWebPurchases
1290010   +          +     0.26759743722885 * S_NumWebVisitsMonth
1290011   +          +    -0.42755419464125 * S_Recency  +    -0.14471776361394 *
1290012   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.51266936686642 * S_Income + 0.26909433357851 * S_Kidhome + 
0.02406077596811 * S_MntFishProducts + -0.57443793453522 * S_MntFruits + 0.36824731232149 * 
S_MntGoldProds + 0.40177289143061 * S_MntMeatProducts + -0.1147507059349 * S_MntSweetProducts 
+ -0.66379351187459 * S_MntWines + 1.33407347415468 * S_NumCatalogPurchases + 1.00633891197299 
* S_NumDealsPurchases + -0.23920969262322 * S_NumStorePurchases + -0.6008837862932 * 
S_NumWebPurchases + 0.26759743722885 * S_NumWebVisitsMonth + -0.42755419464125 * S_Recency + 
-0.14471776361394 * S_Teenhome ;
1290013   +   H13  =    -0.19807308698832 * S_Income  +     0.25934675474849 * S_Kidhome
1290014   +          +     0.04398331533724 * S_MntFishProducts
1290015   +          +    -0.00090357598988 * S_MntFruits  +     0.05139545341773 *
1290016   +        S_MntGoldProds  +    -0.74617114336019 * S_MntMeatProducts
1290017   +          +     0.00552488718744 * S_MntSweetProducts
1290018   +          +     0.47194407197012 * S_MntWines  +    -0.35149551848487 *
1290019   +        S_NumCatalogPurchases  +    -0.30232522133093 * S_NumDealsPurchases
1290020   +          +     0.60058189155105 * S_NumStorePurchases
1290021   +          +     0.51423374855856 * S_NumWebPurchases
1290022   +          +     -0.9075304423321 * S_NumWebVisitsMonth
1290023   +          +     0.83597739226791 * S_Recency  +     0.15783202762709 *
1290024   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.19807308698832 * S_Income + 0.25934675474849 * S_Kidhome + 
0.04398331533724 * S_MntFishProducts + -0.00090357598988 * S_MntFruits + 0.05139545341773 * 
S_MntGoldProds + -0.74617114336019 * S_MntMeatProducts + 0.00552488718744 * S_MntSweetProducts 
+ 0.47194407197012 * S_MntWines + -0.35149551848487 * S_NumCatalogPurchases + 
-0.30232522133093 * S_NumDealsPurchases + 0.60058189155105 * S_NumStorePurchases + 
0.51423374855856 * S_NumWebPurchases + -0.9075304423321 * S_NumWebVisitsMonth + 
0.83597739226791 * S_Recency + 0.15783202762709 * S_Teenhome ;
1290025   +   H11  = H11  +    -0.26274045665457 * AcceptedCmp10
1290026   +          +    -0.86105702939371 * AcceptedCmp20  +    -0.50476270558977 *
1290027   +        AcceptedCmp30  +    -0.84284126473343 * AcceptedCmp40
1290028   +          +     0.19764907691314 * AcceptedCmp50  +    -0.29305577412263 *
1290029   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.26274045665457 * AcceptedCmp10 + -0.86105702939371 * 
AcceptedCmp20 + -0.50476270558977 * AcceptedCmp30 + -0.84284126473343 * AcceptedCmp40 + 
0.19764907691314 * AcceptedCmp50 + -0.29305577412263 * Complain0 ;
1290030   +   H12  = H12  +    -0.27394139847883 * AcceptedCmp10
1290031   +          +    -0.14688750266104 * AcceptedCmp20  +    -0.27982299242327 *
1290032   +        AcceptedCmp30  +    -0.10465140408787 * AcceptedCmp40
1290033   +          +    -0.81681330244218 * AcceptedCmp50  +    -0.28152730217644 *
1290034   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.27394139847883 * AcceptedCmp10 + -0.14688750266104 * 
AcceptedCmp20 + -0.27982299242327 * AcceptedCmp30 + -0.10465140408787 * AcceptedCmp40 + 
-0.81681330244218 * AcceptedCmp50 + -0.28152730217644 * Complain0 ;
1290035   +   H13  = H13  +     0.42310780831005 * AcceptedCmp10
1290036   +          +     0.41337614261155 * AcceptedCmp20  +     0.41436520641821 *
1290037   +        AcceptedCmp30  +     0.08914989208239 * AcceptedCmp40
1290038   +          +     0.54013759697695 * AcceptedCmp50  +    -0.19478210268955 *
1290039   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.42310780831005 * AcceptedCmp10 + 0.41337614261155 * 
AcceptedCmp20 + 0.41436520641821 * AcceptedCmp30 + 0.08914989208239 * AcceptedCmp40 + 
0.54013759697695 * AcceptedCmp50 + -0.19478210268955 * Complain0 ;
1290040   +   H11  = H11  +     0.40331200702699 * Education2n_Cycle
1290041   +          +     0.17202421641945 * EducationBasic  +    -0.29654161092174 *
1290042   +        EducationGraduation  +     -0.4835104183635 * EducationMaster
1290043   +          +     0.52129580188513 * Marital_StatusDivorced
1290044   +          +     -1.5224490339553 * Marital_StatusMarried
1290045   +          +     1.05062906057771 * Marital_StatusSingle
1290046   +          +    -1.16420887937635 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.40331200702699 * Education2n_Cycle + 0.17202421641945 * 
EducationBasic + -0.29654161092174 * EducationGraduation + -0.4835104183635 * EducationMaster 
+ 0.52129580188513 * Marital_StatusDivorced + -1.5224490339553 * Marital_StatusMarried + 
1.05062906057771 * Marital_StatusSingle + -1.16420887937635 * Marital_StatusTogether ;
1290047   +   H12  = H12  +     -0.3488928858263 * Education2n_Cycle
1290048   +          +     0.38279680594423 * EducationBasic  +     0.20376044836519 *
1290049   +        EducationGraduation  +     0.20697694670185 * EducationMaster
1290050   +          +    -0.14428158063317 * Marital_StatusDivorced
1290051   +          +     0.22396926143356 * Marital_StatusMarried
1290052   +          +    -0.12980854818876 * Marital_StatusSingle
1290053   +          +     0.32607015627906 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.3488928858263 * Education2n_Cycle + 0.38279680594423 * 
EducationBasic + 0.20376044836519 * EducationGraduation + 0.20697694670185 * EducationMaster + 
-0.14428158063317 * Marital_StatusDivorced + 0.22396926143356 * Marital_StatusMarried + 
-0.12980854818876 * Marital_StatusSingle + 0.32607015627906 * Marital_StatusTogether ;
1290054   +   H13  = H13  +    -0.18351418824199 * Education2n_Cycle
1290055   +          +     0.53417952447263 * EducationBasic  +    -0.14333929289628 *
1290056   +        EducationGraduation  +     0.04513004774082 * EducationMaster
1290057   +          +    -0.25615797303064 * Marital_StatusDivorced
1290058   +          +     0.18825506199046 * Marital_StatusMarried
1290059   +          +    -0.24607556819871 * Marital_StatusSingle
1290060   +          +     0.29531673844201 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.18351418824199 * Education2n_Cycle + 0.53417952447263 * 
EducationBasic + -0.14333929289628 * EducationGraduation + 0.04513004774082 * EducationMaster 
+ -0.25615797303064 * Marital_StatusDivorced + 0.18825506199046 * Marital_StatusMarried + 
-0.24607556819871 * Marital_StatusSingle + 0.29531673844201 * Marital_StatusTogether ;
1290061   +   H11  =    -1.29289362679377 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.29289362679377 + H11 ;
1290062   +   H12  =     0.88724419151235 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.88724419151235 + H12 ;
1290063   +   H13  =    -0.51194544699467 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.51194544699467 + H13 ;
1290064   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1290065   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1290066   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1290067   +END;
MPRINT(EM_DIAGRAM):   END;
1290068   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1290069   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1290070   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1290071   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1290072   +END;
MPRINT(EM_DIAGRAM):   END;
1290073   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1290074   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1290075   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1290076   +
1290077   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1290078   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1290079   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1290080   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1290081   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1290082   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1290083   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1290084   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1290085   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1290086   +end;
MPRINT(EM_DIAGRAM):   end;
1290087   +else do;
MPRINT(EM_DIAGRAM):   else do;
1290088   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1290089   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1290090   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1290091   +   end;
MPRINT(EM_DIAGRAM):   end;
1290092   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1290093   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1290094   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1290095   +   end;
MPRINT(EM_DIAGRAM):   end;
1290096   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1290097   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1290098   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1290099   +   end;
MPRINT(EM_DIAGRAM):   end;
1290100   +end;
MPRINT(EM_DIAGRAM):   end;
1290101   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1290102   +   P_DepVar1  =     4.44251020865882 * H11  +     2.67139161773156 * H12
1290103   +          +    -4.73549395111184 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.44251020865882 * H11 + 2.67139161773156 * H12 + 
-4.73549395111184 * H13 ;
1290104   +   P_DepVar1  =     0.45492690116644 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.45492690116644 + P_DepVar1 ;
1290105   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1290106   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1290107   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1290108   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1290109   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1290110   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1290111   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1290112   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1290113   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1290114   +END;
MPRINT(EM_DIAGRAM):   END;
1290115   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1290116   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1290117   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1290118   +END;
MPRINT(EM_DIAGRAM):   END;
1290119   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1290120   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1290121   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1290122   +END;
MPRINT(EM_DIAGRAM):   END;
1290123   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1290124   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1290125   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1290126   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1290127   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1290128   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1290129   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1290130   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1290131   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1290132   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1290133   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1290134   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1290135   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1290136   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1290137   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1290138   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1290139   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1290140   +END;
MPRINT(EM_DIAGRAM):   END;
1290141   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1290142   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1290143   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1290144   +drop
1290145   +H11
1290146   +H12
1290147   +H13
1290148   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1290149   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1290150   +* Renaming variables for Neural32;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural32;
1290151   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1290152   +* Renaming Posterior variables for Neural32;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural32;
1290153   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1290154   +drop Neural32_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural32_P_DepVar1;
1290155   +Neural32_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural32_P_DepVar1 = P_DepVar1;
1290156   +drop Neural32_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural32_P_DepVar0;
1290157   +Neural32_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural32_P_DepVar0 = P_DepVar0;
1290158   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1290159   +* Renaming _WARN_ variable for Neural32;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural32;
1290160   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1290161   +length Neural32_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural32_WARN_ $4;
1290162   +drop Neural32_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural32_WARN_;
1290163   +Neural32_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural32_WARN_ = _WARN_;
1290164   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1290165   +* Ensmbl22: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Scoring Code of model 3 of 7;
1290166   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1290167   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1290168   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1290169   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1290170   +* NODE: Neural33;
MPRINT(EM_DIAGRAM):   * NODE: Neural33;
1290171   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1290172   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1290173   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1290174   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1290175   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1290176   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1290177   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1290178   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1290179   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1290180   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1290181   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1290182   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1290183   +LENGTH _WARN_ $4
1290184   +      F_DepVar  $ 12
1290185   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1290186   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1290187   +
1290188   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1290189   +
1290190   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1290191   +
1290192   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1290193   +
1290194   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1290195   +
1290196   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1290197   +
1290198   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1290199   +
1290200   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1290201   +
1290202   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1290203   +
1290204   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1290205   +
1290206   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1290207   +
1290208   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1290209   +
1290210   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1290211   +
1290212   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1290213   +
1290214   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1290215   +
1290216   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1290217   +
1290218   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1290219   +
1290220   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1290221   +
1290222   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1290223   +
1290224   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1290225   +
1290226   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1290227   +
1290228   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1290229   +
1290230   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1290231   +
1290232   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1290233   +
1290234   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1290235   +
1290236   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1290237   +
1290238   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1290239   +
1290240   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1290241   +
1290242   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1290243   +
1290244   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1290245   +
1290246   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1290247   +
1290248   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1290249   +
1290250   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1290251   +
1290252   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1290253   +
1290254   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1290255   +
1290256   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1290257   +
1290258   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1290259   +
1290260   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1290261   +
1290262   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1290263   +
1290264   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1290265   +
1290266   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1290267   +
1290268   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1290269   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1290270   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1290271   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1290272   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1290273   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1290274   +end;
MPRINT(EM_DIAGRAM):   end;
1290275   +else do;
MPRINT(EM_DIAGRAM):   else do;
1290276   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1290277   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1290278   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1290279   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1290280   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1290281   +   end;
MPRINT(EM_DIAGRAM):   end;
1290282   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1290283   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1290284   +   end;
MPRINT(EM_DIAGRAM):   end;
1290285   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1290286   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1290287   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1290288   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1290289   +   end;
MPRINT(EM_DIAGRAM):   end;
1290290   +end;
MPRINT(EM_DIAGRAM):   end;
1290291   +
1290292   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1290293   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1290294   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1290295   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1290296   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1290297   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1290298   +end;
MPRINT(EM_DIAGRAM):   end;
1290299   +else do;
MPRINT(EM_DIAGRAM):   else do;
1290300   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1290301   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1290302   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1290303   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1290304   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1290305   +   end;
MPRINT(EM_DIAGRAM):   end;
1290306   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1290307   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1290308   +   end;
MPRINT(EM_DIAGRAM):   end;
1290309   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1290310   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1290311   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1290312   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1290313   +   end;
MPRINT(EM_DIAGRAM):   end;
1290314   +end;
MPRINT(EM_DIAGRAM):   end;
1290315   +
1290316   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1290317   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1290318   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1290319   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1290320   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1290321   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1290322   +end;
MPRINT(EM_DIAGRAM):   end;
1290323   +else do;
MPRINT(EM_DIAGRAM):   else do;
1290324   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1290325   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1290326   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1290327   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1290328   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1290329   +   end;
MPRINT(EM_DIAGRAM):   end;
1290330   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1290331   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1290332   +   end;
MPRINT(EM_DIAGRAM):   end;
1290333   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1290334   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1290335   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1290336   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1290337   +   end;
MPRINT(EM_DIAGRAM):   end;
1290338   +end;
MPRINT(EM_DIAGRAM):   end;
1290339   +
1290340   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1290341   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1290342   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1290343   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1290344   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1290345   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1290346   +end;
MPRINT(EM_DIAGRAM):   end;
1290347   +else do;
MPRINT(EM_DIAGRAM):   else do;
1290348   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1290349   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1290350   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1290351   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1290352   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1290353   +   end;
MPRINT(EM_DIAGRAM):   end;
1290354   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1290355   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1290356   +   end;
MPRINT(EM_DIAGRAM):   end;
1290357   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1290358   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1290359   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1290360   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1290361   +   end;
MPRINT(EM_DIAGRAM):   end;
1290362   +end;
MPRINT(EM_DIAGRAM):   end;
1290363   +
1290364   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1290365   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1290366   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1290367   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1290368   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1290369   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1290370   +end;
MPRINT(EM_DIAGRAM):   end;
1290371   +else do;
MPRINT(EM_DIAGRAM):   else do;
1290372   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1290373   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1290374   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1290375   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1290376   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1290377   +   end;
MPRINT(EM_DIAGRAM):   end;
1290378   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1290379   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1290380   +   end;
MPRINT(EM_DIAGRAM):   end;
1290381   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1290382   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1290383   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1290384   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1290385   +   end;
MPRINT(EM_DIAGRAM):   end;
1290386   +end;
MPRINT(EM_DIAGRAM):   end;
1290387   +
1290388   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1290389   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1290390   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1290391   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1290392   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1290393   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1290394   +end;
MPRINT(EM_DIAGRAM):   end;
1290395   +else do;
MPRINT(EM_DIAGRAM):   else do;
1290396   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1290397   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1290398   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1290399   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1290400   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1290401   +   end;
MPRINT(EM_DIAGRAM):   end;
1290402   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1290403   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1290404   +   end;
MPRINT(EM_DIAGRAM):   end;
1290405   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1290406   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1290407   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1290408   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1290409   +   end;
MPRINT(EM_DIAGRAM):   end;
1290410   +end;
MPRINT(EM_DIAGRAM):   end;
1290411   +
1290412   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1290413   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1290414   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1290415   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1290416   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1290417   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1290418   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1290419   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1290420   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1290421   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1290422   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1290423   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1290424   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1290425   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1290426   +end;
MPRINT(EM_DIAGRAM):   end;
1290427   +else do;
MPRINT(EM_DIAGRAM):   else do;
1290428   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1290429   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1290430   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1290431   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1290432   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1290433   +   end;
MPRINT(EM_DIAGRAM):   end;
1290434   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1290435   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1290436   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1290437   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1290438   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1290439   +   end;
MPRINT(EM_DIAGRAM):   end;
1290440   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1290441   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1290442   +   end;
MPRINT(EM_DIAGRAM):   end;
1290443   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1290444   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1290445   +   end;
MPRINT(EM_DIAGRAM):   end;
1290446   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1290447   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1290448   +   end;
MPRINT(EM_DIAGRAM):   end;
1290449   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1290450   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1290451   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1290452   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1290453   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1290454   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1290455   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1290456   +   end;
MPRINT(EM_DIAGRAM):   end;
1290457   +end;
MPRINT(EM_DIAGRAM):   end;
1290458   +
1290459   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1290460   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1290461   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1290462   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1290463   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1290464   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1290465   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1290466   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1290467   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1290468   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1290469   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1290470   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1290471   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1290472   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1290473   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1290474   +end;
MPRINT(EM_DIAGRAM):   end;
1290475   +else do;
MPRINT(EM_DIAGRAM):   else do;
1290476   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1290477   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1290478   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1290479   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1290480   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1290481   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1290482   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1290483   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1290484   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1290485   +         end;
MPRINT(EM_DIAGRAM):   end;
1290486   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1290487   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1290488   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1290489   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1290490   +            end;
MPRINT(EM_DIAGRAM):   end;
1290491   +         end;
MPRINT(EM_DIAGRAM):   end;
1290492   +      end;
MPRINT(EM_DIAGRAM):   end;
1290493   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1290494   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1290495   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1290496   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1290497   +         end;
MPRINT(EM_DIAGRAM):   end;
1290498   +      end;
MPRINT(EM_DIAGRAM):   end;
1290499   +   end;
MPRINT(EM_DIAGRAM):   end;
1290500   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1290501   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1290502   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1290503   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1290504   +      end;
MPRINT(EM_DIAGRAM):   end;
1290505   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1290506   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1290507   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1290508   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1290509   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1290510   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1290511   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1290512   +         end;
MPRINT(EM_DIAGRAM):   end;
1290513   +      end;
MPRINT(EM_DIAGRAM):   end;
1290514   +   end;
MPRINT(EM_DIAGRAM):   end;
1290515   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1290516   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1290517   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1290518   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1290519   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1290520   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1290521   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1290522   +   end;
MPRINT(EM_DIAGRAM):   end;
1290523   +end;
MPRINT(EM_DIAGRAM):   end;
1290524   +
1290525   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1290526   +*** Checking missing input Interval
1290527   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1290528   +
1290529   +IF NMISS(
1290530   +   Income ,
1290531   +   Kidhome ,
1290532   +   MntFishProducts ,
1290533   +   MntFruits ,
1290534   +   MntGoldProds ,
1290535   +   MntMeatProducts ,
1290536   +   MntSweetProducts ,
1290537   +   MntWines ,
1290538   +   NumCatalogPurchases ,
1290539   +   NumDealsPurchases ,
1290540   +   NumStorePurchases ,
1290541   +   NumWebPurchases ,
1290542   +   NumWebVisitsMonth ,
1290543   +   Recency ,
1290544   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
1290545   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1290546   +
1290547   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1290548   +END;
MPRINT(EM_DIAGRAM):   END;
1290549   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1290550   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1290551   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1290552   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1290553   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1290554   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1290555   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1290556   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1290557   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1290558   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1290559   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1290560   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1290561   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1290562   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1290563   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1290564   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1290565   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1290566   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1290567   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1290568   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1290569   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1290570   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1290571   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1290572   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1290573   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1290574   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1290575   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1290576   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1290577   +END;
MPRINT(EM_DIAGRAM):   END;
1290578   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1290579   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1290580   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1290581   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1290582   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1290583   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1290584   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1290585   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1290586   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1290587   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1290588   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1290589   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1290590   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1290591   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1290592   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1290593   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1290594   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1290595   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1290596   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1290597   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1290598   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1290599   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1290600   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1290601   +   ELSE S_NumCatalogPurchases
1290602   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1290603   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1290604   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1290605   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1290606   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1290607   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1290608   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1290609   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1290610   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1290611   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1290612   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1290613   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1290614   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1290615   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1290616   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1290617   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1290618   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1290619   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1290620   +END;
MPRINT(EM_DIAGRAM):   END;
1290621   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1290622   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1290623   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1290624   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1290625   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1290626   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1290627   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1290628   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1290629   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1290630   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1290631   +   H11  =     0.32435248899543 * S_Income  +    -0.47929849648429 * S_Kidhome
1290632   +          +     0.13364230231465 * S_MntFishProducts
1290633   +          +     -0.1386717864506 * S_MntFruits  +    -0.02769770185129 *
1290634   +        S_MntGoldProds  +    -0.29009812234724 * S_MntMeatProducts
1290635   +          +    -0.10871064476617 * S_MntSweetProducts
1290636   +          +     0.57858611197719 * S_MntWines  +    -0.26900817180555 *
1290637   +        S_NumCatalogPurchases  +    -0.39598523430317 * S_NumDealsPurchases
1290638   +          +     0.52835897625366 * S_NumStorePurchases
1290639   +          +     0.66297635444958 * S_NumWebPurchases
1290640   +          +    -0.31727971903608 * S_NumWebVisitsMonth
1290641   +          +     0.12789679291219 * S_Recency  +    -0.39270105014448 *
1290642   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.32435248899543 * S_Income + -0.47929849648429 * S_Kidhome + 
0.13364230231465 * S_MntFishProducts + -0.1386717864506 * S_MntFruits + -0.02769770185129 * 
S_MntGoldProds + -0.29009812234724 * S_MntMeatProducts + -0.10871064476617 * 
S_MntSweetProducts + 0.57858611197719 * S_MntWines + -0.26900817180555 * S_NumCatalogPurchases 
+ -0.39598523430317 * S_NumDealsPurchases + 0.52835897625366 * S_NumStorePurchases + 
0.66297635444958 * S_NumWebPurchases + -0.31727971903608 * S_NumWebVisitsMonth + 
0.12789679291219 * S_Recency + -0.39270105014448 * S_Teenhome ;
1290643   +   H12  =     0.37777254641249 * S_Income  +     0.79199857244438 * S_Kidhome
1290644   +          +     0.14748983783528 * S_MntFishProducts
1290645   +          +     0.14994032216514 * S_MntFruits  +     0.19147871752132 *
1290646   +        S_MntGoldProds  +     0.80535213270443 * S_MntMeatProducts
1290647   +          +     0.31095426478608 * S_MntSweetProducts
1290648   +          +     0.00471809437476 * S_MntWines  +     0.93716396534802 *
1290649   +        S_NumCatalogPurchases  +     0.86841248727948 * S_NumDealsPurchases
1290650   +          +     0.14387100066933 * S_NumStorePurchases
1290651   +          +    -0.01648998884133 * S_NumWebPurchases
1290652   +          +     -0.1378597161576 * S_NumWebVisitsMonth
1290653   +          +     0.15850653387379 * S_Recency  +     0.11714339614827 *
1290654   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.37777254641249 * S_Income + 0.79199857244438 * S_Kidhome + 
0.14748983783528 * S_MntFishProducts + 0.14994032216514 * S_MntFruits + 0.19147871752132 * 
S_MntGoldProds + 0.80535213270443 * S_MntMeatProducts + 0.31095426478608 * S_MntSweetProducts 
+ 0.00471809437476 * S_MntWines + 0.93716396534802 * S_NumCatalogPurchases + 0.86841248727948 
* S_NumDealsPurchases + 0.14387100066933 * S_NumStorePurchases + -0.01648998884133 * 
S_NumWebPurchases + -0.1378597161576 * S_NumWebVisitsMonth + 0.15850653387379 * S_Recency + 
0.11714339614827 * S_Teenhome ;
1290655   +   H13  =    -0.31490756773649 * S_Income  +      0.4776214738577 * S_Kidhome
1290656   +          +     0.00774185404534 * S_MntFishProducts
1290657   +          +     0.22292845341942 * S_MntFruits  +     0.11636422687317 *
1290658   +        S_MntGoldProds  +    -0.45522230281212 * S_MntMeatProducts
1290659   +          +     0.28728624268589 * S_MntSweetProducts
1290660   +          +     0.74892928025295 * S_MntWines  +     -0.4834082773325 *
1290661   +        S_NumCatalogPurchases  +    -0.05055717315946 * S_NumDealsPurchases
1290662   +          +     0.56446566213593 * S_NumStorePurchases
1290663   +          +     0.44547549135846 * S_NumWebPurchases
1290664   +          +    -1.17648505936662 * S_NumWebVisitsMonth
1290665   +          +     1.30076355226685 * S_Recency  +     0.56217939635691 *
1290666   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.31490756773649 * S_Income + 0.4776214738577 * S_Kidhome + 
0.00774185404534 * S_MntFishProducts + 0.22292845341942 * S_MntFruits + 0.11636422687317 * 
S_MntGoldProds + -0.45522230281212 * S_MntMeatProducts + 0.28728624268589 * S_MntSweetProducts 
+ 0.74892928025295 * S_MntWines + -0.4834082773325 * S_NumCatalogPurchases + -0.05055717315946 
* S_NumDealsPurchases + 0.56446566213593 * S_NumStorePurchases + 0.44547549135846 * 
S_NumWebPurchases + -1.17648505936662 * S_NumWebVisitsMonth + 1.30076355226685 * S_Recency + 
0.56217939635691 * S_Teenhome ;
1290667   +   H14  =    -0.40179905952719 * S_Income  +     0.16141565212918 * S_Kidhome
1290668   +          +     0.24665716882586 * S_MntFishProducts
1290669   +          +     0.03410629332469 * S_MntFruits  +     -0.1353295645077 *
1290670   +        S_MntGoldProds  +    -0.74661391150362 * S_MntMeatProducts
1290671   +          +    -0.10530818594736 * S_MntSweetProducts
1290672   +          +     0.30618479493194 * S_MntWines  +    -0.63426712804061 *
1290673   +        S_NumCatalogPurchases  +    -0.39486403699564 * S_NumDealsPurchases
1290674   +          +     0.36617016651032 * S_NumStorePurchases
1290675   +          +      0.3580014320946 * S_NumWebPurchases
1290676   +          +    -0.72597289213724 * S_NumWebVisitsMonth
1290677   +          +     0.93272927444012 * S_Recency  +     0.24531402677279 *
1290678   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.40179905952719 * S_Income + 0.16141565212918 * S_Kidhome + 
0.24665716882586 * S_MntFishProducts + 0.03410629332469 * S_MntFruits + -0.1353295645077 * 
S_MntGoldProds + -0.74661391150362 * S_MntMeatProducts + -0.10530818594736 * 
S_MntSweetProducts + 0.30618479493194 * S_MntWines + -0.63426712804061 * S_NumCatalogPurchases 
+ -0.39486403699564 * S_NumDealsPurchases + 0.36617016651032 * S_NumStorePurchases + 
0.3580014320946 * S_NumWebPurchases + -0.72597289213724 * S_NumWebVisitsMonth + 
0.93272927444012 * S_Recency + 0.24531402677279 * S_Teenhome ;
1290679   +   H11  = H11  +     0.10790306691381 * AcceptedCmp10
1290680   +          +     0.36067546675468 * AcceptedCmp20  +     0.56838342781466 *
1290681   +        AcceptedCmp30  +     0.10138997954661 * AcceptedCmp40
1290682   +          +     0.23809874960179 * AcceptedCmp50  +     0.42164522965364 *
1290683   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.10790306691381 * AcceptedCmp10 + 0.36067546675468 * 
AcceptedCmp20 + 0.56838342781466 * AcceptedCmp30 + 0.10138997954661 * AcceptedCmp40 + 
0.23809874960179 * AcceptedCmp50 + 0.42164522965364 * Complain0 ;
1290684   +   H12  = H12  +    -0.10342435301564 * AcceptedCmp10
1290685   +          +     -0.1021625473908 * AcceptedCmp20  +    -0.17400073301804 *
1290686   +        AcceptedCmp30  +      0.1295257925186 * AcceptedCmp40
1290687   +          +    -0.17149939617806 * AcceptedCmp50  +    -0.11843709761825 *
1290688   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.10342435301564 * AcceptedCmp10 + -0.1021625473908 * 
AcceptedCmp20 + -0.17400073301804 * AcceptedCmp30 + 0.1295257925186 * AcceptedCmp40 + 
-0.17149939617806 * AcceptedCmp50 + -0.11843709761825 * Complain0 ;
1290689   +   H13  = H13  +      0.3357459370893 * AcceptedCmp10
1290690   +          +      -0.142120215863 * AcceptedCmp20  +     0.74265608697316 *
1290691   +        AcceptedCmp30  +     0.62493796040954 * AcceptedCmp40
1290692   +          +     0.60033091776267 * AcceptedCmp50  +    -0.70537393421868 *
1290693   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.3357459370893 * AcceptedCmp10 + -0.142120215863 * 
AcceptedCmp20 + 0.74265608697316 * AcceptedCmp30 + 0.62493796040954 * AcceptedCmp40 + 
0.60033091776267 * AcceptedCmp50 + -0.70537393421868 * Complain0 ;
1290694   +   H14  = H14  +     0.52427760948235 * AcceptedCmp10
1290695   +          +     0.50852083885302 * AcceptedCmp20  +     0.30116257238429 *
1290696   +        AcceptedCmp30  +     0.31213749631365 * AcceptedCmp40
1290697   +          +     0.49344261660916 * AcceptedCmp50  +    -0.18226921500969 *
1290698   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.52427760948235 * AcceptedCmp10 + 0.50852083885302 * 
AcceptedCmp20 + 0.30116257238429 * AcceptedCmp30 + 0.31213749631365 * AcceptedCmp40 + 
0.49344261660916 * AcceptedCmp50 + -0.18226921500969 * Complain0 ;
1290699   +   H11  = H11  +     0.04284090874847 * Education2n_Cycle
1290700   +          +    -0.30425860762413 * EducationBasic  +    -0.44977960705402 *
1290701   +        EducationGraduation  +     -0.0712759822621 * EducationMaster
1290702   +          +     0.05171313818048 * Marital_StatusDivorced
1290703   +          +    -0.79112453157624 * Marital_StatusMarried
1290704   +          +     0.89650138723512 * Marital_StatusSingle
1290705   +          +    -0.22094240412913 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04284090874847 * Education2n_Cycle + -0.30425860762413 * 
EducationBasic + -0.44977960705402 * EducationGraduation + -0.0712759822621 * EducationMaster 
+ 0.05171313818048 * Marital_StatusDivorced + -0.79112453157624 * Marital_StatusMarried + 
0.89650138723512 * Marital_StatusSingle + -0.22094240412913 * Marital_StatusTogether ;
1290706   +   H12  = H12  +    -0.32431446530898 * Education2n_Cycle
1290707   +          +     0.04651949620543 * EducationBasic  +     0.50250608857106 *
1290708   +        EducationGraduation  +     0.00514401910219 * EducationMaster
1290709   +          +     0.05091092042416 * Marital_StatusDivorced
1290710   +          +     0.86642985712339 * Marital_StatusMarried
1290711   +          +    -0.14148832619997 * Marital_StatusSingle
1290712   +          +     0.54248977280079 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.32431446530898 * Education2n_Cycle + 0.04651949620543 * 
EducationBasic + 0.50250608857106 * EducationGraduation + 0.00514401910219 * EducationMaster + 
0.05091092042416 * Marital_StatusDivorced + 0.86642985712339 * Marital_StatusMarried + 
-0.14148832619997 * Marital_StatusSingle + 0.54248977280079 * Marital_StatusTogether ;
1290713   +   H13  = H13  +      0.0307333873684 * Education2n_Cycle
1290714   +          +     0.54778728297045 * EducationBasic  +    -0.56032296783121 *
1290715   +        EducationGraduation  +     0.26811389967146 * EducationMaster
1290716   +          +    -0.67787102917679 * Marital_StatusDivorced
1290717   +          +     1.38931504762816 * Marital_StatusMarried
1290718   +          +    -0.51164629287485 * Marital_StatusSingle
1290719   +          +     1.18856608313733 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.0307333873684 * Education2n_Cycle + 0.54778728297045 * 
EducationBasic + -0.56032296783121 * EducationGraduation + 0.26811389967146 * EducationMaster 
+ -0.67787102917679 * Marital_StatusDivorced + 1.38931504762816 * Marital_StatusMarried + 
-0.51164629287485 * Marital_StatusSingle + 1.18856608313733 * Marital_StatusTogether ;
1290720   +   H14  = H14  +    -0.07575289231798 * Education2n_Cycle
1290721   +          +     0.20678548929493 * EducationBasic  +     0.15952949579281 *
1290722   +        EducationGraduation  +    -0.08313247341922 * EducationMaster
1290723   +          +     0.12658153975639 * Marital_StatusDivorced
1290724   +          +     0.20111721742791 * Marital_StatusMarried
1290725   +          +     -0.3521524791648 * Marital_StatusSingle
1290726   +          +     0.24908846940254 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.07575289231798 * Education2n_Cycle + 0.20678548929493 * 
EducationBasic + 0.15952949579281 * EducationGraduation + -0.08313247341922 * EducationMaster 
+ 0.12658153975639 * Marital_StatusDivorced + 0.20111721742791 * Marital_StatusMarried + 
-0.3521524791648 * Marital_StatusSingle + 0.24908846940254 * Marital_StatusTogether ;
1290727   +   H11  =      0.8846003542153 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.8846003542153 + H11 ;
1290728   +   H12  =      1.7793661863354 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.7793661863354 + H12 ;
1290729   +   H13  =    -0.73914187312129 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.73914187312129 + H13 ;
1290730   +   H14  =    -0.28907220457418 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.28907220457418 + H14 ;
1290731   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1290732   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1290733   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1290734   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1290735   +END;
MPRINT(EM_DIAGRAM):   END;
1290736   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1290737   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1290738   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1290739   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1290740   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1290741   +END;
MPRINT(EM_DIAGRAM):   END;
1290742   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1290743   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1290744   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1290745   +
1290746   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1290747   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1290748   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1290749   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1290750   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1290751   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1290752   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1290753   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1290754   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1290755   +end;
MPRINT(EM_DIAGRAM):   end;
1290756   +else do;
MPRINT(EM_DIAGRAM):   else do;
1290757   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1290758   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1290759   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1290760   +   end;
MPRINT(EM_DIAGRAM):   end;
1290761   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1290762   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1290763   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1290764   +   end;
MPRINT(EM_DIAGRAM):   end;
1290765   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1290766   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1290767   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1290768   +   end;
MPRINT(EM_DIAGRAM):   end;
1290769   +end;
MPRINT(EM_DIAGRAM):   end;
1290770   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1290771   +   P_DepVar1  =    -1.84303414221873 * H11  +     1.56062653143645 * H12
1290772   +          +     -3.0630784922123 * H13  +    -4.55573659919551 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.84303414221873 * H11 + 1.56062653143645 * H12 + 
-3.0630784922123 * H13 + -4.55573659919551 * H14 ;
1290773   +   P_DepVar1  =    -1.51714888392638 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.51714888392638 + P_DepVar1 ;
1290774   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1290775   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1290776   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1290777   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1290778   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1290779   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1290780   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1290781   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1290782   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1290783   +END;
MPRINT(EM_DIAGRAM):   END;
1290784   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1290785   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1290786   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1290787   +END;
MPRINT(EM_DIAGRAM):   END;
1290788   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1290789   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1290790   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1290791   +END;
MPRINT(EM_DIAGRAM):   END;
1290792   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1290793   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1290794   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1290795   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1290796   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1290797   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1290798   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1290799   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1290800   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1290801   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1290802   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1290803   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1290804   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1290805   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1290806   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1290807   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1290808   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1290809   +END;
MPRINT(EM_DIAGRAM):   END;
1290810   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1290811   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1290812   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1290813   +drop
1290814   +H11
1290815   +H12
1290816   +H13
1290817   +H14
1290818   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1290819   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1290820   +* Renaming variables for Neural33;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural33;
1290821   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1290822   +* Renaming Posterior variables for Neural33;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural33;
1290823   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1290824   +drop Neural33_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural33_P_DepVar1;
1290825   +Neural33_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural33_P_DepVar1 = P_DepVar1;
1290826   +drop Neural33_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural33_P_DepVar0;
1290827   +Neural33_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural33_P_DepVar0 = P_DepVar0;
1290828   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1290829   +* Renaming _WARN_ variable for Neural33;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural33;
1290830   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1290831   +length Neural33_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural33_WARN_ $4;
1290832   +drop Neural33_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural33_WARN_;
1290833   +Neural33_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural33_WARN_ = _WARN_;
1290834   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1290835   +* Ensmbl22: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Scoring Code of model 4 of 7;
1290836   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1290837   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1290838   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1290839   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1290840   +* NODE: Neural34;
MPRINT(EM_DIAGRAM):   * NODE: Neural34;
1290841   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1290842   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1290843   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1290844   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1290845   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1290846   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1290847   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1290848   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1290849   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1290850   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1290851   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1290852   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1290853   +LENGTH _WARN_ $4
1290854   +      F_DepVar  $ 12
1290855   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1290856   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1290857   +
1290858   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1290859   +
1290860   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1290861   +
1290862   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1290863   +
1290864   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1290865   +
1290866   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1290867   +
1290868   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1290869   +
1290870   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1290871   +
1290872   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1290873   +
1290874   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1290875   +
1290876   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1290877   +
1290878   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1290879   +
1290880   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1290881   +
1290882   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1290883   +
1290884   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1290885   +
1290886   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1290887   +
1290888   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1290889   +
1290890   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1290891   +
1290892   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1290893   +
1290894   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1290895   +
1290896   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1290897   +
1290898   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1290899   +
1290900   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1290901   +
1290902   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1290903   +
1290904   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1290905   +
1290906   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1290907   +
1290908   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1290909   +
1290910   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1290911   +
1290912   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1290913   +
1290914   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1290915   +
1290916   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1290917   +
1290918   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1290919   +
1290920   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1290921   +
1290922   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1290923   +
1290924   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1290925   +
1290926   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1290927   +
1290928   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1290929   +
1290930   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1290931   +
1290932   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1290933   +
1290934   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1290935   +
1290936   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1290937   +
1290938   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1290939   +
1290940   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1290941   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1290942   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1290943   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1290944   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1290945   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1290946   +end;
MPRINT(EM_DIAGRAM):   end;
1290947   +else do;
MPRINT(EM_DIAGRAM):   else do;
1290948   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1290949   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1290950   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1290951   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1290952   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1290953   +   end;
MPRINT(EM_DIAGRAM):   end;
1290954   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1290955   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1290956   +   end;
MPRINT(EM_DIAGRAM):   end;
1290957   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1290958   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1290959   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1290960   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1290961   +   end;
MPRINT(EM_DIAGRAM):   end;
1290962   +end;
MPRINT(EM_DIAGRAM):   end;
1290963   +
1290964   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1290965   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1290966   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1290967   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1290968   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1290969   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1290970   +end;
MPRINT(EM_DIAGRAM):   end;
1290971   +else do;
MPRINT(EM_DIAGRAM):   else do;
1290972   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1290973   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1290974   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1290975   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1290976   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1290977   +   end;
MPRINT(EM_DIAGRAM):   end;
1290978   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1290979   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1290980   +   end;
MPRINT(EM_DIAGRAM):   end;
1290981   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1290982   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1290983   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1290984   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1290985   +   end;
MPRINT(EM_DIAGRAM):   end;
1290986   +end;
MPRINT(EM_DIAGRAM):   end;
1290987   +
1290988   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1290989   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1290990   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1290991   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1290992   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1290993   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1290994   +end;
MPRINT(EM_DIAGRAM):   end;
1290995   +else do;
MPRINT(EM_DIAGRAM):   else do;
1290996   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1290997   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1290998   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1290999   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1291000   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1291001   +   end;
MPRINT(EM_DIAGRAM):   end;
1291002   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1291003   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1291004   +   end;
MPRINT(EM_DIAGRAM):   end;
1291005   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1291006   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1291007   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1291008   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1291009   +   end;
MPRINT(EM_DIAGRAM):   end;
1291010   +end;
MPRINT(EM_DIAGRAM):   end;
1291011   +
1291012   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1291013   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1291014   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1291015   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1291016   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1291017   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1291018   +end;
MPRINT(EM_DIAGRAM):   end;
1291019   +else do;
MPRINT(EM_DIAGRAM):   else do;
1291020   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1291021   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1291022   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1291023   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1291024   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1291025   +   end;
MPRINT(EM_DIAGRAM):   end;
1291026   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1291027   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1291028   +   end;
MPRINT(EM_DIAGRAM):   end;
1291029   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1291030   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1291031   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1291032   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1291033   +   end;
MPRINT(EM_DIAGRAM):   end;
1291034   +end;
MPRINT(EM_DIAGRAM):   end;
1291035   +
1291036   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1291037   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1291038   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1291039   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1291040   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1291041   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1291042   +end;
MPRINT(EM_DIAGRAM):   end;
1291043   +else do;
MPRINT(EM_DIAGRAM):   else do;
1291044   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1291045   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1291046   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1291047   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1291048   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1291049   +   end;
MPRINT(EM_DIAGRAM):   end;
1291050   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1291051   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1291052   +   end;
MPRINT(EM_DIAGRAM):   end;
1291053   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1291054   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1291055   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1291056   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1291057   +   end;
MPRINT(EM_DIAGRAM):   end;
1291058   +end;
MPRINT(EM_DIAGRAM):   end;
1291059   +
1291060   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1291061   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1291062   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1291063   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1291064   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1291065   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1291066   +end;
MPRINT(EM_DIAGRAM):   end;
1291067   +else do;
MPRINT(EM_DIAGRAM):   else do;
1291068   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1291069   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1291070   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1291071   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1291072   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1291073   +   end;
MPRINT(EM_DIAGRAM):   end;
1291074   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1291075   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1291076   +   end;
MPRINT(EM_DIAGRAM):   end;
1291077   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1291078   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1291079   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1291080   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1291081   +   end;
MPRINT(EM_DIAGRAM):   end;
1291082   +end;
MPRINT(EM_DIAGRAM):   end;
1291083   +
1291084   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1291085   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1291086   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1291087   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1291088   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1291089   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1291090   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1291091   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1291092   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1291093   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1291094   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1291095   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1291096   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1291097   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1291098   +end;
MPRINT(EM_DIAGRAM):   end;
1291099   +else do;
MPRINT(EM_DIAGRAM):   else do;
1291100   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1291101   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1291102   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1291103   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1291104   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1291105   +   end;
MPRINT(EM_DIAGRAM):   end;
1291106   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1291107   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1291108   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1291109   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1291110   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1291111   +   end;
MPRINT(EM_DIAGRAM):   end;
1291112   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1291113   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1291114   +   end;
MPRINT(EM_DIAGRAM):   end;
1291115   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1291116   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1291117   +   end;
MPRINT(EM_DIAGRAM):   end;
1291118   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1291119   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1291120   +   end;
MPRINT(EM_DIAGRAM):   end;
1291121   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1291122   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1291123   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1291124   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1291125   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1291126   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1291127   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1291128   +   end;
MPRINT(EM_DIAGRAM):   end;
1291129   +end;
MPRINT(EM_DIAGRAM):   end;
1291130   +
1291131   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1291132   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1291133   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1291134   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1291135   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1291136   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1291137   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1291138   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1291139   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1291140   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1291141   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1291142   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1291143   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1291144   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1291145   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1291146   +end;
MPRINT(EM_DIAGRAM):   end;
1291147   +else do;
MPRINT(EM_DIAGRAM):   else do;
1291148   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1291149   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1291150   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1291151   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1291152   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1291153   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1291154   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1291155   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1291156   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1291157   +         end;
MPRINT(EM_DIAGRAM):   end;
1291158   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1291159   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1291160   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1291161   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1291162   +            end;
MPRINT(EM_DIAGRAM):   end;
1291163   +         end;
MPRINT(EM_DIAGRAM):   end;
1291164   +      end;
MPRINT(EM_DIAGRAM):   end;
1291165   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1291166   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1291167   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1291168   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1291169   +         end;
MPRINT(EM_DIAGRAM):   end;
1291170   +      end;
MPRINT(EM_DIAGRAM):   end;
1291171   +   end;
MPRINT(EM_DIAGRAM):   end;
1291172   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1291173   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1291174   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1291175   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1291176   +      end;
MPRINT(EM_DIAGRAM):   end;
1291177   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1291178   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1291179   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1291180   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1291181   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1291182   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1291183   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1291184   +         end;
MPRINT(EM_DIAGRAM):   end;
1291185   +      end;
MPRINT(EM_DIAGRAM):   end;
1291186   +   end;
MPRINT(EM_DIAGRAM):   end;
1291187   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1291188   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1291189   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1291190   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1291191   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1291192   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1291193   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1291194   +   end;
MPRINT(EM_DIAGRAM):   end;
1291195   +end;
MPRINT(EM_DIAGRAM):   end;
1291196   +
1291197   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1291198   +*** Checking missing input Interval
1291199   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1291200   +
1291201   +IF NMISS(
1291202   +   Income ,
1291203   +   Kidhome ,
1291204   +   MntFishProducts ,
1291205   +   MntFruits ,
1291206   +   MntGoldProds ,
1291207   +   MntMeatProducts ,
1291208   +   MntSweetProducts ,
1291209   +   MntWines ,
1291210   +   NumCatalogPurchases ,
1291211   +   NumDealsPurchases ,
1291212   +   NumStorePurchases ,
1291213   +   NumWebPurchases ,
1291214   +   NumWebVisitsMonth ,
1291215   +   Recency ,
1291216   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
1291217   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1291218   +
1291219   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1291220   +END;
MPRINT(EM_DIAGRAM):   END;
1291221   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1291222   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1291223   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1291224   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1291225   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1291226   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1291227   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1291228   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1291229   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1291230   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1291231   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1291232   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1291233   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1291234   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1291235   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1291236   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1291237   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1291238   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1291239   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1291240   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1291241   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1291242   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1291243   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1291244   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1291245   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1291246   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1291247   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1291248   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1291249   +END;
MPRINT(EM_DIAGRAM):   END;
1291250   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1291251   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1291252   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1291253   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1291254   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1291255   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1291256   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1291257   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1291258   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1291259   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1291260   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1291261   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1291262   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1291263   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1291264   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1291265   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1291266   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1291267   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1291268   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1291269   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1291270   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1291271   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1291272   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1291273   +   ELSE S_NumCatalogPurchases
1291274   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1291275   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1291276   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1291277   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1291278   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1291279   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1291280   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1291281   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1291282   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1291283   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1291284   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1291285   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1291286   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1291287   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1291288   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1291289   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1291290   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1291291   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1291292   +END;
MPRINT(EM_DIAGRAM):   END;
1291293   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1291294   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1291295   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1291296   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1291297   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1291298   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1291299   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1291300   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1291301   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1291302   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1291303   +   H11  =    -0.81572379016921 * S_Income  +    -0.07670946585348 * S_Kidhome
1291304   +          +     0.24367603598167 * S_MntFishProducts
1291305   +          +     0.19692980127348 * S_MntFruits  +    -0.03926738185333 *
1291306   +        S_MntGoldProds  +    -0.20900804333353 * S_MntMeatProducts
1291307   +          +     0.34054806441484 * S_MntSweetProducts
1291308   +          +     0.65956211369383 * S_MntWines  +    -0.95375334578522 *
1291309   +        S_NumCatalogPurchases  +    -0.73124740368567 * S_NumDealsPurchases
1291310   +          +     0.98942946974575 * S_NumStorePurchases
1291311   +          +     0.89701206630103 * S_NumWebPurchases
1291312   +          +    -1.22878611472154 * S_NumWebVisitsMonth
1291313   +          +     1.44981870978354 * S_Recency  +     0.47533125686411 *
1291314   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.81572379016921 * S_Income + -0.07670946585348 * S_Kidhome + 
0.24367603598167 * S_MntFishProducts + 0.19692980127348 * S_MntFruits + -0.03926738185333 * 
S_MntGoldProds + -0.20900804333353 * S_MntMeatProducts + 0.34054806441484 * S_MntSweetProducts 
+ 0.65956211369383 * S_MntWines + -0.95375334578522 * S_NumCatalogPurchases + 
-0.73124740368567 * S_NumDealsPurchases + 0.98942946974575 * S_NumStorePurchases + 
0.89701206630103 * S_NumWebPurchases + -1.22878611472154 * S_NumWebVisitsMonth + 
1.44981870978354 * S_Recency + 0.47533125686411 * S_Teenhome ;
1291315   +   H12  =    -0.18875145195495 * S_Income  +     0.42230998482453 * S_Kidhome
1291316   +          +     0.16683404689723 * S_MntFishProducts
1291317   +          +     0.32072658929401 * S_MntFruits  +    -0.12341748032201 *
1291318   +        S_MntGoldProds  +    -1.56478754527255 * S_MntMeatProducts
1291319   +          +     0.20389084548968 * S_MntSweetProducts
1291320   +          +     0.95592931625509 * S_MntWines  +    -0.69996817353755 *
1291321   +        S_NumCatalogPurchases  +    -0.92709806328697 * S_NumDealsPurchases
1291322   +          +     1.27164659640366 * S_NumStorePurchases
1291323   +          +     1.02122194207802 * S_NumWebPurchases
1291324   +          +     -1.5111033436803 * S_NumWebVisitsMonth
1291325   +          +     1.63712814901544 * S_Recency  +     0.14205116840572 *
1291326   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.18875145195495 * S_Income + 0.42230998482453 * S_Kidhome + 
0.16683404689723 * S_MntFishProducts + 0.32072658929401 * S_MntFruits + -0.12341748032201 * 
S_MntGoldProds + -1.56478754527255 * S_MntMeatProducts + 0.20389084548968 * S_MntSweetProducts 
+ 0.95592931625509 * S_MntWines + -0.69996817353755 * S_NumCatalogPurchases + 
-0.92709806328697 * S_NumDealsPurchases + 1.27164659640366 * S_NumStorePurchases + 
1.02122194207802 * S_NumWebPurchases + -1.5111033436803 * S_NumWebVisitsMonth + 
1.63712814901544 * S_Recency + 0.14205116840572 * S_Teenhome ;
1291327   +   H13  =     1.02798705354163 * S_Income  +    -0.94411708781921 * S_Kidhome
1291328   +          +    -0.03345077166544 * S_MntFishProducts
1291329   +          +     0.00038440809349 * S_MntFruits  +    -0.05068379715712 *
1291330   +        S_MntGoldProds  +     1.00464705307582 * S_MntMeatProducts
1291331   +          +    -0.11948662500951 * S_MntSweetProducts
1291332   +          +    -0.52438819731252 * S_MntWines  +     0.98586904866769 *
1291333   +        S_NumCatalogPurchases  +     0.09015295226839 * S_NumDealsPurchases
1291334   +          +     0.22401914357376 * S_NumStorePurchases
1291335   +          +     0.04219877865976 * S_NumWebPurchases
1291336   +          +     1.21753334166036 * S_NumWebVisitsMonth
1291337   +          +    -1.33712212110081 * S_Recency  +    -0.47582856683655 *
1291338   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 1.02798705354163 * S_Income + -0.94411708781921 * S_Kidhome + 
-0.03345077166544 * S_MntFishProducts + 0.00038440809349 * S_MntFruits + -0.05068379715712 * 
S_MntGoldProds + 1.00464705307582 * S_MntMeatProducts + -0.11948662500951 * S_MntSweetProducts 
+ -0.52438819731252 * S_MntWines + 0.98586904866769 * S_NumCatalogPurchases + 0.09015295226839 
* S_NumDealsPurchases + 0.22401914357376 * S_NumStorePurchases + 0.04219877865976 * 
S_NumWebPurchases + 1.21753334166036 * S_NumWebVisitsMonth + -1.33712212110081 * S_Recency + 
-0.47582856683655 * S_Teenhome ;
1291339   +   H14  =     0.91431429848834 * S_Income  +    -1.16289676557574 * S_Kidhome
1291340   +          +     0.31175257038578 * S_MntFishProducts
1291341   +          +     0.08080436076271 * S_MntFruits  +     0.15252288175851 *
1291342   +        S_MntGoldProds  +     0.21603546207654 * S_MntMeatProducts
1291343   +          +      0.0927253053382 * S_MntSweetProducts
1291344   +          +     0.05865323888304 * S_MntWines  +    -0.23426953728277 *
1291345   +        S_NumCatalogPurchases  +    -0.46451908614085 * S_NumDealsPurchases
1291346   +          +    -0.12667606349662 * S_NumStorePurchases
1291347   +          +     0.30148374518724 * S_NumWebPurchases
1291348   +          +     0.48934229701658 * S_NumWebVisitsMonth
1291349   +          +    -0.83754390793251 * S_Recency  +     -0.4576645462819 *
1291350   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.91431429848834 * S_Income + -1.16289676557574 * S_Kidhome + 
0.31175257038578 * S_MntFishProducts + 0.08080436076271 * S_MntFruits + 0.15252288175851 * 
S_MntGoldProds + 0.21603546207654 * S_MntMeatProducts + 0.0927253053382 * S_MntSweetProducts + 
0.05865323888304 * S_MntWines + -0.23426953728277 * S_NumCatalogPurchases + -0.46451908614085 
* S_NumDealsPurchases + -0.12667606349662 * S_NumStorePurchases + 0.30148374518724 * 
S_NumWebPurchases + 0.48934229701658 * S_NumWebVisitsMonth + -0.83754390793251 * S_Recency + 
-0.4576645462819 * S_Teenhome ;
1291351   +   H15  =    -0.58161501095664 * S_Income  +     -1.0333658128614 * S_Kidhome
1291352   +          +     0.42646725119177 * S_MntFishProducts
1291353   +          +     -0.3264621401658 * S_MntFruits  +    -0.74616728524532 *
1291354   +        S_MntGoldProds  +    -0.97572068716712 * S_MntMeatProducts
1291355   +          +    -0.01493605582616 * S_MntSweetProducts
1291356   +          +      0.0311636632685 * S_MntWines  +    -1.68599903767191 *
1291357   +        S_NumCatalogPurchases  +    -1.25052648798307 * S_NumDealsPurchases
1291358   +          +     0.54256744091258 * S_NumStorePurchases
1291359   +          +     0.43065931458468 * S_NumWebPurchases
1291360   +          +      0.5935561420466 * S_NumWebVisitsMonth
1291361   +          +    -0.45183418369624 * S_Recency  +     0.19260512629844 *
1291362   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.58161501095664 * S_Income + -1.0333658128614 * S_Kidhome + 
0.42646725119177 * S_MntFishProducts + -0.3264621401658 * S_MntFruits + -0.74616728524532 * 
S_MntGoldProds + -0.97572068716712 * S_MntMeatProducts + -0.01493605582616 * 
S_MntSweetProducts + 0.0311636632685 * S_MntWines + -1.68599903767191 * S_NumCatalogPurchases 
+ -1.25052648798307 * S_NumDealsPurchases + 0.54256744091258 * S_NumStorePurchases + 
0.43065931458468 * S_NumWebPurchases + 0.5935561420466 * S_NumWebVisitsMonth + 
-0.45183418369624 * S_Recency + 0.19260512629844 * S_Teenhome ;
1291363   +   H11  = H11  +     0.61503950219838 * AcceptedCmp10
1291364   +          +     0.02945207091619 * AcceptedCmp20  +     0.99151950769472 *
1291365   +        AcceptedCmp30  +     1.08987060401718 * AcceptedCmp40
1291366   +          +     0.45427753773024 * AcceptedCmp50  +    -1.03533951966815 *
1291367   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.61503950219838 * AcceptedCmp10 + 0.02945207091619 * 
AcceptedCmp20 + 0.99151950769472 * AcceptedCmp30 + 1.08987060401718 * AcceptedCmp40 + 
0.45427753773024 * AcceptedCmp50 + -1.03533951966815 * Complain0 ;
1291368   +   H12  = H12  +     0.83823476190401 * AcceptedCmp10
1291369   +          +      1.0793719601418 * AcceptedCmp20  +     0.68538854946581 *
1291370   +        AcceptedCmp30  +     1.00297565893339 * AcceptedCmp40
1291371   +          +     0.24586379991786 * AcceptedCmp50  +     0.15471251255301 *
1291372   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.83823476190401 * AcceptedCmp10 + 1.0793719601418 * 
AcceptedCmp20 + 0.68538854946581 * AcceptedCmp30 + 1.00297565893339 * AcceptedCmp40 + 
0.24586379991786 * AcceptedCmp50 + 0.15471251255301 * Complain0 ;
1291373   +   H13  = H13  +    -0.41486094438907 * AcceptedCmp10
1291374   +          +    -0.76586628449839 * AcceptedCmp20  +    -0.59695459523693 *
1291375   +        AcceptedCmp30  +    -0.30262159911837 * AcceptedCmp40
1291376   +          +    -0.61141171124182 * AcceptedCmp50  +    -0.01086235188835 *
1291377   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.41486094438907 * AcceptedCmp10 + -0.76586628449839 * 
AcceptedCmp20 + -0.59695459523693 * AcceptedCmp30 + -0.30262159911837 * AcceptedCmp40 + 
-0.61141171124182 * AcceptedCmp50 + -0.01086235188835 * Complain0 ;
1291378   +   H14  = H14  +    -0.09662858884082 * AcceptedCmp10
1291379   +          +    -0.48515652524171 * AcceptedCmp20  +    -0.37421451374399 *
1291380   +        AcceptedCmp30  +    -0.52889523891817 * AcceptedCmp40
1291381   +          +    -0.73518448275357 * AcceptedCmp50  +    -0.36065830718672 *
1291382   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.09662858884082 * AcceptedCmp10 + -0.48515652524171 * 
AcceptedCmp20 + -0.37421451374399 * AcceptedCmp30 + -0.52889523891817 * AcceptedCmp40 + 
-0.73518448275357 * AcceptedCmp50 + -0.36065830718672 * Complain0 ;
1291383   +   H15  = H15  +      0.2985143092641 * AcceptedCmp10
1291384   +          +    -0.06881934778393 * AcceptedCmp20  +    -0.02609197044604 *
1291385   +        AcceptedCmp30  +    -0.79105657447885 * AcceptedCmp40
1291386   +          +    -0.02286855144948 * AcceptedCmp50  +     0.02884650192784 *
1291387   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.2985143092641 * AcceptedCmp10 + -0.06881934778393 * 
AcceptedCmp20 + -0.02609197044604 * AcceptedCmp30 + -0.79105657447885 * AcceptedCmp40 + 
-0.02286855144948 * AcceptedCmp50 + 0.02884650192784 * Complain0 ;
1291388   +   H11  = H11  +    -0.41169946146301 * Education2n_Cycle
1291389   +          +      0.8448273504441 * EducationBasic  +    -1.02497956377347 *
1291390   +        EducationGraduation  +     0.43998321745211 * EducationMaster
1291391   +          +    -0.85912688909911 * Marital_StatusDivorced
1291392   +          +     0.81561401465875 * Marital_StatusMarried
1291393   +          +    -0.58324403081542 * Marital_StatusSingle
1291394   +          +      0.9348017085106 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.41169946146301 * Education2n_Cycle + 0.8448273504441 * 
EducationBasic + -1.02497956377347 * EducationGraduation + 0.43998321745211 * EducationMaster 
+ -0.85912688909911 * Marital_StatusDivorced + 0.81561401465875 * Marital_StatusMarried + 
-0.58324403081542 * Marital_StatusSingle + 0.9348017085106 * Marital_StatusTogether ;
1291395   +   H12  = H12  +     0.22828129841893 * Education2n_Cycle
1291396   +          +     0.47579227804033 * EducationBasic  +    -0.18165301263195 *
1291397   +        EducationGraduation  +    -0.16143431016405 * EducationMaster
1291398   +          +    -0.34784695867287 * Marital_StatusDivorced
1291399   +          +    -0.18194022182247 * Marital_StatusMarried
1291400   +          +    -0.10633185904164 * Marital_StatusSingle
1291401   +          +     0.13136125361628 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.22828129841893 * Education2n_Cycle + 0.47579227804033 * 
EducationBasic + -0.18165301263195 * EducationGraduation + -0.16143431016405 * EducationMaster 
+ -0.34784695867287 * Marital_StatusDivorced + -0.18194022182247 * Marital_StatusMarried + 
-0.10633185904164 * Marital_StatusSingle + 0.13136125361628 * Marital_StatusTogether ;
1291402   +   H13  = H13  +     0.38705901043652 * Education2n_Cycle
1291403   +          +     0.19703188370189 * EducationBasic  +    -0.48062640599976 *
1291404   +        EducationGraduation  +     -0.3646621736273 * EducationMaster
1291405   +          +     0.61058752124466 * Marital_StatusDivorced
1291406   +          +    -1.38793808025141 * Marital_StatusMarried
1291407   +          +     1.10060737810944 * Marital_StatusSingle
1291408   +          +    -1.21250219018366 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.38705901043652 * Education2n_Cycle + 0.19703188370189 * 
EducationBasic + -0.48062640599976 * EducationGraduation + -0.3646621736273 * EducationMaster 
+ 0.61058752124466 * Marital_StatusDivorced + -1.38793808025141 * Marital_StatusMarried + 
1.10060737810944 * Marital_StatusSingle + -1.21250219018366 * Marital_StatusTogether ;
1291409   +   H14  = H14  +    -0.20576658115662 * Education2n_Cycle
1291410   +          +    -0.09185472034614 * EducationBasic  +    -0.43674210064447 *
1291411   +        EducationGraduation  +    -0.18154054746298 * EducationMaster
1291412   +          +     0.11973800573581 * Marital_StatusDivorced
1291413   +          +      -0.294635257911 * Marital_StatusMarried
1291414   +          +    -0.05399659601172 * Marital_StatusSingle
1291415   +          +     0.34207780606239 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.20576658115662 * Education2n_Cycle + -0.09185472034614 * 
EducationBasic + -0.43674210064447 * EducationGraduation + -0.18154054746298 * EducationMaster 
+ 0.11973800573581 * Marital_StatusDivorced + -0.294635257911 * Marital_StatusMarried + 
-0.05399659601172 * Marital_StatusSingle + 0.34207780606239 * Marital_StatusTogether ;
1291416   +   H15  = H15  +    -0.05553093684862 * Education2n_Cycle
1291417   +          +    -0.12898006732329 * EducationBasic  +    -0.16064118923518 *
1291418   +        EducationGraduation  +     -0.6431539624694 * EducationMaster
1291419   +          +     0.42838191659864 * Marital_StatusDivorced
1291420   +          +    -0.09150349181363 * Marital_StatusMarried
1291421   +          +    -0.33520164145276 * Marital_StatusSingle
1291422   +          +    -0.15253738713197 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.05553093684862 * Education2n_Cycle + -0.12898006732329 * 
EducationBasic + -0.16064118923518 * EducationGraduation + -0.6431539624694 * EducationMaster 
+ 0.42838191659864 * Marital_StatusDivorced + -0.09150349181363 * Marital_StatusMarried + 
-0.33520164145276 * Marital_StatusSingle + -0.15253738713197 * Marital_StatusTogether ;
1291423   +   H11  =     -1.5079478405973 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.5079478405973 + H11 ;
1291424   +   H12  =     0.03014958331993 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.03014958331993 + H12 ;
1291425   +   H13  =    -1.78098671165572 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.78098671165572 + H13 ;
1291426   +   H14  =     0.22179429743277 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.22179429743277 + H14 ;
1291427   +   H15  =    -2.06602107857898 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -2.06602107857898 + H15 ;
1291428   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1291429   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1291430   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1291431   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1291432   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1291433   +END;
MPRINT(EM_DIAGRAM):   END;
1291434   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1291435   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1291436   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1291437   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1291438   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1291439   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1291440   +END;
MPRINT(EM_DIAGRAM):   END;
1291441   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1291442   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1291443   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1291444   +
1291445   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1291446   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1291447   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1291448   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1291449   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1291450   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1291451   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1291452   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1291453   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1291454   +end;
MPRINT(EM_DIAGRAM):   end;
1291455   +else do;
MPRINT(EM_DIAGRAM):   else do;
1291456   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1291457   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1291458   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1291459   +   end;
MPRINT(EM_DIAGRAM):   end;
1291460   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1291461   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1291462   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1291463   +   end;
MPRINT(EM_DIAGRAM):   end;
1291464   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1291465   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1291466   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1291467   +   end;
MPRINT(EM_DIAGRAM):   end;
1291468   +end;
MPRINT(EM_DIAGRAM):   end;
1291469   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1291470   +   P_DepVar1  =    -4.55666337815854 * H11  +    -4.04792544554995 * H12
1291471   +          +     4.56148127429284 * H13  +     2.36841344452371 * H14
1291472   +          +    -3.07371010011749 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.55666337815854 * H11 + -4.04792544554995 * H12 + 
4.56148127429284 * H13 + 2.36841344452371 * H14 + -3.07371010011749 * H15 ;
1291473   +   P_DepVar1  =    -0.83283406236136 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.83283406236136 + P_DepVar1 ;
1291474   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1291475   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1291476   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1291477   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1291478   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1291479   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1291480   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1291481   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1291482   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1291483   +END;
MPRINT(EM_DIAGRAM):   END;
1291484   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1291485   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1291486   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1291487   +END;
MPRINT(EM_DIAGRAM):   END;
1291488   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1291489   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1291490   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1291491   +END;
MPRINT(EM_DIAGRAM):   END;
1291492   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1291493   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1291494   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1291495   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1291496   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1291497   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1291498   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1291499   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1291500   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1291501   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1291502   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1291503   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1291504   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1291505   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1291506   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1291507   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1291508   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1291509   +END;
MPRINT(EM_DIAGRAM):   END;
1291510   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1291511   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1291512   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1291513   +drop
1291514   +H11
1291515   +H12
1291516   +H13
1291517   +H14
1291518   +H15
1291519   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
1291520   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1291521   +* Renaming variables for Neural34;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural34;
1291522   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1291523   +* Renaming Posterior variables for Neural34;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural34;
1291524   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1291525   +drop Neural34_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural34_P_DepVar1;
1291526   +Neural34_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural34_P_DepVar1 = P_DepVar1;
1291527   +drop Neural34_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural34_P_DepVar0;
1291528   +Neural34_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural34_P_DepVar0 = P_DepVar0;
1291529   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1291530   +* Renaming _WARN_ variable for Neural34;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural34;
1291531   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1291532   +length Neural34_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural34_WARN_ $4;
1291533   +drop Neural34_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural34_WARN_;
1291534   +Neural34_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural34_WARN_ = _WARN_;
1291535   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1291536   +* Ensmbl22: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Scoring Code of model 5 of 7;
1291537   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1291538   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1291539   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1291540   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1291541   +* NODE: Neural35;
MPRINT(EM_DIAGRAM):   * NODE: Neural35;
1291542   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1291543   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1291544   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1291545   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1291546   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1291547   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1291548   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1291549   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1291550   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1291551   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1291552   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1291553   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1291554   +LENGTH _WARN_ $4
1291555   +      F_DepVar  $ 12
1291556   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1291557   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1291558   +
1291559   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1291560   +
1291561   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1291562   +
1291563   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1291564   +
1291565   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1291566   +
1291567   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1291568   +
1291569   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1291570   +
1291571   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1291572   +
1291573   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1291574   +
1291575   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1291576   +
1291577   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1291578   +
1291579   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1291580   +
1291581   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1291582   +
1291583   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1291584   +
1291585   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1291586   +
1291587   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1291588   +
1291589   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1291590   +
1291591   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1291592   +
1291593   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1291594   +
1291595   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1291596   +
1291597   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1291598   +
1291599   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1291600   +
1291601   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1291602   +
1291603   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1291604   +
1291605   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1291606   +
1291607   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1291608   +
1291609   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1291610   +
1291611   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1291612   +
1291613   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1291614   +
1291615   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1291616   +
1291617   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1291618   +
1291619   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1291620   +
1291621   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1291622   +
1291623   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1291624   +
1291625   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1291626   +
1291627   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1291628   +
1291629   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1291630   +
1291631   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1291632   +
1291633   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1291634   +
1291635   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1291636   +
1291637   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1291638   +
1291639   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1291640   +
1291641   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1291642   +
1291643   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1291644   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1291645   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1291646   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1291647   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1291648   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1291649   +end;
MPRINT(EM_DIAGRAM):   end;
1291650   +else do;
MPRINT(EM_DIAGRAM):   else do;
1291651   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1291652   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1291653   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1291654   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1291655   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1291656   +   end;
MPRINT(EM_DIAGRAM):   end;
1291657   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1291658   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1291659   +   end;
MPRINT(EM_DIAGRAM):   end;
1291660   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1291661   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1291662   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1291663   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1291664   +   end;
MPRINT(EM_DIAGRAM):   end;
1291665   +end;
MPRINT(EM_DIAGRAM):   end;
1291666   +
1291667   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1291668   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1291669   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1291670   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1291671   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1291672   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1291673   +end;
MPRINT(EM_DIAGRAM):   end;
1291674   +else do;
MPRINT(EM_DIAGRAM):   else do;
1291675   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1291676   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1291677   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1291678   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1291679   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1291680   +   end;
MPRINT(EM_DIAGRAM):   end;
1291681   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1291682   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1291683   +   end;
MPRINT(EM_DIAGRAM):   end;
1291684   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1291685   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1291686   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1291687   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1291688   +   end;
MPRINT(EM_DIAGRAM):   end;
1291689   +end;
MPRINT(EM_DIAGRAM):   end;
1291690   +
1291691   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1291692   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1291693   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1291694   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1291695   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1291696   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1291697   +end;
MPRINT(EM_DIAGRAM):   end;
1291698   +else do;
MPRINT(EM_DIAGRAM):   else do;
1291699   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1291700   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1291701   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1291702   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1291703   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1291704   +   end;
MPRINT(EM_DIAGRAM):   end;
1291705   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1291706   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1291707   +   end;
MPRINT(EM_DIAGRAM):   end;
1291708   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1291709   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1291710   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1291711   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1291712   +   end;
MPRINT(EM_DIAGRAM):   end;
1291713   +end;
MPRINT(EM_DIAGRAM):   end;
1291714   +
1291715   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1291716   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1291717   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1291718   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1291719   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1291720   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1291721   +end;
MPRINT(EM_DIAGRAM):   end;
1291722   +else do;
MPRINT(EM_DIAGRAM):   else do;
1291723   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1291724   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1291725   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1291726   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1291727   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1291728   +   end;
MPRINT(EM_DIAGRAM):   end;
1291729   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1291730   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1291731   +   end;
MPRINT(EM_DIAGRAM):   end;
1291732   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1291733   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1291734   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1291735   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1291736   +   end;
MPRINT(EM_DIAGRAM):   end;
1291737   +end;
MPRINT(EM_DIAGRAM):   end;
1291738   +
1291739   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1291740   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1291741   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1291742   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1291743   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1291744   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1291745   +end;
MPRINT(EM_DIAGRAM):   end;
1291746   +else do;
MPRINT(EM_DIAGRAM):   else do;
1291747   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1291748   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1291749   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1291750   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1291751   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1291752   +   end;
MPRINT(EM_DIAGRAM):   end;
1291753   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1291754   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1291755   +   end;
MPRINT(EM_DIAGRAM):   end;
1291756   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1291757   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1291758   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1291759   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1291760   +   end;
MPRINT(EM_DIAGRAM):   end;
1291761   +end;
MPRINT(EM_DIAGRAM):   end;
1291762   +
1291763   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1291764   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1291765   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1291766   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1291767   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1291768   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1291769   +end;
MPRINT(EM_DIAGRAM):   end;
1291770   +else do;
MPRINT(EM_DIAGRAM):   else do;
1291771   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1291772   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1291773   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1291774   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1291775   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1291776   +   end;
MPRINT(EM_DIAGRAM):   end;
1291777   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1291778   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1291779   +   end;
MPRINT(EM_DIAGRAM):   end;
1291780   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1291781   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1291782   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1291783   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1291784   +   end;
MPRINT(EM_DIAGRAM):   end;
1291785   +end;
MPRINT(EM_DIAGRAM):   end;
1291786   +
1291787   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1291788   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1291789   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1291790   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1291791   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1291792   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1291793   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1291794   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1291795   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1291796   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1291797   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1291798   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1291799   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1291800   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1291801   +end;
MPRINT(EM_DIAGRAM):   end;
1291802   +else do;
MPRINT(EM_DIAGRAM):   else do;
1291803   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1291804   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1291805   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1291806   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1291807   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1291808   +   end;
MPRINT(EM_DIAGRAM):   end;
1291809   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1291810   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1291811   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1291812   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1291813   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1291814   +   end;
MPRINT(EM_DIAGRAM):   end;
1291815   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1291816   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1291817   +   end;
MPRINT(EM_DIAGRAM):   end;
1291818   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1291819   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1291820   +   end;
MPRINT(EM_DIAGRAM):   end;
1291821   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1291822   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1291823   +   end;
MPRINT(EM_DIAGRAM):   end;
1291824   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1291825   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1291826   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1291827   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1291828   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1291829   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1291830   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1291831   +   end;
MPRINT(EM_DIAGRAM):   end;
1291832   +end;
MPRINT(EM_DIAGRAM):   end;
1291833   +
1291834   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1291835   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1291836   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1291837   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1291838   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1291839   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1291840   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1291841   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1291842   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1291843   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1291844   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1291845   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1291846   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1291847   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1291848   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1291849   +end;
MPRINT(EM_DIAGRAM):   end;
1291850   +else do;
MPRINT(EM_DIAGRAM):   else do;
1291851   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1291852   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1291853   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1291854   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1291855   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1291856   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1291857   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1291858   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1291859   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1291860   +         end;
MPRINT(EM_DIAGRAM):   end;
1291861   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1291862   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1291863   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1291864   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1291865   +            end;
MPRINT(EM_DIAGRAM):   end;
1291866   +         end;
MPRINT(EM_DIAGRAM):   end;
1291867   +      end;
MPRINT(EM_DIAGRAM):   end;
1291868   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1291869   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1291870   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1291871   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1291872   +         end;
MPRINT(EM_DIAGRAM):   end;
1291873   +      end;
MPRINT(EM_DIAGRAM):   end;
1291874   +   end;
MPRINT(EM_DIAGRAM):   end;
1291875   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1291876   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1291877   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1291878   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1291879   +      end;
MPRINT(EM_DIAGRAM):   end;
1291880   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1291881   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1291882   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1291883   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1291884   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1291885   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1291886   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1291887   +         end;
MPRINT(EM_DIAGRAM):   end;
1291888   +      end;
MPRINT(EM_DIAGRAM):   end;
1291889   +   end;
MPRINT(EM_DIAGRAM):   end;
1291890   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1291891   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1291892   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1291893   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1291894   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1291895   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1291896   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1291897   +   end;
MPRINT(EM_DIAGRAM):   end;
1291898   +end;
MPRINT(EM_DIAGRAM):   end;
1291899   +
1291900   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1291901   +*** Checking missing input Interval
1291902   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1291903   +
1291904   +IF NMISS(
1291905   +   Income ,
1291906   +   Kidhome ,
1291907   +   MntFishProducts ,
1291908   +   MntFruits ,
1291909   +   MntGoldProds ,
1291910   +   MntMeatProducts ,
1291911   +   MntSweetProducts ,
1291912   +   MntWines ,
1291913   +   NumCatalogPurchases ,
1291914   +   NumDealsPurchases ,
1291915   +   NumStorePurchases ,
1291916   +   NumWebPurchases ,
1291917   +   NumWebVisitsMonth ,
1291918   +   Recency ,
1291919   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
1291920   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1291921   +
1291922   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1291923   +END;
MPRINT(EM_DIAGRAM):   END;
1291924   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1291925   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1291926   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1291927   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1291928   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1291929   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1291930   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1291931   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1291932   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1291933   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1291934   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1291935   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1291936   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1291937   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1291938   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1291939   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1291940   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1291941   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1291942   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1291943   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1291944   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1291945   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1291946   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1291947   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1291948   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1291949   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1291950   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1291951   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1291952   +END;
MPRINT(EM_DIAGRAM):   END;
1291953   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1291954   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1291955   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1291956   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1291957   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1291958   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1291959   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1291960   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1291961   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1291962   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1291963   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1291964   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1291965   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1291966   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1291967   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1291968   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1291969   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1291970   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1291971   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1291972   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1291973   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1291974   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1291975   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1291976   +   ELSE S_NumCatalogPurchases
1291977   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1291978   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1291979   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1291980   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1291981   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1291982   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1291983   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1291984   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1291985   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1291986   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1291987   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1291988   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1291989   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1291990   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1291991   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1291992   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1291993   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1291994   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1291995   +END;
MPRINT(EM_DIAGRAM):   END;
1291996   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1291997   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1291998   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1291999   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1292000   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1292001   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1292002   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1292003   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1292004   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1292005   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1292006   +   H11  =     0.87660114046125 * S_Income  +     -0.7994451897827 * S_Kidhome
1292007   +          +    -0.08967295716195 * S_MntFishProducts
1292008   +          +     0.03184635437516 * S_MntFruits  +    -0.13860895575438 *
1292009   +        S_MntGoldProds  +     0.55790460748169 * S_MntMeatProducts
1292010   +          +    -0.02806094557115 * S_MntSweetProducts
1292011   +          +    -0.14537763592724 * S_MntWines  +     0.76891266523847 *
1292012   +        S_NumCatalogPurchases  +     0.16842007461305 * S_NumDealsPurchases
1292013   +          +     0.25137876058262 * S_NumStorePurchases
1292014   +          +    -0.07865442401292 * S_NumWebPurchases
1292015   +          +     1.03197398967259 * S_NumWebVisitsMonth
1292016   +          +    -1.26907156503759 * S_Recency  +    -0.76016893316351 *
1292017   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.87660114046125 * S_Income + -0.7994451897827 * S_Kidhome + 
-0.08967295716195 * S_MntFishProducts + 0.03184635437516 * S_MntFruits + -0.13860895575438 * 
S_MntGoldProds + 0.55790460748169 * S_MntMeatProducts + -0.02806094557115 * S_MntSweetProducts 
+ -0.14537763592724 * S_MntWines + 0.76891266523847 * S_NumCatalogPurchases + 0.16842007461305 
* S_NumDealsPurchases + 0.25137876058262 * S_NumStorePurchases + -0.07865442401292 * 
S_NumWebPurchases + 1.03197398967259 * S_NumWebVisitsMonth + -1.26907156503759 * S_Recency + 
-0.76016893316351 * S_Teenhome ;
1292018   +   H12  =     0.37295000114468 * S_Income  +    -0.12834211496575 * S_Kidhome
1292019   +          +     0.19312392388912 * S_MntFishProducts
1292020   +          +      0.1561688289137 * S_MntFruits  +     0.04004810938796 *
1292021   +        S_MntGoldProds  +     0.32599201739588 * S_MntMeatProducts
1292022   +          +       0.204174263605 * S_MntSweetProducts
1292023   +          +    -0.11560784817014 * S_MntWines  +     0.12255073568725 *
1292024   +        S_NumCatalogPurchases  +    -0.05543734180218 * S_NumDealsPurchases
1292025   +          +     0.07747830335769 * S_NumStorePurchases
1292026   +          +     0.07960837555191 * S_NumWebPurchases
1292027   +          +     0.02351602389122 * S_NumWebVisitsMonth
1292028   +          +     -0.2840853952427 * S_Recency  +    -0.47421627761687 *
1292029   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.37295000114468 * S_Income + -0.12834211496575 * S_Kidhome + 
0.19312392388912 * S_MntFishProducts + 0.1561688289137 * S_MntFruits + 0.04004810938796 * 
S_MntGoldProds + 0.32599201739588 * S_MntMeatProducts + 0.204174263605 * S_MntSweetProducts + 
-0.11560784817014 * S_MntWines + 0.12255073568725 * S_NumCatalogPurchases + -0.05543734180218 
* S_NumDealsPurchases + 0.07747830335769 * S_NumStorePurchases + 0.07960837555191 * 
S_NumWebPurchases + 0.02351602389122 * S_NumWebVisitsMonth + -0.2840853952427 * S_Recency + 
-0.47421627761687 * S_Teenhome ;
1292030   +   H13  =    -0.33428925248315 * S_Income  +    -0.03845622730742 * S_Kidhome
1292031   +          +     0.18733919794636 * S_MntFishProducts
1292032   +          +     0.45907982190052 * S_MntFruits  +    -0.48776616433719 *
1292033   +        S_MntGoldProds  +    -0.41340481007204 * S_MntMeatProducts
1292034   +          +     0.42514606159239 * S_MntSweetProducts
1292035   +          +     0.20038001368787 * S_MntWines  +    -1.21708501803782 *
1292036   +        S_NumCatalogPurchases  +    -1.06820061274533 * S_NumDealsPurchases
1292037   +          +     0.36582106462789 * S_NumStorePurchases
1292038   +          +     0.04244777020435 * S_NumWebPurchases
1292039   +          +    -0.24296342902503 * S_NumWebVisitsMonth
1292040   +          +     0.27451716762947 * S_Recency  +     0.13110477325277 *
1292041   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.33428925248315 * S_Income + -0.03845622730742 * S_Kidhome + 
0.18733919794636 * S_MntFishProducts + 0.45907982190052 * S_MntFruits + -0.48776616433719 * 
S_MntGoldProds + -0.41340481007204 * S_MntMeatProducts + 0.42514606159239 * S_MntSweetProducts 
+ 0.20038001368787 * S_MntWines + -1.21708501803782 * S_NumCatalogPurchases + 
-1.06820061274533 * S_NumDealsPurchases + 0.36582106462789 * S_NumStorePurchases + 
0.04244777020435 * S_NumWebPurchases + -0.24296342902503 * S_NumWebVisitsMonth + 
0.27451716762947 * S_Recency + 0.13110477325277 * S_Teenhome ;
1292042   +   H14  =    -0.70493412542585 * S_Income  +     0.41202796606799 * S_Kidhome
1292043   +          +     0.05986489897572 * S_MntFishProducts
1292044   +          +    -0.05040531715469 * S_MntFruits  +       0.051068387592 *
1292045   +        S_MntGoldProds  +    -0.13581881662481 * S_MntMeatProducts
1292046   +          +    -0.05513370461072 * S_MntSweetProducts
1292047   +          +     0.77472084468819 * S_MntWines  +    -0.03211788969126 *
1292048   +        S_NumCatalogPurchases  +    -0.24097486430988 * S_NumDealsPurchases
1292049   +          +     0.64364674828841 * S_NumStorePurchases
1292050   +          +     0.15084748708424 * S_NumWebPurchases
1292051   +          +    -0.94144998356377 * S_NumWebVisitsMonth
1292052   +          +     1.16778338364599 * S_Recency  +     0.32089861635238 *
1292053   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.70493412542585 * S_Income + 0.41202796606799 * S_Kidhome + 
0.05986489897572 * S_MntFishProducts + -0.05040531715469 * S_MntFruits + 0.051068387592 * 
S_MntGoldProds + -0.13581881662481 * S_MntMeatProducts + -0.05513370461072 * 
S_MntSweetProducts + 0.77472084468819 * S_MntWines + -0.03211788969126 * S_NumCatalogPurchases 
+ -0.24097486430988 * S_NumDealsPurchases + 0.64364674828841 * S_NumStorePurchases + 
0.15084748708424 * S_NumWebPurchases + -0.94144998356377 * S_NumWebVisitsMonth + 
1.16778338364599 * S_Recency + 0.32089861635238 * S_Teenhome ;
1292054   +   H15  =    -0.15703510827879 * S_Income  +    -0.30977841002562 * S_Kidhome
1292055   +          +    -0.14543196273578 * S_MntFishProducts
1292056   +          +     0.32223695896711 * S_MntFruits  +    -0.31846203211698 *
1292057   +        S_MntGoldProds  +     -1.4125160823105 * S_MntMeatProducts
1292058   +          +     0.49374793444169 * S_MntSweetProducts
1292059   +          +     0.39699716010219 * S_MntWines  +    -0.88140331687645 *
1292060   +        S_NumCatalogPurchases  +    -0.87657222813687 * S_NumDealsPurchases
1292061   +          +     1.23754786782746 * S_NumStorePurchases
1292062   +          +     1.11316667348511 * S_NumWebPurchases
1292063   +          +    -1.08592446439781 * S_NumWebVisitsMonth
1292064   +          +     0.66958517589542 * S_Recency  +     0.06799032788481 *
1292065   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.15703510827879 * S_Income + -0.30977841002562 * S_Kidhome + 
-0.14543196273578 * S_MntFishProducts + 0.32223695896711 * S_MntFruits + -0.31846203211698 * 
S_MntGoldProds + -1.4125160823105 * S_MntMeatProducts + 0.49374793444169 * S_MntSweetProducts 
+ 0.39699716010219 * S_MntWines + -0.88140331687645 * S_NumCatalogPurchases + 
-0.87657222813687 * S_NumDealsPurchases + 1.23754786782746 * S_NumStorePurchases + 
1.11316667348511 * S_NumWebPurchases + -1.08592446439781 * S_NumWebVisitsMonth + 
0.66958517589542 * S_Recency + 0.06799032788481 * S_Teenhome ;
1292066   +   H16  =    -0.10360901553583 * S_Income  +     0.39257497240865 * S_Kidhome
1292067   +          +     0.29549884005341 * S_MntFishProducts
1292068   +          +     0.04922491353914 * S_MntFruits  +     -0.1412659458221 *
1292069   +        S_MntGoldProds  +    -0.12361454534126 * S_MntMeatProducts
1292070   +          +    -0.11909215986981 * S_MntSweetProducts
1292071   +          +     0.11430484977092 * S_MntWines  +    -0.66235553839539 *
1292072   +        S_NumCatalogPurchases  +     0.17261763180198 * S_NumDealsPurchases
1292073   +          +     0.30109334594548 * S_NumStorePurchases
1292074   +          +     0.01985762767489 * S_NumWebPurchases
1292075   +          +     0.44965133281333 * S_NumWebVisitsMonth
1292076   +          +     0.32338634259192 * S_Recency  +    -0.04032956941805 *
1292077   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.10360901553583 * S_Income + 0.39257497240865 * S_Kidhome + 
0.29549884005341 * S_MntFishProducts + 0.04922491353914 * S_MntFruits + -0.1412659458221 * 
S_MntGoldProds + -0.12361454534126 * S_MntMeatProducts + -0.11909215986981 * 
S_MntSweetProducts + 0.11430484977092 * S_MntWines + -0.66235553839539 * S_NumCatalogPurchases 
+ 0.17261763180198 * S_NumDealsPurchases + 0.30109334594548 * S_NumStorePurchases + 
0.01985762767489 * S_NumWebPurchases + 0.44965133281333 * S_NumWebVisitsMonth + 
0.32338634259192 * S_Recency + -0.04032956941805 * S_Teenhome ;
1292078   +   H11  = H11  +    -0.23026310289024 * AcceptedCmp10
1292079   +          +    -0.82550012364234 * AcceptedCmp20  +    -0.67764228269441 *
1292080   +        AcceptedCmp30  +    -0.51547666117685 * AcceptedCmp40
1292081   +          +    -0.36424958084824 * AcceptedCmp50  +       0.119862855783 *
1292082   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.23026310289024 * AcceptedCmp10 + -0.82550012364234 * 
AcceptedCmp20 + -0.67764228269441 * AcceptedCmp30 + -0.51547666117685 * AcceptedCmp40 + 
-0.36424958084824 * AcceptedCmp50 + 0.119862855783 * Complain0 ;
1292083   +   H12  = H12  +     0.02722288857426 * AcceptedCmp10
1292084   +          +      0.1236576068539 * AcceptedCmp20  +    -0.31265425960737 *
1292085   +        AcceptedCmp30  +    -0.25076565034266 * AcceptedCmp40
1292086   +          +    -0.20158659730872 * AcceptedCmp50  +    -0.43687103612629 *
1292087   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.02722288857426 * AcceptedCmp10 + 0.1236576068539 * 
AcceptedCmp20 + -0.31265425960737 * AcceptedCmp30 + -0.25076565034266 * AcceptedCmp40 + 
-0.20158659730872 * AcceptedCmp50 + -0.43687103612629 * Complain0 ;
1292088   +   H13  = H13  +     0.21852176280571 * AcceptedCmp10
1292089   +          +     0.01727991436107 * AcceptedCmp20  +     0.19303261094625 *
1292090   +        AcceptedCmp30  +    -0.65492191560509 * AcceptedCmp40
1292091   +          +    -0.09636750660684 * AcceptedCmp50  +     0.07579128571046 *
1292092   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.21852176280571 * AcceptedCmp10 + 0.01727991436107 * 
AcceptedCmp20 + 0.19303261094625 * AcceptedCmp30 + -0.65492191560509 * AcceptedCmp40 + 
-0.09636750660684 * AcceptedCmp50 + 0.07579128571046 * Complain0 ;
1292093   +   H14  = H14  +     0.20819294353855 * AcceptedCmp10
1292094   +          +      0.5159102831901 * AcceptedCmp20  +     0.55295587458643 *
1292095   +        AcceptedCmp30  +     0.80682431419623 * AcceptedCmp40
1292096   +          +     0.74007057798158 * AcceptedCmp50  +     -0.4573052390807 *
1292097   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.20819294353855 * AcceptedCmp10 + 0.5159102831901 * 
AcceptedCmp20 + 0.55295587458643 * AcceptedCmp30 + 0.80682431419623 * AcceptedCmp40 + 
0.74007057798158 * AcceptedCmp50 + -0.4573052390807 * Complain0 ;
1292098   +   H15  = H15  +     1.26330939420524 * AcceptedCmp10
1292099   +          +     0.29494505935793 * AcceptedCmp20  +     0.25561322032419 *
1292100   +        AcceptedCmp30  +     0.50102236777897 * AcceptedCmp40
1292101   +          +     0.20696267245027 * AcceptedCmp50  +    -0.00849145233901 *
1292102   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 1.26330939420524 * AcceptedCmp10 + 0.29494505935793 * 
AcceptedCmp20 + 0.25561322032419 * AcceptedCmp30 + 0.50102236777897 * AcceptedCmp40 + 
0.20696267245027 * AcceptedCmp50 + -0.00849145233901 * Complain0 ;
1292103   +   H16  = H16  +     0.03638428330381 * AcceptedCmp10
1292104   +          +     0.27994215452657 * AcceptedCmp20  +    -0.03861840445025 *
1292105   +        AcceptedCmp30  +      0.3398057347433 * AcceptedCmp40
1292106   +          +    -0.00738335957724 * AcceptedCmp50  +      0.0447804375799 *
1292107   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.03638428330381 * AcceptedCmp10 + 0.27994215452657 * 
AcceptedCmp20 + -0.03861840445025 * AcceptedCmp30 + 0.3398057347433 * AcceptedCmp40 + 
-0.00738335957724 * AcceptedCmp50 + 0.0447804375799 * Complain0 ;
1292108   +   H11  = H11  +     0.27482405283962 * Education2n_Cycle
1292109   +          +     0.11084012456612 * EducationBasic  +    -0.23835071987159 *
1292110   +        EducationGraduation  +    -0.10167082180552 * EducationMaster
1292111   +          +     0.51015833145636 * Marital_StatusDivorced
1292112   +          +     -1.1653662063616 * Marital_StatusMarried
1292113   +          +     1.19396547750441 * Marital_StatusSingle
1292114   +          +    -0.99605751789992 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.27482405283962 * Education2n_Cycle + 0.11084012456612 * 
EducationBasic + -0.23835071987159 * EducationGraduation + -0.10167082180552 * EducationMaster 
+ 0.51015833145636 * Marital_StatusDivorced + -1.1653662063616 * Marital_StatusMarried + 
1.19396547750441 * Marital_StatusSingle + -0.99605751789992 * Marital_StatusTogether ;
1292115   +   H12  = H12  +    -0.05268347704739 * Education2n_Cycle
1292116   +          +     0.19362065968028 * EducationBasic  +    -0.26784257195414 *
1292117   +        EducationGraduation  +     0.16650577465959 * EducationMaster
1292118   +          +     0.09154288513995 * Marital_StatusDivorced
1292119   +          +     0.06725684628382 * Marital_StatusMarried
1292120   +          +     0.11327659191494 * Marital_StatusSingle
1292121   +          +     0.01793778876811 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.05268347704739 * Education2n_Cycle + 0.19362065968028 * 
EducationBasic + -0.26784257195414 * EducationGraduation + 0.16650577465959 * EducationMaster 
+ 0.09154288513995 * Marital_StatusDivorced + 0.06725684628382 * Marital_StatusMarried + 
0.11327659191494 * Marital_StatusSingle + 0.01793778876811 * Marital_StatusTogether ;
1292122   +   H13  = H13  +     -0.1027084329077 * Education2n_Cycle
1292123   +          +    -0.01342449140757 * EducationBasic  +    -0.35627920427273 *
1292124   +        EducationGraduation  +    -0.05554656531793 * EducationMaster
1292125   +          +     0.37591653615852 * Marital_StatusDivorced
1292126   +          +    -0.05024236790132 * Marital_StatusMarried
1292127   +          +    -0.28317154997144 * Marital_StatusSingle
1292128   +          +    -0.19247490223101 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.1027084329077 * Education2n_Cycle + -0.01342449140757 * 
EducationBasic + -0.35627920427273 * EducationGraduation + -0.05554656531793 * EducationMaster 
+ 0.37591653615852 * Marital_StatusDivorced + -0.05024236790132 * Marital_StatusMarried + 
-0.28317154997144 * Marital_StatusSingle + -0.19247490223101 * Marital_StatusTogether ;
1292129   +   H14  = H14  +     -0.4162491480577 * Education2n_Cycle
1292130   +          +     0.38075572764074 * EducationBasic  +    -0.28169469529121 *
1292131   +        EducationGraduation  +       0.638986138084 * EducationMaster
1292132   +          +    -0.44885292450558 * Marital_StatusDivorced
1292133   +          +     0.78958791519299 * Marital_StatusMarried
1292134   +          +    -0.09688714431356 * Marital_StatusSingle
1292135   +          +     0.84239030196202 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.4162491480577 * Education2n_Cycle + 0.38075572764074 * 
EducationBasic + -0.28169469529121 * EducationGraduation + 0.638986138084 * EducationMaster + 
-0.44885292450558 * Marital_StatusDivorced + 0.78958791519299 * Marital_StatusMarried + 
-0.09688714431356 * Marital_StatusSingle + 0.84239030196202 * Marital_StatusTogether ;
1292136   +   H15  = H15  +     0.33126657974568 * Education2n_Cycle
1292137   +          +     0.44539039262703 * EducationBasic  +    -0.09154902903865 *
1292138   +        EducationGraduation  +    -0.26400363440725 * EducationMaster
1292139   +          +    -0.30801073895989 * Marital_StatusDivorced
1292140   +          +     -0.1285150749223 * Marital_StatusMarried
1292141   +          +     0.06775542164414 * Marital_StatusSingle
1292142   +          +    -0.13032366945766 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.33126657974568 * Education2n_Cycle + 0.44539039262703 * 
EducationBasic + -0.09154902903865 * EducationGraduation + -0.26400363440725 * EducationMaster 
+ -0.30801073895989 * Marital_StatusDivorced + -0.1285150749223 * Marital_StatusMarried + 
0.06775542164414 * Marital_StatusSingle + -0.13032366945766 * Marital_StatusTogether ;
1292143   +   H16  = H16  +     0.02030175222681 * Education2n_Cycle
1292144   +          +    -0.19579401096879 * EducationBasic  +      0.2070703930869 *
1292145   +        EducationGraduation  +    -0.40706983167068 * EducationMaster
1292146   +          +     0.22193599090368 * Marital_StatusDivorced
1292147   +          +    -0.54544672042168 * Marital_StatusMarried
1292148   +          +    -0.02237436019864 * Marital_StatusSingle
1292149   +          +    -0.21979468164854 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.02030175222681 * Education2n_Cycle + -0.19579401096879 * 
EducationBasic + 0.2070703930869 * EducationGraduation + -0.40706983167068 * EducationMaster + 
0.22193599090368 * Marital_StatusDivorced + -0.54544672042168 * Marital_StatusMarried + 
-0.02237436019864 * Marital_StatusSingle + -0.21979468164854 * Marital_StatusTogether ;
1292150   +   H11  =    -1.24550293901788 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.24550293901788 + H11 ;
1292151   +   H12  =     0.36762263942809 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.36762263942809 + H12 ;
1292152   +   H13  =     0.07010867577103 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.07010867577103 + H13 ;
1292153   +   H14  =    -1.94014549272156 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -1.94014549272156 + H14 ;
1292154   +   H15  =     0.17666656180153 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.17666656180153 + H15 ;
1292155   +   H16  =    -1.64626406576709 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.64626406576709 + H16 ;
1292156   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1292157   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1292158   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1292159   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1292160   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1292161   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1292162   +END;
MPRINT(EM_DIAGRAM):   END;
1292163   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1292164   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1292165   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1292166   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1292167   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1292168   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1292169   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1292170   +END;
MPRINT(EM_DIAGRAM):   END;
1292171   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1292172   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1292173   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1292174   +
1292175   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1292176   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1292177   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1292178   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1292179   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1292180   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1292181   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1292182   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1292183   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1292184   +end;
MPRINT(EM_DIAGRAM):   end;
1292185   +else do;
MPRINT(EM_DIAGRAM):   else do;
1292186   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1292187   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1292188   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1292189   +   end;
MPRINT(EM_DIAGRAM):   end;
1292190   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1292191   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1292192   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1292193   +   end;
MPRINT(EM_DIAGRAM):   end;
1292194   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1292195   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1292196   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1292197   +   end;
MPRINT(EM_DIAGRAM):   end;
1292198   +end;
MPRINT(EM_DIAGRAM):   end;
1292199   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1292200   +   P_DepVar1  =     4.21126046696691 * H11  +      0.6565061288056 * H12
1292201   +          +    -1.92484011508628 * H13  +    -3.74020722142387 * H14
1292202   +          +    -3.27353026762143 * H15  +     -1.2596922869974 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.21126046696691 * H11 + 0.6565061288056 * H12 + 
-1.92484011508628 * H13 + -3.74020722142387 * H14 + -3.27353026762143 * H15 + -1.2596922869974 
* H16 ;
1292203   +   P_DepVar1  =    -1.36806658950323 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.36806658950323 + P_DepVar1 ;
1292204   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1292205   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1292206   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1292207   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1292208   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1292209   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1292210   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1292211   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1292212   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1292213   +END;
MPRINT(EM_DIAGRAM):   END;
1292214   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1292215   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1292216   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1292217   +END;
MPRINT(EM_DIAGRAM):   END;
1292218   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1292219   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1292220   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1292221   +END;
MPRINT(EM_DIAGRAM):   END;
1292222   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1292223   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1292224   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1292225   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1292226   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1292227   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1292228   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1292229   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1292230   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1292231   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1292232   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1292233   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1292234   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1292235   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1292236   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1292237   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1292238   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1292239   +END;
MPRINT(EM_DIAGRAM):   END;
1292240   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1292241   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1292242   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1292243   +drop
1292244   +H11
1292245   +H12
1292246   +H13
1292247   +H14
1292248   +H15
1292249   +H16
1292250   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1292251   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1292252   +* Renaming variables for Neural35;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural35;
1292253   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1292254   +* Renaming Posterior variables for Neural35;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural35;
1292255   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1292256   +drop Neural35_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural35_P_DepVar1;
1292257   +Neural35_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural35_P_DepVar1 = P_DepVar1;
1292258   +drop Neural35_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural35_P_DepVar0;
1292259   +Neural35_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural35_P_DepVar0 = P_DepVar0;
1292260   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1292261   +* Renaming _WARN_ variable for Neural35;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural35;
1292262   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1292263   +length Neural35_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural35_WARN_ $4;
1292264   +drop Neural35_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural35_WARN_;
1292265   +Neural35_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural35_WARN_ = _WARN_;
1292266   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1292267   +* Ensmbl22: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Scoring Code of model 6 of 7;
1292268   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1292269   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1292270   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1292271   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1292272   +* NODE: Neural30;
MPRINT(EM_DIAGRAM):   * NODE: Neural30;
1292273   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1292274   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1292275   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1292276   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1292277   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1292278   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1292279   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1292280   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1292281   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1292282   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1292283   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1292284   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1292285   +LENGTH _WARN_ $4
1292286   +      F_DepVar  $ 12
1292287   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1292288   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1292289   +
1292290   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1292291   +
1292292   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1292293   +
1292294   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1292295   +
1292296   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1292297   +
1292298   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1292299   +
1292300   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1292301   +
1292302   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1292303   +
1292304   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1292305   +
1292306   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1292307   +
1292308   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1292309   +
1292310   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1292311   +
1292312   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1292313   +
1292314   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1292315   +
1292316   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1292317   +
1292318   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1292319   +
1292320   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1292321   +
1292322   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1292323   +
1292324   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1292325   +
1292326   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1292327   +
1292328   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1292329   +
1292330   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1292331   +
1292332   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1292333   +
1292334   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1292335   +
1292336   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1292337   +
1292338   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1292339   +
1292340   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1292341   +
1292342   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1292343   +
1292344   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1292345   +
1292346   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1292347   +
1292348   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1292349   +
1292350   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1292351   +
1292352   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1292353   +
1292354   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1292355   +
1292356   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1292357   +
1292358   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
1292359   +
1292360   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1292361   +
1292362   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1292363   +
1292364   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1292365   +
1292366   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1292367   +
1292368   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1292369   +
1292370   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1292371   +
1292372   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1292373   +
1292374   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1292375   +
1292376   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1292377   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1292378   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1292379   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1292380   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1292381   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1292382   +end;
MPRINT(EM_DIAGRAM):   end;
1292383   +else do;
MPRINT(EM_DIAGRAM):   else do;
1292384   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1292385   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1292386   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1292387   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1292388   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1292389   +   end;
MPRINT(EM_DIAGRAM):   end;
1292390   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1292391   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1292392   +   end;
MPRINT(EM_DIAGRAM):   end;
1292393   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1292394   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1292395   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1292396   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1292397   +   end;
MPRINT(EM_DIAGRAM):   end;
1292398   +end;
MPRINT(EM_DIAGRAM):   end;
1292399   +
1292400   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1292401   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1292402   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1292403   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1292404   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1292405   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1292406   +end;
MPRINT(EM_DIAGRAM):   end;
1292407   +else do;
MPRINT(EM_DIAGRAM):   else do;
1292408   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1292409   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1292410   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1292411   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1292412   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1292413   +   end;
MPRINT(EM_DIAGRAM):   end;
1292414   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1292415   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1292416   +   end;
MPRINT(EM_DIAGRAM):   end;
1292417   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1292418   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1292419   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1292420   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1292421   +   end;
MPRINT(EM_DIAGRAM):   end;
1292422   +end;
MPRINT(EM_DIAGRAM):   end;
1292423   +
1292424   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1292425   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1292426   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1292427   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1292428   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1292429   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1292430   +end;
MPRINT(EM_DIAGRAM):   end;
1292431   +else do;
MPRINT(EM_DIAGRAM):   else do;
1292432   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1292433   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1292434   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1292435   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1292436   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1292437   +   end;
MPRINT(EM_DIAGRAM):   end;
1292438   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1292439   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1292440   +   end;
MPRINT(EM_DIAGRAM):   end;
1292441   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1292442   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1292443   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1292444   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1292445   +   end;
MPRINT(EM_DIAGRAM):   end;
1292446   +end;
MPRINT(EM_DIAGRAM):   end;
1292447   +
1292448   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1292449   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1292450   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1292451   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1292452   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1292453   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1292454   +end;
MPRINT(EM_DIAGRAM):   end;
1292455   +else do;
MPRINT(EM_DIAGRAM):   else do;
1292456   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1292457   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1292458   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1292459   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1292460   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1292461   +   end;
MPRINT(EM_DIAGRAM):   end;
1292462   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1292463   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1292464   +   end;
MPRINT(EM_DIAGRAM):   end;
1292465   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1292466   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1292467   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1292468   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1292469   +   end;
MPRINT(EM_DIAGRAM):   end;
1292470   +end;
MPRINT(EM_DIAGRAM):   end;
1292471   +
1292472   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1292473   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1292474   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1292475   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1292476   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1292477   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1292478   +end;
MPRINT(EM_DIAGRAM):   end;
1292479   +else do;
MPRINT(EM_DIAGRAM):   else do;
1292480   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1292481   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1292482   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1292483   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1292484   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1292485   +   end;
MPRINT(EM_DIAGRAM):   end;
1292486   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1292487   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1292488   +   end;
MPRINT(EM_DIAGRAM):   end;
1292489   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1292490   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1292491   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1292492   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1292493   +   end;
MPRINT(EM_DIAGRAM):   end;
1292494   +end;
MPRINT(EM_DIAGRAM):   end;
1292495   +
1292496   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1292497   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1292498   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1292499   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1292500   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1292501   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1292502   +end;
MPRINT(EM_DIAGRAM):   end;
1292503   +else do;
MPRINT(EM_DIAGRAM):   else do;
1292504   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1292505   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1292506   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1292507   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1292508   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1292509   +   end;
MPRINT(EM_DIAGRAM):   end;
1292510   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1292511   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1292512   +   end;
MPRINT(EM_DIAGRAM):   end;
1292513   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1292514   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1292515   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1292516   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1292517   +   end;
MPRINT(EM_DIAGRAM):   end;
1292518   +end;
MPRINT(EM_DIAGRAM):   end;
1292519   +
1292520   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1292521   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1292522   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1292523   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1292524   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1292525   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1292526   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1292527   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1292528   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1292529   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1292530   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1292531   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1292532   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1292533   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1292534   +end;
MPRINT(EM_DIAGRAM):   end;
1292535   +else do;
MPRINT(EM_DIAGRAM):   else do;
1292536   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1292537   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1292538   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1292539   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1292540   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1292541   +   end;
MPRINT(EM_DIAGRAM):   end;
1292542   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1292543   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1292544   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1292545   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1292546   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1292547   +   end;
MPRINT(EM_DIAGRAM):   end;
1292548   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1292549   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1292550   +   end;
MPRINT(EM_DIAGRAM):   end;
1292551   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1292552   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1292553   +   end;
MPRINT(EM_DIAGRAM):   end;
1292554   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1292555   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1292556   +   end;
MPRINT(EM_DIAGRAM):   end;
1292557   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1292558   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1292559   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1292560   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1292561   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1292562   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1292563   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1292564   +   end;
MPRINT(EM_DIAGRAM):   end;
1292565   +end;
MPRINT(EM_DIAGRAM):   end;
1292566   +
1292567   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1292568   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1292569   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1292570   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1292571   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1292572   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1292573   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1292574   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1292575   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1292576   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1292577   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1292578   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1292579   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1292580   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1292581   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1292582   +end;
MPRINT(EM_DIAGRAM):   end;
1292583   +else do;
MPRINT(EM_DIAGRAM):   else do;
1292584   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1292585   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1292586   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1292587   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1292588   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1292589   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1292590   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1292591   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1292592   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1292593   +         end;
MPRINT(EM_DIAGRAM):   end;
1292594   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1292595   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1292596   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1292597   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1292598   +            end;
MPRINT(EM_DIAGRAM):   end;
1292599   +         end;
MPRINT(EM_DIAGRAM):   end;
1292600   +      end;
MPRINT(EM_DIAGRAM):   end;
1292601   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1292602   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1292603   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1292604   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1292605   +         end;
MPRINT(EM_DIAGRAM):   end;
1292606   +      end;
MPRINT(EM_DIAGRAM):   end;
1292607   +   end;
MPRINT(EM_DIAGRAM):   end;
1292608   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1292609   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1292610   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1292611   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1292612   +      end;
MPRINT(EM_DIAGRAM):   end;
1292613   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1292614   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1292615   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1292616   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1292617   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1292618   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1292619   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1292620   +         end;
MPRINT(EM_DIAGRAM):   end;
1292621   +      end;
MPRINT(EM_DIAGRAM):   end;
1292622   +   end;
MPRINT(EM_DIAGRAM):   end;
1292623   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1292624   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1292625   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1292626   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1292627   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1292628   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1292629   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1292630   +   end;
MPRINT(EM_DIAGRAM):   end;
1292631   +end;
MPRINT(EM_DIAGRAM):   end;
1292632   +
1292633   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1292634   +*** Checking missing input Interval
1292635   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1292636   +
1292637   +IF NMISS(
1292638   +   Income ,
1292639   +   Kidhome ,
1292640   +   MntFishProducts ,
1292641   +   MntFruits ,
1292642   +   MntGoldProds ,
1292643   +   MntMeatProducts ,
1292644   +   MntSweetProducts ,
1292645   +   MntWines ,
1292646   +   NumCatalogPurchases ,
1292647   +   NumDealsPurchases ,
1292648   +   NumStorePurchases ,
1292649   +   NumWebPurchases ,
1292650   +   NumWebVisitsMonth ,
1292651   +   Recency ,
1292652   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
1292653   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1292654   +
1292655   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1292656   +END;
MPRINT(EM_DIAGRAM):   END;
1292657   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1292658   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1292659   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1292660   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1292661   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1292662   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1292663   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1292664   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1292665   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1292666   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1292667   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1292668   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1292669   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1292670   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1292671   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1292672   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1292673   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1292674   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1292675   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1292676   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1292677   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1292678   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1292679   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1292680   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1292681   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1292682   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1292683   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1292684   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1292685   +END;
MPRINT(EM_DIAGRAM):   END;
1292686   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1292687   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1292688   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1292689   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1292690   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1292691   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1292692   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1292693   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1292694   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1292695   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1292696   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1292697   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1292698   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1292699   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1292700   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1292701   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1292702   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1292703   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1292704   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1292705   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1292706   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1292707   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1292708   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1292709   +   ELSE S_NumCatalogPurchases
1292710   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1292711   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1292712   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1292713   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1292714   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1292715   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1292716   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1292717   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1292718   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1292719   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1292720   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1292721   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1292722   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1292723   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1292724   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1292725   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1292726   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1292727   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1292728   +END;
MPRINT(EM_DIAGRAM):   END;
1292729   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1292730   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1292731   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1292732   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1292733   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1292734   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1292735   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1292736   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1292737   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1292738   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1292739   +   H11  =    -0.59781928082243 * S_Income  +     0.49830142312288 * S_Kidhome
1292740   +          +    -0.00045024466632 * S_MntFishProducts
1292741   +          +    -0.22421712710333 * S_MntFruits  +    -0.19010144853469 *
1292742   +        S_MntGoldProds  +    -0.53373773623953 * S_MntMeatProducts
1292743   +          +     0.17506402203495 * S_MntSweetProducts
1292744   +          +    -0.28551398649672 * S_MntWines  +       0.019870944777 *
1292745   +        S_NumCatalogPurchases  +     0.03537776181533 * S_NumDealsPurchases
1292746   +          +     0.05580468715403 * S_NumStorePurchases
1292747   +          +    -0.29131611132704 * S_NumWebPurchases
1292748   +          +    -0.40690084025802 * S_NumWebVisitsMonth
1292749   +          +     0.48640195058901 * S_Recency  +     0.31820890239661 *
1292750   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.59781928082243 * S_Income + 0.49830142312288 * S_Kidhome + 
-0.00045024466632 * S_MntFishProducts + -0.22421712710333 * S_MntFruits + -0.19010144853469 * 
S_MntGoldProds + -0.53373773623953 * S_MntMeatProducts + 0.17506402203495 * S_MntSweetProducts 
+ -0.28551398649672 * S_MntWines + 0.019870944777 * S_NumCatalogPurchases + 0.03537776181533 * 
S_NumDealsPurchases + 0.05580468715403 * S_NumStorePurchases + -0.29131611132704 * 
S_NumWebPurchases + -0.40690084025802 * S_NumWebVisitsMonth + 0.48640195058901 * S_Recency + 
0.31820890239661 * S_Teenhome ;
1292751   +   H12  =    -0.41871753512335 * S_Income  +      0.6025072461821 * S_Kidhome
1292752   +          +    -0.03132724937716 * S_MntFishProducts
1292753   +          +     0.19114182835046 * S_MntFruits  +     0.13483463809539 *
1292754   +        S_MntGoldProds  +    -0.63593603749443 * S_MntMeatProducts
1292755   +          +    -0.07569302401223 * S_MntSweetProducts
1292756   +          +     0.67050112032753 * S_MntWines  +    -0.23159243932208 *
1292757   +        S_NumCatalogPurchases  +    -0.07183698407409 * S_NumDealsPurchases
1292758   +          +     0.54619681114623 * S_NumStorePurchases
1292759   +          +     0.44325129671249 * S_NumWebPurchases
1292760   +          +    -1.25054401670605 * S_NumWebVisitsMonth
1292761   +          +      1.2376290916151 * S_Recency  +     0.43747371517287 *
1292762   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.41871753512335 * S_Income + 0.6025072461821 * S_Kidhome + 
-0.03132724937716 * S_MntFishProducts + 0.19114182835046 * S_MntFruits + 0.13483463809539 * 
S_MntGoldProds + -0.63593603749443 * S_MntMeatProducts + -0.07569302401223 * 
S_MntSweetProducts + 0.67050112032753 * S_MntWines + -0.23159243932208 * S_NumCatalogPurchases 
+ -0.07183698407409 * S_NumDealsPurchases + 0.54619681114623 * S_NumStorePurchases + 
0.44325129671249 * S_NumWebPurchases + -1.25054401670605 * S_NumWebVisitsMonth + 
1.2376290916151 * S_Recency + 0.43747371517287 * S_Teenhome ;
1292763   +   H13  =      0.0713579189325 * S_Income  +    -0.05759612462349 * S_Kidhome
1292764   +          +     0.07631777381832 * S_MntFishProducts
1292765   +          +    -0.00387785552441 * S_MntFruits  +    -0.21868916314192 *
1292766   +        S_MntGoldProds  +       0.072623883197 * S_MntMeatProducts
1292767   +          +     0.12637946833766 * S_MntSweetProducts
1292768   +          +    -0.37981663841124 * S_MntWines  +    -0.89958525403162 *
1292769   +        S_NumCatalogPurchases  +    -0.17471885937598 * S_NumDealsPurchases
1292770   +          +     0.15845618359126 * S_NumStorePurchases
1292771   +          +    -0.33296932705082 * S_NumWebPurchases
1292772   +          +      0.0260072296349 * S_NumWebVisitsMonth
1292773   +          +     0.02544749712977 * S_Recency  +    -0.17381561661022 *
1292774   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.0713579189325 * S_Income + -0.05759612462349 * S_Kidhome + 
0.07631777381832 * S_MntFishProducts + -0.00387785552441 * S_MntFruits + -0.21868916314192 * 
S_MntGoldProds + 0.072623883197 * S_MntMeatProducts + 0.12637946833766 * S_MntSweetProducts + 
-0.37981663841124 * S_MntWines + -0.89958525403162 * S_NumCatalogPurchases + -0.17471885937598 
* S_NumDealsPurchases + 0.15845618359126 * S_NumStorePurchases + -0.33296932705082 * 
S_NumWebPurchases + 0.0260072296349 * S_NumWebVisitsMonth + 0.02544749712977 * S_Recency + 
-0.17381561661022 * S_Teenhome ;
1292775   +   H14  =    -0.47498613710851 * S_Income  +     0.09339198401437 * S_Kidhome
1292776   +          +    -0.13642352619174 * S_MntFishProducts
1292777   +          +     0.27167245582117 * S_MntFruits  +    -0.00579747559996 *
1292778   +        S_MntGoldProds  +     0.31591387319577 * S_MntMeatProducts
1292779   +          +     0.14125815807238 * S_MntSweetProducts
1292780   +          +     0.07862916790983 * S_MntWines  +    -0.58905358997534 *
1292781   +        S_NumCatalogPurchases  +     -0.5574069633995 * S_NumDealsPurchases
1292782   +          +     0.19718828261526 * S_NumStorePurchases
1292783   +          +    -0.24156925391919 * S_NumWebPurchases
1292784   +          +    -0.25711078938749 * S_NumWebVisitsMonth
1292785   +          +     0.38883063223812 * S_Recency  +     -0.2396731334184 *
1292786   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.47498613710851 * S_Income + 0.09339198401437 * S_Kidhome + 
-0.13642352619174 * S_MntFishProducts + 0.27167245582117 * S_MntFruits + -0.00579747559996 * 
S_MntGoldProds + 0.31591387319577 * S_MntMeatProducts + 0.14125815807238 * S_MntSweetProducts 
+ 0.07862916790983 * S_MntWines + -0.58905358997534 * S_NumCatalogPurchases + -0.5574069633995 
* S_NumDealsPurchases + 0.19718828261526 * S_NumStorePurchases + -0.24156925391919 * 
S_NumWebPurchases + -0.25711078938749 * S_NumWebVisitsMonth + 0.38883063223812 * S_Recency + 
-0.2396731334184 * S_Teenhome ;
1292787   +   H15  =     0.24624924979609 * S_Income  +    -0.37052106312109 * S_Kidhome
1292788   +          +     0.13579628643404 * S_MntFishProducts
1292789   +          +    -0.05263868911164 * S_MntFruits  +    -0.01504675049991 *
1292790   +        S_MntGoldProds  +     -0.4202277804998 * S_MntMeatProducts
1292791   +          +    -0.01039299374426 * S_MntSweetProducts
1292792   +          +     0.71197420459135 * S_MntWines  +    -0.35973505575029 *
1292793   +        S_NumCatalogPurchases  +     -0.4415445481482 * S_NumDealsPurchases
1292794   +          +     0.58897740652611 * S_NumStorePurchases
1292795   +          +     0.24564485851062 * S_NumWebPurchases
1292796   +          +    -0.13976320243555 * S_NumWebVisitsMonth
1292797   +          +      0.1199367613063 * S_Recency  +    -0.15283161418313 *
1292798   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.24624924979609 * S_Income + -0.37052106312109 * S_Kidhome + 
0.13579628643404 * S_MntFishProducts + -0.05263868911164 * S_MntFruits + -0.01504675049991 * 
S_MntGoldProds + -0.4202277804998 * S_MntMeatProducts + -0.01039299374426 * S_MntSweetProducts 
+ 0.71197420459135 * S_MntWines + -0.35973505575029 * S_NumCatalogPurchases + -0.4415445481482 
* S_NumDealsPurchases + 0.58897740652611 * S_NumStorePurchases + 0.24564485851062 * 
S_NumWebPurchases + -0.13976320243555 * S_NumWebVisitsMonth + 0.1199367613063 * S_Recency + 
-0.15283161418313 * S_Teenhome ;
1292799   +   H16  =     0.23493799758749 * S_Income  +     0.07038278079069 * S_Kidhome
1292800   +          +    -0.45448768538367 * S_MntFishProducts
1292801   +          +     0.02622380709004 * S_MntFruits  +     0.14726698184115 *
1292802   +        S_MntGoldProds  +     0.65760183569767 * S_MntMeatProducts
1292803   +          +    -0.16936256277023 * S_MntSweetProducts
1292804   +          +    -0.40647066866305 * S_MntWines  +     0.99645493491726 *
1292805   +        S_NumCatalogPurchases  +     0.65587239961358 * S_NumDealsPurchases
1292806   +          +    -0.22309716855774 * S_NumStorePurchases
1292807   +          +    -0.61204529910842 * S_NumWebPurchases
1292808   +          +     0.43742228867615 * S_NumWebVisitsMonth
1292809   +          +    -0.56099034256092 * S_Recency  +     -0.2445351671148 *
1292810   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = 0.23493799758749 * S_Income + 0.07038278079069 * S_Kidhome + 
-0.45448768538367 * S_MntFishProducts + 0.02622380709004 * S_MntFruits + 0.14726698184115 * 
S_MntGoldProds + 0.65760183569767 * S_MntMeatProducts + -0.16936256277023 * S_MntSweetProducts 
+ -0.40647066866305 * S_MntWines + 0.99645493491726 * S_NumCatalogPurchases + 0.65587239961358 
* S_NumDealsPurchases + -0.22309716855774 * S_NumStorePurchases + -0.61204529910842 * 
S_NumWebPurchases + 0.43742228867615 * S_NumWebVisitsMonth + -0.56099034256092 * S_Recency + 
-0.2445351671148 * S_Teenhome ;
1292811   +   H17  =    -0.00107702057163 * S_Income  +     0.25116135719972 * S_Kidhome
1292812   +          +    -0.04540308470858 * S_MntFishProducts
1292813   +          +        0.21487241577 * S_MntFruits  +    -0.12914913547414 *
1292814   +        S_MntGoldProds  +    -0.04149021191395 * S_MntMeatProducts
1292815   +          +     0.02853521979141 * S_MntSweetProducts
1292816   +          +     -0.2435805887418 * S_MntWines  +    -0.04509621661407 *
1292817   +        S_NumCatalogPurchases  +    -0.26492036720429 * S_NumDealsPurchases
1292818   +          +     -0.3299561248944 * S_NumStorePurchases
1292819   +          +    -0.09806597448224 * S_NumWebPurchases
1292820   +          +      0.0427056351245 * S_NumWebVisitsMonth
1292821   +          +     0.03953235628202 * S_Recency  +    -0.11317308767713 *
1292822   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = -0.00107702057163 * S_Income + 0.25116135719972 * S_Kidhome + 
-0.04540308470858 * S_MntFishProducts + 0.21487241577 * S_MntFruits + -0.12914913547414 * 
S_MntGoldProds + -0.04149021191395 * S_MntMeatProducts + 0.02853521979141 * S_MntSweetProducts 
+ -0.2435805887418 * S_MntWines + -0.04509621661407 * S_NumCatalogPurchases + 
-0.26492036720429 * S_NumDealsPurchases + -0.3299561248944 * S_NumStorePurchases + 
-0.09806597448224 * S_NumWebPurchases + 0.0427056351245 * S_NumWebVisitsMonth + 
0.03953235628202 * S_Recency + -0.11317308767713 * S_Teenhome ;
1292823   +   H11  = H11  +     0.50033674561531 * AcceptedCmp10
1292824   +          +    -0.02275693117286 * AcceptedCmp20  +     0.31338891533156 *
1292825   +        AcceptedCmp30  +      0.3901248845706 * AcceptedCmp40
1292826   +          +     0.44314358358111 * AcceptedCmp50  +    -0.20444060864498 *
1292827   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.50033674561531 * AcceptedCmp10 + -0.02275693117286 * 
AcceptedCmp20 + 0.31338891533156 * AcceptedCmp30 + 0.3901248845706 * AcceptedCmp40 + 
0.44314358358111 * AcceptedCmp50 + -0.20444060864498 * Complain0 ;
1292828   +   H12  = H12  +     0.30103938822692 * AcceptedCmp10
1292829   +          +     0.54298746723422 * AcceptedCmp20  +     0.50401040035525 *
1292830   +        AcceptedCmp30  +     0.43447710825306 * AcceptedCmp40
1292831   +          +     0.60794421030027 * AcceptedCmp50  +    -0.28114274461319 *
1292832   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.30103938822692 * AcceptedCmp10 + 0.54298746723422 * 
AcceptedCmp20 + 0.50401040035525 * AcceptedCmp30 + 0.43447710825306 * AcceptedCmp40 + 
0.60794421030027 * AcceptedCmp50 + -0.28114274461319 * Complain0 ;
1292833   +   H13  = H13  +     -0.1890212967757 * AcceptedCmp10
1292834   +          +    -0.11487406996391 * AcceptedCmp20  +    -0.22740618754863 *
1292835   +        AcceptedCmp30  +      0.2354510231918 * AcceptedCmp40
1292836   +          +    -0.14327434649067 * AcceptedCmp50  +    -0.17839080850556 *
1292837   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.1890212967757 * AcceptedCmp10 + -0.11487406996391 * 
AcceptedCmp20 + -0.22740618754863 * AcceptedCmp30 + 0.2354510231918 * AcceptedCmp40 + 
-0.14327434649067 * AcceptedCmp50 + -0.17839080850556 * Complain0 ;
1292838   +   H14  = H14  +    -0.28194187416219 * AcceptedCmp10
1292839   +          +     0.11732089254624 * AcceptedCmp20  +     0.34964075536156 *
1292840   +        AcceptedCmp30  +     0.05772396286169 * AcceptedCmp40
1292841   +          +    -0.08671748651826 * AcceptedCmp50  +      0.0629540108407 *
1292842   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.28194187416219 * AcceptedCmp10 + 0.11732089254624 * 
AcceptedCmp20 + 0.34964075536156 * AcceptedCmp30 + 0.05772396286169 * AcceptedCmp40 + 
-0.08671748651826 * AcceptedCmp50 + 0.0629540108407 * Complain0 ;
1292843   +   H15  = H15  +    -0.01058257322803 * AcceptedCmp10
1292844   +          +     0.26755355732587 * AcceptedCmp20  +     0.40856661734724 *
1292845   +        AcceptedCmp30  +     0.02977117354989 * AcceptedCmp40
1292846   +          +       0.073655049734 * AcceptedCmp50  +     0.25562048226555 *
1292847   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.01058257322803 * AcceptedCmp10 + 0.26755355732587 * 
AcceptedCmp20 + 0.40856661734724 * AcceptedCmp30 + 0.02977117354989 * AcceptedCmp40 + 
0.073655049734 * AcceptedCmp50 + 0.25562048226555 * Complain0 ;
1292848   +   H16  = H16  +    -0.65590117532084 * AcceptedCmp10
1292849   +          +    -0.31314161223579 * AcceptedCmp20  +    -0.18863165264573 *
1292850   +        AcceptedCmp30  +    -0.18832338914237 * AcceptedCmp40
1292851   +          +    -0.53765749471786 * AcceptedCmp50  +     0.17409401877513 *
1292852   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.65590117532084 * AcceptedCmp10 + -0.31314161223579 * 
AcceptedCmp20 + -0.18863165264573 * AcceptedCmp30 + -0.18832338914237 * AcceptedCmp40 + 
-0.53765749471786 * AcceptedCmp50 + 0.17409401877513 * Complain0 ;
1292853   +   H17  = H17  +    -0.42253231673718 * AcceptedCmp10
1292854   +          +    -0.40954345229557 * AcceptedCmp20  +    -0.30577523080786 *
1292855   +        AcceptedCmp30  +    -0.22396670899437 * AcceptedCmp40
1292856   +          +     0.05757251451004 * AcceptedCmp50  +     0.07813950542487 *
1292857   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.42253231673718 * AcceptedCmp10 + -0.40954345229557 * 
AcceptedCmp20 + -0.30577523080786 * AcceptedCmp30 + -0.22396670899437 * AcceptedCmp40 + 
0.05757251451004 * AcceptedCmp50 + 0.07813950542487 * Complain0 ;
1292858   +   H11  = H11  +    -0.14483542022901 * Education2n_Cycle
1292859   +          +     0.32176647745332 * EducationBasic  +     0.00900796305072 *
1292860   +        EducationGraduation  +    -0.00243484910123 * EducationMaster
1292861   +          +    -0.22074132229211 * Marital_StatusDivorced
1292862   +          +     0.70282742634901 * Marital_StatusMarried
1292863   +          +     -0.5926244797961 * Marital_StatusSingle
1292864   +          +     0.21342221410999 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.14483542022901 * Education2n_Cycle + 0.32176647745332 * 
EducationBasic + 0.00900796305072 * EducationGraduation + -0.00243484910123 * EducationMaster 
+ -0.22074132229211 * Marital_StatusDivorced + 0.70282742634901 * Marital_StatusMarried + 
-0.5926244797961 * Marital_StatusSingle + 0.21342221410999 * Marital_StatusTogether ;
1292865   +   H12  = H12  +    -0.10242932200247 * Education2n_Cycle
1292866   +          +     0.34937926721317 * EducationBasic  +    -0.20395479511872 *
1292867   +        EducationGraduation  +     0.31210327899339 * EducationMaster
1292868   +          +    -0.46376392175295 * Marital_StatusDivorced
1292869   +          +       0.589453579718 * Marital_StatusMarried
1292870   +          +    -0.45342174978481 * Marital_StatusSingle
1292871   +          +     0.70517120763557 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.10242932200247 * Education2n_Cycle + 0.34937926721317 * 
EducationBasic + -0.20395479511872 * EducationGraduation + 0.31210327899339 * EducationMaster 
+ -0.46376392175295 * Marital_StatusDivorced + 0.589453579718 * Marital_StatusMarried + 
-0.45342174978481 * Marital_StatusSingle + 0.70517120763557 * Marital_StatusTogether ;
1292872   +   H13  = H13  +     0.24858755570324 * Education2n_Cycle
1292873   +          +     0.07360039359386 * EducationBasic  +    -0.42563056620078 *
1292874   +        EducationGraduation  +    -0.25970840250323 * EducationMaster
1292875   +          +     0.26981972015482 * Marital_StatusDivorced
1292876   +          +    -0.01707364864139 * Marital_StatusMarried
1292877   +          +     0.38646060840009 * Marital_StatusSingle
1292878   +          +     0.19694047086013 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.24858755570324 * Education2n_Cycle + 0.07360039359386 * 
EducationBasic + -0.42563056620078 * EducationGraduation + -0.25970840250323 * EducationMaster 
+ 0.26981972015482 * Marital_StatusDivorced + -0.01707364864139 * Marital_StatusMarried + 
0.38646060840009 * Marital_StatusSingle + 0.19694047086013 * Marital_StatusTogether ;
1292879   +   H14  = H14  +     0.22577522124265 * Education2n_Cycle
1292880   +          +     0.04183136697557 * EducationBasic  +    -0.27725331198825 *
1292881   +        EducationGraduation  +     0.15709188532123 * EducationMaster
1292882   +          +    -0.01933675094701 * Marital_StatusDivorced
1292883   +          +     0.52969577969434 * Marital_StatusMarried
1292884   +          +      -0.348697714569 * Marital_StatusSingle
1292885   +          +      0.5020342481888 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.22577522124265 * Education2n_Cycle + 0.04183136697557 * 
EducationBasic + -0.27725331198825 * EducationGraduation + 0.15709188532123 * EducationMaster 
+ -0.01933675094701 * Marital_StatusDivorced + 0.52969577969434 * Marital_StatusMarried + 
-0.348697714569 * Marital_StatusSingle + 0.5020342481888 * Marital_StatusTogether ;
1292886   +   H15  = H15  +     0.04488332711225 * Education2n_Cycle
1292887   +          +     0.01911097443907 * EducationBasic  +    -0.11699443624996 *
1292888   +        EducationGraduation  +    -0.07291393566738 * EducationMaster
1292889   +          +    -0.04665146013984 * Marital_StatusDivorced
1292890   +          +      -0.586219175167 * Marital_StatusMarried
1292891   +          +     0.55713543417712 * Marital_StatusSingle
1292892   +          +    -0.42208959885332 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.04488332711225 * Education2n_Cycle + 0.01911097443907 * 
EducationBasic + -0.11699443624996 * EducationGraduation + -0.07291393566738 * EducationMaster 
+ -0.04665146013984 * Marital_StatusDivorced + -0.586219175167 * Marital_StatusMarried + 
0.55713543417712 * Marital_StatusSingle + -0.42208959885332 * Marital_StatusTogether ;
1292893   +   H16  = H16  +     0.09174117861154 * Education2n_Cycle
1292894   +          +     -0.1378945860659 * EducationBasic  +     -0.0728635369665 *
1292895   +        EducationGraduation  +     0.29860714824438 * EducationMaster
1292896   +          +    -0.05632171154347 * Marital_StatusDivorced
1292897   +          +     0.03215547861665 * Marital_StatusMarried
1292898   +          +     0.16870781172538 * Marital_StatusSingle
1292899   +          +    -0.04883314322676 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.09174117861154 * Education2n_Cycle + -0.1378945860659 * 
EducationBasic + -0.0728635369665 * EducationGraduation + 0.29860714824438 * EducationMaster + 
-0.05632171154347 * Marital_StatusDivorced + 0.03215547861665 * Marital_StatusMarried + 
0.16870781172538 * Marital_StatusSingle + -0.04883314322676 * Marital_StatusTogether ;
1292900   +   H17  = H17  +    -0.00343694558117 * Education2n_Cycle
1292901   +          +     0.32636427598227 * EducationBasic  +     0.16259654486833 *
1292902   +        EducationGraduation  +    -0.00424229454859 * EducationMaster
1292903   +          +    -0.21765415159355 * Marital_StatusDivorced
1292904   +          +     -0.0542857922075 * Marital_StatusMarried
1292905   +          +     0.20679907454933 * Marital_StatusSingle
1292906   +          +     0.14976519710725 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.00343694558117 * Education2n_Cycle + 0.32636427598227 * 
EducationBasic + 0.16259654486833 * EducationGraduation + -0.00424229454859 * EducationMaster 
+ -0.21765415159355 * Marital_StatusDivorced + -0.0542857922075 * Marital_StatusMarried + 
0.20679907454933 * Marital_StatusSingle + 0.14976519710725 * Marital_StatusTogether ;
1292907   +   H11  =     0.92977078759503 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.92977078759503 + H11 ;
1292908   +   H12  =    -0.97970409253156 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.97970409253156 + H12 ;
1292909   +   H13  =     -0.5001144792196 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.5001144792196 + H13 ;
1292910   +   H14  =    -0.90715840862541 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.90715840862541 + H14 ;
1292911   +   H15  =     0.87046153389036 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.87046153389036 + H15 ;
1292912   +   H16  =     0.49066122767086 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 0.49066122767086 + H16 ;
1292913   +   H17  =    -1.05949763460293 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.05949763460293 + H17 ;
1292914   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1292915   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1292916   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1292917   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1292918   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1292919   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1292920   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
1292921   +END;
MPRINT(EM_DIAGRAM):   END;
1292922   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1292923   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1292924   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1292925   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1292926   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1292927   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1292928   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1292929   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
1292930   +END;
MPRINT(EM_DIAGRAM):   END;
1292931   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1292932   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1292933   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1292934   +
1292935   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1292936   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1292937   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1292938   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1292939   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1292940   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1292941   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1292942   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1292943   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1292944   +end;
MPRINT(EM_DIAGRAM):   end;
1292945   +else do;
MPRINT(EM_DIAGRAM):   else do;
1292946   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1292947   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1292948   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1292949   +   end;
MPRINT(EM_DIAGRAM):   end;
1292950   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1292951   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1292952   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1292953   +   end;
MPRINT(EM_DIAGRAM):   end;
1292954   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1292955   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1292956   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1292957   +   end;
MPRINT(EM_DIAGRAM):   end;
1292958   +end;
MPRINT(EM_DIAGRAM):   end;
1292959   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1292960   +   P_DepVar1  =    -2.32998401250848 * H11  +     -3.2074078511991 * H12
1292961   +          +    -0.69549988605443 * H13  +    -1.74950789108762 * H14
1292962   +          +    -1.74013772071344 * H15  +     2.65306089869015 * H16
1292963   +          +     0.03700459000906 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.32998401250848 * H11 + -3.2074078511991 * H12 + 
-0.69549988605443 * H13 + -1.74950789108762 * H14 + -1.74013772071344 * H15 + 2.65306089869015 
* H16 + 0.03700459000906 * H17 ;
1292964   +   P_DepVar1  =    -1.51229898726716 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.51229898726716 + P_DepVar1 ;
1292965   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1292966   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1292967   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1292968   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1292969   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1292970   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1292971   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1292972   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1292973   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1292974   +END;
MPRINT(EM_DIAGRAM):   END;
1292975   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1292976   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1292977   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1292978   +END;
MPRINT(EM_DIAGRAM):   END;
1292979   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1292980   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1292981   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1292982   +END;
MPRINT(EM_DIAGRAM):   END;
1292983   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1292984   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1292985   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1292986   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1292987   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1292988   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1292989   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1292990   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1292991   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1292992   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1292993   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1292994   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1292995   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1292996   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1292997   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1292998   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1292999   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1293000   +END;
MPRINT(EM_DIAGRAM):   END;
1293001   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1293002   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1293003   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1293004   +drop
1293005   +H11
1293006   +H12
1293007   +H13
1293008   +H14
1293009   +H15
1293010   +H16
1293011   +H17
1293012   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
1293013   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1293014   +* Renaming variables for Neural30;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural30;
1293015   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1293016   +* Renaming Posterior variables for Neural30;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural30;
1293017   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1293018   +drop Neural30_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural30_P_DepVar1;
1293019   +Neural30_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural30_P_DepVar1 = P_DepVar1;
1293020   +drop Neural30_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural30_P_DepVar0;
1293021   +Neural30_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural30_P_DepVar0 = P_DepVar0;
1293022   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1293023   +* Renaming _WARN_ variable for Neural30;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural30;
1293024   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1293025   +length Neural30_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural30_WARN_ $4;
1293026   +drop Neural30_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural30_WARN_;
1293027   +Neural30_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural30_WARN_ = _WARN_;
1293028   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1293029   +* Ensmbl22: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Scoring Code of model 7 of 7;
1293030   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1293031   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1293032   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
1293033   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1293034   +* NODE: Reg10;
MPRINT(EM_DIAGRAM):   * NODE: Reg10;
1293035   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1293036   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1293037   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1293038   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1293039   +
1293040   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1293041   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1293042   +
1293043   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1293044   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1293045   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1293046   +array REG10DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG10DRF [2] $12 _temporary_ ('1' '0' );
1293047   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1293048   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1293049   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1293050   +ARRAY REG10DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG10DRU[2] _TEMPORARY_ (1 0);
1293051   +
1293052   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1293053   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
1293054   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1293055   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1293056   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1293057   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1293058   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1293059   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1293060   +end;
MPRINT(EM_DIAGRAM):   end;
1293061   +else do;
MPRINT(EM_DIAGRAM):   else do;
1293062   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1293063   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
1293064   +   end;
MPRINT(EM_DIAGRAM):   end;
1293065   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1293066   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
1293067   +   end;
MPRINT(EM_DIAGRAM):   end;
1293068   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1293069   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1293070   +   end;
MPRINT(EM_DIAGRAM):   end;
1293071   +end;
MPRINT(EM_DIAGRAM):   end;
1293072   +
1293073   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1293074   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1293075   +
1293076   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1293077   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1293078   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1293079   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1293080   +end;
MPRINT(EM_DIAGRAM):   end;
1293081   +
1293082   +*** Check MntFishProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntFishProducts for missing values ;
1293083   +if missing( MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntFishProducts ) then do;
1293084   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1293085   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1293086   +end;
MPRINT(EM_DIAGRAM):   end;
1293087   +
1293088   +*** Check MntFruits for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntFruits for missing values ;
1293089   +if missing( MntFruits ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntFruits ) then do;
1293090   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1293091   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1293092   +end;
MPRINT(EM_DIAGRAM):   end;
1293093   +
1293094   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1293095   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1293096   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1293097   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1293098   +end;
MPRINT(EM_DIAGRAM):   end;
1293099   +
1293100   +*** Check MntWines for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntWines for missing values ;
1293101   +if missing( MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntWines ) then do;
1293102   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1293103   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1293104   +end;
MPRINT(EM_DIAGRAM):   end;
1293105   +
1293106   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
1293107   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
1293108   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1293109   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1293110   +end;
MPRINT(EM_DIAGRAM):   end;
1293111   +
1293112   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1293113   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1293114   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1293115   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1293116   +end;
MPRINT(EM_DIAGRAM):   end;
1293117   +
1293118   +*** Check NumStorePurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumStorePurchases for missing values ;
1293119   +if missing( NumStorePurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumStorePurchases ) then do;
1293120   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1293121   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1293122   +end;
MPRINT(EM_DIAGRAM):   end;
1293123   +
1293124   +*** Check NumWebPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebPurchases for missing values ;
1293125   +if missing( NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebPurchases ) then do;
1293126   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1293127   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1293128   +end;
MPRINT(EM_DIAGRAM):   end;
1293129   +
1293130   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1293131   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1293132   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1293133   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1293134   +end;
MPRINT(EM_DIAGRAM):   end;
1293135   +
1293136   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1293137   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1293138   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1293139   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1293140   +end;
MPRINT(EM_DIAGRAM):   end;
1293141   +
1293142   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1293143   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1293144   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1293145   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1293146   +end;
MPRINT(EM_DIAGRAM):   end;
1293147   +
1293148   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1293149   +drop _1_0 ;
MPRINT(EM_DIAGRAM):   drop _1_0 ;
1293150   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1293151   +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1293152   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1293153   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1293154   +end;
MPRINT(EM_DIAGRAM):   end;
1293155   +else do;
MPRINT(EM_DIAGRAM):   else do;
1293156   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1293157   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1293158   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1293159   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1293160   +      _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
1293161   +   end;
MPRINT(EM_DIAGRAM):   end;
1293162   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1293163   +      _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
1293164   +   end;
MPRINT(EM_DIAGRAM):   end;
1293165   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1293166   +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1293167   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1293168   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1293169   +   end;
MPRINT(EM_DIAGRAM):   end;
1293170   +end;
MPRINT(EM_DIAGRAM):   end;
1293171   +
1293172   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1293173   +drop _2_0 ;
MPRINT(EM_DIAGRAM):   drop _2_0 ;
1293174   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1293175   +   _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
1293176   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1293177   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1293178   +end;
MPRINT(EM_DIAGRAM):   end;
1293179   +else do;
MPRINT(EM_DIAGRAM):   else do;
1293180   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1293181   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1293182   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1293183   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1293184   +      _2_0 = 1;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
1293185   +   end;
MPRINT(EM_DIAGRAM):   end;
1293186   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1293187   +      _2_0 = -1;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
1293188   +   end;
MPRINT(EM_DIAGRAM):   end;
1293189   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1293190   +      _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
1293191   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1293192   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1293193   +   end;
MPRINT(EM_DIAGRAM):   end;
1293194   +end;
MPRINT(EM_DIAGRAM):   end;
1293195   +
1293196   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1293197   +drop _3_0 ;
MPRINT(EM_DIAGRAM):   drop _3_0 ;
1293198   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1293199   +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1293200   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1293201   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1293202   +end;
MPRINT(EM_DIAGRAM):   end;
1293203   +else do;
MPRINT(EM_DIAGRAM):   else do;
1293204   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1293205   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1293206   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1293207   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1293208   +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
1293209   +   end;
MPRINT(EM_DIAGRAM):   end;
1293210   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1293211   +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
1293212   +   end;
MPRINT(EM_DIAGRAM):   end;
1293213   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1293214   +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1293215   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1293216   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1293217   +   end;
MPRINT(EM_DIAGRAM):   end;
1293218   +end;
MPRINT(EM_DIAGRAM):   end;
1293219   +
1293220   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1293221   +drop _4_0 ;
MPRINT(EM_DIAGRAM):   drop _4_0 ;
1293222   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1293223   +   _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
1293224   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1293225   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1293226   +end;
MPRINT(EM_DIAGRAM):   end;
1293227   +else do;
MPRINT(EM_DIAGRAM):   else do;
1293228   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1293229   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1293230   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1293231   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1293232   +      _4_0 = 1;
MPRINT(EM_DIAGRAM):   _4_0 = 1;
1293233   +   end;
MPRINT(EM_DIAGRAM):   end;
1293234   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1293235   +      _4_0 = -1;
MPRINT(EM_DIAGRAM):   _4_0 = -1;
The SAS System

1293236   +   end;
MPRINT(EM_DIAGRAM):   end;
1293237   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1293238   +      _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
1293239   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1293240   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1293241   +   end;
MPRINT(EM_DIAGRAM):   end;
1293242   +end;
MPRINT(EM_DIAGRAM):   end;
1293243   +
1293244   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1293245   +drop _5_0 ;
MPRINT(EM_DIAGRAM):   drop _5_0 ;
1293246   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1293247   +   _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
1293248   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1293249   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1293250   +end;
MPRINT(EM_DIAGRAM):   end;
1293251   +else do;
MPRINT(EM_DIAGRAM):   else do;
1293252   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1293253   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1293254   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1293255   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1293256   +      _5_0 = 1;
MPRINT(EM_DIAGRAM):   _5_0 = 1;
1293257   +   end;
MPRINT(EM_DIAGRAM):   end;
1293258   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1293259   +      _5_0 = -1;
MPRINT(EM_DIAGRAM):   _5_0 = -1;
1293260   +   end;
MPRINT(EM_DIAGRAM):   end;
1293261   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1293262   +      _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
1293263   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1293264   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1293265   +   end;
MPRINT(EM_DIAGRAM):   end;
1293266   +end;
MPRINT(EM_DIAGRAM):   end;
1293267   +
1293268   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1293269   +drop _8_0 _8_1 _8_2 _8_3 ;
MPRINT(EM_DIAGRAM):   drop _8_0 _8_1 _8_2 _8_3 ;
1293270   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1293271   +_8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
1293272   +_8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
1293273   +_8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
1293274   +_8_3 = 0;
MPRINT(EM_DIAGRAM):   _8_3 = 0;
1293275   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1293276   +   _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
1293277   +   _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
1293278   +   _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
1293279   +   _8_3 = .;
MPRINT(EM_DIAGRAM):   _8_3 = .;
1293280   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1293281   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1293282   +end;
MPRINT(EM_DIAGRAM):   end;
1293283   +else do;
MPRINT(EM_DIAGRAM):   else do;
1293284   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1293285   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1293286   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1293287   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1293288   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1293289   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1293290   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1293291   +            _8_0 = 1;
MPRINT(EM_DIAGRAM):   _8_0 = 1;
1293292   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1293293   +         end;
MPRINT(EM_DIAGRAM):   end;
1293294   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1293295   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1293296   +               _8_1 = 1;
MPRINT(EM_DIAGRAM):   _8_1 = 1;
1293297   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1293298   +            end;
MPRINT(EM_DIAGRAM):   end;
1293299   +         end;
MPRINT(EM_DIAGRAM):   end;
1293300   +      end;
MPRINT(EM_DIAGRAM):   end;
1293301   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1293302   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1293303   +            _8_2 = 1;
MPRINT(EM_DIAGRAM):   _8_2 = 1;
1293304   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1293305   +         end;
MPRINT(EM_DIAGRAM):   end;
1293306   +      end;
MPRINT(EM_DIAGRAM):   end;
1293307   +   end;
MPRINT(EM_DIAGRAM):   end;
1293308   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1293309   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1293310   +         _8_3 = 1;
MPRINT(EM_DIAGRAM):   _8_3 = 1;
1293311   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1293312   +      end;
MPRINT(EM_DIAGRAM):   end;
1293313   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1293314   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1293315   +            _8_0 = -1;
MPRINT(EM_DIAGRAM):   _8_0 = -1;
1293316   +            _8_1 = -1;
MPRINT(EM_DIAGRAM):   _8_1 = -1;
1293317   +            _8_2 = -1;
MPRINT(EM_DIAGRAM):   _8_2 = -1;
1293318   +            _8_3 = -1;
MPRINT(EM_DIAGRAM):   _8_3 = -1;
1293319   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1293320   +         end;
MPRINT(EM_DIAGRAM):   end;
1293321   +      end;
MPRINT(EM_DIAGRAM):   end;
1293322   +   end;
MPRINT(EM_DIAGRAM):   end;
1293323   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1293324   +      _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
1293325   +      _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
1293326   +      _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
1293327   +      _8_3 = .;
MPRINT(EM_DIAGRAM):   _8_3 = .;
1293328   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1293329   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1293330   +   end;
MPRINT(EM_DIAGRAM):   end;
1293331   +end;
MPRINT(EM_DIAGRAM):   end;
1293332   +
1293333   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1293334   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1293335   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1293336   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1293337   +   goto REG10DR1;
MPRINT(EM_DIAGRAM):   goto REG10DR1;
1293338   +end;
MPRINT(EM_DIAGRAM):   end;
1293339   +
1293340   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1293341   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1293342   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1293343   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1293344   +
1293345   +***  Effect: AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp1 ;
1293346   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1293347   +_LP0 = _LP0 + (   -0.71107732112007) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.71107732112007) * _TEMP * _1_0;
1293348   +
1293349   +***  Effect: AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp2 ;
1293350   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1293351   +_LP0 = _LP0 + (   -0.81763295180983) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.81763295180983) * _TEMP * _2_0;
1293352   +
1293353   +***  Effect: AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp3 ;
1293354   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1293355   +_LP0 = _LP0 + (    -0.8618538514738) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.8618538514738) * _TEMP * _3_0;
1293356   +
1293357   +***  Effect: AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp4 ;
1293358   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1293359   +_LP0 = _LP0 + (   -0.64997710050937) * _TEMP * _4_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.64997710050937) * _TEMP * _4_0;
1293360   +
1293361   +***  Effect: AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp5 ;
1293362   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1293363   +_LP0 = _LP0 + (   -0.91699409369659) * _TEMP * _5_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.91699409369659) * _TEMP * _5_0;
1293364   +
1293365   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1293366   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1293367   +_LP0 = _LP0 + (    0.00003628120307 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00003628120307 * _TEMP);
1293368   +
1293369   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1293370   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1293371   +_LP0 = _LP0 + (    0.09345382071006) * _TEMP * _8_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.09345382071006) * _TEMP * _8_0;
1293372   +_LP0 = _LP0 + (   -0.47894059934485) * _TEMP * _8_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.47894059934485) * _TEMP * _8_1;
1293373   +_LP0 = _LP0 + (    0.46164092141221) * _TEMP * _8_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.46164092141221) * _TEMP * _8_2;
1293374   +_LP0 = _LP0 + (    -0.5078574429985) * _TEMP * _8_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.5078574429985) * _TEMP * _8_3;
1293375   +
1293376   +***  Effect: MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntFishProducts ;
1293377   +_TEMP = MntFishProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntFishProducts ;
1293378   +_LP0 = _LP0 + (   -0.00285470778488 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00285470778488 * _TEMP);
1293379   +
1293380   +***  Effect: MntFruits ;
MPRINT(EM_DIAGRAM):   *** Effect: MntFruits ;
1293381   +_TEMP = MntFruits ;
MPRINT(EM_DIAGRAM):   _TEMP = MntFruits ;
1293382   +_LP0 = _LP0 + (   -0.00481548089585 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00481548089585 * _TEMP);
1293383   +
1293384   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1293385   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1293386   +_LP0 = _LP0 + (    0.00485302069895 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00485302069895 * _TEMP);
1293387   +
1293388   +***  Effect: MntWines ;
MPRINT(EM_DIAGRAM):   *** Effect: MntWines ;
1293389   +_TEMP = MntWines ;
MPRINT(EM_DIAGRAM):   _TEMP = MntWines ;
1293390   +_LP0 = _LP0 + (   -0.00184060065513 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00184060065513 * _TEMP);
1293391   +
1293392   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
1293393   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
1293394   +_LP0 = _LP0 + (    0.40015202354101 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.40015202354101 * _TEMP);
1293395   +
1293396   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1293397   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1293398   +_LP0 = _LP0 + (    0.39526484909287 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.39526484909287 * _TEMP);
1293399   +
1293400   +***  Effect: NumStorePurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumStorePurchases ;
1293401   +_TEMP = NumStorePurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumStorePurchases ;
1293402   +_LP0 = _LP0 + (   -0.21400418800044 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.21400418800044 * _TEMP);
1293403   +
1293404   +***  Effect: NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebPurchases ;
1293405   +_TEMP = NumWebPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebPurchases ;
1293406   +_LP0 = _LP0 + (    -0.2223953481686 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.2223953481686 * _TEMP);
1293407   +
1293408   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1293409   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1293410   +_LP0 = _LP0 + (    0.54388363089232 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.54388363089232 * _TEMP);
1293411   +
1293412   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1293413   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1293414   +_LP0 = _LP0 + (   -0.05513564922633 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05513564922633 * _TEMP);
1293415   +
1293416   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1293417   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1293418   +_LP0 = _LP0 + (   -0.70674092258187 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.70674092258187 * _TEMP);
1293419   +
1293420   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1293421   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1293422   +_P0 = probnorm((   -0.62163391257391) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -0.62163391257391) + _LP0);
1293423   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1293424   +
1293425   +REG10DR1:
1293426   +
1293427   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG10DR1: *** Residuals;
1293428   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
1293429   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1293430   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1293431   +end;
MPRINT(EM_DIAGRAM):   end;
1293432   +else do;
MPRINT(EM_DIAGRAM):   else do;
1293433   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1293434   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1293435   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
1293436   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
1293437   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
1293438   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
1293439   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
1293440   +   end;
MPRINT(EM_DIAGRAM):   end;
1293441   +end;
MPRINT(EM_DIAGRAM):   end;
1293442   +
1293443   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
1293444   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1293445   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1293446   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1293447   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1293448   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1293449   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1293450   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1293451   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1293452   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1293453   +end;
MPRINT(EM_DIAGRAM):   end;
1293454   +I_DepVar = REG10DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG10DRF[_IY];
1293455   +U_DepVar = REG10DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG10DRU[_IY];
1293456   +
1293457   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1293458   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1293459   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1293460   +* Renaming variables for Reg10;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg10;
1293461   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1293462   +* Renaming Posterior variables for Reg10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg10;
1293463   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1293464   +drop Reg10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg10_P_DepVar1;
1293465   +Reg10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg10_P_DepVar1 = P_DepVar1;
1293466   +drop Reg10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg10_P_DepVar0;
1293467   +Reg10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg10_P_DepVar0 = P_DepVar0;
1293468   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1293469   +* Renaming _WARN_ variable for Reg10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg10;
1293470   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1293471   +length Reg10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg10_WARN_ $4;
1293472   +drop Reg10_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg10_WARN_;
1293473   +Reg10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg10_WARN_ = _WARN_;
1293474   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1293475   +* Ensmbl22: Average Posteriors of 7 models;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Average Posteriors of 7 models;
1293476   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1293477   +P_DepVar1 = (
1293478   +Neural31_P_DepVar1 +
1293479   +Neural32_P_DepVar1 +
1293480   +Neural33_P_DepVar1 +
1293481   +Neural34_P_DepVar1 +
1293482   +Neural35_P_DepVar1 +
1293483   +Neural30_P_DepVar1 +
1293484   +Reg10_P_DepVar1
1293485   +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( Neural31_P_DepVar1 + Neural32_P_DepVar1 + 
Neural33_P_DepVar1 + Neural34_P_DepVar1 + Neural35_P_DepVar1 + Neural30_P_DepVar1 + 
Reg10_P_DepVar1 )/7;
1293486   +P_DepVar0 = (
1293487   +Neural31_P_DepVar0 +
1293488   +Neural32_P_DepVar0 +
1293489   +Neural33_P_DepVar0 +
1293490   +Neural34_P_DepVar0 +
1293491   +Neural35_P_DepVar0 +
1293492   +Neural30_P_DepVar0 +
1293493   +Reg10_P_DepVar0
1293494   +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( Neural31_P_DepVar0 + Neural32_P_DepVar0 + 
Neural33_P_DepVar0 + Neural34_P_DepVar0 + Neural35_P_DepVar0 + Neural30_P_DepVar0 + 
Reg10_P_DepVar0 )/7;
1293495   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1293496   +* Ensmbl22: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Computing Classification Vars;
1293497   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1293498   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
1293499   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
1293500   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
1293501   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
1293502   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
1293503   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
1293504   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
1293505   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
1293506   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
1293507   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
1293508   +end;
MPRINT(EM_DIAGRAM):   end;
1293509   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
1293510   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
1293511   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
1293512   +end;
MPRINT(EM_DIAGRAM):   end;
1293513   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1293514   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1293515   +* Ensmbl22: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Producing Unformatted variable;
1293516   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1293517   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1293518   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1293519   +else
1293520   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1293521   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1293522   +* Ensmbl22: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Computing _WARN_ Variable;
1293523   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1293524   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1293525   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1293526   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1293527   +if index(NEURAL31_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1293527  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL31_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1293528   +if index(NEURAL31_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1293528  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL31_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1293529   +if index(NEURAL31_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1293529  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL31_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1293530   +if index(NEURAL31_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1293530  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL31_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1293531   +if index(NEURAL32_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1293531  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL32_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1293532   +if index(NEURAL32_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1293532  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL32_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1293533   +if index(NEURAL32_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1293533  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL32_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1293534   +if index(NEURAL32_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1293534  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL32_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1293535   +if index(NEURAL33_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1293535  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL33_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1293536   +if index(NEURAL33_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1293536  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL33_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1293537   +if index(NEURAL33_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1293537  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL33_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1293538   +if index(NEURAL33_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1293538  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL33_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1293539   +if index(NEURAL34_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1293539  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL34_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1293540   +if index(NEURAL34_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1293540  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL34_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1293541   +if index(NEURAL34_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1293541  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL34_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1293542   +if index(NEURAL34_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1293542  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL34_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1293543   +if index(NEURAL35_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1293543  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL35_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1293544   +if index(NEURAL35_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1293544  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL35_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1293545   +if index(NEURAL35_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1293545  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL35_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1293546   +if index(NEURAL35_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1293546  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL35_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1293547   +if index(NEURAL30_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1293547  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL30_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1293548   +if index(NEURAL30_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1293548  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL30_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1293549   +if index(NEURAL30_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1293549  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL30_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1293550   +if index(NEURAL30_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1293550  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL30_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1293551   +if index(REG10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1293552   +if index(REG10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1293553   +if index(REG10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1293554   +if index(REG10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1293555   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1293556   +* Ensmbl22: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Computing Residual Vars;
1293557   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1293558   +if
1293559   +F_DepVar NE '1'
1293560   +AND F_DepVar NE '0'
1293561   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
1293562   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1293563   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1293564   +end;
MPRINT(EM_DIAGRAM):   end;
1293565   +else do;
MPRINT(EM_DIAGRAM):   else do;
1293566   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
1293567   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
1293568   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
1293569   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
1293570   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
1293571   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
1293572   +END;
MPRINT(EM_DIAGRAM):   END;
1293573   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1293574    run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL22_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.NEURAL31_TRAIN.VIEW used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1293575    quit;
1293576    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1293577    filename emflow
1293577  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl22\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl22\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Scoring NEURAL31_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1293578    *------------------------------------------------------------*;
1293579    * Ensmbl22: Scoring NEURAL31_VALIDATE data;
1293580    *------------------------------------------------------------*;
1293581    data EMWS8.Ensmbl22_VALIDATE
1293582    / view=EMWS8.Ensmbl22_VALIDATE
1293583    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl22_VALIDATE / view=EMWS8.Ensmbl22_VALIDATE ;
1293584    set EMWS8.Neural31_VALIDATE
1293585    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural31_VALIDATE ;
1293586    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl22\EMFLOWSCORE.sas.
1293587   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1293588   +* Ensmbl22: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Combine model for DepVar;
1293589   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1293590   +* Ensmbl22: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Scoring Code of model 1 of 7;
1293591   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1293592   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1293593   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1293594   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1293595   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
1293596   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1293597   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1293598   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
1293599   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1293600   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
1293601   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1293602   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1293603   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
1293604   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1293605   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
1293606   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1293607   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1293608   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
1293609   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1293610   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
1293611   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1293612   +
1293613   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1293614   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1293614  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1293615   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1293616   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1293617   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1293618   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1293619   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
1293620   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1293621   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
1293622   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1293623   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
1293624   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1293625   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1293626   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1293627   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1293628   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1293629   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1293630   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
1293631   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1293632   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
1293633   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1293634   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
1293635   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1293636   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1293637   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
1293638   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1293639   +* NODE: Meta2;
MPRINT(EM_DIAGRAM):   * NODE: Meta2;
1293640   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1293641   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1293642   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1293643   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1293644   +* NODE: Neural31;
MPRINT(EM_DIAGRAM):   * NODE: Neural31;
1293645   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1293646   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1293647   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1293648   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1293649   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1293650   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1293651   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1293652   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1293653   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1293654   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1293655   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1293656   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1293657   +LENGTH _WARN_ $4
1293658   +      F_DepVar  $ 12
1293659   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1293660   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1293661   +
1293662   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1293663   +
1293664   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1293665   +
1293666   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1293667   +
1293668   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1293669   +
1293670   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1293671   +
1293672   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1293673   +
1293674   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1293675   +
1293676   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1293677   +
1293678   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1293679   +
1293680   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1293681   +
1293682   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1293683   +
1293684   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1293685   +
1293686   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1293687   +
1293688   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1293689   +
1293690   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1293691   +
1293692   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1293693   +
1293694   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1293695   +
1293696   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1293697   +
1293698   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1293699   +
1293700   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1293701   +
1293702   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1293703   +
1293704   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1293705   +
1293706   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1293707   +
1293708   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1293709   +
1293710   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1293711   +
1293712   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1293713   +
1293714   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1293715   +
1293716   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1293717   +
1293718   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1293719   +
1293720   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1293721   +
1293722   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1293723   +
1293724   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1293725   +
1293726   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1293727   +
1293728   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1293729   +
1293730   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1293731   +
1293732   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1293733   +
1293734   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1293735   +
1293736   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1293737   +
1293738   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1293739   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1293740   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1293741   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1293742   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1293743   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1293744   +end;
MPRINT(EM_DIAGRAM):   end;
1293745   +else do;
MPRINT(EM_DIAGRAM):   else do;
1293746   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1293747   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1293748   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1293749   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1293750   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1293751   +   end;
MPRINT(EM_DIAGRAM):   end;
1293752   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1293753   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1293754   +   end;
MPRINT(EM_DIAGRAM):   end;
1293755   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1293756   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1293757   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1293758   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1293759   +   end;
MPRINT(EM_DIAGRAM):   end;
1293760   +end;
MPRINT(EM_DIAGRAM):   end;
1293761   +
1293762   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1293763   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1293764   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1293765   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1293766   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1293767   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1293768   +end;
MPRINT(EM_DIAGRAM):   end;
1293769   +else do;
MPRINT(EM_DIAGRAM):   else do;
1293770   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1293771   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1293772   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1293773   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1293774   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1293775   +   end;
MPRINT(EM_DIAGRAM):   end;
1293776   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1293777   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1293778   +   end;
MPRINT(EM_DIAGRAM):   end;
1293779   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1293780   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1293781   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1293782   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1293783   +   end;
MPRINT(EM_DIAGRAM):   end;
1293784   +end;
MPRINT(EM_DIAGRAM):   end;
1293785   +
1293786   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1293787   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1293788   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1293789   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1293790   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1293791   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1293792   +end;
MPRINT(EM_DIAGRAM):   end;
1293793   +else do;
MPRINT(EM_DIAGRAM):   else do;
1293794   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1293795   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1293796   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1293797   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1293798   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1293799   +   end;
MPRINT(EM_DIAGRAM):   end;
1293800   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1293801   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1293802   +   end;
MPRINT(EM_DIAGRAM):   end;
1293803   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1293804   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1293805   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1293806   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1293807   +   end;
MPRINT(EM_DIAGRAM):   end;
1293808   +end;
MPRINT(EM_DIAGRAM):   end;
1293809   +
1293810   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1293811   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1293812   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1293813   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1293814   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1293815   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1293816   +end;
MPRINT(EM_DIAGRAM):   end;
1293817   +else do;
MPRINT(EM_DIAGRAM):   else do;
1293818   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1293819   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1293820   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1293821   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1293822   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1293823   +   end;
MPRINT(EM_DIAGRAM):   end;
1293824   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1293825   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1293826   +   end;
MPRINT(EM_DIAGRAM):   end;
1293827   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1293828   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1293829   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1293830   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1293831   +   end;
MPRINT(EM_DIAGRAM):   end;
1293832   +end;
MPRINT(EM_DIAGRAM):   end;
1293833   +
1293834   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1293835   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1293836   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1293837   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1293838   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1293839   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1293840   +end;
MPRINT(EM_DIAGRAM):   end;
1293841   +else do;
MPRINT(EM_DIAGRAM):   else do;
1293842   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1293843   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1293844   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1293845   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1293846   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1293847   +   end;
MPRINT(EM_DIAGRAM):   end;
1293848   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1293849   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1293850   +   end;
MPRINT(EM_DIAGRAM):   end;
1293851   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1293852   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1293853   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1293854   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1293855   +   end;
MPRINT(EM_DIAGRAM):   end;
1293856   +end;
MPRINT(EM_DIAGRAM):   end;
1293857   +
1293858   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1293859   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1293860   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1293861   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1293862   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1293863   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1293864   +end;
MPRINT(EM_DIAGRAM):   end;
1293865   +else do;
MPRINT(EM_DIAGRAM):   else do;
1293866   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1293867   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1293868   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1293869   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1293870   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1293871   +   end;
MPRINT(EM_DIAGRAM):   end;
1293872   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1293873   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1293874   +   end;
MPRINT(EM_DIAGRAM):   end;
1293875   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1293876   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1293877   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1293878   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1293879   +   end;
MPRINT(EM_DIAGRAM):   end;
1293880   +end;
MPRINT(EM_DIAGRAM):   end;
1293881   +
1293882   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1293883   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1293884   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1293885   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1293886   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1293887   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1293888   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1293889   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1293890   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1293891   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1293892   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1293893   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1293894   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1293895   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1293896   +end;
MPRINT(EM_DIAGRAM):   end;
1293897   +else do;
MPRINT(EM_DIAGRAM):   else do;
1293898   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1293899   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1293900   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1293901   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1293902   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1293903   +   end;
MPRINT(EM_DIAGRAM):   end;
1293904   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1293905   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1293906   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1293907   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1293908   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1293909   +   end;
MPRINT(EM_DIAGRAM):   end;
1293910   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1293911   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1293912   +   end;
MPRINT(EM_DIAGRAM):   end;
1293913   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1293914   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1293915   +   end;
MPRINT(EM_DIAGRAM):   end;
1293916   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1293917   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1293918   +   end;
MPRINT(EM_DIAGRAM):   end;
1293919   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1293920   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1293921   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1293922   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1293923   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1293924   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1293925   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1293926   +   end;
MPRINT(EM_DIAGRAM):   end;
1293927   +end;
MPRINT(EM_DIAGRAM):   end;
1293928   +
1293929   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1293930   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1293931   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1293932   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1293933   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1293934   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1293935   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1293936   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1293937   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1293938   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1293939   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1293940   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1293941   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1293942   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1293943   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1293944   +end;
MPRINT(EM_DIAGRAM):   end;
1293945   +else do;
MPRINT(EM_DIAGRAM):   else do;
1293946   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1293947   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1293948   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1293949   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1293950   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1293951   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1293952   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1293953   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1293954   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1293955   +         end;
MPRINT(EM_DIAGRAM):   end;
1293956   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1293957   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1293958   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1293959   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1293960   +            end;
MPRINT(EM_DIAGRAM):   end;
1293961   +         end;
MPRINT(EM_DIAGRAM):   end;
1293962   +      end;
MPRINT(EM_DIAGRAM):   end;
1293963   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1293964   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1293965   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1293966   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1293967   +         end;
MPRINT(EM_DIAGRAM):   end;
1293968   +      end;
MPRINT(EM_DIAGRAM):   end;
1293969   +   end;
MPRINT(EM_DIAGRAM):   end;
1293970   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1293971   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1293972   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1293973   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1293974   +      end;
MPRINT(EM_DIAGRAM):   end;
1293975   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1293976   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1293977   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1293978   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1293979   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1293980   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1293981   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1293982   +         end;
MPRINT(EM_DIAGRAM):   end;
1293983   +      end;
MPRINT(EM_DIAGRAM):   end;
1293984   +   end;
MPRINT(EM_DIAGRAM):   end;
1293985   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1293986   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1293987   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1293988   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1293989   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1293990   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1293991   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1293992   +   end;
MPRINT(EM_DIAGRAM):   end;
1293993   +end;
MPRINT(EM_DIAGRAM):   end;
1293994   +
1293995   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1293996   +*** Checking missing input Interval
1293997   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1293998   +
1293999   +IF NMISS(
1294000   +   Income ,
1294001   +   Kidhome ,
1294002   +   MntFishProducts ,
1294003   +   MntFruits ,
1294004   +   MntGoldProds ,
1294005   +   MntMeatProducts ,
1294006   +   MntSweetProducts ,
1294007   +   MntWines ,
1294008   +   NumCatalogPurchases ,
1294009   +   NumDealsPurchases ,
1294010   +   NumStorePurchases ,
1294011   +   NumWebPurchases ,
1294012   +   NumWebVisitsMonth ,
1294013   +   Recency ,
1294014   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
1294015   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1294016   +
1294017   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1294018   +END;
MPRINT(EM_DIAGRAM):   END;
1294019   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1294020   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1294021   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1294022   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1294023   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1294024   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1294025   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1294026   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1294027   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1294028   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1294029   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1294030   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1294031   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1294032   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1294033   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1294034   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1294035   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1294036   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1294037   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1294038   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1294039   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1294040   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1294041   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1294042   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1294043   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1294044   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1294045   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1294046   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1294047   +END;
MPRINT(EM_DIAGRAM):   END;
1294048   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1294049   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1294050   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1294051   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1294052   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1294053   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1294054   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1294055   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1294056   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1294057   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1294058   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1294059   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1294060   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1294061   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1294062   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1294063   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1294064   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1294065   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1294066   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1294067   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1294068   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1294069   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1294070   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1294071   +   ELSE S_NumCatalogPurchases
1294072   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1294073   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1294074   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1294075   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1294076   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1294077   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1294078   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1294079   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1294080   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1294081   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1294082   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1294083   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1294084   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1294085   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1294086   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1294087   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1294088   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1294089   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1294090   +END;
MPRINT(EM_DIAGRAM):   END;
1294091   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1294092   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1294093   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1294094   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1294095   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1294096   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1294097   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1294098   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1294099   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1294100   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1294101   +   H11  =    -1.33502235588914 * S_Income  +     0.86914778071024 * S_Kidhome
1294102   +          +     0.06177226616611 * S_MntFishProducts
1294103   +          +     0.22465531888584 * S_MntFruits  +    -0.01216018017424 *
1294104   +        S_MntGoldProds  +    -0.10435601171346 * S_MntMeatProducts
1294105   +          +     0.19245635559754 * S_MntSweetProducts
1294106   +          +    -0.06473329764962 * S_MntWines  +    -0.40260570275107 *
1294107   +        S_NumCatalogPurchases  +    -0.01043435397255 * S_NumDealsPurchases
1294108   +          +    -0.35392759932805 * S_NumStorePurchases
1294109   +          +     -0.2443007642616 * S_NumWebPurchases
1294110   +          +    -0.72667572173837 * S_NumWebVisitsMonth
1294111   +          +     0.97336679863544 * S_Recency  +     0.72544205905496 *
1294112   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -1.33502235588914 * S_Income + 0.86914778071024 * S_Kidhome + 
0.06177226616611 * S_MntFishProducts + 0.22465531888584 * S_MntFruits + -0.01216018017424 * 
S_MntGoldProds + -0.10435601171346 * S_MntMeatProducts + 0.19245635559754 * S_MntSweetProducts 
+ -0.06473329764962 * S_MntWines + -0.40260570275107 * S_NumCatalogPurchases + 
-0.01043435397255 * S_NumDealsPurchases + -0.35392759932805 * S_NumStorePurchases + 
-0.2443007642616 * S_NumWebPurchases + -0.72667572173837 * S_NumWebVisitsMonth + 
0.97336679863544 * S_Recency + 0.72544205905496 * S_Teenhome ;
1294113   +   H12  =    -0.09105644521483 * S_Income  +     0.01920168996111 * S_Kidhome
1294114   +          +     0.00012212205827 * S_MntFishProducts
1294115   +          +     0.00032664246198 * S_MntFruits  +    -0.02161363659377 *
1294116   +        S_MntGoldProds  +    -0.40917729724893 * S_MntMeatProducts
1294117   +          +     0.01459978689352 * S_MntSweetProducts
1294118   +          +     0.28732983017398 * S_MntWines  +    -0.26033282919423 *
1294119   +        S_NumCatalogPurchases  +      -0.306688498482 * S_NumDealsPurchases
1294120   +          +      0.4054643699817 * S_NumStorePurchases
1294121   +          +     0.27747327375374 * S_NumWebPurchases
1294122   +          +    -0.31325270852641 * S_NumWebVisitsMonth
1294123   +          +      0.3707065492652 * S_Recency  +     0.05681262835219 *
1294124   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.09105644521483 * S_Income + 0.01920168996111 * S_Kidhome + 
0.00012212205827 * S_MntFishProducts + 0.00032664246198 * S_MntFruits + -0.02161363659377 * 
S_MntGoldProds + -0.40917729724893 * S_MntMeatProducts + 0.01459978689352 * S_MntSweetProducts 
+ 0.28732983017398 * S_MntWines + -0.26033282919423 * S_NumCatalogPurchases + -0.306688498482 
* S_NumDealsPurchases + 0.4054643699817 * S_NumStorePurchases + 0.27747327375374 * 
S_NumWebPurchases + -0.31325270852641 * S_NumWebVisitsMonth + 0.3707065492652 * S_Recency + 
0.05681262835219 * S_Teenhome ;
1294125   +   H11  = H11  +     0.23904403737743 * AcceptedCmp10
1294126   +          +     0.12365860406863 * AcceptedCmp20  +     0.28547657706908 *
1294127   +        AcceptedCmp30  +     0.37587337003909 * AcceptedCmp40
1294128   +          +    -0.04113029526683 * AcceptedCmp50  +      0.2596440604013 *
1294129   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.23904403737743 * AcceptedCmp10 + 0.12365860406863 * 
AcceptedCmp20 + 0.28547657706908 * AcceptedCmp30 + 0.37587337003909 * AcceptedCmp40 + 
-0.04113029526683 * AcceptedCmp50 + 0.2596440604013 * Complain0 ;
1294130   +   H12  = H12  +     0.25336773034662 * AcceptedCmp10
1294131   +          +     0.39499004620022 * AcceptedCmp20  +     0.19852127214148 *
1294132   +        AcceptedCmp30  +     0.19215250383325 * AcceptedCmp40
1294133   +          +     0.27213364707939 * AcceptedCmp50  +    -0.00774901485124 *
1294134   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.25336773034662 * AcceptedCmp10 + 0.39499004620022 * 
AcceptedCmp20 + 0.19852127214148 * AcceptedCmp30 + 0.19215250383325 * AcceptedCmp40 + 
0.27213364707939 * AcceptedCmp50 + -0.00774901485124 * Complain0 ;
1294135   +   H11  = H11  +    -0.05263155952227 * Education2n_Cycle
1294136   +          +    -1.40124591386453 * EducationBasic  +     0.43501491332678 *
1294137   +        EducationGraduation  +     0.77305262508081 * EducationMaster
1294138   +          +    -0.43667846017683 * Marital_StatusDivorced
1294139   +          +     1.33507828005472 * Marital_StatusMarried
1294140   +          +    -0.75026283842664 * Marital_StatusSingle
1294141   +          +     0.84436594207558 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.05263155952227 * Education2n_Cycle + -1.40124591386453 * 
EducationBasic + 0.43501491332678 * EducationGraduation + 0.77305262508081 * EducationMaster + 
-0.43667846017683 * Marital_StatusDivorced + 1.33507828005472 * Marital_StatusMarried + 
-0.75026283842664 * Marital_StatusSingle + 0.84436594207558 * Marital_StatusTogether ;
1294142   +   H12  = H12  +     0.08398432584098 * Education2n_Cycle
1294143   +          +     0.12375156883157 * EducationBasic  +     -0.0901891766073 *
1294144   +        EducationGraduation  +    -0.07691770257441 * EducationMaster
1294145   +          +    -0.03531690128173 * Marital_StatusDivorced
1294146   +          +    -0.04344171367809 * Marital_StatusMarried
1294147   +          +    -0.05137362653166 * Marital_StatusSingle
1294148   +          +    -0.01265518570667 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.08398432584098 * Education2n_Cycle + 0.12375156883157 * 
EducationBasic + -0.0901891766073 * EducationGraduation + -0.07691770257441 * EducationMaster 
+ -0.03531690128173 * Marital_StatusDivorced + -0.04344171367809 * Marital_StatusMarried + 
-0.05137362653166 * Marital_StatusSingle + -0.01265518570667 * Marital_StatusTogether ;
1294149   +   H11  =     1.86846527977677 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.86846527977677 + H11 ;
1294150   +   H12  =    -0.42494263287735 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.42494263287735 + H12 ;
1294151   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1294152   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1294153   +END;
MPRINT(EM_DIAGRAM):   END;
1294154   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1294155   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1294156   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1294157   +END;
MPRINT(EM_DIAGRAM):   END;
1294158   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1294159   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1294160   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1294161   +
1294162   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1294163   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1294164   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1294165   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1294166   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1294167   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1294168   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1294169   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1294170   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1294171   +end;
MPRINT(EM_DIAGRAM):   end;
1294172   +else do;
MPRINT(EM_DIAGRAM):   else do;
1294173   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1294174   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1294175   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1294176   +   end;
MPRINT(EM_DIAGRAM):   end;
1294177   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1294178   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1294179   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1294180   +   end;
MPRINT(EM_DIAGRAM):   end;
1294181   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1294182   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1294183   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1294184   +   end;
MPRINT(EM_DIAGRAM):   end;
1294185   +end;
MPRINT(EM_DIAGRAM):   end;
1294186   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1294187   +   P_DepVar1  =    -5.43090515434696 * H11  +    -9.08673127131886 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.43090515434696 * H11 + -9.08673127131886 * H12 ;
1294188   +   P_DepVar1  =      2.7752946076831 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.7752946076831 + P_DepVar1 ;
1294189   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1294190   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1294191   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1294192   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1294193   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1294194   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1294195   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1294196   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1294197   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1294198   +END;
MPRINT(EM_DIAGRAM):   END;
1294199   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1294200   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1294201   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1294202   +END;
MPRINT(EM_DIAGRAM):   END;
1294203   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1294204   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1294205   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1294206   +END;
MPRINT(EM_DIAGRAM):   END;
1294207   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1294208   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1294209   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1294210   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1294211   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1294212   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1294213   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1294214   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1294215   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1294216   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1294217   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1294218   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1294219   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1294220   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1294221   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1294222   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1294223   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1294224   +END;
MPRINT(EM_DIAGRAM):   END;
1294225   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1294226   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1294227   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1294228   +drop
1294229   +H11
1294230   +H12
1294231   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
1294232   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1294233   +* Renaming variables for Neural31;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural31;
1294234   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1294235   +* Renaming Posterior variables for Neural31;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural31;
1294236   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1294237   +drop Neural31_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural31_P_DepVar1;
1294238   +Neural31_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural31_P_DepVar1 = P_DepVar1;
1294239   +drop Neural31_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural31_P_DepVar0;
1294240   +Neural31_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural31_P_DepVar0 = P_DepVar0;
1294241   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1294242   +* Renaming _WARN_ variable for Neural31;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural31;
1294243   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1294244   +length Neural31_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural31_WARN_ $4;
1294245   +drop Neural31_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural31_WARN_;
1294246   +Neural31_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural31_WARN_ = _WARN_;
1294247   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1294248   +* Ensmbl22: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Scoring Code of model 2 of 7;
1294249   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1294250   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1294251   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1294252   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1294253   +* NODE: Neural32;
MPRINT(EM_DIAGRAM):   * NODE: Neural32;
1294254   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1294255   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1294256   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1294257   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1294258   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1294259   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1294260   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1294261   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1294262   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1294263   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1294264   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1294265   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1294266   +LENGTH _WARN_ $4
1294267   +      F_DepVar  $ 12
1294268   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1294269   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1294270   +
1294271   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1294272   +
1294273   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1294274   +
1294275   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1294276   +
1294277   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1294278   +
1294279   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1294280   +
1294281   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1294282   +
1294283   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1294284   +
1294285   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1294286   +
1294287   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1294288   +
1294289   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1294290   +
1294291   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1294292   +
1294293   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1294294   +
1294295   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1294296   +
1294297   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1294298   +
1294299   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1294300   +
1294301   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1294302   +
1294303   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1294304   +
1294305   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1294306   +
1294307   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1294308   +
1294309   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1294310   +
1294311   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1294312   +
1294313   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1294314   +
1294315   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1294316   +
1294317   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1294318   +
1294319   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1294320   +
1294321   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1294322   +
1294323   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1294324   +
1294325   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1294326   +
1294327   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1294328   +
1294329   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1294330   +
1294331   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1294332   +
1294333   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1294334   +
1294335   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1294336   +
1294337   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1294338   +
1294339   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1294340   +
1294341   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1294342   +
1294343   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1294344   +
1294345   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1294346   +
1294347   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1294348   +
1294349   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1294350   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1294351   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1294352   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1294353   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1294354   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1294355   +end;
MPRINT(EM_DIAGRAM):   end;
1294356   +else do;
MPRINT(EM_DIAGRAM):   else do;
1294357   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1294358   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1294359   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1294360   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1294361   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1294362   +   end;
MPRINT(EM_DIAGRAM):   end;
1294363   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1294364   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1294365   +   end;
MPRINT(EM_DIAGRAM):   end;
1294366   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1294367   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1294368   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1294369   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1294370   +   end;
MPRINT(EM_DIAGRAM):   end;
1294371   +end;
MPRINT(EM_DIAGRAM):   end;
1294372   +
1294373   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1294374   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1294375   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1294376   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1294377   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1294378   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1294379   +end;
MPRINT(EM_DIAGRAM):   end;
1294380   +else do;
MPRINT(EM_DIAGRAM):   else do;
1294381   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1294382   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1294383   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1294384   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1294385   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1294386   +   end;
MPRINT(EM_DIAGRAM):   end;
1294387   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1294388   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1294389   +   end;
MPRINT(EM_DIAGRAM):   end;
1294390   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1294391   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1294392   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1294393   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1294394   +   end;
MPRINT(EM_DIAGRAM):   end;
1294395   +end;
MPRINT(EM_DIAGRAM):   end;
1294396   +
1294397   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1294398   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1294399   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1294400   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1294401   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1294402   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1294403   +end;
MPRINT(EM_DIAGRAM):   end;
1294404   +else do;
MPRINT(EM_DIAGRAM):   else do;
1294405   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1294406   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1294407   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1294408   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1294409   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1294410   +   end;
MPRINT(EM_DIAGRAM):   end;
1294411   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1294412   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1294413   +   end;
MPRINT(EM_DIAGRAM):   end;
1294414   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1294415   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1294416   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1294417   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1294418   +   end;
MPRINT(EM_DIAGRAM):   end;
1294419   +end;
MPRINT(EM_DIAGRAM):   end;
1294420   +
1294421   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1294422   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1294423   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1294424   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1294425   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1294426   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1294427   +end;
MPRINT(EM_DIAGRAM):   end;
1294428   +else do;
MPRINT(EM_DIAGRAM):   else do;
1294429   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1294430   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1294431   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1294432   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1294433   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1294434   +   end;
MPRINT(EM_DIAGRAM):   end;
1294435   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1294436   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1294437   +   end;
MPRINT(EM_DIAGRAM):   end;
1294438   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1294439   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1294440   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1294441   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1294442   +   end;
MPRINT(EM_DIAGRAM):   end;
1294443   +end;
MPRINT(EM_DIAGRAM):   end;
1294444   +
1294445   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1294446   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1294447   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1294448   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1294449   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1294450   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1294451   +end;
MPRINT(EM_DIAGRAM):   end;
1294452   +else do;
MPRINT(EM_DIAGRAM):   else do;
1294453   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1294454   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1294455   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1294456   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1294457   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1294458   +   end;
MPRINT(EM_DIAGRAM):   end;
1294459   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1294460   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1294461   +   end;
MPRINT(EM_DIAGRAM):   end;
1294462   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1294463   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1294464   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1294465   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1294466   +   end;
MPRINT(EM_DIAGRAM):   end;
1294467   +end;
MPRINT(EM_DIAGRAM):   end;
1294468   +
1294469   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1294470   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1294471   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1294472   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1294473   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1294474   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1294475   +end;
MPRINT(EM_DIAGRAM):   end;
1294476   +else do;
MPRINT(EM_DIAGRAM):   else do;
1294477   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1294478   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1294479   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1294480   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1294481   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1294482   +   end;
MPRINT(EM_DIAGRAM):   end;
1294483   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1294484   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1294485   +   end;
MPRINT(EM_DIAGRAM):   end;
1294486   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1294487   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1294488   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1294489   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1294490   +   end;
MPRINT(EM_DIAGRAM):   end;
1294491   +end;
MPRINT(EM_DIAGRAM):   end;
1294492   +
1294493   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1294494   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1294495   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1294496   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1294497   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1294498   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1294499   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1294500   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1294501   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1294502   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1294503   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1294504   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1294505   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1294506   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1294507   +end;
MPRINT(EM_DIAGRAM):   end;
1294508   +else do;
MPRINT(EM_DIAGRAM):   else do;
1294509   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1294510   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1294511   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1294512   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1294513   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1294514   +   end;
MPRINT(EM_DIAGRAM):   end;
1294515   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1294516   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1294517   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1294518   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1294519   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1294520   +   end;
MPRINT(EM_DIAGRAM):   end;
1294521   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1294522   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1294523   +   end;
MPRINT(EM_DIAGRAM):   end;
1294524   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1294525   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1294526   +   end;
MPRINT(EM_DIAGRAM):   end;
1294527   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1294528   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1294529   +   end;
MPRINT(EM_DIAGRAM):   end;
1294530   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1294531   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1294532   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1294533   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1294534   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1294535   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1294536   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1294537   +   end;
MPRINT(EM_DIAGRAM):   end;
1294538   +end;
MPRINT(EM_DIAGRAM):   end;
1294539   +
1294540   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1294541   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1294542   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1294543   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1294544   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1294545   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1294546   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1294547   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1294548   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1294549   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1294550   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1294551   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1294552   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1294553   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1294554   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1294555   +end;
MPRINT(EM_DIAGRAM):   end;
1294556   +else do;
MPRINT(EM_DIAGRAM):   else do;
1294557   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1294558   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1294559   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1294560   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1294561   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1294562   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1294563   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1294564   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1294565   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1294566   +         end;
MPRINT(EM_DIAGRAM):   end;
1294567   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1294568   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1294569   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1294570   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1294571   +            end;
MPRINT(EM_DIAGRAM):   end;
1294572   +         end;
MPRINT(EM_DIAGRAM):   end;
1294573   +      end;
MPRINT(EM_DIAGRAM):   end;
1294574   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1294575   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1294576   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1294577   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1294578   +         end;
MPRINT(EM_DIAGRAM):   end;
1294579   +      end;
MPRINT(EM_DIAGRAM):   end;
1294580   +   end;
MPRINT(EM_DIAGRAM):   end;
1294581   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1294582   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1294583   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1294584   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1294585   +      end;
MPRINT(EM_DIAGRAM):   end;
1294586   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1294587   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1294588   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1294589   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1294590   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1294591   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1294592   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1294593   +         end;
MPRINT(EM_DIAGRAM):   end;
1294594   +      end;
MPRINT(EM_DIAGRAM):   end;
1294595   +   end;
MPRINT(EM_DIAGRAM):   end;
1294596   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1294597   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1294598   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1294599   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1294600   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1294601   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1294602   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1294603   +   end;
MPRINT(EM_DIAGRAM):   end;
1294604   +end;
MPRINT(EM_DIAGRAM):   end;
1294605   +
1294606   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1294607   +*** Checking missing input Interval
1294608   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1294609   +
1294610   +IF NMISS(
1294611   +   Income ,
1294612   +   Kidhome ,
1294613   +   MntFishProducts ,
1294614   +   MntFruits ,
1294615   +   MntGoldProds ,
1294616   +   MntMeatProducts ,
1294617   +   MntSweetProducts ,
1294618   +   MntWines ,
1294619   +   NumCatalogPurchases ,
1294620   +   NumDealsPurchases ,
1294621   +   NumStorePurchases ,
1294622   +   NumWebPurchases ,
1294623   +   NumWebVisitsMonth ,
1294624   +   Recency ,
1294625   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
1294626   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1294627   +
1294628   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1294629   +END;
MPRINT(EM_DIAGRAM):   END;
1294630   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1294631   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1294632   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1294633   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1294634   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1294635   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1294636   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1294637   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1294638   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1294639   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1294640   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1294641   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1294642   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1294643   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1294644   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1294645   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1294646   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1294647   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1294648   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1294649   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1294650   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1294651   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1294652   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1294653   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1294654   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1294655   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1294656   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1294657   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1294658   +END;
MPRINT(EM_DIAGRAM):   END;
1294659   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1294660   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1294661   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1294662   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1294663   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1294664   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1294665   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1294666   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1294667   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1294668   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1294669   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1294670   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1294671   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1294672   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1294673   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1294674   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1294675   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1294676   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1294677   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1294678   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1294679   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1294680   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1294681   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1294682   +   ELSE S_NumCatalogPurchases
1294683   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1294684   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1294685   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1294686   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1294687   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1294688   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1294689   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1294690   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1294691   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1294692   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1294693   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1294694   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1294695   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1294696   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1294697   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1294698   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1294699   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1294700   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1294701   +END;
MPRINT(EM_DIAGRAM):   END;
1294702   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1294703   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1294704   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1294705   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1294706   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1294707   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1294708   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1294709   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1294710   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1294711   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1294712   +   H11  =     1.40261108800308 * S_Income  +     -0.8062097507842 * S_Kidhome
1294713   +          +    -0.12974862644982 * S_MntFishProducts
1294714   +          +     0.08065642800368 * S_MntFruits  +    -0.12102130003972 *
1294715   +        S_MntGoldProds  +     0.19226249622126 * S_MntMeatProducts
1294716   +          +    -0.12290326901613 * S_MntSweetProducts
1294717   +          +     0.07790241176978 * S_MntWines  +     0.36123042724896 *
1294718   +        S_NumCatalogPurchases  +    -0.01034406765754 * S_NumDealsPurchases
1294719   +          +     0.09738032540137 * S_NumStorePurchases
1294720   +          +     0.44459515215205 * S_NumWebPurchases
1294721   +          +      0.8471075994578 * S_NumWebVisitsMonth
1294722   +          +    -1.10667985160899 * S_Recency  +    -0.88509832868515 *
1294723   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 1.40261108800308 * S_Income + -0.8062097507842 * S_Kidhome + 
-0.12974862644982 * S_MntFishProducts + 0.08065642800368 * S_MntFruits + -0.12102130003972 * 
S_MntGoldProds + 0.19226249622126 * S_MntMeatProducts + -0.12290326901613 * S_MntSweetProducts 
+ 0.07790241176978 * S_MntWines + 0.36123042724896 * S_NumCatalogPurchases + -0.01034406765754 
* S_NumDealsPurchases + 0.09738032540137 * S_NumStorePurchases + 0.44459515215205 * 
S_NumWebPurchases + 0.8471075994578 * S_NumWebVisitsMonth + -1.10667985160899 * S_Recency + 
-0.88509832868515 * S_Teenhome ;
1294724   +   H12  =     0.51266936686642 * S_Income  +     0.26909433357851 * S_Kidhome
1294725   +          +     0.02406077596811 * S_MntFishProducts
1294726   +          +    -0.57443793453522 * S_MntFruits  +     0.36824731232149 *
1294727   +        S_MntGoldProds  +     0.40177289143061 * S_MntMeatProducts
1294728   +          +     -0.1147507059349 * S_MntSweetProducts
1294729   +          +    -0.66379351187459 * S_MntWines  +     1.33407347415468 *
1294730   +        S_NumCatalogPurchases  +     1.00633891197299 * S_NumDealsPurchases
1294731   +          +    -0.23920969262322 * S_NumStorePurchases
1294732   +          +     -0.6008837862932 * S_NumWebPurchases
1294733   +          +     0.26759743722885 * S_NumWebVisitsMonth
1294734   +          +    -0.42755419464125 * S_Recency  +    -0.14471776361394 *
1294735   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.51266936686642 * S_Income + 0.26909433357851 * S_Kidhome + 
0.02406077596811 * S_MntFishProducts + -0.57443793453522 * S_MntFruits + 0.36824731232149 * 
S_MntGoldProds + 0.40177289143061 * S_MntMeatProducts + -0.1147507059349 * S_MntSweetProducts 
+ -0.66379351187459 * S_MntWines + 1.33407347415468 * S_NumCatalogPurchases + 1.00633891197299 
* S_NumDealsPurchases + -0.23920969262322 * S_NumStorePurchases + -0.6008837862932 * 
S_NumWebPurchases + 0.26759743722885 * S_NumWebVisitsMonth + -0.42755419464125 * S_Recency + 
-0.14471776361394 * S_Teenhome ;
1294736   +   H13  =    -0.19807308698832 * S_Income  +     0.25934675474849 * S_Kidhome
1294737   +          +     0.04398331533724 * S_MntFishProducts
1294738   +          +    -0.00090357598988 * S_MntFruits  +     0.05139545341773 *
1294739   +        S_MntGoldProds  +    -0.74617114336019 * S_MntMeatProducts
1294740   +          +     0.00552488718744 * S_MntSweetProducts
1294741   +          +     0.47194407197012 * S_MntWines  +    -0.35149551848487 *
1294742   +        S_NumCatalogPurchases  +    -0.30232522133093 * S_NumDealsPurchases
1294743   +          +     0.60058189155105 * S_NumStorePurchases
1294744   +          +     0.51423374855856 * S_NumWebPurchases
1294745   +          +     -0.9075304423321 * S_NumWebVisitsMonth
1294746   +          +     0.83597739226791 * S_Recency  +     0.15783202762709 *
1294747   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.19807308698832 * S_Income + 0.25934675474849 * S_Kidhome + 
0.04398331533724 * S_MntFishProducts + -0.00090357598988 * S_MntFruits + 0.05139545341773 * 
S_MntGoldProds + -0.74617114336019 * S_MntMeatProducts + 0.00552488718744 * S_MntSweetProducts 
+ 0.47194407197012 * S_MntWines + -0.35149551848487 * S_NumCatalogPurchases + 
-0.30232522133093 * S_NumDealsPurchases + 0.60058189155105 * S_NumStorePurchases + 
0.51423374855856 * S_NumWebPurchases + -0.9075304423321 * S_NumWebVisitsMonth + 
0.83597739226791 * S_Recency + 0.15783202762709 * S_Teenhome ;
1294748   +   H11  = H11  +    -0.26274045665457 * AcceptedCmp10
1294749   +          +    -0.86105702939371 * AcceptedCmp20  +    -0.50476270558977 *
1294750   +        AcceptedCmp30  +    -0.84284126473343 * AcceptedCmp40
1294751   +          +     0.19764907691314 * AcceptedCmp50  +    -0.29305577412263 *
1294752   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.26274045665457 * AcceptedCmp10 + -0.86105702939371 * 
AcceptedCmp20 + -0.50476270558977 * AcceptedCmp30 + -0.84284126473343 * AcceptedCmp40 + 
0.19764907691314 * AcceptedCmp50 + -0.29305577412263 * Complain0 ;
1294753   +   H12  = H12  +    -0.27394139847883 * AcceptedCmp10
1294754   +          +    -0.14688750266104 * AcceptedCmp20  +    -0.27982299242327 *
1294755   +        AcceptedCmp30  +    -0.10465140408787 * AcceptedCmp40
1294756   +          +    -0.81681330244218 * AcceptedCmp50  +    -0.28152730217644 *
1294757   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.27394139847883 * AcceptedCmp10 + -0.14688750266104 * 
AcceptedCmp20 + -0.27982299242327 * AcceptedCmp30 + -0.10465140408787 * AcceptedCmp40 + 
-0.81681330244218 * AcceptedCmp50 + -0.28152730217644 * Complain0 ;
1294758   +   H13  = H13  +     0.42310780831005 * AcceptedCmp10
1294759   +          +     0.41337614261155 * AcceptedCmp20  +     0.41436520641821 *
1294760   +        AcceptedCmp30  +     0.08914989208239 * AcceptedCmp40
1294761   +          +     0.54013759697695 * AcceptedCmp50  +    -0.19478210268955 *
1294762   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.42310780831005 * AcceptedCmp10 + 0.41337614261155 * 
AcceptedCmp20 + 0.41436520641821 * AcceptedCmp30 + 0.08914989208239 * AcceptedCmp40 + 
0.54013759697695 * AcceptedCmp50 + -0.19478210268955 * Complain0 ;
1294763   +   H11  = H11  +     0.40331200702699 * Education2n_Cycle
1294764   +          +     0.17202421641945 * EducationBasic  +    -0.29654161092174 *
1294765   +        EducationGraduation  +     -0.4835104183635 * EducationMaster
1294766   +          +     0.52129580188513 * Marital_StatusDivorced
1294767   +          +     -1.5224490339553 * Marital_StatusMarried
1294768   +          +     1.05062906057771 * Marital_StatusSingle
1294769   +          +    -1.16420887937635 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.40331200702699 * Education2n_Cycle + 0.17202421641945 * 
EducationBasic + -0.29654161092174 * EducationGraduation + -0.4835104183635 * EducationMaster 
+ 0.52129580188513 * Marital_StatusDivorced + -1.5224490339553 * Marital_StatusMarried + 
1.05062906057771 * Marital_StatusSingle + -1.16420887937635 * Marital_StatusTogether ;
1294770   +   H12  = H12  +     -0.3488928858263 * Education2n_Cycle
1294771   +          +     0.38279680594423 * EducationBasic  +     0.20376044836519 *
1294772   +        EducationGraduation  +     0.20697694670185 * EducationMaster
1294773   +          +    -0.14428158063317 * Marital_StatusDivorced
1294774   +          +     0.22396926143356 * Marital_StatusMarried
1294775   +          +    -0.12980854818876 * Marital_StatusSingle
1294776   +          +     0.32607015627906 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.3488928858263 * Education2n_Cycle + 0.38279680594423 * 
EducationBasic + 0.20376044836519 * EducationGraduation + 0.20697694670185 * EducationMaster + 
-0.14428158063317 * Marital_StatusDivorced + 0.22396926143356 * Marital_StatusMarried + 
-0.12980854818876 * Marital_StatusSingle + 0.32607015627906 * Marital_StatusTogether ;
1294777   +   H13  = H13  +    -0.18351418824199 * Education2n_Cycle
1294778   +          +     0.53417952447263 * EducationBasic  +    -0.14333929289628 *
1294779   +        EducationGraduation  +     0.04513004774082 * EducationMaster
1294780   +          +    -0.25615797303064 * Marital_StatusDivorced
1294781   +          +     0.18825506199046 * Marital_StatusMarried
1294782   +          +    -0.24607556819871 * Marital_StatusSingle
1294783   +          +     0.29531673844201 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.18351418824199 * Education2n_Cycle + 0.53417952447263 * 
EducationBasic + -0.14333929289628 * EducationGraduation + 0.04513004774082 * EducationMaster 
+ -0.25615797303064 * Marital_StatusDivorced + 0.18825506199046 * Marital_StatusMarried + 
-0.24607556819871 * Marital_StatusSingle + 0.29531673844201 * Marital_StatusTogether ;
1294784   +   H11  =    -1.29289362679377 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.29289362679377 + H11 ;
1294785   +   H12  =     0.88724419151235 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.88724419151235 + H12 ;
1294786   +   H13  =    -0.51194544699467 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.51194544699467 + H13 ;
1294787   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1294788   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1294789   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1294790   +END;
MPRINT(EM_DIAGRAM):   END;
1294791   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1294792   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1294793   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1294794   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1294795   +END;
MPRINT(EM_DIAGRAM):   END;
1294796   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1294797   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1294798   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1294799   +
1294800   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1294801   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1294802   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1294803   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1294804   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1294805   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1294806   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1294807   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1294808   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1294809   +end;
MPRINT(EM_DIAGRAM):   end;
1294810   +else do;
MPRINT(EM_DIAGRAM):   else do;
1294811   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1294812   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1294813   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1294814   +   end;
MPRINT(EM_DIAGRAM):   end;
1294815   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1294816   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1294817   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1294818   +   end;
MPRINT(EM_DIAGRAM):   end;
1294819   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1294820   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1294821   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1294822   +   end;
MPRINT(EM_DIAGRAM):   end;
1294823   +end;
MPRINT(EM_DIAGRAM):   end;
1294824   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1294825   +   P_DepVar1  =     4.44251020865882 * H11  +     2.67139161773156 * H12
1294826   +          +    -4.73549395111184 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.44251020865882 * H11 + 2.67139161773156 * H12 + 
-4.73549395111184 * H13 ;
1294827   +   P_DepVar1  =     0.45492690116644 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.45492690116644 + P_DepVar1 ;
1294828   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1294829   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1294830   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1294831   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1294832   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1294833   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1294834   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1294835   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1294836   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1294837   +END;
MPRINT(EM_DIAGRAM):   END;
1294838   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1294839   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1294840   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1294841   +END;
MPRINT(EM_DIAGRAM):   END;
1294842   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1294843   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1294844   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1294845   +END;
MPRINT(EM_DIAGRAM):   END;
1294846   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1294847   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1294848   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1294849   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1294850   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1294851   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1294852   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1294853   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1294854   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1294855   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1294856   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1294857   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1294858   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1294859   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1294860   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1294861   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1294862   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1294863   +END;
MPRINT(EM_DIAGRAM):   END;
1294864   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1294865   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1294866   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1294867   +drop
1294868   +H11
1294869   +H12
1294870   +H13
1294871   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1294872   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1294873   +* Renaming variables for Neural32;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural32;
1294874   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1294875   +* Renaming Posterior variables for Neural32;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural32;
1294876   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1294877   +drop Neural32_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural32_P_DepVar1;
1294878   +Neural32_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural32_P_DepVar1 = P_DepVar1;
1294879   +drop Neural32_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural32_P_DepVar0;
1294880   +Neural32_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural32_P_DepVar0 = P_DepVar0;
1294881   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1294882   +* Renaming _WARN_ variable for Neural32;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural32;
1294883   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1294884   +length Neural32_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural32_WARN_ $4;
1294885   +drop Neural32_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural32_WARN_;
1294886   +Neural32_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural32_WARN_ = _WARN_;
1294887   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1294888   +* Ensmbl22: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Scoring Code of model 3 of 7;
1294889   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1294890   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1294891   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1294892   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1294893   +* NODE: Neural33;
MPRINT(EM_DIAGRAM):   * NODE: Neural33;
1294894   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1294895   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1294896   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1294897   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1294898   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1294899   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1294900   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1294901   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1294902   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1294903   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1294904   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1294905   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1294906   +LENGTH _WARN_ $4
1294907   +      F_DepVar  $ 12
1294908   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1294909   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1294910   +
1294911   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1294912   +
1294913   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1294914   +
1294915   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1294916   +
1294917   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1294918   +
1294919   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1294920   +
1294921   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1294922   +
1294923   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1294924   +
1294925   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1294926   +
1294927   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1294928   +
1294929   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1294930   +
1294931   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1294932   +
1294933   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1294934   +
1294935   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1294936   +
1294937   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1294938   +
1294939   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1294940   +
1294941   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1294942   +
1294943   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1294944   +
1294945   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1294946   +
1294947   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1294948   +
1294949   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1294950   +
1294951   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1294952   +
1294953   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1294954   +
1294955   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1294956   +
1294957   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1294958   +
1294959   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1294960   +
1294961   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1294962   +
1294963   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1294964   +
1294965   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1294966   +
1294967   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1294968   +
1294969   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1294970   +
1294971   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1294972   +
1294973   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1294974   +
1294975   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1294976   +
1294977   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1294978   +
1294979   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1294980   +
1294981   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1294982   +
1294983   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1294984   +
1294985   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1294986   +
1294987   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1294988   +
1294989   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1294990   +
1294991   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1294992   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1294993   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1294994   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1294995   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1294996   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1294997   +end;
MPRINT(EM_DIAGRAM):   end;
1294998   +else do;
MPRINT(EM_DIAGRAM):   else do;
1294999   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1295000   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1295001   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1295002   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1295003   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1295004   +   end;
MPRINT(EM_DIAGRAM):   end;
1295005   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1295006   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1295007   +   end;
MPRINT(EM_DIAGRAM):   end;
1295008   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1295009   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1295010   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1295011   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1295012   +   end;
MPRINT(EM_DIAGRAM):   end;
1295013   +end;
MPRINT(EM_DIAGRAM):   end;
1295014   +
1295015   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1295016   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1295017   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1295018   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1295019   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1295020   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1295021   +end;
MPRINT(EM_DIAGRAM):   end;
1295022   +else do;
MPRINT(EM_DIAGRAM):   else do;
1295023   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1295024   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1295025   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1295026   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1295027   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1295028   +   end;
MPRINT(EM_DIAGRAM):   end;
1295029   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1295030   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1295031   +   end;
MPRINT(EM_DIAGRAM):   end;
1295032   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1295033   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1295034   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1295035   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1295036   +   end;
MPRINT(EM_DIAGRAM):   end;
1295037   +end;
MPRINT(EM_DIAGRAM):   end;
1295038   +
1295039   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1295040   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1295041   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1295042   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1295043   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1295044   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1295045   +end;
MPRINT(EM_DIAGRAM):   end;
1295046   +else do;
MPRINT(EM_DIAGRAM):   else do;
1295047   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1295048   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1295049   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1295050   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1295051   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1295052   +   end;
MPRINT(EM_DIAGRAM):   end;
1295053   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1295054   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1295055   +   end;
MPRINT(EM_DIAGRAM):   end;
1295056   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1295057   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1295058   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1295059   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1295060   +   end;
MPRINT(EM_DIAGRAM):   end;
1295061   +end;
MPRINT(EM_DIAGRAM):   end;
1295062   +
1295063   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1295064   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1295065   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1295066   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1295067   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1295068   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1295069   +end;
MPRINT(EM_DIAGRAM):   end;
1295070   +else do;
MPRINT(EM_DIAGRAM):   else do;
1295071   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1295072   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1295073   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1295074   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1295075   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1295076   +   end;
MPRINT(EM_DIAGRAM):   end;
1295077   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1295078   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1295079   +   end;
MPRINT(EM_DIAGRAM):   end;
1295080   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1295081   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1295082   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1295083   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1295084   +   end;
MPRINT(EM_DIAGRAM):   end;
1295085   +end;
MPRINT(EM_DIAGRAM):   end;
1295086   +
1295087   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1295088   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1295089   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1295090   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1295091   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1295092   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1295093   +end;
MPRINT(EM_DIAGRAM):   end;
1295094   +else do;
MPRINT(EM_DIAGRAM):   else do;
1295095   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1295096   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1295097   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1295098   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1295099   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1295100   +   end;
MPRINT(EM_DIAGRAM):   end;
1295101   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1295102   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1295103   +   end;
MPRINT(EM_DIAGRAM):   end;
1295104   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1295105   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1295106   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1295107   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1295108   +   end;
MPRINT(EM_DIAGRAM):   end;
1295109   +end;
MPRINT(EM_DIAGRAM):   end;
1295110   +
1295111   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1295112   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1295113   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1295114   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1295115   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1295116   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1295117   +end;
MPRINT(EM_DIAGRAM):   end;
1295118   +else do;
MPRINT(EM_DIAGRAM):   else do;
1295119   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1295120   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1295121   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1295122   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1295123   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1295124   +   end;
MPRINT(EM_DIAGRAM):   end;
1295125   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1295126   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1295127   +   end;
MPRINT(EM_DIAGRAM):   end;
1295128   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1295129   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1295130   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1295131   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1295132   +   end;
MPRINT(EM_DIAGRAM):   end;
1295133   +end;
MPRINT(EM_DIAGRAM):   end;
1295134   +
1295135   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1295136   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1295137   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1295138   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1295139   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1295140   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1295141   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1295142   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1295143   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1295144   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1295145   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1295146   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1295147   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1295148   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1295149   +end;
MPRINT(EM_DIAGRAM):   end;
1295150   +else do;
MPRINT(EM_DIAGRAM):   else do;
1295151   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1295152   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1295153   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1295154   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1295155   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1295156   +   end;
MPRINT(EM_DIAGRAM):   end;
1295157   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1295158   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1295159   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1295160   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1295161   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1295162   +   end;
MPRINT(EM_DIAGRAM):   end;
1295163   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1295164   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1295165   +   end;
MPRINT(EM_DIAGRAM):   end;
1295166   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1295167   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1295168   +   end;
MPRINT(EM_DIAGRAM):   end;
1295169   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1295170   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1295171   +   end;
MPRINT(EM_DIAGRAM):   end;
1295172   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1295173   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1295174   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1295175   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1295176   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1295177   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1295178   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1295179   +   end;
MPRINT(EM_DIAGRAM):   end;
1295180   +end;
MPRINT(EM_DIAGRAM):   end;
1295181   +
1295182   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1295183   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1295184   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1295185   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1295186   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1295187   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1295188   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1295189   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1295190   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1295191   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1295192   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1295193   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1295194   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1295195   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1295196   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1295197   +end;
MPRINT(EM_DIAGRAM):   end;
1295198   +else do;
MPRINT(EM_DIAGRAM):   else do;
1295199   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1295200   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1295201   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1295202   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1295203   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1295204   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1295205   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1295206   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1295207   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1295208   +         end;
MPRINT(EM_DIAGRAM):   end;
1295209   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1295210   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1295211   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1295212   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1295213   +            end;
MPRINT(EM_DIAGRAM):   end;
1295214   +         end;
MPRINT(EM_DIAGRAM):   end;
1295215   +      end;
MPRINT(EM_DIAGRAM):   end;
1295216   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1295217   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1295218   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1295219   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1295220   +         end;
MPRINT(EM_DIAGRAM):   end;
1295221   +      end;
MPRINT(EM_DIAGRAM):   end;
1295222   +   end;
MPRINT(EM_DIAGRAM):   end;
1295223   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1295224   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1295225   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1295226   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1295227   +      end;
MPRINT(EM_DIAGRAM):   end;
1295228   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1295229   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1295230   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1295231   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1295232   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1295233   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1295234   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1295235   +         end;
MPRINT(EM_DIAGRAM):   end;
1295236   +      end;
MPRINT(EM_DIAGRAM):   end;
1295237   +   end;
MPRINT(EM_DIAGRAM):   end;
1295238   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1295239   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1295240   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1295241   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1295242   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1295243   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1295244   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1295245   +   end;
MPRINT(EM_DIAGRAM):   end;
1295246   +end;
MPRINT(EM_DIAGRAM):   end;
1295247   +
1295248   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1295249   +*** Checking missing input Interval
1295250   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1295251   +
1295252   +IF NMISS(
1295253   +   Income ,
1295254   +   Kidhome ,
1295255   +   MntFishProducts ,
1295256   +   MntFruits ,
1295257   +   MntGoldProds ,
1295258   +   MntMeatProducts ,
1295259   +   MntSweetProducts ,
1295260   +   MntWines ,
1295261   +   NumCatalogPurchases ,
1295262   +   NumDealsPurchases ,
1295263   +   NumStorePurchases ,
1295264   +   NumWebPurchases ,
1295265   +   NumWebVisitsMonth ,
1295266   +   Recency ,
1295267   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
1295268   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1295269   +
1295270   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1295271   +END;
MPRINT(EM_DIAGRAM):   END;
1295272   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1295273   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1295274   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1295275   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1295276   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1295277   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1295278   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1295279   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1295280   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1295281   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1295282   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1295283   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1295284   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1295285   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1295286   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1295287   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1295288   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1295289   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1295290   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1295291   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1295292   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1295293   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1295294   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1295295   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1295296   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1295297   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1295298   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1295299   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1295300   +END;
MPRINT(EM_DIAGRAM):   END;
1295301   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1295302   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1295303   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1295304   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1295305   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1295306   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1295307   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1295308   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1295309   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1295310   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1295311   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1295312   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1295313   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1295314   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1295315   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1295316   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1295317   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1295318   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1295319   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1295320   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1295321   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1295322   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1295323   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1295324   +   ELSE S_NumCatalogPurchases
1295325   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1295326   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1295327   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1295328   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1295329   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1295330   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1295331   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1295332   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1295333   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1295334   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1295335   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1295336   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1295337   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1295338   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1295339   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1295340   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1295341   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1295342   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1295343   +END;
MPRINT(EM_DIAGRAM):   END;
1295344   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1295345   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1295346   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1295347   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1295348   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1295349   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1295350   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1295351   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1295352   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1295353   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1295354   +   H11  =     0.32435248899543 * S_Income  +    -0.47929849648429 * S_Kidhome
1295355   +          +     0.13364230231465 * S_MntFishProducts
1295356   +          +     -0.1386717864506 * S_MntFruits  +    -0.02769770185129 *
1295357   +        S_MntGoldProds  +    -0.29009812234724 * S_MntMeatProducts
1295358   +          +    -0.10871064476617 * S_MntSweetProducts
1295359   +          +     0.57858611197719 * S_MntWines  +    -0.26900817180555 *
1295360   +        S_NumCatalogPurchases  +    -0.39598523430317 * S_NumDealsPurchases
1295361   +          +     0.52835897625366 * S_NumStorePurchases
1295362   +          +     0.66297635444958 * S_NumWebPurchases
1295363   +          +    -0.31727971903608 * S_NumWebVisitsMonth
1295364   +          +     0.12789679291219 * S_Recency  +    -0.39270105014448 *
1295365   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.32435248899543 * S_Income + -0.47929849648429 * S_Kidhome + 
0.13364230231465 * S_MntFishProducts + -0.1386717864506 * S_MntFruits + -0.02769770185129 * 
S_MntGoldProds + -0.29009812234724 * S_MntMeatProducts + -0.10871064476617 * 
S_MntSweetProducts + 0.57858611197719 * S_MntWines + -0.26900817180555 * S_NumCatalogPurchases 
+ -0.39598523430317 * S_NumDealsPurchases + 0.52835897625366 * S_NumStorePurchases + 
0.66297635444958 * S_NumWebPurchases + -0.31727971903608 * S_NumWebVisitsMonth + 
0.12789679291219 * S_Recency + -0.39270105014448 * S_Teenhome ;
1295366   +   H12  =     0.37777254641249 * S_Income  +     0.79199857244438 * S_Kidhome
1295367   +          +     0.14748983783528 * S_MntFishProducts
1295368   +          +     0.14994032216514 * S_MntFruits  +     0.19147871752132 *
1295369   +        S_MntGoldProds  +     0.80535213270443 * S_MntMeatProducts
1295370   +          +     0.31095426478608 * S_MntSweetProducts
1295371   +          +     0.00471809437476 * S_MntWines  +     0.93716396534802 *
1295372   +        S_NumCatalogPurchases  +     0.86841248727948 * S_NumDealsPurchases
1295373   +          +     0.14387100066933 * S_NumStorePurchases
1295374   +          +    -0.01648998884133 * S_NumWebPurchases
1295375   +          +     -0.1378597161576 * S_NumWebVisitsMonth
1295376   +          +     0.15850653387379 * S_Recency  +     0.11714339614827 *
1295377   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.37777254641249 * S_Income + 0.79199857244438 * S_Kidhome + 
0.14748983783528 * S_MntFishProducts + 0.14994032216514 * S_MntFruits + 0.19147871752132 * 
S_MntGoldProds + 0.80535213270443 * S_MntMeatProducts + 0.31095426478608 * S_MntSweetProducts 
+ 0.00471809437476 * S_MntWines + 0.93716396534802 * S_NumCatalogPurchases + 0.86841248727948 
* S_NumDealsPurchases + 0.14387100066933 * S_NumStorePurchases + -0.01648998884133 * 
S_NumWebPurchases + -0.1378597161576 * S_NumWebVisitsMonth + 0.15850653387379 * S_Recency + 
0.11714339614827 * S_Teenhome ;
1295378   +   H13  =    -0.31490756773649 * S_Income  +      0.4776214738577 * S_Kidhome
1295379   +          +     0.00774185404534 * S_MntFishProducts
1295380   +          +     0.22292845341942 * S_MntFruits  +     0.11636422687317 *
1295381   +        S_MntGoldProds  +    -0.45522230281212 * S_MntMeatProducts
1295382   +          +     0.28728624268589 * S_MntSweetProducts
1295383   +          +     0.74892928025295 * S_MntWines  +     -0.4834082773325 *
1295384   +        S_NumCatalogPurchases  +    -0.05055717315946 * S_NumDealsPurchases
1295385   +          +     0.56446566213593 * S_NumStorePurchases
1295386   +          +     0.44547549135846 * S_NumWebPurchases
1295387   +          +    -1.17648505936662 * S_NumWebVisitsMonth
1295388   +          +     1.30076355226685 * S_Recency  +     0.56217939635691 *
1295389   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.31490756773649 * S_Income + 0.4776214738577 * S_Kidhome + 
0.00774185404534 * S_MntFishProducts + 0.22292845341942 * S_MntFruits + 0.11636422687317 * 
S_MntGoldProds + -0.45522230281212 * S_MntMeatProducts + 0.28728624268589 * S_MntSweetProducts 
+ 0.74892928025295 * S_MntWines + -0.4834082773325 * S_NumCatalogPurchases + -0.05055717315946 
* S_NumDealsPurchases + 0.56446566213593 * S_NumStorePurchases + 0.44547549135846 * 
S_NumWebPurchases + -1.17648505936662 * S_NumWebVisitsMonth + 1.30076355226685 * S_Recency + 
0.56217939635691 * S_Teenhome ;
1295390   +   H14  =    -0.40179905952719 * S_Income  +     0.16141565212918 * S_Kidhome
1295391   +          +     0.24665716882586 * S_MntFishProducts
1295392   +          +     0.03410629332469 * S_MntFruits  +     -0.1353295645077 *
1295393   +        S_MntGoldProds  +    -0.74661391150362 * S_MntMeatProducts
1295394   +          +    -0.10530818594736 * S_MntSweetProducts
1295395   +          +     0.30618479493194 * S_MntWines  +    -0.63426712804061 *
1295396   +        S_NumCatalogPurchases  +    -0.39486403699564 * S_NumDealsPurchases
1295397   +          +     0.36617016651032 * S_NumStorePurchases
1295398   +          +      0.3580014320946 * S_NumWebPurchases
1295399   +          +    -0.72597289213724 * S_NumWebVisitsMonth
1295400   +          +     0.93272927444012 * S_Recency  +     0.24531402677279 *
1295401   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.40179905952719 * S_Income + 0.16141565212918 * S_Kidhome + 
0.24665716882586 * S_MntFishProducts + 0.03410629332469 * S_MntFruits + -0.1353295645077 * 
S_MntGoldProds + -0.74661391150362 * S_MntMeatProducts + -0.10530818594736 * 
S_MntSweetProducts + 0.30618479493194 * S_MntWines + -0.63426712804061 * S_NumCatalogPurchases 
+ -0.39486403699564 * S_NumDealsPurchases + 0.36617016651032 * S_NumStorePurchases + 
0.3580014320946 * S_NumWebPurchases + -0.72597289213724 * S_NumWebVisitsMonth + 
0.93272927444012 * S_Recency + 0.24531402677279 * S_Teenhome ;
1295402   +   H11  = H11  +     0.10790306691381 * AcceptedCmp10
1295403   +          +     0.36067546675468 * AcceptedCmp20  +     0.56838342781466 *
1295404   +        AcceptedCmp30  +     0.10138997954661 * AcceptedCmp40
1295405   +          +     0.23809874960179 * AcceptedCmp50  +     0.42164522965364 *
1295406   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.10790306691381 * AcceptedCmp10 + 0.36067546675468 * 
AcceptedCmp20 + 0.56838342781466 * AcceptedCmp30 + 0.10138997954661 * AcceptedCmp40 + 
0.23809874960179 * AcceptedCmp50 + 0.42164522965364 * Complain0 ;
1295407   +   H12  = H12  +    -0.10342435301564 * AcceptedCmp10
1295408   +          +     -0.1021625473908 * AcceptedCmp20  +    -0.17400073301804 *
1295409   +        AcceptedCmp30  +      0.1295257925186 * AcceptedCmp40
1295410   +          +    -0.17149939617806 * AcceptedCmp50  +    -0.11843709761825 *
1295411   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.10342435301564 * AcceptedCmp10 + -0.1021625473908 * 
AcceptedCmp20 + -0.17400073301804 * AcceptedCmp30 + 0.1295257925186 * AcceptedCmp40 + 
-0.17149939617806 * AcceptedCmp50 + -0.11843709761825 * Complain0 ;
1295412   +   H13  = H13  +      0.3357459370893 * AcceptedCmp10
1295413   +          +      -0.142120215863 * AcceptedCmp20  +     0.74265608697316 *
1295414   +        AcceptedCmp30  +     0.62493796040954 * AcceptedCmp40
1295415   +          +     0.60033091776267 * AcceptedCmp50  +    -0.70537393421868 *
1295416   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.3357459370893 * AcceptedCmp10 + -0.142120215863 * 
AcceptedCmp20 + 0.74265608697316 * AcceptedCmp30 + 0.62493796040954 * AcceptedCmp40 + 
0.60033091776267 * AcceptedCmp50 + -0.70537393421868 * Complain0 ;
1295417   +   H14  = H14  +     0.52427760948235 * AcceptedCmp10
1295418   +          +     0.50852083885302 * AcceptedCmp20  +     0.30116257238429 *
1295419   +        AcceptedCmp30  +     0.31213749631365 * AcceptedCmp40
1295420   +          +     0.49344261660916 * AcceptedCmp50  +    -0.18226921500969 *
1295421   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.52427760948235 * AcceptedCmp10 + 0.50852083885302 * 
AcceptedCmp20 + 0.30116257238429 * AcceptedCmp30 + 0.31213749631365 * AcceptedCmp40 + 
0.49344261660916 * AcceptedCmp50 + -0.18226921500969 * Complain0 ;
1295422   +   H11  = H11  +     0.04284090874847 * Education2n_Cycle
1295423   +          +    -0.30425860762413 * EducationBasic  +    -0.44977960705402 *
1295424   +        EducationGraduation  +     -0.0712759822621 * EducationMaster
1295425   +          +     0.05171313818048 * Marital_StatusDivorced
1295426   +          +    -0.79112453157624 * Marital_StatusMarried
1295427   +          +     0.89650138723512 * Marital_StatusSingle
1295428   +          +    -0.22094240412913 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04284090874847 * Education2n_Cycle + -0.30425860762413 * 
EducationBasic + -0.44977960705402 * EducationGraduation + -0.0712759822621 * EducationMaster 
+ 0.05171313818048 * Marital_StatusDivorced + -0.79112453157624 * Marital_StatusMarried + 
0.89650138723512 * Marital_StatusSingle + -0.22094240412913 * Marital_StatusTogether ;
1295429   +   H12  = H12  +    -0.32431446530898 * Education2n_Cycle
1295430   +          +     0.04651949620543 * EducationBasic  +     0.50250608857106 *
1295431   +        EducationGraduation  +     0.00514401910219 * EducationMaster
1295432   +          +     0.05091092042416 * Marital_StatusDivorced
1295433   +          +     0.86642985712339 * Marital_StatusMarried
1295434   +          +    -0.14148832619997 * Marital_StatusSingle
1295435   +          +     0.54248977280079 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.32431446530898 * Education2n_Cycle + 0.04651949620543 * 
EducationBasic + 0.50250608857106 * EducationGraduation + 0.00514401910219 * EducationMaster + 
0.05091092042416 * Marital_StatusDivorced + 0.86642985712339 * Marital_StatusMarried + 
-0.14148832619997 * Marital_StatusSingle + 0.54248977280079 * Marital_StatusTogether ;
1295436   +   H13  = H13  +      0.0307333873684 * Education2n_Cycle
1295437   +          +     0.54778728297045 * EducationBasic  +    -0.56032296783121 *
1295438   +        EducationGraduation  +     0.26811389967146 * EducationMaster
1295439   +          +    -0.67787102917679 * Marital_StatusDivorced
1295440   +          +     1.38931504762816 * Marital_StatusMarried
1295441   +          +    -0.51164629287485 * Marital_StatusSingle
1295442   +          +     1.18856608313733 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.0307333873684 * Education2n_Cycle + 0.54778728297045 * 
EducationBasic + -0.56032296783121 * EducationGraduation + 0.26811389967146 * EducationMaster 
+ -0.67787102917679 * Marital_StatusDivorced + 1.38931504762816 * Marital_StatusMarried + 
-0.51164629287485 * Marital_StatusSingle + 1.18856608313733 * Marital_StatusTogether ;
1295443   +   H14  = H14  +    -0.07575289231798 * Education2n_Cycle
1295444   +          +     0.20678548929493 * EducationBasic  +     0.15952949579281 *
1295445   +        EducationGraduation  +    -0.08313247341922 * EducationMaster
1295446   +          +     0.12658153975639 * Marital_StatusDivorced
1295447   +          +     0.20111721742791 * Marital_StatusMarried
1295448   +          +     -0.3521524791648 * Marital_StatusSingle
1295449   +          +     0.24908846940254 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.07575289231798 * Education2n_Cycle + 0.20678548929493 * 
EducationBasic + 0.15952949579281 * EducationGraduation + -0.08313247341922 * EducationMaster 
+ 0.12658153975639 * Marital_StatusDivorced + 0.20111721742791 * Marital_StatusMarried + 
-0.3521524791648 * Marital_StatusSingle + 0.24908846940254 * Marital_StatusTogether ;
1295450   +   H11  =      0.8846003542153 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.8846003542153 + H11 ;
1295451   +   H12  =      1.7793661863354 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.7793661863354 + H12 ;
1295452   +   H13  =    -0.73914187312129 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.73914187312129 + H13 ;
1295453   +   H14  =    -0.28907220457418 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.28907220457418 + H14 ;
1295454   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1295455   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1295456   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1295457   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1295458   +END;
MPRINT(EM_DIAGRAM):   END;
1295459   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1295460   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1295461   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1295462   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1295463   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1295464   +END;
MPRINT(EM_DIAGRAM):   END;
1295465   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1295466   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1295467   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1295468   +
1295469   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1295470   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1295471   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1295472   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1295473   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1295474   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1295475   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1295476   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1295477   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1295478   +end;
MPRINT(EM_DIAGRAM):   end;
1295479   +else do;
MPRINT(EM_DIAGRAM):   else do;
1295480   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1295481   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1295482   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1295483   +   end;
MPRINT(EM_DIAGRAM):   end;
1295484   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1295485   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1295486   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1295487   +   end;
MPRINT(EM_DIAGRAM):   end;
1295488   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1295489   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1295490   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1295491   +   end;
MPRINT(EM_DIAGRAM):   end;
1295492   +end;
MPRINT(EM_DIAGRAM):   end;
1295493   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1295494   +   P_DepVar1  =    -1.84303414221873 * H11  +     1.56062653143645 * H12
1295495   +          +     -3.0630784922123 * H13  +    -4.55573659919551 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.84303414221873 * H11 + 1.56062653143645 * H12 + 
-3.0630784922123 * H13 + -4.55573659919551 * H14 ;
1295496   +   P_DepVar1  =    -1.51714888392638 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.51714888392638 + P_DepVar1 ;
1295497   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1295498   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1295499   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1295500   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1295501   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1295502   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1295503   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1295504   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1295505   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1295506   +END;
MPRINT(EM_DIAGRAM):   END;
1295507   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1295508   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1295509   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1295510   +END;
MPRINT(EM_DIAGRAM):   END;
1295511   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1295512   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1295513   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1295514   +END;
MPRINT(EM_DIAGRAM):   END;
1295515   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1295516   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1295517   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1295518   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1295519   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1295520   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1295521   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1295522   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1295523   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1295524   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1295525   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1295526   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1295527   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1295528   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1295529   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1295530   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1295531   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1295532   +END;
MPRINT(EM_DIAGRAM):   END;
1295533   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1295534   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1295535   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1295536   +drop
1295537   +H11
1295538   +H12
1295539   +H13
1295540   +H14
1295541   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1295542   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1295543   +* Renaming variables for Neural33;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural33;
1295544   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1295545   +* Renaming Posterior variables for Neural33;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural33;
1295546   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1295547   +drop Neural33_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural33_P_DepVar1;
1295548   +Neural33_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural33_P_DepVar1 = P_DepVar1;
1295549   +drop Neural33_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural33_P_DepVar0;
1295550   +Neural33_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural33_P_DepVar0 = P_DepVar0;
1295551   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1295552   +* Renaming _WARN_ variable for Neural33;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural33;
1295553   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1295554   +length Neural33_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural33_WARN_ $4;
1295555   +drop Neural33_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural33_WARN_;
1295556   +Neural33_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural33_WARN_ = _WARN_;
1295557   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1295558   +* Ensmbl22: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Scoring Code of model 4 of 7;
1295559   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1295560   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1295561   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1295562   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1295563   +* NODE: Neural34;
MPRINT(EM_DIAGRAM):   * NODE: Neural34;
1295564   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1295565   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1295566   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1295567   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1295568   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1295569   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1295570   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1295571   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1295572   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1295573   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1295574   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1295575   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1295576   +LENGTH _WARN_ $4
1295577   +      F_DepVar  $ 12
1295578   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1295579   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1295580   +
1295581   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1295582   +
1295583   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1295584   +
1295585   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1295586   +
1295587   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1295588   +
1295589   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1295590   +
1295591   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1295592   +
1295593   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1295594   +
1295595   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1295596   +
1295597   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1295598   +
1295599   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1295600   +
1295601   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1295602   +
1295603   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1295604   +
1295605   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1295606   +
1295607   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1295608   +
1295609   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1295610   +
1295611   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1295612   +
1295613   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1295614   +
1295615   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1295616   +
1295617   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1295618   +
1295619   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1295620   +
1295621   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1295622   +
1295623   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1295624   +
1295625   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1295626   +
1295627   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1295628   +
1295629   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1295630   +
1295631   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1295632   +
1295633   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1295634   +
1295635   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1295636   +
1295637   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1295638   +
1295639   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1295640   +
1295641   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1295642   +
1295643   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1295644   +
1295645   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1295646   +
1295647   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1295648   +
1295649   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1295650   +
1295651   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1295652   +
1295653   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1295654   +
1295655   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1295656   +
1295657   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1295658   +
1295659   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1295660   +
1295661   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1295662   +
1295663   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1295664   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1295665   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1295666   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1295667   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1295668   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1295669   +end;
MPRINT(EM_DIAGRAM):   end;
1295670   +else do;
MPRINT(EM_DIAGRAM):   else do;
1295671   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1295672   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1295673   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1295674   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1295675   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1295676   +   end;
MPRINT(EM_DIAGRAM):   end;
1295677   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1295678   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1295679   +   end;
MPRINT(EM_DIAGRAM):   end;
1295680   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1295681   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1295682   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1295683   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1295684   +   end;
MPRINT(EM_DIAGRAM):   end;
1295685   +end;
MPRINT(EM_DIAGRAM):   end;
1295686   +
1295687   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1295688   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1295689   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1295690   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1295691   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1295692   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1295693   +end;
MPRINT(EM_DIAGRAM):   end;
1295694   +else do;
MPRINT(EM_DIAGRAM):   else do;
1295695   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1295696   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1295697   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1295698   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1295699   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1295700   +   end;
MPRINT(EM_DIAGRAM):   end;
1295701   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1295702   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1295703   +   end;
MPRINT(EM_DIAGRAM):   end;
1295704   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1295705   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1295706   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1295707   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1295708   +   end;
MPRINT(EM_DIAGRAM):   end;
1295709   +end;
MPRINT(EM_DIAGRAM):   end;
1295710   +
1295711   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1295712   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1295713   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1295714   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1295715   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1295716   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1295717   +end;
MPRINT(EM_DIAGRAM):   end;
1295718   +else do;
MPRINT(EM_DIAGRAM):   else do;
1295719   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1295720   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1295721   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1295722   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1295723   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1295724   +   end;
MPRINT(EM_DIAGRAM):   end;
1295725   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1295726   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1295727   +   end;
MPRINT(EM_DIAGRAM):   end;
1295728   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1295729   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1295730   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1295731   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1295732   +   end;
MPRINT(EM_DIAGRAM):   end;
1295733   +end;
MPRINT(EM_DIAGRAM):   end;
1295734   +
1295735   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1295736   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1295737   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1295738   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1295739   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1295740   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1295741   +end;
MPRINT(EM_DIAGRAM):   end;
1295742   +else do;
MPRINT(EM_DIAGRAM):   else do;
1295743   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1295744   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1295745   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1295746   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1295747   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1295748   +   end;
MPRINT(EM_DIAGRAM):   end;
1295749   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1295750   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1295751   +   end;
MPRINT(EM_DIAGRAM):   end;
1295752   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1295753   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1295754   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1295755   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1295756   +   end;
MPRINT(EM_DIAGRAM):   end;
1295757   +end;
MPRINT(EM_DIAGRAM):   end;
1295758   +
1295759   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1295760   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1295761   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1295762   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1295763   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1295764   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1295765   +end;
MPRINT(EM_DIAGRAM):   end;
1295766   +else do;
MPRINT(EM_DIAGRAM):   else do;
1295767   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1295768   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1295769   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1295770   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1295771   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1295772   +   end;
MPRINT(EM_DIAGRAM):   end;
1295773   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1295774   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1295775   +   end;
MPRINT(EM_DIAGRAM):   end;
1295776   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1295777   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1295778   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1295779   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1295780   +   end;
MPRINT(EM_DIAGRAM):   end;
1295781   +end;
MPRINT(EM_DIAGRAM):   end;
1295782   +
1295783   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1295784   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1295785   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1295786   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1295787   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1295788   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1295789   +end;
MPRINT(EM_DIAGRAM):   end;
1295790   +else do;
MPRINT(EM_DIAGRAM):   else do;
1295791   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1295792   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1295793   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1295794   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1295795   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1295796   +   end;
MPRINT(EM_DIAGRAM):   end;
1295797   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1295798   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1295799   +   end;
MPRINT(EM_DIAGRAM):   end;
1295800   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1295801   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1295802   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1295803   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1295804   +   end;
MPRINT(EM_DIAGRAM):   end;
1295805   +end;
MPRINT(EM_DIAGRAM):   end;
1295806   +
1295807   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1295808   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1295809   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1295810   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1295811   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1295812   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1295813   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1295814   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1295815   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1295816   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1295817   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1295818   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1295819   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1295820   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1295821   +end;
MPRINT(EM_DIAGRAM):   end;
1295822   +else do;
MPRINT(EM_DIAGRAM):   else do;
1295823   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1295824   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1295825   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1295826   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1295827   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1295828   +   end;
MPRINT(EM_DIAGRAM):   end;
1295829   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1295830   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1295831   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1295832   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1295833   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1295834   +   end;
MPRINT(EM_DIAGRAM):   end;
1295835   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1295836   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1295837   +   end;
MPRINT(EM_DIAGRAM):   end;
1295838   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1295839   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1295840   +   end;
MPRINT(EM_DIAGRAM):   end;
1295841   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1295842   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1295843   +   end;
MPRINT(EM_DIAGRAM):   end;
1295844   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1295845   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1295846   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1295847   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1295848   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1295849   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1295850   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1295851   +   end;
MPRINT(EM_DIAGRAM):   end;
1295852   +end;
MPRINT(EM_DIAGRAM):   end;
1295853   +
1295854   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1295855   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1295856   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1295857   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1295858   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1295859   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1295860   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1295861   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1295862   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1295863   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1295864   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1295865   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1295866   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1295867   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1295868   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1295869   +end;
MPRINT(EM_DIAGRAM):   end;
1295870   +else do;
MPRINT(EM_DIAGRAM):   else do;
1295871   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1295872   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1295873   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1295874   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1295875   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1295876   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1295877   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1295878   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1295879   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1295880   +         end;
MPRINT(EM_DIAGRAM):   end;
1295881   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1295882   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1295883   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1295884   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1295885   +            end;
MPRINT(EM_DIAGRAM):   end;
1295886   +         end;
MPRINT(EM_DIAGRAM):   end;
1295887   +      end;
MPRINT(EM_DIAGRAM):   end;
1295888   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1295889   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1295890   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1295891   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1295892   +         end;
MPRINT(EM_DIAGRAM):   end;
1295893   +      end;
MPRINT(EM_DIAGRAM):   end;
1295894   +   end;
MPRINT(EM_DIAGRAM):   end;
1295895   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1295896   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1295897   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1295898   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1295899   +      end;
MPRINT(EM_DIAGRAM):   end;
1295900   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1295901   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1295902   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1295903   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1295904   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1295905   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1295906   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1295907   +         end;
MPRINT(EM_DIAGRAM):   end;
1295908   +      end;
MPRINT(EM_DIAGRAM):   end;
1295909   +   end;
MPRINT(EM_DIAGRAM):   end;
1295910   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1295911   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1295912   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1295913   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1295914   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1295915   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1295916   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1295917   +   end;
MPRINT(EM_DIAGRAM):   end;
1295918   +end;
MPRINT(EM_DIAGRAM):   end;
1295919   +
1295920   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1295921   +*** Checking missing input Interval
1295922   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1295923   +
1295924   +IF NMISS(
1295925   +   Income ,
1295926   +   Kidhome ,
1295927   +   MntFishProducts ,
1295928   +   MntFruits ,
1295929   +   MntGoldProds ,
1295930   +   MntMeatProducts ,
1295931   +   MntSweetProducts ,
1295932   +   MntWines ,
1295933   +   NumCatalogPurchases ,
1295934   +   NumDealsPurchases ,
1295935   +   NumStorePurchases ,
1295936   +   NumWebPurchases ,
1295937   +   NumWebVisitsMonth ,
1295938   +   Recency ,
1295939   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
1295940   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1295941   +
1295942   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1295943   +END;
MPRINT(EM_DIAGRAM):   END;
1295944   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1295945   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1295946   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1295947   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1295948   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1295949   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1295950   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1295951   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1295952   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1295953   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1295954   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1295955   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1295956   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1295957   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1295958   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1295959   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1295960   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1295961   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1295962   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1295963   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1295964   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1295965   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1295966   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1295967   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1295968   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1295969   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1295970   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1295971   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1295972   +END;
MPRINT(EM_DIAGRAM):   END;
1295973   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1295974   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1295975   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1295976   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1295977   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1295978   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1295979   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1295980   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1295981   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1295982   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1295983   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1295984   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1295985   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1295986   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1295987   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1295988   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1295989   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1295990   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1295991   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1295992   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1295993   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1295994   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1295995   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1295996   +   ELSE S_NumCatalogPurchases
1295997   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1295998   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1295999   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1296000   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1296001   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1296002   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1296003   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1296004   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1296005   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1296006   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1296007   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1296008   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1296009   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1296010   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1296011   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1296012   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1296013   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1296014   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1296015   +END;
MPRINT(EM_DIAGRAM):   END;
1296016   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1296017   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1296018   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1296019   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1296020   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1296021   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1296022   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1296023   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1296024   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1296025   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1296026   +   H11  =    -0.81572379016921 * S_Income  +    -0.07670946585348 * S_Kidhome
1296027   +          +     0.24367603598167 * S_MntFishProducts
1296028   +          +     0.19692980127348 * S_MntFruits  +    -0.03926738185333 *
1296029   +        S_MntGoldProds  +    -0.20900804333353 * S_MntMeatProducts
1296030   +          +     0.34054806441484 * S_MntSweetProducts
1296031   +          +     0.65956211369383 * S_MntWines  +    -0.95375334578522 *
1296032   +        S_NumCatalogPurchases  +    -0.73124740368567 * S_NumDealsPurchases
1296033   +          +     0.98942946974575 * S_NumStorePurchases
1296034   +          +     0.89701206630103 * S_NumWebPurchases
1296035   +          +    -1.22878611472154 * S_NumWebVisitsMonth
1296036   +          +     1.44981870978354 * S_Recency  +     0.47533125686411 *
1296037   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.81572379016921 * S_Income + -0.07670946585348 * S_Kidhome + 
0.24367603598167 * S_MntFishProducts + 0.19692980127348 * S_MntFruits + -0.03926738185333 * 
S_MntGoldProds + -0.20900804333353 * S_MntMeatProducts + 0.34054806441484 * S_MntSweetProducts 
+ 0.65956211369383 * S_MntWines + -0.95375334578522 * S_NumCatalogPurchases + 
-0.73124740368567 * S_NumDealsPurchases + 0.98942946974575 * S_NumStorePurchases + 
0.89701206630103 * S_NumWebPurchases + -1.22878611472154 * S_NumWebVisitsMonth + 
1.44981870978354 * S_Recency + 0.47533125686411 * S_Teenhome ;
1296038   +   H12  =    -0.18875145195495 * S_Income  +     0.42230998482453 * S_Kidhome
1296039   +          +     0.16683404689723 * S_MntFishProducts
1296040   +          +     0.32072658929401 * S_MntFruits  +    -0.12341748032201 *
1296041   +        S_MntGoldProds  +    -1.56478754527255 * S_MntMeatProducts
1296042   +          +     0.20389084548968 * S_MntSweetProducts
1296043   +          +     0.95592931625509 * S_MntWines  +    -0.69996817353755 *
1296044   +        S_NumCatalogPurchases  +    -0.92709806328697 * S_NumDealsPurchases
1296045   +          +     1.27164659640366 * S_NumStorePurchases
1296046   +          +     1.02122194207802 * S_NumWebPurchases
1296047   +          +     -1.5111033436803 * S_NumWebVisitsMonth
1296048   +          +     1.63712814901544 * S_Recency  +     0.14205116840572 *
1296049   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.18875145195495 * S_Income + 0.42230998482453 * S_Kidhome + 
0.16683404689723 * S_MntFishProducts + 0.32072658929401 * S_MntFruits + -0.12341748032201 * 
S_MntGoldProds + -1.56478754527255 * S_MntMeatProducts + 0.20389084548968 * S_MntSweetProducts 
+ 0.95592931625509 * S_MntWines + -0.69996817353755 * S_NumCatalogPurchases + 
-0.92709806328697 * S_NumDealsPurchases + 1.27164659640366 * S_NumStorePurchases + 
1.02122194207802 * S_NumWebPurchases + -1.5111033436803 * S_NumWebVisitsMonth + 
1.63712814901544 * S_Recency + 0.14205116840572 * S_Teenhome ;
1296050   +   H13  =     1.02798705354163 * S_Income  +    -0.94411708781921 * S_Kidhome
1296051   +          +    -0.03345077166544 * S_MntFishProducts
1296052   +          +     0.00038440809349 * S_MntFruits  +    -0.05068379715712 *
1296053   +        S_MntGoldProds  +     1.00464705307582 * S_MntMeatProducts
1296054   +          +    -0.11948662500951 * S_MntSweetProducts
1296055   +          +    -0.52438819731252 * S_MntWines  +     0.98586904866769 *
1296056   +        S_NumCatalogPurchases  +     0.09015295226839 * S_NumDealsPurchases
1296057   +          +     0.22401914357376 * S_NumStorePurchases
1296058   +          +     0.04219877865976 * S_NumWebPurchases
1296059   +          +     1.21753334166036 * S_NumWebVisitsMonth
1296060   +          +    -1.33712212110081 * S_Recency  +    -0.47582856683655 *
1296061   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 1.02798705354163 * S_Income + -0.94411708781921 * S_Kidhome + 
-0.03345077166544 * S_MntFishProducts + 0.00038440809349 * S_MntFruits + -0.05068379715712 * 
S_MntGoldProds + 1.00464705307582 * S_MntMeatProducts + -0.11948662500951 * S_MntSweetProducts 
+ -0.52438819731252 * S_MntWines + 0.98586904866769 * S_NumCatalogPurchases + 0.09015295226839 
* S_NumDealsPurchases + 0.22401914357376 * S_NumStorePurchases + 0.04219877865976 * 
S_NumWebPurchases + 1.21753334166036 * S_NumWebVisitsMonth + -1.33712212110081 * S_Recency + 
-0.47582856683655 * S_Teenhome ;
1296062   +   H14  =     0.91431429848834 * S_Income  +    -1.16289676557574 * S_Kidhome
1296063   +          +     0.31175257038578 * S_MntFishProducts
1296064   +          +     0.08080436076271 * S_MntFruits  +     0.15252288175851 *
1296065   +        S_MntGoldProds  +     0.21603546207654 * S_MntMeatProducts
1296066   +          +      0.0927253053382 * S_MntSweetProducts
1296067   +          +     0.05865323888304 * S_MntWines  +    -0.23426953728277 *
1296068   +        S_NumCatalogPurchases  +    -0.46451908614085 * S_NumDealsPurchases
1296069   +          +    -0.12667606349662 * S_NumStorePurchases
1296070   +          +     0.30148374518724 * S_NumWebPurchases
1296071   +          +     0.48934229701658 * S_NumWebVisitsMonth
1296072   +          +    -0.83754390793251 * S_Recency  +     -0.4576645462819 *
1296073   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.91431429848834 * S_Income + -1.16289676557574 * S_Kidhome + 
0.31175257038578 * S_MntFishProducts + 0.08080436076271 * S_MntFruits + 0.15252288175851 * 
S_MntGoldProds + 0.21603546207654 * S_MntMeatProducts + 0.0927253053382 * S_MntSweetProducts + 
0.05865323888304 * S_MntWines + -0.23426953728277 * S_NumCatalogPurchases + -0.46451908614085 
* S_NumDealsPurchases + -0.12667606349662 * S_NumStorePurchases + 0.30148374518724 * 
S_NumWebPurchases + 0.48934229701658 * S_NumWebVisitsMonth + -0.83754390793251 * S_Recency + 
-0.4576645462819 * S_Teenhome ;
1296074   +   H15  =    -0.58161501095664 * S_Income  +     -1.0333658128614 * S_Kidhome
1296075   +          +     0.42646725119177 * S_MntFishProducts
1296076   +          +     -0.3264621401658 * S_MntFruits  +    -0.74616728524532 *
1296077   +        S_MntGoldProds  +    -0.97572068716712 * S_MntMeatProducts
1296078   +          +    -0.01493605582616 * S_MntSweetProducts
1296079   +          +      0.0311636632685 * S_MntWines  +    -1.68599903767191 *
1296080   +        S_NumCatalogPurchases  +    -1.25052648798307 * S_NumDealsPurchases
1296081   +          +     0.54256744091258 * S_NumStorePurchases
1296082   +          +     0.43065931458468 * S_NumWebPurchases
1296083   +          +      0.5935561420466 * S_NumWebVisitsMonth
1296084   +          +    -0.45183418369624 * S_Recency  +     0.19260512629844 *
1296085   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.58161501095664 * S_Income + -1.0333658128614 * S_Kidhome + 
0.42646725119177 * S_MntFishProducts + -0.3264621401658 * S_MntFruits + -0.74616728524532 * 
S_MntGoldProds + -0.97572068716712 * S_MntMeatProducts + -0.01493605582616 * 
S_MntSweetProducts + 0.0311636632685 * S_MntWines + -1.68599903767191 * S_NumCatalogPurchases 
+ -1.25052648798307 * S_NumDealsPurchases + 0.54256744091258 * S_NumStorePurchases + 
0.43065931458468 * S_NumWebPurchases + 0.5935561420466 * S_NumWebVisitsMonth + 
-0.45183418369624 * S_Recency + 0.19260512629844 * S_Teenhome ;
1296086   +   H11  = H11  +     0.61503950219838 * AcceptedCmp10
1296087   +          +     0.02945207091619 * AcceptedCmp20  +     0.99151950769472 *
1296088   +        AcceptedCmp30  +     1.08987060401718 * AcceptedCmp40
1296089   +          +     0.45427753773024 * AcceptedCmp50  +    -1.03533951966815 *
1296090   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.61503950219838 * AcceptedCmp10 + 0.02945207091619 * 
AcceptedCmp20 + 0.99151950769472 * AcceptedCmp30 + 1.08987060401718 * AcceptedCmp40 + 
0.45427753773024 * AcceptedCmp50 + -1.03533951966815 * Complain0 ;
1296091   +   H12  = H12  +     0.83823476190401 * AcceptedCmp10
1296092   +          +      1.0793719601418 * AcceptedCmp20  +     0.68538854946581 *
1296093   +        AcceptedCmp30  +     1.00297565893339 * AcceptedCmp40
1296094   +          +     0.24586379991786 * AcceptedCmp50  +     0.15471251255301 *
1296095   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.83823476190401 * AcceptedCmp10 + 1.0793719601418 * 
AcceptedCmp20 + 0.68538854946581 * AcceptedCmp30 + 1.00297565893339 * AcceptedCmp40 + 
0.24586379991786 * AcceptedCmp50 + 0.15471251255301 * Complain0 ;
1296096   +   H13  = H13  +    -0.41486094438907 * AcceptedCmp10
1296097   +          +    -0.76586628449839 * AcceptedCmp20  +    -0.59695459523693 *
1296098   +        AcceptedCmp30  +    -0.30262159911837 * AcceptedCmp40
1296099   +          +    -0.61141171124182 * AcceptedCmp50  +    -0.01086235188835 *
1296100   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.41486094438907 * AcceptedCmp10 + -0.76586628449839 * 
AcceptedCmp20 + -0.59695459523693 * AcceptedCmp30 + -0.30262159911837 * AcceptedCmp40 + 
-0.61141171124182 * AcceptedCmp50 + -0.01086235188835 * Complain0 ;
1296101   +   H14  = H14  +    -0.09662858884082 * AcceptedCmp10
1296102   +          +    -0.48515652524171 * AcceptedCmp20  +    -0.37421451374399 *
1296103   +        AcceptedCmp30  +    -0.52889523891817 * AcceptedCmp40
1296104   +          +    -0.73518448275357 * AcceptedCmp50  +    -0.36065830718672 *
1296105   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.09662858884082 * AcceptedCmp10 + -0.48515652524171 * 
AcceptedCmp20 + -0.37421451374399 * AcceptedCmp30 + -0.52889523891817 * AcceptedCmp40 + 
-0.73518448275357 * AcceptedCmp50 + -0.36065830718672 * Complain0 ;
1296106   +   H15  = H15  +      0.2985143092641 * AcceptedCmp10
1296107   +          +    -0.06881934778393 * AcceptedCmp20  +    -0.02609197044604 *
1296108   +        AcceptedCmp30  +    -0.79105657447885 * AcceptedCmp40
1296109   +          +    -0.02286855144948 * AcceptedCmp50  +     0.02884650192784 *
1296110   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.2985143092641 * AcceptedCmp10 + -0.06881934778393 * 
AcceptedCmp20 + -0.02609197044604 * AcceptedCmp30 + -0.79105657447885 * AcceptedCmp40 + 
-0.02286855144948 * AcceptedCmp50 + 0.02884650192784 * Complain0 ;
1296111   +   H11  = H11  +    -0.41169946146301 * Education2n_Cycle
1296112   +          +      0.8448273504441 * EducationBasic  +    -1.02497956377347 *
1296113   +        EducationGraduation  +     0.43998321745211 * EducationMaster
1296114   +          +    -0.85912688909911 * Marital_StatusDivorced
1296115   +          +     0.81561401465875 * Marital_StatusMarried
1296116   +          +    -0.58324403081542 * Marital_StatusSingle
1296117   +          +      0.9348017085106 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.41169946146301 * Education2n_Cycle + 0.8448273504441 * 
EducationBasic + -1.02497956377347 * EducationGraduation + 0.43998321745211 * EducationMaster 
+ -0.85912688909911 * Marital_StatusDivorced + 0.81561401465875 * Marital_StatusMarried + 
-0.58324403081542 * Marital_StatusSingle + 0.9348017085106 * Marital_StatusTogether ;
1296118   +   H12  = H12  +     0.22828129841893 * Education2n_Cycle
1296119   +          +     0.47579227804033 * EducationBasic  +    -0.18165301263195 *
1296120   +        EducationGraduation  +    -0.16143431016405 * EducationMaster
1296121   +          +    -0.34784695867287 * Marital_StatusDivorced
1296122   +          +    -0.18194022182247 * Marital_StatusMarried
1296123   +          +    -0.10633185904164 * Marital_StatusSingle
1296124   +          +     0.13136125361628 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.22828129841893 * Education2n_Cycle + 0.47579227804033 * 
EducationBasic + -0.18165301263195 * EducationGraduation + -0.16143431016405 * EducationMaster 
+ -0.34784695867287 * Marital_StatusDivorced + -0.18194022182247 * Marital_StatusMarried + 
-0.10633185904164 * Marital_StatusSingle + 0.13136125361628 * Marital_StatusTogether ;
1296125   +   H13  = H13  +     0.38705901043652 * Education2n_Cycle
1296126   +          +     0.19703188370189 * EducationBasic  +    -0.48062640599976 *
1296127   +        EducationGraduation  +     -0.3646621736273 * EducationMaster
1296128   +          +     0.61058752124466 * Marital_StatusDivorced
1296129   +          +    -1.38793808025141 * Marital_StatusMarried
1296130   +          +     1.10060737810944 * Marital_StatusSingle
1296131   +          +    -1.21250219018366 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.38705901043652 * Education2n_Cycle + 0.19703188370189 * 
EducationBasic + -0.48062640599976 * EducationGraduation + -0.3646621736273 * EducationMaster 
+ 0.61058752124466 * Marital_StatusDivorced + -1.38793808025141 * Marital_StatusMarried + 
1.10060737810944 * Marital_StatusSingle + -1.21250219018366 * Marital_StatusTogether ;
1296132   +   H14  = H14  +    -0.20576658115662 * Education2n_Cycle
1296133   +          +    -0.09185472034614 * EducationBasic  +    -0.43674210064447 *
1296134   +        EducationGraduation  +    -0.18154054746298 * EducationMaster
1296135   +          +     0.11973800573581 * Marital_StatusDivorced
1296136   +          +      -0.294635257911 * Marital_StatusMarried
1296137   +          +    -0.05399659601172 * Marital_StatusSingle
1296138   +          +     0.34207780606239 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.20576658115662 * Education2n_Cycle + -0.09185472034614 * 
EducationBasic + -0.43674210064447 * EducationGraduation + -0.18154054746298 * EducationMaster 
+ 0.11973800573581 * Marital_StatusDivorced + -0.294635257911 * Marital_StatusMarried + 
-0.05399659601172 * Marital_StatusSingle + 0.34207780606239 * Marital_StatusTogether ;
1296139   +   H15  = H15  +    -0.05553093684862 * Education2n_Cycle
1296140   +          +    -0.12898006732329 * EducationBasic  +    -0.16064118923518 *
1296141   +        EducationGraduation  +     -0.6431539624694 * EducationMaster
1296142   +          +     0.42838191659864 * Marital_StatusDivorced
1296143   +          +    -0.09150349181363 * Marital_StatusMarried
1296144   +          +    -0.33520164145276 * Marital_StatusSingle
1296145   +          +    -0.15253738713197 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.05553093684862 * Education2n_Cycle + -0.12898006732329 * 
EducationBasic + -0.16064118923518 * EducationGraduation + -0.6431539624694 * EducationMaster 
+ 0.42838191659864 * Marital_StatusDivorced + -0.09150349181363 * Marital_StatusMarried + 
-0.33520164145276 * Marital_StatusSingle + -0.15253738713197 * Marital_StatusTogether ;
1296146   +   H11  =     -1.5079478405973 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.5079478405973 + H11 ;
1296147   +   H12  =     0.03014958331993 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.03014958331993 + H12 ;
1296148   +   H13  =    -1.78098671165572 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.78098671165572 + H13 ;
1296149   +   H14  =     0.22179429743277 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.22179429743277 + H14 ;
1296150   +   H15  =    -2.06602107857898 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -2.06602107857898 + H15 ;
1296151   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1296152   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1296153   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1296154   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1296155   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1296156   +END;
MPRINT(EM_DIAGRAM):   END;
1296157   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1296158   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1296159   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1296160   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1296161   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1296162   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1296163   +END;
MPRINT(EM_DIAGRAM):   END;
1296164   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1296165   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1296166   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1296167   +
1296168   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1296169   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1296170   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1296171   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1296172   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1296173   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1296174   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1296175   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1296176   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1296177   +end;
MPRINT(EM_DIAGRAM):   end;
1296178   +else do;
MPRINT(EM_DIAGRAM):   else do;
1296179   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1296180   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1296181   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1296182   +   end;
MPRINT(EM_DIAGRAM):   end;
1296183   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1296184   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1296185   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1296186   +   end;
MPRINT(EM_DIAGRAM):   end;
1296187   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1296188   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1296189   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1296190   +   end;
MPRINT(EM_DIAGRAM):   end;
1296191   +end;
MPRINT(EM_DIAGRAM):   end;
1296192   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1296193   +   P_DepVar1  =    -4.55666337815854 * H11  +    -4.04792544554995 * H12
1296194   +          +     4.56148127429284 * H13  +     2.36841344452371 * H14
1296195   +          +    -3.07371010011749 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.55666337815854 * H11 + -4.04792544554995 * H12 + 
4.56148127429284 * H13 + 2.36841344452371 * H14 + -3.07371010011749 * H15 ;
1296196   +   P_DepVar1  =    -0.83283406236136 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.83283406236136 + P_DepVar1 ;
1296197   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1296198   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1296199   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1296200   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1296201   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1296202   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1296203   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1296204   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1296205   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1296206   +END;
MPRINT(EM_DIAGRAM):   END;
1296207   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1296208   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1296209   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1296210   +END;
MPRINT(EM_DIAGRAM):   END;
1296211   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1296212   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1296213   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1296214   +END;
MPRINT(EM_DIAGRAM):   END;
1296215   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1296216   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1296217   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1296218   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1296219   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1296220   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1296221   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1296222   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1296223   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1296224   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1296225   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1296226   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1296227   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1296228   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1296229   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1296230   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1296231   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1296232   +END;
MPRINT(EM_DIAGRAM):   END;
1296233   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1296234   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1296235   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1296236   +drop
1296237   +H11
1296238   +H12
1296239   +H13
1296240   +H14
1296241   +H15
1296242   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
1296243   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1296244   +* Renaming variables for Neural34;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural34;
1296245   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1296246   +* Renaming Posterior variables for Neural34;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural34;
1296247   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1296248   +drop Neural34_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural34_P_DepVar1;
1296249   +Neural34_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural34_P_DepVar1 = P_DepVar1;
1296250   +drop Neural34_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural34_P_DepVar0;
1296251   +Neural34_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural34_P_DepVar0 = P_DepVar0;
1296252   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1296253   +* Renaming _WARN_ variable for Neural34;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural34;
1296254   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1296255   +length Neural34_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural34_WARN_ $4;
1296256   +drop Neural34_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural34_WARN_;
1296257   +Neural34_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural34_WARN_ = _WARN_;
1296258   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1296259   +* Ensmbl22: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Scoring Code of model 5 of 7;
1296260   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1296261   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1296262   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1296263   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1296264   +* NODE: Neural35;
MPRINT(EM_DIAGRAM):   * NODE: Neural35;
1296265   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1296266   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1296267   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1296268   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1296269   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1296270   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1296271   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1296272   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1296273   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1296274   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1296275   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1296276   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1296277   +LENGTH _WARN_ $4
1296278   +      F_DepVar  $ 12
1296279   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1296280   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1296281   +
1296282   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1296283   +
1296284   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1296285   +
1296286   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1296287   +
1296288   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1296289   +
1296290   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1296291   +
1296292   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1296293   +
1296294   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1296295   +
1296296   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1296297   +
1296298   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1296299   +
1296300   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1296301   +
1296302   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1296303   +
1296304   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1296305   +
1296306   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1296307   +
1296308   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1296309   +
1296310   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1296311   +
1296312   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1296313   +
1296314   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1296315   +
1296316   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1296317   +
1296318   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1296319   +
1296320   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1296321   +
1296322   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1296323   +
1296324   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1296325   +
1296326   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1296327   +
1296328   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1296329   +
1296330   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1296331   +
1296332   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1296333   +
1296334   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1296335   +
1296336   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1296337   +
1296338   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1296339   +
1296340   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1296341   +
1296342   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1296343   +
1296344   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1296345   +
1296346   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1296347   +
1296348   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1296349   +
1296350   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1296351   +
1296352   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1296353   +
1296354   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1296355   +
1296356   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1296357   +
1296358   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1296359   +
1296360   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1296361   +
1296362   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1296363   +
1296364   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1296365   +
1296366   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1296367   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1296368   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1296369   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1296370   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1296371   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1296372   +end;
MPRINT(EM_DIAGRAM):   end;
1296373   +else do;
MPRINT(EM_DIAGRAM):   else do;
1296374   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1296375   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1296376   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1296377   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1296378   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1296379   +   end;
MPRINT(EM_DIAGRAM):   end;
1296380   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1296381   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1296382   +   end;
MPRINT(EM_DIAGRAM):   end;
1296383   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1296384   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1296385   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1296386   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1296387   +   end;
MPRINT(EM_DIAGRAM):   end;
1296388   +end;
MPRINT(EM_DIAGRAM):   end;
1296389   +
1296390   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1296391   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1296392   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1296393   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1296394   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1296395   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1296396   +end;
MPRINT(EM_DIAGRAM):   end;
1296397   +else do;
MPRINT(EM_DIAGRAM):   else do;
1296398   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1296399   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1296400   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1296401   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1296402   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1296403   +   end;
MPRINT(EM_DIAGRAM):   end;
1296404   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1296405   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1296406   +   end;
MPRINT(EM_DIAGRAM):   end;
1296407   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1296408   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1296409   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1296410   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1296411   +   end;
MPRINT(EM_DIAGRAM):   end;
1296412   +end;
MPRINT(EM_DIAGRAM):   end;
1296413   +
1296414   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1296415   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1296416   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1296417   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1296418   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1296419   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1296420   +end;
MPRINT(EM_DIAGRAM):   end;
1296421   +else do;
MPRINT(EM_DIAGRAM):   else do;
1296422   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1296423   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1296424   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1296425   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1296426   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1296427   +   end;
MPRINT(EM_DIAGRAM):   end;
1296428   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1296429   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1296430   +   end;
MPRINT(EM_DIAGRAM):   end;
1296431   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1296432   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1296433   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1296434   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1296435   +   end;
MPRINT(EM_DIAGRAM):   end;
1296436   +end;
MPRINT(EM_DIAGRAM):   end;
1296437   +
1296438   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1296439   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1296440   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1296441   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1296442   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1296443   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1296444   +end;
MPRINT(EM_DIAGRAM):   end;
1296445   +else do;
MPRINT(EM_DIAGRAM):   else do;
1296446   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1296447   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1296448   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1296449   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1296450   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1296451   +   end;
MPRINT(EM_DIAGRAM):   end;
1296452   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1296453   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1296454   +   end;
MPRINT(EM_DIAGRAM):   end;
1296455   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1296456   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1296457   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1296458   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1296459   +   end;
MPRINT(EM_DIAGRAM):   end;
1296460   +end;
MPRINT(EM_DIAGRAM):   end;
1296461   +
1296462   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1296463   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1296464   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1296465   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1296466   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1296467   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1296468   +end;
MPRINT(EM_DIAGRAM):   end;
1296469   +else do;
MPRINT(EM_DIAGRAM):   else do;
1296470   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1296471   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1296472   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1296473   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1296474   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1296475   +   end;
MPRINT(EM_DIAGRAM):   end;
1296476   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1296477   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1296478   +   end;
MPRINT(EM_DIAGRAM):   end;
1296479   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1296480   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1296481   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1296482   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1296483   +   end;
MPRINT(EM_DIAGRAM):   end;
1296484   +end;
MPRINT(EM_DIAGRAM):   end;
1296485   +
1296486   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1296487   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1296488   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1296489   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1296490   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1296491   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1296492   +end;
MPRINT(EM_DIAGRAM):   end;
1296493   +else do;
MPRINT(EM_DIAGRAM):   else do;
1296494   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1296495   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1296496   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1296497   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1296498   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1296499   +   end;
MPRINT(EM_DIAGRAM):   end;
1296500   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1296501   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1296502   +   end;
MPRINT(EM_DIAGRAM):   end;
1296503   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1296504   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1296505   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1296506   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1296507   +   end;
MPRINT(EM_DIAGRAM):   end;
1296508   +end;
MPRINT(EM_DIAGRAM):   end;
1296509   +
1296510   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1296511   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1296512   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1296513   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1296514   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1296515   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1296516   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1296517   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1296518   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1296519   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1296520   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1296521   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1296522   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1296523   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1296524   +end;
MPRINT(EM_DIAGRAM):   end;
1296525   +else do;
MPRINT(EM_DIAGRAM):   else do;
1296526   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1296527   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1296528   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1296529   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1296530   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1296531   +   end;
MPRINT(EM_DIAGRAM):   end;
1296532   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1296533   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1296534   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1296535   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1296536   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1296537   +   end;
MPRINT(EM_DIAGRAM):   end;
1296538   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1296539   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1296540   +   end;
MPRINT(EM_DIAGRAM):   end;
1296541   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1296542   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1296543   +   end;
MPRINT(EM_DIAGRAM):   end;
1296544   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1296545   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1296546   +   end;
MPRINT(EM_DIAGRAM):   end;
1296547   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1296548   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1296549   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1296550   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1296551   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1296552   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1296553   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1296554   +   end;
MPRINT(EM_DIAGRAM):   end;
1296555   +end;
MPRINT(EM_DIAGRAM):   end;
1296556   +
1296557   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1296558   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1296559   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1296560   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1296561   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1296562   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1296563   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1296564   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1296565   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1296566   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1296567   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1296568   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1296569   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1296570   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1296571   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1296572   +end;
MPRINT(EM_DIAGRAM):   end;
1296573   +else do;
MPRINT(EM_DIAGRAM):   else do;
1296574   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1296575   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1296576   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1296577   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1296578   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1296579   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1296580   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1296581   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1296582   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1296583   +         end;
MPRINT(EM_DIAGRAM):   end;
1296584   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1296585   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1296586   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1296587   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1296588   +            end;
MPRINT(EM_DIAGRAM):   end;
1296589   +         end;
MPRINT(EM_DIAGRAM):   end;
1296590   +      end;
MPRINT(EM_DIAGRAM):   end;
1296591   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1296592   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1296593   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1296594   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1296595   +         end;
MPRINT(EM_DIAGRAM):   end;
1296596   +      end;
MPRINT(EM_DIAGRAM):   end;
1296597   +   end;
MPRINT(EM_DIAGRAM):   end;
1296598   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1296599   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1296600   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1296601   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1296602   +      end;
MPRINT(EM_DIAGRAM):   end;
1296603   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1296604   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1296605   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1296606   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1296607   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1296608   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1296609   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1296610   +         end;
MPRINT(EM_DIAGRAM):   end;
1296611   +      end;
MPRINT(EM_DIAGRAM):   end;
1296612   +   end;
MPRINT(EM_DIAGRAM):   end;
1296613   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1296614   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1296615   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1296616   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1296617   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1296618   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1296619   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1296620   +   end;
MPRINT(EM_DIAGRAM):   end;
1296621   +end;
MPRINT(EM_DIAGRAM):   end;
1296622   +
1296623   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1296624   +*** Checking missing input Interval
1296625   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1296626   +
1296627   +IF NMISS(
1296628   +   Income ,
1296629   +   Kidhome ,
1296630   +   MntFishProducts ,
1296631   +   MntFruits ,
1296632   +   MntGoldProds ,
1296633   +   MntMeatProducts ,
1296634   +   MntSweetProducts ,
1296635   +   MntWines ,
1296636   +   NumCatalogPurchases ,
1296637   +   NumDealsPurchases ,
1296638   +   NumStorePurchases ,
1296639   +   NumWebPurchases ,
1296640   +   NumWebVisitsMonth ,
1296641   +   Recency ,
1296642   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
1296643   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1296644   +
1296645   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1296646   +END;
MPRINT(EM_DIAGRAM):   END;
1296647   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1296648   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1296649   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1296650   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1296651   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1296652   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1296653   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1296654   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1296655   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1296656   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1296657   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1296658   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1296659   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1296660   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1296661   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1296662   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1296663   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1296664   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1296665   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1296666   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1296667   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1296668   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1296669   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1296670   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1296671   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1296672   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1296673   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1296674   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1296675   +END;
MPRINT(EM_DIAGRAM):   END;
1296676   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1296677   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1296678   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1296679   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1296680   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1296681   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1296682   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1296683   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1296684   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1296685   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1296686   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1296687   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1296688   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1296689   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1296690   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1296691   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1296692   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1296693   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1296694   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1296695   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1296696   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1296697   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1296698   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1296699   +   ELSE S_NumCatalogPurchases
1296700   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1296701   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1296702   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1296703   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1296704   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1296705   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1296706   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1296707   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1296708   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1296709   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1296710   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1296711   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1296712   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1296713   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1296714   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1296715   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1296716   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1296717   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1296718   +END;
MPRINT(EM_DIAGRAM):   END;
1296719   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1296720   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1296721   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1296722   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1296723   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1296724   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1296725   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1296726   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1296727   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1296728   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1296729   +   H11  =     0.87660114046125 * S_Income  +     -0.7994451897827 * S_Kidhome
1296730   +          +    -0.08967295716195 * S_MntFishProducts
1296731   +          +     0.03184635437516 * S_MntFruits  +    -0.13860895575438 *
1296732   +        S_MntGoldProds  +     0.55790460748169 * S_MntMeatProducts
1296733   +          +    -0.02806094557115 * S_MntSweetProducts
1296734   +          +    -0.14537763592724 * S_MntWines  +     0.76891266523847 *
1296735   +        S_NumCatalogPurchases  +     0.16842007461305 * S_NumDealsPurchases
1296736   +          +     0.25137876058262 * S_NumStorePurchases
1296737   +          +    -0.07865442401292 * S_NumWebPurchases
1296738   +          +     1.03197398967259 * S_NumWebVisitsMonth
1296739   +          +    -1.26907156503759 * S_Recency  +    -0.76016893316351 *
1296740   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.87660114046125 * S_Income + -0.7994451897827 * S_Kidhome + 
-0.08967295716195 * S_MntFishProducts + 0.03184635437516 * S_MntFruits + -0.13860895575438 * 
S_MntGoldProds + 0.55790460748169 * S_MntMeatProducts + -0.02806094557115 * S_MntSweetProducts 
+ -0.14537763592724 * S_MntWines + 0.76891266523847 * S_NumCatalogPurchases + 0.16842007461305 
* S_NumDealsPurchases + 0.25137876058262 * S_NumStorePurchases + -0.07865442401292 * 
S_NumWebPurchases + 1.03197398967259 * S_NumWebVisitsMonth + -1.26907156503759 * S_Recency + 
-0.76016893316351 * S_Teenhome ;
1296741   +   H12  =     0.37295000114468 * S_Income  +    -0.12834211496575 * S_Kidhome
1296742   +          +     0.19312392388912 * S_MntFishProducts
1296743   +          +      0.1561688289137 * S_MntFruits  +     0.04004810938796 *
1296744   +        S_MntGoldProds  +     0.32599201739588 * S_MntMeatProducts
1296745   +          +       0.204174263605 * S_MntSweetProducts
1296746   +          +    -0.11560784817014 * S_MntWines  +     0.12255073568725 *
1296747   +        S_NumCatalogPurchases  +    -0.05543734180218 * S_NumDealsPurchases
1296748   +          +     0.07747830335769 * S_NumStorePurchases
1296749   +          +     0.07960837555191 * S_NumWebPurchases
1296750   +          +     0.02351602389122 * S_NumWebVisitsMonth
1296751   +          +     -0.2840853952427 * S_Recency  +    -0.47421627761687 *
1296752   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.37295000114468 * S_Income + -0.12834211496575 * S_Kidhome + 
0.19312392388912 * S_MntFishProducts + 0.1561688289137 * S_MntFruits + 0.04004810938796 * 
S_MntGoldProds + 0.32599201739588 * S_MntMeatProducts + 0.204174263605 * S_MntSweetProducts + 
-0.11560784817014 * S_MntWines + 0.12255073568725 * S_NumCatalogPurchases + -0.05543734180218 
* S_NumDealsPurchases + 0.07747830335769 * S_NumStorePurchases + 0.07960837555191 * 
S_NumWebPurchases + 0.02351602389122 * S_NumWebVisitsMonth + -0.2840853952427 * S_Recency + 
-0.47421627761687 * S_Teenhome ;
1296753   +   H13  =    -0.33428925248315 * S_Income  +    -0.03845622730742 * S_Kidhome
1296754   +          +     0.18733919794636 * S_MntFishProducts
1296755   +          +     0.45907982190052 * S_MntFruits  +    -0.48776616433719 *
1296756   +        S_MntGoldProds  +    -0.41340481007204 * S_MntMeatProducts
1296757   +          +     0.42514606159239 * S_MntSweetProducts
1296758   +          +     0.20038001368787 * S_MntWines  +    -1.21708501803782 *
1296759   +        S_NumCatalogPurchases  +    -1.06820061274533 * S_NumDealsPurchases
1296760   +          +     0.36582106462789 * S_NumStorePurchases
1296761   +          +     0.04244777020435 * S_NumWebPurchases
1296762   +          +    -0.24296342902503 * S_NumWebVisitsMonth
1296763   +          +     0.27451716762947 * S_Recency  +     0.13110477325277 *
1296764   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.33428925248315 * S_Income + -0.03845622730742 * S_Kidhome + 
0.18733919794636 * S_MntFishProducts + 0.45907982190052 * S_MntFruits + -0.48776616433719 * 
S_MntGoldProds + -0.41340481007204 * S_MntMeatProducts + 0.42514606159239 * S_MntSweetProducts 
+ 0.20038001368787 * S_MntWines + -1.21708501803782 * S_NumCatalogPurchases + 
-1.06820061274533 * S_NumDealsPurchases + 0.36582106462789 * S_NumStorePurchases + 
0.04244777020435 * S_NumWebPurchases + -0.24296342902503 * S_NumWebVisitsMonth + 
0.27451716762947 * S_Recency + 0.13110477325277 * S_Teenhome ;
1296765   +   H14  =    -0.70493412542585 * S_Income  +     0.41202796606799 * S_Kidhome
1296766   +          +     0.05986489897572 * S_MntFishProducts
1296767   +          +    -0.05040531715469 * S_MntFruits  +       0.051068387592 *
1296768   +        S_MntGoldProds  +    -0.13581881662481 * S_MntMeatProducts
1296769   +          +    -0.05513370461072 * S_MntSweetProducts
1296770   +          +     0.77472084468819 * S_MntWines  +    -0.03211788969126 *
1296771   +        S_NumCatalogPurchases  +    -0.24097486430988 * S_NumDealsPurchases
1296772   +          +     0.64364674828841 * S_NumStorePurchases
1296773   +          +     0.15084748708424 * S_NumWebPurchases
1296774   +          +    -0.94144998356377 * S_NumWebVisitsMonth
1296775   +          +     1.16778338364599 * S_Recency  +     0.32089861635238 *
1296776   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.70493412542585 * S_Income + 0.41202796606799 * S_Kidhome + 
0.05986489897572 * S_MntFishProducts + -0.05040531715469 * S_MntFruits + 0.051068387592 * 
S_MntGoldProds + -0.13581881662481 * S_MntMeatProducts + -0.05513370461072 * 
S_MntSweetProducts + 0.77472084468819 * S_MntWines + -0.03211788969126 * S_NumCatalogPurchases 
+ -0.24097486430988 * S_NumDealsPurchases + 0.64364674828841 * S_NumStorePurchases + 
0.15084748708424 * S_NumWebPurchases + -0.94144998356377 * S_NumWebVisitsMonth + 
1.16778338364599 * S_Recency + 0.32089861635238 * S_Teenhome ;
1296777   +   H15  =    -0.15703510827879 * S_Income  +    -0.30977841002562 * S_Kidhome
1296778   +          +    -0.14543196273578 * S_MntFishProducts
1296779   +          +     0.32223695896711 * S_MntFruits  +    -0.31846203211698 *
1296780   +        S_MntGoldProds  +     -1.4125160823105 * S_MntMeatProducts
1296781   +          +     0.49374793444169 * S_MntSweetProducts
1296782   +          +     0.39699716010219 * S_MntWines  +    -0.88140331687645 *
1296783   +        S_NumCatalogPurchases  +    -0.87657222813687 * S_NumDealsPurchases
1296784   +          +     1.23754786782746 * S_NumStorePurchases
1296785   +          +     1.11316667348511 * S_NumWebPurchases
1296786   +          +    -1.08592446439781 * S_NumWebVisitsMonth
1296787   +          +     0.66958517589542 * S_Recency  +     0.06799032788481 *
1296788   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.15703510827879 * S_Income + -0.30977841002562 * S_Kidhome + 
-0.14543196273578 * S_MntFishProducts + 0.32223695896711 * S_MntFruits + -0.31846203211698 * 
S_MntGoldProds + -1.4125160823105 * S_MntMeatProducts + 0.49374793444169 * S_MntSweetProducts 
+ 0.39699716010219 * S_MntWines + -0.88140331687645 * S_NumCatalogPurchases + 
-0.87657222813687 * S_NumDealsPurchases + 1.23754786782746 * S_NumStorePurchases + 
1.11316667348511 * S_NumWebPurchases + -1.08592446439781 * S_NumWebVisitsMonth + 
0.66958517589542 * S_Recency + 0.06799032788481 * S_Teenhome ;
1296789   +   H16  =    -0.10360901553583 * S_Income  +     0.39257497240865 * S_Kidhome
1296790   +          +     0.29549884005341 * S_MntFishProducts
1296791   +          +     0.04922491353914 * S_MntFruits  +     -0.1412659458221 *
1296792   +        S_MntGoldProds  +    -0.12361454534126 * S_MntMeatProducts
1296793   +          +    -0.11909215986981 * S_MntSweetProducts
1296794   +          +     0.11430484977092 * S_MntWines  +    -0.66235553839539 *
1296795   +        S_NumCatalogPurchases  +     0.17261763180198 * S_NumDealsPurchases
1296796   +          +     0.30109334594548 * S_NumStorePurchases
1296797   +          +     0.01985762767489 * S_NumWebPurchases
1296798   +          +     0.44965133281333 * S_NumWebVisitsMonth
1296799   +          +     0.32338634259192 * S_Recency  +    -0.04032956941805 *
1296800   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.10360901553583 * S_Income + 0.39257497240865 * S_Kidhome + 
0.29549884005341 * S_MntFishProducts + 0.04922491353914 * S_MntFruits + -0.1412659458221 * 
S_MntGoldProds + -0.12361454534126 * S_MntMeatProducts + -0.11909215986981 * 
S_MntSweetProducts + 0.11430484977092 * S_MntWines + -0.66235553839539 * S_NumCatalogPurchases 
+ 0.17261763180198 * S_NumDealsPurchases + 0.30109334594548 * S_NumStorePurchases + 
0.01985762767489 * S_NumWebPurchases + 0.44965133281333 * S_NumWebVisitsMonth + 
0.32338634259192 * S_Recency + -0.04032956941805 * S_Teenhome ;
1296801   +   H11  = H11  +    -0.23026310289024 * AcceptedCmp10
1296802   +          +    -0.82550012364234 * AcceptedCmp20  +    -0.67764228269441 *
1296803   +        AcceptedCmp30  +    -0.51547666117685 * AcceptedCmp40
1296804   +          +    -0.36424958084824 * AcceptedCmp50  +       0.119862855783 *
1296805   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.23026310289024 * AcceptedCmp10 + -0.82550012364234 * 
AcceptedCmp20 + -0.67764228269441 * AcceptedCmp30 + -0.51547666117685 * AcceptedCmp40 + 
-0.36424958084824 * AcceptedCmp50 + 0.119862855783 * Complain0 ;
1296806   +   H12  = H12  +     0.02722288857426 * AcceptedCmp10
1296807   +          +      0.1236576068539 * AcceptedCmp20  +    -0.31265425960737 *
1296808   +        AcceptedCmp30  +    -0.25076565034266 * AcceptedCmp40
1296809   +          +    -0.20158659730872 * AcceptedCmp50  +    -0.43687103612629 *
1296810   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.02722288857426 * AcceptedCmp10 + 0.1236576068539 * 
AcceptedCmp20 + -0.31265425960737 * AcceptedCmp30 + -0.25076565034266 * AcceptedCmp40 + 
-0.20158659730872 * AcceptedCmp50 + -0.43687103612629 * Complain0 ;
1296811   +   H13  = H13  +     0.21852176280571 * AcceptedCmp10
1296812   +          +     0.01727991436107 * AcceptedCmp20  +     0.19303261094625 *
1296813   +        AcceptedCmp30  +    -0.65492191560509 * AcceptedCmp40
1296814   +          +    -0.09636750660684 * AcceptedCmp50  +     0.07579128571046 *
1296815   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.21852176280571 * AcceptedCmp10 + 0.01727991436107 * 
AcceptedCmp20 + 0.19303261094625 * AcceptedCmp30 + -0.65492191560509 * AcceptedCmp40 + 
-0.09636750660684 * AcceptedCmp50 + 0.07579128571046 * Complain0 ;
1296816   +   H14  = H14  +     0.20819294353855 * AcceptedCmp10
1296817   +          +      0.5159102831901 * AcceptedCmp20  +     0.55295587458643 *
1296818   +        AcceptedCmp30  +     0.80682431419623 * AcceptedCmp40
1296819   +          +     0.74007057798158 * AcceptedCmp50  +     -0.4573052390807 *
1296820   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.20819294353855 * AcceptedCmp10 + 0.5159102831901 * 
AcceptedCmp20 + 0.55295587458643 * AcceptedCmp30 + 0.80682431419623 * AcceptedCmp40 + 
0.74007057798158 * AcceptedCmp50 + -0.4573052390807 * Complain0 ;
1296821   +   H15  = H15  +     1.26330939420524 * AcceptedCmp10
1296822   +          +     0.29494505935793 * AcceptedCmp20  +     0.25561322032419 *
1296823   +        AcceptedCmp30  +     0.50102236777897 * AcceptedCmp40
1296824   +          +     0.20696267245027 * AcceptedCmp50  +    -0.00849145233901 *
1296825   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 1.26330939420524 * AcceptedCmp10 + 0.29494505935793 * 
AcceptedCmp20 + 0.25561322032419 * AcceptedCmp30 + 0.50102236777897 * AcceptedCmp40 + 
0.20696267245027 * AcceptedCmp50 + -0.00849145233901 * Complain0 ;
1296826   +   H16  = H16  +     0.03638428330381 * AcceptedCmp10
1296827   +          +     0.27994215452657 * AcceptedCmp20  +    -0.03861840445025 *
1296828   +        AcceptedCmp30  +      0.3398057347433 * AcceptedCmp40
1296829   +          +    -0.00738335957724 * AcceptedCmp50  +      0.0447804375799 *
1296830   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.03638428330381 * AcceptedCmp10 + 0.27994215452657 * 
AcceptedCmp20 + -0.03861840445025 * AcceptedCmp30 + 0.3398057347433 * AcceptedCmp40 + 
-0.00738335957724 * AcceptedCmp50 + 0.0447804375799 * Complain0 ;
1296831   +   H11  = H11  +     0.27482405283962 * Education2n_Cycle
1296832   +          +     0.11084012456612 * EducationBasic  +    -0.23835071987159 *
1296833   +        EducationGraduation  +    -0.10167082180552 * EducationMaster
1296834   +          +     0.51015833145636 * Marital_StatusDivorced
1296835   +          +     -1.1653662063616 * Marital_StatusMarried
1296836   +          +     1.19396547750441 * Marital_StatusSingle
1296837   +          +    -0.99605751789992 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.27482405283962 * Education2n_Cycle + 0.11084012456612 * 
EducationBasic + -0.23835071987159 * EducationGraduation + -0.10167082180552 * EducationMaster 
+ 0.51015833145636 * Marital_StatusDivorced + -1.1653662063616 * Marital_StatusMarried + 
1.19396547750441 * Marital_StatusSingle + -0.99605751789992 * Marital_StatusTogether ;
1296838   +   H12  = H12  +    -0.05268347704739 * Education2n_Cycle
1296839   +          +     0.19362065968028 * EducationBasic  +    -0.26784257195414 *
1296840   +        EducationGraduation  +     0.16650577465959 * EducationMaster
1296841   +          +     0.09154288513995 * Marital_StatusDivorced
1296842   +          +     0.06725684628382 * Marital_StatusMarried
1296843   +          +     0.11327659191494 * Marital_StatusSingle
1296844   +          +     0.01793778876811 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.05268347704739 * Education2n_Cycle + 0.19362065968028 * 
EducationBasic + -0.26784257195414 * EducationGraduation + 0.16650577465959 * EducationMaster 
+ 0.09154288513995 * Marital_StatusDivorced + 0.06725684628382 * Marital_StatusMarried + 
0.11327659191494 * Marital_StatusSingle + 0.01793778876811 * Marital_StatusTogether ;
1296845   +   H13  = H13  +     -0.1027084329077 * Education2n_Cycle
1296846   +          +    -0.01342449140757 * EducationBasic  +    -0.35627920427273 *
1296847   +        EducationGraduation  +    -0.05554656531793 * EducationMaster
1296848   +          +     0.37591653615852 * Marital_StatusDivorced
1296849   +          +    -0.05024236790132 * Marital_StatusMarried
1296850   +          +    -0.28317154997144 * Marital_StatusSingle
1296851   +          +    -0.19247490223101 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.1027084329077 * Education2n_Cycle + -0.01342449140757 * 
EducationBasic + -0.35627920427273 * EducationGraduation + -0.05554656531793 * EducationMaster 
+ 0.37591653615852 * Marital_StatusDivorced + -0.05024236790132 * Marital_StatusMarried + 
-0.28317154997144 * Marital_StatusSingle + -0.19247490223101 * Marital_StatusTogether ;
1296852   +   H14  = H14  +     -0.4162491480577 * Education2n_Cycle
1296853   +          +     0.38075572764074 * EducationBasic  +    -0.28169469529121 *
1296854   +        EducationGraduation  +       0.638986138084 * EducationMaster
1296855   +          +    -0.44885292450558 * Marital_StatusDivorced
1296856   +          +     0.78958791519299 * Marital_StatusMarried
1296857   +          +    -0.09688714431356 * Marital_StatusSingle
1296858   +          +     0.84239030196202 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.4162491480577 * Education2n_Cycle + 0.38075572764074 * 
EducationBasic + -0.28169469529121 * EducationGraduation + 0.638986138084 * EducationMaster + 
-0.44885292450558 * Marital_StatusDivorced + 0.78958791519299 * Marital_StatusMarried + 
-0.09688714431356 * Marital_StatusSingle + 0.84239030196202 * Marital_StatusTogether ;
1296859   +   H15  = H15  +     0.33126657974568 * Education2n_Cycle
1296860   +          +     0.44539039262703 * EducationBasic  +    -0.09154902903865 *
1296861   +        EducationGraduation  +    -0.26400363440725 * EducationMaster
1296862   +          +    -0.30801073895989 * Marital_StatusDivorced
1296863   +          +     -0.1285150749223 * Marital_StatusMarried
1296864   +          +     0.06775542164414 * Marital_StatusSingle
1296865   +          +    -0.13032366945766 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.33126657974568 * Education2n_Cycle + 0.44539039262703 * 
EducationBasic + -0.09154902903865 * EducationGraduation + -0.26400363440725 * EducationMaster 
+ -0.30801073895989 * Marital_StatusDivorced + -0.1285150749223 * Marital_StatusMarried + 
0.06775542164414 * Marital_StatusSingle + -0.13032366945766 * Marital_StatusTogether ;
1296866   +   H16  = H16  +     0.02030175222681 * Education2n_Cycle
1296867   +          +    -0.19579401096879 * EducationBasic  +      0.2070703930869 *
1296868   +        EducationGraduation  +    -0.40706983167068 * EducationMaster
1296869   +          +     0.22193599090368 * Marital_StatusDivorced
1296870   +          +    -0.54544672042168 * Marital_StatusMarried
1296871   +          +    -0.02237436019864 * Marital_StatusSingle
1296872   +          +    -0.21979468164854 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.02030175222681 * Education2n_Cycle + -0.19579401096879 * 
EducationBasic + 0.2070703930869 * EducationGraduation + -0.40706983167068 * EducationMaster + 
0.22193599090368 * Marital_StatusDivorced + -0.54544672042168 * Marital_StatusMarried + 
-0.02237436019864 * Marital_StatusSingle + -0.21979468164854 * Marital_StatusTogether ;
1296873   +   H11  =    -1.24550293901788 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.24550293901788 + H11 ;
1296874   +   H12  =     0.36762263942809 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.36762263942809 + H12 ;
1296875   +   H13  =     0.07010867577103 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.07010867577103 + H13 ;
1296876   +   H14  =    -1.94014549272156 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -1.94014549272156 + H14 ;
1296877   +   H15  =     0.17666656180153 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.17666656180153 + H15 ;
1296878   +   H16  =    -1.64626406576709 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.64626406576709 + H16 ;
1296879   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1296880   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1296881   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1296882   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1296883   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1296884   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1296885   +END;
MPRINT(EM_DIAGRAM):   END;
1296886   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1296887   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1296888   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1296889   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1296890   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1296891   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1296892   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1296893   +END;
MPRINT(EM_DIAGRAM):   END;
1296894   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1296895   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1296896   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1296897   +
1296898   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1296899   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1296900   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1296901   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1296902   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1296903   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1296904   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1296905   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1296906   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1296907   +end;
MPRINT(EM_DIAGRAM):   end;
1296908   +else do;
MPRINT(EM_DIAGRAM):   else do;
1296909   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1296910   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1296911   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1296912   +   end;
MPRINT(EM_DIAGRAM):   end;
1296913   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1296914   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1296915   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1296916   +   end;
MPRINT(EM_DIAGRAM):   end;
1296917   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1296918   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1296919   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1296920   +   end;
MPRINT(EM_DIAGRAM):   end;
1296921   +end;
MPRINT(EM_DIAGRAM):   end;
1296922   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1296923   +   P_DepVar1  =     4.21126046696691 * H11  +      0.6565061288056 * H12
1296924   +          +    -1.92484011508628 * H13  +    -3.74020722142387 * H14
1296925   +          +    -3.27353026762143 * H15  +     -1.2596922869974 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.21126046696691 * H11 + 0.6565061288056 * H12 + 
-1.92484011508628 * H13 + -3.74020722142387 * H14 + -3.27353026762143 * H15 + -1.2596922869974 
* H16 ;
1296926   +   P_DepVar1  =    -1.36806658950323 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.36806658950323 + P_DepVar1 ;
1296927   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1296928   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1296929   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1296930   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1296931   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1296932   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1296933   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1296934   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1296935   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1296936   +END;
MPRINT(EM_DIAGRAM):   END;
1296937   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1296938   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1296939   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1296940   +END;
MPRINT(EM_DIAGRAM):   END;
1296941   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1296942   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1296943   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1296944   +END;
MPRINT(EM_DIAGRAM):   END;
1296945   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1296946   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1296947   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1296948   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1296949   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1296950   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1296951   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1296952   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1296953   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1296954   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1296955   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1296956   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1296957   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1296958   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1296959   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1296960   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1296961   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1296962   +END;
MPRINT(EM_DIAGRAM):   END;
1296963   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1296964   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1296965   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1296966   +drop
1296967   +H11
1296968   +H12
1296969   +H13
1296970   +H14
1296971   +H15
1296972   +H16
1296973   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1296974   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1296975   +* Renaming variables for Neural35;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural35;
1296976   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1296977   +* Renaming Posterior variables for Neural35;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural35;
1296978   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1296979   +drop Neural35_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural35_P_DepVar1;
1296980   +Neural35_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural35_P_DepVar1 = P_DepVar1;
1296981   +drop Neural35_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural35_P_DepVar0;
1296982   +Neural35_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural35_P_DepVar0 = P_DepVar0;
1296983   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1296984   +* Renaming _WARN_ variable for Neural35;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural35;
1296985   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1296986   +length Neural35_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural35_WARN_ $4;
1296987   +drop Neural35_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural35_WARN_;
1296988   +Neural35_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural35_WARN_ = _WARN_;
1296989   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1296990   +* Ensmbl22: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Scoring Code of model 6 of 7;
1296991   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1296992   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1296993   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1296994   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1296995   +* NODE: Neural30;
MPRINT(EM_DIAGRAM):   * NODE: Neural30;
1296996   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1296997   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1296998   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1296999   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1297000   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1297001   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1297002   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1297003   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1297004   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1297005   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1297006   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1297007   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1297008   +LENGTH _WARN_ $4
1297009   +      F_DepVar  $ 12
1297010   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1297011   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1297012   +
1297013   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1297014   +
1297015   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1297016   +
1297017   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1297018   +
1297019   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1297020   +
1297021   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1297022   +
1297023   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1297024   +
1297025   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1297026   +
1297027   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1297028   +
1297029   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1297030   +
1297031   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1297032   +
1297033   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1297034   +
1297035   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1297036   +
1297037   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1297038   +
1297039   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1297040   +
1297041   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1297042   +
1297043   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1297044   +
1297045   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1297046   +
1297047   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1297048   +
1297049   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1297050   +
1297051   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1297052   +
1297053   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1297054   +
1297055   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1297056   +
1297057   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1297058   +
1297059   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1297060   +
1297061   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1297062   +
1297063   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1297064   +
1297065   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1297066   +
1297067   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1297068   +
1297069   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1297070   +
1297071   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1297072   +
1297073   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1297074   +
1297075   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1297076   +
1297077   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1297078   +
1297079   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1297080   +
1297081   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
1297082   +
1297083   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1297084   +
1297085   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1297086   +
1297087   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1297088   +
1297089   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1297090   +
1297091   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1297092   +
1297093   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1297094   +
1297095   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1297096   +
1297097   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1297098   +
1297099   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1297100   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1297101   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1297102   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1297103   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1297104   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1297105   +end;
MPRINT(EM_DIAGRAM):   end;
1297106   +else do;
MPRINT(EM_DIAGRAM):   else do;
1297107   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1297108   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1297109   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1297110   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1297111   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1297112   +   end;
MPRINT(EM_DIAGRAM):   end;
1297113   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1297114   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1297115   +   end;
MPRINT(EM_DIAGRAM):   end;
1297116   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1297117   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1297118   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1297119   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1297120   +   end;
MPRINT(EM_DIAGRAM):   end;
1297121   +end;
MPRINT(EM_DIAGRAM):   end;
1297122   +
1297123   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1297124   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1297125   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1297126   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1297127   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1297128   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1297129   +end;
MPRINT(EM_DIAGRAM):   end;
1297130   +else do;
MPRINT(EM_DIAGRAM):   else do;
1297131   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1297132   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1297133   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1297134   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1297135   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1297136   +   end;
MPRINT(EM_DIAGRAM):   end;
1297137   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1297138   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1297139   +   end;
MPRINT(EM_DIAGRAM):   end;
1297140   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1297141   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1297142   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1297143   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1297144   +   end;
MPRINT(EM_DIAGRAM):   end;
1297145   +end;
MPRINT(EM_DIAGRAM):   end;
1297146   +
1297147   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1297148   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1297149   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1297150   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1297151   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1297152   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1297153   +end;
MPRINT(EM_DIAGRAM):   end;
1297154   +else do;
MPRINT(EM_DIAGRAM):   else do;
1297155   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1297156   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1297157   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1297158   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1297159   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1297160   +   end;
MPRINT(EM_DIAGRAM):   end;
1297161   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1297162   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1297163   +   end;
MPRINT(EM_DIAGRAM):   end;
1297164   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1297165   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1297166   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1297167   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1297168   +   end;
MPRINT(EM_DIAGRAM):   end;
1297169   +end;
MPRINT(EM_DIAGRAM):   end;
1297170   +
1297171   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1297172   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1297173   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1297174   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1297175   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1297176   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1297177   +end;
MPRINT(EM_DIAGRAM):   end;
1297178   +else do;
MPRINT(EM_DIAGRAM):   else do;
1297179   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1297180   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1297181   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1297182   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1297183   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1297184   +   end;
MPRINT(EM_DIAGRAM):   end;
1297185   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1297186   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1297187   +   end;
MPRINT(EM_DIAGRAM):   end;
1297188   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1297189   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1297190   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1297191   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1297192   +   end;
MPRINT(EM_DIAGRAM):   end;
1297193   +end;
MPRINT(EM_DIAGRAM):   end;
1297194   +
1297195   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1297196   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1297197   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1297198   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1297199   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1297200   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1297201   +end;
MPRINT(EM_DIAGRAM):   end;
1297202   +else do;
MPRINT(EM_DIAGRAM):   else do;
1297203   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1297204   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1297205   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1297206   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1297207   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1297208   +   end;
MPRINT(EM_DIAGRAM):   end;
1297209   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1297210   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1297211   +   end;
MPRINT(EM_DIAGRAM):   end;
1297212   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1297213   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1297214   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1297215   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1297216   +   end;
MPRINT(EM_DIAGRAM):   end;
1297217   +end;
MPRINT(EM_DIAGRAM):   end;
1297218   +
1297219   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1297220   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1297221   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1297222   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1297223   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1297224   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1297225   +end;
MPRINT(EM_DIAGRAM):   end;
1297226   +else do;
MPRINT(EM_DIAGRAM):   else do;
1297227   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1297228   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1297229   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1297230   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1297231   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1297232   +   end;
MPRINT(EM_DIAGRAM):   end;
1297233   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1297234   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1297235   +   end;
MPRINT(EM_DIAGRAM):   end;
1297236   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1297237   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1297238   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1297239   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1297240   +   end;
MPRINT(EM_DIAGRAM):   end;
1297241   +end;
MPRINT(EM_DIAGRAM):   end;
1297242   +
1297243   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1297244   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1297245   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1297246   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1297247   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1297248   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1297249   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1297250   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1297251   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1297252   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1297253   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1297254   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1297255   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1297256   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1297257   +end;
MPRINT(EM_DIAGRAM):   end;
1297258   +else do;
MPRINT(EM_DIAGRAM):   else do;
1297259   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1297260   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1297261   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1297262   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1297263   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1297264   +   end;
MPRINT(EM_DIAGRAM):   end;
1297265   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1297266   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1297267   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1297268   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1297269   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1297270   +   end;
MPRINT(EM_DIAGRAM):   end;
1297271   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1297272   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1297273   +   end;
MPRINT(EM_DIAGRAM):   end;
1297274   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1297275   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1297276   +   end;
MPRINT(EM_DIAGRAM):   end;
1297277   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1297278   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1297279   +   end;
MPRINT(EM_DIAGRAM):   end;
1297280   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1297281   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1297282   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1297283   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1297284   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1297285   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1297286   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1297287   +   end;
MPRINT(EM_DIAGRAM):   end;
1297288   +end;
MPRINT(EM_DIAGRAM):   end;
1297289   +
1297290   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1297291   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1297292   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1297293   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1297294   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1297295   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1297296   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1297297   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1297298   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1297299   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1297300   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1297301   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1297302   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1297303   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1297304   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1297305   +end;
MPRINT(EM_DIAGRAM):   end;
1297306   +else do;
MPRINT(EM_DIAGRAM):   else do;
1297307   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1297308   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1297309   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1297310   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1297311   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1297312   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1297313   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1297314   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1297315   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1297316   +         end;
MPRINT(EM_DIAGRAM):   end;
1297317   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1297318   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1297319   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1297320   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1297321   +            end;
MPRINT(EM_DIAGRAM):   end;
1297322   +         end;
MPRINT(EM_DIAGRAM):   end;
1297323   +      end;
MPRINT(EM_DIAGRAM):   end;
1297324   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1297325   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1297326   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1297327   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1297328   +         end;
MPRINT(EM_DIAGRAM):   end;
1297329   +      end;
MPRINT(EM_DIAGRAM):   end;
1297330   +   end;
MPRINT(EM_DIAGRAM):   end;
1297331   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1297332   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1297333   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1297334   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1297335   +      end;
MPRINT(EM_DIAGRAM):   end;
1297336   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1297337   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1297338   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1297339   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1297340   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1297341   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1297342   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1297343   +         end;
MPRINT(EM_DIAGRAM):   end;
1297344   +      end;
MPRINT(EM_DIAGRAM):   end;
1297345   +   end;
MPRINT(EM_DIAGRAM):   end;
1297346   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1297347   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1297348   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1297349   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1297350   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1297351   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1297352   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1297353   +   end;
MPRINT(EM_DIAGRAM):   end;
1297354   +end;
MPRINT(EM_DIAGRAM):   end;
1297355   +
1297356   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1297357   +*** Checking missing input Interval
1297358   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1297359   +
1297360   +IF NMISS(
1297361   +   Income ,
1297362   +   Kidhome ,
1297363   +   MntFishProducts ,
1297364   +   MntFruits ,
1297365   +   MntGoldProds ,
1297366   +   MntMeatProducts ,
1297367   +   MntSweetProducts ,
1297368   +   MntWines ,
1297369   +   NumCatalogPurchases ,
1297370   +   NumDealsPurchases ,
1297371   +   NumStorePurchases ,
1297372   +   NumWebPurchases ,
1297373   +   NumWebVisitsMonth ,
1297374   +   Recency ,
1297375   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
1297376   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1297377   +
1297378   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1297379   +END;
MPRINT(EM_DIAGRAM):   END;
1297380   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1297381   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1297382   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1297383   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1297384   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1297385   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1297386   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1297387   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1297388   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1297389   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1297390   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1297391   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1297392   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1297393   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1297394   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1297395   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1297396   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1297397   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1297398   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1297399   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1297400   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1297401   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1297402   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1297403   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1297404   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1297405   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1297406   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1297407   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1297408   +END;
MPRINT(EM_DIAGRAM):   END;
1297409   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1297410   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1297411   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1297412   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1297413   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1297414   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1297415   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1297416   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1297417   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1297418   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1297419   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1297420   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1297421   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1297422   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1297423   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1297424   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1297425   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1297426   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1297427   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1297428   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1297429   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1297430   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1297431   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1297432   +   ELSE S_NumCatalogPurchases
1297433   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1297434   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1297435   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1297436   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1297437   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1297438   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1297439   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1297440   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1297441   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1297442   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1297443   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1297444   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1297445   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1297446   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1297447   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1297448   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1297449   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1297450   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1297451   +END;
MPRINT(EM_DIAGRAM):   END;
1297452   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1297453   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1297454   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1297455   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1297456   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1297457   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1297458   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1297459   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1297460   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1297461   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1297462   +   H11  =    -0.59781928082243 * S_Income  +     0.49830142312288 * S_Kidhome
1297463   +          +    -0.00045024466632 * S_MntFishProducts
1297464   +          +    -0.22421712710333 * S_MntFruits  +    -0.19010144853469 *
1297465   +        S_MntGoldProds  +    -0.53373773623953 * S_MntMeatProducts
1297466   +          +     0.17506402203495 * S_MntSweetProducts
1297467   +          +    -0.28551398649672 * S_MntWines  +       0.019870944777 *
1297468   +        S_NumCatalogPurchases  +     0.03537776181533 * S_NumDealsPurchases
1297469   +          +     0.05580468715403 * S_NumStorePurchases
1297470   +          +    -0.29131611132704 * S_NumWebPurchases
1297471   +          +    -0.40690084025802 * S_NumWebVisitsMonth
1297472   +          +     0.48640195058901 * S_Recency  +     0.31820890239661 *
1297473   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.59781928082243 * S_Income + 0.49830142312288 * S_Kidhome + 
-0.00045024466632 * S_MntFishProducts + -0.22421712710333 * S_MntFruits + -0.19010144853469 * 
S_MntGoldProds + -0.53373773623953 * S_MntMeatProducts + 0.17506402203495 * S_MntSweetProducts 
+ -0.28551398649672 * S_MntWines + 0.019870944777 * S_NumCatalogPurchases + 0.03537776181533 * 
S_NumDealsPurchases + 0.05580468715403 * S_NumStorePurchases + -0.29131611132704 * 
S_NumWebPurchases + -0.40690084025802 * S_NumWebVisitsMonth + 0.48640195058901 * S_Recency + 
0.31820890239661 * S_Teenhome ;
1297474   +   H12  =    -0.41871753512335 * S_Income  +      0.6025072461821 * S_Kidhome
1297475   +          +    -0.03132724937716 * S_MntFishProducts
1297476   +          +     0.19114182835046 * S_MntFruits  +     0.13483463809539 *
1297477   +        S_MntGoldProds  +    -0.63593603749443 * S_MntMeatProducts
1297478   +          +    -0.07569302401223 * S_MntSweetProducts
1297479   +          +     0.67050112032753 * S_MntWines  +    -0.23159243932208 *
1297480   +        S_NumCatalogPurchases  +    -0.07183698407409 * S_NumDealsPurchases
1297481   +          +     0.54619681114623 * S_NumStorePurchases
1297482   +          +     0.44325129671249 * S_NumWebPurchases
1297483   +          +    -1.25054401670605 * S_NumWebVisitsMonth
1297484   +          +      1.2376290916151 * S_Recency  +     0.43747371517287 *
1297485   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.41871753512335 * S_Income + 0.6025072461821 * S_Kidhome + 
-0.03132724937716 * S_MntFishProducts + 0.19114182835046 * S_MntFruits + 0.13483463809539 * 
S_MntGoldProds + -0.63593603749443 * S_MntMeatProducts + -0.07569302401223 * 
S_MntSweetProducts + 0.67050112032753 * S_MntWines + -0.23159243932208 * S_NumCatalogPurchases 
+ -0.07183698407409 * S_NumDealsPurchases + 0.54619681114623 * S_NumStorePurchases + 
0.44325129671249 * S_NumWebPurchases + -1.25054401670605 * S_NumWebVisitsMonth + 
1.2376290916151 * S_Recency + 0.43747371517287 * S_Teenhome ;
1297486   +   H13  =      0.0713579189325 * S_Income  +    -0.05759612462349 * S_Kidhome
1297487   +          +     0.07631777381832 * S_MntFishProducts
1297488   +          +    -0.00387785552441 * S_MntFruits  +    -0.21868916314192 *
1297489   +        S_MntGoldProds  +       0.072623883197 * S_MntMeatProducts
1297490   +          +     0.12637946833766 * S_MntSweetProducts
1297491   +          +    -0.37981663841124 * S_MntWines  +    -0.89958525403162 *
1297492   +        S_NumCatalogPurchases  +    -0.17471885937598 * S_NumDealsPurchases
1297493   +          +     0.15845618359126 * S_NumStorePurchases
1297494   +          +    -0.33296932705082 * S_NumWebPurchases
1297495   +          +      0.0260072296349 * S_NumWebVisitsMonth
1297496   +          +     0.02544749712977 * S_Recency  +    -0.17381561661022 *
1297497   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.0713579189325 * S_Income + -0.05759612462349 * S_Kidhome + 
0.07631777381832 * S_MntFishProducts + -0.00387785552441 * S_MntFruits + -0.21868916314192 * 
S_MntGoldProds + 0.072623883197 * S_MntMeatProducts + 0.12637946833766 * S_MntSweetProducts + 
-0.37981663841124 * S_MntWines + -0.89958525403162 * S_NumCatalogPurchases + -0.17471885937598 
* S_NumDealsPurchases + 0.15845618359126 * S_NumStorePurchases + -0.33296932705082 * 
S_NumWebPurchases + 0.0260072296349 * S_NumWebVisitsMonth + 0.02544749712977 * S_Recency + 
-0.17381561661022 * S_Teenhome ;
1297498   +   H14  =    -0.47498613710851 * S_Income  +     0.09339198401437 * S_Kidhome
1297499   +          +    -0.13642352619174 * S_MntFishProducts
1297500   +          +     0.27167245582117 * S_MntFruits  +    -0.00579747559996 *
1297501   +        S_MntGoldProds  +     0.31591387319577 * S_MntMeatProducts
1297502   +          +     0.14125815807238 * S_MntSweetProducts
1297503   +          +     0.07862916790983 * S_MntWines  +    -0.58905358997534 *
1297504   +        S_NumCatalogPurchases  +     -0.5574069633995 * S_NumDealsPurchases
1297505   +          +     0.19718828261526 * S_NumStorePurchases
1297506   +          +    -0.24156925391919 * S_NumWebPurchases
1297507   +          +    -0.25711078938749 * S_NumWebVisitsMonth
1297508   +          +     0.38883063223812 * S_Recency  +     -0.2396731334184 *
1297509   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.47498613710851 * S_Income + 0.09339198401437 * S_Kidhome + 
-0.13642352619174 * S_MntFishProducts + 0.27167245582117 * S_MntFruits + -0.00579747559996 * 
S_MntGoldProds + 0.31591387319577 * S_MntMeatProducts + 0.14125815807238 * S_MntSweetProducts 
+ 0.07862916790983 * S_MntWines + -0.58905358997534 * S_NumCatalogPurchases + -0.5574069633995 
* S_NumDealsPurchases + 0.19718828261526 * S_NumStorePurchases + -0.24156925391919 * 
S_NumWebPurchases + -0.25711078938749 * S_NumWebVisitsMonth + 0.38883063223812 * S_Recency + 
-0.2396731334184 * S_Teenhome ;
1297510   +   H15  =     0.24624924979609 * S_Income  +    -0.37052106312109 * S_Kidhome
1297511   +          +     0.13579628643404 * S_MntFishProducts
1297512   +          +    -0.05263868911164 * S_MntFruits  +    -0.01504675049991 *
1297513   +        S_MntGoldProds  +     -0.4202277804998 * S_MntMeatProducts
1297514   +          +    -0.01039299374426 * S_MntSweetProducts
1297515   +          +     0.71197420459135 * S_MntWines  +    -0.35973505575029 *
1297516   +        S_NumCatalogPurchases  +     -0.4415445481482 * S_NumDealsPurchases
1297517   +          +     0.58897740652611 * S_NumStorePurchases
1297518   +          +     0.24564485851062 * S_NumWebPurchases
1297519   +          +    -0.13976320243555 * S_NumWebVisitsMonth
1297520   +          +      0.1199367613063 * S_Recency  +    -0.15283161418313 *
1297521   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.24624924979609 * S_Income + -0.37052106312109 * S_Kidhome + 
0.13579628643404 * S_MntFishProducts + -0.05263868911164 * S_MntFruits + -0.01504675049991 * 
S_MntGoldProds + -0.4202277804998 * S_MntMeatProducts + -0.01039299374426 * S_MntSweetProducts 
+ 0.71197420459135 * S_MntWines + -0.35973505575029 * S_NumCatalogPurchases + -0.4415445481482 
* S_NumDealsPurchases + 0.58897740652611 * S_NumStorePurchases + 0.24564485851062 * 
S_NumWebPurchases + -0.13976320243555 * S_NumWebVisitsMonth + 0.1199367613063 * S_Recency + 
-0.15283161418313 * S_Teenhome ;
1297522   +   H16  =     0.23493799758749 * S_Income  +     0.07038278079069 * S_Kidhome
1297523   +          +    -0.45448768538367 * S_MntFishProducts
1297524   +          +     0.02622380709004 * S_MntFruits  +     0.14726698184115 *
1297525   +        S_MntGoldProds  +     0.65760183569767 * S_MntMeatProducts
1297526   +          +    -0.16936256277023 * S_MntSweetProducts
1297527   +          +    -0.40647066866305 * S_MntWines  +     0.99645493491726 *
1297528   +        S_NumCatalogPurchases  +     0.65587239961358 * S_NumDealsPurchases
1297529   +          +    -0.22309716855774 * S_NumStorePurchases
1297530   +          +    -0.61204529910842 * S_NumWebPurchases
1297531   +          +     0.43742228867615 * S_NumWebVisitsMonth
1297532   +          +    -0.56099034256092 * S_Recency  +     -0.2445351671148 *
1297533   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = 0.23493799758749 * S_Income + 0.07038278079069 * S_Kidhome + 
-0.45448768538367 * S_MntFishProducts + 0.02622380709004 * S_MntFruits + 0.14726698184115 * 
S_MntGoldProds + 0.65760183569767 * S_MntMeatProducts + -0.16936256277023 * S_MntSweetProducts 
+ -0.40647066866305 * S_MntWines + 0.99645493491726 * S_NumCatalogPurchases + 0.65587239961358 
* S_NumDealsPurchases + -0.22309716855774 * S_NumStorePurchases + -0.61204529910842 * 
S_NumWebPurchases + 0.43742228867615 * S_NumWebVisitsMonth + -0.56099034256092 * S_Recency + 
-0.2445351671148 * S_Teenhome ;
1297534   +   H17  =    -0.00107702057163 * S_Income  +     0.25116135719972 * S_Kidhome
1297535   +          +    -0.04540308470858 * S_MntFishProducts
1297536   +          +        0.21487241577 * S_MntFruits  +    -0.12914913547414 *
1297537   +        S_MntGoldProds  +    -0.04149021191395 * S_MntMeatProducts
1297538   +          +     0.02853521979141 * S_MntSweetProducts
1297539   +          +     -0.2435805887418 * S_MntWines  +    -0.04509621661407 *
1297540   +        S_NumCatalogPurchases  +    -0.26492036720429 * S_NumDealsPurchases
1297541   +          +     -0.3299561248944 * S_NumStorePurchases
1297542   +          +    -0.09806597448224 * S_NumWebPurchases
1297543   +          +      0.0427056351245 * S_NumWebVisitsMonth
1297544   +          +     0.03953235628202 * S_Recency  +    -0.11317308767713 *
1297545   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = -0.00107702057163 * S_Income + 0.25116135719972 * S_Kidhome + 
-0.04540308470858 * S_MntFishProducts + 0.21487241577 * S_MntFruits + -0.12914913547414 * 
S_MntGoldProds + -0.04149021191395 * S_MntMeatProducts + 0.02853521979141 * S_MntSweetProducts 
+ -0.2435805887418 * S_MntWines + -0.04509621661407 * S_NumCatalogPurchases + 
-0.26492036720429 * S_NumDealsPurchases + -0.3299561248944 * S_NumStorePurchases + 
-0.09806597448224 * S_NumWebPurchases + 0.0427056351245 * S_NumWebVisitsMonth + 
0.03953235628202 * S_Recency + -0.11317308767713 * S_Teenhome ;
1297546   +   H11  = H11  +     0.50033674561531 * AcceptedCmp10
1297547   +          +    -0.02275693117286 * AcceptedCmp20  +     0.31338891533156 *
1297548   +        AcceptedCmp30  +      0.3901248845706 * AcceptedCmp40
1297549   +          +     0.44314358358111 * AcceptedCmp50  +    -0.20444060864498 *
1297550   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.50033674561531 * AcceptedCmp10 + -0.02275693117286 * 
AcceptedCmp20 + 0.31338891533156 * AcceptedCmp30 + 0.3901248845706 * AcceptedCmp40 + 
0.44314358358111 * AcceptedCmp50 + -0.20444060864498 * Complain0 ;
1297551   +   H12  = H12  +     0.30103938822692 * AcceptedCmp10
1297552   +          +     0.54298746723422 * AcceptedCmp20  +     0.50401040035525 *
1297553   +        AcceptedCmp30  +     0.43447710825306 * AcceptedCmp40
1297554   +          +     0.60794421030027 * AcceptedCmp50  +    -0.28114274461319 *
1297555   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.30103938822692 * AcceptedCmp10 + 0.54298746723422 * 
AcceptedCmp20 + 0.50401040035525 * AcceptedCmp30 + 0.43447710825306 * AcceptedCmp40 + 
0.60794421030027 * AcceptedCmp50 + -0.28114274461319 * Complain0 ;
1297556   +   H13  = H13  +     -0.1890212967757 * AcceptedCmp10
1297557   +          +    -0.11487406996391 * AcceptedCmp20  +    -0.22740618754863 *
1297558   +        AcceptedCmp30  +      0.2354510231918 * AcceptedCmp40
1297559   +          +    -0.14327434649067 * AcceptedCmp50  +    -0.17839080850556 *
1297560   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.1890212967757 * AcceptedCmp10 + -0.11487406996391 * 
AcceptedCmp20 + -0.22740618754863 * AcceptedCmp30 + 0.2354510231918 * AcceptedCmp40 + 
-0.14327434649067 * AcceptedCmp50 + -0.17839080850556 * Complain0 ;
1297561   +   H14  = H14  +    -0.28194187416219 * AcceptedCmp10
1297562   +          +     0.11732089254624 * AcceptedCmp20  +     0.34964075536156 *
1297563   +        AcceptedCmp30  +     0.05772396286169 * AcceptedCmp40
1297564   +          +    -0.08671748651826 * AcceptedCmp50  +      0.0629540108407 *
1297565   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.28194187416219 * AcceptedCmp10 + 0.11732089254624 * 
AcceptedCmp20 + 0.34964075536156 * AcceptedCmp30 + 0.05772396286169 * AcceptedCmp40 + 
-0.08671748651826 * AcceptedCmp50 + 0.0629540108407 * Complain0 ;
1297566   +   H15  = H15  +    -0.01058257322803 * AcceptedCmp10
1297567   +          +     0.26755355732587 * AcceptedCmp20  +     0.40856661734724 *
1297568   +        AcceptedCmp30  +     0.02977117354989 * AcceptedCmp40
1297569   +          +       0.073655049734 * AcceptedCmp50  +     0.25562048226555 *
1297570   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.01058257322803 * AcceptedCmp10 + 0.26755355732587 * 
AcceptedCmp20 + 0.40856661734724 * AcceptedCmp30 + 0.02977117354989 * AcceptedCmp40 + 
0.073655049734 * AcceptedCmp50 + 0.25562048226555 * Complain0 ;
1297571   +   H16  = H16  +    -0.65590117532084 * AcceptedCmp10
1297572   +          +    -0.31314161223579 * AcceptedCmp20  +    -0.18863165264573 *
1297573   +        AcceptedCmp30  +    -0.18832338914237 * AcceptedCmp40
1297574   +          +    -0.53765749471786 * AcceptedCmp50  +     0.17409401877513 *
1297575   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.65590117532084 * AcceptedCmp10 + -0.31314161223579 * 
AcceptedCmp20 + -0.18863165264573 * AcceptedCmp30 + -0.18832338914237 * AcceptedCmp40 + 
-0.53765749471786 * AcceptedCmp50 + 0.17409401877513 * Complain0 ;
1297576   +   H17  = H17  +    -0.42253231673718 * AcceptedCmp10
1297577   +          +    -0.40954345229557 * AcceptedCmp20  +    -0.30577523080786 *
1297578   +        AcceptedCmp30  +    -0.22396670899437 * AcceptedCmp40
1297579   +          +     0.05757251451004 * AcceptedCmp50  +     0.07813950542487 *
1297580   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.42253231673718 * AcceptedCmp10 + -0.40954345229557 * 
AcceptedCmp20 + -0.30577523080786 * AcceptedCmp30 + -0.22396670899437 * AcceptedCmp40 + 
0.05757251451004 * AcceptedCmp50 + 0.07813950542487 * Complain0 ;
1297581   +   H11  = H11  +    -0.14483542022901 * Education2n_Cycle
1297582   +          +     0.32176647745332 * EducationBasic  +     0.00900796305072 *
1297583   +        EducationGraduation  +    -0.00243484910123 * EducationMaster
1297584   +          +    -0.22074132229211 * Marital_StatusDivorced
1297585   +          +     0.70282742634901 * Marital_StatusMarried
1297586   +          +     -0.5926244797961 * Marital_StatusSingle
1297587   +          +     0.21342221410999 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.14483542022901 * Education2n_Cycle + 0.32176647745332 * 
EducationBasic + 0.00900796305072 * EducationGraduation + -0.00243484910123 * EducationMaster 
+ -0.22074132229211 * Marital_StatusDivorced + 0.70282742634901 * Marital_StatusMarried + 
-0.5926244797961 * Marital_StatusSingle + 0.21342221410999 * Marital_StatusTogether ;
1297588   +   H12  = H12  +    -0.10242932200247 * Education2n_Cycle
1297589   +          +     0.34937926721317 * EducationBasic  +    -0.20395479511872 *
1297590   +        EducationGraduation  +     0.31210327899339 * EducationMaster
1297591   +          +    -0.46376392175295 * Marital_StatusDivorced
1297592   +          +       0.589453579718 * Marital_StatusMarried
1297593   +          +    -0.45342174978481 * Marital_StatusSingle
1297594   +          +     0.70517120763557 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.10242932200247 * Education2n_Cycle + 0.34937926721317 * 
EducationBasic + -0.20395479511872 * EducationGraduation + 0.31210327899339 * EducationMaster 
+ -0.46376392175295 * Marital_StatusDivorced + 0.589453579718 * Marital_StatusMarried + 
-0.45342174978481 * Marital_StatusSingle + 0.70517120763557 * Marital_StatusTogether ;
1297595   +   H13  = H13  +     0.24858755570324 * Education2n_Cycle
1297596   +          +     0.07360039359386 * EducationBasic  +    -0.42563056620078 *
1297597   +        EducationGraduation  +    -0.25970840250323 * EducationMaster
1297598   +          +     0.26981972015482 * Marital_StatusDivorced
1297599   +          +    -0.01707364864139 * Marital_StatusMarried
1297600   +          +     0.38646060840009 * Marital_StatusSingle
1297601   +          +     0.19694047086013 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.24858755570324 * Education2n_Cycle + 0.07360039359386 * 
EducationBasic + -0.42563056620078 * EducationGraduation + -0.25970840250323 * EducationMaster 
+ 0.26981972015482 * Marital_StatusDivorced + -0.01707364864139 * Marital_StatusMarried + 
0.38646060840009 * Marital_StatusSingle + 0.19694047086013 * Marital_StatusTogether ;
1297602   +   H14  = H14  +     0.22577522124265 * Education2n_Cycle
1297603   +          +     0.04183136697557 * EducationBasic  +    -0.27725331198825 *
1297604   +        EducationGraduation  +     0.15709188532123 * EducationMaster
1297605   +          +    -0.01933675094701 * Marital_StatusDivorced
1297606   +          +     0.52969577969434 * Marital_StatusMarried
1297607   +          +      -0.348697714569 * Marital_StatusSingle
1297608   +          +      0.5020342481888 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.22577522124265 * Education2n_Cycle + 0.04183136697557 * 
EducationBasic + -0.27725331198825 * EducationGraduation + 0.15709188532123 * EducationMaster 
+ -0.01933675094701 * Marital_StatusDivorced + 0.52969577969434 * Marital_StatusMarried + 
-0.348697714569 * Marital_StatusSingle + 0.5020342481888 * Marital_StatusTogether ;
1297609   +   H15  = H15  +     0.04488332711225 * Education2n_Cycle
1297610   +          +     0.01911097443907 * EducationBasic  +    -0.11699443624996 *
1297611   +        EducationGraduation  +    -0.07291393566738 * EducationMaster
1297612   +          +    -0.04665146013984 * Marital_StatusDivorced
1297613   +          +      -0.586219175167 * Marital_StatusMarried
1297614   +          +     0.55713543417712 * Marital_StatusSingle
1297615   +          +    -0.42208959885332 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.04488332711225 * Education2n_Cycle + 0.01911097443907 * 
EducationBasic + -0.11699443624996 * EducationGraduation + -0.07291393566738 * EducationMaster 
+ -0.04665146013984 * Marital_StatusDivorced + -0.586219175167 * Marital_StatusMarried + 
0.55713543417712 * Marital_StatusSingle + -0.42208959885332 * Marital_StatusTogether ;
1297616   +   H16  = H16  +     0.09174117861154 * Education2n_Cycle
1297617   +          +     -0.1378945860659 * EducationBasic  +     -0.0728635369665 *
1297618   +        EducationGraduation  +     0.29860714824438 * EducationMaster
1297619   +          +    -0.05632171154347 * Marital_StatusDivorced
1297620   +          +     0.03215547861665 * Marital_StatusMarried
1297621   +          +     0.16870781172538 * Marital_StatusSingle
1297622   +          +    -0.04883314322676 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.09174117861154 * Education2n_Cycle + -0.1378945860659 * 
EducationBasic + -0.0728635369665 * EducationGraduation + 0.29860714824438 * EducationMaster + 
-0.05632171154347 * Marital_StatusDivorced + 0.03215547861665 * Marital_StatusMarried + 
0.16870781172538 * Marital_StatusSingle + -0.04883314322676 * Marital_StatusTogether ;
1297623   +   H17  = H17  +    -0.00343694558117 * Education2n_Cycle
1297624   +          +     0.32636427598227 * EducationBasic  +     0.16259654486833 *
1297625   +        EducationGraduation  +    -0.00424229454859 * EducationMaster
1297626   +          +    -0.21765415159355 * Marital_StatusDivorced
1297627   +          +     -0.0542857922075 * Marital_StatusMarried
1297628   +          +     0.20679907454933 * Marital_StatusSingle
1297629   +          +     0.14976519710725 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.00343694558117 * Education2n_Cycle + 0.32636427598227 * 
EducationBasic + 0.16259654486833 * EducationGraduation + -0.00424229454859 * EducationMaster 
+ -0.21765415159355 * Marital_StatusDivorced + -0.0542857922075 * Marital_StatusMarried + 
0.20679907454933 * Marital_StatusSingle + 0.14976519710725 * Marital_StatusTogether ;
1297630   +   H11  =     0.92977078759503 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.92977078759503 + H11 ;
1297631   +   H12  =    -0.97970409253156 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.97970409253156 + H12 ;
1297632   +   H13  =     -0.5001144792196 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.5001144792196 + H13 ;
1297633   +   H14  =    -0.90715840862541 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.90715840862541 + H14 ;
1297634   +   H15  =     0.87046153389036 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.87046153389036 + H15 ;
1297635   +   H16  =     0.49066122767086 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 0.49066122767086 + H16 ;
1297636   +   H17  =    -1.05949763460293 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.05949763460293 + H17 ;
1297637   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1297638   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1297639   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1297640   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1297641   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1297642   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1297643   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
1297644   +END;
MPRINT(EM_DIAGRAM):   END;
1297645   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1297646   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1297647   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1297648   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1297649   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1297650   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1297651   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1297652   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
1297653   +END;
MPRINT(EM_DIAGRAM):   END;
1297654   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1297655   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1297656   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1297657   +
1297658   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1297659   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1297660   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1297661   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1297662   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1297663   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1297664   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1297665   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1297666   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1297667   +end;
MPRINT(EM_DIAGRAM):   end;
1297668   +else do;
MPRINT(EM_DIAGRAM):   else do;
1297669   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1297670   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1297671   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1297672   +   end;
MPRINT(EM_DIAGRAM):   end;
1297673   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1297674   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1297675   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1297676   +   end;
MPRINT(EM_DIAGRAM):   end;
1297677   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1297678   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1297679   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1297680   +   end;
MPRINT(EM_DIAGRAM):   end;
1297681   +end;
MPRINT(EM_DIAGRAM):   end;
1297682   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1297683   +   P_DepVar1  =    -2.32998401250848 * H11  +     -3.2074078511991 * H12
1297684   +          +    -0.69549988605443 * H13  +    -1.74950789108762 * H14
1297685   +          +    -1.74013772071344 * H15  +     2.65306089869015 * H16
1297686   +          +     0.03700459000906 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.32998401250848 * H11 + -3.2074078511991 * H12 + 
-0.69549988605443 * H13 + -1.74950789108762 * H14 + -1.74013772071344 * H15 + 2.65306089869015 
* H16 + 0.03700459000906 * H17 ;
1297687   +   P_DepVar1  =    -1.51229898726716 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.51229898726716 + P_DepVar1 ;
1297688   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1297689   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1297690   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1297691   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1297692   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1297693   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1297694   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1297695   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1297696   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1297697   +END;
MPRINT(EM_DIAGRAM):   END;
1297698   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1297699   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1297700   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1297701   +END;
MPRINT(EM_DIAGRAM):   END;
1297702   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1297703   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1297704   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1297705   +END;
MPRINT(EM_DIAGRAM):   END;
1297706   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1297707   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1297708   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1297709   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1297710   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1297711   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1297712   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1297713   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1297714   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1297715   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1297716   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1297717   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1297718   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1297719   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1297720   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1297721   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1297722   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1297723   +END;
MPRINT(EM_DIAGRAM):   END;
1297724   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1297725   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1297726   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1297727   +drop
1297728   +H11
1297729   +H12
1297730   +H13
1297731   +H14
1297732   +H15
1297733   +H16
1297734   +H17
1297735   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
1297736   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1297737   +* Renaming variables for Neural30;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural30;
1297738   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1297739   +* Renaming Posterior variables for Neural30;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural30;
1297740   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1297741   +drop Neural30_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural30_P_DepVar1;
1297742   +Neural30_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural30_P_DepVar1 = P_DepVar1;
1297743   +drop Neural30_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural30_P_DepVar0;
1297744   +Neural30_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural30_P_DepVar0 = P_DepVar0;
1297745   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1297746   +* Renaming _WARN_ variable for Neural30;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural30;
1297747   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1297748   +length Neural30_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural30_WARN_ $4;
1297749   +drop Neural30_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural30_WARN_;
1297750   +Neural30_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural30_WARN_ = _WARN_;
1297751   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1297752   +* Ensmbl22: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Scoring Code of model 7 of 7;
1297753   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1297754   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1297755   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
1297756   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1297757   +* NODE: Reg10;
MPRINT(EM_DIAGRAM):   * NODE: Reg10;
1297758   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1297759   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1297760   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1297761   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1297762   +
1297763   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1297764   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1297765   +
1297766   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1297767   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1297768   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1297769   +array REG10DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG10DRF [2] $12 _temporary_ ('1' '0' );
1297770   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1297771   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1297772   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1297773   +ARRAY REG10DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG10DRU[2] _TEMPORARY_ (1 0);
1297774   +
1297775   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1297776   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
1297777   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1297778   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1297779   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1297780   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1297781   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1297782   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1297783   +end;
MPRINT(EM_DIAGRAM):   end;
1297784   +else do;
MPRINT(EM_DIAGRAM):   else do;
1297785   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1297786   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
1297787   +   end;
MPRINT(EM_DIAGRAM):   end;
1297788   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1297789   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
1297790   +   end;
MPRINT(EM_DIAGRAM):   end;
1297791   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1297792   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1297793   +   end;
MPRINT(EM_DIAGRAM):   end;
1297794   +end;
MPRINT(EM_DIAGRAM):   end;
1297795   +
1297796   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1297797   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1297798   +
1297799   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1297800   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1297801   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1297802   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1297803   +end;
MPRINT(EM_DIAGRAM):   end;
1297804   +
1297805   +*** Check MntFishProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntFishProducts for missing values ;
1297806   +if missing( MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntFishProducts ) then do;
1297807   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1297808   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1297809   +end;
MPRINT(EM_DIAGRAM):   end;
1297810   +
1297811   +*** Check MntFruits for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntFruits for missing values ;
1297812   +if missing( MntFruits ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntFruits ) then do;
1297813   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1297814   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1297815   +end;
MPRINT(EM_DIAGRAM):   end;
1297816   +
1297817   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1297818   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1297819   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1297820   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1297821   +end;
MPRINT(EM_DIAGRAM):   end;
1297822   +
1297823   +*** Check MntWines for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntWines for missing values ;
1297824   +if missing( MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntWines ) then do;
1297825   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1297826   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1297827   +end;
MPRINT(EM_DIAGRAM):   end;
1297828   +
1297829   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
1297830   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
1297831   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1297832   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1297833   +end;
MPRINT(EM_DIAGRAM):   end;
1297834   +
1297835   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1297836   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1297837   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1297838   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1297839   +end;
MPRINT(EM_DIAGRAM):   end;
1297840   +
1297841   +*** Check NumStorePurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumStorePurchases for missing values ;
1297842   +if missing( NumStorePurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumStorePurchases ) then do;
1297843   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1297844   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1297845   +end;
MPRINT(EM_DIAGRAM):   end;
1297846   +
1297847   +*** Check NumWebPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebPurchases for missing values ;
1297848   +if missing( NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebPurchases ) then do;
1297849   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1297850   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1297851   +end;
MPRINT(EM_DIAGRAM):   end;
1297852   +
1297853   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1297854   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1297855   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1297856   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1297857   +end;
MPRINT(EM_DIAGRAM):   end;
1297858   +
1297859   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1297860   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1297861   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1297862   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1297863   +end;
MPRINT(EM_DIAGRAM):   end;
1297864   +
1297865   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1297866   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1297867   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1297868   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1297869   +end;
MPRINT(EM_DIAGRAM):   end;
1297870   +
1297871   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1297872   +drop _1_0 ;
MPRINT(EM_DIAGRAM):   drop _1_0 ;
1297873   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1297874   +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1297875   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1297876   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1297877   +end;
MPRINT(EM_DIAGRAM):   end;
1297878   +else do;
MPRINT(EM_DIAGRAM):   else do;
1297879   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1297880   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1297881   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1297882   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1297883   +      _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
1297884   +   end;
MPRINT(EM_DIAGRAM):   end;
1297885   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1297886   +      _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
1297887   +   end;
MPRINT(EM_DIAGRAM):   end;
1297888   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1297889   +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1297890   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1297891   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1297892   +   end;
MPRINT(EM_DIAGRAM):   end;
1297893   +end;
MPRINT(EM_DIAGRAM):   end;
1297894   +
1297895   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1297896   +drop _2_0 ;
MPRINT(EM_DIAGRAM):   drop _2_0 ;
1297897   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1297898   +   _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
1297899   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1297900   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1297901   +end;
MPRINT(EM_DIAGRAM):   end;
1297902   +else do;
MPRINT(EM_DIAGRAM):   else do;
1297903   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1297904   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1297905   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1297906   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1297907   +      _2_0 = 1;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
1297908   +   end;
MPRINT(EM_DIAGRAM):   end;
1297909   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1297910   +      _2_0 = -1;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
1297911   +   end;
MPRINT(EM_DIAGRAM):   end;
1297912   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1297913   +      _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
1297914   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1297915   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1297916   +   end;
MPRINT(EM_DIAGRAM):   end;
1297917   +end;
MPRINT(EM_DIAGRAM):   end;
1297918   +
1297919   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1297920   +drop _3_0 ;
MPRINT(EM_DIAGRAM):   drop _3_0 ;
1297921   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1297922   +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1297923   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1297924   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1297925   +end;
MPRINT(EM_DIAGRAM):   end;
1297926   +else do;
MPRINT(EM_DIAGRAM):   else do;
1297927   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1297928   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1297929   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1297930   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1297931   +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
1297932   +   end;
MPRINT(EM_DIAGRAM):   end;
1297933   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1297934   +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
1297935   +   end;
MPRINT(EM_DIAGRAM):   end;
1297936   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1297937   +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1297938   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1297939   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1297940   +   end;
MPRINT(EM_DIAGRAM):   end;
1297941   +end;
MPRINT(EM_DIAGRAM):   end;
1297942   +
1297943   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1297944   +drop _4_0 ;
MPRINT(EM_DIAGRAM):   drop _4_0 ;
1297945   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1297946   +   _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
1297947   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1297948   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1297949   +end;
MPRINT(EM_DIAGRAM):   end;
1297950   +else do;
MPRINT(EM_DIAGRAM):   else do;
1297951   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1297952   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1297953   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1297954   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1297955   +      _4_0 = 1;
MPRINT(EM_DIAGRAM):   _4_0 = 1;
1297956   +   end;
MPRINT(EM_DIAGRAM):   end;
1297957   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1297958   +      _4_0 = -1;
MPRINT(EM_DIAGRAM):   _4_0 = -1;
1297959   +   end;
MPRINT(EM_DIAGRAM):   end;
1297960   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1297961   +      _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
1297962   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1297963   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1297964   +   end;
MPRINT(EM_DIAGRAM):   end;
1297965   +end;
MPRINT(EM_DIAGRAM):   end;
1297966   +
1297967   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1297968   +drop _5_0 ;
MPRINT(EM_DIAGRAM):   drop _5_0 ;
1297969   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1297970   +   _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
1297971   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1297972   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1297973   +end;
MPRINT(EM_DIAGRAM):   end;
1297974   +else do;
MPRINT(EM_DIAGRAM):   else do;
1297975   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1297976   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1297977   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1297978   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1297979   +      _5_0 = 1;
MPRINT(EM_DIAGRAM):   _5_0 = 1;
1297980   +   end;
MPRINT(EM_DIAGRAM):   end;
1297981   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1297982   +      _5_0 = -1;
MPRINT(EM_DIAGRAM):   _5_0 = -1;
1297983   +   end;
MPRINT(EM_DIAGRAM):   end;
1297984   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1297985   +      _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
1297986   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1297987   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1297988   +   end;
MPRINT(EM_DIAGRAM):   end;
1297989   +end;
MPRINT(EM_DIAGRAM):   end;
1297990   +
1297991   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1297992   +drop _8_0 _8_1 _8_2 _8_3 ;
MPRINT(EM_DIAGRAM):   drop _8_0 _8_1 _8_2 _8_3 ;
1297993   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1297994   +_8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
1297995   +_8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
1297996   +_8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
1297997   +_8_3 = 0;
MPRINT(EM_DIAGRAM):   _8_3 = 0;
1297998   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1297999   +   _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
1298000   +   _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
1298001   +   _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
1298002   +   _8_3 = .;
MPRINT(EM_DIAGRAM):   _8_3 = .;
1298003   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1298004   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1298005   +end;
MPRINT(EM_DIAGRAM):   end;
1298006   +else do;
MPRINT(EM_DIAGRAM):   else do;
1298007   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1298008   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1298009   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1298010   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1298011   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1298012   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1298013   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1298014   +            _8_0 = 1;
MPRINT(EM_DIAGRAM):   _8_0 = 1;
1298015   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1298016   +         end;
MPRINT(EM_DIAGRAM):   end;
1298017   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1298018   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1298019   +               _8_1 = 1;
MPRINT(EM_DIAGRAM):   _8_1 = 1;
1298020   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1298021   +            end;
MPRINT(EM_DIAGRAM):   end;
1298022   +         end;
MPRINT(EM_DIAGRAM):   end;
1298023   +      end;
MPRINT(EM_DIAGRAM):   end;
1298024   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1298025   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1298026   +            _8_2 = 1;
MPRINT(EM_DIAGRAM):   _8_2 = 1;
1298027   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1298028   +         end;
MPRINT(EM_DIAGRAM):   end;
1298029   +      end;
MPRINT(EM_DIAGRAM):   end;
1298030   +   end;
MPRINT(EM_DIAGRAM):   end;
1298031   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1298032   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1298033   +         _8_3 = 1;
MPRINT(EM_DIAGRAM):   _8_3 = 1;
1298034   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1298035   +      end;
MPRINT(EM_DIAGRAM):   end;
1298036   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1298037   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1298038   +            _8_0 = -1;
MPRINT(EM_DIAGRAM):   _8_0 = -1;
1298039   +            _8_1 = -1;
MPRINT(EM_DIAGRAM):   _8_1 = -1;
1298040   +            _8_2 = -1;
MPRINT(EM_DIAGRAM):   _8_2 = -1;
1298041   +            _8_3 = -1;
MPRINT(EM_DIAGRAM):   _8_3 = -1;
1298042   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1298043   +         end;
MPRINT(EM_DIAGRAM):   end;
1298044   +      end;
MPRINT(EM_DIAGRAM):   end;
1298045   +   end;
MPRINT(EM_DIAGRAM):   end;
1298046   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1298047   +      _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
1298048   +      _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
1298049   +      _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
1298050   +      _8_3 = .;
MPRINT(EM_DIAGRAM):   _8_3 = .;
1298051   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1298052   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1298053   +   end;
MPRINT(EM_DIAGRAM):   end;
1298054   +end;
MPRINT(EM_DIAGRAM):   end;
1298055   +
1298056   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1298057   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1298058   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1298059   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1298060   +   goto REG10DR1;
MPRINT(EM_DIAGRAM):   goto REG10DR1;
1298061   +end;
MPRINT(EM_DIAGRAM):   end;
1298062   +
1298063   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1298064   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1298065   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1298066   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1298067   +
1298068   +***  Effect: AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp1 ;
1298069   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1298070   +_LP0 = _LP0 + (   -0.71107732112007) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.71107732112007) * _TEMP * _1_0;
1298071   +
1298072   +***  Effect: AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp2 ;
1298073   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1298074   +_LP0 = _LP0 + (   -0.81763295180983) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.81763295180983) * _TEMP * _2_0;
1298075   +
1298076   +***  Effect: AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp3 ;
1298077   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1298078   +_LP0 = _LP0 + (    -0.8618538514738) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.8618538514738) * _TEMP * _3_0;
1298079   +
1298080   +***  Effect: AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp4 ;
1298081   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1298082   +_LP0 = _LP0 + (   -0.64997710050937) * _TEMP * _4_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.64997710050937) * _TEMP * _4_0;
1298083   +
1298084   +***  Effect: AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp5 ;
1298085   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1298086   +_LP0 = _LP0 + (   -0.91699409369659) * _TEMP * _5_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.91699409369659) * _TEMP * _5_0;
1298087   +
1298088   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1298089   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1298090   +_LP0 = _LP0 + (    0.00003628120307 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00003628120307 * _TEMP);
1298091   +
1298092   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1298093   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1298094   +_LP0 = _LP0 + (    0.09345382071006) * _TEMP * _8_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.09345382071006) * _TEMP * _8_0;
1298095   +_LP0 = _LP0 + (   -0.47894059934485) * _TEMP * _8_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.47894059934485) * _TEMP * _8_1;
1298096   +_LP0 = _LP0 + (    0.46164092141221) * _TEMP * _8_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.46164092141221) * _TEMP * _8_2;
1298097   +_LP0 = _LP0 + (    -0.5078574429985) * _TEMP * _8_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.5078574429985) * _TEMP * _8_3;
1298098   +
1298099   +***  Effect: MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntFishProducts ;
1298100   +_TEMP = MntFishProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntFishProducts ;
1298101   +_LP0 = _LP0 + (   -0.00285470778488 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00285470778488 * _TEMP);
1298102   +
1298103   +***  Effect: MntFruits ;
MPRINT(EM_DIAGRAM):   *** Effect: MntFruits ;
1298104   +_TEMP = MntFruits ;
MPRINT(EM_DIAGRAM):   _TEMP = MntFruits ;
1298105   +_LP0 = _LP0 + (   -0.00481548089585 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00481548089585 * _TEMP);
1298106   +
1298107   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1298108   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1298109   +_LP0 = _LP0 + (    0.00485302069895 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00485302069895 * _TEMP);
1298110   +
1298111   +***  Effect: MntWines ;
MPRINT(EM_DIAGRAM):   *** Effect: MntWines ;
1298112   +_TEMP = MntWines ;
MPRINT(EM_DIAGRAM):   _TEMP = MntWines ;
1298113   +_LP0 = _LP0 + (   -0.00184060065513 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00184060065513 * _TEMP);
1298114   +
1298115   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
1298116   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
1298117   +_LP0 = _LP0 + (    0.40015202354101 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.40015202354101 * _TEMP);
1298118   +
1298119   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1298120   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1298121   +_LP0 = _LP0 + (    0.39526484909287 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.39526484909287 * _TEMP);
1298122   +
1298123   +***  Effect: NumStorePurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumStorePurchases ;
1298124   +_TEMP = NumStorePurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumStorePurchases ;
1298125   +_LP0 = _LP0 + (   -0.21400418800044 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.21400418800044 * _TEMP);
1298126   +
1298127   +***  Effect: NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebPurchases ;
1298128   +_TEMP = NumWebPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebPurchases ;
1298129   +_LP0 = _LP0 + (    -0.2223953481686 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.2223953481686 * _TEMP);
1298130   +
1298131   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1298132   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1298133   +_LP0 = _LP0 + (    0.54388363089232 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.54388363089232 * _TEMP);
1298134   +
1298135   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1298136   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1298137   +_LP0 = _LP0 + (   -0.05513564922633 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05513564922633 * _TEMP);
1298138   +
1298139   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1298140   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1298141   +_LP0 = _LP0 + (   -0.70674092258187 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.70674092258187 * _TEMP);
1298142   +
1298143   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1298144   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1298145   +_P0 = probnorm((   -0.62163391257391) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -0.62163391257391) + _LP0);
1298146   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1298147   +
1298148   +REG10DR1:
1298149   +
1298150   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG10DR1: *** Residuals;
1298151   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
1298152   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1298153   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1298154   +end;
MPRINT(EM_DIAGRAM):   end;
1298155   +else do;
MPRINT(EM_DIAGRAM):   else do;
1298156   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1298157   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1298158   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
1298159   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
1298160   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
1298161   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
1298162   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
1298163   +   end;
MPRINT(EM_DIAGRAM):   end;
1298164   +end;
MPRINT(EM_DIAGRAM):   end;
1298165   +
1298166   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
1298167   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1298168   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1298169   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1298170   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1298171   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1298172   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1298173   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1298174   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1298175   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1298176   +end;
MPRINT(EM_DIAGRAM):   end;
1298177   +I_DepVar = REG10DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG10DRF[_IY];
1298178   +U_DepVar = REG10DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG10DRU[_IY];
1298179   +
1298180   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1298181   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1298182   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1298183   +* Renaming variables for Reg10;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg10;
1298184   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1298185   +* Renaming Posterior variables for Reg10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg10;
1298186   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1298187   +drop Reg10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg10_P_DepVar1;
1298188   +Reg10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg10_P_DepVar1 = P_DepVar1;
1298189   +drop Reg10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg10_P_DepVar0;
1298190   +Reg10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg10_P_DepVar0 = P_DepVar0;
1298191   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1298192   +* Renaming _WARN_ variable for Reg10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg10;
1298193   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1298194   +length Reg10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg10_WARN_ $4;
1298195   +drop Reg10_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg10_WARN_;
1298196   +Reg10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg10_WARN_ = _WARN_;
1298197   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1298198   +* Ensmbl22: Average Posteriors of 7 models;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Average Posteriors of 7 models;
1298199   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1298200   +P_DepVar1 = (
1298201   +Neural31_P_DepVar1 +
1298202   +Neural32_P_DepVar1 +
1298203   +Neural33_P_DepVar1 +
1298204   +Neural34_P_DepVar1 +
1298205   +Neural35_P_DepVar1 +
1298206   +Neural30_P_DepVar1 +
1298207   +Reg10_P_DepVar1
1298208   +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( Neural31_P_DepVar1 + Neural32_P_DepVar1 + 
Neural33_P_DepVar1 + Neural34_P_DepVar1 + Neural35_P_DepVar1 + Neural30_P_DepVar1 + 
Reg10_P_DepVar1 )/7;
1298209   +P_DepVar0 = (
1298210   +Neural31_P_DepVar0 +
1298211   +Neural32_P_DepVar0 +
1298212   +Neural33_P_DepVar0 +
1298213   +Neural34_P_DepVar0 +
1298214   +Neural35_P_DepVar0 +
1298215   +Neural30_P_DepVar0 +
1298216   +Reg10_P_DepVar0
1298217   +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( Neural31_P_DepVar0 + Neural32_P_DepVar0 + 
Neural33_P_DepVar0 + Neural34_P_DepVar0 + Neural35_P_DepVar0 + Neural30_P_DepVar0 + 
Reg10_P_DepVar0 )/7;
1298218   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1298219   +* Ensmbl22: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Computing Classification Vars;
1298220   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1298221   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
1298222   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
1298223   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
1298224   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
1298225   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
1298226   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
1298227   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
1298228   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
1298229   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
1298230   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
1298231   +end;
MPRINT(EM_DIAGRAM):   end;
1298232   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
1298233   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
1298234   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
1298235   +end;
MPRINT(EM_DIAGRAM):   end;
1298236   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1298237   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1298238   +* Ensmbl22: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Producing Unformatted variable;
1298239   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1298240   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1298241   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1298242   +else
1298243   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1298244   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1298245   +* Ensmbl22: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Computing _WARN_ Variable;
1298246   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1298247   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1298248   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1298249   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1298250   +if index(NEURAL31_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1298250  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL31_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1298251   +if index(NEURAL31_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1298251  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL31_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1298252   +if index(NEURAL31_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1298252  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL31_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1298253   +if index(NEURAL31_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1298253  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL31_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1298254   +if index(NEURAL32_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1298254  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL32_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1298255   +if index(NEURAL32_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1298255  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL32_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1298256   +if index(NEURAL32_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1298256  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL32_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1298257   +if index(NEURAL32_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1298257  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL32_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1298258   +if index(NEURAL33_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1298258  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL33_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1298259   +if index(NEURAL33_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1298259  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL33_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1298260   +if index(NEURAL33_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1298260  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL33_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1298261   +if index(NEURAL33_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1298261  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL33_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1298262   +if index(NEURAL34_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1298262  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL34_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1298263   +if index(NEURAL34_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1298263  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL34_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1298264   +if index(NEURAL34_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1298264  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL34_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1298265   +if index(NEURAL34_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1298265  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL34_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1298266   +if index(NEURAL35_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1298266  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL35_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1298267   +if index(NEURAL35_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1298267  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL35_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1298268   +if index(NEURAL35_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1298268  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL35_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1298269   +if index(NEURAL35_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1298269  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL35_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1298270   +if index(NEURAL30_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1298270  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL30_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1298271   +if index(NEURAL30_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1298271  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL30_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1298272   +if index(NEURAL30_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1298272  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL30_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1298273   +if index(NEURAL30_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1298273  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL30_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1298274   +if index(REG10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1298275   +if index(REG10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1298276   +if index(REG10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1298277   +if index(REG10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1298278   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1298279   +* Ensmbl22: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Computing Residual Vars;
1298280   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1298281   +if
1298282   +F_DepVar NE '1'
1298283   +AND F_DepVar NE '0'
1298284   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
1298285   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1298286   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1298287   +end;
MPRINT(EM_DIAGRAM):   end;
1298288   +else do;
MPRINT(EM_DIAGRAM):   else do;
1298289   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
1298290   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
1298291   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
1298292   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
1298293   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
1298294   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
1298295   +END;
MPRINT(EM_DIAGRAM):   END;
1298296   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1298297    run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL22_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.NEURAL31_VALIDATE.VIEW used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1298298    quit;
1298299    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl22_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of 
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error" 
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_= 
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train: 
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl22_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl22_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of 
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error" 
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_= 
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid: 
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl22_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl22_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
1298359    filename _pref
1298359  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural31\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural31\EMPUBLISHSCORE.sas";
1298360    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1298361    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural31\EMPUBLISHSCORE.sas.
1298362   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1298363   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1298364   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1298365   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1298366   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1298367   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1298368   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1298369   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1298370   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1298371   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1298372   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1298373   +LENGTH _WARN_ $4
1298374   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1298375   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1298376   +
1298377   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1298378   +
1298379   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1298380   +
1298381   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1298382   +
1298383   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1298384   +
1298385   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1298386   +
1298387   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1298388   +
1298389   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1298390   +
1298391   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1298392   +
1298393   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1298394   +
1298395   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1298396   +
1298397   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1298398   +
1298399   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1298400   +
1298401   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1298402   +
1298403   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1298404   +
1298405   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1298406   +
1298407   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1298408   +
1298409   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1298410   +
1298411   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1298412   +
1298413   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1298414   +
1298415   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1298416   +
1298417   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1298418   +
1298419   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1298420   +
1298421   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1298422   +
1298423   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1298424   +
1298425   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1298426   +
1298427   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1298428   +
1298429   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1298430   +
1298431   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1298432   +
1298433   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1298434   +
1298435   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1298436   +
1298437   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1298438   +
1298439   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1298440   +
1298441   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1298442   +
1298443   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1298444   +
1298445   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1298446   +
1298447   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1298448   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1298449   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1298450   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1298451   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1298452   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1298453   +end;
MPRINT(EM_DIAGRAM):   end;
1298454   +else do;
MPRINT(EM_DIAGRAM):   else do;
1298455   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1298456   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1298457   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1298458   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1298459   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1298460   +   end;
MPRINT(EM_DIAGRAM):   end;
1298461   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1298462   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1298463   +   end;
MPRINT(EM_DIAGRAM):   end;
1298464   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1298465   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1298466   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1298467   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1298468   +   end;
MPRINT(EM_DIAGRAM):   end;
1298469   +end;
MPRINT(EM_DIAGRAM):   end;
1298470   +
1298471   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1298472   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1298473   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1298474   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1298475   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1298476   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1298477   +end;
MPRINT(EM_DIAGRAM):   end;
1298478   +else do;
MPRINT(EM_DIAGRAM):   else do;
1298479   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1298480   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1298481   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1298482   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1298483   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1298484   +   end;
MPRINT(EM_DIAGRAM):   end;
1298485   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1298486   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1298487   +   end;
MPRINT(EM_DIAGRAM):   end;
1298488   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1298489   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1298490   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1298491   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1298492   +   end;
MPRINT(EM_DIAGRAM):   end;
1298493   +end;
MPRINT(EM_DIAGRAM):   end;
1298494   +
1298495   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1298496   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1298497   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1298498   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1298499   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1298500   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1298501   +end;
MPRINT(EM_DIAGRAM):   end;
1298502   +else do;
MPRINT(EM_DIAGRAM):   else do;
1298503   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1298504   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1298505   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1298506   +   if _dm12 = '0'  then do;
The SAS System

MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1298507   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1298508   +   end;
MPRINT(EM_DIAGRAM):   end;
1298509   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1298510   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1298511   +   end;
MPRINT(EM_DIAGRAM):   end;
1298512   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1298513   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1298514   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1298515   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1298516   +   end;
MPRINT(EM_DIAGRAM):   end;
1298517   +end;
MPRINT(EM_DIAGRAM):   end;
1298518   +
1298519   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1298520   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1298521   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1298522   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1298523   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1298524   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1298525   +end;
MPRINT(EM_DIAGRAM):   end;
1298526   +else do;
MPRINT(EM_DIAGRAM):   else do;
1298527   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1298528   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1298529   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1298530   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1298531   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1298532   +   end;
MPRINT(EM_DIAGRAM):   end;
1298533   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1298534   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1298535   +   end;
MPRINT(EM_DIAGRAM):   end;
1298536   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1298537   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1298538   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1298539   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1298540   +   end;
MPRINT(EM_DIAGRAM):   end;
1298541   +end;
MPRINT(EM_DIAGRAM):   end;
1298542   +
1298543   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1298544   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1298545   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1298546   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1298547   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1298548   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1298549   +end;
MPRINT(EM_DIAGRAM):   end;
1298550   +else do;
MPRINT(EM_DIAGRAM):   else do;
1298551   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1298552   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1298553   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1298554   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1298555   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1298556   +   end;
MPRINT(EM_DIAGRAM):   end;
1298557   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1298558   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1298559   +   end;
MPRINT(EM_DIAGRAM):   end;
1298560   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1298561   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1298562   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1298563   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1298564   +   end;
MPRINT(EM_DIAGRAM):   end;
1298565   +end;
MPRINT(EM_DIAGRAM):   end;
1298566   +
1298567   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1298568   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1298569   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1298570   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1298571   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1298572   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1298573   +end;
MPRINT(EM_DIAGRAM):   end;
1298574   +else do;
MPRINT(EM_DIAGRAM):   else do;
1298575   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1298576   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1298577   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1298578   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1298579   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1298580   +   end;
MPRINT(EM_DIAGRAM):   end;
1298581   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1298582   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1298583   +   end;
MPRINT(EM_DIAGRAM):   end;
1298584   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1298585   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1298586   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1298587   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1298588   +   end;
MPRINT(EM_DIAGRAM):   end;
1298589   +end;
MPRINT(EM_DIAGRAM):   end;
1298590   +
1298591   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1298592   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1298593   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1298594   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1298595   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1298596   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1298597   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1298598   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1298599   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1298600   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1298601   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1298602   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1298603   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1298604   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1298605   +end;
MPRINT(EM_DIAGRAM):   end;
1298606   +else do;
MPRINT(EM_DIAGRAM):   else do;
1298607   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1298608   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1298609   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1298610   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1298611   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1298612   +   end;
MPRINT(EM_DIAGRAM):   end;
1298613   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1298614   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1298615   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1298616   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1298617   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1298618   +   end;
MPRINT(EM_DIAGRAM):   end;
1298619   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1298620   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1298621   +   end;
MPRINT(EM_DIAGRAM):   end;
1298622   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1298623   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1298624   +   end;
MPRINT(EM_DIAGRAM):   end;
1298625   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1298626   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1298627   +   end;
MPRINT(EM_DIAGRAM):   end;
1298628   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1298629   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1298630   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1298631   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1298632   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1298633   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1298634   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1298635   +   end;
MPRINT(EM_DIAGRAM):   end;
1298636   +end;
MPRINT(EM_DIAGRAM):   end;
1298637   +
1298638   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1298639   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1298640   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1298641   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1298642   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1298643   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1298644   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1298645   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1298646   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1298647   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1298648   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1298649   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1298650   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1298651   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1298652   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1298653   +end;
MPRINT(EM_DIAGRAM):   end;
1298654   +else do;
MPRINT(EM_DIAGRAM):   else do;
1298655   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1298656   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1298657   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1298658   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1298659   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1298660   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1298661   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1298662   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1298663   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1298664   +         end;
MPRINT(EM_DIAGRAM):   end;
1298665   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1298666   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1298667   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1298668   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1298669   +            end;
MPRINT(EM_DIAGRAM):   end;
1298670   +         end;
MPRINT(EM_DIAGRAM):   end;
1298671   +      end;
MPRINT(EM_DIAGRAM):   end;
1298672   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1298673   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1298674   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1298675   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1298676   +         end;
MPRINT(EM_DIAGRAM):   end;
1298677   +      end;
MPRINT(EM_DIAGRAM):   end;
1298678   +   end;
MPRINT(EM_DIAGRAM):   end;
1298679   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1298680   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1298681   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1298682   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1298683   +      end;
MPRINT(EM_DIAGRAM):   end;
1298684   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1298685   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1298686   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1298687   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1298688   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1298689   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1298690   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1298691   +         end;
MPRINT(EM_DIAGRAM):   end;
1298692   +      end;
MPRINT(EM_DIAGRAM):   end;
1298693   +   end;
MPRINT(EM_DIAGRAM):   end;
1298694   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1298695   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1298696   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1298697   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1298698   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1298699   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1298700   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1298701   +   end;
MPRINT(EM_DIAGRAM):   end;
1298702   +end;
MPRINT(EM_DIAGRAM):   end;
1298703   +
1298704   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1298705   +*** Checking missing input Interval
1298706   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1298707   +
1298708   +IF NMISS(
1298709   +   Income ,
1298710   +   Kidhome ,
1298711   +   MntFishProducts ,
1298712   +   MntFruits ,
1298713   +   MntGoldProds ,
1298714   +   MntMeatProducts ,
1298715   +   MntSweetProducts ,
1298716   +   MntWines ,
1298717   +   NumCatalogPurchases ,
1298718   +   NumDealsPurchases ,
1298719   +   NumStorePurchases ,
1298720   +   NumWebPurchases ,
1298721   +   NumWebVisitsMonth ,
1298722   +   Recency ,
1298723   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
1298724   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1298725   +
1298726   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1298727   +END;
MPRINT(EM_DIAGRAM):   END;
1298728   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1298729   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1298730   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1298731   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1298732   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1298733   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1298734   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1298735   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1298736   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1298737   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1298738   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1298739   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1298740   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1298741   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1298742   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1298743   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1298744   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1298745   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1298746   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1298747   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1298748   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1298749   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1298750   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1298751   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1298752   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1298753   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1298754   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1298755   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1298756   +END;
MPRINT(EM_DIAGRAM):   END;
1298757   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1298758   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1298759   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1298760   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1298761   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1298762   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1298763   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1298764   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1298765   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1298766   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1298767   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1298768   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1298769   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1298770   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1298771   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1298772   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1298773   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1298774   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1298775   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1298776   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1298777   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1298778   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1298779   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1298780   +   ELSE S_NumCatalogPurchases
1298781   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1298782   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1298783   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1298784   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1298785   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1298786   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1298787   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1298788   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1298789   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1298790   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1298791   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1298792   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1298793   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1298794   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1298795   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1298796   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1298797   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1298798   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1298799   +END;
MPRINT(EM_DIAGRAM):   END;
1298800   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1298801   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1298802   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1298803   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1298804   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1298805   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1298806   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1298807   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1298808   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1298809   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1298810   +   H11  =    -1.33502235588914 * S_Income  +     0.86914778071024 * S_Kidhome
1298811   +          +     0.06177226616611 * S_MntFishProducts
1298812   +          +     0.22465531888584 * S_MntFruits  +    -0.01216018017424 *
1298813   +        S_MntGoldProds  +    -0.10435601171346 * S_MntMeatProducts
1298814   +          +     0.19245635559754 * S_MntSweetProducts
1298815   +          +    -0.06473329764962 * S_MntWines  +    -0.40260570275107 *
1298816   +        S_NumCatalogPurchases  +    -0.01043435397255 * S_NumDealsPurchases
1298817   +          +    -0.35392759932805 * S_NumStorePurchases
1298818   +          +     -0.2443007642616 * S_NumWebPurchases
1298819   +          +    -0.72667572173837 * S_NumWebVisitsMonth
1298820   +          +     0.97336679863544 * S_Recency  +     0.72544205905496 *
1298821   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -1.33502235588914 * S_Income + 0.86914778071024 * S_Kidhome + 
0.06177226616611 * S_MntFishProducts + 0.22465531888584 * S_MntFruits + -0.01216018017424 * 
S_MntGoldProds + -0.10435601171346 * S_MntMeatProducts + 0.19245635559754 * S_MntSweetProducts 
+ -0.06473329764962 * S_MntWines + -0.40260570275107 * S_NumCatalogPurchases + 
-0.01043435397255 * S_NumDealsPurchases + -0.35392759932805 * S_NumStorePurchases + 
-0.2443007642616 * S_NumWebPurchases + -0.72667572173837 * S_NumWebVisitsMonth + 
0.97336679863544 * S_Recency + 0.72544205905496 * S_Teenhome ;
1298822   +   H12  =    -0.09105644521483 * S_Income  +     0.01920168996111 * S_Kidhome
1298823   +          +     0.00012212205827 * S_MntFishProducts
1298824   +          +     0.00032664246198 * S_MntFruits  +    -0.02161363659377 *
1298825   +        S_MntGoldProds  +    -0.40917729724893 * S_MntMeatProducts
1298826   +          +     0.01459978689352 * S_MntSweetProducts
1298827   +          +     0.28732983017398 * S_MntWines  +    -0.26033282919423 *
1298828   +        S_NumCatalogPurchases  +      -0.306688498482 * S_NumDealsPurchases
1298829   +          +      0.4054643699817 * S_NumStorePurchases
1298830   +          +     0.27747327375374 * S_NumWebPurchases
1298831   +          +    -0.31325270852641 * S_NumWebVisitsMonth
1298832   +          +      0.3707065492652 * S_Recency  +     0.05681262835219 *
1298833   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.09105644521483 * S_Income + 0.01920168996111 * S_Kidhome + 
0.00012212205827 * S_MntFishProducts + 0.00032664246198 * S_MntFruits + -0.02161363659377 * 
S_MntGoldProds + -0.40917729724893 * S_MntMeatProducts + 0.01459978689352 * S_MntSweetProducts 
+ 0.28732983017398 * S_MntWines + -0.26033282919423 * S_NumCatalogPurchases + -0.306688498482 
* S_NumDealsPurchases + 0.4054643699817 * S_NumStorePurchases + 0.27747327375374 * 
S_NumWebPurchases + -0.31325270852641 * S_NumWebVisitsMonth + 0.3707065492652 * S_Recency + 
0.05681262835219 * S_Teenhome ;
1298834   +   H11  = H11  +     0.23904403737743 * AcceptedCmp10
1298835   +          +     0.12365860406863 * AcceptedCmp20  +     0.28547657706908 *
1298836   +        AcceptedCmp30  +     0.37587337003909 * AcceptedCmp40
1298837   +          +    -0.04113029526683 * AcceptedCmp50  +      0.2596440604013 *
1298838   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.23904403737743 * AcceptedCmp10 + 0.12365860406863 * 
AcceptedCmp20 + 0.28547657706908 * AcceptedCmp30 + 0.37587337003909 * AcceptedCmp40 + 
-0.04113029526683 * AcceptedCmp50 + 0.2596440604013 * Complain0 ;
1298839   +   H12  = H12  +     0.25336773034662 * AcceptedCmp10
1298840   +          +     0.39499004620022 * AcceptedCmp20  +     0.19852127214148 *
1298841   +        AcceptedCmp30  +     0.19215250383325 * AcceptedCmp40
1298842   +          +     0.27213364707939 * AcceptedCmp50  +    -0.00774901485124 *
1298843   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.25336773034662 * AcceptedCmp10 + 0.39499004620022 * 
AcceptedCmp20 + 0.19852127214148 * AcceptedCmp30 + 0.19215250383325 * AcceptedCmp40 + 
0.27213364707939 * AcceptedCmp50 + -0.00774901485124 * Complain0 ;
1298844   +   H11  = H11  +    -0.05263155952227 * Education2n_Cycle
1298845   +          +    -1.40124591386453 * EducationBasic  +     0.43501491332678 *
1298846   +        EducationGraduation  +     0.77305262508081 * EducationMaster
1298847   +          +    -0.43667846017683 * Marital_StatusDivorced
1298848   +          +     1.33507828005472 * Marital_StatusMarried
1298849   +          +    -0.75026283842664 * Marital_StatusSingle
1298850   +          +     0.84436594207558 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.05263155952227 * Education2n_Cycle + -1.40124591386453 * 
EducationBasic + 0.43501491332678 * EducationGraduation + 0.77305262508081 * EducationMaster + 
-0.43667846017683 * Marital_StatusDivorced + 1.33507828005472 * Marital_StatusMarried + 
-0.75026283842664 * Marital_StatusSingle + 0.84436594207558 * Marital_StatusTogether ;
1298851   +   H12  = H12  +     0.08398432584098 * Education2n_Cycle
1298852   +          +     0.12375156883157 * EducationBasic  +     -0.0901891766073 *
1298853   +        EducationGraduation  +    -0.07691770257441 * EducationMaster
1298854   +          +    -0.03531690128173 * Marital_StatusDivorced
1298855   +          +    -0.04344171367809 * Marital_StatusMarried
1298856   +          +    -0.05137362653166 * Marital_StatusSingle
1298857   +          +    -0.01265518570667 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.08398432584098 * Education2n_Cycle + 0.12375156883157 * 
EducationBasic + -0.0901891766073 * EducationGraduation + -0.07691770257441 * EducationMaster 
+ -0.03531690128173 * Marital_StatusDivorced + -0.04344171367809 * Marital_StatusMarried + 
-0.05137362653166 * Marital_StatusSingle + -0.01265518570667 * Marital_StatusTogether ;
1298858   +   H11  =     1.86846527977677 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.86846527977677 + H11 ;
1298859   +   H12  =    -0.42494263287735 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.42494263287735 + H12 ;
1298860   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1298861   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1298862   +END;
MPRINT(EM_DIAGRAM):   END;
1298863   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1298864   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1298865   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1298866   +END;
MPRINT(EM_DIAGRAM):   END;
1298867   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1298868   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1298869   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1298870   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1298871   +   P_DepVar1  =    -5.43090515434696 * H11  +    -9.08673127131886 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.43090515434696 * H11 + -9.08673127131886 * H12 ;
1298872   +   P_DepVar1  =      2.7752946076831 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.7752946076831 + P_DepVar1 ;
1298873   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1298874   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1298875   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1298876   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1298877   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1298878   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1298879   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1298880   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1298881   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1298882   +END;
MPRINT(EM_DIAGRAM):   END;
1298883   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1298884   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1298885   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1298886   +END;
MPRINT(EM_DIAGRAM):   END;
1298887   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1298888   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1298889   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1298890   +END;
MPRINT(EM_DIAGRAM):   END;
1298891   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1298892   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1298893   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1298894   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1298895   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1298896   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1298897   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1298898   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1298899   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1298900   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1298901   +END;
MPRINT(EM_DIAGRAM):   END;
1298902   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1298903   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1298904   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1298905   +drop
1298906   +H11
1298907   +H12
1298908   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
1298909   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1298910    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1298911    quit;
1298912    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1298913    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1298914    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1298915    retain ID 2 Node "Neural31";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural31";
1298916    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1298917    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1464 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1464 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1298918    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1298919    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1298920    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1464 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1464 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1298921    proc sort data=EMWS8.Neural31_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural31_variableset out=_temp2(keep=NAME CREATOR);
1298922    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1298923    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL31_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1298924    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1298925    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1298926    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1298927    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1298928    proc contents data=EMWS8.Neural31_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural31_train out=_meta(keep=NAME) noprint;
1298929    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.18 seconds
      cpu time            0.03 seconds
      

1298930    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1298931    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1298932    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1298933    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1298934    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1298935    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1298936    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1298937    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1298938    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1298938  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 786 rows and 5 columns.

1298939    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1298940    proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
1298941    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 786 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 786 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1298942    filename _pref
1298942  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1298943    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1298944    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1298945   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1298946   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1298947   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1298948   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1298949   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1298950   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1298951    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1298952    quit;
1298953    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1298954    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1298955    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1298956    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1298957    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1298958    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1298959    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1298960    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1298961    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1298962    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1298963    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1298964    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1298965    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1298966    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1298967    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1298968    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1298969    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1298970    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1298971    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1298972    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1298973    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1298974    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1298975    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1298976    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1298977    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1298978    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1298979    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1298979  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1298980    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1298981    proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
1298982    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 790 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1298983    filename _pref
1298983  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1298984    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1298985    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1298986   +
1298987   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1298988   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1298988  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1298989   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1298990   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1298991   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1298992   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1298993   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1298994    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1298995    quit;
1298996    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1298997    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1298998    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1298999    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1299000    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1299001    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1299002    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1299003    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1299004    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1299005    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1299006    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1299007    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1299008    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1299009    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1299010    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1299011    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1299012    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1299013    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1299014    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1299015    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1299016    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1299017    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1299018    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1299019    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1299020    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1299021    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1299022    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1299022  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1299023    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1299024    proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
1299025    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 829 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1299026    filename _pref
1299026  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1299027    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1299028    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1299029   +
1299030   +
1299031   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1299032   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1299033   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1299034   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1299035   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1299036   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1299037   +
1299038   +
1299039   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1299040   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1299041   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1299042   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1299043   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1299044   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1299045   +
1299046   +
1299047   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1299048   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1299049   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1299050   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1299051   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1299052   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1299053   +
1299054   +
1299055   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1299056   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1299057   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1299058   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1299059   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1299060   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1299061   +
1299062   +
1299063   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1299064   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1299065   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1299066   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1299067   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1299068   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1299069   +
1299070   +
1299071   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1299072   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1299073   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1299074   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1299075   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1299076   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1299077   +
1299078   +
1299079   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1299080   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1299081   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1299082   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1299083   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1299084   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1299085   +
1299086   +
1299087   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1299088   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1299089   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1299090   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1299091   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1299092   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1299093   +if
1299094   +_FILTERNORM1 not in ( '.')
1299095   + and
1299096   +_FILTERNORM2 not in ( '.')
1299097   + and
1299098   +_FILTERNORM3 not in ( '.')
1299099   + and
1299100   +_FILTERNORM4 not in ( '.')
1299101   + and
1299102   +_FILTERNORM5 not in ( '.')
1299103   + and
1299104   +_FILTERNORM6 not in ( '.')
1299105   + and
1299106   +_FILTERNORM7 not in ( ' ')
1299107   + and
1299108   +_FILTERNORM8 not in ( ' ')
1299109   +and
1299110   +( Dt_Customer ne .)
1299111   +and ( Income ne . and (Income<=107000))
1299112   +and ( Kidhome ne .)
1299113   +and ( MntFishProducts ne .)
1299114   +and ( MntFruits ne .)
1299115   +and ( MntGoldProds ne .)
1299116   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1299117   +and ( MntSweetProducts ne .)
1299118   +and ( MntWines ne .)
1299119   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1299120   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1299121   +and ( NumStorePurchases ne .)
1299122   +and ( NumWebPurchases ne .)
1299123   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1299124   +and ( Recency ne .)
1299125   +and ( Teenhome ne .)
1299126   +and ( Year_Birth ne .)
1299127   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1299128   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1299129   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1299130   +end;
MPRINT(EM_DIAGRAM):   end;
1299131   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1299132   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1299133    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1299134    quit;
1299135    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1299136    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1299137    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1299138    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1299139    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1299140    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1299141    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1299142    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1299143    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1299144    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1299145    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1299146    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1299147    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1299148    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1299149    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1299150    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1299151    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1299152    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1299153    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1299154    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1299155    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1299156    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1299157    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1299158    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1299159    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1299160    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1299161    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1299161  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1299162    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1299163    proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
1299164    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 895 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1299165    %macro varDept(fcmpdata=,id=);
1299166    %global nobs&id scoreFlag&id;
1299167    %let scoreFlag&id = 0;
1299168    %if &id=1 or ^&fcmpStart %then %do;
1299169    proc sort data=&fcmpdata out=_temp&id nodupkey;
1299170    by NAME;
1299171    where id=&id and LHS in( %let j=1;
1299172    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1299173    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1299174    "&var" %let j = %eval(&j+1);
1299175    %end;
1299176    );
1299177    run;
1299178    %let dsid = %sysfunc(open(_temp&id));
1299179    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1299180    %let dsid = %sysfunc(close(&dsid));
1299181    %if &&nobs&id %then %do;
1299182    %let scoreFlag&id = 1;
1299183    %let fcmpStart = 1;
1299184    %end;
1299185    %else %let fcmpStart = 0;
1299186    %end;
1299187    %else %do;
1299188    proc sort data=&fcmpdata out=_tempid;
1299189    where id=&id;
1299190    by LHS;
1299191    run;
1299192    %let dsid = %sysfunc(open(_tempid));
1299193    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1299194    %let dsid = %sysfunc(close(&dsid));
1299195    %if ^&&nobs&id %then %do;
1299196    proc datasets lib=work nolist;
1299197    delete _tempid;
1299198    run;
1299199    quit;
1299200    %end;
1299201    %else %do;
1299202    data _tempAll;
1299203    set %let j=%eval(&id-1);
1299204    %do x=1 %to &j;
1299205    %if &&nobs&x %then %do;
1299206    _temp&x %end;
1299207    %end;
1299208    ;
1299209    run;
1299210    proc sql;
1299211    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1299211  ! work._tempid p2 where p.name=p2.lhs;
1299212    quit;
1299213    data _temp&id;
1299214    set _temp&id;
1299215    where LHS ne '' and NAME ne '' and Node ne '';
1299216    run;
1299217    proc datasets lib=work nolist;
1299218    delete _tempAll;
1299219    run;
1299220    %let dsid = %sysfunc(open(_temp&id));
1299221    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1299222    %let dsid = %sysfunc(close(&dsid));
1299223    %if ^&&nobs&id %then %do;
1299224    proc datasets lib=work nolist;
1299225    delete _temp&id;
1299226    run;
1299227    quit;
1299228    %end;
1299229    %else %do;
1299230    %let scoreFlag&id = 1;
1299231    data _temp&id;
1299232    set _temp&id;
1299233    where LHS ne NAME and node ne '';
1299234    run;
1299235    %let dsid = %sysfunc(open(_temp&id));
1299236    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1299237    %let dsid = %sysfunc(close(&dsid));
1299238    %if ^&&nobs&id %then %do;
1299239    proc datasets lib=work nolist;
1299240    delete _temp&id;
1299241    run;
1299242    quit;
1299243    %end;
1299244    %else %do;
1299245    proc sort data=_temp&id nodupkey;
1299246    by LHS NAME;
1299247    run;
1299248    %end;
1299249    %end;
1299250    %end;
1299251    %end;
1299252    %mend varDept;
1299253    %macro optCode(outdata=fcmpdata);
1299254    %global fcmpStart;
1299255    %let fcmpStart = 0;
1299256    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1299257    %let NumNodes=9;
1299258    %do k=1 %to &NumNodes;
1299259    %vardept(fcmpdata=&outdata, id=&k);
1299260    %end;
1299261    %mend optCode;
1299262    %optcode(outData=EMWS8.Ensmbl22_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 98 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 73 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 25 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp6;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP6 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1299263    filename _pref
1299263  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural32\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural32\EMPUBLISHSCORE.sas";
1299264    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1299265    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural32\EMPUBLISHSCORE.sas.
1299266   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1299267   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1299268   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1299269   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1299270   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1299271   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1299272   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1299273   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1299274   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1299275   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1299276   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1299277   +LENGTH _WARN_ $4
1299278   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1299279   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1299280   +
1299281   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1299282   +
1299283   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1299284   +
1299285   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1299286   +
1299287   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1299288   +
1299289   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1299290   +
1299291   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1299292   +
1299293   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1299294   +
1299295   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1299296   +
1299297   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1299298   +
1299299   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1299300   +
1299301   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1299302   +
1299303   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1299304   +
1299305   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1299306   +
1299307   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1299308   +
1299309   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1299310   +
1299311   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1299312   +
1299313   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1299314   +
1299315   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1299316   +
1299317   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1299318   +
1299319   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1299320   +
1299321   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1299322   +
1299323   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1299324   +
1299325   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1299326   +
1299327   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1299328   +
1299329   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1299330   +
1299331   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1299332   +
1299333   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1299334   +
1299335   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1299336   +
1299337   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1299338   +
1299339   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1299340   +
1299341   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1299342   +
1299343   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1299344   +
1299345   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1299346   +
1299347   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1299348   +
1299349   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1299350   +
1299351   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1299352   +
1299353   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1299354   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1299355   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1299356   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1299357   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1299358   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1299359   +end;
MPRINT(EM_DIAGRAM):   end;
1299360   +else do;
MPRINT(EM_DIAGRAM):   else do;
1299361   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1299362   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1299363   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1299364   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1299365   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1299366   +   end;
MPRINT(EM_DIAGRAM):   end;
1299367   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1299368   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1299369   +   end;
MPRINT(EM_DIAGRAM):   end;
1299370   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1299371   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1299372   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1299373   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1299374   +   end;
MPRINT(EM_DIAGRAM):   end;
1299375   +end;
MPRINT(EM_DIAGRAM):   end;
1299376   +
1299377   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1299378   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1299379   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1299380   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1299381   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1299382   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1299383   +end;
MPRINT(EM_DIAGRAM):   end;
1299384   +else do;
MPRINT(EM_DIAGRAM):   else do;
1299385   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1299386   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1299387   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1299388   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1299389   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1299390   +   end;
MPRINT(EM_DIAGRAM):   end;
1299391   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1299392   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1299393   +   end;
MPRINT(EM_DIAGRAM):   end;
1299394   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1299395   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1299396   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1299397   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1299398   +   end;
MPRINT(EM_DIAGRAM):   end;
1299399   +end;
MPRINT(EM_DIAGRAM):   end;
1299400   +
1299401   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1299402   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1299403   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1299404   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1299405   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1299406   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1299407   +end;
MPRINT(EM_DIAGRAM):   end;
1299408   +else do;
MPRINT(EM_DIAGRAM):   else do;
1299409   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1299410   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1299411   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1299412   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1299413   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1299414   +   end;
MPRINT(EM_DIAGRAM):   end;
1299415   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1299416   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1299417   +   end;
MPRINT(EM_DIAGRAM):   end;
1299418   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1299419   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1299420   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1299421   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1299422   +   end;
MPRINT(EM_DIAGRAM):   end;
1299423   +end;
MPRINT(EM_DIAGRAM):   end;
1299424   +
1299425   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1299426   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1299427   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1299428   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1299429   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1299430   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1299431   +end;
MPRINT(EM_DIAGRAM):   end;
1299432   +else do;
MPRINT(EM_DIAGRAM):   else do;
1299433   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1299434   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1299435   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1299436   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1299437   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1299438   +   end;
MPRINT(EM_DIAGRAM):   end;
1299439   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1299440   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1299441   +   end;
MPRINT(EM_DIAGRAM):   end;
1299442   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1299443   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1299444   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1299445   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1299446   +   end;
MPRINT(EM_DIAGRAM):   end;
1299447   +end;
MPRINT(EM_DIAGRAM):   end;
1299448   +
1299449   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1299450   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1299451   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1299452   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1299453   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1299454   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1299455   +end;
MPRINT(EM_DIAGRAM):   end;
1299456   +else do;
MPRINT(EM_DIAGRAM):   else do;
1299457   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1299458   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1299459   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1299460   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1299461   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1299462   +   end;
MPRINT(EM_DIAGRAM):   end;
1299463   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1299464   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1299465   +   end;
MPRINT(EM_DIAGRAM):   end;
1299466   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1299467   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1299468   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1299469   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1299470   +   end;
MPRINT(EM_DIAGRAM):   end;
1299471   +end;
MPRINT(EM_DIAGRAM):   end;
1299472   +
1299473   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1299474   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1299475   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1299476   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1299477   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1299478   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1299479   +end;
MPRINT(EM_DIAGRAM):   end;
1299480   +else do;
MPRINT(EM_DIAGRAM):   else do;
1299481   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1299482   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1299483   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1299484   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1299485   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1299486   +   end;
MPRINT(EM_DIAGRAM):   end;
1299487   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1299488   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1299489   +   end;
MPRINT(EM_DIAGRAM):   end;
1299490   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1299491   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1299492   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1299493   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1299494   +   end;
MPRINT(EM_DIAGRAM):   end;
1299495   +end;
MPRINT(EM_DIAGRAM):   end;
1299496   +
1299497   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1299498   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1299499   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1299500   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1299501   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1299502   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1299503   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1299504   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1299505   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1299506   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1299507   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1299508   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1299509   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1299510   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1299511   +end;
MPRINT(EM_DIAGRAM):   end;
1299512   +else do;
MPRINT(EM_DIAGRAM):   else do;
1299513   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1299514   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1299515   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1299516   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1299517   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1299518   +   end;
MPRINT(EM_DIAGRAM):   end;
1299519   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1299520   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1299521   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1299522   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1299523   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1299524   +   end;
MPRINT(EM_DIAGRAM):   end;
1299525   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1299526   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1299527   +   end;
MPRINT(EM_DIAGRAM):   end;
1299528   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1299529   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1299530   +   end;
MPRINT(EM_DIAGRAM):   end;
1299531   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1299532   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1299533   +   end;
MPRINT(EM_DIAGRAM):   end;
1299534   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1299535   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1299536   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1299537   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1299538   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1299539   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1299540   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1299541   +   end;
MPRINT(EM_DIAGRAM):   end;
1299542   +end;
MPRINT(EM_DIAGRAM):   end;
1299543   +
1299544   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1299545   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1299546   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1299547   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1299548   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1299549   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1299550   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1299551   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1299552   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1299553   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1299554   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1299555   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1299556   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1299557   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1299558   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1299559   +end;
MPRINT(EM_DIAGRAM):   end;
1299560   +else do;
MPRINT(EM_DIAGRAM):   else do;
1299561   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1299562   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1299563   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1299564   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1299565   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1299566   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1299567   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1299568   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1299569   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1299570   +         end;
MPRINT(EM_DIAGRAM):   end;
1299571   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1299572   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1299573   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1299574   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1299575   +            end;
MPRINT(EM_DIAGRAM):   end;
1299576   +         end;
MPRINT(EM_DIAGRAM):   end;
1299577   +      end;
MPRINT(EM_DIAGRAM):   end;
1299578   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1299579   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1299580   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1299581   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1299582   +         end;
MPRINT(EM_DIAGRAM):   end;
1299583   +      end;
MPRINT(EM_DIAGRAM):   end;
1299584   +   end;
MPRINT(EM_DIAGRAM):   end;
1299585   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1299586   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1299587   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1299588   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1299589   +      end;
MPRINT(EM_DIAGRAM):   end;
1299590   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1299591   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1299592   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1299593   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1299594   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1299595   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1299596   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1299597   +         end;
MPRINT(EM_DIAGRAM):   end;
1299598   +      end;
MPRINT(EM_DIAGRAM):   end;
1299599   +   end;
MPRINT(EM_DIAGRAM):   end;
1299600   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1299601   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1299602   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1299603   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1299604   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1299605   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1299606   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1299607   +   end;
MPRINT(EM_DIAGRAM):   end;
1299608   +end;
MPRINT(EM_DIAGRAM):   end;
1299609   +
1299610   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1299611   +*** Checking missing input Interval
1299612   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1299613   +
1299614   +IF NMISS(
1299615   +   Income ,
1299616   +   Kidhome ,
1299617   +   MntFishProducts ,
1299618   +   MntFruits ,
1299619   +   MntGoldProds ,
1299620   +   MntMeatProducts ,
1299621   +   MntSweetProducts ,
1299622   +   MntWines ,
1299623   +   NumCatalogPurchases ,
1299624   +   NumDealsPurchases ,
1299625   +   NumStorePurchases ,
1299626   +   NumWebPurchases ,
1299627   +   NumWebVisitsMonth ,
1299628   +   Recency ,
1299629   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
1299630   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1299631   +
1299632   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1299633   +END;
MPRINT(EM_DIAGRAM):   END;
1299634   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1299635   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1299636   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1299637   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1299638   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1299639   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1299640   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1299641   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1299642   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1299643   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1299644   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1299645   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1299646   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1299647   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1299648   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1299649   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1299650   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1299651   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1299652   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1299653   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1299654   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1299655   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1299656   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1299657   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1299658   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1299659   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1299660   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1299661   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1299662   +END;
MPRINT(EM_DIAGRAM):   END;
1299663   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1299664   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1299665   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1299666   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1299667   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1299668   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1299669   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1299670   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1299671   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1299672   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1299673   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1299674   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1299675   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1299676   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1299677   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1299678   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1299679   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1299680   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1299681   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1299682   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1299683   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1299684   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1299685   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1299686   +   ELSE S_NumCatalogPurchases
1299687   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1299688   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1299689   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1299690   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1299691   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1299692   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1299693   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1299694   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1299695   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1299696   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1299697   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1299698   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1299699   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1299700   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1299701   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1299702   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1299703   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1299704   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1299705   +END;
MPRINT(EM_DIAGRAM):   END;
1299706   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1299707   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1299708   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1299709   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1299710   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1299711   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1299712   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1299713   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1299714   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1299715   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1299716   +   H11  =     1.40261108800308 * S_Income  +     -0.8062097507842 * S_Kidhome
1299717   +          +    -0.12974862644982 * S_MntFishProducts
1299718   +          +     0.08065642800368 * S_MntFruits  +    -0.12102130003972 *
1299719   +        S_MntGoldProds  +     0.19226249622126 * S_MntMeatProducts
1299720   +          +    -0.12290326901613 * S_MntSweetProducts
1299721   +          +     0.07790241176978 * S_MntWines  +     0.36123042724896 *
1299722   +        S_NumCatalogPurchases  +    -0.01034406765754 * S_NumDealsPurchases
1299723   +          +     0.09738032540137 * S_NumStorePurchases
1299724   +          +     0.44459515215205 * S_NumWebPurchases
1299725   +          +      0.8471075994578 * S_NumWebVisitsMonth
1299726   +          +    -1.10667985160899 * S_Recency  +    -0.88509832868515 *
1299727   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 1.40261108800308 * S_Income + -0.8062097507842 * S_Kidhome + 
-0.12974862644982 * S_MntFishProducts + 0.08065642800368 * S_MntFruits + -0.12102130003972 * 
S_MntGoldProds + 0.19226249622126 * S_MntMeatProducts + -0.12290326901613 * S_MntSweetProducts 
+ 0.07790241176978 * S_MntWines + 0.36123042724896 * S_NumCatalogPurchases + -0.01034406765754 
* S_NumDealsPurchases + 0.09738032540137 * S_NumStorePurchases + 0.44459515215205 * 
S_NumWebPurchases + 0.8471075994578 * S_NumWebVisitsMonth + -1.10667985160899 * S_Recency + 
-0.88509832868515 * S_Teenhome ;
1299728   +   H12  =     0.51266936686642 * S_Income  +     0.26909433357851 * S_Kidhome
1299729   +          +     0.02406077596811 * S_MntFishProducts
1299730   +          +    -0.57443793453522 * S_MntFruits  +     0.36824731232149 *
1299731   +        S_MntGoldProds  +     0.40177289143061 * S_MntMeatProducts
1299732   +          +     -0.1147507059349 * S_MntSweetProducts
1299733   +          +    -0.66379351187459 * S_MntWines  +     1.33407347415468 *
1299734   +        S_NumCatalogPurchases  +     1.00633891197299 * S_NumDealsPurchases
1299735   +          +    -0.23920969262322 * S_NumStorePurchases
1299736   +          +     -0.6008837862932 * S_NumWebPurchases
1299737   +          +     0.26759743722885 * S_NumWebVisitsMonth
1299738   +          +    -0.42755419464125 * S_Recency  +    -0.14471776361394 *
1299739   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.51266936686642 * S_Income + 0.26909433357851 * S_Kidhome + 
0.02406077596811 * S_MntFishProducts + -0.57443793453522 * S_MntFruits + 0.36824731232149 * 
S_MntGoldProds + 0.40177289143061 * S_MntMeatProducts + -0.1147507059349 * S_MntSweetProducts 
+ -0.66379351187459 * S_MntWines + 1.33407347415468 * S_NumCatalogPurchases + 1.00633891197299 
* S_NumDealsPurchases + -0.23920969262322 * S_NumStorePurchases + -0.6008837862932 * 
S_NumWebPurchases + 0.26759743722885 * S_NumWebVisitsMonth + -0.42755419464125 * S_Recency + 
-0.14471776361394 * S_Teenhome ;
1299740   +   H13  =    -0.19807308698832 * S_Income  +     0.25934675474849 * S_Kidhome
1299741   +          +     0.04398331533724 * S_MntFishProducts
1299742   +          +    -0.00090357598988 * S_MntFruits  +     0.05139545341773 *
1299743   +        S_MntGoldProds  +    -0.74617114336019 * S_MntMeatProducts
1299744   +          +     0.00552488718744 * S_MntSweetProducts
1299745   +          +     0.47194407197012 * S_MntWines  +    -0.35149551848487 *
1299746   +        S_NumCatalogPurchases  +    -0.30232522133093 * S_NumDealsPurchases
1299747   +          +     0.60058189155105 * S_NumStorePurchases
1299748   +          +     0.51423374855856 * S_NumWebPurchases
1299749   +          +     -0.9075304423321 * S_NumWebVisitsMonth
1299750   +          +     0.83597739226791 * S_Recency  +     0.15783202762709 *
1299751   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.19807308698832 * S_Income + 0.25934675474849 * S_Kidhome + 
0.04398331533724 * S_MntFishProducts + -0.00090357598988 * S_MntFruits + 0.05139545341773 * 
S_MntGoldProds + -0.74617114336019 * S_MntMeatProducts + 0.00552488718744 * S_MntSweetProducts 
+ 0.47194407197012 * S_MntWines + -0.35149551848487 * S_NumCatalogPurchases + 
-0.30232522133093 * S_NumDealsPurchases + 0.60058189155105 * S_NumStorePurchases + 
0.51423374855856 * S_NumWebPurchases + -0.9075304423321 * S_NumWebVisitsMonth + 
0.83597739226791 * S_Recency + 0.15783202762709 * S_Teenhome ;
1299752   +   H11  = H11  +    -0.26274045665457 * AcceptedCmp10
1299753   +          +    -0.86105702939371 * AcceptedCmp20  +    -0.50476270558977 *
1299754   +        AcceptedCmp30  +    -0.84284126473343 * AcceptedCmp40
1299755   +          +     0.19764907691314 * AcceptedCmp50  +    -0.29305577412263 *
1299756   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.26274045665457 * AcceptedCmp10 + -0.86105702939371 * 
AcceptedCmp20 + -0.50476270558977 * AcceptedCmp30 + -0.84284126473343 * AcceptedCmp40 + 
0.19764907691314 * AcceptedCmp50 + -0.29305577412263 * Complain0 ;
1299757   +   H12  = H12  +    -0.27394139847883 * AcceptedCmp10
1299758   +          +    -0.14688750266104 * AcceptedCmp20  +    -0.27982299242327 *
1299759   +        AcceptedCmp30  +    -0.10465140408787 * AcceptedCmp40
1299760   +          +    -0.81681330244218 * AcceptedCmp50  +    -0.28152730217644 *
1299761   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.27394139847883 * AcceptedCmp10 + -0.14688750266104 * 
AcceptedCmp20 + -0.27982299242327 * AcceptedCmp30 + -0.10465140408787 * AcceptedCmp40 + 
-0.81681330244218 * AcceptedCmp50 + -0.28152730217644 * Complain0 ;
1299762   +   H13  = H13  +     0.42310780831005 * AcceptedCmp10
1299763   +          +     0.41337614261155 * AcceptedCmp20  +     0.41436520641821 *
1299764   +        AcceptedCmp30  +     0.08914989208239 * AcceptedCmp40
1299765   +          +     0.54013759697695 * AcceptedCmp50  +    -0.19478210268955 *
1299766   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.42310780831005 * AcceptedCmp10 + 0.41337614261155 * 
AcceptedCmp20 + 0.41436520641821 * AcceptedCmp30 + 0.08914989208239 * AcceptedCmp40 + 
0.54013759697695 * AcceptedCmp50 + -0.19478210268955 * Complain0 ;
1299767   +   H11  = H11  +     0.40331200702699 * Education2n_Cycle
1299768   +          +     0.17202421641945 * EducationBasic  +    -0.29654161092174 *
1299769   +        EducationGraduation  +     -0.4835104183635 * EducationMaster
1299770   +          +     0.52129580188513 * Marital_StatusDivorced
1299771   +          +     -1.5224490339553 * Marital_StatusMarried
1299772   +          +     1.05062906057771 * Marital_StatusSingle
1299773   +          +    -1.16420887937635 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.40331200702699 * Education2n_Cycle + 0.17202421641945 * 
EducationBasic + -0.29654161092174 * EducationGraduation + -0.4835104183635 * EducationMaster 
+ 0.52129580188513 * Marital_StatusDivorced + -1.5224490339553 * Marital_StatusMarried + 
1.05062906057771 * Marital_StatusSingle + -1.16420887937635 * Marital_StatusTogether ;
1299774   +   H12  = H12  +     -0.3488928858263 * Education2n_Cycle
1299775   +          +     0.38279680594423 * EducationBasic  +     0.20376044836519 *
1299776   +        EducationGraduation  +     0.20697694670185 * EducationMaster
1299777   +          +    -0.14428158063317 * Marital_StatusDivorced
1299778   +          +     0.22396926143356 * Marital_StatusMarried
1299779   +          +    -0.12980854818876 * Marital_StatusSingle
1299780   +          +     0.32607015627906 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.3488928858263 * Education2n_Cycle + 0.38279680594423 * 
EducationBasic + 0.20376044836519 * EducationGraduation + 0.20697694670185 * EducationMaster + 
-0.14428158063317 * Marital_StatusDivorced + 0.22396926143356 * Marital_StatusMarried + 
-0.12980854818876 * Marital_StatusSingle + 0.32607015627906 * Marital_StatusTogether ;
1299781   +   H13  = H13  +    -0.18351418824199 * Education2n_Cycle
1299782   +          +     0.53417952447263 * EducationBasic  +    -0.14333929289628 *
1299783   +        EducationGraduation  +     0.04513004774082 * EducationMaster
1299784   +          +    -0.25615797303064 * Marital_StatusDivorced
1299785   +          +     0.18825506199046 * Marital_StatusMarried
1299786   +          +    -0.24607556819871 * Marital_StatusSingle
1299787   +          +     0.29531673844201 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.18351418824199 * Education2n_Cycle + 0.53417952447263 * 
EducationBasic + -0.14333929289628 * EducationGraduation + 0.04513004774082 * EducationMaster 
+ -0.25615797303064 * Marital_StatusDivorced + 0.18825506199046 * Marital_StatusMarried + 
-0.24607556819871 * Marital_StatusSingle + 0.29531673844201 * Marital_StatusTogether ;
1299788   +   H11  =    -1.29289362679377 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.29289362679377 + H11 ;
1299789   +   H12  =     0.88724419151235 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.88724419151235 + H12 ;
1299790   +   H13  =    -0.51194544699467 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.51194544699467 + H13 ;
1299791   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1299792   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1299793   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1299794   +END;
MPRINT(EM_DIAGRAM):   END;
1299795   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1299796   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1299797   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1299798   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1299799   +END;
MPRINT(EM_DIAGRAM):   END;
1299800   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1299801   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1299802   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1299803   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1299804   +   P_DepVar1  =     4.44251020865882 * H11  +     2.67139161773156 * H12
1299805   +          +    -4.73549395111184 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.44251020865882 * H11 + 2.67139161773156 * H12 + 
-4.73549395111184 * H13 ;
1299806   +   P_DepVar1  =     0.45492690116644 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.45492690116644 + P_DepVar1 ;
1299807   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1299808   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1299809   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1299810   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1299811   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1299812   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1299813   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1299814   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1299815   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1299816   +END;
MPRINT(EM_DIAGRAM):   END;
1299817   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1299818   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1299819   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1299820   +END;
MPRINT(EM_DIAGRAM):   END;
1299821   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1299822   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1299823   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1299824   +END;
MPRINT(EM_DIAGRAM):   END;
1299825   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1299826   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1299827   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1299828   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1299829   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1299830   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1299831   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1299832   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1299833   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1299834   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1299835   +END;
MPRINT(EM_DIAGRAM):   END;
1299836   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1299837   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1299838   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1299839   +drop
1299840   +H11
1299841   +H12
1299842   +H13
1299843   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1299844   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1299845    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1299846    quit;
1299847    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1299848    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1299849    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1299850    retain ID 2 Node "Neural32";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural32";
1299851    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1299852    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1602 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1602 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1299853    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1299854    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1299855    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1602 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1602 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1299856    proc sort data=EMWS8.Neural32_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural32_variableset out=_temp2(keep=NAME CREATOR);
1299857    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1299858    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL32_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1299859    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1299860    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1299861    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1299862    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1299863    proc contents data=EMWS8.Neural32_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural32_train out=_meta(keep=NAME) noprint;
1299864    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1299865    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1299866    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1299867    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1299868    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1299869    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1299870    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1299871    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1299872    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1299873    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1299873  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 832 rows and 5 columns.

1299874    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1299875    proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
1299876    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 832 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 832 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1299877    filename _pref
1299877  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1299878    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1299879    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1299880   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1299881   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1299882   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1299883   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1299884   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1299885   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1299886    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1299887    quit;
1299888    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1299889    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1299890    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1299891    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1299892    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1299893    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1299894    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1299895    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1299896    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1299897    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1299898    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1299899    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1299900    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1299901    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1299902    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1299903    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1299904    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1299905    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1299906    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1299907    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1299908    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1299909    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1299910    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1299911    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1299912    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1299913    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1299914    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1299914  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1299915    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1299916    proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
1299917    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 836 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1299918    filename _pref
1299918  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1299919    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1299920    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1299921   +
1299922   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1299923   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1299923  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1299924   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1299925   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1299926   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1299927   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1299928   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1299929    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1299930    quit;
1299931    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1299932    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1299933    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1299934    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1299935    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1299936    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1299937    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1299938    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1299939    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1299940    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1299941    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1299942    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1299943    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1299944    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1299945    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1299946    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1299947    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1299948    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1299949    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1299950    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1299951    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1299952    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1299953    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1299954    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1299955    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1299956    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1299957    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1299957  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1299958    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1299959    proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
1299960    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 875 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1299961    filename _pref
1299961  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1299962    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1299963    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1299964   +
1299965   +
1299966   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1299967   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1299968   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1299969   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1299970   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1299971   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1299972   +
1299973   +
1299974   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1299975   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1299976   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1299977   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1299978   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1299979   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1299980   +
1299981   +
1299982   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1299983   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1299984   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1299985   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1299986   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1299987   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1299988   +
1299989   +
1299990   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1299991   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1299992   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1299993   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1299994   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1299995   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1299996   +
1299997   +
1299998   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1299999   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1300000   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1300001   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1300002   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1300003   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1300004   +
1300005   +
1300006   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1300007   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1300008   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1300009   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1300010   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1300011   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1300012   +
1300013   +
1300014   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1300015   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1300016   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1300017   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1300018   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1300019   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1300020   +
1300021   +
1300022   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1300023   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1300024   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1300025   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1300026   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1300027   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1300028   +if
1300029   +_FILTERNORM1 not in ( '.')
1300030   + and
1300031   +_FILTERNORM2 not in ( '.')
1300032   + and
1300033   +_FILTERNORM3 not in ( '.')
1300034   + and
1300035   +_FILTERNORM4 not in ( '.')
1300036   + and
1300037   +_FILTERNORM5 not in ( '.')
1300038   + and
1300039   +_FILTERNORM6 not in ( '.')
1300040   + and
1300041   +_FILTERNORM7 not in ( ' ')
1300042   + and
1300043   +_FILTERNORM8 not in ( ' ')
1300044   +and
1300045   +( Dt_Customer ne .)
1300046   +and ( Income ne . and (Income<=107000))
1300047   +and ( Kidhome ne .)
1300048   +and ( MntFishProducts ne .)
1300049   +and ( MntFruits ne .)
1300050   +and ( MntGoldProds ne .)
1300051   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1300052   +and ( MntSweetProducts ne .)
1300053   +and ( MntWines ne .)
1300054   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1300055   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1300056   +and ( NumStorePurchases ne .)
1300057   +and ( NumWebPurchases ne .)
1300058   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1300059   +and ( Recency ne .)
1300060   +and ( Teenhome ne .)
1300061   +and ( Year_Birth ne .)
1300062   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1300063   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1300064   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1300065   +end;
MPRINT(EM_DIAGRAM):   end;
1300066   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1300067   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1300068    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1300069    quit;
1300070    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1300071    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1300072    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1300073    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1300074    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1300075    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1300076    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1300077    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1300078    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1300079    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1300080    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1300081    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1300082    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1300083    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1300084    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1300085    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1300086    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1300087    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1300088    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1300089    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1300090    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1300091    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1300092    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1300093    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1300094    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1300095    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1300096    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1300096  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1300097    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1300098    proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
1300099    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 941 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1300100    %macro varDept(fcmpdata=,id=);
1300101    %global nobs&id scoreFlag&id;
1300102    %let scoreFlag&id = 0;
1300103    %if &id=1 or ^&fcmpStart %then %do;
1300104    proc sort data=&fcmpdata out=_temp&id nodupkey;
1300105    by NAME;
1300106    where id=&id and LHS in( %let j=1;
1300107    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1300108    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1300109    "&var" %let j = %eval(&j+1);
1300110    %end;
1300111    );
1300112    run;
1300113    %let dsid = %sysfunc(open(_temp&id));
1300114    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1300115    %let dsid = %sysfunc(close(&dsid));
1300116    %if &&nobs&id %then %do;
1300117    %let scoreFlag&id = 1;
1300118    %let fcmpStart = 1;
1300119    %end;
1300120    %else %let fcmpStart = 0;
1300121    %end;
1300122    %else %do;
1300123    proc sort data=&fcmpdata out=_tempid;
1300124    where id=&id;
1300125    by LHS;
1300126    run;
1300127    %let dsid = %sysfunc(open(_tempid));
1300128    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1300129    %let dsid = %sysfunc(close(&dsid));
1300130    %if ^&&nobs&id %then %do;
1300131    proc datasets lib=work nolist;
1300132    delete _tempid;
1300133    run;
1300134    quit;
1300135    %end;
1300136    %else %do;
1300137    data _tempAll;
1300138    set %let j=%eval(&id-1);
1300139    %do x=1 %to &j;
1300140    %if &&nobs&x %then %do;
1300141    _temp&x %end;
1300142    %end;
1300143    ;
1300144    run;
1300145    proc sql;
1300146    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1300146  ! work._tempid p2 where p.name=p2.lhs;
1300147    quit;
1300148    data _temp&id;
1300149    set _temp&id;
1300150    where LHS ne '' and NAME ne '' and Node ne '';
1300151    run;
1300152    proc datasets lib=work nolist;
1300153    delete _tempAll;
1300154    run;
1300155    %let dsid = %sysfunc(open(_temp&id));
1300156    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1300157    %let dsid = %sysfunc(close(&dsid));
1300158    %if ^&&nobs&id %then %do;
1300159    proc datasets lib=work nolist;
1300160    delete _temp&id;
1300161    run;
1300162    quit;
1300163    %end;
1300164    %else %do;
1300165    %let scoreFlag&id = 1;
1300166    data _temp&id;
1300167    set _temp&id;
1300168    where LHS ne NAME and node ne '';
1300169    run;
1300170    %let dsid = %sysfunc(open(_temp&id));
1300171    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1300172    %let dsid = %sysfunc(close(&dsid));
1300173    %if ^&&nobs&id %then %do;
1300174    proc datasets lib=work nolist;
1300175    delete _temp&id;
1300176    run;
1300177    quit;
1300178    %end;
1300179    %else %do;
1300180    proc sort data=_temp&id nodupkey;
1300181    by LHS NAME;
1300182    run;
1300183    %end;
1300184    %end;
1300185    %end;
1300186    %end;
1300187    %mend varDept;
1300188    %macro optCode(outdata=fcmpdata);
1300189    %global fcmpStart;
1300190    %let fcmpStart = 0;
1300191    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1300192    %let NumNodes=9;
1300193    %do k=1 %to &NumNodes;
1300194    %vardept(fcmpdata=&outdata, id=&k);
1300195    %end;
1300196    %mend optCode;
1300197    %optcode(outData=EMWS8.Ensmbl22_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 98 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 73 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 25 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp6;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP6 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1300198    filename _pref
1300198  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural33\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural33\EMPUBLISHSCORE.sas";
1300199    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1300200    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural33\EMPUBLISHSCORE.sas.
1300201   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1300202   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1300203   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1300204   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1300205   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1300206   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1300207   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1300208   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1300209   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1300210   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1300211   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1300212   +LENGTH _WARN_ $4
1300213   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1300214   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1300215   +
1300216   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1300217   +
1300218   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1300219   +
1300220   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1300221   +
1300222   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1300223   +
1300224   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1300225   +
1300226   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1300227   +
1300228   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1300229   +
1300230   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1300231   +
1300232   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1300233   +
1300234   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1300235   +
1300236   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1300237   +
1300238   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1300239   +
1300240   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1300241   +
1300242   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1300243   +
1300244   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1300245   +
1300246   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1300247   +
1300248   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1300249   +
1300250   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1300251   +
1300252   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1300253   +
1300254   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1300255   +
1300256   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1300257   +
1300258   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1300259   +
1300260   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1300261   +
1300262   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1300263   +
1300264   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1300265   +
1300266   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1300267   +
1300268   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1300269   +
1300270   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1300271   +
1300272   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1300273   +
1300274   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1300275   +
1300276   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1300277   +
1300278   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1300279   +
1300280   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1300281   +
1300282   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1300283   +
1300284   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1300285   +
1300286   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1300287   +
1300288   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1300289   +
1300290   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1300291   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1300292   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1300293   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1300294   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1300295   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1300296   +end;
MPRINT(EM_DIAGRAM):   end;
1300297   +else do;
MPRINT(EM_DIAGRAM):   else do;
1300298   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1300299   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1300300   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1300301   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1300302   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1300303   +   end;
MPRINT(EM_DIAGRAM):   end;
1300304   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1300305   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1300306   +   end;
MPRINT(EM_DIAGRAM):   end;
1300307   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1300308   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1300309   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1300310   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1300311   +   end;
MPRINT(EM_DIAGRAM):   end;
1300312   +end;
MPRINT(EM_DIAGRAM):   end;
1300313   +
1300314   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1300315   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1300316   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1300317   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1300318   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1300319   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1300320   +end;
MPRINT(EM_DIAGRAM):   end;
1300321   +else do;
MPRINT(EM_DIAGRAM):   else do;
1300322   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1300323   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1300324   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1300325   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1300326   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1300327   +   end;
MPRINT(EM_DIAGRAM):   end;
1300328   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1300329   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1300330   +   end;
MPRINT(EM_DIAGRAM):   end;
1300331   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1300332   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1300333   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1300334   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1300335   +   end;
MPRINT(EM_DIAGRAM):   end;
1300336   +end;
MPRINT(EM_DIAGRAM):   end;
1300337   +
1300338   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1300339   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1300340   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1300341   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1300342   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1300343   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1300344   +end;
MPRINT(EM_DIAGRAM):   end;
1300345   +else do;
MPRINT(EM_DIAGRAM):   else do;
1300346   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1300347   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1300348   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1300349   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1300350   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1300351   +   end;
MPRINT(EM_DIAGRAM):   end;
1300352   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1300353   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1300354   +   end;
MPRINT(EM_DIAGRAM):   end;
1300355   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1300356   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1300357   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1300358   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1300359   +   end;
MPRINT(EM_DIAGRAM):   end;
1300360   +end;
MPRINT(EM_DIAGRAM):   end;
1300361   +
1300362   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1300363   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1300364   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1300365   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1300366   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1300367   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1300368   +end;
MPRINT(EM_DIAGRAM):   end;
1300369   +else do;
MPRINT(EM_DIAGRAM):   else do;
1300370   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1300371   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1300372   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1300373   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1300374   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1300375   +   end;
MPRINT(EM_DIAGRAM):   end;
1300376   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1300377   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1300378   +   end;
MPRINT(EM_DIAGRAM):   end;
1300379   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1300380   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1300381   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1300382   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1300383   +   end;
MPRINT(EM_DIAGRAM):   end;
1300384   +end;
MPRINT(EM_DIAGRAM):   end;
1300385   +
1300386   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1300387   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1300388   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1300389   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1300390   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1300391   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1300392   +end;
MPRINT(EM_DIAGRAM):   end;
1300393   +else do;
MPRINT(EM_DIAGRAM):   else do;
1300394   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1300395   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1300396   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1300397   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1300398   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1300399   +   end;
MPRINT(EM_DIAGRAM):   end;
1300400   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1300401   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1300402   +   end;
MPRINT(EM_DIAGRAM):   end;
1300403   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1300404   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1300405   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1300406   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1300407   +   end;
MPRINT(EM_DIAGRAM):   end;
1300408   +end;
MPRINT(EM_DIAGRAM):   end;
1300409   +
1300410   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1300411   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1300412   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1300413   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1300414   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1300415   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1300416   +end;
MPRINT(EM_DIAGRAM):   end;
1300417   +else do;
MPRINT(EM_DIAGRAM):   else do;
1300418   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1300419   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1300420   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1300421   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1300422   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1300423   +   end;
MPRINT(EM_DIAGRAM):   end;
1300424   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1300425   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1300426   +   end;
MPRINT(EM_DIAGRAM):   end;
1300427   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1300428   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1300429   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1300430   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1300431   +   end;
MPRINT(EM_DIAGRAM):   end;
1300432   +end;
MPRINT(EM_DIAGRAM):   end;
1300433   +
1300434   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1300435   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1300436   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1300437   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1300438   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1300439   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1300440   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1300441   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1300442   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1300443   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1300444   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1300445   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1300446   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1300447   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1300448   +end;
MPRINT(EM_DIAGRAM):   end;
1300449   +else do;
MPRINT(EM_DIAGRAM):   else do;
1300450   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1300451   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1300452   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1300453   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1300454   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1300455   +   end;
MPRINT(EM_DIAGRAM):   end;
1300456   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1300457   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1300458   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1300459   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1300460   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1300461   +   end;
MPRINT(EM_DIAGRAM):   end;
1300462   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1300463   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1300464   +   end;
MPRINT(EM_DIAGRAM):   end;
1300465   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1300466   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1300467   +   end;
MPRINT(EM_DIAGRAM):   end;
1300468   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1300469   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1300470   +   end;
MPRINT(EM_DIAGRAM):   end;
1300471   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1300472   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1300473   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1300474   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1300475   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1300476   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1300477   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1300478   +   end;
MPRINT(EM_DIAGRAM):   end;
1300479   +end;
MPRINT(EM_DIAGRAM):   end;
1300480   +
1300481   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1300482   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1300483   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1300484   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1300485   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1300486   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1300487   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1300488   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1300489   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1300490   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1300491   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1300492   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1300493   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1300494   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1300495   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1300496   +end;
MPRINT(EM_DIAGRAM):   end;
1300497   +else do;
MPRINT(EM_DIAGRAM):   else do;
1300498   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1300499   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1300500   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1300501   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1300502   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1300503   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1300504   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1300505   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1300506   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1300507   +         end;
MPRINT(EM_DIAGRAM):   end;
1300508   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1300509   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1300510   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1300511   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1300512   +            end;
MPRINT(EM_DIAGRAM):   end;
1300513   +         end;
MPRINT(EM_DIAGRAM):   end;
1300514   +      end;
MPRINT(EM_DIAGRAM):   end;
1300515   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1300516   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1300517   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1300518   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1300519   +         end;
MPRINT(EM_DIAGRAM):   end;
1300520   +      end;
MPRINT(EM_DIAGRAM):   end;
1300521   +   end;
MPRINT(EM_DIAGRAM):   end;
1300522   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1300523   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1300524   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1300525   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1300526   +      end;
MPRINT(EM_DIAGRAM):   end;
1300527   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1300528   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1300529   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1300530   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1300531   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1300532   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1300533   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1300534   +         end;
MPRINT(EM_DIAGRAM):   end;
1300535   +      end;
MPRINT(EM_DIAGRAM):   end;
1300536   +   end;
MPRINT(EM_DIAGRAM):   end;
1300537   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1300538   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1300539   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1300540   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1300541   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1300542   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1300543   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1300544   +   end;
MPRINT(EM_DIAGRAM):   end;
1300545   +end;
MPRINT(EM_DIAGRAM):   end;
1300546   +
1300547   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1300548   +*** Checking missing input Interval
1300549   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1300550   +
1300551   +IF NMISS(
1300552   +   Income ,
1300553   +   Kidhome ,
1300554   +   MntFishProducts ,
1300555   +   MntFruits ,
1300556   +   MntGoldProds ,
1300557   +   MntMeatProducts ,
1300558   +   MntSweetProducts ,
1300559   +   MntWines ,
1300560   +   NumCatalogPurchases ,
1300561   +   NumDealsPurchases ,
1300562   +   NumStorePurchases ,
1300563   +   NumWebPurchases ,
1300564   +   NumWebVisitsMonth ,
1300565   +   Recency ,
1300566   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
1300567   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1300568   +
1300569   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1300570   +END;
MPRINT(EM_DIAGRAM):   END;
1300571   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1300572   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1300573   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1300574   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1300575   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1300576   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1300577   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1300578   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1300579   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1300580   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1300581   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1300582   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1300583   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1300584   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1300585   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1300586   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1300587   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1300588   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1300589   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1300590   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1300591   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1300592   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1300593   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1300594   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1300595   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1300596   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1300597   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1300598   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1300599   +END;
MPRINT(EM_DIAGRAM):   END;
1300600   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1300601   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1300602   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1300603   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1300604   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1300605   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1300606   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1300607   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1300608   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1300609   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1300610   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1300611   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1300612   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1300613   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1300614   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1300615   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1300616   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1300617   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1300618   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1300619   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1300620   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1300621   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1300622   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1300623   +   ELSE S_NumCatalogPurchases
1300624   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1300625   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1300626   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1300627   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1300628   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1300629   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1300630   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1300631   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1300632   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1300633   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1300634   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1300635   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1300636   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1300637   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1300638   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1300639   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1300640   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1300641   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1300642   +END;
MPRINT(EM_DIAGRAM):   END;
1300643   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1300644   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1300645   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1300646   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1300647   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1300648   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1300649   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1300650   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1300651   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1300652   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1300653   +   H11  =     0.32435248899543 * S_Income  +    -0.47929849648429 * S_Kidhome
1300654   +          +     0.13364230231465 * S_MntFishProducts
1300655   +          +     -0.1386717864506 * S_MntFruits  +    -0.02769770185129 *
1300656   +        S_MntGoldProds  +    -0.29009812234724 * S_MntMeatProducts
1300657   +          +    -0.10871064476617 * S_MntSweetProducts
1300658   +          +     0.57858611197719 * S_MntWines  +    -0.26900817180555 *
1300659   +        S_NumCatalogPurchases  +    -0.39598523430317 * S_NumDealsPurchases
1300660   +          +     0.52835897625366 * S_NumStorePurchases
1300661   +          +     0.66297635444958 * S_NumWebPurchases
1300662   +          +    -0.31727971903608 * S_NumWebVisitsMonth
1300663   +          +     0.12789679291219 * S_Recency  +    -0.39270105014448 *
1300664   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.32435248899543 * S_Income + -0.47929849648429 * S_Kidhome + 
0.13364230231465 * S_MntFishProducts + -0.1386717864506 * S_MntFruits + -0.02769770185129 * 
S_MntGoldProds + -0.29009812234724 * S_MntMeatProducts + -0.10871064476617 * 
S_MntSweetProducts + 0.57858611197719 * S_MntWines + -0.26900817180555 * S_NumCatalogPurchases 
+ -0.39598523430317 * S_NumDealsPurchases + 0.52835897625366 * S_NumStorePurchases + 
0.66297635444958 * S_NumWebPurchases + -0.31727971903608 * S_NumWebVisitsMonth + 
0.12789679291219 * S_Recency + -0.39270105014448 * S_Teenhome ;
1300665   +   H12  =     0.37777254641249 * S_Income  +     0.79199857244438 * S_Kidhome
1300666   +          +     0.14748983783528 * S_MntFishProducts
1300667   +          +     0.14994032216514 * S_MntFruits  +     0.19147871752132 *
1300668   +        S_MntGoldProds  +     0.80535213270443 * S_MntMeatProducts
1300669   +          +     0.31095426478608 * S_MntSweetProducts
1300670   +          +     0.00471809437476 * S_MntWines  +     0.93716396534802 *
1300671   +        S_NumCatalogPurchases  +     0.86841248727948 * S_NumDealsPurchases
1300672   +          +     0.14387100066933 * S_NumStorePurchases
1300673   +          +    -0.01648998884133 * S_NumWebPurchases
1300674   +          +     -0.1378597161576 * S_NumWebVisitsMonth
1300675   +          +     0.15850653387379 * S_Recency  +     0.11714339614827 *
1300676   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.37777254641249 * S_Income + 0.79199857244438 * S_Kidhome + 
0.14748983783528 * S_MntFishProducts + 0.14994032216514 * S_MntFruits + 0.19147871752132 * 
S_MntGoldProds + 0.80535213270443 * S_MntMeatProducts + 0.31095426478608 * S_MntSweetProducts 
+ 0.00471809437476 * S_MntWines + 0.93716396534802 * S_NumCatalogPurchases + 0.86841248727948 
* S_NumDealsPurchases + 0.14387100066933 * S_NumStorePurchases + -0.01648998884133 * 
S_NumWebPurchases + -0.1378597161576 * S_NumWebVisitsMonth + 0.15850653387379 * S_Recency + 
0.11714339614827 * S_Teenhome ;
1300677   +   H13  =    -0.31490756773649 * S_Income  +      0.4776214738577 * S_Kidhome
1300678   +          +     0.00774185404534 * S_MntFishProducts
1300679   +          +     0.22292845341942 * S_MntFruits  +     0.11636422687317 *
1300680   +        S_MntGoldProds  +    -0.45522230281212 * S_MntMeatProducts
1300681   +          +     0.28728624268589 * S_MntSweetProducts
1300682   +          +     0.74892928025295 * S_MntWines  +     -0.4834082773325 *
1300683   +        S_NumCatalogPurchases  +    -0.05055717315946 * S_NumDealsPurchases
1300684   +          +     0.56446566213593 * S_NumStorePurchases
1300685   +          +     0.44547549135846 * S_NumWebPurchases
1300686   +          +    -1.17648505936662 * S_NumWebVisitsMonth
1300687   +          +     1.30076355226685 * S_Recency  +     0.56217939635691 *
1300688   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.31490756773649 * S_Income + 0.4776214738577 * S_Kidhome + 
0.00774185404534 * S_MntFishProducts + 0.22292845341942 * S_MntFruits + 0.11636422687317 * 
S_MntGoldProds + -0.45522230281212 * S_MntMeatProducts + 0.28728624268589 * S_MntSweetProducts 
+ 0.74892928025295 * S_MntWines + -0.4834082773325 * S_NumCatalogPurchases + -0.05055717315946 
* S_NumDealsPurchases + 0.56446566213593 * S_NumStorePurchases + 0.44547549135846 * 
S_NumWebPurchases + -1.17648505936662 * S_NumWebVisitsMonth + 1.30076355226685 * S_Recency + 
0.56217939635691 * S_Teenhome ;
1300689   +   H14  =    -0.40179905952719 * S_Income  +     0.16141565212918 * S_Kidhome
1300690   +          +     0.24665716882586 * S_MntFishProducts
1300691   +          +     0.03410629332469 * S_MntFruits  +     -0.1353295645077 *
1300692   +        S_MntGoldProds  +    -0.74661391150362 * S_MntMeatProducts
1300693   +          +    -0.10530818594736 * S_MntSweetProducts
1300694   +          +     0.30618479493194 * S_MntWines  +    -0.63426712804061 *
1300695   +        S_NumCatalogPurchases  +    -0.39486403699564 * S_NumDealsPurchases
1300696   +          +     0.36617016651032 * S_NumStorePurchases
1300697   +          +      0.3580014320946 * S_NumWebPurchases
1300698   +          +    -0.72597289213724 * S_NumWebVisitsMonth
1300699   +          +     0.93272927444012 * S_Recency  +     0.24531402677279 *
1300700   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.40179905952719 * S_Income + 0.16141565212918 * S_Kidhome + 
0.24665716882586 * S_MntFishProducts + 0.03410629332469 * S_MntFruits + -0.1353295645077 * 
S_MntGoldProds + -0.74661391150362 * S_MntMeatProducts + -0.10530818594736 * 
S_MntSweetProducts + 0.30618479493194 * S_MntWines + -0.63426712804061 * S_NumCatalogPurchases 
+ -0.39486403699564 * S_NumDealsPurchases + 0.36617016651032 * S_NumStorePurchases + 
0.3580014320946 * S_NumWebPurchases + -0.72597289213724 * S_NumWebVisitsMonth + 
0.93272927444012 * S_Recency + 0.24531402677279 * S_Teenhome ;
1300701   +   H11  = H11  +     0.10790306691381 * AcceptedCmp10
1300702   +          +     0.36067546675468 * AcceptedCmp20  +     0.56838342781466 *
1300703   +        AcceptedCmp30  +     0.10138997954661 * AcceptedCmp40
1300704   +          +     0.23809874960179 * AcceptedCmp50  +     0.42164522965364 *
1300705   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.10790306691381 * AcceptedCmp10 + 0.36067546675468 * 
AcceptedCmp20 + 0.56838342781466 * AcceptedCmp30 + 0.10138997954661 * AcceptedCmp40 + 
0.23809874960179 * AcceptedCmp50 + 0.42164522965364 * Complain0 ;
1300706   +   H12  = H12  +    -0.10342435301564 * AcceptedCmp10
1300707   +          +     -0.1021625473908 * AcceptedCmp20  +    -0.17400073301804 *
1300708   +        AcceptedCmp30  +      0.1295257925186 * AcceptedCmp40
1300709   +          +    -0.17149939617806 * AcceptedCmp50  +    -0.11843709761825 *
1300710   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.10342435301564 * AcceptedCmp10 + -0.1021625473908 * 
AcceptedCmp20 + -0.17400073301804 * AcceptedCmp30 + 0.1295257925186 * AcceptedCmp40 + 
-0.17149939617806 * AcceptedCmp50 + -0.11843709761825 * Complain0 ;
1300711   +   H13  = H13  +      0.3357459370893 * AcceptedCmp10
1300712   +          +      -0.142120215863 * AcceptedCmp20  +     0.74265608697316 *
1300713   +        AcceptedCmp30  +     0.62493796040954 * AcceptedCmp40
1300714   +          +     0.60033091776267 * AcceptedCmp50  +    -0.70537393421868 *
1300715   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.3357459370893 * AcceptedCmp10 + -0.142120215863 * 
AcceptedCmp20 + 0.74265608697316 * AcceptedCmp30 + 0.62493796040954 * AcceptedCmp40 + 
0.60033091776267 * AcceptedCmp50 + -0.70537393421868 * Complain0 ;
1300716   +   H14  = H14  +     0.52427760948235 * AcceptedCmp10
1300717   +          +     0.50852083885302 * AcceptedCmp20  +     0.30116257238429 *
1300718   +        AcceptedCmp30  +     0.31213749631365 * AcceptedCmp40
1300719   +          +     0.49344261660916 * AcceptedCmp50  +    -0.18226921500969 *
1300720   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.52427760948235 * AcceptedCmp10 + 0.50852083885302 * 
AcceptedCmp20 + 0.30116257238429 * AcceptedCmp30 + 0.31213749631365 * AcceptedCmp40 + 
0.49344261660916 * AcceptedCmp50 + -0.18226921500969 * Complain0 ;
1300721   +   H11  = H11  +     0.04284090874847 * Education2n_Cycle
1300722   +          +    -0.30425860762413 * EducationBasic  +    -0.44977960705402 *
1300723   +        EducationGraduation  +     -0.0712759822621 * EducationMaster
1300724   +          +     0.05171313818048 * Marital_StatusDivorced
1300725   +          +    -0.79112453157624 * Marital_StatusMarried
1300726   +          +     0.89650138723512 * Marital_StatusSingle
1300727   +          +    -0.22094240412913 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04284090874847 * Education2n_Cycle + -0.30425860762413 * 
EducationBasic + -0.44977960705402 * EducationGraduation + -0.0712759822621 * EducationMaster 
+ 0.05171313818048 * Marital_StatusDivorced + -0.79112453157624 * Marital_StatusMarried + 
0.89650138723512 * Marital_StatusSingle + -0.22094240412913 * Marital_StatusTogether ;
1300728   +   H12  = H12  +    -0.32431446530898 * Education2n_Cycle
1300729   +          +     0.04651949620543 * EducationBasic  +     0.50250608857106 *
1300730   +        EducationGraduation  +     0.00514401910219 * EducationMaster
1300731   +          +     0.05091092042416 * Marital_StatusDivorced
1300732   +          +     0.86642985712339 * Marital_StatusMarried
1300733   +          +    -0.14148832619997 * Marital_StatusSingle
1300734   +          +     0.54248977280079 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.32431446530898 * Education2n_Cycle + 0.04651949620543 * 
EducationBasic + 0.50250608857106 * EducationGraduation + 0.00514401910219 * EducationMaster + 
0.05091092042416 * Marital_StatusDivorced + 0.86642985712339 * Marital_StatusMarried + 
-0.14148832619997 * Marital_StatusSingle + 0.54248977280079 * Marital_StatusTogether ;
1300735   +   H13  = H13  +      0.0307333873684 * Education2n_Cycle
1300736   +          +     0.54778728297045 * EducationBasic  +    -0.56032296783121 *
1300737   +        EducationGraduation  +     0.26811389967146 * EducationMaster
1300738   +          +    -0.67787102917679 * Marital_StatusDivorced
1300739   +          +     1.38931504762816 * Marital_StatusMarried
1300740   +          +    -0.51164629287485 * Marital_StatusSingle
1300741   +          +     1.18856608313733 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.0307333873684 * Education2n_Cycle + 0.54778728297045 * 
EducationBasic + -0.56032296783121 * EducationGraduation + 0.26811389967146 * EducationMaster 
+ -0.67787102917679 * Marital_StatusDivorced + 1.38931504762816 * Marital_StatusMarried + 
-0.51164629287485 * Marital_StatusSingle + 1.18856608313733 * Marital_StatusTogether ;
1300742   +   H14  = H14  +    -0.07575289231798 * Education2n_Cycle
1300743   +          +     0.20678548929493 * EducationBasic  +     0.15952949579281 *
1300744   +        EducationGraduation  +    -0.08313247341922 * EducationMaster
1300745   +          +     0.12658153975639 * Marital_StatusDivorced
1300746   +          +     0.20111721742791 * Marital_StatusMarried
1300747   +          +     -0.3521524791648 * Marital_StatusSingle
1300748   +          +     0.24908846940254 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.07575289231798 * Education2n_Cycle + 0.20678548929493 * 
EducationBasic + 0.15952949579281 * EducationGraduation + -0.08313247341922 * EducationMaster 
+ 0.12658153975639 * Marital_StatusDivorced + 0.20111721742791 * Marital_StatusMarried + 
-0.3521524791648 * Marital_StatusSingle + 0.24908846940254 * Marital_StatusTogether ;
1300749   +   H11  =      0.8846003542153 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.8846003542153 + H11 ;
1300750   +   H12  =      1.7793661863354 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.7793661863354 + H12 ;
1300751   +   H13  =    -0.73914187312129 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.73914187312129 + H13 ;
1300752   +   H14  =    -0.28907220457418 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.28907220457418 + H14 ;
1300753   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1300754   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1300755   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1300756   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1300757   +END;
MPRINT(EM_DIAGRAM):   END;
1300758   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1300759   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1300760   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1300761   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1300762   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1300763   +END;
MPRINT(EM_DIAGRAM):   END;
1300764   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1300765   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1300766   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1300767   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1300768   +   P_DepVar1  =    -1.84303414221873 * H11  +     1.56062653143645 * H12
1300769   +          +     -3.0630784922123 * H13  +    -4.55573659919551 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.84303414221873 * H11 + 1.56062653143645 * H12 + 
-3.0630784922123 * H13 + -4.55573659919551 * H14 ;
1300770   +   P_DepVar1  =    -1.51714888392638 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.51714888392638 + P_DepVar1 ;
1300771   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1300772   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1300773   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1300774   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1300775   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1300776   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1300777   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1300778   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1300779   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1300780   +END;
MPRINT(EM_DIAGRAM):   END;
1300781   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1300782   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1300783   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1300784   +END;
MPRINT(EM_DIAGRAM):   END;
1300785   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1300786   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1300787   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1300788   +END;
MPRINT(EM_DIAGRAM):   END;
1300789   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1300790   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1300791   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1300792   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1300793   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1300794   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1300795   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1300796   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1300797   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1300798   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1300799   +END;
MPRINT(EM_DIAGRAM):   END;
1300800   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1300801   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1300802   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1300803   +drop
1300804   +H11
1300805   +H12
1300806   +H13
1300807   +H14
1300808   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1300809   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1300810    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1300811    quit;
1300812    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1300813    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1300814    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1300815    retain ID 2 Node "Neural33";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural33";
1300816    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1300817    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1740 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1740 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1300818    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1300819    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1300820    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1740 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1740 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1300821    proc sort data=EMWS8.Neural33_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural33_variableset out=_temp2(keep=NAME CREATOR);
1300822    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1300823    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL33_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1300824    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1300825    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1300826    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1300827    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1300828    proc contents data=EMWS8.Neural33_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural33_train out=_meta(keep=NAME) noprint;
1300829    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1300830    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1300831    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1300832    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1300833    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1300834    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1300835    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1300836    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1300837    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1300838    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1300838  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 878 rows and 5 columns.

1300839    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1300840    proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
1300841    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 878 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 878 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1300842    filename _pref
1300842  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1300843    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1300844    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1300845   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1300846   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1300847   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1300848   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1300849   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1300850   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1300851    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1300852    quit;
1300853    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1300854    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1300855    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1300856    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1300857    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1300858    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1300859    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1300860    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1300861    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1300862    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1300863    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1300864    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1300865    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1300866    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1300867    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1300868    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1300869    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1300870    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

1300871    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1300872    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1300873    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1300874    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1300875    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1300876    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1300877    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1300878    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1300879    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1300879  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1300880    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1300881    proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
1300882    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 882 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1300883    filename _pref
1300883  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1300884    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1300885    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1300886   +
1300887   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1300888   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1300888  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1300889   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1300890   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1300891   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1300892   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1300893   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1300894    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1300895    quit;
1300896    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1300897    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1300898    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1300899    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1300900    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1300901    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1300902    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1300903    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1300904    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1300905    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1300906    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1300907    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1300908    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1300909    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1300910    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1300911    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1300912    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1300913    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1300914    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1300915    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1300916    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1300917    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1300918    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1300919    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1300920    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1300921    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1300922    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1300922  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1300923    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1300924    proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
1300925    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 921 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1300926    filename _pref
1300926  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1300927    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1300928    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1300929   +
1300930   +
1300931   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1300932   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1300933   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1300934   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1300935   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1300936   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1300937   +
1300938   +
1300939   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1300940   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1300941   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1300942   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1300943   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1300944   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1300945   +
1300946   +
1300947   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1300948   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1300949   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1300950   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1300951   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1300952   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1300953   +
1300954   +
1300955   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1300956   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1300957   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1300958   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1300959   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1300960   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1300961   +
1300962   +
1300963   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1300964   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1300965   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1300966   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1300967   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1300968   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1300969   +
1300970   +
1300971   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1300972   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1300973   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1300974   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1300975   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1300976   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1300977   +
1300978   +
1300979   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1300980   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1300981   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1300982   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1300983   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1300984   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1300985   +
1300986   +
1300987   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1300988   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1300989   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1300990   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1300991   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1300992   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1300993   +if
1300994   +_FILTERNORM1 not in ( '.')
1300995   + and
1300996   +_FILTERNORM2 not in ( '.')
1300997   + and
1300998   +_FILTERNORM3 not in ( '.')
1300999   + and
1301000   +_FILTERNORM4 not in ( '.')
1301001   + and
1301002   +_FILTERNORM5 not in ( '.')
1301003   + and
1301004   +_FILTERNORM6 not in ( '.')
1301005   + and
1301006   +_FILTERNORM7 not in ( ' ')
1301007   + and
1301008   +_FILTERNORM8 not in ( ' ')
1301009   +and
1301010   +( Dt_Customer ne .)
1301011   +and ( Income ne . and (Income<=107000))
1301012   +and ( Kidhome ne .)
1301013   +and ( MntFishProducts ne .)
1301014   +and ( MntFruits ne .)
1301015   +and ( MntGoldProds ne .)
1301016   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1301017   +and ( MntSweetProducts ne .)
1301018   +and ( MntWines ne .)
1301019   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1301020   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1301021   +and ( NumStorePurchases ne .)
1301022   +and ( NumWebPurchases ne .)
1301023   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1301024   +and ( Recency ne .)
1301025   +and ( Teenhome ne .)
1301026   +and ( Year_Birth ne .)
1301027   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1301028   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1301029   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1301030   +end;
MPRINT(EM_DIAGRAM):   end;
1301031   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1301032   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1301033    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1301034    quit;
1301035    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1301036    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1301037    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1301038    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1301039    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1301040    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1301041    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1301042    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1301043    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1301044    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1301045    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1301046    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1301047    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1301048    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1301049    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1301050    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1301051    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1301052    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1301053    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1301054    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1301055    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1301056    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1301057    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1301058    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1301059    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1301060    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1301061    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1301061  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1301062    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1301063    proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
1301064    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 987 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1301065    %macro varDept(fcmpdata=,id=);
1301066    %global nobs&id scoreFlag&id;
1301067    %let scoreFlag&id = 0;
1301068    %if &id=1 or ^&fcmpStart %then %do;
1301069    proc sort data=&fcmpdata out=_temp&id nodupkey;
1301070    by NAME;
1301071    where id=&id and LHS in( %let j=1;
1301072    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1301073    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1301074    "&var" %let j = %eval(&j+1);
1301075    %end;
1301076    );
1301077    run;
1301078    %let dsid = %sysfunc(open(_temp&id));
1301079    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1301080    %let dsid = %sysfunc(close(&dsid));
1301081    %if &&nobs&id %then %do;
1301082    %let scoreFlag&id = 1;
1301083    %let fcmpStart = 1;
1301084    %end;
1301085    %else %let fcmpStart = 0;
1301086    %end;
1301087    %else %do;
1301088    proc sort data=&fcmpdata out=_tempid;
1301089    where id=&id;
1301090    by LHS;
1301091    run;
1301092    %let dsid = %sysfunc(open(_tempid));
1301093    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1301094    %let dsid = %sysfunc(close(&dsid));
1301095    %if ^&&nobs&id %then %do;
1301096    proc datasets lib=work nolist;
1301097    delete _tempid;
1301098    run;
1301099    quit;
1301100    %end;
1301101    %else %do;
1301102    data _tempAll;
1301103    set %let j=%eval(&id-1);
1301104    %do x=1 %to &j;
1301105    %if &&nobs&x %then %do;
1301106    _temp&x %end;
1301107    %end;
1301108    ;
1301109    run;
1301110    proc sql;
1301111    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1301111  ! work._tempid p2 where p.name=p2.lhs;
1301112    quit;
1301113    data _temp&id;
1301114    set _temp&id;
1301115    where LHS ne '' and NAME ne '' and Node ne '';
1301116    run;
1301117    proc datasets lib=work nolist;
1301118    delete _tempAll;
1301119    run;
1301120    %let dsid = %sysfunc(open(_temp&id));
1301121    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1301122    %let dsid = %sysfunc(close(&dsid));
1301123    %if ^&&nobs&id %then %do;
1301124    proc datasets lib=work nolist;
1301125    delete _temp&id;
1301126    run;
1301127    quit;
1301128    %end;
1301129    %else %do;
1301130    %let scoreFlag&id = 1;
1301131    data _temp&id;
1301132    set _temp&id;
1301133    where LHS ne NAME and node ne '';
1301134    run;
1301135    %let dsid = %sysfunc(open(_temp&id));
1301136    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1301137    %let dsid = %sysfunc(close(&dsid));
1301138    %if ^&&nobs&id %then %do;
1301139    proc datasets lib=work nolist;
1301140    delete _temp&id;
1301141    run;
1301142    quit;
1301143    %end;
1301144    %else %do;
1301145    proc sort data=_temp&id nodupkey;
1301146    by LHS NAME;
1301147    run;
1301148    %end;
1301149    %end;
1301150    %end;
1301151    %end;
1301152    %mend varDept;
1301153    %macro optCode(outdata=fcmpdata);
1301154    %global fcmpStart;
1301155    %let fcmpStart = 0;
1301156    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1301157    %let NumNodes=9;
1301158    %do k=1 %to &NumNodes;
1301159    %vardept(fcmpdata=&outdata, id=&k);
1301160    %end;
1301161    %mend optCode;
1301162    %optcode(outData=EMWS8.Ensmbl22_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 98 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 73 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 25 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp6;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP6 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1301163    filename _pref
1301163  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural34\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural34\EMPUBLISHSCORE.sas";
1301164    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1301165    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural34\EMPUBLISHSCORE.sas.
1301166   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1301167   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1301168   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1301169   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1301170   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1301171   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1301172   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1301173   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1301174   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1301175   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1301176   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1301177   +LENGTH _WARN_ $4
1301178   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1301179   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1301180   +
1301181   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1301182   +
1301183   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1301184   +
1301185   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1301186   +
1301187   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1301188   +
1301189   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1301190   +
1301191   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1301192   +
1301193   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1301194   +
1301195   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1301196   +
1301197   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1301198   +
1301199   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1301200   +
1301201   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1301202   +
1301203   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1301204   +
1301205   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1301206   +
1301207   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1301208   +
1301209   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1301210   +
1301211   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1301212   +
1301213   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1301214   +
1301215   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1301216   +
1301217   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1301218   +
1301219   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1301220   +
1301221   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1301222   +
1301223   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1301224   +
1301225   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1301226   +
1301227   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1301228   +
1301229   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1301230   +
1301231   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1301232   +
1301233   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1301234   +
1301235   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1301236   +
1301237   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1301238   +
1301239   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1301240   +
1301241   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1301242   +
1301243   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1301244   +
1301245   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1301246   +
1301247   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1301248   +
1301249   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1301250   +
1301251   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1301252   +
1301253   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1301254   +
1301255   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1301256   +
1301257   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1301258   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1301259   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1301260   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1301261   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1301262   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1301263   +end;
MPRINT(EM_DIAGRAM):   end;
1301264   +else do;
MPRINT(EM_DIAGRAM):   else do;
1301265   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1301266   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1301267   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1301268   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1301269   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1301270   +   end;
MPRINT(EM_DIAGRAM):   end;
1301271   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1301272   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1301273   +   end;
MPRINT(EM_DIAGRAM):   end;
1301274   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1301275   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1301276   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1301277   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1301278   +   end;
MPRINT(EM_DIAGRAM):   end;
1301279   +end;
MPRINT(EM_DIAGRAM):   end;
1301280   +
1301281   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1301282   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1301283   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1301284   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1301285   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1301286   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1301287   +end;
MPRINT(EM_DIAGRAM):   end;
1301288   +else do;
MPRINT(EM_DIAGRAM):   else do;
1301289   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1301290   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1301291   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1301292   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1301293   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1301294   +   end;
MPRINT(EM_DIAGRAM):   end;
1301295   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1301296   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1301297   +   end;
MPRINT(EM_DIAGRAM):   end;
1301298   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1301299   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1301300   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1301301   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1301302   +   end;
MPRINT(EM_DIAGRAM):   end;
1301303   +end;
MPRINT(EM_DIAGRAM):   end;
1301304   +
1301305   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1301306   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1301307   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1301308   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1301309   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1301310   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1301311   +end;
MPRINT(EM_DIAGRAM):   end;
1301312   +else do;
MPRINT(EM_DIAGRAM):   else do;
1301313   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1301314   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1301315   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1301316   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1301317   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1301318   +   end;
MPRINT(EM_DIAGRAM):   end;
1301319   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1301320   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1301321   +   end;
MPRINT(EM_DIAGRAM):   end;
1301322   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1301323   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1301324   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1301325   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1301326   +   end;
MPRINT(EM_DIAGRAM):   end;
1301327   +end;
MPRINT(EM_DIAGRAM):   end;
1301328   +
1301329   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1301330   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1301331   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1301332   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1301333   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1301334   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1301335   +end;
MPRINT(EM_DIAGRAM):   end;
1301336   +else do;
MPRINT(EM_DIAGRAM):   else do;
1301337   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1301338   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1301339   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1301340   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1301341   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1301342   +   end;
MPRINT(EM_DIAGRAM):   end;
1301343   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1301344   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1301345   +   end;
MPRINT(EM_DIAGRAM):   end;
1301346   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1301347   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1301348   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1301349   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1301350   +   end;
MPRINT(EM_DIAGRAM):   end;
1301351   +end;
MPRINT(EM_DIAGRAM):   end;
1301352   +
1301353   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1301354   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1301355   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1301356   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1301357   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1301358   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1301359   +end;
MPRINT(EM_DIAGRAM):   end;
1301360   +else do;
MPRINT(EM_DIAGRAM):   else do;
1301361   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1301362   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1301363   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1301364   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1301365   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1301366   +   end;
MPRINT(EM_DIAGRAM):   end;
1301367   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1301368   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1301369   +   end;
MPRINT(EM_DIAGRAM):   end;
1301370   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1301371   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1301372   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1301373   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1301374   +   end;
MPRINT(EM_DIAGRAM):   end;
1301375   +end;
MPRINT(EM_DIAGRAM):   end;
1301376   +
1301377   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1301378   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1301379   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1301380   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1301381   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1301382   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1301383   +end;
MPRINT(EM_DIAGRAM):   end;
1301384   +else do;
MPRINT(EM_DIAGRAM):   else do;
1301385   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1301386   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1301387   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1301388   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1301389   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1301390   +   end;
MPRINT(EM_DIAGRAM):   end;
1301391   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1301392   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1301393   +   end;
MPRINT(EM_DIAGRAM):   end;
1301394   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1301395   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1301396   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1301397   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1301398   +   end;
MPRINT(EM_DIAGRAM):   end;
1301399   +end;
MPRINT(EM_DIAGRAM):   end;
1301400   +
1301401   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1301402   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1301403   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1301404   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1301405   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1301406   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1301407   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1301408   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1301409   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1301410   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1301411   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1301412   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1301413   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1301414   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1301415   +end;
MPRINT(EM_DIAGRAM):   end;
1301416   +else do;
MPRINT(EM_DIAGRAM):   else do;
1301417   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1301418   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1301419   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1301420   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1301421   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1301422   +   end;
MPRINT(EM_DIAGRAM):   end;
1301423   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1301424   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1301425   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1301426   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1301427   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1301428   +   end;
MPRINT(EM_DIAGRAM):   end;
1301429   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1301430   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1301431   +   end;
MPRINT(EM_DIAGRAM):   end;
1301432   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1301433   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1301434   +   end;
MPRINT(EM_DIAGRAM):   end;
1301435   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1301436   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1301437   +   end;
MPRINT(EM_DIAGRAM):   end;
1301438   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1301439   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1301440   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1301441   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1301442   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1301443   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1301444   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1301445   +   end;
MPRINT(EM_DIAGRAM):   end;
1301446   +end;
MPRINT(EM_DIAGRAM):   end;
1301447   +
1301448   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1301449   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1301450   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1301451   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1301452   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1301453   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1301454   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1301455   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1301456   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1301457   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1301458   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1301459   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1301460   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1301461   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1301462   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1301463   +end;
MPRINT(EM_DIAGRAM):   end;
1301464   +else do;
MPRINT(EM_DIAGRAM):   else do;
1301465   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1301466   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1301467   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1301468   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1301469   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1301470   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1301471   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1301472   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1301473   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1301474   +         end;
MPRINT(EM_DIAGRAM):   end;
1301475   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1301476   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1301477   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1301478   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1301479   +            end;
MPRINT(EM_DIAGRAM):   end;
1301480   +         end;
MPRINT(EM_DIAGRAM):   end;
1301481   +      end;
MPRINT(EM_DIAGRAM):   end;
1301482   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1301483   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1301484   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1301485   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1301486   +         end;
MPRINT(EM_DIAGRAM):   end;
1301487   +      end;
MPRINT(EM_DIAGRAM):   end;
1301488   +   end;
MPRINT(EM_DIAGRAM):   end;
1301489   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1301490   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1301491   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1301492   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1301493   +      end;
MPRINT(EM_DIAGRAM):   end;
1301494   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1301495   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1301496   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1301497   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1301498   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1301499   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1301500   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1301501   +         end;
MPRINT(EM_DIAGRAM):   end;
1301502   +      end;
MPRINT(EM_DIAGRAM):   end;
1301503   +   end;
MPRINT(EM_DIAGRAM):   end;
1301504   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1301505   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1301506   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1301507   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1301508   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1301509   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1301510   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1301511   +   end;
MPRINT(EM_DIAGRAM):   end;
1301512   +end;
MPRINT(EM_DIAGRAM):   end;
1301513   +
1301514   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1301515   +*** Checking missing input Interval
1301516   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1301517   +
1301518   +IF NMISS(
1301519   +   Income ,
1301520   +   Kidhome ,
1301521   +   MntFishProducts ,
1301522   +   MntFruits ,
1301523   +   MntGoldProds ,
1301524   +   MntMeatProducts ,
1301525   +   MntSweetProducts ,
1301526   +   MntWines ,
1301527   +   NumCatalogPurchases ,
1301528   +   NumDealsPurchases ,
1301529   +   NumStorePurchases ,
1301530   +   NumWebPurchases ,
1301531   +   NumWebVisitsMonth ,
1301532   +   Recency ,
1301533   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
1301534   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1301535   +
1301536   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1301537   +END;
MPRINT(EM_DIAGRAM):   END;
1301538   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1301539   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1301540   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1301541   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1301542   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1301543   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1301544   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1301545   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1301546   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1301547   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1301548   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1301549   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1301550   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1301551   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1301552   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1301553   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1301554   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1301555   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1301556   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1301557   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1301558   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1301559   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1301560   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1301561   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1301562   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1301563   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1301564   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1301565   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1301566   +END;
MPRINT(EM_DIAGRAM):   END;
1301567   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1301568   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1301569   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1301570   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1301571   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1301572   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1301573   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1301574   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1301575   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1301576   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1301577   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1301578   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1301579   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1301580   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1301581   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1301582   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1301583   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1301584   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1301585   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1301586   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1301587   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1301588   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1301589   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1301590   +   ELSE S_NumCatalogPurchases
1301591   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1301592   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1301593   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1301594   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1301595   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1301596   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1301597   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1301598   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1301599   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1301600   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1301601   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1301602   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1301603   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1301604   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1301605   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1301606   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1301607   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1301608   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1301609   +END;
MPRINT(EM_DIAGRAM):   END;
1301610   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1301611   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1301612   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1301613   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1301614   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1301615   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1301616   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1301617   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1301618   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1301619   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1301620   +   H11  =    -0.81572379016921 * S_Income  +    -0.07670946585348 * S_Kidhome
1301621   +          +     0.24367603598167 * S_MntFishProducts
1301622   +          +     0.19692980127348 * S_MntFruits  +    -0.03926738185333 *
1301623   +        S_MntGoldProds  +    -0.20900804333353 * S_MntMeatProducts
1301624   +          +     0.34054806441484 * S_MntSweetProducts
1301625   +          +     0.65956211369383 * S_MntWines  +    -0.95375334578522 *
1301626   +        S_NumCatalogPurchases  +    -0.73124740368567 * S_NumDealsPurchases
1301627   +          +     0.98942946974575 * S_NumStorePurchases
1301628   +          +     0.89701206630103 * S_NumWebPurchases
1301629   +          +    -1.22878611472154 * S_NumWebVisitsMonth
1301630   +          +     1.44981870978354 * S_Recency  +     0.47533125686411 *
1301631   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.81572379016921 * S_Income + -0.07670946585348 * S_Kidhome + 
0.24367603598167 * S_MntFishProducts + 0.19692980127348 * S_MntFruits + -0.03926738185333 * 
S_MntGoldProds + -0.20900804333353 * S_MntMeatProducts + 0.34054806441484 * S_MntSweetProducts 
+ 0.65956211369383 * S_MntWines + -0.95375334578522 * S_NumCatalogPurchases + 
-0.73124740368567 * S_NumDealsPurchases + 0.98942946974575 * S_NumStorePurchases + 
0.89701206630103 * S_NumWebPurchases + -1.22878611472154 * S_NumWebVisitsMonth + 
1.44981870978354 * S_Recency + 0.47533125686411 * S_Teenhome ;
1301632   +   H12  =    -0.18875145195495 * S_Income  +     0.42230998482453 * S_Kidhome
1301633   +          +     0.16683404689723 * S_MntFishProducts
1301634   +          +     0.32072658929401 * S_MntFruits  +    -0.12341748032201 *
1301635   +        S_MntGoldProds  +    -1.56478754527255 * S_MntMeatProducts
1301636   +          +     0.20389084548968 * S_MntSweetProducts
1301637   +          +     0.95592931625509 * S_MntWines  +    -0.69996817353755 *
1301638   +        S_NumCatalogPurchases  +    -0.92709806328697 * S_NumDealsPurchases
1301639   +          +     1.27164659640366 * S_NumStorePurchases
1301640   +          +     1.02122194207802 * S_NumWebPurchases
1301641   +          +     -1.5111033436803 * S_NumWebVisitsMonth
1301642   +          +     1.63712814901544 * S_Recency  +     0.14205116840572 *
1301643   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.18875145195495 * S_Income + 0.42230998482453 * S_Kidhome + 
0.16683404689723 * S_MntFishProducts + 0.32072658929401 * S_MntFruits + -0.12341748032201 * 
S_MntGoldProds + -1.56478754527255 * S_MntMeatProducts + 0.20389084548968 * S_MntSweetProducts 
+ 0.95592931625509 * S_MntWines + -0.69996817353755 * S_NumCatalogPurchases + 
-0.92709806328697 * S_NumDealsPurchases + 1.27164659640366 * S_NumStorePurchases + 
1.02122194207802 * S_NumWebPurchases + -1.5111033436803 * S_NumWebVisitsMonth + 
1.63712814901544 * S_Recency + 0.14205116840572 * S_Teenhome ;
1301644   +   H13  =     1.02798705354163 * S_Income  +    -0.94411708781921 * S_Kidhome
1301645   +          +    -0.03345077166544 * S_MntFishProducts
1301646   +          +     0.00038440809349 * S_MntFruits  +    -0.05068379715712 *
1301647   +        S_MntGoldProds  +     1.00464705307582 * S_MntMeatProducts
1301648   +          +    -0.11948662500951 * S_MntSweetProducts
1301649   +          +    -0.52438819731252 * S_MntWines  +     0.98586904866769 *
1301650   +        S_NumCatalogPurchases  +     0.09015295226839 * S_NumDealsPurchases
1301651   +          +     0.22401914357376 * S_NumStorePurchases
1301652   +          +     0.04219877865976 * S_NumWebPurchases
1301653   +          +     1.21753334166036 * S_NumWebVisitsMonth
1301654   +          +    -1.33712212110081 * S_Recency  +    -0.47582856683655 *
1301655   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 1.02798705354163 * S_Income + -0.94411708781921 * S_Kidhome + 
-0.03345077166544 * S_MntFishProducts + 0.00038440809349 * S_MntFruits + -0.05068379715712 * 
S_MntGoldProds + 1.00464705307582 * S_MntMeatProducts + -0.11948662500951 * S_MntSweetProducts 
+ -0.52438819731252 * S_MntWines + 0.98586904866769 * S_NumCatalogPurchases + 0.09015295226839 
* S_NumDealsPurchases + 0.22401914357376 * S_NumStorePurchases + 0.04219877865976 * 
S_NumWebPurchases + 1.21753334166036 * S_NumWebVisitsMonth + -1.33712212110081 * S_Recency + 
-0.47582856683655 * S_Teenhome ;
1301656   +   H14  =     0.91431429848834 * S_Income  +    -1.16289676557574 * S_Kidhome
1301657   +          +     0.31175257038578 * S_MntFishProducts
1301658   +          +     0.08080436076271 * S_MntFruits  +     0.15252288175851 *
1301659   +        S_MntGoldProds  +     0.21603546207654 * S_MntMeatProducts
1301660   +          +      0.0927253053382 * S_MntSweetProducts
1301661   +          +     0.05865323888304 * S_MntWines  +    -0.23426953728277 *
1301662   +        S_NumCatalogPurchases  +    -0.46451908614085 * S_NumDealsPurchases
1301663   +          +    -0.12667606349662 * S_NumStorePurchases
1301664   +          +     0.30148374518724 * S_NumWebPurchases
1301665   +          +     0.48934229701658 * S_NumWebVisitsMonth
1301666   +          +    -0.83754390793251 * S_Recency  +     -0.4576645462819 *
1301667   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.91431429848834 * S_Income + -1.16289676557574 * S_Kidhome + 
0.31175257038578 * S_MntFishProducts + 0.08080436076271 * S_MntFruits + 0.15252288175851 * 
S_MntGoldProds + 0.21603546207654 * S_MntMeatProducts + 0.0927253053382 * S_MntSweetProducts + 
0.05865323888304 * S_MntWines + -0.23426953728277 * S_NumCatalogPurchases + -0.46451908614085 
* S_NumDealsPurchases + -0.12667606349662 * S_NumStorePurchases + 0.30148374518724 * 
S_NumWebPurchases + 0.48934229701658 * S_NumWebVisitsMonth + -0.83754390793251 * S_Recency + 
-0.4576645462819 * S_Teenhome ;
1301668   +   H15  =    -0.58161501095664 * S_Income  +     -1.0333658128614 * S_Kidhome
1301669   +          +     0.42646725119177 * S_MntFishProducts
1301670   +          +     -0.3264621401658 * S_MntFruits  +    -0.74616728524532 *
1301671   +        S_MntGoldProds  +    -0.97572068716712 * S_MntMeatProducts
1301672   +          +    -0.01493605582616 * S_MntSweetProducts
1301673   +          +      0.0311636632685 * S_MntWines  +    -1.68599903767191 *
1301674   +        S_NumCatalogPurchases  +    -1.25052648798307 * S_NumDealsPurchases
1301675   +          +     0.54256744091258 * S_NumStorePurchases
1301676   +          +     0.43065931458468 * S_NumWebPurchases
1301677   +          +      0.5935561420466 * S_NumWebVisitsMonth
1301678   +          +    -0.45183418369624 * S_Recency  +     0.19260512629844 *
1301679   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.58161501095664 * S_Income + -1.0333658128614 * S_Kidhome + 
0.42646725119177 * S_MntFishProducts + -0.3264621401658 * S_MntFruits + -0.74616728524532 * 
S_MntGoldProds + -0.97572068716712 * S_MntMeatProducts + -0.01493605582616 * 
S_MntSweetProducts + 0.0311636632685 * S_MntWines + -1.68599903767191 * S_NumCatalogPurchases 
+ -1.25052648798307 * S_NumDealsPurchases + 0.54256744091258 * S_NumStorePurchases + 
0.43065931458468 * S_NumWebPurchases + 0.5935561420466 * S_NumWebVisitsMonth + 
-0.45183418369624 * S_Recency + 0.19260512629844 * S_Teenhome ;
1301680   +   H11  = H11  +     0.61503950219838 * AcceptedCmp10
1301681   +          +     0.02945207091619 * AcceptedCmp20  +     0.99151950769472 *
1301682   +        AcceptedCmp30  +     1.08987060401718 * AcceptedCmp40
1301683   +          +     0.45427753773024 * AcceptedCmp50  +    -1.03533951966815 *
1301684   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.61503950219838 * AcceptedCmp10 + 0.02945207091619 * 
AcceptedCmp20 + 0.99151950769472 * AcceptedCmp30 + 1.08987060401718 * AcceptedCmp40 + 
0.45427753773024 * AcceptedCmp50 + -1.03533951966815 * Complain0 ;
1301685   +   H12  = H12  +     0.83823476190401 * AcceptedCmp10
1301686   +          +      1.0793719601418 * AcceptedCmp20  +     0.68538854946581 *
1301687   +        AcceptedCmp30  +     1.00297565893339 * AcceptedCmp40
1301688   +          +     0.24586379991786 * AcceptedCmp50  +     0.15471251255301 *
1301689   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.83823476190401 * AcceptedCmp10 + 1.0793719601418 * 
AcceptedCmp20 + 0.68538854946581 * AcceptedCmp30 + 1.00297565893339 * AcceptedCmp40 + 
0.24586379991786 * AcceptedCmp50 + 0.15471251255301 * Complain0 ;
1301690   +   H13  = H13  +    -0.41486094438907 * AcceptedCmp10
1301691   +          +    -0.76586628449839 * AcceptedCmp20  +    -0.59695459523693 *
1301692   +        AcceptedCmp30  +    -0.30262159911837 * AcceptedCmp40
1301693   +          +    -0.61141171124182 * AcceptedCmp50  +    -0.01086235188835 *
1301694   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.41486094438907 * AcceptedCmp10 + -0.76586628449839 * 
AcceptedCmp20 + -0.59695459523693 * AcceptedCmp30 + -0.30262159911837 * AcceptedCmp40 + 
-0.61141171124182 * AcceptedCmp50 + -0.01086235188835 * Complain0 ;
1301695   +   H14  = H14  +    -0.09662858884082 * AcceptedCmp10
1301696   +          +    -0.48515652524171 * AcceptedCmp20  +    -0.37421451374399 *
1301697   +        AcceptedCmp30  +    -0.52889523891817 * AcceptedCmp40
1301698   +          +    -0.73518448275357 * AcceptedCmp50  +    -0.36065830718672 *
1301699   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.09662858884082 * AcceptedCmp10 + -0.48515652524171 * 
AcceptedCmp20 + -0.37421451374399 * AcceptedCmp30 + -0.52889523891817 * AcceptedCmp40 + 
-0.73518448275357 * AcceptedCmp50 + -0.36065830718672 * Complain0 ;
1301700   +   H15  = H15  +      0.2985143092641 * AcceptedCmp10
1301701   +          +    -0.06881934778393 * AcceptedCmp20  +    -0.02609197044604 *
1301702   +        AcceptedCmp30  +    -0.79105657447885 * AcceptedCmp40
1301703   +          +    -0.02286855144948 * AcceptedCmp50  +     0.02884650192784 *
1301704   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.2985143092641 * AcceptedCmp10 + -0.06881934778393 * 
AcceptedCmp20 + -0.02609197044604 * AcceptedCmp30 + -0.79105657447885 * AcceptedCmp40 + 
-0.02286855144948 * AcceptedCmp50 + 0.02884650192784 * Complain0 ;
1301705   +   H11  = H11  +    -0.41169946146301 * Education2n_Cycle
1301706   +          +      0.8448273504441 * EducationBasic  +    -1.02497956377347 *
1301707   +        EducationGraduation  +     0.43998321745211 * EducationMaster
1301708   +          +    -0.85912688909911 * Marital_StatusDivorced
1301709   +          +     0.81561401465875 * Marital_StatusMarried
1301710   +          +    -0.58324403081542 * Marital_StatusSingle
1301711   +          +      0.9348017085106 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.41169946146301 * Education2n_Cycle + 0.8448273504441 * 
EducationBasic + -1.02497956377347 * EducationGraduation + 0.43998321745211 * EducationMaster 
+ -0.85912688909911 * Marital_StatusDivorced + 0.81561401465875 * Marital_StatusMarried + 
-0.58324403081542 * Marital_StatusSingle + 0.9348017085106 * Marital_StatusTogether ;
1301712   +   H12  = H12  +     0.22828129841893 * Education2n_Cycle
1301713   +          +     0.47579227804033 * EducationBasic  +    -0.18165301263195 *
1301714   +        EducationGraduation  +    -0.16143431016405 * EducationMaster
1301715   +          +    -0.34784695867287 * Marital_StatusDivorced
1301716   +          +    -0.18194022182247 * Marital_StatusMarried
1301717   +          +    -0.10633185904164 * Marital_StatusSingle
1301718   +          +     0.13136125361628 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.22828129841893 * Education2n_Cycle + 0.47579227804033 * 
EducationBasic + -0.18165301263195 * EducationGraduation + -0.16143431016405 * EducationMaster 
+ -0.34784695867287 * Marital_StatusDivorced + -0.18194022182247 * Marital_StatusMarried + 
-0.10633185904164 * Marital_StatusSingle + 0.13136125361628 * Marital_StatusTogether ;
1301719   +   H13  = H13  +     0.38705901043652 * Education2n_Cycle
1301720   +          +     0.19703188370189 * EducationBasic  +    -0.48062640599976 *
1301721   +        EducationGraduation  +     -0.3646621736273 * EducationMaster
1301722   +          +     0.61058752124466 * Marital_StatusDivorced
1301723   +          +    -1.38793808025141 * Marital_StatusMarried
1301724   +          +     1.10060737810944 * Marital_StatusSingle
1301725   +          +    -1.21250219018366 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.38705901043652 * Education2n_Cycle + 0.19703188370189 * 
EducationBasic + -0.48062640599976 * EducationGraduation + -0.3646621736273 * EducationMaster 
+ 0.61058752124466 * Marital_StatusDivorced + -1.38793808025141 * Marital_StatusMarried + 
1.10060737810944 * Marital_StatusSingle + -1.21250219018366 * Marital_StatusTogether ;
1301726   +   H14  = H14  +    -0.20576658115662 * Education2n_Cycle
1301727   +          +    -0.09185472034614 * EducationBasic  +    -0.43674210064447 *
1301728   +        EducationGraduation  +    -0.18154054746298 * EducationMaster
1301729   +          +     0.11973800573581 * Marital_StatusDivorced
1301730   +          +      -0.294635257911 * Marital_StatusMarried
1301731   +          +    -0.05399659601172 * Marital_StatusSingle
1301732   +          +     0.34207780606239 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.20576658115662 * Education2n_Cycle + -0.09185472034614 * 
EducationBasic + -0.43674210064447 * EducationGraduation + -0.18154054746298 * EducationMaster 
+ 0.11973800573581 * Marital_StatusDivorced + -0.294635257911 * Marital_StatusMarried + 
-0.05399659601172 * Marital_StatusSingle + 0.34207780606239 * Marital_StatusTogether ;
1301733   +   H15  = H15  +    -0.05553093684862 * Education2n_Cycle
1301734   +          +    -0.12898006732329 * EducationBasic  +    -0.16064118923518 *
1301735   +        EducationGraduation  +     -0.6431539624694 * EducationMaster
1301736   +          +     0.42838191659864 * Marital_StatusDivorced
1301737   +          +    -0.09150349181363 * Marital_StatusMarried
1301738   +          +    -0.33520164145276 * Marital_StatusSingle
1301739   +          +    -0.15253738713197 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.05553093684862 * Education2n_Cycle + -0.12898006732329 * 
EducationBasic + -0.16064118923518 * EducationGraduation + -0.6431539624694 * EducationMaster 
+ 0.42838191659864 * Marital_StatusDivorced + -0.09150349181363 * Marital_StatusMarried + 
-0.33520164145276 * Marital_StatusSingle + -0.15253738713197 * Marital_StatusTogether ;
1301740   +   H11  =     -1.5079478405973 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.5079478405973 + H11 ;
1301741   +   H12  =     0.03014958331993 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.03014958331993 + H12 ;
1301742   +   H13  =    -1.78098671165572 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.78098671165572 + H13 ;
1301743   +   H14  =     0.22179429743277 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.22179429743277 + H14 ;
1301744   +   H15  =    -2.06602107857898 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -2.06602107857898 + H15 ;
1301745   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1301746   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1301747   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1301748   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1301749   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1301750   +END;
MPRINT(EM_DIAGRAM):   END;
1301751   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1301752   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1301753   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1301754   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1301755   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1301756   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1301757   +END;
MPRINT(EM_DIAGRAM):   END;
1301758   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1301759   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1301760   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1301761   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1301762   +   P_DepVar1  =    -4.55666337815854 * H11  +    -4.04792544554995 * H12
1301763   +          +     4.56148127429284 * H13  +     2.36841344452371 * H14
1301764   +          +    -3.07371010011749 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.55666337815854 * H11 + -4.04792544554995 * H12 + 
4.56148127429284 * H13 + 2.36841344452371 * H14 + -3.07371010011749 * H15 ;
1301765   +   P_DepVar1  =    -0.83283406236136 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.83283406236136 + P_DepVar1 ;
1301766   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1301767   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1301768   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1301769   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1301770   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1301771   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1301772   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1301773   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1301774   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1301775   +END;
MPRINT(EM_DIAGRAM):   END;
1301776   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1301777   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1301778   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1301779   +END;
MPRINT(EM_DIAGRAM):   END;
1301780   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1301781   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1301782   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1301783   +END;
MPRINT(EM_DIAGRAM):   END;
1301784   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1301785   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1301786   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1301787   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1301788   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1301789   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1301790   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1301791   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1301792   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1301793   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1301794   +END;
MPRINT(EM_DIAGRAM):   END;
1301795   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1301796   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1301797   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1301798   +drop
1301799   +H11
1301800   +H12
1301801   +H13
1301802   +H14
1301803   +H15
1301804   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
1301805   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1301806    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1301807    quit;
1301808    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1301809    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1301810    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1301811    retain ID 2 Node "Neural34";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural34";
1301812    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1301813    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1878 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1878 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1301814    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1301815    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1301816    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1878 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1878 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1301817    proc sort data=EMWS8.Neural34_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural34_variableset out=_temp2(keep=NAME CREATOR);
1301818    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1301819    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL34_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1301820    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1301821    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1301822    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1301823    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1301824    proc contents data=EMWS8.Neural34_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural34_train out=_meta(keep=NAME) noprint;
1301825    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1301826    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1301827    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1301828    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1301829    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1301830    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1301831    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1301832    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1301833    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1301834    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1301834  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 924 rows and 5 columns.

1301835    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1301836    proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
1301837    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 924 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 924 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1301838    filename _pref
1301838  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1301839    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1301840    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1301841   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1301842   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1301843   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1301844   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1301845   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1301846   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1301847    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1301848    quit;
1301849    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1301850    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1301851    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1301852    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1301853    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1301854    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1301855    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1301856    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1301857    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1301858    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1301859    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1301860    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1301861    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1301862    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1301863    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1301864    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1301865    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1301866    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

1301867    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1301868    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1301869    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1301870    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1301871    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1301872    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1301873    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1301874    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1301875    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1301875  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1301876    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1301877    proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
1301878    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 928 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1301879    filename _pref
1301879  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1301880    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1301881    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1301882   +
1301883   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1301884   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1301884  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1301885   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1301886   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1301887   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1301888   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1301889   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1301890    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1301891    quit;
1301892    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1301893    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1301894    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1301895    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1301896    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1301897    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1301898    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1301899    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1301900    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1301901    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1301902    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1301903    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1301904    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1301905    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1301906    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1301907    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1301908    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1301909    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1301910    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1301911    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1301912    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1301913    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1301914    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1301915    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1301916    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1301917    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1301918    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1301918  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1301919    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1301920    proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
1301921    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 967 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1301922    filename _pref
1301922  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1301923    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1301924    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1301925   +
1301926   +
1301927   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1301928   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1301929   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1301930   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1301931   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1301932   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1301933   +
1301934   +
1301935   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1301936   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1301937   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1301938   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1301939   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1301940   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1301941   +
1301942   +
1301943   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1301944   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1301945   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1301946   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1301947   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1301948   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1301949   +
1301950   +
1301951   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1301952   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1301953   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1301954   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1301955   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1301956   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1301957   +
1301958   +
1301959   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1301960   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1301961   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1301962   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1301963   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1301964   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1301965   +
1301966   +
1301967   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1301968   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1301969   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1301970   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1301971   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1301972   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1301973   +
1301974   +
1301975   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1301976   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1301977   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1301978   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1301979   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1301980   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1301981   +
1301982   +
1301983   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1301984   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1301985   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1301986   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1301987   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1301988   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1301989   +if
1301990   +_FILTERNORM1 not in ( '.')
1301991   + and
1301992   +_FILTERNORM2 not in ( '.')
1301993   + and
1301994   +_FILTERNORM3 not in ( '.')
1301995   + and
1301996   +_FILTERNORM4 not in ( '.')
1301997   + and
1301998   +_FILTERNORM5 not in ( '.')
1301999   + and
1302000   +_FILTERNORM6 not in ( '.')
1302001   + and
1302002   +_FILTERNORM7 not in ( ' ')
1302003   + and
1302004   +_FILTERNORM8 not in ( ' ')
1302005   +and
1302006   +( Dt_Customer ne .)
1302007   +and ( Income ne . and (Income<=107000))
1302008   +and ( Kidhome ne .)
1302009   +and ( MntFishProducts ne .)
1302010   +and ( MntFruits ne .)
1302011   +and ( MntGoldProds ne .)
1302012   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1302013   +and ( MntSweetProducts ne .)
1302014   +and ( MntWines ne .)
1302015   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1302016   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1302017   +and ( NumStorePurchases ne .)
1302018   +and ( NumWebPurchases ne .)
1302019   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1302020   +and ( Recency ne .)
1302021   +and ( Teenhome ne .)
1302022   +and ( Year_Birth ne .)
1302023   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1302024   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1302025   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1302026   +end;
MPRINT(EM_DIAGRAM):   end;
1302027   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1302028   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1302029    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1302030    quit;
1302031    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1302032    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1302033    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1302034    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1302035    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1302036    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1302037    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1302038    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1302039    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1302040    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1302041    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1302042    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1302043    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1302044    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1302045    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1302046    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1302047    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1302048    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1302049    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1302050    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1302051    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1302052    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1302053    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1302054    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1302055    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1302056    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1302057    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1302057  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1302058    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1302059    proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
1302060    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 1033 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1302061    %macro varDept(fcmpdata=,id=);
1302062    %global nobs&id scoreFlag&id;
1302063    %let scoreFlag&id = 0;
1302064    %if &id=1 or ^&fcmpStart %then %do;
1302065    proc sort data=&fcmpdata out=_temp&id nodupkey;
1302066    by NAME;
1302067    where id=&id and LHS in( %let j=1;
1302068    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1302069    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1302070    "&var" %let j = %eval(&j+1);
1302071    %end;
1302072    );
1302073    run;
1302074    %let dsid = %sysfunc(open(_temp&id));
1302075    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1302076    %let dsid = %sysfunc(close(&dsid));
1302077    %if &&nobs&id %then %do;
1302078    %let scoreFlag&id = 1;
1302079    %let fcmpStart = 1;
1302080    %end;
1302081    %else %let fcmpStart = 0;
1302082    %end;
1302083    %else %do;
1302084    proc sort data=&fcmpdata out=_tempid;
1302085    where id=&id;
1302086    by LHS;
1302087    run;
1302088    %let dsid = %sysfunc(open(_tempid));
1302089    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1302090    %let dsid = %sysfunc(close(&dsid));
1302091    %if ^&&nobs&id %then %do;
1302092    proc datasets lib=work nolist;
1302093    delete _tempid;
1302094    run;
1302095    quit;
1302096    %end;
1302097    %else %do;
1302098    data _tempAll;
1302099    set %let j=%eval(&id-1);
1302100    %do x=1 %to &j;
1302101    %if &&nobs&x %then %do;
1302102    _temp&x %end;
1302103    %end;
1302104    ;
1302105    run;
1302106    proc sql;
1302107    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1302107  ! work._tempid p2 where p.name=p2.lhs;
1302108    quit;
1302109    data _temp&id;
1302110    set _temp&id;
1302111    where LHS ne '' and NAME ne '' and Node ne '';
1302112    run;
1302113    proc datasets lib=work nolist;
1302114    delete _tempAll;
1302115    run;
1302116    %let dsid = %sysfunc(open(_temp&id));
1302117    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1302118    %let dsid = %sysfunc(close(&dsid));
1302119    %if ^&&nobs&id %then %do;
1302120    proc datasets lib=work nolist;
1302121    delete _temp&id;
1302122    run;
1302123    quit;
1302124    %end;
1302125    %else %do;
1302126    %let scoreFlag&id = 1;
1302127    data _temp&id;
1302128    set _temp&id;
1302129    where LHS ne NAME and node ne '';
1302130    run;
1302131    %let dsid = %sysfunc(open(_temp&id));
1302132    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1302133    %let dsid = %sysfunc(close(&dsid));
1302134    %if ^&&nobs&id %then %do;
1302135    proc datasets lib=work nolist;
1302136    delete _temp&id;
1302137    run;
1302138    quit;
1302139    %end;
1302140    %else %do;
1302141    proc sort data=_temp&id nodupkey;
1302142    by LHS NAME;
1302143    run;
1302144    %end;
1302145    %end;
1302146    %end;
1302147    %end;
1302148    %mend varDept;
1302149    %macro optCode(outdata=fcmpdata);
1302150    %global fcmpStart;
1302151    %let fcmpStart = 0;
1302152    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1302153    %let NumNodes=9;
1302154    %do k=1 %to &NumNodes;
1302155    %vardept(fcmpdata=&outdata, id=&k);
1302156    %end;
1302157    %mend optCode;
1302158    %optcode(outData=EMWS8.Ensmbl22_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 98 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 73 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 25 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp6;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP6 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1302159    filename _pref
1302159  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural35\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural35\EMPUBLISHSCORE.sas";
1302160    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1302161    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural35\EMPUBLISHSCORE.sas.
1302162   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1302163   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1302164   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1302165   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1302166   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1302167   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1302168   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1302169   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1302170   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1302171   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1302172   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1302173   +LENGTH _WARN_ $4
1302174   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1302175   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1302176   +
1302177   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1302178   +
1302179   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1302180   +
1302181   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1302182   +
1302183   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1302184   +
1302185   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1302186   +
1302187   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1302188   +
1302189   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1302190   +
1302191   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1302192   +
1302193   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1302194   +
1302195   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1302196   +
1302197   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1302198   +
1302199   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1302200   +
1302201   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1302202   +
1302203   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1302204   +
1302205   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1302206   +
1302207   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1302208   +
1302209   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1302210   +
1302211   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1302212   +
1302213   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1302214   +
1302215   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1302216   +
1302217   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1302218   +
1302219   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1302220   +
1302221   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1302222   +
1302223   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1302224   +
1302225   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1302226   +
1302227   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1302228   +
1302229   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1302230   +
1302231   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1302232   +
1302233   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1302234   +
1302235   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1302236   +
1302237   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1302238   +
1302239   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1302240   +
1302241   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1302242   +
1302243   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1302244   +
1302245   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1302246   +
1302247   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1302248   +
1302249   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1302250   +
1302251   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1302252   +
1302253   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1302254   +
1302255   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1302256   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1302257   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1302258   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1302259   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1302260   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1302261   +end;
MPRINT(EM_DIAGRAM):   end;
1302262   +else do;
MPRINT(EM_DIAGRAM):   else do;
1302263   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1302264   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1302265   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1302266   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1302267   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1302268   +   end;
MPRINT(EM_DIAGRAM):   end;
1302269   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1302270   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1302271   +   end;
MPRINT(EM_DIAGRAM):   end;
1302272   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1302273   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1302274   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1302275   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1302276   +   end;
MPRINT(EM_DIAGRAM):   end;
1302277   +end;
MPRINT(EM_DIAGRAM):   end;
1302278   +
1302279   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1302280   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1302281   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1302282   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1302283   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1302284   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1302285   +end;
MPRINT(EM_DIAGRAM):   end;
1302286   +else do;
MPRINT(EM_DIAGRAM):   else do;
1302287   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1302288   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1302289   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1302290   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1302291   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1302292   +   end;
MPRINT(EM_DIAGRAM):   end;
1302293   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1302294   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1302295   +   end;
MPRINT(EM_DIAGRAM):   end;
1302296   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1302297   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1302298   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1302299   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1302300   +   end;
MPRINT(EM_DIAGRAM):   end;
1302301   +end;
MPRINT(EM_DIAGRAM):   end;
1302302   +
1302303   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1302304   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1302305   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1302306   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1302307   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1302308   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1302309   +end;
MPRINT(EM_DIAGRAM):   end;
1302310   +else do;
MPRINT(EM_DIAGRAM):   else do;
1302311   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1302312   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1302313   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1302314   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1302315   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1302316   +   end;
MPRINT(EM_DIAGRAM):   end;
1302317   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1302318   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1302319   +   end;
MPRINT(EM_DIAGRAM):   end;
1302320   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1302321   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1302322   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1302323   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1302324   +   end;
MPRINT(EM_DIAGRAM):   end;
1302325   +end;
MPRINT(EM_DIAGRAM):   end;
1302326   +
1302327   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1302328   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1302329   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1302330   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1302331   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1302332   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1302333   +end;
MPRINT(EM_DIAGRAM):   end;
1302334   +else do;
MPRINT(EM_DIAGRAM):   else do;
1302335   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1302336   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1302337   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1302338   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1302339   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1302340   +   end;
MPRINT(EM_DIAGRAM):   end;
1302341   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1302342   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1302343   +   end;
MPRINT(EM_DIAGRAM):   end;
1302344   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1302345   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1302346   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1302347   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1302348   +   end;
MPRINT(EM_DIAGRAM):   end;
1302349   +end;
MPRINT(EM_DIAGRAM):   end;
1302350   +
1302351   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1302352   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1302353   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1302354   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1302355   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1302356   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1302357   +end;
MPRINT(EM_DIAGRAM):   end;
1302358   +else do;
MPRINT(EM_DIAGRAM):   else do;
1302359   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1302360   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1302361   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1302362   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1302363   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1302364   +   end;
MPRINT(EM_DIAGRAM):   end;
1302365   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1302366   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1302367   +   end;
MPRINT(EM_DIAGRAM):   end;
1302368   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1302369   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1302370   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1302371   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1302372   +   end;
MPRINT(EM_DIAGRAM):   end;
1302373   +end;
MPRINT(EM_DIAGRAM):   end;
1302374   +
1302375   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1302376   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1302377   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1302378   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1302379   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1302380   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1302381   +end;
MPRINT(EM_DIAGRAM):   end;
1302382   +else do;
MPRINT(EM_DIAGRAM):   else do;
1302383   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1302384   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1302385   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1302386   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1302387   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1302388   +   end;
MPRINT(EM_DIAGRAM):   end;
1302389   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1302390   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1302391   +   end;
MPRINT(EM_DIAGRAM):   end;
1302392   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1302393   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1302394   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1302395   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1302396   +   end;
MPRINT(EM_DIAGRAM):   end;
1302397   +end;
MPRINT(EM_DIAGRAM):   end;
1302398   +
1302399   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1302400   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1302401   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1302402   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1302403   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1302404   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1302405   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1302406   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1302407   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1302408   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1302409   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1302410   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1302411   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1302412   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1302413   +end;
MPRINT(EM_DIAGRAM):   end;
1302414   +else do;
MPRINT(EM_DIAGRAM):   else do;
1302415   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1302416   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1302417   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1302418   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1302419   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1302420   +   end;
MPRINT(EM_DIAGRAM):   end;
1302421   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1302422   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1302423   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1302424   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1302425   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1302426   +   end;
MPRINT(EM_DIAGRAM):   end;
1302427   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1302428   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1302429   +   end;
MPRINT(EM_DIAGRAM):   end;
1302430   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1302431   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1302432   +   end;
MPRINT(EM_DIAGRAM):   end;
1302433   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1302434   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1302435   +   end;
MPRINT(EM_DIAGRAM):   end;
1302436   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1302437   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1302438   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1302439   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1302440   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1302441   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1302442   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1302443   +   end;
MPRINT(EM_DIAGRAM):   end;
1302444   +end;
MPRINT(EM_DIAGRAM):   end;
1302445   +
1302446   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1302447   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1302448   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1302449   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1302450   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1302451   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1302452   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1302453   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1302454   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1302455   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1302456   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1302457   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
The SAS System

1302458   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1302459   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1302460   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1302461   +end;
MPRINT(EM_DIAGRAM):   end;
1302462   +else do;
MPRINT(EM_DIAGRAM):   else do;
1302463   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1302464   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1302465   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1302466   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1302467   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1302468   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1302469   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1302470   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1302471   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1302472   +         end;
MPRINT(EM_DIAGRAM):   end;
1302473   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1302474   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1302475   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1302476   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1302477   +            end;
MPRINT(EM_DIAGRAM):   end;
1302478   +         end;
MPRINT(EM_DIAGRAM):   end;
1302479   +      end;
MPRINT(EM_DIAGRAM):   end;
1302480   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1302481   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1302482   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1302483   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1302484   +         end;
MPRINT(EM_DIAGRAM):   end;
1302485   +      end;
MPRINT(EM_DIAGRAM):   end;
1302486   +   end;
MPRINT(EM_DIAGRAM):   end;
1302487   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1302488   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1302489   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1302490   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1302491   +      end;
MPRINT(EM_DIAGRAM):   end;
1302492   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1302493   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1302494   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1302495   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1302496   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1302497   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1302498   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1302499   +         end;
MPRINT(EM_DIAGRAM):   end;
1302500   +      end;
MPRINT(EM_DIAGRAM):   end;
1302501   +   end;
MPRINT(EM_DIAGRAM):   end;
1302502   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1302503   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1302504   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1302505   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1302506   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1302507   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1302508   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1302509   +   end;
MPRINT(EM_DIAGRAM):   end;
1302510   +end;
MPRINT(EM_DIAGRAM):   end;
1302511   +
1302512   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1302513   +*** Checking missing input Interval
1302514   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1302515   +
1302516   +IF NMISS(
1302517   +   Income ,
1302518   +   Kidhome ,
1302519   +   MntFishProducts ,
1302520   +   MntFruits ,
1302521   +   MntGoldProds ,
1302522   +   MntMeatProducts ,
1302523   +   MntSweetProducts ,
1302524   +   MntWines ,
1302525   +   NumCatalogPurchases ,
1302526   +   NumDealsPurchases ,
1302527   +   NumStorePurchases ,
1302528   +   NumWebPurchases ,
1302529   +   NumWebVisitsMonth ,
1302530   +   Recency ,
1302531   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
1302532   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1302533   +
1302534   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1302535   +END;
MPRINT(EM_DIAGRAM):   END;
1302536   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1302537   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1302538   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1302539   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1302540   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1302541   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1302542   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1302543   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1302544   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1302545   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1302546   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1302547   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1302548   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1302549   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1302550   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1302551   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1302552   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1302553   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1302554   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1302555   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1302556   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1302557   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1302558   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1302559   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1302560   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1302561   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1302562   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1302563   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1302564   +END;
MPRINT(EM_DIAGRAM):   END;
1302565   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1302566   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1302567   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1302568   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1302569   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1302570   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1302571   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1302572   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1302573   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1302574   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1302575   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1302576   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1302577   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1302578   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1302579   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1302580   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1302581   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1302582   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1302583   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1302584   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1302585   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1302586   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1302587   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1302588   +   ELSE S_NumCatalogPurchases
1302589   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1302590   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1302591   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1302592   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1302593   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1302594   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1302595   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1302596   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1302597   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1302598   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1302599   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1302600   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1302601   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1302602   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1302603   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1302604   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1302605   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1302606   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1302607   +END;
MPRINT(EM_DIAGRAM):   END;
1302608   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1302609   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1302610   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1302611   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1302612   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1302613   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1302614   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1302615   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1302616   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1302617   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1302618   +   H11  =     0.87660114046125 * S_Income  +     -0.7994451897827 * S_Kidhome
1302619   +          +    -0.08967295716195 * S_MntFishProducts
1302620   +          +     0.03184635437516 * S_MntFruits  +    -0.13860895575438 *
1302621   +        S_MntGoldProds  +     0.55790460748169 * S_MntMeatProducts
1302622   +          +    -0.02806094557115 * S_MntSweetProducts
1302623   +          +    -0.14537763592724 * S_MntWines  +     0.76891266523847 *
1302624   +        S_NumCatalogPurchases  +     0.16842007461305 * S_NumDealsPurchases
1302625   +          +     0.25137876058262 * S_NumStorePurchases
1302626   +          +    -0.07865442401292 * S_NumWebPurchases
1302627   +          +     1.03197398967259 * S_NumWebVisitsMonth
1302628   +          +    -1.26907156503759 * S_Recency  +    -0.76016893316351 *
1302629   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.87660114046125 * S_Income + -0.7994451897827 * S_Kidhome + 
-0.08967295716195 * S_MntFishProducts + 0.03184635437516 * S_MntFruits + -0.13860895575438 * 
S_MntGoldProds + 0.55790460748169 * S_MntMeatProducts + -0.02806094557115 * S_MntSweetProducts 
+ -0.14537763592724 * S_MntWines + 0.76891266523847 * S_NumCatalogPurchases + 0.16842007461305 
* S_NumDealsPurchases + 0.25137876058262 * S_NumStorePurchases + -0.07865442401292 * 
S_NumWebPurchases + 1.03197398967259 * S_NumWebVisitsMonth + -1.26907156503759 * S_Recency + 
-0.76016893316351 * S_Teenhome ;
1302630   +   H12  =     0.37295000114468 * S_Income  +    -0.12834211496575 * S_Kidhome
1302631   +          +     0.19312392388912 * S_MntFishProducts
1302632   +          +      0.1561688289137 * S_MntFruits  +     0.04004810938796 *
1302633   +        S_MntGoldProds  +     0.32599201739588 * S_MntMeatProducts
1302634   +          +       0.204174263605 * S_MntSweetProducts
1302635   +          +    -0.11560784817014 * S_MntWines  +     0.12255073568725 *
1302636   +        S_NumCatalogPurchases  +    -0.05543734180218 * S_NumDealsPurchases
1302637   +          +     0.07747830335769 * S_NumStorePurchases
1302638   +          +     0.07960837555191 * S_NumWebPurchases
1302639   +          +     0.02351602389122 * S_NumWebVisitsMonth
1302640   +          +     -0.2840853952427 * S_Recency  +    -0.47421627761687 *
1302641   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.37295000114468 * S_Income + -0.12834211496575 * S_Kidhome + 
0.19312392388912 * S_MntFishProducts + 0.1561688289137 * S_MntFruits + 0.04004810938796 * 
S_MntGoldProds + 0.32599201739588 * S_MntMeatProducts + 0.204174263605 * S_MntSweetProducts + 
-0.11560784817014 * S_MntWines + 0.12255073568725 * S_NumCatalogPurchases + -0.05543734180218 
* S_NumDealsPurchases + 0.07747830335769 * S_NumStorePurchases + 0.07960837555191 * 
S_NumWebPurchases + 0.02351602389122 * S_NumWebVisitsMonth + -0.2840853952427 * S_Recency + 
-0.47421627761687 * S_Teenhome ;
1302642   +   H13  =    -0.33428925248315 * S_Income  +    -0.03845622730742 * S_Kidhome
1302643   +          +     0.18733919794636 * S_MntFishProducts
1302644   +          +     0.45907982190052 * S_MntFruits  +    -0.48776616433719 *
1302645   +        S_MntGoldProds  +    -0.41340481007204 * S_MntMeatProducts
1302646   +          +     0.42514606159239 * S_MntSweetProducts
1302647   +          +     0.20038001368787 * S_MntWines  +    -1.21708501803782 *
1302648   +        S_NumCatalogPurchases  +    -1.06820061274533 * S_NumDealsPurchases
1302649   +          +     0.36582106462789 * S_NumStorePurchases
1302650   +          +     0.04244777020435 * S_NumWebPurchases
1302651   +          +    -0.24296342902503 * S_NumWebVisitsMonth
1302652   +          +     0.27451716762947 * S_Recency  +     0.13110477325277 *
1302653   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.33428925248315 * S_Income + -0.03845622730742 * S_Kidhome + 
0.18733919794636 * S_MntFishProducts + 0.45907982190052 * S_MntFruits + -0.48776616433719 * 
S_MntGoldProds + -0.41340481007204 * S_MntMeatProducts + 0.42514606159239 * S_MntSweetProducts 
+ 0.20038001368787 * S_MntWines + -1.21708501803782 * S_NumCatalogPurchases + 
-1.06820061274533 * S_NumDealsPurchases + 0.36582106462789 * S_NumStorePurchases + 
0.04244777020435 * S_NumWebPurchases + -0.24296342902503 * S_NumWebVisitsMonth + 
0.27451716762947 * S_Recency + 0.13110477325277 * S_Teenhome ;
1302654   +   H14  =    -0.70493412542585 * S_Income  +     0.41202796606799 * S_Kidhome
1302655   +          +     0.05986489897572 * S_MntFishProducts
1302656   +          +    -0.05040531715469 * S_MntFruits  +       0.051068387592 *
1302657   +        S_MntGoldProds  +    -0.13581881662481 * S_MntMeatProducts
1302658   +          +    -0.05513370461072 * S_MntSweetProducts
1302659   +          +     0.77472084468819 * S_MntWines  +    -0.03211788969126 *
1302660   +        S_NumCatalogPurchases  +    -0.24097486430988 * S_NumDealsPurchases
1302661   +          +     0.64364674828841 * S_NumStorePurchases
1302662   +          +     0.15084748708424 * S_NumWebPurchases
1302663   +          +    -0.94144998356377 * S_NumWebVisitsMonth
1302664   +          +     1.16778338364599 * S_Recency  +     0.32089861635238 *
1302665   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.70493412542585 * S_Income + 0.41202796606799 * S_Kidhome + 
0.05986489897572 * S_MntFishProducts + -0.05040531715469 * S_MntFruits + 0.051068387592 * 
S_MntGoldProds + -0.13581881662481 * S_MntMeatProducts + -0.05513370461072 * 
S_MntSweetProducts + 0.77472084468819 * S_MntWines + -0.03211788969126 * S_NumCatalogPurchases 
+ -0.24097486430988 * S_NumDealsPurchases + 0.64364674828841 * S_NumStorePurchases + 
0.15084748708424 * S_NumWebPurchases + -0.94144998356377 * S_NumWebVisitsMonth + 
1.16778338364599 * S_Recency + 0.32089861635238 * S_Teenhome ;
1302666   +   H15  =    -0.15703510827879 * S_Income  +    -0.30977841002562 * S_Kidhome
1302667   +          +    -0.14543196273578 * S_MntFishProducts
1302668   +          +     0.32223695896711 * S_MntFruits  +    -0.31846203211698 *
1302669   +        S_MntGoldProds  +     -1.4125160823105 * S_MntMeatProducts
1302670   +          +     0.49374793444169 * S_MntSweetProducts
1302671   +          +     0.39699716010219 * S_MntWines  +    -0.88140331687645 *
1302672   +        S_NumCatalogPurchases  +    -0.87657222813687 * S_NumDealsPurchases
1302673   +          +     1.23754786782746 * S_NumStorePurchases
1302674   +          +     1.11316667348511 * S_NumWebPurchases
1302675   +          +    -1.08592446439781 * S_NumWebVisitsMonth
1302676   +          +     0.66958517589542 * S_Recency  +     0.06799032788481 *
1302677   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.15703510827879 * S_Income + -0.30977841002562 * S_Kidhome + 
-0.14543196273578 * S_MntFishProducts + 0.32223695896711 * S_MntFruits + -0.31846203211698 * 
S_MntGoldProds + -1.4125160823105 * S_MntMeatProducts + 0.49374793444169 * S_MntSweetProducts 
+ 0.39699716010219 * S_MntWines + -0.88140331687645 * S_NumCatalogPurchases + 
-0.87657222813687 * S_NumDealsPurchases + 1.23754786782746 * S_NumStorePurchases + 
1.11316667348511 * S_NumWebPurchases + -1.08592446439781 * S_NumWebVisitsMonth + 
0.66958517589542 * S_Recency + 0.06799032788481 * S_Teenhome ;
1302678   +   H16  =    -0.10360901553583 * S_Income  +     0.39257497240865 * S_Kidhome
1302679   +          +     0.29549884005341 * S_MntFishProducts
1302680   +          +     0.04922491353914 * S_MntFruits  +     -0.1412659458221 *
1302681   +        S_MntGoldProds  +    -0.12361454534126 * S_MntMeatProducts
1302682   +          +    -0.11909215986981 * S_MntSweetProducts
1302683   +          +     0.11430484977092 * S_MntWines  +    -0.66235553839539 *
1302684   +        S_NumCatalogPurchases  +     0.17261763180198 * S_NumDealsPurchases
1302685   +          +     0.30109334594548 * S_NumStorePurchases
1302686   +          +     0.01985762767489 * S_NumWebPurchases
1302687   +          +     0.44965133281333 * S_NumWebVisitsMonth
1302688   +          +     0.32338634259192 * S_Recency  +    -0.04032956941805 *
1302689   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.10360901553583 * S_Income + 0.39257497240865 * S_Kidhome + 
0.29549884005341 * S_MntFishProducts + 0.04922491353914 * S_MntFruits + -0.1412659458221 * 
S_MntGoldProds + -0.12361454534126 * S_MntMeatProducts + -0.11909215986981 * 
S_MntSweetProducts + 0.11430484977092 * S_MntWines + -0.66235553839539 * S_NumCatalogPurchases 
+ 0.17261763180198 * S_NumDealsPurchases + 0.30109334594548 * S_NumStorePurchases + 
0.01985762767489 * S_NumWebPurchases + 0.44965133281333 * S_NumWebVisitsMonth + 
0.32338634259192 * S_Recency + -0.04032956941805 * S_Teenhome ;
1302690   +   H11  = H11  +    -0.23026310289024 * AcceptedCmp10
1302691   +          +    -0.82550012364234 * AcceptedCmp20  +    -0.67764228269441 *
1302692   +        AcceptedCmp30  +    -0.51547666117685 * AcceptedCmp40
1302693   +          +    -0.36424958084824 * AcceptedCmp50  +       0.119862855783 *
1302694   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.23026310289024 * AcceptedCmp10 + -0.82550012364234 * 
AcceptedCmp20 + -0.67764228269441 * AcceptedCmp30 + -0.51547666117685 * AcceptedCmp40 + 
-0.36424958084824 * AcceptedCmp50 + 0.119862855783 * Complain0 ;
1302695   +   H12  = H12  +     0.02722288857426 * AcceptedCmp10
1302696   +          +      0.1236576068539 * AcceptedCmp20  +    -0.31265425960737 *
1302697   +        AcceptedCmp30  +    -0.25076565034266 * AcceptedCmp40
1302698   +          +    -0.20158659730872 * AcceptedCmp50  +    -0.43687103612629 *
1302699   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.02722288857426 * AcceptedCmp10 + 0.1236576068539 * 
AcceptedCmp20 + -0.31265425960737 * AcceptedCmp30 + -0.25076565034266 * AcceptedCmp40 + 
-0.20158659730872 * AcceptedCmp50 + -0.43687103612629 * Complain0 ;
1302700   +   H13  = H13  +     0.21852176280571 * AcceptedCmp10
1302701   +          +     0.01727991436107 * AcceptedCmp20  +     0.19303261094625 *
1302702   +        AcceptedCmp30  +    -0.65492191560509 * AcceptedCmp40
1302703   +          +    -0.09636750660684 * AcceptedCmp50  +     0.07579128571046 *
1302704   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.21852176280571 * AcceptedCmp10 + 0.01727991436107 * 
AcceptedCmp20 + 0.19303261094625 * AcceptedCmp30 + -0.65492191560509 * AcceptedCmp40 + 
-0.09636750660684 * AcceptedCmp50 + 0.07579128571046 * Complain0 ;
1302705   +   H14  = H14  +     0.20819294353855 * AcceptedCmp10
1302706   +          +      0.5159102831901 * AcceptedCmp20  +     0.55295587458643 *
1302707   +        AcceptedCmp30  +     0.80682431419623 * AcceptedCmp40
1302708   +          +     0.74007057798158 * AcceptedCmp50  +     -0.4573052390807 *
1302709   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.20819294353855 * AcceptedCmp10 + 0.5159102831901 * 
AcceptedCmp20 + 0.55295587458643 * AcceptedCmp30 + 0.80682431419623 * AcceptedCmp40 + 
0.74007057798158 * AcceptedCmp50 + -0.4573052390807 * Complain0 ;
1302710   +   H15  = H15  +     1.26330939420524 * AcceptedCmp10
1302711   +          +     0.29494505935793 * AcceptedCmp20  +     0.25561322032419 *
1302712   +        AcceptedCmp30  +     0.50102236777897 * AcceptedCmp40
1302713   +          +     0.20696267245027 * AcceptedCmp50  +    -0.00849145233901 *
1302714   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 1.26330939420524 * AcceptedCmp10 + 0.29494505935793 * 
AcceptedCmp20 + 0.25561322032419 * AcceptedCmp30 + 0.50102236777897 * AcceptedCmp40 + 
0.20696267245027 * AcceptedCmp50 + -0.00849145233901 * Complain0 ;
1302715   +   H16  = H16  +     0.03638428330381 * AcceptedCmp10
1302716   +          +     0.27994215452657 * AcceptedCmp20  +    -0.03861840445025 *
1302717   +        AcceptedCmp30  +      0.3398057347433 * AcceptedCmp40
1302718   +          +    -0.00738335957724 * AcceptedCmp50  +      0.0447804375799 *
1302719   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.03638428330381 * AcceptedCmp10 + 0.27994215452657 * 
AcceptedCmp20 + -0.03861840445025 * AcceptedCmp30 + 0.3398057347433 * AcceptedCmp40 + 
-0.00738335957724 * AcceptedCmp50 + 0.0447804375799 * Complain0 ;
1302720   +   H11  = H11  +     0.27482405283962 * Education2n_Cycle
1302721   +          +     0.11084012456612 * EducationBasic  +    -0.23835071987159 *
1302722   +        EducationGraduation  +    -0.10167082180552 * EducationMaster
1302723   +          +     0.51015833145636 * Marital_StatusDivorced
1302724   +          +     -1.1653662063616 * Marital_StatusMarried
1302725   +          +     1.19396547750441 * Marital_StatusSingle
1302726   +          +    -0.99605751789992 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.27482405283962 * Education2n_Cycle + 0.11084012456612 * 
EducationBasic + -0.23835071987159 * EducationGraduation + -0.10167082180552 * EducationMaster 
+ 0.51015833145636 * Marital_StatusDivorced + -1.1653662063616 * Marital_StatusMarried + 
1.19396547750441 * Marital_StatusSingle + -0.99605751789992 * Marital_StatusTogether ;
1302727   +   H12  = H12  +    -0.05268347704739 * Education2n_Cycle
1302728   +          +     0.19362065968028 * EducationBasic  +    -0.26784257195414 *
1302729   +        EducationGraduation  +     0.16650577465959 * EducationMaster
1302730   +          +     0.09154288513995 * Marital_StatusDivorced
1302731   +          +     0.06725684628382 * Marital_StatusMarried
1302732   +          +     0.11327659191494 * Marital_StatusSingle
1302733   +          +     0.01793778876811 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.05268347704739 * Education2n_Cycle + 0.19362065968028 * 
EducationBasic + -0.26784257195414 * EducationGraduation + 0.16650577465959 * EducationMaster 
+ 0.09154288513995 * Marital_StatusDivorced + 0.06725684628382 * Marital_StatusMarried + 
0.11327659191494 * Marital_StatusSingle + 0.01793778876811 * Marital_StatusTogether ;
1302734   +   H13  = H13  +     -0.1027084329077 * Education2n_Cycle
1302735   +          +    -0.01342449140757 * EducationBasic  +    -0.35627920427273 *
1302736   +        EducationGraduation  +    -0.05554656531793 * EducationMaster
1302737   +          +     0.37591653615852 * Marital_StatusDivorced
1302738   +          +    -0.05024236790132 * Marital_StatusMarried
1302739   +          +    -0.28317154997144 * Marital_StatusSingle
1302740   +          +    -0.19247490223101 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.1027084329077 * Education2n_Cycle + -0.01342449140757 * 
EducationBasic + -0.35627920427273 * EducationGraduation + -0.05554656531793 * EducationMaster 
+ 0.37591653615852 * Marital_StatusDivorced + -0.05024236790132 * Marital_StatusMarried + 
-0.28317154997144 * Marital_StatusSingle + -0.19247490223101 * Marital_StatusTogether ;
1302741   +   H14  = H14  +     -0.4162491480577 * Education2n_Cycle
1302742   +          +     0.38075572764074 * EducationBasic  +    -0.28169469529121 *
1302743   +        EducationGraduation  +       0.638986138084 * EducationMaster
1302744   +          +    -0.44885292450558 * Marital_StatusDivorced
1302745   +          +     0.78958791519299 * Marital_StatusMarried
1302746   +          +    -0.09688714431356 * Marital_StatusSingle
1302747   +          +     0.84239030196202 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.4162491480577 * Education2n_Cycle + 0.38075572764074 * 
EducationBasic + -0.28169469529121 * EducationGraduation + 0.638986138084 * EducationMaster + 
-0.44885292450558 * Marital_StatusDivorced + 0.78958791519299 * Marital_StatusMarried + 
-0.09688714431356 * Marital_StatusSingle + 0.84239030196202 * Marital_StatusTogether ;
1302748   +   H15  = H15  +     0.33126657974568 * Education2n_Cycle
1302749   +          +     0.44539039262703 * EducationBasic  +    -0.09154902903865 *
1302750   +        EducationGraduation  +    -0.26400363440725 * EducationMaster
1302751   +          +    -0.30801073895989 * Marital_StatusDivorced
1302752   +          +     -0.1285150749223 * Marital_StatusMarried
1302753   +          +     0.06775542164414 * Marital_StatusSingle
1302754   +          +    -0.13032366945766 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.33126657974568 * Education2n_Cycle + 0.44539039262703 * 
EducationBasic + -0.09154902903865 * EducationGraduation + -0.26400363440725 * EducationMaster 
+ -0.30801073895989 * Marital_StatusDivorced + -0.1285150749223 * Marital_StatusMarried + 
0.06775542164414 * Marital_StatusSingle + -0.13032366945766 * Marital_StatusTogether ;
1302755   +   H16  = H16  +     0.02030175222681 * Education2n_Cycle
1302756   +          +    -0.19579401096879 * EducationBasic  +      0.2070703930869 *
1302757   +        EducationGraduation  +    -0.40706983167068 * EducationMaster
1302758   +          +     0.22193599090368 * Marital_StatusDivorced
1302759   +          +    -0.54544672042168 * Marital_StatusMarried
1302760   +          +    -0.02237436019864 * Marital_StatusSingle
1302761   +          +    -0.21979468164854 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.02030175222681 * Education2n_Cycle + -0.19579401096879 * 
EducationBasic + 0.2070703930869 * EducationGraduation + -0.40706983167068 * EducationMaster + 
0.22193599090368 * Marital_StatusDivorced + -0.54544672042168 * Marital_StatusMarried + 
-0.02237436019864 * Marital_StatusSingle + -0.21979468164854 * Marital_StatusTogether ;
1302762   +   H11  =    -1.24550293901788 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.24550293901788 + H11 ;
1302763   +   H12  =     0.36762263942809 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.36762263942809 + H12 ;
1302764   +   H13  =     0.07010867577103 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.07010867577103 + H13 ;
1302765   +   H14  =    -1.94014549272156 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -1.94014549272156 + H14 ;
1302766   +   H15  =     0.17666656180153 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.17666656180153 + H15 ;
1302767   +   H16  =    -1.64626406576709 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.64626406576709 + H16 ;
1302768   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1302769   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1302770   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1302771   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1302772   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1302773   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1302774   +END;
MPRINT(EM_DIAGRAM):   END;
1302775   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1302776   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1302777   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1302778   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1302779   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1302780   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1302781   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1302782   +END;
MPRINT(EM_DIAGRAM):   END;
1302783   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1302784   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1302785   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1302786   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1302787   +   P_DepVar1  =     4.21126046696691 * H11  +      0.6565061288056 * H12
1302788   +          +    -1.92484011508628 * H13  +    -3.74020722142387 * H14
1302789   +          +    -3.27353026762143 * H15  +     -1.2596922869974 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.21126046696691 * H11 + 0.6565061288056 * H12 + 
-1.92484011508628 * H13 + -3.74020722142387 * H14 + -3.27353026762143 * H15 + -1.2596922869974 
* H16 ;
1302790   +   P_DepVar1  =    -1.36806658950323 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.36806658950323 + P_DepVar1 ;
1302791   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1302792   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1302793   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1302794   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1302795   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1302796   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1302797   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1302798   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1302799   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1302800   +END;
MPRINT(EM_DIAGRAM):   END;
1302801   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1302802   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1302803   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1302804   +END;
MPRINT(EM_DIAGRAM):   END;
1302805   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1302806   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1302807   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1302808   +END;
MPRINT(EM_DIAGRAM):   END;
1302809   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1302810   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1302811   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1302812   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1302813   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1302814   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1302815   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1302816   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1302817   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1302818   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1302819   +END;
MPRINT(EM_DIAGRAM):   END;
1302820   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1302821   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1302822   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1302823   +drop
1302824   +H11
1302825   +H12
1302826   +H13
1302827   +H14
1302828   +H15
1302829   +H16
1302830   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1302831   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1302832    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1302833    quit;
1302834    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1302835    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1302836    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1302837    retain ID 2 Node "Neural35";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural35";
1302838    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1302839    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2016 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2016 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1302840    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1302841    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1302842    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2016 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2016 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1302843    proc sort data=EMWS8.Neural35_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural35_variableset out=_temp2(keep=NAME CREATOR);
1302844    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1302845    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL35_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1302846    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1302847    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1302848    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1302849    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1302850    proc contents data=EMWS8.Neural35_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural35_train out=_meta(keep=NAME) noprint;
1302851    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1302852    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1302853    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1302854    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1302855    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1302856    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1302857    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1302858    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1302859    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1302860    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1302860  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 970 rows and 5 columns.

1302861    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1302862    proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
1302863    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 970 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 970 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1302864    filename _pref
1302864  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1302865    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1302866    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1302867   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1302868   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1302869   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1302870   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1302871   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1302872   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1302873    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1302874    quit;
1302875    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1302876    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1302877    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1302878    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1302879    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1302880    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1302881    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1302882    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1302883    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1302884    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1302885    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1302886    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1302887    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1302888    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1302889    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1302890    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1302891    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1302892    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1302893    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1302894    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1302895    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1302896    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1302897    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1302898    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1302899    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1302900    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1302901    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1302901  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1302902    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1302903    proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
1302904    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 974 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1302905    filename _pref
1302905  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1302906    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1302907    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1302908   +
1302909   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1302910   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1302910  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1302911   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1302912   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1302913   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1302914   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1302915   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1302916    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1302917    quit;
1302918    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1302919    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1302920    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1302921    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1302922    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1302923    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1302924    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1302925    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1302926    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1302927    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1302928    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1302929    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1302930    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1302931    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1302932    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1302933    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1302934    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1302935    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1302936    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1302937    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1302938    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1302939    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1302940    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1302941    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1302942    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1302943    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1302944    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1302944  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1302945    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1302946    proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
1302947    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 1013 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1302948    filename _pref
1302948  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1302949    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1302950    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1302951   +
1302952   +
1302953   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1302954   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1302955   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1302956   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1302957   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1302958   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1302959   +
1302960   +
1302961   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1302962   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1302963   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1302964   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1302965   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1302966   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1302967   +
1302968   +
1302969   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1302970   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1302971   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1302972   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1302973   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1302974   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1302975   +
1302976   +
1302977   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1302978   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1302979   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1302980   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1302981   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1302982   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1302983   +
1302984   +
1302985   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1302986   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1302987   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1302988   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1302989   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1302990   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1302991   +
1302992   +
1302993   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1302994   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1302995   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1302996   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1302997   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1302998   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1302999   +
1303000   +
1303001   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1303002   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1303003   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1303004   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1303005   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1303006   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1303007   +
1303008   +
1303009   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1303010   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1303011   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1303012   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1303013   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1303014   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1303015   +if
1303016   +_FILTERNORM1 not in ( '.')
1303017   + and
1303018   +_FILTERNORM2 not in ( '.')
1303019   + and
1303020   +_FILTERNORM3 not in ( '.')
1303021   + and
1303022   +_FILTERNORM4 not in ( '.')
1303023   + and
1303024   +_FILTERNORM5 not in ( '.')
1303025   + and
1303026   +_FILTERNORM6 not in ( '.')
1303027   + and
1303028   +_FILTERNORM7 not in ( ' ')
1303029   + and
1303030   +_FILTERNORM8 not in ( ' ')
1303031   +and
1303032   +( Dt_Customer ne .)
1303033   +and ( Income ne . and (Income<=107000))
1303034   +and ( Kidhome ne .)
1303035   +and ( MntFishProducts ne .)
1303036   +and ( MntFruits ne .)
1303037   +and ( MntGoldProds ne .)
1303038   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1303039   +and ( MntSweetProducts ne .)
1303040   +and ( MntWines ne .)
1303041   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1303042   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1303043   +and ( NumStorePurchases ne .)
1303044   +and ( NumWebPurchases ne .)
1303045   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1303046   +and ( Recency ne .)
1303047   +and ( Teenhome ne .)
1303048   +and ( Year_Birth ne .)
1303049   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1303050   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1303051   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1303052   +end;
MPRINT(EM_DIAGRAM):   end;
1303053   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1303054   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1303055    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1303056    quit;
1303057    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1303058    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1303059    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1303060    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1303061    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1303062    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1303063    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1303064    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1303065    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1303066    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1303067    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1303068    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1303069    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1303070    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1303071    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1303072    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1303073    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1303074    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1303075    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1303076    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1303077    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1303078    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1303079    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1303080    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1303081    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1303082    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1303083    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1303083  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1303084    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1303085    proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
1303086    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 1079 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1303087    %macro varDept(fcmpdata=,id=);
1303088    %global nobs&id scoreFlag&id;
1303089    %let scoreFlag&id = 0;
1303090    %if &id=1 or ^&fcmpStart %then %do;
1303091    proc sort data=&fcmpdata out=_temp&id nodupkey;
1303092    by NAME;
1303093    where id=&id and LHS in( %let j=1;
1303094    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1303095    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1303096    "&var" %let j = %eval(&j+1);
1303097    %end;
1303098    );
1303099    run;
1303100    %let dsid = %sysfunc(open(_temp&id));
1303101    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1303102    %let dsid = %sysfunc(close(&dsid));
1303103    %if &&nobs&id %then %do;
1303104    %let scoreFlag&id = 1;
1303105    %let fcmpStart = 1;
1303106    %end;
1303107    %else %let fcmpStart = 0;
1303108    %end;
1303109    %else %do;
1303110    proc sort data=&fcmpdata out=_tempid;
1303111    where id=&id;
1303112    by LHS;
1303113    run;
1303114    %let dsid = %sysfunc(open(_tempid));
1303115    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1303116    %let dsid = %sysfunc(close(&dsid));
1303117    %if ^&&nobs&id %then %do;
1303118    proc datasets lib=work nolist;
1303119    delete _tempid;
1303120    run;
1303121    quit;
1303122    %end;
1303123    %else %do;
1303124    data _tempAll;
1303125    set %let j=%eval(&id-1);
1303126    %do x=1 %to &j;
1303127    %if &&nobs&x %then %do;
1303128    _temp&x %end;
1303129    %end;
1303130    ;
1303131    run;
1303132    proc sql;
1303133    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1303133  ! work._tempid p2 where p.name=p2.lhs;
1303134    quit;
1303135    data _temp&id;
1303136    set _temp&id;
1303137    where LHS ne '' and NAME ne '' and Node ne '';
1303138    run;
1303139    proc datasets lib=work nolist;
1303140    delete _tempAll;
1303141    run;
1303142    %let dsid = %sysfunc(open(_temp&id));
1303143    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1303144    %let dsid = %sysfunc(close(&dsid));
1303145    %if ^&&nobs&id %then %do;
1303146    proc datasets lib=work nolist;
1303147    delete _temp&id;
1303148    run;
1303149    quit;
1303150    %end;
1303151    %else %do;
1303152    %let scoreFlag&id = 1;
1303153    data _temp&id;
1303154    set _temp&id;
1303155    where LHS ne NAME and node ne '';
1303156    run;
1303157    %let dsid = %sysfunc(open(_temp&id));
1303158    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1303159    %let dsid = %sysfunc(close(&dsid));
1303160    %if ^&&nobs&id %then %do;
1303161    proc datasets lib=work nolist;
1303162    delete _temp&id;
1303163    run;
1303164    quit;
1303165    %end;
1303166    %else %do;
1303167    proc sort data=_temp&id nodupkey;
1303168    by LHS NAME;
1303169    run;
1303170    %end;
1303171    %end;
1303172    %end;
1303173    %end;
1303174    %mend varDept;
1303175    %macro optCode(outdata=fcmpdata);
1303176    %global fcmpStart;
1303177    %let fcmpStart = 0;
1303178    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1303179    %let NumNodes=9;
1303180    %do k=1 %to &NumNodes;
1303181    %vardept(fcmpdata=&outdata, id=&k);
1303182    %end;
1303183    %mend optCode;
1303184    %optcode(outData=EMWS8.Ensmbl22_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 98 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 73 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 25 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp6;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP6 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1303185    filename _pref
1303185  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural30\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural30\EMPUBLISHSCORE.sas";
1303186    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1303187    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural30\EMPUBLISHSCORE.sas.
1303188   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1303189   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1303190   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1303191   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1303192   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1303193   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1303194   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1303195   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1303196   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1303197   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1303198   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1303199   +LENGTH _WARN_ $4
1303200   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1303201   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1303202   +
1303203   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1303204   +
1303205   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1303206   +
1303207   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1303208   +
1303209   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1303210   +
1303211   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1303212   +
1303213   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1303214   +
1303215   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1303216   +
1303217   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1303218   +
1303219   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1303220   +
1303221   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1303222   +
1303223   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1303224   +
1303225   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1303226   +
1303227   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1303228   +
1303229   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1303230   +
1303231   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1303232   +
1303233   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1303234   +
1303235   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1303236   +
1303237   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1303238   +
1303239   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1303240   +
1303241   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1303242   +
1303243   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1303244   +
1303245   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1303246   +
1303247   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1303248   +
1303249   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1303250   +
1303251   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1303252   +
1303253   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1303254   +
1303255   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1303256   +
1303257   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1303258   +
1303259   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1303260   +
1303261   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1303262   +
1303263   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1303264   +
1303265   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1303266   +
1303267   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1303268   +
1303269   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1303270   +
1303271   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
1303272   +
1303273   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1303274   +
1303275   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1303276   +
1303277   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1303278   +
1303279   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1303280   +
1303281   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1303282   +
1303283   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1303284   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1303285   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1303286   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1303287   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1303288   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1303289   +end;
MPRINT(EM_DIAGRAM):   end;
1303290   +else do;
MPRINT(EM_DIAGRAM):   else do;
1303291   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1303292   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1303293   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1303294   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1303295   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1303296   +   end;
MPRINT(EM_DIAGRAM):   end;
1303297   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1303298   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1303299   +   end;
MPRINT(EM_DIAGRAM):   end;
1303300   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1303301   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1303302   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1303303   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1303304   +   end;
MPRINT(EM_DIAGRAM):   end;
1303305   +end;
MPRINT(EM_DIAGRAM):   end;
1303306   +
1303307   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1303308   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1303309   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1303310   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1303311   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1303312   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1303313   +end;
MPRINT(EM_DIAGRAM):   end;
1303314   +else do;
MPRINT(EM_DIAGRAM):   else do;
1303315   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1303316   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1303317   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1303318   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1303319   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1303320   +   end;
MPRINT(EM_DIAGRAM):   end;
1303321   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1303322   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1303323   +   end;
MPRINT(EM_DIAGRAM):   end;
1303324   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1303325   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1303326   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1303327   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1303328   +   end;
MPRINT(EM_DIAGRAM):   end;
1303329   +end;
MPRINT(EM_DIAGRAM):   end;
1303330   +
1303331   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1303332   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1303333   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1303334   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1303335   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1303336   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1303337   +end;
MPRINT(EM_DIAGRAM):   end;
1303338   +else do;
MPRINT(EM_DIAGRAM):   else do;
1303339   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1303340   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1303341   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1303342   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1303343   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1303344   +   end;
MPRINT(EM_DIAGRAM):   end;
1303345   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1303346   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1303347   +   end;
MPRINT(EM_DIAGRAM):   end;
1303348   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1303349   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1303350   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1303351   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1303352   +   end;
MPRINT(EM_DIAGRAM):   end;
1303353   +end;
MPRINT(EM_DIAGRAM):   end;
1303354   +
1303355   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1303356   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1303357   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1303358   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1303359   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1303360   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1303361   +end;
MPRINT(EM_DIAGRAM):   end;
1303362   +else do;
MPRINT(EM_DIAGRAM):   else do;
1303363   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1303364   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1303365   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1303366   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1303367   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1303368   +   end;
MPRINT(EM_DIAGRAM):   end;
1303369   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1303370   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1303371   +   end;
MPRINT(EM_DIAGRAM):   end;
1303372   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1303373   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1303374   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1303375   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1303376   +   end;
MPRINT(EM_DIAGRAM):   end;
1303377   +end;
MPRINT(EM_DIAGRAM):   end;
1303378   +
1303379   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1303380   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1303381   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1303382   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1303383   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1303384   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1303385   +end;
MPRINT(EM_DIAGRAM):   end;
1303386   +else do;
MPRINT(EM_DIAGRAM):   else do;
1303387   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1303388   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1303389   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1303390   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1303391   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1303392   +   end;
MPRINT(EM_DIAGRAM):   end;
1303393   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1303394   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1303395   +   end;
MPRINT(EM_DIAGRAM):   end;
1303396   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1303397   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1303398   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1303399   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1303400   +   end;
MPRINT(EM_DIAGRAM):   end;
1303401   +end;
MPRINT(EM_DIAGRAM):   end;
1303402   +
1303403   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1303404   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1303405   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1303406   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1303407   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1303408   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1303409   +end;
MPRINT(EM_DIAGRAM):   end;
1303410   +else do;
MPRINT(EM_DIAGRAM):   else do;
1303411   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1303412   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1303413   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1303414   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1303415   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1303416   +   end;
MPRINT(EM_DIAGRAM):   end;
1303417   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1303418   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1303419   +   end;
MPRINT(EM_DIAGRAM):   end;
1303420   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1303421   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1303422   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1303423   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1303424   +   end;
MPRINT(EM_DIAGRAM):   end;
1303425   +end;
MPRINT(EM_DIAGRAM):   end;
1303426   +
1303427   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1303428   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1303429   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1303430   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1303431   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1303432   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1303433   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1303434   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1303435   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1303436   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1303437   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1303438   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1303439   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1303440   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1303441   +end;
MPRINT(EM_DIAGRAM):   end;
1303442   +else do;
MPRINT(EM_DIAGRAM):   else do;
1303443   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1303444   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1303445   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1303446   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1303447   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1303448   +   end;
MPRINT(EM_DIAGRAM):   end;
1303449   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1303450   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1303451   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1303452   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1303453   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1303454   +   end;
MPRINT(EM_DIAGRAM):   end;
1303455   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1303456   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1303457   +   end;
MPRINT(EM_DIAGRAM):   end;
1303458   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1303459   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1303460   +   end;
MPRINT(EM_DIAGRAM):   end;
1303461   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1303462   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1303463   +   end;
MPRINT(EM_DIAGRAM):   end;
1303464   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1303465   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1303466   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1303467   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1303468   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1303469   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1303470   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1303471   +   end;
MPRINT(EM_DIAGRAM):   end;
1303472   +end;
MPRINT(EM_DIAGRAM):   end;
1303473   +
1303474   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1303475   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1303476   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1303477   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1303478   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1303479   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1303480   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1303481   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1303482   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1303483   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1303484   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1303485   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1303486   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1303487   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1303488   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1303489   +end;
MPRINT(EM_DIAGRAM):   end;
1303490   +else do;
MPRINT(EM_DIAGRAM):   else do;
1303491   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1303492   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1303493   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1303494   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1303495   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1303496   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1303497   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1303498   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1303499   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1303500   +         end;
MPRINT(EM_DIAGRAM):   end;
1303501   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1303502   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1303503   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1303504   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1303505   +            end;
MPRINT(EM_DIAGRAM):   end;
1303506   +         end;
MPRINT(EM_DIAGRAM):   end;
1303507   +      end;
MPRINT(EM_DIAGRAM):   end;
1303508   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1303509   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1303510   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1303511   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1303512   +         end;
MPRINT(EM_DIAGRAM):   end;
1303513   +      end;
MPRINT(EM_DIAGRAM):   end;
1303514   +   end;
MPRINT(EM_DIAGRAM):   end;
1303515   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1303516   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1303517   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1303518   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1303519   +      end;
MPRINT(EM_DIAGRAM):   end;
1303520   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1303521   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1303522   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1303523   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1303524   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1303525   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1303526   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1303527   +         end;
MPRINT(EM_DIAGRAM):   end;
1303528   +      end;
MPRINT(EM_DIAGRAM):   end;
1303529   +   end;
MPRINT(EM_DIAGRAM):   end;
1303530   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1303531   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1303532   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1303533   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1303534   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1303535   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1303536   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1303537   +   end;
MPRINT(EM_DIAGRAM):   end;
1303538   +end;
MPRINT(EM_DIAGRAM):   end;
1303539   +
1303540   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1303541   +*** Checking missing input Interval
1303542   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1303543   +
1303544   +IF NMISS(
1303545   +   Income ,
1303546   +   Kidhome ,
1303547   +   MntFishProducts ,
1303548   +   MntFruits ,
1303549   +   MntGoldProds ,
1303550   +   MntMeatProducts ,
1303551   +   MntSweetProducts ,
1303552   +   MntWines ,
1303553   +   NumCatalogPurchases ,
1303554   +   NumDealsPurchases ,
1303555   +   NumStorePurchases ,
1303556   +   NumWebPurchases ,
1303557   +   NumWebVisitsMonth ,
1303558   +   Recency ,
1303559   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
1303560   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1303561   +
1303562   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1303563   +END;
MPRINT(EM_DIAGRAM):   END;
1303564   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1303565   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1303566   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1303567   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1303568   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1303569   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1303570   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1303571   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1303572   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1303573   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1303574   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1303575   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1303576   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1303577   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1303578   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1303579   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1303580   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1303581   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1303582   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1303583   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1303584   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1303585   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1303586   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1303587   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1303588   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1303589   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1303590   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1303591   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1303592   +END;
MPRINT(EM_DIAGRAM):   END;
1303593   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1303594   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1303595   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1303596   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1303597   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1303598   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1303599   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1303600   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1303601   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1303602   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1303603   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1303604   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1303605   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1303606   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1303607   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1303608   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1303609   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1303610   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1303611   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1303612   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1303613   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1303614   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1303615   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1303616   +   ELSE S_NumCatalogPurchases
1303617   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1303618   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1303619   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1303620   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1303621   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1303622   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1303623   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1303624   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1303625   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1303626   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1303627   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1303628   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1303629   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1303630   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1303631   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1303632   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1303633   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1303634   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1303635   +END;
MPRINT(EM_DIAGRAM):   END;
1303636   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1303637   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1303638   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1303639   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1303640   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1303641   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1303642   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1303643   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1303644   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1303645   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1303646   +   H11  =    -0.59781928082243 * S_Income  +     0.49830142312288 * S_Kidhome
1303647   +          +    -0.00045024466632 * S_MntFishProducts
1303648   +          +    -0.22421712710333 * S_MntFruits  +    -0.19010144853469 *
1303649   +        S_MntGoldProds  +    -0.53373773623953 * S_MntMeatProducts
1303650   +          +     0.17506402203495 * S_MntSweetProducts
1303651   +          +    -0.28551398649672 * S_MntWines  +       0.019870944777 *
1303652   +        S_NumCatalogPurchases  +     0.03537776181533 * S_NumDealsPurchases
1303653   +          +     0.05580468715403 * S_NumStorePurchases
1303654   +          +    -0.29131611132704 * S_NumWebPurchases
1303655   +          +    -0.40690084025802 * S_NumWebVisitsMonth
1303656   +          +     0.48640195058901 * S_Recency  +     0.31820890239661 *
1303657   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.59781928082243 * S_Income + 0.49830142312288 * S_Kidhome + 
-0.00045024466632 * S_MntFishProducts + -0.22421712710333 * S_MntFruits + -0.19010144853469 * 
S_MntGoldProds + -0.53373773623953 * S_MntMeatProducts + 0.17506402203495 * S_MntSweetProducts 
+ -0.28551398649672 * S_MntWines + 0.019870944777 * S_NumCatalogPurchases + 0.03537776181533 * 
S_NumDealsPurchases + 0.05580468715403 * S_NumStorePurchases + -0.29131611132704 * 
S_NumWebPurchases + -0.40690084025802 * S_NumWebVisitsMonth + 0.48640195058901 * S_Recency + 
0.31820890239661 * S_Teenhome ;
1303658   +   H12  =    -0.41871753512335 * S_Income  +      0.6025072461821 * S_Kidhome
1303659   +          +    -0.03132724937716 * S_MntFishProducts
1303660   +          +     0.19114182835046 * S_MntFruits  +     0.13483463809539 *
1303661   +        S_MntGoldProds  +    -0.63593603749443 * S_MntMeatProducts
1303662   +          +    -0.07569302401223 * S_MntSweetProducts
1303663   +          +     0.67050112032753 * S_MntWines  +    -0.23159243932208 *
1303664   +        S_NumCatalogPurchases  +    -0.07183698407409 * S_NumDealsPurchases
1303665   +          +     0.54619681114623 * S_NumStorePurchases
1303666   +          +     0.44325129671249 * S_NumWebPurchases
1303667   +          +    -1.25054401670605 * S_NumWebVisitsMonth
1303668   +          +      1.2376290916151 * S_Recency  +     0.43747371517287 *
1303669   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.41871753512335 * S_Income + 0.6025072461821 * S_Kidhome + 
-0.03132724937716 * S_MntFishProducts + 0.19114182835046 * S_MntFruits + 0.13483463809539 * 
S_MntGoldProds + -0.63593603749443 * S_MntMeatProducts + -0.07569302401223 * 
S_MntSweetProducts + 0.67050112032753 * S_MntWines + -0.23159243932208 * S_NumCatalogPurchases 
+ -0.07183698407409 * S_NumDealsPurchases + 0.54619681114623 * S_NumStorePurchases + 
0.44325129671249 * S_NumWebPurchases + -1.25054401670605 * S_NumWebVisitsMonth + 
1.2376290916151 * S_Recency + 0.43747371517287 * S_Teenhome ;
1303670   +   H13  =      0.0713579189325 * S_Income  +    -0.05759612462349 * S_Kidhome
1303671   +          +     0.07631777381832 * S_MntFishProducts
1303672   +          +    -0.00387785552441 * S_MntFruits  +    -0.21868916314192 *
1303673   +        S_MntGoldProds  +       0.072623883197 * S_MntMeatProducts
1303674   +          +     0.12637946833766 * S_MntSweetProducts
1303675   +          +    -0.37981663841124 * S_MntWines  +    -0.89958525403162 *
1303676   +        S_NumCatalogPurchases  +    -0.17471885937598 * S_NumDealsPurchases
1303677   +          +     0.15845618359126 * S_NumStorePurchases
1303678   +          +    -0.33296932705082 * S_NumWebPurchases
1303679   +          +      0.0260072296349 * S_NumWebVisitsMonth
1303680   +          +     0.02544749712977 * S_Recency  +    -0.17381561661022 *
1303681   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.0713579189325 * S_Income + -0.05759612462349 * S_Kidhome + 
0.07631777381832 * S_MntFishProducts + -0.00387785552441 * S_MntFruits + -0.21868916314192 * 
S_MntGoldProds + 0.072623883197 * S_MntMeatProducts + 0.12637946833766 * S_MntSweetProducts + 
-0.37981663841124 * S_MntWines + -0.89958525403162 * S_NumCatalogPurchases + -0.17471885937598 
* S_NumDealsPurchases + 0.15845618359126 * S_NumStorePurchases + -0.33296932705082 * 
S_NumWebPurchases + 0.0260072296349 * S_NumWebVisitsMonth + 0.02544749712977 * S_Recency + 
-0.17381561661022 * S_Teenhome ;
1303682   +   H14  =    -0.47498613710851 * S_Income  +     0.09339198401437 * S_Kidhome
1303683   +          +    -0.13642352619174 * S_MntFishProducts
1303684   +          +     0.27167245582117 * S_MntFruits  +    -0.00579747559996 *
1303685   +        S_MntGoldProds  +     0.31591387319577 * S_MntMeatProducts
1303686   +          +     0.14125815807238 * S_MntSweetProducts
1303687   +          +     0.07862916790983 * S_MntWines  +    -0.58905358997534 *
1303688   +        S_NumCatalogPurchases  +     -0.5574069633995 * S_NumDealsPurchases
1303689   +          +     0.19718828261526 * S_NumStorePurchases
1303690   +          +    -0.24156925391919 * S_NumWebPurchases
1303691   +          +    -0.25711078938749 * S_NumWebVisitsMonth
1303692   +          +     0.38883063223812 * S_Recency  +     -0.2396731334184 *
1303693   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.47498613710851 * S_Income + 0.09339198401437 * S_Kidhome + 
-0.13642352619174 * S_MntFishProducts + 0.27167245582117 * S_MntFruits + -0.00579747559996 * 
S_MntGoldProds + 0.31591387319577 * S_MntMeatProducts + 0.14125815807238 * S_MntSweetProducts 
+ 0.07862916790983 * S_MntWines + -0.58905358997534 * S_NumCatalogPurchases + -0.5574069633995 
* S_NumDealsPurchases + 0.19718828261526 * S_NumStorePurchases + -0.24156925391919 * 
S_NumWebPurchases + -0.25711078938749 * S_NumWebVisitsMonth + 0.38883063223812 * S_Recency + 
-0.2396731334184 * S_Teenhome ;
1303694   +   H15  =     0.24624924979609 * S_Income  +    -0.37052106312109 * S_Kidhome
1303695   +          +     0.13579628643404 * S_MntFishProducts
1303696   +          +    -0.05263868911164 * S_MntFruits  +    -0.01504675049991 *
1303697   +        S_MntGoldProds  +     -0.4202277804998 * S_MntMeatProducts
1303698   +          +    -0.01039299374426 * S_MntSweetProducts
1303699   +          +     0.71197420459135 * S_MntWines  +    -0.35973505575029 *
1303700   +        S_NumCatalogPurchases  +     -0.4415445481482 * S_NumDealsPurchases
1303701   +          +     0.58897740652611 * S_NumStorePurchases
1303702   +          +     0.24564485851062 * S_NumWebPurchases
1303703   +          +    -0.13976320243555 * S_NumWebVisitsMonth
1303704   +          +      0.1199367613063 * S_Recency  +    -0.15283161418313 *
1303705   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.24624924979609 * S_Income + -0.37052106312109 * S_Kidhome + 
0.13579628643404 * S_MntFishProducts + -0.05263868911164 * S_MntFruits + -0.01504675049991 * 
S_MntGoldProds + -0.4202277804998 * S_MntMeatProducts + -0.01039299374426 * S_MntSweetProducts 
+ 0.71197420459135 * S_MntWines + -0.35973505575029 * S_NumCatalogPurchases + -0.4415445481482 
* S_NumDealsPurchases + 0.58897740652611 * S_NumStorePurchases + 0.24564485851062 * 
S_NumWebPurchases + -0.13976320243555 * S_NumWebVisitsMonth + 0.1199367613063 * S_Recency + 
-0.15283161418313 * S_Teenhome ;
1303706   +   H16  =     0.23493799758749 * S_Income  +     0.07038278079069 * S_Kidhome
1303707   +          +    -0.45448768538367 * S_MntFishProducts
1303708   +          +     0.02622380709004 * S_MntFruits  +     0.14726698184115 *
1303709   +        S_MntGoldProds  +     0.65760183569767 * S_MntMeatProducts
1303710   +          +    -0.16936256277023 * S_MntSweetProducts
1303711   +          +    -0.40647066866305 * S_MntWines  +     0.99645493491726 *
1303712   +        S_NumCatalogPurchases  +     0.65587239961358 * S_NumDealsPurchases
1303713   +          +    -0.22309716855774 * S_NumStorePurchases
1303714   +          +    -0.61204529910842 * S_NumWebPurchases
1303715   +          +     0.43742228867615 * S_NumWebVisitsMonth
1303716   +          +    -0.56099034256092 * S_Recency  +     -0.2445351671148 *
1303717   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = 0.23493799758749 * S_Income + 0.07038278079069 * S_Kidhome + 
-0.45448768538367 * S_MntFishProducts + 0.02622380709004 * S_MntFruits + 0.14726698184115 * 
S_MntGoldProds + 0.65760183569767 * S_MntMeatProducts + -0.16936256277023 * S_MntSweetProducts 
+ -0.40647066866305 * S_MntWines + 0.99645493491726 * S_NumCatalogPurchases + 0.65587239961358 
* S_NumDealsPurchases + -0.22309716855774 * S_NumStorePurchases + -0.61204529910842 * 
S_NumWebPurchases + 0.43742228867615 * S_NumWebVisitsMonth + -0.56099034256092 * S_Recency + 
-0.2445351671148 * S_Teenhome ;
1303718   +   H17  =    -0.00107702057163 * S_Income  +     0.25116135719972 * S_Kidhome
1303719   +          +    -0.04540308470858 * S_MntFishProducts
1303720   +          +        0.21487241577 * S_MntFruits  +    -0.12914913547414 *
1303721   +        S_MntGoldProds  +    -0.04149021191395 * S_MntMeatProducts
1303722   +          +     0.02853521979141 * S_MntSweetProducts
1303723   +          +     -0.2435805887418 * S_MntWines  +    -0.04509621661407 *
1303724   +        S_NumCatalogPurchases  +    -0.26492036720429 * S_NumDealsPurchases
1303725   +          +     -0.3299561248944 * S_NumStorePurchases
1303726   +          +    -0.09806597448224 * S_NumWebPurchases
1303727   +          +      0.0427056351245 * S_NumWebVisitsMonth
1303728   +          +     0.03953235628202 * S_Recency  +    -0.11317308767713 *
1303729   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = -0.00107702057163 * S_Income + 0.25116135719972 * S_Kidhome + 
-0.04540308470858 * S_MntFishProducts + 0.21487241577 * S_MntFruits + -0.12914913547414 * 
S_MntGoldProds + -0.04149021191395 * S_MntMeatProducts + 0.02853521979141 * S_MntSweetProducts 
+ -0.2435805887418 * S_MntWines + -0.04509621661407 * S_NumCatalogPurchases + 
-0.26492036720429 * S_NumDealsPurchases + -0.3299561248944 * S_NumStorePurchases + 
-0.09806597448224 * S_NumWebPurchases + 0.0427056351245 * S_NumWebVisitsMonth + 
0.03953235628202 * S_Recency + -0.11317308767713 * S_Teenhome ;
1303730   +   H11  = H11  +     0.50033674561531 * AcceptedCmp10
1303731   +          +    -0.02275693117286 * AcceptedCmp20  +     0.31338891533156 *
1303732   +        AcceptedCmp30  +      0.3901248845706 * AcceptedCmp40
1303733   +          +     0.44314358358111 * AcceptedCmp50  +    -0.20444060864498 *
1303734   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.50033674561531 * AcceptedCmp10 + -0.02275693117286 * 
AcceptedCmp20 + 0.31338891533156 * AcceptedCmp30 + 0.3901248845706 * AcceptedCmp40 + 
0.44314358358111 * AcceptedCmp50 + -0.20444060864498 * Complain0 ;
1303735   +   H12  = H12  +     0.30103938822692 * AcceptedCmp10
1303736   +          +     0.54298746723422 * AcceptedCmp20  +     0.50401040035525 *
1303737   +        AcceptedCmp30  +     0.43447710825306 * AcceptedCmp40
1303738   +          +     0.60794421030027 * AcceptedCmp50  +    -0.28114274461319 *
1303739   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.30103938822692 * AcceptedCmp10 + 0.54298746723422 * 
AcceptedCmp20 + 0.50401040035525 * AcceptedCmp30 + 0.43447710825306 * AcceptedCmp40 + 
0.60794421030027 * AcceptedCmp50 + -0.28114274461319 * Complain0 ;
1303740   +   H13  = H13  +     -0.1890212967757 * AcceptedCmp10
1303741   +          +    -0.11487406996391 * AcceptedCmp20  +    -0.22740618754863 *
1303742   +        AcceptedCmp30  +      0.2354510231918 * AcceptedCmp40
1303743   +          +    -0.14327434649067 * AcceptedCmp50  +    -0.17839080850556 *
1303744   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.1890212967757 * AcceptedCmp10 + -0.11487406996391 * 
AcceptedCmp20 + -0.22740618754863 * AcceptedCmp30 + 0.2354510231918 * AcceptedCmp40 + 
-0.14327434649067 * AcceptedCmp50 + -0.17839080850556 * Complain0 ;
1303745   +   H14  = H14  +    -0.28194187416219 * AcceptedCmp10
1303746   +          +     0.11732089254624 * AcceptedCmp20  +     0.34964075536156 *
1303747   +        AcceptedCmp30  +     0.05772396286169 * AcceptedCmp40
1303748   +          +    -0.08671748651826 * AcceptedCmp50  +      0.0629540108407 *
1303749   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.28194187416219 * AcceptedCmp10 + 0.11732089254624 * 
AcceptedCmp20 + 0.34964075536156 * AcceptedCmp30 + 0.05772396286169 * AcceptedCmp40 + 
-0.08671748651826 * AcceptedCmp50 + 0.0629540108407 * Complain0 ;
1303750   +   H15  = H15  +    -0.01058257322803 * AcceptedCmp10
1303751   +          +     0.26755355732587 * AcceptedCmp20  +     0.40856661734724 *
1303752   +        AcceptedCmp30  +     0.02977117354989 * AcceptedCmp40
1303753   +          +       0.073655049734 * AcceptedCmp50  +     0.25562048226555 *
1303754   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.01058257322803 * AcceptedCmp10 + 0.26755355732587 * 
AcceptedCmp20 + 0.40856661734724 * AcceptedCmp30 + 0.02977117354989 * AcceptedCmp40 + 
0.073655049734 * AcceptedCmp50 + 0.25562048226555 * Complain0 ;
1303755   +   H16  = H16  +    -0.65590117532084 * AcceptedCmp10
1303756   +          +    -0.31314161223579 * AcceptedCmp20  +    -0.18863165264573 *
1303757   +        AcceptedCmp30  +    -0.18832338914237 * AcceptedCmp40
1303758   +          +    -0.53765749471786 * AcceptedCmp50  +     0.17409401877513 *
1303759   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.65590117532084 * AcceptedCmp10 + -0.31314161223579 * 
AcceptedCmp20 + -0.18863165264573 * AcceptedCmp30 + -0.18832338914237 * AcceptedCmp40 + 
-0.53765749471786 * AcceptedCmp50 + 0.17409401877513 * Complain0 ;
1303760   +   H17  = H17  +    -0.42253231673718 * AcceptedCmp10
1303761   +          +    -0.40954345229557 * AcceptedCmp20  +    -0.30577523080786 *
1303762   +        AcceptedCmp30  +    -0.22396670899437 * AcceptedCmp40
1303763   +          +     0.05757251451004 * AcceptedCmp50  +     0.07813950542487 *
1303764   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.42253231673718 * AcceptedCmp10 + -0.40954345229557 * 
AcceptedCmp20 + -0.30577523080786 * AcceptedCmp30 + -0.22396670899437 * AcceptedCmp40 + 
0.05757251451004 * AcceptedCmp50 + 0.07813950542487 * Complain0 ;
1303765   +   H11  = H11  +    -0.14483542022901 * Education2n_Cycle
1303766   +          +     0.32176647745332 * EducationBasic  +     0.00900796305072 *
1303767   +        EducationGraduation  +    -0.00243484910123 * EducationMaster
1303768   +          +    -0.22074132229211 * Marital_StatusDivorced
1303769   +          +     0.70282742634901 * Marital_StatusMarried
1303770   +          +     -0.5926244797961 * Marital_StatusSingle
1303771   +          +     0.21342221410999 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.14483542022901 * Education2n_Cycle + 0.32176647745332 * 
EducationBasic + 0.00900796305072 * EducationGraduation + -0.00243484910123 * EducationMaster 
+ -0.22074132229211 * Marital_StatusDivorced + 0.70282742634901 * Marital_StatusMarried + 
-0.5926244797961 * Marital_StatusSingle + 0.21342221410999 * Marital_StatusTogether ;
1303772   +   H12  = H12  +    -0.10242932200247 * Education2n_Cycle
1303773   +          +     0.34937926721317 * EducationBasic  +    -0.20395479511872 *
1303774   +        EducationGraduation  +     0.31210327899339 * EducationMaster
1303775   +          +    -0.46376392175295 * Marital_StatusDivorced
1303776   +          +       0.589453579718 * Marital_StatusMarried
1303777   +          +    -0.45342174978481 * Marital_StatusSingle
1303778   +          +     0.70517120763557 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.10242932200247 * Education2n_Cycle + 0.34937926721317 * 
EducationBasic + -0.20395479511872 * EducationGraduation + 0.31210327899339 * EducationMaster 
+ -0.46376392175295 * Marital_StatusDivorced + 0.589453579718 * Marital_StatusMarried + 
-0.45342174978481 * Marital_StatusSingle + 0.70517120763557 * Marital_StatusTogether ;
1303779   +   H13  = H13  +     0.24858755570324 * Education2n_Cycle
1303780   +          +     0.07360039359386 * EducationBasic  +    -0.42563056620078 *
1303781   +        EducationGraduation  +    -0.25970840250323 * EducationMaster
1303782   +          +     0.26981972015482 * Marital_StatusDivorced
1303783   +          +    -0.01707364864139 * Marital_StatusMarried
1303784   +          +     0.38646060840009 * Marital_StatusSingle
1303785   +          +     0.19694047086013 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.24858755570324 * Education2n_Cycle + 0.07360039359386 * 
EducationBasic + -0.42563056620078 * EducationGraduation + -0.25970840250323 * EducationMaster 
+ 0.26981972015482 * Marital_StatusDivorced + -0.01707364864139 * Marital_StatusMarried + 
0.38646060840009 * Marital_StatusSingle + 0.19694047086013 * Marital_StatusTogether ;
1303786   +   H14  = H14  +     0.22577522124265 * Education2n_Cycle
1303787   +          +     0.04183136697557 * EducationBasic  +    -0.27725331198825 *
1303788   +        EducationGraduation  +     0.15709188532123 * EducationMaster
1303789   +          +    -0.01933675094701 * Marital_StatusDivorced
1303790   +          +     0.52969577969434 * Marital_StatusMarried
1303791   +          +      -0.348697714569 * Marital_StatusSingle
1303792   +          +      0.5020342481888 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.22577522124265 * Education2n_Cycle + 0.04183136697557 * 
EducationBasic + -0.27725331198825 * EducationGraduation + 0.15709188532123 * EducationMaster 
+ -0.01933675094701 * Marital_StatusDivorced + 0.52969577969434 * Marital_StatusMarried + 
-0.348697714569 * Marital_StatusSingle + 0.5020342481888 * Marital_StatusTogether ;
1303793   +   H15  = H15  +     0.04488332711225 * Education2n_Cycle
1303794   +          +     0.01911097443907 * EducationBasic  +    -0.11699443624996 *
1303795   +        EducationGraduation  +    -0.07291393566738 * EducationMaster
1303796   +          +    -0.04665146013984 * Marital_StatusDivorced
1303797   +          +      -0.586219175167 * Marital_StatusMarried
1303798   +          +     0.55713543417712 * Marital_StatusSingle
1303799   +          +    -0.42208959885332 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.04488332711225 * Education2n_Cycle + 0.01911097443907 * 
EducationBasic + -0.11699443624996 * EducationGraduation + -0.07291393566738 * EducationMaster 
+ -0.04665146013984 * Marital_StatusDivorced + -0.586219175167 * Marital_StatusMarried + 
0.55713543417712 * Marital_StatusSingle + -0.42208959885332 * Marital_StatusTogether ;
1303800   +   H16  = H16  +     0.09174117861154 * Education2n_Cycle
1303801   +          +     -0.1378945860659 * EducationBasic  +     -0.0728635369665 *
1303802   +        EducationGraduation  +     0.29860714824438 * EducationMaster
1303803   +          +    -0.05632171154347 * Marital_StatusDivorced
1303804   +          +     0.03215547861665 * Marital_StatusMarried
1303805   +          +     0.16870781172538 * Marital_StatusSingle
1303806   +          +    -0.04883314322676 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.09174117861154 * Education2n_Cycle + -0.1378945860659 * 
EducationBasic + -0.0728635369665 * EducationGraduation + 0.29860714824438 * EducationMaster + 
-0.05632171154347 * Marital_StatusDivorced + 0.03215547861665 * Marital_StatusMarried + 
0.16870781172538 * Marital_StatusSingle + -0.04883314322676 * Marital_StatusTogether ;
1303807   +   H17  = H17  +    -0.00343694558117 * Education2n_Cycle
1303808   +          +     0.32636427598227 * EducationBasic  +     0.16259654486833 *
1303809   +        EducationGraduation  +    -0.00424229454859 * EducationMaster
1303810   +          +    -0.21765415159355 * Marital_StatusDivorced
1303811   +          +     -0.0542857922075 * Marital_StatusMarried
1303812   +          +     0.20679907454933 * Marital_StatusSingle
1303813   +          +     0.14976519710725 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.00343694558117 * Education2n_Cycle + 0.32636427598227 * 
EducationBasic + 0.16259654486833 * EducationGraduation + -0.00424229454859 * EducationMaster 
+ -0.21765415159355 * Marital_StatusDivorced + -0.0542857922075 * Marital_StatusMarried + 
0.20679907454933 * Marital_StatusSingle + 0.14976519710725 * Marital_StatusTogether ;
1303814   +   H11  =     0.92977078759503 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.92977078759503 + H11 ;
1303815   +   H12  =    -0.97970409253156 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.97970409253156 + H12 ;
1303816   +   H13  =     -0.5001144792196 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.5001144792196 + H13 ;
1303817   +   H14  =    -0.90715840862541 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.90715840862541 + H14 ;
1303818   +   H15  =     0.87046153389036 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.87046153389036 + H15 ;
1303819   +   H16  =     0.49066122767086 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 0.49066122767086 + H16 ;
1303820   +   H17  =    -1.05949763460293 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.05949763460293 + H17 ;
1303821   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1303822   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1303823   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1303824   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1303825   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1303826   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1303827   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
1303828   +END;
MPRINT(EM_DIAGRAM):   END;
1303829   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1303830   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1303831   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1303832   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1303833   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1303834   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1303835   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1303836   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
1303837   +END;
MPRINT(EM_DIAGRAM):   END;
1303838   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1303839   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1303840   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1303841   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1303842   +   P_DepVar1  =    -2.32998401250848 * H11  +     -3.2074078511991 * H12
1303843   +          +    -0.69549988605443 * H13  +    -1.74950789108762 * H14
1303844   +          +    -1.74013772071344 * H15  +     2.65306089869015 * H16
1303845   +          +     0.03700459000906 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.32998401250848 * H11 + -3.2074078511991 * H12 + 
-0.69549988605443 * H13 + -1.74950789108762 * H14 + -1.74013772071344 * H15 + 2.65306089869015 
* H16 + 0.03700459000906 * H17 ;
1303846   +   P_DepVar1  =    -1.51229898726716 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.51229898726716 + P_DepVar1 ;
1303847   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1303848   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1303849   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1303850   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1303851   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1303852   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1303853   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1303854   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1303855   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1303856   +END;
MPRINT(EM_DIAGRAM):   END;
1303857   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1303858   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1303859   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1303860   +END;
MPRINT(EM_DIAGRAM):   END;
1303861   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1303862   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1303863   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1303864   +END;
MPRINT(EM_DIAGRAM):   END;
1303865   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1303866   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1303867   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1303868   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1303869   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1303870   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1303871   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1303872   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1303873   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1303874   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1303875   +END;
MPRINT(EM_DIAGRAM):   END;
1303876   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1303877   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1303878   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1303879   +drop
1303880   +H11
1303881   +H12
1303882   +H13
1303883   +H14
1303884   +H15
1303885   +H16
1303886   +H17
1303887   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
1303888   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1303889    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1303890    quit;
1303891    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1303892    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1303893    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1303894    retain ID 2 Node "Neural30";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural30";
1303895    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1303896    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2154 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2154 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1303897    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1303898    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1303899    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2154 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2154 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1303900    proc sort data=EMWS8.Neural30_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural30_variableset out=_temp2(keep=NAME CREATOR);
1303901    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1303902    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL30_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1303903    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1303904    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1303905    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1303906    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1303907    proc contents data=EMWS8.Neural30_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural30_train out=_meta(keep=NAME) noprint;
1303908    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1303909    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1303910    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1303911    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1303912    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1303913    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1303914    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1303915    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1303916    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1303917    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1303917  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1016 rows and 5 columns.

1303918    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1303919    proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
1303920    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1016 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 1016 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1303921    filename _pref
1303921  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1303922    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1303923    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1303924   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1303925   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1303926   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1303927   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1303928   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1303929   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1303930    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1303931    quit;
1303932    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1303933    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1303934    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1303935    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1303936    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1303937    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1303938    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1303939    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1303940    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1303941    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1303942    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1303943    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1303944    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1303945    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1303946    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1303947    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1303948    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1303949    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1303950    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1303951    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1303952    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1303953    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1303954    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1303955    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1303956    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1303957    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1303958    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1303958  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1303959    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1303960    proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
1303961    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 1020 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1303962    filename _pref
1303962  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1303963    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1303964    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1303965   +
1303966   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1303967   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1303967  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1303968   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1303969   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1303970   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1303971   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1303972   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1303973    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1303974    quit;
1303975    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1303976    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1303977    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1303978    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1303979    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1303980    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1303981    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1303982    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1303983    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1303984    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1303985    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1303986    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1303987    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1303988    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1303989    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1303990    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1303991    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1303992    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1303993    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1303994    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1303995    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1303996    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1303997    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1303998    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1303999    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1304000    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1304001    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1304001  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1304002    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1304003    proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
1304004    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 1059 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1304005    filename _pref
1304005  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1304006    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1304007    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1304008   +
1304009   +
1304010   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1304011   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1304012   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1304013   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1304014   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1304015   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1304016   +
1304017   +
1304018   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1304019   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1304020   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1304021   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1304022   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1304023   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1304024   +
1304025   +
1304026   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1304027   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1304028   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1304029   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1304030   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1304031   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1304032   +
1304033   +
1304034   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1304035   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1304036   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1304037   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1304038   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1304039   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1304040   +
1304041   +
1304042   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1304043   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1304044   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1304045   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1304046   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1304047   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1304048   +
1304049   +
1304050   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1304051   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1304052   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1304053   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1304054   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1304055   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1304056   +
1304057   +
1304058   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1304059   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1304060   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1304061   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1304062   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1304063   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1304064   +
1304065   +
1304066   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1304067   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1304068   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1304069   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1304070   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1304071   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1304072   +if
1304073   +_FILTERNORM1 not in ( '.')
1304074   + and
1304075   +_FILTERNORM2 not in ( '.')
1304076   + and
1304077   +_FILTERNORM3 not in ( '.')
1304078   + and
1304079   +_FILTERNORM4 not in ( '.')
1304080   + and
1304081   +_FILTERNORM5 not in ( '.')
1304082   + and
1304083   +_FILTERNORM6 not in ( '.')
1304084   + and
1304085   +_FILTERNORM7 not in ( ' ')
1304086   + and
1304087   +_FILTERNORM8 not in ( ' ')
1304088   +and
1304089   +( Dt_Customer ne .)
1304090   +and ( Income ne . and (Income<=107000))
1304091   +and ( Kidhome ne .)
1304092   +and ( MntFishProducts ne .)
1304093   +and ( MntFruits ne .)
1304094   +and ( MntGoldProds ne .)
1304095   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1304096   +and ( MntSweetProducts ne .)
1304097   +and ( MntWines ne .)
1304098   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1304099   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1304100   +and ( NumStorePurchases ne .)
1304101   +and ( NumWebPurchases ne .)
1304102   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1304103   +and ( Recency ne .)
1304104   +and ( Teenhome ne .)
1304105   +and ( Year_Birth ne .)
1304106   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1304107   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1304108   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1304109   +end;
MPRINT(EM_DIAGRAM):   end;
1304110   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1304111   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1304112    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1304113    quit;
1304114    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1304115    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1304116    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1304117    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1304118    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1304119    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1304120    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1304121    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1304122    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1304123    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1304124    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1304125    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1304126    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1304127    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1304128    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1304129    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1304130    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1304131    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1304132    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1304133    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1304134    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1304135    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1304136    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1304137    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1304138    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1304139    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1304140    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1304140  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1304141    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1304142    proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
1304143    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 1125 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1304144    %macro varDept(fcmpdata=,id=);
1304145    %global nobs&id scoreFlag&id;
1304146    %let scoreFlag&id = 0;
1304147    %if &id=1 or ^&fcmpStart %then %do;
1304148    proc sort data=&fcmpdata out=_temp&id nodupkey;
1304149    by NAME;
1304150    where id=&id and LHS in( %let j=1;
1304151    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1304152    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1304153    "&var" %let j = %eval(&j+1);
1304154    %end;
1304155    );
1304156    run;
1304157    %let dsid = %sysfunc(open(_temp&id));
1304158    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1304159    %let dsid = %sysfunc(close(&dsid));
1304160    %if &&nobs&id %then %do;
1304161    %let scoreFlag&id = 1;
1304162    %let fcmpStart = 1;
1304163    %end;
1304164    %else %let fcmpStart = 0;
1304165    %end;
1304166    %else %do;
1304167    proc sort data=&fcmpdata out=_tempid;
1304168    where id=&id;
1304169    by LHS;
1304170    run;
1304171    %let dsid = %sysfunc(open(_tempid));
1304172    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1304173    %let dsid = %sysfunc(close(&dsid));
1304174    %if ^&&nobs&id %then %do;
1304175    proc datasets lib=work nolist;
1304176    delete _tempid;
1304177    run;
1304178    quit;
1304179    %end;
1304180    %else %do;
1304181    data _tempAll;
1304182    set %let j=%eval(&id-1);
1304183    %do x=1 %to &j;
1304184    %if &&nobs&x %then %do;
1304185    _temp&x %end;
1304186    %end;
1304187    ;
1304188    run;
1304189    proc sql;
1304190    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1304190  ! work._tempid p2 where p.name=p2.lhs;
1304191    quit;
1304192    data _temp&id;
1304193    set _temp&id;
1304194    where LHS ne '' and NAME ne '' and Node ne '';
1304195    run;
1304196    proc datasets lib=work nolist;
1304197    delete _tempAll;
1304198    run;
1304199    %let dsid = %sysfunc(open(_temp&id));
1304200    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1304201    %let dsid = %sysfunc(close(&dsid));
1304202    %if ^&&nobs&id %then %do;
1304203    proc datasets lib=work nolist;
1304204    delete _temp&id;
1304205    run;
1304206    quit;
1304207    %end;
1304208    %else %do;
1304209    %let scoreFlag&id = 1;
1304210    data _temp&id;
1304211    set _temp&id;
1304212    where LHS ne NAME and node ne '';
1304213    run;
1304214    %let dsid = %sysfunc(open(_temp&id));
1304215    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1304216    %let dsid = %sysfunc(close(&dsid));
1304217    %if ^&&nobs&id %then %do;
1304218    proc datasets lib=work nolist;
1304219    delete _temp&id;
1304220    run;
1304221    quit;
1304222    %end;
1304223    %else %do;
1304224    proc sort data=_temp&id nodupkey;
1304225    by LHS NAME;
1304226    run;
1304227    %end;
1304228    %end;
1304229    %end;
1304230    %end;
1304231    %mend varDept;
1304232    %macro optCode(outdata=fcmpdata);
1304233    %global fcmpStart;
1304234    %let fcmpStart = 0;
1304235    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1304236    %let NumNodes=9;
1304237    %do k=1 %to &NumNodes;
1304238    %vardept(fcmpdata=&outdata, id=&k);
1304239    %end;
1304240    %mend optCode;
1304241    %optcode(outData=EMWS8.Ensmbl22_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 98 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 73 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 25 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp6;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP6 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.20 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1304242    filename _pref
1304242  ! "C:\\predictive-models-project\Workspaces\EMWS8\Reg10\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Reg10\EMPUBLISHSCORE.sas";
1304243    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1304244    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Reg10\EMPUBLISHSCORE.sas.
1304245   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1304246   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1304247   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1304248   +
1304249   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1304250   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1304251   +
1304252   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1304253   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1304254   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1304255   +array REG10DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG10DRF [2] $12 _temporary_ ('1' '0' );
1304256   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1304257   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1304258   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1304259   +ARRAY REG10DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG10DRU[2] _TEMPORARY_ (1 0);
1304260   +
1304261   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1304262   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1304263   +
1304264   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1304265   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1304266   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1304267   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1304268   +end;
MPRINT(EM_DIAGRAM):   end;
1304269   +
1304270   +*** Check MntFishProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntFishProducts for missing values ;
1304271   +if missing( MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntFishProducts ) then do;
1304272   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1304273   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1304274   +end;
MPRINT(EM_DIAGRAM):   end;
1304275   +
1304276   +*** Check MntFruits for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntFruits for missing values ;
1304277   +if missing( MntFruits ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntFruits ) then do;
1304278   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1304279   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1304280   +end;
MPRINT(EM_DIAGRAM):   end;
1304281   +
1304282   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1304283   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1304284   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1304285   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1304286   +end;
MPRINT(EM_DIAGRAM):   end;
1304287   +
1304288   +*** Check MntWines for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntWines for missing values ;
1304289   +if missing( MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntWines ) then do;
1304290   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1304291   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1304292   +end;
MPRINT(EM_DIAGRAM):   end;
1304293   +
1304294   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
1304295   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
1304296   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1304297   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1304298   +end;
MPRINT(EM_DIAGRAM):   end;
1304299   +
1304300   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1304301   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1304302   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1304303   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1304304   +end;
MPRINT(EM_DIAGRAM):   end;
1304305   +
1304306   +*** Check NumStorePurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumStorePurchases for missing values ;
1304307   +if missing( NumStorePurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumStorePurchases ) then do;
1304308   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1304309   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1304310   +end;
MPRINT(EM_DIAGRAM):   end;
1304311   +
1304312   +*** Check NumWebPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebPurchases for missing values ;
1304313   +if missing( NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebPurchases ) then do;
1304314   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1304315   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1304316   +end;
MPRINT(EM_DIAGRAM):   end;
1304317   +
1304318   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1304319   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1304320   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1304321   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1304322   +end;
MPRINT(EM_DIAGRAM):   end;
1304323   +
1304324   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1304325   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1304326   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1304327   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1304328   +end;
MPRINT(EM_DIAGRAM):   end;
1304329   +
1304330   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1304331   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1304332   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1304333   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1304334   +end;
MPRINT(EM_DIAGRAM):   end;
1304335   +
1304336   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1304337   +drop _1_0 ;
MPRINT(EM_DIAGRAM):   drop _1_0 ;
1304338   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1304339   +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1304340   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1304341   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1304342   +end;
MPRINT(EM_DIAGRAM):   end;
1304343   +else do;
MPRINT(EM_DIAGRAM):   else do;
1304344   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1304345   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1304346   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1304347   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1304348   +      _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
1304349   +   end;
MPRINT(EM_DIAGRAM):   end;
1304350   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1304351   +      _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
1304352   +   end;
MPRINT(EM_DIAGRAM):   end;
1304353   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1304354   +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1304355   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1304356   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1304357   +   end;
MPRINT(EM_DIAGRAM):   end;
1304358   +end;
MPRINT(EM_DIAGRAM):   end;
1304359   +
1304360   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1304361   +drop _2_0 ;
MPRINT(EM_DIAGRAM):   drop _2_0 ;
1304362   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1304363   +   _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
1304364   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1304365   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1304366   +end;
MPRINT(EM_DIAGRAM):   end;
1304367   +else do;
MPRINT(EM_DIAGRAM):   else do;
1304368   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1304369   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1304370   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1304371   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1304372   +      _2_0 = 1;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
1304373   +   end;
MPRINT(EM_DIAGRAM):   end;
1304374   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1304375   +      _2_0 = -1;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
1304376   +   end;
MPRINT(EM_DIAGRAM):   end;
1304377   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1304378   +      _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
1304379   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1304380   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1304381   +   end;
MPRINT(EM_DIAGRAM):   end;
1304382   +end;
MPRINT(EM_DIAGRAM):   end;
1304383   +
1304384   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1304385   +drop _3_0 ;
MPRINT(EM_DIAGRAM):   drop _3_0 ;
1304386   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1304387   +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1304388   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1304389   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1304390   +end;
MPRINT(EM_DIAGRAM):   end;
1304391   +else do;
MPRINT(EM_DIAGRAM):   else do;
1304392   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1304393   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1304394   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1304395   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1304396   +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
1304397   +   end;
MPRINT(EM_DIAGRAM):   end;
1304398   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1304399   +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
1304400   +   end;
MPRINT(EM_DIAGRAM):   end;
1304401   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1304402   +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1304403   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1304404   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1304405   +   end;
MPRINT(EM_DIAGRAM):   end;
1304406   +end;
MPRINT(EM_DIAGRAM):   end;
1304407   +
1304408   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1304409   +drop _4_0 ;
MPRINT(EM_DIAGRAM):   drop _4_0 ;
1304410   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1304411   +   _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
1304412   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1304413   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1304414   +end;
MPRINT(EM_DIAGRAM):   end;
1304415   +else do;
MPRINT(EM_DIAGRAM):   else do;
1304416   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1304417   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1304418   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1304419   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1304420   +      _4_0 = 1;
MPRINT(EM_DIAGRAM):   _4_0 = 1;
1304421   +   end;
MPRINT(EM_DIAGRAM):   end;
1304422   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1304423   +      _4_0 = -1;
MPRINT(EM_DIAGRAM):   _4_0 = -1;
1304424   +   end;
MPRINT(EM_DIAGRAM):   end;
1304425   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1304426   +      _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
1304427   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1304428   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1304429   +   end;
MPRINT(EM_DIAGRAM):   end;
1304430   +end;
MPRINT(EM_DIAGRAM):   end;
1304431   +
1304432   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1304433   +drop _5_0 ;
MPRINT(EM_DIAGRAM):   drop _5_0 ;
1304434   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1304435   +   _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
1304436   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1304437   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1304438   +end;
MPRINT(EM_DIAGRAM):   end;
1304439   +else do;
MPRINT(EM_DIAGRAM):   else do;
1304440   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1304441   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1304442   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1304443   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1304444   +      _5_0 = 1;
MPRINT(EM_DIAGRAM):   _5_0 = 1;
1304445   +   end;
MPRINT(EM_DIAGRAM):   end;
1304446   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1304447   +      _5_0 = -1;
MPRINT(EM_DIAGRAM):   _5_0 = -1;
1304448   +   end;
MPRINT(EM_DIAGRAM):   end;
1304449   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1304450   +      _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
1304451   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1304452   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1304453   +   end;
MPRINT(EM_DIAGRAM):   end;
1304454   +end;
MPRINT(EM_DIAGRAM):   end;
1304455   +
1304456   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1304457   +drop _8_0 _8_1 _8_2 _8_3 ;
MPRINT(EM_DIAGRAM):   drop _8_0 _8_1 _8_2 _8_3 ;
1304458   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1304459   +_8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
1304460   +_8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
1304461   +_8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
1304462   +_8_3 = 0;
MPRINT(EM_DIAGRAM):   _8_3 = 0;
1304463   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1304464   +   _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
1304465   +   _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
1304466   +   _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
1304467   +   _8_3 = .;
MPRINT(EM_DIAGRAM):   _8_3 = .;
1304468   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1304469   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1304470   +end;
MPRINT(EM_DIAGRAM):   end;
1304471   +else do;
MPRINT(EM_DIAGRAM):   else do;
1304472   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1304473   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1304474   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1304475   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1304476   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1304477   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1304478   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1304479   +            _8_0 = 1;
MPRINT(EM_DIAGRAM):   _8_0 = 1;
1304480   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1304481   +         end;
MPRINT(EM_DIAGRAM):   end;
1304482   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1304483   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1304484   +               _8_1 = 1;
MPRINT(EM_DIAGRAM):   _8_1 = 1;
1304485   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1304486   +            end;
MPRINT(EM_DIAGRAM):   end;
1304487   +         end;
MPRINT(EM_DIAGRAM):   end;
1304488   +      end;
MPRINT(EM_DIAGRAM):   end;
1304489   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1304490   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1304491   +            _8_2 = 1;
MPRINT(EM_DIAGRAM):   _8_2 = 1;
1304492   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1304493   +         end;
MPRINT(EM_DIAGRAM):   end;
1304494   +      end;
MPRINT(EM_DIAGRAM):   end;
1304495   +   end;
MPRINT(EM_DIAGRAM):   end;
1304496   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1304497   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1304498   +         _8_3 = 1;
MPRINT(EM_DIAGRAM):   _8_3 = 1;
1304499   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1304500   +      end;
MPRINT(EM_DIAGRAM):   end;
1304501   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1304502   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1304503   +            _8_0 = -1;
MPRINT(EM_DIAGRAM):   _8_0 = -1;
1304504   +            _8_1 = -1;
MPRINT(EM_DIAGRAM):   _8_1 = -1;
1304505   +            _8_2 = -1;
MPRINT(EM_DIAGRAM):   _8_2 = -1;
1304506   +            _8_3 = -1;
MPRINT(EM_DIAGRAM):   _8_3 = -1;
1304507   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1304508   +         end;
MPRINT(EM_DIAGRAM):   end;
1304509   +      end;
MPRINT(EM_DIAGRAM):   end;
1304510   +   end;
MPRINT(EM_DIAGRAM):   end;
1304511   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1304512   +      _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
1304513   +      _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
1304514   +      _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
1304515   +      _8_3 = .;
MPRINT(EM_DIAGRAM):   _8_3 = .;
1304516   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1304517   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1304518   +   end;
MPRINT(EM_DIAGRAM):   end;
1304519   +end;
MPRINT(EM_DIAGRAM):   end;
1304520   +
1304521   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1304522   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1304523   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1304524   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1304525   +   goto REG10DR1;
MPRINT(EM_DIAGRAM):   goto REG10DR1;
1304526   +end;
MPRINT(EM_DIAGRAM):   end;
1304527   +
1304528   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1304529   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1304530   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1304531   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1304532   +
1304533   +***  Effect: AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp1 ;
1304534   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1304535   +_LP0 = _LP0 + (   -0.71107732112007) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.71107732112007) * _TEMP * _1_0;
1304536   +
1304537   +***  Effect: AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp2 ;
1304538   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1304539   +_LP0 = _LP0 + (   -0.81763295180983) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.81763295180983) * _TEMP * _2_0;
1304540   +
1304541   +***  Effect: AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp3 ;
1304542   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1304543   +_LP0 = _LP0 + (    -0.8618538514738) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.8618538514738) * _TEMP * _3_0;
1304544   +
1304545   +***  Effect: AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp4 ;
1304546   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1304547   +_LP0 = _LP0 + (   -0.64997710050937) * _TEMP * _4_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.64997710050937) * _TEMP * _4_0;
1304548   +
1304549   +***  Effect: AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp5 ;
1304550   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1304551   +_LP0 = _LP0 + (   -0.91699409369659) * _TEMP * _5_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.91699409369659) * _TEMP * _5_0;
1304552   +
1304553   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1304554   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1304555   +_LP0 = _LP0 + (    0.00003628120307 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00003628120307 * _TEMP);
1304556   +
1304557   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1304558   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1304559   +_LP0 = _LP0 + (    0.09345382071006) * _TEMP * _8_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.09345382071006) * _TEMP * _8_0;
1304560   +_LP0 = _LP0 + (   -0.47894059934485) * _TEMP * _8_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.47894059934485) * _TEMP * _8_1;
1304561   +_LP0 = _LP0 + (    0.46164092141221) * _TEMP * _8_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.46164092141221) * _TEMP * _8_2;
1304562   +_LP0 = _LP0 + (    -0.5078574429985) * _TEMP * _8_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.5078574429985) * _TEMP * _8_3;
1304563   +
1304564   +***  Effect: MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntFishProducts ;
1304565   +_TEMP = MntFishProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntFishProducts ;
1304566   +_LP0 = _LP0 + (   -0.00285470778488 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00285470778488 * _TEMP);
1304567   +
1304568   +***  Effect: MntFruits ;
MPRINT(EM_DIAGRAM):   *** Effect: MntFruits ;
1304569   +_TEMP = MntFruits ;
MPRINT(EM_DIAGRAM):   _TEMP = MntFruits ;
1304570   +_LP0 = _LP0 + (   -0.00481548089585 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00481548089585 * _TEMP);
1304571   +
1304572   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1304573   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1304574   +_LP0 = _LP0 + (    0.00485302069895 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00485302069895 * _TEMP);
1304575   +
1304576   +***  Effect: MntWines ;
MPRINT(EM_DIAGRAM):   *** Effect: MntWines ;
1304577   +_TEMP = MntWines ;
MPRINT(EM_DIAGRAM):   _TEMP = MntWines ;
1304578   +_LP0 = _LP0 + (   -0.00184060065513 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00184060065513 * _TEMP);
1304579   +
1304580   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
1304581   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
1304582   +_LP0 = _LP0 + (    0.40015202354101 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.40015202354101 * _TEMP);
1304583   +
1304584   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1304585   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1304586   +_LP0 = _LP0 + (    0.39526484909287 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.39526484909287 * _TEMP);
1304587   +
1304588   +***  Effect: NumStorePurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumStorePurchases ;
1304589   +_TEMP = NumStorePurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumStorePurchases ;
1304590   +_LP0 = _LP0 + (   -0.21400418800044 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.21400418800044 * _TEMP);
1304591   +
1304592   +***  Effect: NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebPurchases ;
1304593   +_TEMP = NumWebPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebPurchases ;
1304594   +_LP0 = _LP0 + (    -0.2223953481686 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.2223953481686 * _TEMP);
1304595   +
1304596   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1304597   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1304598   +_LP0 = _LP0 + (    0.54388363089232 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.54388363089232 * _TEMP);
1304599   +
1304600   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1304601   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1304602   +_LP0 = _LP0 + (   -0.05513564922633 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05513564922633 * _TEMP);
1304603   +
1304604   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1304605   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1304606   +_LP0 = _LP0 + (   -0.70674092258187 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.70674092258187 * _TEMP);
1304607   +
1304608   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1304609   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1304610   +_P0 = probnorm((   -0.62163391257391) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -0.62163391257391) + _LP0);
1304611   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1304612   +
1304613   +REG10DR1:
1304614   +
1304615   +
1304616   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   REG10DR1: *** Posterior Probabilities and Predicted Level;
1304617   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1304618   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1304619   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1304620   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1304621   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1304622   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1304623   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1304624   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1304625   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1304626   +end;
MPRINT(EM_DIAGRAM):   end;
1304627   +I_DepVar = REG10DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG10DRF[_IY];
1304628   +U_DepVar = REG10DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG10DRU[_IY];
1304629   +
1304630   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1304631   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1304632   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1304633    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1304634    quit;
1304635    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1304636    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1304637    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1304638    retain ID 2 Node "Reg10";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Reg10";
1304639    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1304640    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 461 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 461 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1304641    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1304642    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1304643    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 461 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 461 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1304644    proc sort data=EMWS8.Reg10_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Reg10_variableset out=_temp2(keep=NAME CREATOR);
1304645    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1304646    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.REG10_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1304647    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1304648    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1304649    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1304650    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1304651    proc contents data=EMWS8.Reg10_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Reg10_train out=_meta(keep=NAME) noprint;
1304652    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1304653    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1304654    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1304655    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1304656    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1304657    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1304658    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1304659    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1304660    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1304661    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1304661  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 264 rows and 5 columns.

1304662    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1304663    proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
1304664    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 264 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 264 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1304665    filename _pref
1304665  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1304666    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1304667    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1304668   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1304669   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1304670   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1304671   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1304672   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1304673   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1304674    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1304675    quit;
1304676    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1304677    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1304678    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1304679    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1304680    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1304681    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1304682    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1304683    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1304684    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1304685    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1304686    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1304687    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1304688    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1304689    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1304690    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1304691    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1304692    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1304693    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1304694    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1304695    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1304696    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1304697    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1304698    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1304699    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1304700    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1304701    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1304702    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1304702  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1304703    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1304704    proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
1304705    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 268 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1304706    filename _pref
1304706  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1304707    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1304708    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1304709   +
1304710   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1304711   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1304711  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1304712   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1304713   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1304714   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1304715   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1304716   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1304717    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1304718    quit;
1304719    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1304720    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1304721    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1304722    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1304723    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1304724    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1304725    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1304726    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1304727    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1304728    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1304729    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1304730    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1304731    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1304732    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1304733    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1304734    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1304735    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1304736    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1304737    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1304738    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1304739    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1304740    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1304741    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1304742    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1304743    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1304744    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1304745    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1304745  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1304746    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1304747    proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
1304748    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 307 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1304749    filename _pref
1304749  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1304750    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1304751    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1304752   +
1304753   +
1304754   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1304755   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1304756   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1304757   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1304758   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1304759   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1304760   +
1304761   +
1304762   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1304763   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1304764   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1304765   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1304766   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1304767   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1304768   +
1304769   +
1304770   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1304771   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1304772   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1304773   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1304774   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1304775   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1304776   +
1304777   +
1304778   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1304779   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1304780   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1304781   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1304782   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1304783   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1304784   +
1304785   +
1304786   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1304787   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1304788   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1304789   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1304790   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1304791   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1304792   +
1304793   +
1304794   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1304795   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1304796   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1304797   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1304798   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1304799   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1304800   +
1304801   +
1304802   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1304803   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1304804   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1304805   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1304806   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1304807   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1304808   +
1304809   +
1304810   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1304811   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1304812   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1304813   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1304814   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1304815   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1304816   +if
1304817   +_FILTERNORM1 not in ( '.')
1304818   + and
1304819   +_FILTERNORM2 not in ( '.')
1304820   + and
1304821   +_FILTERNORM3 not in ( '.')
1304822   + and
1304823   +_FILTERNORM4 not in ( '.')
1304824   + and
1304825   +_FILTERNORM5 not in ( '.')
1304826   + and
1304827   +_FILTERNORM6 not in ( '.')
1304828   + and
1304829   +_FILTERNORM7 not in ( ' ')
1304830   + and
1304831   +_FILTERNORM8 not in ( ' ')
1304832   +and
1304833   +( Dt_Customer ne .)
1304834   +and ( Income ne . and (Income<=107000))
1304835   +and ( Kidhome ne .)
1304836   +and ( MntFishProducts ne .)
1304837   +and ( MntFruits ne .)
1304838   +and ( MntGoldProds ne .)
1304839   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1304840   +and ( MntSweetProducts ne .)
1304841   +and ( MntWines ne .)
1304842   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1304843   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1304844   +and ( NumStorePurchases ne .)
1304845   +and ( NumWebPurchases ne .)
1304846   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1304847   +and ( Recency ne .)
1304848   +and ( Teenhome ne .)
1304849   +and ( Year_Birth ne .)
1304850   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1304851   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1304852   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1304853   +end;
MPRINT(EM_DIAGRAM):   end;
1304854   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1304855   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1304856    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1304857    quit;
1304858    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1304859    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1304860    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1304861    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1304862    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1304863    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1304864    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1304865    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1304866    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1304867    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1304868    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1304869    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1304870    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1304871    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1304872    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1304873    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1304874    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1304875    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1304876    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1304877    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1304878    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1304879    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1304880    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1304881    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1304882    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1304883    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1304884    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1304884  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1304885    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1304886    proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
1304887    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 373 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1304888    %macro varDept(fcmpdata=,id=);
1304889    %global nobs&id scoreFlag&id;
1304890    %let scoreFlag&id = 0;
1304891    %if &id=1 or ^&fcmpStart %then %do;
1304892    proc sort data=&fcmpdata out=_temp&id nodupkey;
1304893    by NAME;
1304894    where id=&id and LHS in( %let j=1;
1304895    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1304896    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1304897    "&var" %let j = %eval(&j+1);
1304898    %end;
1304899    );
1304900    run;
1304901    %let dsid = %sysfunc(open(_temp&id));
1304902    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1304903    %let dsid = %sysfunc(close(&dsid));
1304904    %if &&nobs&id %then %do;
1304905    %let scoreFlag&id = 1;
1304906    %let fcmpStart = 1;
1304907    %end;
1304908    %else %let fcmpStart = 0;
1304909    %end;
1304910    %else %do;
1304911    proc sort data=&fcmpdata out=_tempid;
1304912    where id=&id;
1304913    by LHS;
1304914    run;
1304915    %let dsid = %sysfunc(open(_tempid));
1304916    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1304917    %let dsid = %sysfunc(close(&dsid));
1304918    %if ^&&nobs&id %then %do;
1304919    proc datasets lib=work nolist;
1304920    delete _tempid;
1304921    run;
1304922    quit;
1304923    %end;
1304924    %else %do;
1304925    data _tempAll;
1304926    set %let j=%eval(&id-1);
1304927    %do x=1 %to &j;
1304928    %if &&nobs&x %then %do;
1304929    _temp&x %end;
1304930    %end;
1304931    ;
1304932    run;
1304933    proc sql;
1304934    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1304934  ! work._tempid p2 where p.name=p2.lhs;
1304935    quit;
1304936    data _temp&id;
1304937    set _temp&id;
1304938    where LHS ne '' and NAME ne '' and Node ne '';
1304939    run;
1304940    proc datasets lib=work nolist;
1304941    delete _tempAll;
1304942    run;
1304943    %let dsid = %sysfunc(open(_temp&id));
1304944    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1304945    %let dsid = %sysfunc(close(&dsid));
1304946    %if ^&&nobs&id %then %do;
1304947    proc datasets lib=work nolist;
1304948    delete _temp&id;
1304949    run;
1304950    quit;
1304951    %end;
1304952    %else %do;
1304953    %let scoreFlag&id = 1;
1304954    data _temp&id;
1304955    set _temp&id;
1304956    where LHS ne NAME and node ne '';
1304957    run;
1304958    %let dsid = %sysfunc(open(_temp&id));
1304959    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1304960    %let dsid = %sysfunc(close(&dsid));
1304961    %if ^&&nobs&id %then %do;
1304962    proc datasets lib=work nolist;
1304963    delete _temp&id;
1304964    run;
1304965    quit;
1304966    %end;
1304967    %else %do;
1304968    proc sort data=_temp&id nodupkey;
1304969    by LHS NAME;
1304970    run;
1304971    %end;
1304972    %end;
1304973    %end;
1304974    %end;
1304975    %mend varDept;
1304976    %macro optCode(outdata=fcmpdata);
1304977    %global fcmpStart;
1304978    %let fcmpStart = 0;
1304979    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1304980    %let NumNodes=9;
1304981    %do k=1 %to &NumNodes;
1304982    %vardept(fcmpdata=&outdata, id=&k);
1304983    %end;
1304984    %mend optCode;
1304985    %optcode(outData=EMWS8.Ensmbl22_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 72 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 54 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 18 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 18 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 18 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 18 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 18 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp6;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP6 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 18 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 18 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1304986    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1304987    * Ensmbl22: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Computing metadata for TRAIN data;
1304988    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.ENSMBL22_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl22\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl22_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl22_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl22_TRAIN out=WORK.M1RG_8K9 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1RG_8K9;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1RG_8K9(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1RG_8K9;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1RG_8K9;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0FSS4J9 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0FSS4J9;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0FSS4J9;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1YG0PZI(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0FSS4J9;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0FSS4J9;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0FSS4J9;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0FSS4J9;
MPRINT(EMADVISECOLUMNS):   set WORK.M0FSS4J9;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural31_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural31_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl22_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl22";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl22";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl22";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl22";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl22";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl22";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl22";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl22";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl22";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl22";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1" 
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl22";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
1305308    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
1305309    set EMWS8.Ensmbl22_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl22_EMINFO;
1305310    where DATA='Ensmbl22' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl22' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
1305311    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_EMINFO.
      WHERE (DATA='Ensmbl22') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1305312    data EMWS8.Ensmbl22_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl22_EMINFO;
1305313    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
1305314    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
1305315    cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.ENSMBL22_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   run;
1305319    run;
1305320    data EMWS8.Ensmbl22_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl22_EMINFO;
1305321    set EMWS8.Ensmbl22_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl22_EMINFO WORK.MODELTEMP_INFO;
1305322    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL22_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL22_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1305323    proc sort data = EMWS8.Ensmbl22_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl22_EMINFO NOTHREADS;
1305324    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1305325    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL22_EMINFO.
NOTE: The data set EMWS8.ENSMBL22_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1305326    proc sort data = EMWS8.Neural31_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural31_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
1305327    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1305328    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS8.NEURAL31_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1305329    proc sort data = EMWS8.Ensmbl22_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl22_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
1305330    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1305331    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL22_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1305332    data EMWS8.Ensmbl22_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl22_EMINFO;
1305333    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
1305334    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1305335    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL22_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1305336    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1305337    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
1305338    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
1305339    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

NOTE: View EMWS8.ENSMBL22_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
NOTE: View EMWS8.ENSMBL22_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
