*------------------------------------------------------------*
User:                Lukas Fahr
Date:                20. April 2016
Time:                17.36 Uhr
Site:                70107571
Platform:            X64_7PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.36 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                20. April 2016
Time:                17.36 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0MJWDPG
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl22\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0MJWDPG new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl22\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.36 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl22\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl22\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl22\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl22\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.36 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl22\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl22\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl22\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_
'C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl22\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
(FREQ=(WHERE='ROLE = "FREQ"' DEFAULT='Y' RULE=(RULE1=(DESCRIPTION='USEATMOST1FREQ'
VALUES=(VALUE1='Y' )[266231] MAX=1 EXCEEDMAXVALUE='' )[266235] )[266229]
VALIDCHOICES=(CHOICE1='Y' )[266233] )[266517] INPUTREJECT=(WHERE='ROLE in("INPUT",
"REJECTED")' DEFAULT='D' VALIDCHOICES=(CHOICE1='D' )[266239]
RULE=(RULE1=(DESCRIPTION='USEATLEAST1INPUTREJECT' WHERE='(ROLE = "INPUT" and USE in("Y" "D"))
or (ROLE = "REJECTED" and USE = "Y")' MIN=. )[266243] )[266241] )[266237] TARGET=(WHERE='ROLE
= "TARGET"' DEFAULT='Y' VALIDCHOICES=(CHOICE1='Y' CHOICE2='N' )[266247]
RULE=(RULE1=(DESCRIPTION='METADATA.USE1TARGET' VALUES=(VALUE1='Y' )[266253] MIN=1 MAX=1
EXCEEDMAXVALUE='N' )[266251] )[266249] )[266245] )[266227]
2049427    proc freq data=EMWS8.Ensmbl22_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.Ensmbl22_VariableSet noprint;
2049428    table ROLE*LEVEL/out=WORK.Ensmbl22META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Ensmbl22META;
2049429    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.ENSMBL22_VARIABLESET.
NOTE: The data set WORK.ENSMBL22META has 6 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2049430    proc print data=WORK.Ensmbl22META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl22META label noobs;
2049431    var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
2049432    label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
2049432  ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
2049432  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency
Count";
2049433    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2049434    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
2049435    run;
 
NOTE: There were 6 observations read from the data set WORK.ENSMBL22META.
NOTE: The PROCEDURE PRINT printed page 1929.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2049436    title10;
MPRINT(EM_DIAGRAM):   title10;
2049437    %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS8.Neural32_TRAIN EMWS8.Neural32_TRAIN
EMWS8.Neural32_TRAIN EMWS8.Neural32_TRAIN EMWS8 Neural32_TRAIN
EMWS8.Neural32_TRAIN EMWS8.Neural32_TRAIN
EMWS8.Neural32_TRAIN EMWS8.Neural32_TRAIN EMWS8 Neural32_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS8.Neural32_TRAIN
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Neural32_DepVar_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
2049466    data WORK.Ensmbl22_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl22_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS
ORDER);
2049467    length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
2049468    label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
2049468  ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
2049468  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
2049469       "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
2049469  ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
2049469  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels"
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
2049470    set EMWS8.NEURAL32_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS8.NEURAL32_DEPVAR_DM( where=(_TYPE_="TARGET"));
2049471    NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
2049472    select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
2049473    when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
2049474    when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
2049475    when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
2049476    when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
2049477    otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
2049478    end;
MPRINT(EM_DIAGRAM):   end;
2049479    output;
MPRINT(EM_DIAGRAM):   output;
2049480    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.NEURAL32_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.ENSMBL22_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2049481    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2049482    proc print data=WORK.Ensmbl22_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl22_EVENT noobs label;
2049483    var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
2049484    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2049485    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
2049486    run;
 
NOTE: There were 1 observations read from the data set WORK.ENSMBL22_EVENT.
NOTE: The PROCEDURE PRINT printed page 1930.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2049487    title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
2049488    proc print data = EMWS8.Neural32_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS8.Neural32_DepVar_DM noobs label;
2049489    var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
2049490    where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR',
'DECPRIOR');
2049491    label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
2049491  ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
2049491  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
2049492    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2049493    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
2049494    run;
 
NOTE: There were 7 observations read from the data set EMWS8.NEURAL32_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 1931.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2049495    title10;
MPRINT(EM_DIAGRAM):   title10;
2049496    %let groupid =;
2049497    %let endGroupid =;
2049498    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2049499    set EMWS8.Reg10_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg10_EMINFO;
2049500    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
2049500  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
2049501    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
2049502    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
2049503    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.REG10_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2049504    %let groupid =;
2049505    %let endGroupid =;
2049506    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2049507    set EMWS8.Neural30_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural30_EMINFO;
2049508    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
2049508  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
2049509    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
2049510    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
2049511    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL30_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2049512    %let groupid =;
2049513    %let endGroupid =;
2049514    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2049515    set EMWS8.Neural35_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural35_EMINFO;
2049516    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
2049516  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
2049517    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
2049518    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
2049519    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL35_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2049520    %let groupid =;
2049521    %let endGroupid =;
2049522    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2049523    set EMWS8.Neural34_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural34_EMINFO;
2049524    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
2049524  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
2049525    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
2049526    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
2049527    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL34_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2049528    %let groupid =;
2049529    %let endGroupid =;
2049530    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2049531    set EMWS8.Neural33_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural33_EMINFO;
2049532    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
2049532  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
2049533    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
2049534    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
2049535    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL33_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2049536    %let groupid =;
2049537    %let endGroupid =;
2049538    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2049539    set EMWS8.Neural32_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural32_EMINFO;
2049540    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
2049540  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
2049541    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
2049542    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
2049543    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL32_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2049544    %let groupid =;
2049545    %let endGroupid =;
2049546    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2049547    set EMWS8.Neural31_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural31_EMINFO;
2049548    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
2049548  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
2049549    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
2049550    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
2049551    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL31_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2049552    data WORK.Ensmbl22;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl22;
2049553    length NodeId $32 Model $64;
MPRINT(EM_DIAGRAM):   length NodeId $32 Model $64;
2049554    label Nodeid = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodeId_vlabel,  NOQUOTE))" Model
2049554  ! = "%sysfunc(sasmsg(sashelp.dmine, rpt_modeltype,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Nodeid = "Node Id" Model = "rpt_modeltype";
2049555    nodeid="REG10";
MPRINT(EM_DIAGRAM):   nodeid="REG10";
2049556    model="Regression";
MPRINT(EM_DIAGRAM):   model="Regression";
2049557    output;
MPRINT(EM_DIAGRAM):   output;
2049558    nodeid="NEURAL30";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL30";
2049559    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
2049560    output;
MPRINT(EM_DIAGRAM):   output;
2049561    nodeid="NEURAL35";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL35";
2049562    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
2049563    output;
MPRINT(EM_DIAGRAM):   output;
2049564    nodeid="NEURAL34";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL34";
2049565    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
2049566    output;
MPRINT(EM_DIAGRAM):   output;
2049567    nodeid="NEURAL33";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL33";
2049568    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
2049569    output;
MPRINT(EM_DIAGRAM):   output;
2049570    nodeid="NEURAL32";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL32";
2049571    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
2049572    output;
MPRINT(EM_DIAGRAM):   output;
2049573    nodeid="NEURAL31";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL31";
2049574    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
2049575    output;
MPRINT(EM_DIAGRAM):   output;
2049576    ;
MPRINT(EM_DIAGRAM):   ;
2049577    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.ENSMBL22 has 7 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2049578    title;
MPRINT(EM_DIAGRAM):   title;
2049579    proc print data=WORK.Ensmbl22 label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl22 label noobs;
2049580    title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_combinemodels_title,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Imported Models to be Combined";
2049581    title10 "Probability Function: Average";
MPRINT(EM_DIAGRAM):   title10 "Probability Function: Average";
MPRINT(EM_DIAGRAM):   run;
2049582    run;
 
NOTE: There were 7 observations read from the data set WORK.ENSMBL22.
NOTE: The PROCEDURE PRINT printed page 1932.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2049583    title9;
MPRINT(EM_DIAGRAM):   title9;
2049584    title10;
MPRINT(EM_DIAGRAM):   title10;
2049585    data WORK.M2KO0W3H;
MPRINT(EM_DIAGRAM):    data WORK.M2KO0W3H;
2049586    set WORK.M2KO0W3H;
MPRINT(EM_DIAGRAM):   set WORK.M2KO0W3H;
2049587    where NAME = "DepVar";
MPRINT(EM_DIAGRAM):   where NAME = "DepVar";
2049588    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.M2KO0W3H.
      WHERE NAME='DepVar';
NOTE: The data set WORK.M2KO0W3H has 1 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2049589    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
2049590    * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
2049591    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
2049592    %macro DMDBClass;
2049593        DepVar(DESC)
2049594    %mend DMDBClass;
2049595    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
2049596    * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
2049597    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
2049598    %macro DMDBVar;
2049599
2049600    %mend DMDBVar;
2049601    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2049602    * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
2049603    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2049604    proc dmdb batch data=EMWS8.Reg10_TRAIN
2049605    dmdbcat=WORK.EM_DMDB
2049606    maxlevel = 513
2049607    ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.Reg10_TRAIN dmdbcat=WORK.EM_DMDB maxlevel =
513 ;
MPRINT(EM_DIAGRAM):   class
2049608    class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(DESC)
MPRINT(EM_DIAGRAM):  ;
2049609    target
2049610    DepVar
2049611    ;
MPRINT(EM_DIAGRAM):   target DepVar ;
2049612    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 2374   Memory used = 511K.
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: View EMWS8.REG10_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.META2_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.REG10_TRAIN.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
2049613    quit;
2049614    *--- end code ---*;
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.36 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                20. April 2016
Time:                17.36 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2HAZJI8
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl22\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2HAZJI8 new;
MPRINT(EM_DIAGRAM):   run;
2049716    filename emflow
2049716  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl22\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl22\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Scoring REG10_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2049717    *------------------------------------------------------------*;
2049718    * Ensmbl22: Scoring REG10_TRAIN data;
2049719    *------------------------------------------------------------*;
2049720    data EMWS8.Ensmbl22_TRAIN
2049721    / view=EMWS8.Ensmbl22_TRAIN
2049722    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl22_TRAIN / view=EMWS8.Ensmbl22_TRAIN ;
2049723    set EMWS8.Reg10_TRAIN
2049724    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg10_TRAIN ;
2049725    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl22\EMFLOWSCORE.sas.
2049726   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2049727   +* Ensmbl22: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Combine model for DepVar;
2049728   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2049729   +* Ensmbl22: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Scoring Code of model 1 of 7;
2049730   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2049731   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2049732   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
2049733   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2049734   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
2049735   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2049736   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2049737   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
2049738   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
2049739   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
2049740   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2049741   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2049742   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
2049743   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2049744   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
2049745   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2049746   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2049747   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
2049748   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2049749   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
2049750   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2049751   +
2049752   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2049753   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2049753  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2049754   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2049755   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2049756   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2049757   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2049758   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
2049759   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2049760   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
2049761   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2049762   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
2049763   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2049764   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2049765   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2049766   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2049767   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2049768   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2049769   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
2049770   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2049771   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
2049772   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2049773   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
2049774   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2049775   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2049776   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
2049777   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2049778   +* NODE: Meta2;
MPRINT(EM_DIAGRAM):   * NODE: Meta2;
2049779   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2049780   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2049781   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
2049782   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2049783   +* NODE: Reg10;
MPRINT(EM_DIAGRAM):   * NODE: Reg10;
2049784   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2049785   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
2049786   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
2049787   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
2049788   +
2049789   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
2049790   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
2049791   +
2049792   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
2049793   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2049794   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
2049795   +array REG10DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG10DRF [2] $12 _temporary_ ('1' '0' );
2049796   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2049797   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
2049798   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
2049799   +ARRAY REG10DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG10DRU[2] _TEMPORARY_ (1 0);
2049800   +
2049801   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2049802   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
2049803   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2049804   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2049805   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2049806   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2049807   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2049808   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
2049809   +end;
MPRINT(EM_DIAGRAM):   end;
2049810   +else do;
MPRINT(EM_DIAGRAM):   else do;
2049811   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2049812   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
2049813   +   end;
MPRINT(EM_DIAGRAM):   end;
2049814   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2049815   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
2049816   +   end;
MPRINT(EM_DIAGRAM):   end;
2049817   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2049818   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
2049819   +   end;
MPRINT(EM_DIAGRAM):   end;
2049820   +end;
MPRINT(EM_DIAGRAM):   end;
2049821   +
2049822   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
2049823   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
2049824   +
2049825   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
2049826   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
2049827   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2049828   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2049829   +end;
MPRINT(EM_DIAGRAM):   end;
2049830   +
2049831   +*** Check MntFishProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntFishProducts for missing values ;
2049832   +if missing( MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntFishProducts ) then do;
2049833   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2049834   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2049835   +end;
MPRINT(EM_DIAGRAM):   end;
2049836   +
2049837   +*** Check MntFruits for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntFruits for missing values ;
2049838   +if missing( MntFruits ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntFruits ) then do;
2049839   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2049840   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2049841   +end;
MPRINT(EM_DIAGRAM):   end;
2049842   +
2049843   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
2049844   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
2049845   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2049846   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2049847   +end;
MPRINT(EM_DIAGRAM):   end;
2049848   +
2049849   +*** Check MntWines for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntWines for missing values ;
2049850   +if missing( MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntWines ) then do;
2049851   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2049852   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2049853   +end;
MPRINT(EM_DIAGRAM):   end;
2049854   +
2049855   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
2049856   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
2049857   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2049858   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2049859   +end;
MPRINT(EM_DIAGRAM):   end;
2049860   +
2049861   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
2049862   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
2049863   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2049864   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2049865   +end;
MPRINT(EM_DIAGRAM):   end;
2049866   +
2049867   +*** Check NumStorePurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumStorePurchases for missing values ;
2049868   +if missing( NumStorePurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumStorePurchases ) then do;
2049869   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2049870   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2049871   +end;
MPRINT(EM_DIAGRAM):   end;
2049872   +
2049873   +*** Check NumWebPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebPurchases for missing values ;
2049874   +if missing( NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebPurchases ) then do;
2049875   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2049876   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2049877   +end;
MPRINT(EM_DIAGRAM):   end;
2049878   +
2049879   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
2049880   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
2049881   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2049882   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2049883   +end;
MPRINT(EM_DIAGRAM):   end;
2049884   +
2049885   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
2049886   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
2049887   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2049888   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2049889   +end;
MPRINT(EM_DIAGRAM):   end;
2049890   +
2049891   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
2049892   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
2049893   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2049894   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2049895   +end;
MPRINT(EM_DIAGRAM):   end;
2049896   +
2049897   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2049898   +drop _1_0 ;
MPRINT(EM_DIAGRAM):   drop _1_0 ;
2049899   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2049900   +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
2049901   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2049902   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2049903   +end;
MPRINT(EM_DIAGRAM):   end;
2049904   +else do;
MPRINT(EM_DIAGRAM):   else do;
2049905   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2049906   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2049907   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2049908   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2049909   +      _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
2049910   +   end;
MPRINT(EM_DIAGRAM):   end;
2049911   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2049912   +      _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
2049913   +   end;
MPRINT(EM_DIAGRAM):   end;
2049914   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2049915   +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
2049916   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2049917   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2049918   +   end;
MPRINT(EM_DIAGRAM):   end;
2049919   +end;
MPRINT(EM_DIAGRAM):   end;
2049920   +
2049921   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2049922   +drop _2_0 ;
MPRINT(EM_DIAGRAM):   drop _2_0 ;
2049923   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2049924   +   _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
2049925   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2049926   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2049927   +end;
MPRINT(EM_DIAGRAM):   end;
2049928   +else do;
MPRINT(EM_DIAGRAM):   else do;
2049929   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2049930   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2049931   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2049932   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2049933   +      _2_0 = 1;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
2049934   +   end;
MPRINT(EM_DIAGRAM):   end;
2049935   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2049936   +      _2_0 = -1;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
2049937   +   end;
MPRINT(EM_DIAGRAM):   end;
2049938   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2049939   +      _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
2049940   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2049941   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2049942   +   end;
MPRINT(EM_DIAGRAM):   end;
2049943   +end;
MPRINT(EM_DIAGRAM):   end;
2049944   +
2049945   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2049946   +drop _3_0 ;
MPRINT(EM_DIAGRAM):   drop _3_0 ;
2049947   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2049948   +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
2049949   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2049950   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2049951   +end;
MPRINT(EM_DIAGRAM):   end;
2049952   +else do;
MPRINT(EM_DIAGRAM):   else do;
2049953   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2049954   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2049955   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2049956   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2049957   +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
2049958   +   end;
MPRINT(EM_DIAGRAM):   end;
2049959   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2049960   +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
2049961   +   end;
MPRINT(EM_DIAGRAM):   end;
2049962   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2049963   +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
2049964   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2049965   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2049966   +   end;
MPRINT(EM_DIAGRAM):   end;
2049967   +end;
MPRINT(EM_DIAGRAM):   end;
2049968   +
2049969   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2049970   +drop _4_0 ;
MPRINT(EM_DIAGRAM):   drop _4_0 ;
2049971   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2049972   +   _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
2049973   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2049974   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2049975   +end;
MPRINT(EM_DIAGRAM):   end;
2049976   +else do;
MPRINT(EM_DIAGRAM):   else do;
2049977   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2049978   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2049979   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2049980   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2049981   +      _4_0 = 1;
MPRINT(EM_DIAGRAM):   _4_0 = 1;
2049982   +   end;
MPRINT(EM_DIAGRAM):   end;
2049983   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2049984   +      _4_0 = -1;
MPRINT(EM_DIAGRAM):   _4_0 = -1;
2049985   +   end;
MPRINT(EM_DIAGRAM):   end;
2049986   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2049987   +      _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
2049988   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2049989   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2049990   +   end;
MPRINT(EM_DIAGRAM):   end;
2049991   +end;
MPRINT(EM_DIAGRAM):   end;
2049992   +
2049993   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2049994   +drop _5_0 ;
MPRINT(EM_DIAGRAM):   drop _5_0 ;
2049995   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2049996   +   _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
2049997   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2049998   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2049999   +end;
MPRINT(EM_DIAGRAM):   end;
2050000   +else do;
MPRINT(EM_DIAGRAM):   else do;
2050001   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2050002   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2050003   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2050004   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2050005   +      _5_0 = 1;
MPRINT(EM_DIAGRAM):   _5_0 = 1;
2050006   +   end;
MPRINT(EM_DIAGRAM):   end;
2050007   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2050008   +      _5_0 = -1;
MPRINT(EM_DIAGRAM):   _5_0 = -1;
2050009   +   end;
MPRINT(EM_DIAGRAM):   end;
2050010   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2050011   +      _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
2050012   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2050013   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2050014   +   end;
MPRINT(EM_DIAGRAM):   end;
2050015   +end;
MPRINT(EM_DIAGRAM):   end;
2050016   +
2050017   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2050018   +drop _8_0 _8_1 _8_2 _8_3 ;
MPRINT(EM_DIAGRAM):   drop _8_0 _8_1 _8_2 _8_3 ;
2050019   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2050020   +_8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
2050021   +_8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
2050022   +_8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
2050023   +_8_3 = 0;
MPRINT(EM_DIAGRAM):   _8_3 = 0;
2050024   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2050025   +   _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
2050026   +   _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
2050027   +   _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
2050028   +   _8_3 = .;
MPRINT(EM_DIAGRAM):   _8_3 = .;
2050029   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2050030   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2050031   +end;
MPRINT(EM_DIAGRAM):   end;
2050032   +else do;
MPRINT(EM_DIAGRAM):   else do;
2050033   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2050034   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2050035   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2050036   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2050037   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2050038   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2050039   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2050040   +            _8_0 = 1;
MPRINT(EM_DIAGRAM):   _8_0 = 1;
2050041   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2050042   +         end;
MPRINT(EM_DIAGRAM):   end;
2050043   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2050044   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2050045   +               _8_1 = 1;
MPRINT(EM_DIAGRAM):   _8_1 = 1;
2050046   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2050047   +            end;
MPRINT(EM_DIAGRAM):   end;
2050048   +         end;
MPRINT(EM_DIAGRAM):   end;
2050049   +      end;
MPRINT(EM_DIAGRAM):   end;
2050050   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2050051   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2050052   +            _8_2 = 1;
MPRINT(EM_DIAGRAM):   _8_2 = 1;
2050053   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2050054   +         end;
MPRINT(EM_DIAGRAM):   end;
2050055   +      end;
MPRINT(EM_DIAGRAM):   end;
2050056   +   end;
MPRINT(EM_DIAGRAM):   end;
2050057   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2050058   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2050059   +         _8_3 = 1;
MPRINT(EM_DIAGRAM):   _8_3 = 1;
2050060   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2050061   +      end;
MPRINT(EM_DIAGRAM):   end;
2050062   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2050063   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2050064   +            _8_0 = -1;
MPRINT(EM_DIAGRAM):   _8_0 = -1;
2050065   +            _8_1 = -1;
MPRINT(EM_DIAGRAM):   _8_1 = -1;
2050066   +            _8_2 = -1;
MPRINT(EM_DIAGRAM):   _8_2 = -1;
2050067   +            _8_3 = -1;
MPRINT(EM_DIAGRAM):   _8_3 = -1;
2050068   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2050069   +         end;
MPRINT(EM_DIAGRAM):   end;
2050070   +      end;
MPRINT(EM_DIAGRAM):   end;
2050071   +   end;
MPRINT(EM_DIAGRAM):   end;
2050072   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2050073   +      _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
2050074   +      _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
2050075   +      _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
2050076   +      _8_3 = .;
MPRINT(EM_DIAGRAM):   _8_3 = .;
2050077   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2050078   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2050079   +   end;
MPRINT(EM_DIAGRAM):   end;
2050080   +end;
MPRINT(EM_DIAGRAM):   end;
2050081   +
2050082   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
2050083   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
2050084   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
2050085   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
2050086   +   goto REG10DR1;
MPRINT(EM_DIAGRAM):   goto REG10DR1;
2050087   +end;
MPRINT(EM_DIAGRAM):   end;
2050088   +
2050089   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
2050090   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
2050091   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
2050092   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
2050093   +
2050094   +***  Effect: AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp1 ;
2050095   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
2050096   +_LP0 = _LP0 + (   -0.71107732112007) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.71107732112007) * _TEMP * _1_0;
2050097   +
2050098   +***  Effect: AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp2 ;
2050099   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
2050100   +_LP0 = _LP0 + (   -0.81763295180983) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.81763295180983) * _TEMP * _2_0;
2050101   +
2050102   +***  Effect: AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp3 ;
2050103   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
2050104   +_LP0 = _LP0 + (    -0.8618538514738) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.8618538514738) * _TEMP * _3_0;
2050105   +
2050106   +***  Effect: AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp4 ;
2050107   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
2050108   +_LP0 = _LP0 + (   -0.64997710050937) * _TEMP * _4_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.64997710050937) * _TEMP * _4_0;
2050109   +
2050110   +***  Effect: AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp5 ;
2050111   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
2050112   +_LP0 = _LP0 + (   -0.91699409369659) * _TEMP * _5_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.91699409369659) * _TEMP * _5_0;
2050113   +
2050114   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
2050115   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
2050116   +_LP0 = _LP0 + (    0.00003628120307 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00003628120307 * _TEMP);
2050117   +
2050118   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
2050119   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
2050120   +_LP0 = _LP0 + (    0.09345382071006) * _TEMP * _8_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.09345382071006) * _TEMP * _8_0;
2050121   +_LP0 = _LP0 + (   -0.47894059934485) * _TEMP * _8_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.47894059934485) * _TEMP * _8_1;
2050122   +_LP0 = _LP0 + (    0.46164092141221) * _TEMP * _8_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.46164092141221) * _TEMP * _8_2;
2050123   +_LP0 = _LP0 + (    -0.5078574429985) * _TEMP * _8_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.5078574429985) * _TEMP * _8_3;
2050124   +
2050125   +***  Effect: MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntFishProducts ;
2050126   +_TEMP = MntFishProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntFishProducts ;
2050127   +_LP0 = _LP0 + (   -0.00285470778488 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00285470778488 * _TEMP);
2050128   +
2050129   +***  Effect: MntFruits ;
MPRINT(EM_DIAGRAM):   *** Effect: MntFruits ;
2050130   +_TEMP = MntFruits ;
MPRINT(EM_DIAGRAM):   _TEMP = MntFruits ;
2050131   +_LP0 = _LP0 + (   -0.00481548089585 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00481548089585 * _TEMP);
2050132   +
2050133   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
2050134   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
2050135   +_LP0 = _LP0 + (    0.00485302069895 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00485302069895 * _TEMP);
2050136   +
2050137   +***  Effect: MntWines ;
MPRINT(EM_DIAGRAM):   *** Effect: MntWines ;
2050138   +_TEMP = MntWines ;
MPRINT(EM_DIAGRAM):   _TEMP = MntWines ;
2050139   +_LP0 = _LP0 + (   -0.00184060065513 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00184060065513 * _TEMP);
2050140   +
2050141   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
2050142   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
2050143   +_LP0 = _LP0 + (    0.40015202354101 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.40015202354101 * _TEMP);
2050144   +
2050145   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
2050146   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
2050147   +_LP0 = _LP0 + (    0.39526484909287 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.39526484909287 * _TEMP);
2050148   +
2050149   +***  Effect: NumStorePurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumStorePurchases ;
2050150   +_TEMP = NumStorePurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumStorePurchases ;
2050151   +_LP0 = _LP0 + (   -0.21400418800044 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.21400418800044 * _TEMP);
2050152   +
2050153   +***  Effect: NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebPurchases ;
2050154   +_TEMP = NumWebPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebPurchases ;
2050155   +_LP0 = _LP0 + (    -0.2223953481686 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.2223953481686 * _TEMP);
2050156   +
2050157   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
2050158   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
2050159   +_LP0 = _LP0 + (    0.54388363089232 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.54388363089232 * _TEMP);
2050160   +
2050161   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
2050162   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
2050163   +_LP0 = _LP0 + (   -0.05513564922633 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05513564922633 * _TEMP);
2050164   +
2050165   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
2050166   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
2050167   +_LP0 = _LP0 + (   -0.70674092258187 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.70674092258187 * _TEMP);
2050168   +
2050169   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
2050170   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
2050171   +_P0 = probnorm((   -0.62163391257391) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -0.62163391257391) + _LP0);
2050172   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
2050173   +
2050174   +REG10DR1:
2050175   +
2050176   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG10DR1: *** Residuals;
2050177   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
2050178   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
2050179   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
2050180   +end;
MPRINT(EM_DIAGRAM):   end;
2050181   +else do;
MPRINT(EM_DIAGRAM):   else do;
2050182   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2050183   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2050184   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
2050185   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
2050186   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
2050187   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
2050188   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
2050189   +   end;
MPRINT(EM_DIAGRAM):   end;
2050190   +end;
MPRINT(EM_DIAGRAM):   end;
2050191   +
2050192   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
2050193   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2050194   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2050195   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
2050196   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
2050197   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
2050198   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
2050199   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
2050200   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
2050201   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
2050202   +end;
MPRINT(EM_DIAGRAM):   end;
2050203   +I_DepVar = REG10DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG10DRF[_IY];
2050204   +U_DepVar = REG10DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG10DRU[_IY];
2050205   +
2050206   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
2050207   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
2050208   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
2050209   +* Renaming variables for Reg10;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg10;
2050210   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2050211   +* Renaming Posterior variables for Reg10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg10;
2050212   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2050213   +drop Reg10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg10_P_DepVar1;
2050214   +Reg10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg10_P_DepVar1 = P_DepVar1;
2050215   +drop Reg10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg10_P_DepVar0;
2050216   +Reg10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg10_P_DepVar0 = P_DepVar0;
2050217   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2050218   +* Renaming _WARN_ variable for Reg10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg10;
2050219   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2050220   +length Reg10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg10_WARN_ $4;
2050221   +drop Reg10_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg10_WARN_;
2050222   +Reg10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg10_WARN_ = _WARN_;
2050223   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2050224   +* Ensmbl22: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Scoring Code of model 2 of 7;
2050225   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2050226   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2050227   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
2050228   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2050229   +* NODE: Neural30;
MPRINT(EM_DIAGRAM):   * NODE: Neural30;
2050230   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2050231   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2050232   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2050233   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2050234   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2050235   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2050236   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2050237   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2050238   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2050239   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2050240   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2050241   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2050242   +LENGTH _WARN_ $4
2050243   +      F_DepVar  $ 12
2050244   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2050245   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2050246   +
2050247   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2050248   +
2050249   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2050250   +
2050251   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2050252   +
2050253   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2050254   +
2050255   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2050256   +
2050257   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2050258   +
2050259   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2050260   +
2050261   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2050262   +
2050263   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2050264   +
2050265   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2050266   +
2050267   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2050268   +
2050269   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2050270   +
2050271   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2050272   +
2050273   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2050274   +
2050275   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2050276   +
2050277   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2050278   +
2050279   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2050280   +
2050281   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2050282   +
2050283   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2050284   +
2050285   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2050286   +
2050287   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2050288   +
2050289   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2050290   +
2050291   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2050292   +
2050293   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2050294   +
2050295   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2050296   +
2050297   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2050298   +
2050299   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2050300   +
2050301   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2050302   +
2050303   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2050304   +
2050305   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2050306   +
2050307   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
2050308   +
2050309   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
2050310   +
2050311   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
2050312   +
2050313   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
2050314   +
2050315   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
2050316   +
2050317   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2050318   +
2050319   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2050320   +
2050321   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2050322   +
2050323   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2050324   +
2050325   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2050326   +
2050327   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2050328   +
2050329   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2050330   +
2050331   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2050332   +
2050333   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2050334   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2050335   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2050336   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2050337   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2050338   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2050339   +end;
MPRINT(EM_DIAGRAM):   end;
2050340   +else do;
MPRINT(EM_DIAGRAM):   else do;
2050341   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2050342   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2050343   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2050344   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2050345   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2050346   +   end;
MPRINT(EM_DIAGRAM):   end;
2050347   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2050348   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2050349   +   end;
MPRINT(EM_DIAGRAM):   end;
2050350   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2050351   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2050352   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2050353   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2050354   +   end;
MPRINT(EM_DIAGRAM):   end;
2050355   +end;
MPRINT(EM_DIAGRAM):   end;
2050356   +
2050357   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2050358   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2050359   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2050360   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2050361   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2050362   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2050363   +end;
MPRINT(EM_DIAGRAM):   end;
2050364   +else do;
MPRINT(EM_DIAGRAM):   else do;
2050365   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2050366   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2050367   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2050368   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2050369   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2050370   +   end;
MPRINT(EM_DIAGRAM):   end;
2050371   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2050372   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2050373   +   end;
MPRINT(EM_DIAGRAM):   end;
2050374   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2050375   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2050376   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2050377   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2050378   +   end;
MPRINT(EM_DIAGRAM):   end;
2050379   +end;
MPRINT(EM_DIAGRAM):   end;
2050380   +
2050381   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2050382   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2050383   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2050384   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2050385   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2050386   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2050387   +end;
MPRINT(EM_DIAGRAM):   end;
2050388   +else do;
MPRINT(EM_DIAGRAM):   else do;
2050389   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2050390   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2050391   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2050392   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2050393   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2050394   +   end;
MPRINT(EM_DIAGRAM):   end;
2050395   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2050396   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2050397   +   end;
MPRINT(EM_DIAGRAM):   end;
2050398   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2050399   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2050400   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2050401   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2050402   +   end;
MPRINT(EM_DIAGRAM):   end;
2050403   +end;
MPRINT(EM_DIAGRAM):   end;
2050404   +
2050405   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2050406   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2050407   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2050408   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2050409   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2050410   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2050411   +end;
MPRINT(EM_DIAGRAM):   end;
2050412   +else do;
MPRINT(EM_DIAGRAM):   else do;
2050413   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2050414   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2050415   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2050416   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2050417   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2050418   +   end;
MPRINT(EM_DIAGRAM):   end;
2050419   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2050420   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2050421   +   end;
MPRINT(EM_DIAGRAM):   end;
2050422   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2050423   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2050424   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2050425   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2050426   +   end;
MPRINT(EM_DIAGRAM):   end;
2050427   +end;
MPRINT(EM_DIAGRAM):   end;
2050428   +
2050429   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2050430   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2050431   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2050432   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2050433   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2050434   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2050435   +end;
MPRINT(EM_DIAGRAM):   end;
2050436   +else do;
MPRINT(EM_DIAGRAM):   else do;
2050437   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2050438   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2050439   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2050440   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2050441   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2050442   +   end;
MPRINT(EM_DIAGRAM):   end;
2050443   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2050444   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2050445   +   end;
MPRINT(EM_DIAGRAM):   end;
2050446   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2050447   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2050448   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2050449   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2050450   +   end;
MPRINT(EM_DIAGRAM):   end;
2050451   +end;
MPRINT(EM_DIAGRAM):   end;
2050452   +
2050453   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2050454   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2050455   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2050456   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2050457   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2050458   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2050459   +end;
MPRINT(EM_DIAGRAM):   end;
2050460   +else do;
MPRINT(EM_DIAGRAM):   else do;
2050461   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2050462   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2050463   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2050464   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2050465   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2050466   +   end;
MPRINT(EM_DIAGRAM):   end;
2050467   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2050468   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2050469   +   end;
MPRINT(EM_DIAGRAM):   end;
2050470   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2050471   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2050472   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2050473   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2050474   +   end;
MPRINT(EM_DIAGRAM):   end;
2050475   +end;
MPRINT(EM_DIAGRAM):   end;
2050476   +
2050477   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2050478   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2050479   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2050480   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2050481   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2050482   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2050483   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2050484   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2050485   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2050486   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2050487   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2050488   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2050489   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2050490   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2050491   +end;
MPRINT(EM_DIAGRAM):   end;
2050492   +else do;
MPRINT(EM_DIAGRAM):   else do;
2050493   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2050494   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2050495   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2050496   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2050497   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2050498   +   end;
MPRINT(EM_DIAGRAM):   end;
2050499   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2050500   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2050501   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2050502   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2050503   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2050504   +   end;
MPRINT(EM_DIAGRAM):   end;
2050505   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2050506   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2050507   +   end;
MPRINT(EM_DIAGRAM):   end;
2050508   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2050509   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2050510   +   end;
MPRINT(EM_DIAGRAM):   end;
2050511   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2050512   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2050513   +   end;
MPRINT(EM_DIAGRAM):   end;
2050514   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2050515   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2050516   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2050517   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2050518   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2050519   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2050520   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2050521   +   end;
MPRINT(EM_DIAGRAM):   end;
2050522   +end;
MPRINT(EM_DIAGRAM):   end;
2050523   +
2050524   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2050525   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2050526   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2050527   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2050528   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2050529   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2050530   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2050531   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2050532   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2050533   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2050534   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2050535   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2050536   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2050537   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2050538   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2050539   +end;
MPRINT(EM_DIAGRAM):   end;
2050540   +else do;
MPRINT(EM_DIAGRAM):   else do;
2050541   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2050542   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2050543   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2050544   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2050545   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2050546   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2050547   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2050548   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2050549   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2050550   +         end;
MPRINT(EM_DIAGRAM):   end;
2050551   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2050552   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2050553   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2050554   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2050555   +            end;
MPRINT(EM_DIAGRAM):   end;
2050556   +         end;
MPRINT(EM_DIAGRAM):   end;
2050557   +      end;
MPRINT(EM_DIAGRAM):   end;
2050558   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2050559   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2050560   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2050561   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2050562   +         end;
MPRINT(EM_DIAGRAM):   end;
2050563   +      end;
MPRINT(EM_DIAGRAM):   end;
2050564   +   end;
MPRINT(EM_DIAGRAM):   end;
2050565   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2050566   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2050567   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2050568   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2050569   +      end;
MPRINT(EM_DIAGRAM):   end;
2050570   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2050571   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2050572   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2050573   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2050574   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2050575   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2050576   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2050577   +         end;
MPRINT(EM_DIAGRAM):   end;
2050578   +      end;
MPRINT(EM_DIAGRAM):   end;
2050579   +   end;
MPRINT(EM_DIAGRAM):   end;
2050580   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2050581   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2050582   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2050583   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2050584   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2050585   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2050586   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2050587   +   end;
MPRINT(EM_DIAGRAM):   end;
2050588   +end;
MPRINT(EM_DIAGRAM):   end;
2050589   +
2050590   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2050591   +*** Checking missing input Interval
2050592   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2050593   +
2050594   +IF NMISS(
2050595   +   Income ,
2050596   +   Kidhome ,
2050597   +   MntFishProducts ,
2050598   +   MntFruits ,
2050599   +   MntGoldProds ,
2050600   +   MntMeatProducts ,
2050601   +   MntSweetProducts ,
2050602   +   MntWines ,
2050603   +   NumCatalogPurchases ,
2050604   +   NumDealsPurchases ,
2050605   +   NumStorePurchases ,
2050606   +   NumWebPurchases ,
2050607   +   NumWebVisitsMonth ,
2050608   +   Recency ,
2050609   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
2050610   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2050611   +
2050612   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2050613   +END;
MPRINT(EM_DIAGRAM):   END;
2050614   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2050615   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2050616   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2050617   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2050618   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2050619   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2050620   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2050621   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2050622   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2050623   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2050624   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2050625   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2050626   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2050627   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2050628   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2050629   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2050630   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2050631   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2050632   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2050633   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2050634   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2050635   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2050636   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2050637   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2050638   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2050639   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2050640   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2050641   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2050642   +END;
MPRINT(EM_DIAGRAM):   END;
2050643   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2050644   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2050645   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2050646   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2050647   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2050648   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2050649   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2050650   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2050651   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2050652   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2050653   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2050654   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2050655   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2050656   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2050657   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2050658   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2050659   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2050660   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2050661   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2050662   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2050663   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2050664   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2050665   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2050666   +   ELSE S_NumCatalogPurchases
2050667   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2050668   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2050669   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2050670   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2050671   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2050672   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2050673   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2050674   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2050675   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2050676   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2050677   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2050678   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2050679   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2050680   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2050681   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2050682   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2050683   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2050684   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2050685   +END;
MPRINT(EM_DIAGRAM):   END;
2050686   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2050687   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
2050688   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2050689   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2050690   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
2050691   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2050692   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2050693   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2050694   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2050695   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2050696   +   H11  =    -0.59781928082243 * S_Income  +     0.49830142312288 * S_Kidhome
2050697   +          +    -0.00045024466632 * S_MntFishProducts
2050698   +          +    -0.22421712710333 * S_MntFruits  +    -0.19010144853469 *
2050699   +        S_MntGoldProds  +    -0.53373773623953 * S_MntMeatProducts
2050700   +          +     0.17506402203495 * S_MntSweetProducts
2050701   +          +    -0.28551398649672 * S_MntWines  +       0.019870944777 *
2050702   +        S_NumCatalogPurchases  +     0.03537776181533 * S_NumDealsPurchases
2050703   +          +     0.05580468715403 * S_NumStorePurchases
2050704   +          +    -0.29131611132704 * S_NumWebPurchases
2050705   +          +    -0.40690084025802 * S_NumWebVisitsMonth
2050706   +          +     0.48640195058901 * S_Recency  +     0.31820890239661 *
2050707   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.59781928082243 * S_Income + 0.49830142312288 * S_Kidhome +
-0.00045024466632 * S_MntFishProducts + -0.22421712710333 * S_MntFruits + -0.19010144853469 *
S_MntGoldProds + -0.53373773623953 * S_MntMeatProducts + 0.17506402203495 * S_MntSweetProducts
+ -0.28551398649672 * S_MntWines + 0.019870944777 * S_NumCatalogPurchases + 0.03537776181533 *
S_NumDealsPurchases + 0.05580468715403 * S_NumStorePurchases + -0.29131611132704 *
S_NumWebPurchases + -0.40690084025802 * S_NumWebVisitsMonth + 0.48640195058901 * S_Recency +
0.31820890239661 * S_Teenhome ;
2050708   +   H12  =    -0.41871753512335 * S_Income  +      0.6025072461821 * S_Kidhome
2050709   +          +    -0.03132724937716 * S_MntFishProducts
2050710   +          +     0.19114182835046 * S_MntFruits  +     0.13483463809539 *
2050711   +        S_MntGoldProds  +    -0.63593603749443 * S_MntMeatProducts
2050712   +          +    -0.07569302401223 * S_MntSweetProducts
2050713   +          +     0.67050112032753 * S_MntWines  +    -0.23159243932208 *
2050714   +        S_NumCatalogPurchases  +    -0.07183698407409 * S_NumDealsPurchases
2050715   +          +     0.54619681114623 * S_NumStorePurchases
2050716   +          +     0.44325129671249 * S_NumWebPurchases
2050717   +          +    -1.25054401670605 * S_NumWebVisitsMonth
2050718   +          +      1.2376290916151 * S_Recency  +     0.43747371517287 *
2050719   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.41871753512335 * S_Income + 0.6025072461821 * S_Kidhome +
-0.03132724937716 * S_MntFishProducts + 0.19114182835046 * S_MntFruits + 0.13483463809539 *
S_MntGoldProds + -0.63593603749443 * S_MntMeatProducts + -0.07569302401223 *
S_MntSweetProducts + 0.67050112032753 * S_MntWines + -0.23159243932208 * S_NumCatalogPurchases
+ -0.07183698407409 * S_NumDealsPurchases + 0.54619681114623 * S_NumStorePurchases +
0.44325129671249 * S_NumWebPurchases + -1.25054401670605 * S_NumWebVisitsMonth +
1.2376290916151 * S_Recency + 0.43747371517287 * S_Teenhome ;
2050720   +   H13  =      0.0713579189325 * S_Income  +    -0.05759612462349 * S_Kidhome
2050721   +          +     0.07631777381832 * S_MntFishProducts
2050722   +          +    -0.00387785552441 * S_MntFruits  +    -0.21868916314192 *
2050723   +        S_MntGoldProds  +       0.072623883197 * S_MntMeatProducts
2050724   +          +     0.12637946833766 * S_MntSweetProducts
2050725   +          +    -0.37981663841124 * S_MntWines  +    -0.89958525403162 *
2050726   +        S_NumCatalogPurchases  +    -0.17471885937598 * S_NumDealsPurchases
2050727   +          +     0.15845618359126 * S_NumStorePurchases
2050728   +          +    -0.33296932705082 * S_NumWebPurchases
2050729   +          +      0.0260072296349 * S_NumWebVisitsMonth
2050730   +          +     0.02544749712977 * S_Recency  +    -0.17381561661022 *
2050731   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.0713579189325 * S_Income + -0.05759612462349 * S_Kidhome +
0.07631777381832 * S_MntFishProducts + -0.00387785552441 * S_MntFruits + -0.21868916314192 *
S_MntGoldProds + 0.072623883197 * S_MntMeatProducts + 0.12637946833766 * S_MntSweetProducts +
-0.37981663841124 * S_MntWines + -0.89958525403162 * S_NumCatalogPurchases + -0.17471885937598
* S_NumDealsPurchases + 0.15845618359126 * S_NumStorePurchases + -0.33296932705082 *
S_NumWebPurchases + 0.0260072296349 * S_NumWebVisitsMonth + 0.02544749712977 * S_Recency +
-0.17381561661022 * S_Teenhome ;
2050732   +   H14  =    -0.47498613710851 * S_Income  +     0.09339198401437 * S_Kidhome
2050733   +          +    -0.13642352619174 * S_MntFishProducts
2050734   +          +     0.27167245582117 * S_MntFruits  +    -0.00579747559996 *
2050735   +        S_MntGoldProds  +     0.31591387319577 * S_MntMeatProducts
2050736   +          +     0.14125815807238 * S_MntSweetProducts
2050737   +          +     0.07862916790983 * S_MntWines  +    -0.58905358997534 *
2050738   +        S_NumCatalogPurchases  +     -0.5574069633995 * S_NumDealsPurchases
2050739   +          +     0.19718828261526 * S_NumStorePurchases
2050740   +          +    -0.24156925391919 * S_NumWebPurchases
2050741   +          +    -0.25711078938749 * S_NumWebVisitsMonth
2050742   +          +     0.38883063223812 * S_Recency  +     -0.2396731334184 *
2050743   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.47498613710851 * S_Income + 0.09339198401437 * S_Kidhome +
-0.13642352619174 * S_MntFishProducts + 0.27167245582117 * S_MntFruits + -0.00579747559996 *
S_MntGoldProds + 0.31591387319577 * S_MntMeatProducts + 0.14125815807238 * S_MntSweetProducts
+ 0.07862916790983 * S_MntWines + -0.58905358997534 * S_NumCatalogPurchases + -0.5574069633995
* S_NumDealsPurchases + 0.19718828261526 * S_NumStorePurchases + -0.24156925391919 *
S_NumWebPurchases + -0.25711078938749 * S_NumWebVisitsMonth + 0.38883063223812 * S_Recency +
-0.2396731334184 * S_Teenhome ;
2050744   +   H15  =     0.24624924979609 * S_Income  +    -0.37052106312109 * S_Kidhome
2050745   +          +     0.13579628643404 * S_MntFishProducts
2050746   +          +    -0.05263868911164 * S_MntFruits  +    -0.01504675049991 *
2050747   +        S_MntGoldProds  +     -0.4202277804998 * S_MntMeatProducts
2050748   +          +    -0.01039299374426 * S_MntSweetProducts
2050749   +          +     0.71197420459135 * S_MntWines  +    -0.35973505575029 *
2050750   +        S_NumCatalogPurchases  +     -0.4415445481482 * S_NumDealsPurchases
2050751   +          +     0.58897740652611 * S_NumStorePurchases
2050752   +          +     0.24564485851062 * S_NumWebPurchases
2050753   +          +    -0.13976320243555 * S_NumWebVisitsMonth
2050754   +          +      0.1199367613063 * S_Recency  +    -0.15283161418313 *
2050755   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.24624924979609 * S_Income + -0.37052106312109 * S_Kidhome +
0.13579628643404 * S_MntFishProducts + -0.05263868911164 * S_MntFruits + -0.01504675049991 *
S_MntGoldProds + -0.4202277804998 * S_MntMeatProducts + -0.01039299374426 * S_MntSweetProducts
+ 0.71197420459135 * S_MntWines + -0.35973505575029 * S_NumCatalogPurchases + -0.4415445481482
* S_NumDealsPurchases + 0.58897740652611 * S_NumStorePurchases + 0.24564485851062 *
S_NumWebPurchases + -0.13976320243555 * S_NumWebVisitsMonth + 0.1199367613063 * S_Recency +
-0.15283161418313 * S_Teenhome ;
2050756   +   H16  =     0.23493799758749 * S_Income  +     0.07038278079069 * S_Kidhome
2050757   +          +    -0.45448768538367 * S_MntFishProducts
2050758   +          +     0.02622380709004 * S_MntFruits  +     0.14726698184115 *
2050759   +        S_MntGoldProds  +     0.65760183569767 * S_MntMeatProducts
2050760   +          +    -0.16936256277023 * S_MntSweetProducts
2050761   +          +    -0.40647066866305 * S_MntWines  +     0.99645493491726 *
2050762   +        S_NumCatalogPurchases  +     0.65587239961358 * S_NumDealsPurchases
2050763   +          +    -0.22309716855774 * S_NumStorePurchases
2050764   +          +    -0.61204529910842 * S_NumWebPurchases
2050765   +          +     0.43742228867615 * S_NumWebVisitsMonth
2050766   +          +    -0.56099034256092 * S_Recency  +     -0.2445351671148 *
2050767   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = 0.23493799758749 * S_Income + 0.07038278079069 * S_Kidhome +
-0.45448768538367 * S_MntFishProducts + 0.02622380709004 * S_MntFruits + 0.14726698184115 *
S_MntGoldProds + 0.65760183569767 * S_MntMeatProducts + -0.16936256277023 * S_MntSweetProducts
+ -0.40647066866305 * S_MntWines + 0.99645493491726 * S_NumCatalogPurchases + 0.65587239961358
* S_NumDealsPurchases + -0.22309716855774 * S_NumStorePurchases + -0.61204529910842 *
S_NumWebPurchases + 0.43742228867615 * S_NumWebVisitsMonth + -0.56099034256092 * S_Recency +
-0.2445351671148 * S_Teenhome ;
2050768   +   H17  =    -0.00107702057163 * S_Income  +     0.25116135719972 * S_Kidhome
2050769   +          +    -0.04540308470858 * S_MntFishProducts
2050770   +          +        0.21487241577 * S_MntFruits  +    -0.12914913547414 *
2050771   +        S_MntGoldProds  +    -0.04149021191395 * S_MntMeatProducts
2050772   +          +     0.02853521979141 * S_MntSweetProducts
2050773   +          +     -0.2435805887418 * S_MntWines  +    -0.04509621661407 *
2050774   +        S_NumCatalogPurchases  +    -0.26492036720429 * S_NumDealsPurchases
2050775   +          +     -0.3299561248944 * S_NumStorePurchases
2050776   +          +    -0.09806597448224 * S_NumWebPurchases
2050777   +          +      0.0427056351245 * S_NumWebVisitsMonth
2050778   +          +     0.03953235628202 * S_Recency  +    -0.11317308767713 *
2050779   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = -0.00107702057163 * S_Income + 0.25116135719972 * S_Kidhome +
-0.04540308470858 * S_MntFishProducts + 0.21487241577 * S_MntFruits + -0.12914913547414 *
S_MntGoldProds + -0.04149021191395 * S_MntMeatProducts + 0.02853521979141 * S_MntSweetProducts
+ -0.2435805887418 * S_MntWines + -0.04509621661407 * S_NumCatalogPurchases +
-0.26492036720429 * S_NumDealsPurchases + -0.3299561248944 * S_NumStorePurchases +
-0.09806597448224 * S_NumWebPurchases + 0.0427056351245 * S_NumWebVisitsMonth +
0.03953235628202 * S_Recency + -0.11317308767713 * S_Teenhome ;
2050780   +   H11  = H11  +     0.50033674561531 * AcceptedCmp10
2050781   +          +    -0.02275693117286 * AcceptedCmp20  +     0.31338891533156 *
2050782   +        AcceptedCmp30  +      0.3901248845706 * AcceptedCmp40
2050783   +          +     0.44314358358111 * AcceptedCmp50  +    -0.20444060864498 *
2050784   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.50033674561531 * AcceptedCmp10 + -0.02275693117286 *
AcceptedCmp20 + 0.31338891533156 * AcceptedCmp30 + 0.3901248845706 * AcceptedCmp40 +
0.44314358358111 * AcceptedCmp50 + -0.20444060864498 * Complain0 ;
2050785   +   H12  = H12  +     0.30103938822692 * AcceptedCmp10
2050786   +          +     0.54298746723422 * AcceptedCmp20  +     0.50401040035525 *
2050787   +        AcceptedCmp30  +     0.43447710825306 * AcceptedCmp40
2050788   +          +     0.60794421030027 * AcceptedCmp50  +    -0.28114274461319 *
2050789   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.30103938822692 * AcceptedCmp10 + 0.54298746723422 *
AcceptedCmp20 + 0.50401040035525 * AcceptedCmp30 + 0.43447710825306 * AcceptedCmp40 +
0.60794421030027 * AcceptedCmp50 + -0.28114274461319 * Complain0 ;
2050790   +   H13  = H13  +     -0.1890212967757 * AcceptedCmp10
2050791   +          +    -0.11487406996391 * AcceptedCmp20  +    -0.22740618754863 *
2050792   +        AcceptedCmp30  +      0.2354510231918 * AcceptedCmp40
2050793   +          +    -0.14327434649067 * AcceptedCmp50  +    -0.17839080850556 *
2050794   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.1890212967757 * AcceptedCmp10 + -0.11487406996391 *
AcceptedCmp20 + -0.22740618754863 * AcceptedCmp30 + 0.2354510231918 * AcceptedCmp40 +
-0.14327434649067 * AcceptedCmp50 + -0.17839080850556 * Complain0 ;
2050795   +   H14  = H14  +    -0.28194187416219 * AcceptedCmp10
2050796   +          +     0.11732089254624 * AcceptedCmp20  +     0.34964075536156 *
2050797   +        AcceptedCmp30  +     0.05772396286169 * AcceptedCmp40
2050798   +          +    -0.08671748651826 * AcceptedCmp50  +      0.0629540108407 *
2050799   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.28194187416219 * AcceptedCmp10 + 0.11732089254624 *
AcceptedCmp20 + 0.34964075536156 * AcceptedCmp30 + 0.05772396286169 * AcceptedCmp40 +
-0.08671748651826 * AcceptedCmp50 + 0.0629540108407 * Complain0 ;
2050800   +   H15  = H15  +    -0.01058257322803 * AcceptedCmp10
2050801   +          +     0.26755355732587 * AcceptedCmp20  +     0.40856661734724 *
2050802   +        AcceptedCmp30  +     0.02977117354989 * AcceptedCmp40
2050803   +          +       0.073655049734 * AcceptedCmp50  +     0.25562048226555 *
2050804   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.01058257322803 * AcceptedCmp10 + 0.26755355732587 *
AcceptedCmp20 + 0.40856661734724 * AcceptedCmp30 + 0.02977117354989 * AcceptedCmp40 +
0.073655049734 * AcceptedCmp50 + 0.25562048226555 * Complain0 ;
2050805   +   H16  = H16  +    -0.65590117532084 * AcceptedCmp10
2050806   +          +    -0.31314161223579 * AcceptedCmp20  +    -0.18863165264573 *
2050807   +        AcceptedCmp30  +    -0.18832338914237 * AcceptedCmp40
2050808   +          +    -0.53765749471786 * AcceptedCmp50  +     0.17409401877513 *
2050809   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.65590117532084 * AcceptedCmp10 + -0.31314161223579 *
AcceptedCmp20 + -0.18863165264573 * AcceptedCmp30 + -0.18832338914237 * AcceptedCmp40 +
-0.53765749471786 * AcceptedCmp50 + 0.17409401877513 * Complain0 ;
2050810   +   H17  = H17  +    -0.42253231673718 * AcceptedCmp10
2050811   +          +    -0.40954345229557 * AcceptedCmp20  +    -0.30577523080786 *
2050812   +        AcceptedCmp30  +    -0.22396670899437 * AcceptedCmp40
2050813   +          +     0.05757251451004 * AcceptedCmp50  +     0.07813950542487 *
2050814   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.42253231673718 * AcceptedCmp10 + -0.40954345229557 *
AcceptedCmp20 + -0.30577523080786 * AcceptedCmp30 + -0.22396670899437 * AcceptedCmp40 +
0.05757251451004 * AcceptedCmp50 + 0.07813950542487 * Complain0 ;
2050815   +   H11  = H11  +    -0.14483542022901 * Education2n_Cycle
2050816   +          +     0.32176647745332 * EducationBasic  +     0.00900796305072 *
2050817   +        EducationGraduation  +    -0.00243484910123 * EducationMaster
2050818   +          +    -0.22074132229211 * Marital_StatusDivorced
2050819   +          +     0.70282742634901 * Marital_StatusMarried
2050820   +          +     -0.5926244797961 * Marital_StatusSingle
2050821   +          +     0.21342221410999 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.14483542022901 * Education2n_Cycle + 0.32176647745332 *
EducationBasic + 0.00900796305072 * EducationGraduation + -0.00243484910123 * EducationMaster
+ -0.22074132229211 * Marital_StatusDivorced + 0.70282742634901 * Marital_StatusMarried +
-0.5926244797961 * Marital_StatusSingle + 0.21342221410999 * Marital_StatusTogether ;
2050822   +   H12  = H12  +    -0.10242932200247 * Education2n_Cycle
2050823   +          +     0.34937926721317 * EducationBasic  +    -0.20395479511872 *
2050824   +        EducationGraduation  +     0.31210327899339 * EducationMaster
2050825   +          +    -0.46376392175295 * Marital_StatusDivorced
2050826   +          +       0.589453579718 * Marital_StatusMarried
2050827   +          +    -0.45342174978481 * Marital_StatusSingle
2050828   +          +     0.70517120763557 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.10242932200247 * Education2n_Cycle + 0.34937926721317 *
EducationBasic + -0.20395479511872 * EducationGraduation + 0.31210327899339 * EducationMaster
+ -0.46376392175295 * Marital_StatusDivorced + 0.589453579718 * Marital_StatusMarried +
-0.45342174978481 * Marital_StatusSingle + 0.70517120763557 * Marital_StatusTogether ;
2050829   +   H13  = H13  +     0.24858755570324 * Education2n_Cycle
2050830   +          +     0.07360039359386 * EducationBasic  +    -0.42563056620078 *
2050831   +        EducationGraduation  +    -0.25970840250323 * EducationMaster
2050832   +          +     0.26981972015482 * Marital_StatusDivorced
2050833   +          +    -0.01707364864139 * Marital_StatusMarried
2050834   +          +     0.38646060840009 * Marital_StatusSingle
2050835   +          +     0.19694047086013 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.24858755570324 * Education2n_Cycle + 0.07360039359386 *
EducationBasic + -0.42563056620078 * EducationGraduation + -0.25970840250323 * EducationMaster
+ 0.26981972015482 * Marital_StatusDivorced + -0.01707364864139 * Marital_StatusMarried +
0.38646060840009 * Marital_StatusSingle + 0.19694047086013 * Marital_StatusTogether ;
2050836   +   H14  = H14  +     0.22577522124265 * Education2n_Cycle
2050837   +          +     0.04183136697557 * EducationBasic  +    -0.27725331198825 *
2050838   +        EducationGraduation  +     0.15709188532123 * EducationMaster
2050839   +          +    -0.01933675094701 * Marital_StatusDivorced
2050840   +          +     0.52969577969434 * Marital_StatusMarried
2050841   +          +      -0.348697714569 * Marital_StatusSingle
2050842   +          +      0.5020342481888 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.22577522124265 * Education2n_Cycle + 0.04183136697557 *
EducationBasic + -0.27725331198825 * EducationGraduation + 0.15709188532123 * EducationMaster
+ -0.01933675094701 * Marital_StatusDivorced + 0.52969577969434 * Marital_StatusMarried +
-0.348697714569 * Marital_StatusSingle + 0.5020342481888 * Marital_StatusTogether ;
2050843   +   H15  = H15  +     0.04488332711225 * Education2n_Cycle
2050844   +          +     0.01911097443907 * EducationBasic  +    -0.11699443624996 *
2050845   +        EducationGraduation  +    -0.07291393566738 * EducationMaster
2050846   +          +    -0.04665146013984 * Marital_StatusDivorced
2050847   +          +      -0.586219175167 * Marital_StatusMarried
2050848   +          +     0.55713543417712 * Marital_StatusSingle
2050849   +          +    -0.42208959885332 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.04488332711225 * Education2n_Cycle + 0.01911097443907 *
EducationBasic + -0.11699443624996 * EducationGraduation + -0.07291393566738 * EducationMaster
+ -0.04665146013984 * Marital_StatusDivorced + -0.586219175167 * Marital_StatusMarried +
0.55713543417712 * Marital_StatusSingle + -0.42208959885332 * Marital_StatusTogether ;
2050850   +   H16  = H16  +     0.09174117861154 * Education2n_Cycle
2050851   +          +     -0.1378945860659 * EducationBasic  +     -0.0728635369665 *
2050852   +        EducationGraduation  +     0.29860714824438 * EducationMaster
2050853   +          +    -0.05632171154347 * Marital_StatusDivorced
2050854   +          +     0.03215547861665 * Marital_StatusMarried
2050855   +          +     0.16870781172538 * Marital_StatusSingle
2050856   +          +    -0.04883314322676 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.09174117861154 * Education2n_Cycle + -0.1378945860659 *
EducationBasic + -0.0728635369665 * EducationGraduation + 0.29860714824438 * EducationMaster +
-0.05632171154347 * Marital_StatusDivorced + 0.03215547861665 * Marital_StatusMarried +
0.16870781172538 * Marital_StatusSingle + -0.04883314322676 * Marital_StatusTogether ;
2050857   +   H17  = H17  +    -0.00343694558117 * Education2n_Cycle
2050858   +          +     0.32636427598227 * EducationBasic  +     0.16259654486833 *
2050859   +        EducationGraduation  +    -0.00424229454859 * EducationMaster
2050860   +          +    -0.21765415159355 * Marital_StatusDivorced
2050861   +          +     -0.0542857922075 * Marital_StatusMarried
2050862   +          +     0.20679907454933 * Marital_StatusSingle
2050863   +          +     0.14976519710725 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.00343694558117 * Education2n_Cycle + 0.32636427598227 *
EducationBasic + 0.16259654486833 * EducationGraduation + -0.00424229454859 * EducationMaster
+ -0.21765415159355 * Marital_StatusDivorced + -0.0542857922075 * Marital_StatusMarried +
0.20679907454933 * Marital_StatusSingle + 0.14976519710725 * Marital_StatusTogether ;
2050864   +   H11  =     0.92977078759503 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.92977078759503 + H11 ;
2050865   +   H12  =    -0.97970409253156 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.97970409253156 + H12 ;
2050866   +   H13  =     -0.5001144792196 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.5001144792196 + H13 ;
2050867   +   H14  =    -0.90715840862541 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.90715840862541 + H14 ;
2050868   +   H15  =     0.87046153389036 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.87046153389036 + H15 ;
2050869   +   H16  =     0.49066122767086 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 0.49066122767086 + H16 ;
2050870   +   H17  =    -1.05949763460293 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.05949763460293 + H17 ;
2050871   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2050872   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2050873   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
2050874   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
2050875   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
2050876   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
2050877   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
2050878   +END;
MPRINT(EM_DIAGRAM):   END;
2050879   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2050880   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2050881   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2050882   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
2050883   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
2050884   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
2050885   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
2050886   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
2050887   +END;
MPRINT(EM_DIAGRAM):   END;
2050888   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2050889   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2050890   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2050891   +
2050892   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2050893   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2050894   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2050895   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2050896   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2050897   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2050898   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2050899   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2050900   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2050901   +end;
MPRINT(EM_DIAGRAM):   end;
2050902   +else do;
MPRINT(EM_DIAGRAM):   else do;
2050903   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2050904   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2050905   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2050906   +   end;
MPRINT(EM_DIAGRAM):   end;
2050907   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2050908   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2050909   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2050910   +   end;
MPRINT(EM_DIAGRAM):   end;
2050911   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2050912   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2050913   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2050914   +   end;
MPRINT(EM_DIAGRAM):   end;
2050915   +end;
MPRINT(EM_DIAGRAM):   end;
2050916   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2050917   +   P_DepVar1  =    -2.32998401250848 * H11  +     -3.2074078511991 * H12
2050918   +          +    -0.69549988605443 * H13  +    -1.74950789108762 * H14
2050919   +          +    -1.74013772071344 * H15  +     2.65306089869015 * H16
2050920   +          +     0.03700459000906 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.32998401250848 * H11 + -3.2074078511991 * H12 +
-0.69549988605443 * H13 + -1.74950789108762 * H14 + -1.74013772071344 * H15 + 2.65306089869015
* H16 + 0.03700459000906 * H17 ;
2050921   +   P_DepVar1  =    -1.51229898726716 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.51229898726716 + P_DepVar1 ;
2050922   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2050923   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2050924   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2050925   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2050926   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2050927   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2050928   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2050929   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2050930   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2050931   +END;
MPRINT(EM_DIAGRAM):   END;
2050932   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2050933   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2050934   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2050935   +END;
MPRINT(EM_DIAGRAM):   END;
2050936   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2050937   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2050938   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2050939   +END;
MPRINT(EM_DIAGRAM):   END;
2050940   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2050941   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2050942   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2050943   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2050944   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2050945   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2050946   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2050947   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2050948   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2050949   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2050950   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2050951   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2050952   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2050953   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2050954   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2050955   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2050956   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2050957   +END;
MPRINT(EM_DIAGRAM):   END;
2050958   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2050959   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2050960   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2050961   +drop
2050962   +H11
2050963   +H12
2050964   +H13
2050965   +H14
2050966   +H15
2050967   +H16
2050968   +H17
2050969   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
2050970   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2050971   +* Renaming variables for Neural30;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural30;
2050972   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2050973   +* Renaming Posterior variables for Neural30;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural30;
2050974   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2050975   +drop Neural30_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural30_P_DepVar1;
2050976   +Neural30_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural30_P_DepVar1 = P_DepVar1;
2050977   +drop Neural30_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural30_P_DepVar0;
2050978   +Neural30_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural30_P_DepVar0 = P_DepVar0;
2050979   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2050980   +* Renaming _WARN_ variable for Neural30;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural30;
2050981   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2050982   +length Neural30_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural30_WARN_ $4;
2050983   +drop Neural30_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural30_WARN_;
2050984   +Neural30_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural30_WARN_ = _WARN_;
2050985   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2050986   +* Ensmbl22: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Scoring Code of model 3 of 7;
2050987   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2050988   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2050989   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
2050990   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2050991   +* NODE: Neural35;
MPRINT(EM_DIAGRAM):   * NODE: Neural35;
2050992   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2050993   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2050994   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2050995   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2050996   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2050997   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2050998   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2050999   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2051000   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2051001   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2051002   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2051003   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2051004   +LENGTH _WARN_ $4
2051005   +      F_DepVar  $ 12
2051006   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2051007   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2051008   +
2051009   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2051010   +
2051011   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2051012   +
2051013   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2051014   +
2051015   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2051016   +
2051017   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2051018   +
2051019   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2051020   +
2051021   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2051022   +
2051023   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2051024   +
2051025   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2051026   +
2051027   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2051028   +
2051029   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2051030   +
2051031   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2051032   +
2051033   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2051034   +
2051035   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2051036   +
2051037   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2051038   +
2051039   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2051040   +
2051041   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2051042   +
2051043   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2051044   +
2051045   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2051046   +
2051047   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2051048   +
2051049   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2051050   +
2051051   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2051052   +
2051053   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2051054   +
2051055   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2051056   +
2051057   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2051058   +
2051059   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2051060   +
2051061   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2051062   +
2051063   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2051064   +
2051065   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2051066   +
2051067   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2051068   +
2051069   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
2051070   +
2051071   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
2051072   +
2051073   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
2051074   +
2051075   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
2051076   +
2051077   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2051078   +
2051079   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2051080   +
2051081   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2051082   +
2051083   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2051084   +
2051085   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2051086   +
2051087   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2051088   +
2051089   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2051090   +
2051091   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2051092   +
2051093   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2051094   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2051095   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2051096   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2051097   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2051098   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2051099   +end;
MPRINT(EM_DIAGRAM):   end;
2051100   +else do;
MPRINT(EM_DIAGRAM):   else do;
2051101   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2051102   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2051103   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2051104   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2051105   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2051106   +   end;
MPRINT(EM_DIAGRAM):   end;
2051107   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2051108   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2051109   +   end;
MPRINT(EM_DIAGRAM):   end;
2051110   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2051111   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2051112   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2051113   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2051114   +   end;
MPRINT(EM_DIAGRAM):   end;
2051115   +end;
MPRINT(EM_DIAGRAM):   end;
2051116   +
2051117   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2051118   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2051119   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2051120   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2051121   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2051122   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2051123   +end;
MPRINT(EM_DIAGRAM):   end;
2051124   +else do;
MPRINT(EM_DIAGRAM):   else do;
2051125   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2051126   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2051127   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2051128   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2051129   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2051130   +   end;
MPRINT(EM_DIAGRAM):   end;
2051131   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2051132   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2051133   +   end;
MPRINT(EM_DIAGRAM):   end;
2051134   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2051135   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2051136   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2051137   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2051138   +   end;
MPRINT(EM_DIAGRAM):   end;
2051139   +end;
MPRINT(EM_DIAGRAM):   end;
2051140   +
2051141   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2051142   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2051143   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2051144   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2051145   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2051146   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2051147   +end;
MPRINT(EM_DIAGRAM):   end;
2051148   +else do;
MPRINT(EM_DIAGRAM):   else do;
2051149   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2051150   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2051151   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2051152   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2051153   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2051154   +   end;
MPRINT(EM_DIAGRAM):   end;
2051155   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2051156   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2051157   +   end;
MPRINT(EM_DIAGRAM):   end;
2051158   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2051159   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2051160   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2051161   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2051162   +   end;
MPRINT(EM_DIAGRAM):   end;
2051163   +end;
MPRINT(EM_DIAGRAM):   end;
2051164   +
2051165   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2051166   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2051167   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2051168   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2051169   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2051170   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2051171   +end;
MPRINT(EM_DIAGRAM):   end;
2051172   +else do;
MPRINT(EM_DIAGRAM):   else do;
2051173   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2051174   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2051175   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2051176   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2051177   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2051178   +   end;
MPRINT(EM_DIAGRAM):   end;
2051179   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2051180   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2051181   +   end;
MPRINT(EM_DIAGRAM):   end;
2051182   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2051183   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2051184   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2051185   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2051186   +   end;
MPRINT(EM_DIAGRAM):   end;
2051187   +end;
MPRINT(EM_DIAGRAM):   end;
2051188   +
2051189   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2051190   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2051191   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2051192   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2051193   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2051194   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2051195   +end;
MPRINT(EM_DIAGRAM):   end;
2051196   +else do;
MPRINT(EM_DIAGRAM):   else do;
2051197   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2051198   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2051199   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2051200   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2051201   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2051202   +   end;
MPRINT(EM_DIAGRAM):   end;
2051203   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2051204   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2051205   +   end;
MPRINT(EM_DIAGRAM):   end;
2051206   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2051207   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2051208   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2051209   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2051210   +   end;
MPRINT(EM_DIAGRAM):   end;
2051211   +end;
MPRINT(EM_DIAGRAM):   end;
2051212   +
2051213   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2051214   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2051215   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2051216   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2051217   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2051218   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2051219   +end;
MPRINT(EM_DIAGRAM):   end;
2051220   +else do;
MPRINT(EM_DIAGRAM):   else do;
2051221   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2051222   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2051223   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2051224   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2051225   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2051226   +   end;
MPRINT(EM_DIAGRAM):   end;
2051227   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2051228   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2051229   +   end;
MPRINT(EM_DIAGRAM):   end;
2051230   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2051231   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2051232   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2051233   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2051234   +   end;
MPRINT(EM_DIAGRAM):   end;
2051235   +end;
MPRINT(EM_DIAGRAM):   end;
2051236   +
2051237   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2051238   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2051239   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2051240   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2051241   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2051242   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2051243   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2051244   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2051245   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2051246   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2051247   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2051248   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2051249   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2051250   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2051251   +end;
MPRINT(EM_DIAGRAM):   end;
2051252   +else do;
MPRINT(EM_DIAGRAM):   else do;
2051253   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2051254   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2051255   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2051256   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2051257   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2051258   +   end;
MPRINT(EM_DIAGRAM):   end;
2051259   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2051260   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2051261   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2051262   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2051263   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2051264   +   end;
MPRINT(EM_DIAGRAM):   end;
2051265   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2051266   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2051267   +   end;
MPRINT(EM_DIAGRAM):   end;
2051268   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2051269   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2051270   +   end;
MPRINT(EM_DIAGRAM):   end;
2051271   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2051272   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2051273   +   end;
MPRINT(EM_DIAGRAM):   end;
2051274   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2051275   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2051276   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2051277   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2051278   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2051279   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2051280   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2051281   +   end;
MPRINT(EM_DIAGRAM):   end;
2051282   +end;
MPRINT(EM_DIAGRAM):   end;
2051283   +
2051284   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2051285   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2051286   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2051287   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2051288   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2051289   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2051290   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2051291   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2051292   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2051293   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2051294   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2051295   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2051296   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2051297   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2051298   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2051299   +end;
MPRINT(EM_DIAGRAM):   end;
2051300   +else do;
MPRINT(EM_DIAGRAM):   else do;
2051301   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2051302   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2051303   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2051304   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2051305   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2051306   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2051307   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2051308   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2051309   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2051310   +         end;
MPRINT(EM_DIAGRAM):   end;
2051311   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2051312   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2051313   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2051314   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2051315   +            end;
MPRINT(EM_DIAGRAM):   end;
2051316   +         end;
MPRINT(EM_DIAGRAM):   end;
2051317   +      end;
MPRINT(EM_DIAGRAM):   end;
2051318   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2051319   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2051320   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2051321   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2051322   +         end;
MPRINT(EM_DIAGRAM):   end;
2051323   +      end;
MPRINT(EM_DIAGRAM):   end;
2051324   +   end;
MPRINT(EM_DIAGRAM):   end;
2051325   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2051326   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2051327   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2051328   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2051329   +      end;
MPRINT(EM_DIAGRAM):   end;
2051330   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2051331   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2051332   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2051333   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2051334   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2051335   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2051336   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2051337   +         end;
MPRINT(EM_DIAGRAM):   end;
2051338   +      end;
MPRINT(EM_DIAGRAM):   end;
2051339   +   end;
MPRINT(EM_DIAGRAM):   end;
2051340   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2051341   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2051342   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2051343   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2051344   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2051345   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2051346   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2051347   +   end;
MPRINT(EM_DIAGRAM):   end;
2051348   +end;
MPRINT(EM_DIAGRAM):   end;
2051349   +
2051350   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2051351   +*** Checking missing input Interval
2051352   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2051353   +
2051354   +IF NMISS(
2051355   +   Income ,
2051356   +   Kidhome ,
2051357   +   MntFishProducts ,
2051358   +   MntFruits ,
2051359   +   MntGoldProds ,
2051360   +   MntMeatProducts ,
2051361   +   MntSweetProducts ,
2051362   +   MntWines ,
2051363   +   NumCatalogPurchases ,
2051364   +   NumDealsPurchases ,
2051365   +   NumStorePurchases ,
2051366   +   NumWebPurchases ,
2051367   +   NumWebVisitsMonth ,
2051368   +   Recency ,
2051369   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
2051370   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2051371   +
2051372   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2051373   +END;
MPRINT(EM_DIAGRAM):   END;
2051374   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2051375   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2051376   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2051377   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2051378   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2051379   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2051380   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2051381   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2051382   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2051383   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2051384   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2051385   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2051386   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2051387   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2051388   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2051389   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2051390   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2051391   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2051392   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2051393   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2051394   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2051395   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2051396   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2051397   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2051398   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2051399   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2051400   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2051401   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2051402   +END;
MPRINT(EM_DIAGRAM):   END;
2051403   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2051404   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2051405   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2051406   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2051407   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2051408   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2051409   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2051410   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2051411   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2051412   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2051413   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2051414   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2051415   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2051416   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2051417   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2051418   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2051419   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2051420   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2051421   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2051422   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2051423   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2051424   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2051425   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2051426   +   ELSE S_NumCatalogPurchases
2051427   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2051428   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2051429   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2051430   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2051431   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2051432   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2051433   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2051434   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2051435   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2051436   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2051437   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2051438   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2051439   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2051440   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2051441   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2051442   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2051443   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2051444   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2051445   +END;
MPRINT(EM_DIAGRAM):   END;
2051446   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2051447   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
2051448   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2051449   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2051450   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
2051451   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2051452   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2051453   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2051454   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2051455   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2051456   +   H11  =     0.87660114046125 * S_Income  +     -0.7994451897827 * S_Kidhome
2051457   +          +    -0.08967295716195 * S_MntFishProducts
2051458   +          +     0.03184635437516 * S_MntFruits  +    -0.13860895575438 *
2051459   +        S_MntGoldProds  +     0.55790460748169 * S_MntMeatProducts
2051460   +          +    -0.02806094557115 * S_MntSweetProducts
2051461   +          +    -0.14537763592724 * S_MntWines  +     0.76891266523847 *
2051462   +        S_NumCatalogPurchases  +     0.16842007461305 * S_NumDealsPurchases
2051463   +          +     0.25137876058262 * S_NumStorePurchases
2051464   +          +    -0.07865442401292 * S_NumWebPurchases
2051465   +          +     1.03197398967259 * S_NumWebVisitsMonth
2051466   +          +    -1.26907156503759 * S_Recency  +    -0.76016893316351 *
2051467   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.87660114046125 * S_Income + -0.7994451897827 * S_Kidhome +
-0.08967295716195 * S_MntFishProducts + 0.03184635437516 * S_MntFruits + -0.13860895575438 *
S_MntGoldProds + 0.55790460748169 * S_MntMeatProducts + -0.02806094557115 * S_MntSweetProducts
+ -0.14537763592724 * S_MntWines + 0.76891266523847 * S_NumCatalogPurchases + 0.16842007461305
* S_NumDealsPurchases + 0.25137876058262 * S_NumStorePurchases + -0.07865442401292 *
S_NumWebPurchases + 1.03197398967259 * S_NumWebVisitsMonth + -1.26907156503759 * S_Recency +
-0.76016893316351 * S_Teenhome ;
2051468   +   H12  =     0.37295000114468 * S_Income  +    -0.12834211496575 * S_Kidhome
2051469   +          +     0.19312392388912 * S_MntFishProducts
2051470   +          +      0.1561688289137 * S_MntFruits  +     0.04004810938796 *
2051471   +        S_MntGoldProds  +     0.32599201739588 * S_MntMeatProducts
2051472   +          +       0.204174263605 * S_MntSweetProducts
2051473   +          +    -0.11560784817014 * S_MntWines  +     0.12255073568725 *
2051474   +        S_NumCatalogPurchases  +    -0.05543734180218 * S_NumDealsPurchases
2051475   +          +     0.07747830335769 * S_NumStorePurchases
2051476   +          +     0.07960837555191 * S_NumWebPurchases
2051477   +          +     0.02351602389122 * S_NumWebVisitsMonth
2051478   +          +     -0.2840853952427 * S_Recency  +    -0.47421627761687 *
2051479   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.37295000114468 * S_Income + -0.12834211496575 * S_Kidhome +
0.19312392388912 * S_MntFishProducts + 0.1561688289137 * S_MntFruits + 0.04004810938796 *
S_MntGoldProds + 0.32599201739588 * S_MntMeatProducts + 0.204174263605 * S_MntSweetProducts +
-0.11560784817014 * S_MntWines + 0.12255073568725 * S_NumCatalogPurchases + -0.05543734180218
* S_NumDealsPurchases + 0.07747830335769 * S_NumStorePurchases + 0.07960837555191 *
S_NumWebPurchases + 0.02351602389122 * S_NumWebVisitsMonth + -0.2840853952427 * S_Recency +
-0.47421627761687 * S_Teenhome ;
2051480   +   H13  =    -0.33428925248315 * S_Income  +    -0.03845622730742 * S_Kidhome
2051481   +          +     0.18733919794636 * S_MntFishProducts
2051482   +          +     0.45907982190052 * S_MntFruits  +    -0.48776616433719 *
2051483   +        S_MntGoldProds  +    -0.41340481007204 * S_MntMeatProducts
2051484   +          +     0.42514606159239 * S_MntSweetProducts
2051485   +          +     0.20038001368787 * S_MntWines  +    -1.21708501803782 *
2051486   +        S_NumCatalogPurchases  +    -1.06820061274533 * S_NumDealsPurchases
2051487   +          +     0.36582106462789 * S_NumStorePurchases
2051488   +          +     0.04244777020435 * S_NumWebPurchases
2051489   +          +    -0.24296342902503 * S_NumWebVisitsMonth
2051490   +          +     0.27451716762947 * S_Recency  +     0.13110477325277 *
2051491   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.33428925248315 * S_Income + -0.03845622730742 * S_Kidhome +
0.18733919794636 * S_MntFishProducts + 0.45907982190052 * S_MntFruits + -0.48776616433719 *
S_MntGoldProds + -0.41340481007204 * S_MntMeatProducts + 0.42514606159239 * S_MntSweetProducts
+ 0.20038001368787 * S_MntWines + -1.21708501803782 * S_NumCatalogPurchases +
-1.06820061274533 * S_NumDealsPurchases + 0.36582106462789 * S_NumStorePurchases +
0.04244777020435 * S_NumWebPurchases + -0.24296342902503 * S_NumWebVisitsMonth +
0.27451716762947 * S_Recency + 0.13110477325277 * S_Teenhome ;
2051492   +   H14  =    -0.70493412542585 * S_Income  +     0.41202796606799 * S_Kidhome
2051493   +          +     0.05986489897572 * S_MntFishProducts
2051494   +          +    -0.05040531715469 * S_MntFruits  +       0.051068387592 *
2051495   +        S_MntGoldProds  +    -0.13581881662481 * S_MntMeatProducts
2051496   +          +    -0.05513370461072 * S_MntSweetProducts
2051497   +          +     0.77472084468819 * S_MntWines  +    -0.03211788969126 *
2051498   +        S_NumCatalogPurchases  +    -0.24097486430988 * S_NumDealsPurchases
2051499   +          +     0.64364674828841 * S_NumStorePurchases
2051500   +          +     0.15084748708424 * S_NumWebPurchases
2051501   +          +    -0.94144998356377 * S_NumWebVisitsMonth
2051502   +          +     1.16778338364599 * S_Recency  +     0.32089861635238 *
2051503   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.70493412542585 * S_Income + 0.41202796606799 * S_Kidhome +
0.05986489897572 * S_MntFishProducts + -0.05040531715469 * S_MntFruits + 0.051068387592 *
S_MntGoldProds + -0.13581881662481 * S_MntMeatProducts + -0.05513370461072 *
S_MntSweetProducts + 0.77472084468819 * S_MntWines + -0.03211788969126 * S_NumCatalogPurchases
+ -0.24097486430988 * S_NumDealsPurchases + 0.64364674828841 * S_NumStorePurchases +
0.15084748708424 * S_NumWebPurchases + -0.94144998356377 * S_NumWebVisitsMonth +
1.16778338364599 * S_Recency + 0.32089861635238 * S_Teenhome ;
2051504   +   H15  =    -0.15703510827879 * S_Income  +    -0.30977841002562 * S_Kidhome
2051505   +          +    -0.14543196273578 * S_MntFishProducts
2051506   +          +     0.32223695896711 * S_MntFruits  +    -0.31846203211698 *
2051507   +        S_MntGoldProds  +     -1.4125160823105 * S_MntMeatProducts
2051508   +          +     0.49374793444169 * S_MntSweetProducts
2051509   +          +     0.39699716010219 * S_MntWines  +    -0.88140331687645 *
2051510   +        S_NumCatalogPurchases  +    -0.87657222813687 * S_NumDealsPurchases
2051511   +          +     1.23754786782746 * S_NumStorePurchases
2051512   +          +     1.11316667348511 * S_NumWebPurchases
2051513   +          +    -1.08592446439781 * S_NumWebVisitsMonth
2051514   +          +     0.66958517589542 * S_Recency  +     0.06799032788481 *
2051515   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.15703510827879 * S_Income + -0.30977841002562 * S_Kidhome +
-0.14543196273578 * S_MntFishProducts + 0.32223695896711 * S_MntFruits + -0.31846203211698 *
S_MntGoldProds + -1.4125160823105 * S_MntMeatProducts + 0.49374793444169 * S_MntSweetProducts
+ 0.39699716010219 * S_MntWines + -0.88140331687645 * S_NumCatalogPurchases +
-0.87657222813687 * S_NumDealsPurchases + 1.23754786782746 * S_NumStorePurchases +
1.11316667348511 * S_NumWebPurchases + -1.08592446439781 * S_NumWebVisitsMonth +
0.66958517589542 * S_Recency + 0.06799032788481 * S_Teenhome ;
2051516   +   H16  =    -0.10360901553583 * S_Income  +     0.39257497240865 * S_Kidhome
2051517   +          +     0.29549884005341 * S_MntFishProducts
2051518   +          +     0.04922491353914 * S_MntFruits  +     -0.1412659458221 *
2051519   +        S_MntGoldProds  +    -0.12361454534126 * S_MntMeatProducts
2051520   +          +    -0.11909215986981 * S_MntSweetProducts
2051521   +          +     0.11430484977092 * S_MntWines  +    -0.66235553839539 *
2051522   +        S_NumCatalogPurchases  +     0.17261763180198 * S_NumDealsPurchases
2051523   +          +     0.30109334594548 * S_NumStorePurchases
2051524   +          +     0.01985762767489 * S_NumWebPurchases
2051525   +          +     0.44965133281333 * S_NumWebVisitsMonth
2051526   +          +     0.32338634259192 * S_Recency  +    -0.04032956941805 *
2051527   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.10360901553583 * S_Income + 0.39257497240865 * S_Kidhome +
0.29549884005341 * S_MntFishProducts + 0.04922491353914 * S_MntFruits + -0.1412659458221 *
S_MntGoldProds + -0.12361454534126 * S_MntMeatProducts + -0.11909215986981 *
S_MntSweetProducts + 0.11430484977092 * S_MntWines + -0.66235553839539 * S_NumCatalogPurchases
+ 0.17261763180198 * S_NumDealsPurchases + 0.30109334594548 * S_NumStorePurchases +
0.01985762767489 * S_NumWebPurchases + 0.44965133281333 * S_NumWebVisitsMonth +
0.32338634259192 * S_Recency + -0.04032956941805 * S_Teenhome ;
2051528   +   H11  = H11  +    -0.23026310289024 * AcceptedCmp10
2051529   +          +    -0.82550012364234 * AcceptedCmp20  +    -0.67764228269441 *
2051530   +        AcceptedCmp30  +    -0.51547666117685 * AcceptedCmp40
2051531   +          +    -0.36424958084824 * AcceptedCmp50  +       0.119862855783 *
2051532   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.23026310289024 * AcceptedCmp10 + -0.82550012364234 *
AcceptedCmp20 + -0.67764228269441 * AcceptedCmp30 + -0.51547666117685 * AcceptedCmp40 +
-0.36424958084824 * AcceptedCmp50 + 0.119862855783 * Complain0 ;
2051533   +   H12  = H12  +     0.02722288857426 * AcceptedCmp10
2051534   +          +      0.1236576068539 * AcceptedCmp20  +    -0.31265425960737 *
2051535   +        AcceptedCmp30  +    -0.25076565034266 * AcceptedCmp40
2051536   +          +    -0.20158659730872 * AcceptedCmp50  +    -0.43687103612629 *
2051537   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.02722288857426 * AcceptedCmp10 + 0.1236576068539 *
AcceptedCmp20 + -0.31265425960737 * AcceptedCmp30 + -0.25076565034266 * AcceptedCmp40 +
-0.20158659730872 * AcceptedCmp50 + -0.43687103612629 * Complain0 ;
2051538   +   H13  = H13  +     0.21852176280571 * AcceptedCmp10
2051539   +          +     0.01727991436107 * AcceptedCmp20  +     0.19303261094625 *
2051540   +        AcceptedCmp30  +    -0.65492191560509 * AcceptedCmp40
2051541   +          +    -0.09636750660684 * AcceptedCmp50  +     0.07579128571046 *
2051542   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.21852176280571 * AcceptedCmp10 + 0.01727991436107 *
AcceptedCmp20 + 0.19303261094625 * AcceptedCmp30 + -0.65492191560509 * AcceptedCmp40 +
-0.09636750660684 * AcceptedCmp50 + 0.07579128571046 * Complain0 ;
2051543   +   H14  = H14  +     0.20819294353855 * AcceptedCmp10
2051544   +          +      0.5159102831901 * AcceptedCmp20  +     0.55295587458643 *
2051545   +        AcceptedCmp30  +     0.80682431419623 * AcceptedCmp40
2051546   +          +     0.74007057798158 * AcceptedCmp50  +     -0.4573052390807 *
2051547   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.20819294353855 * AcceptedCmp10 + 0.5159102831901 *
AcceptedCmp20 + 0.55295587458643 * AcceptedCmp30 + 0.80682431419623 * AcceptedCmp40 +
0.74007057798158 * AcceptedCmp50 + -0.4573052390807 * Complain0 ;
2051548   +   H15  = H15  +     1.26330939420524 * AcceptedCmp10
2051549   +          +     0.29494505935793 * AcceptedCmp20  +     0.25561322032419 *
2051550   +        AcceptedCmp30  +     0.50102236777897 * AcceptedCmp40
2051551   +          +     0.20696267245027 * AcceptedCmp50  +    -0.00849145233901 *
2051552   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 1.26330939420524 * AcceptedCmp10 + 0.29494505935793 *
AcceptedCmp20 + 0.25561322032419 * AcceptedCmp30 + 0.50102236777897 * AcceptedCmp40 +
0.20696267245027 * AcceptedCmp50 + -0.00849145233901 * Complain0 ;
2051553   +   H16  = H16  +     0.03638428330381 * AcceptedCmp10
2051554   +          +     0.27994215452657 * AcceptedCmp20  +    -0.03861840445025 *
2051555   +        AcceptedCmp30  +      0.3398057347433 * AcceptedCmp40
2051556   +          +    -0.00738335957724 * AcceptedCmp50  +      0.0447804375799 *
2051557   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.03638428330381 * AcceptedCmp10 + 0.27994215452657 *
AcceptedCmp20 + -0.03861840445025 * AcceptedCmp30 + 0.3398057347433 * AcceptedCmp40 +
-0.00738335957724 * AcceptedCmp50 + 0.0447804375799 * Complain0 ;
2051558   +   H11  = H11  +     0.27482405283962 * Education2n_Cycle
2051559   +          +     0.11084012456612 * EducationBasic  +    -0.23835071987159 *
2051560   +        EducationGraduation  +    -0.10167082180552 * EducationMaster
2051561   +          +     0.51015833145636 * Marital_StatusDivorced
2051562   +          +     -1.1653662063616 * Marital_StatusMarried
2051563   +          +     1.19396547750441 * Marital_StatusSingle
2051564   +          +    -0.99605751789992 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.27482405283962 * Education2n_Cycle + 0.11084012456612 *
EducationBasic + -0.23835071987159 * EducationGraduation + -0.10167082180552 * EducationMaster
+ 0.51015833145636 * Marital_StatusDivorced + -1.1653662063616 * Marital_StatusMarried +
1.19396547750441 * Marital_StatusSingle + -0.99605751789992 * Marital_StatusTogether ;
2051565   +   H12  = H12  +    -0.05268347704739 * Education2n_Cycle
2051566   +          +     0.19362065968028 * EducationBasic  +    -0.26784257195414 *
2051567   +        EducationGraduation  +     0.16650577465959 * EducationMaster
2051568   +          +     0.09154288513995 * Marital_StatusDivorced
2051569   +          +     0.06725684628382 * Marital_StatusMarried
2051570   +          +     0.11327659191494 * Marital_StatusSingle
2051571   +          +     0.01793778876811 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.05268347704739 * Education2n_Cycle + 0.19362065968028 *
EducationBasic + -0.26784257195414 * EducationGraduation + 0.16650577465959 * EducationMaster
+ 0.09154288513995 * Marital_StatusDivorced + 0.06725684628382 * Marital_StatusMarried +
0.11327659191494 * Marital_StatusSingle + 0.01793778876811 * Marital_StatusTogether ;
2051572   +   H13  = H13  +     -0.1027084329077 * Education2n_Cycle
2051573   +          +    -0.01342449140757 * EducationBasic  +    -0.35627920427273 *
2051574   +        EducationGraduation  +    -0.05554656531793 * EducationMaster
2051575   +          +     0.37591653615852 * Marital_StatusDivorced
2051576   +          +    -0.05024236790132 * Marital_StatusMarried
2051577   +          +    -0.28317154997144 * Marital_StatusSingle
2051578   +          +    -0.19247490223101 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.1027084329077 * Education2n_Cycle + -0.01342449140757 *
EducationBasic + -0.35627920427273 * EducationGraduation + -0.05554656531793 * EducationMaster
+ 0.37591653615852 * Marital_StatusDivorced + -0.05024236790132 * Marital_StatusMarried +
-0.28317154997144 * Marital_StatusSingle + -0.19247490223101 * Marital_StatusTogether ;
2051579   +   H14  = H14  +     -0.4162491480577 * Education2n_Cycle
2051580   +          +     0.38075572764074 * EducationBasic  +    -0.28169469529121 *
2051581   +        EducationGraduation  +       0.638986138084 * EducationMaster
2051582   +          +    -0.44885292450558 * Marital_StatusDivorced
2051583   +          +     0.78958791519299 * Marital_StatusMarried
2051584   +          +    -0.09688714431356 * Marital_StatusSingle
2051585   +          +     0.84239030196202 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.4162491480577 * Education2n_Cycle + 0.38075572764074 *
EducationBasic + -0.28169469529121 * EducationGraduation + 0.638986138084 * EducationMaster +
-0.44885292450558 * Marital_StatusDivorced + 0.78958791519299 * Marital_StatusMarried +
-0.09688714431356 * Marital_StatusSingle + 0.84239030196202 * Marital_StatusTogether ;
2051586   +   H15  = H15  +     0.33126657974568 * Education2n_Cycle
2051587   +          +     0.44539039262703 * EducationBasic  +    -0.09154902903865 *
2051588   +        EducationGraduation  +    -0.26400363440725 * EducationMaster
2051589   +          +    -0.30801073895989 * Marital_StatusDivorced
2051590   +          +     -0.1285150749223 * Marital_StatusMarried
2051591   +          +     0.06775542164414 * Marital_StatusSingle
2051592   +          +    -0.13032366945766 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.33126657974568 * Education2n_Cycle + 0.44539039262703 *
EducationBasic + -0.09154902903865 * EducationGraduation + -0.26400363440725 * EducationMaster
+ -0.30801073895989 * Marital_StatusDivorced + -0.1285150749223 * Marital_StatusMarried +
0.06775542164414 * Marital_StatusSingle + -0.13032366945766 * Marital_StatusTogether ;
2051593   +   H16  = H16  +     0.02030175222681 * Education2n_Cycle
2051594   +          +    -0.19579401096879 * EducationBasic  +      0.2070703930869 *
2051595   +        EducationGraduation  +    -0.40706983167068 * EducationMaster
2051596   +          +     0.22193599090368 * Marital_StatusDivorced
2051597   +          +    -0.54544672042168 * Marital_StatusMarried
2051598   +          +    -0.02237436019864 * Marital_StatusSingle
2051599   +          +    -0.21979468164854 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.02030175222681 * Education2n_Cycle + -0.19579401096879 *
EducationBasic + 0.2070703930869 * EducationGraduation + -0.40706983167068 * EducationMaster +
0.22193599090368 * Marital_StatusDivorced + -0.54544672042168 * Marital_StatusMarried +
-0.02237436019864 * Marital_StatusSingle + -0.21979468164854 * Marital_StatusTogether ;
2051600   +   H11  =    -1.24550293901788 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.24550293901788 + H11 ;
2051601   +   H12  =     0.36762263942809 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.36762263942809 + H12 ;
2051602   +   H13  =     0.07010867577103 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.07010867577103 + H13 ;
2051603   +   H14  =    -1.94014549272156 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -1.94014549272156 + H14 ;
2051604   +   H15  =     0.17666656180153 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.17666656180153 + H15 ;
2051605   +   H16  =    -1.64626406576709 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.64626406576709 + H16 ;
2051606   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2051607   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2051608   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
2051609   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
2051610   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
2051611   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
2051612   +END;
MPRINT(EM_DIAGRAM):   END;
2051613   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2051614   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2051615   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2051616   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
2051617   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
2051618   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
2051619   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
2051620   +END;
MPRINT(EM_DIAGRAM):   END;
2051621   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2051622   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2051623   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2051624   +
2051625   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2051626   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2051627   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2051628   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2051629   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2051630   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2051631   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2051632   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2051633   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2051634   +end;
MPRINT(EM_DIAGRAM):   end;
2051635   +else do;
MPRINT(EM_DIAGRAM):   else do;
2051636   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2051637   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2051638   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2051639   +   end;
MPRINT(EM_DIAGRAM):   end;
2051640   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2051641   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2051642   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2051643   +   end;
MPRINT(EM_DIAGRAM):   end;
2051644   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2051645   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2051646   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2051647   +   end;
MPRINT(EM_DIAGRAM):   end;
2051648   +end;
MPRINT(EM_DIAGRAM):   end;
2051649   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2051650   +   P_DepVar1  =     4.21126046696691 * H11  +      0.6565061288056 * H12
2051651   +          +    -1.92484011508628 * H13  +    -3.74020722142387 * H14
2051652   +          +    -3.27353026762143 * H15  +     -1.2596922869974 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.21126046696691 * H11 + 0.6565061288056 * H12 +
-1.92484011508628 * H13 + -3.74020722142387 * H14 + -3.27353026762143 * H15 + -1.2596922869974
* H16 ;
2051653   +   P_DepVar1  =    -1.36806658950323 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.36806658950323 + P_DepVar1 ;
2051654   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2051655   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2051656   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2051657   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2051658   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2051659   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2051660   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2051661   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2051662   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2051663   +END;
MPRINT(EM_DIAGRAM):   END;
2051664   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2051665   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2051666   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2051667   +END;
MPRINT(EM_DIAGRAM):   END;
2051668   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2051669   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2051670   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2051671   +END;
MPRINT(EM_DIAGRAM):   END;
2051672   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2051673   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2051674   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2051675   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2051676   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2051677   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2051678   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2051679   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2051680   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2051681   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2051682   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2051683   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2051684   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2051685   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2051686   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2051687   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2051688   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2051689   +END;
MPRINT(EM_DIAGRAM):   END;
2051690   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2051691   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2051692   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2051693   +drop
2051694   +H11
2051695   +H12
2051696   +H13
2051697   +H14
2051698   +H15
2051699   +H16
2051700   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
2051701   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2051702   +* Renaming variables for Neural35;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural35;
2051703   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2051704   +* Renaming Posterior variables for Neural35;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural35;
2051705   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2051706   +drop Neural35_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural35_P_DepVar1;
2051707   +Neural35_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural35_P_DepVar1 = P_DepVar1;
2051708   +drop Neural35_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural35_P_DepVar0;
2051709   +Neural35_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural35_P_DepVar0 = P_DepVar0;
2051710   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2051711   +* Renaming _WARN_ variable for Neural35;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural35;
2051712   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2051713   +length Neural35_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural35_WARN_ $4;
2051714   +drop Neural35_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural35_WARN_;
2051715   +Neural35_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural35_WARN_ = _WARN_;
2051716   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2051717   +* Ensmbl22: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Scoring Code of model 4 of 7;
2051718   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2051719   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2051720   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
2051721   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2051722   +* NODE: Neural34;
MPRINT(EM_DIAGRAM):   * NODE: Neural34;
2051723   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2051724   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2051725   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2051726   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2051727   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2051728   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2051729   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2051730   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2051731   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2051732   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2051733   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2051734   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2051735   +LENGTH _WARN_ $4
2051736   +      F_DepVar  $ 12
2051737   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2051738   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2051739   +
2051740   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2051741   +
2051742   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2051743   +
2051744   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2051745   +
2051746   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2051747   +
2051748   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2051749   +
2051750   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2051751   +
2051752   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2051753   +
2051754   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2051755   +
2051756   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2051757   +
2051758   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2051759   +
2051760   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2051761   +
2051762   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2051763   +
2051764   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2051765   +
2051766   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2051767   +
2051768   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2051769   +
2051770   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2051771   +
2051772   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2051773   +
2051774   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2051775   +
2051776   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2051777   +
2051778   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2051779   +
2051780   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2051781   +
2051782   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2051783   +
2051784   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2051785   +
2051786   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2051787   +
2051788   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2051789   +
2051790   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2051791   +
2051792   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2051793   +
2051794   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2051795   +
2051796   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2051797   +
2051798   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2051799   +
2051800   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
2051801   +
2051802   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
2051803   +
2051804   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
2051805   +
2051806   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2051807   +
2051808   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2051809   +
2051810   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2051811   +
2051812   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2051813   +
2051814   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2051815   +
2051816   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2051817   +
2051818   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2051819   +
2051820   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2051821   +
2051822   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2051823   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2051824   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2051825   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2051826   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2051827   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2051828   +end;
MPRINT(EM_DIAGRAM):   end;
2051829   +else do;
MPRINT(EM_DIAGRAM):   else do;
2051830   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2051831   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2051832   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2051833   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2051834   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2051835   +   end;
MPRINT(EM_DIAGRAM):   end;
2051836   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2051837   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2051838   +   end;
MPRINT(EM_DIAGRAM):   end;
2051839   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2051840   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2051841   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2051842   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2051843   +   end;
MPRINT(EM_DIAGRAM):   end;
2051844   +end;
MPRINT(EM_DIAGRAM):   end;
2051845   +
2051846   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2051847   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2051848   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2051849   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2051850   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2051851   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2051852   +end;
MPRINT(EM_DIAGRAM):   end;
2051853   +else do;
MPRINT(EM_DIAGRAM):   else do;
2051854   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2051855   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2051856   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2051857   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2051858   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2051859   +   end;
MPRINT(EM_DIAGRAM):   end;
2051860   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2051861   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2051862   +   end;
MPRINT(EM_DIAGRAM):   end;
2051863   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2051864   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2051865   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2051866   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2051867   +   end;
MPRINT(EM_DIAGRAM):   end;
2051868   +end;
MPRINT(EM_DIAGRAM):   end;
2051869   +
2051870   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2051871   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2051872   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2051873   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2051874   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2051875   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2051876   +end;
MPRINT(EM_DIAGRAM):   end;
2051877   +else do;
MPRINT(EM_DIAGRAM):   else do;
2051878   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2051879   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2051880   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2051881   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2051882   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2051883   +   end;
MPRINT(EM_DIAGRAM):   end;
2051884   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2051885   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2051886   +   end;
MPRINT(EM_DIAGRAM):   end;
2051887   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2051888   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2051889   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2051890   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2051891   +   end;
MPRINT(EM_DIAGRAM):   end;
2051892   +end;
MPRINT(EM_DIAGRAM):   end;
2051893   +
2051894   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2051895   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2051896   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2051897   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2051898   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2051899   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2051900   +end;
MPRINT(EM_DIAGRAM):   end;
2051901   +else do;
MPRINT(EM_DIAGRAM):   else do;
2051902   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2051903   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2051904   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2051905   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2051906   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2051907   +   end;
MPRINT(EM_DIAGRAM):   end;
2051908   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2051909   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2051910   +   end;
MPRINT(EM_DIAGRAM):   end;
2051911   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2051912   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2051913   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2051914   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2051915   +   end;
MPRINT(EM_DIAGRAM):   end;
2051916   +end;
MPRINT(EM_DIAGRAM):   end;
2051917   +
2051918   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2051919   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2051920   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2051921   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2051922   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2051923   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2051924   +end;
MPRINT(EM_DIAGRAM):   end;
2051925   +else do;
MPRINT(EM_DIAGRAM):   else do;
2051926   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2051927   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2051928   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2051929   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2051930   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2051931   +   end;
MPRINT(EM_DIAGRAM):   end;
2051932   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2051933   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2051934   +   end;
MPRINT(EM_DIAGRAM):   end;
2051935   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2051936   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2051937   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2051938   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2051939   +   end;
MPRINT(EM_DIAGRAM):   end;
2051940   +end;
MPRINT(EM_DIAGRAM):   end;
2051941   +
2051942   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2051943   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2051944   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2051945   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2051946   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2051947   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2051948   +end;
MPRINT(EM_DIAGRAM):   end;
2051949   +else do;
MPRINT(EM_DIAGRAM):   else do;
2051950   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2051951   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2051952   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2051953   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2051954   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2051955   +   end;
MPRINT(EM_DIAGRAM):   end;
2051956   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2051957   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2051958   +   end;
MPRINT(EM_DIAGRAM):   end;
2051959   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2051960   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2051961   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2051962   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2051963   +   end;
MPRINT(EM_DIAGRAM):   end;
2051964   +end;
MPRINT(EM_DIAGRAM):   end;
2051965   +
2051966   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2051967   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2051968   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2051969   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2051970   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2051971   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2051972   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2051973   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2051974   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2051975   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2051976   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2051977   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2051978   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2051979   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2051980   +end;
MPRINT(EM_DIAGRAM):   end;
2051981   +else do;
MPRINT(EM_DIAGRAM):   else do;
2051982   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2051983   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2051984   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2051985   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2051986   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2051987   +   end;
MPRINT(EM_DIAGRAM):   end;
2051988   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2051989   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2051990   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2051991   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2051992   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2051993   +   end;
MPRINT(EM_DIAGRAM):   end;
2051994   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2051995   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2051996   +   end;
MPRINT(EM_DIAGRAM):   end;
2051997   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2051998   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2051999   +   end;
MPRINT(EM_DIAGRAM):   end;
2052000   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2052001   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2052002   +   end;
MPRINT(EM_DIAGRAM):   end;
2052003   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2052004   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2052005   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2052006   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2052007   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2052008   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2052009   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2052010   +   end;
MPRINT(EM_DIAGRAM):   end;
2052011   +end;
MPRINT(EM_DIAGRAM):   end;
2052012   +
2052013   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2052014   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2052015   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2052016   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2052017   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2052018   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2052019   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2052020   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2052021   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2052022   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2052023   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2052024   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2052025   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2052026   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2052027   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2052028   +end;
MPRINT(EM_DIAGRAM):   end;
2052029   +else do;
MPRINT(EM_DIAGRAM):   else do;
2052030   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2052031   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2052032   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2052033   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2052034   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2052035   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2052036   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2052037   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2052038   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2052039   +         end;
MPRINT(EM_DIAGRAM):   end;
2052040   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2052041   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2052042   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2052043   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2052044   +            end;
MPRINT(EM_DIAGRAM):   end;
2052045   +         end;
MPRINT(EM_DIAGRAM):   end;
2052046   +      end;
MPRINT(EM_DIAGRAM):   end;
2052047   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2052048   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2052049   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2052050   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2052051   +         end;
MPRINT(EM_DIAGRAM):   end;
2052052   +      end;
MPRINT(EM_DIAGRAM):   end;
2052053   +   end;
MPRINT(EM_DIAGRAM):   end;
2052054   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2052055   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2052056   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2052057   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2052058   +      end;
MPRINT(EM_DIAGRAM):   end;
2052059   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2052060   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2052061   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2052062   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2052063   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2052064   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2052065   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2052066   +         end;
MPRINT(EM_DIAGRAM):   end;
2052067   +      end;
MPRINT(EM_DIAGRAM):   end;
2052068   +   end;
MPRINT(EM_DIAGRAM):   end;
2052069   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2052070   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2052071   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2052072   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2052073   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2052074   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2052075   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2052076   +   end;
MPRINT(EM_DIAGRAM):   end;
2052077   +end;
MPRINT(EM_DIAGRAM):   end;
2052078   +
2052079   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2052080   +*** Checking missing input Interval
2052081   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2052082   +
2052083   +IF NMISS(
2052084   +   Income ,
2052085   +   Kidhome ,
2052086   +   MntFishProducts ,
2052087   +   MntFruits ,
2052088   +   MntGoldProds ,
2052089   +   MntMeatProducts ,
2052090   +   MntSweetProducts ,
2052091   +   MntWines ,
2052092   +   NumCatalogPurchases ,
2052093   +   NumDealsPurchases ,
2052094   +   NumStorePurchases ,
2052095   +   NumWebPurchases ,
2052096   +   NumWebVisitsMonth ,
2052097   +   Recency ,
2052098   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
2052099   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2052100   +
2052101   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2052102   +END;
MPRINT(EM_DIAGRAM):   END;
2052103   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2052104   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2052105   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2052106   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2052107   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2052108   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2052109   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2052110   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2052111   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2052112   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2052113   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2052114   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2052115   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2052116   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2052117   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2052118   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2052119   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2052120   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2052121   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2052122   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2052123   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2052124   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2052125   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2052126   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2052127   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2052128   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2052129   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2052130   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2052131   +END;
MPRINT(EM_DIAGRAM):   END;
2052132   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2052133   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2052134   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2052135   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2052136   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2052137   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2052138   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2052139   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2052140   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2052141   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2052142   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2052143   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2052144   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2052145   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2052146   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2052147   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2052148   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2052149   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2052150   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2052151   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2052152   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2052153   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2052154   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2052155   +   ELSE S_NumCatalogPurchases
2052156   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2052157   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2052158   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2052159   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2052160   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2052161   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2052162   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2052163   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2052164   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2052165   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2052166   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2052167   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2052168   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2052169   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2052170   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2052171   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2052172   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2052173   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2052174   +END;
MPRINT(EM_DIAGRAM):   END;
2052175   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2052176   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
2052177   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2052178   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2052179   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
2052180   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2052181   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2052182   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2052183   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2052184   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2052185   +   H11  =    -0.81572379016921 * S_Income  +    -0.07670946585348 * S_Kidhome
2052186   +          +     0.24367603598167 * S_MntFishProducts
2052187   +          +     0.19692980127348 * S_MntFruits  +    -0.03926738185333 *
2052188   +        S_MntGoldProds  +    -0.20900804333353 * S_MntMeatProducts
2052189   +          +     0.34054806441484 * S_MntSweetProducts
2052190   +          +     0.65956211369383 * S_MntWines  +    -0.95375334578522 *
2052191   +        S_NumCatalogPurchases  +    -0.73124740368567 * S_NumDealsPurchases
2052192   +          +     0.98942946974575 * S_NumStorePurchases
2052193   +          +     0.89701206630103 * S_NumWebPurchases
2052194   +          +    -1.22878611472154 * S_NumWebVisitsMonth
2052195   +          +     1.44981870978354 * S_Recency  +     0.47533125686411 *
2052196   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.81572379016921 * S_Income + -0.07670946585348 * S_Kidhome +
0.24367603598167 * S_MntFishProducts + 0.19692980127348 * S_MntFruits + -0.03926738185333 *
S_MntGoldProds + -0.20900804333353 * S_MntMeatProducts + 0.34054806441484 * S_MntSweetProducts
+ 0.65956211369383 * S_MntWines + -0.95375334578522 * S_NumCatalogPurchases +
-0.73124740368567 * S_NumDealsPurchases + 0.98942946974575 * S_NumStorePurchases +
0.89701206630103 * S_NumWebPurchases + -1.22878611472154 * S_NumWebVisitsMonth +
1.44981870978354 * S_Recency + 0.47533125686411 * S_Teenhome ;
2052197   +   H12  =    -0.18875145195495 * S_Income  +     0.42230998482453 * S_Kidhome
2052198   +          +     0.16683404689723 * S_MntFishProducts
2052199   +          +     0.32072658929401 * S_MntFruits  +    -0.12341748032201 *
2052200   +        S_MntGoldProds  +    -1.56478754527255 * S_MntMeatProducts
2052201   +          +     0.20389084548968 * S_MntSweetProducts
2052202   +          +     0.95592931625509 * S_MntWines  +    -0.69996817353755 *
2052203   +        S_NumCatalogPurchases  +    -0.92709806328697 * S_NumDealsPurchases
2052204   +          +     1.27164659640366 * S_NumStorePurchases
2052205   +          +     1.02122194207802 * S_NumWebPurchases
2052206   +          +     -1.5111033436803 * S_NumWebVisitsMonth
2052207   +          +     1.63712814901544 * S_Recency  +     0.14205116840572 *
2052208   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.18875145195495 * S_Income + 0.42230998482453 * S_Kidhome +
0.16683404689723 * S_MntFishProducts + 0.32072658929401 * S_MntFruits + -0.12341748032201 *
S_MntGoldProds + -1.56478754527255 * S_MntMeatProducts + 0.20389084548968 * S_MntSweetProducts
+ 0.95592931625509 * S_MntWines + -0.69996817353755 * S_NumCatalogPurchases +
-0.92709806328697 * S_NumDealsPurchases + 1.27164659640366 * S_NumStorePurchases +
1.02122194207802 * S_NumWebPurchases + -1.5111033436803 * S_NumWebVisitsMonth +
1.63712814901544 * S_Recency + 0.14205116840572 * S_Teenhome ;
2052209   +   H13  =     1.02798705354163 * S_Income  +    -0.94411708781921 * S_Kidhome
2052210   +          +    -0.03345077166544 * S_MntFishProducts
2052211   +          +     0.00038440809349 * S_MntFruits  +    -0.05068379715712 *
2052212   +        S_MntGoldProds  +     1.00464705307582 * S_MntMeatProducts
2052213   +          +    -0.11948662500951 * S_MntSweetProducts
2052214   +          +    -0.52438819731252 * S_MntWines  +     0.98586904866769 *
2052215   +        S_NumCatalogPurchases  +     0.09015295226839 * S_NumDealsPurchases
2052216   +          +     0.22401914357376 * S_NumStorePurchases
2052217   +          +     0.04219877865976 * S_NumWebPurchases
2052218   +          +     1.21753334166036 * S_NumWebVisitsMonth
2052219   +          +    -1.33712212110081 * S_Recency  +    -0.47582856683655 *
2052220   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 1.02798705354163 * S_Income + -0.94411708781921 * S_Kidhome +
-0.03345077166544 * S_MntFishProducts + 0.00038440809349 * S_MntFruits + -0.05068379715712 *
S_MntGoldProds + 1.00464705307582 * S_MntMeatProducts + -0.11948662500951 * S_MntSweetProducts
+ -0.52438819731252 * S_MntWines + 0.98586904866769 * S_NumCatalogPurchases + 0.09015295226839
* S_NumDealsPurchases + 0.22401914357376 * S_NumStorePurchases + 0.04219877865976 *
S_NumWebPurchases + 1.21753334166036 * S_NumWebVisitsMonth + -1.33712212110081 * S_Recency +
-0.47582856683655 * S_Teenhome ;
2052221   +   H14  =     0.91431429848834 * S_Income  +    -1.16289676557574 * S_Kidhome
2052222   +          +     0.31175257038578 * S_MntFishProducts
2052223   +          +     0.08080436076271 * S_MntFruits  +     0.15252288175851 *
2052224   +        S_MntGoldProds  +     0.21603546207654 * S_MntMeatProducts
2052225   +          +      0.0927253053382 * S_MntSweetProducts
2052226   +          +     0.05865323888304 * S_MntWines  +    -0.23426953728277 *
2052227   +        S_NumCatalogPurchases  +    -0.46451908614085 * S_NumDealsPurchases
2052228   +          +    -0.12667606349662 * S_NumStorePurchases
2052229   +          +     0.30148374518724 * S_NumWebPurchases
2052230   +          +     0.48934229701658 * S_NumWebVisitsMonth
2052231   +          +    -0.83754390793251 * S_Recency  +     -0.4576645462819 *
2052232   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.91431429848834 * S_Income + -1.16289676557574 * S_Kidhome +
0.31175257038578 * S_MntFishProducts + 0.08080436076271 * S_MntFruits + 0.15252288175851 *
S_MntGoldProds + 0.21603546207654 * S_MntMeatProducts + 0.0927253053382 * S_MntSweetProducts +
0.05865323888304 * S_MntWines + -0.23426953728277 * S_NumCatalogPurchases + -0.46451908614085
* S_NumDealsPurchases + -0.12667606349662 * S_NumStorePurchases + 0.30148374518724 *
S_NumWebPurchases + 0.48934229701658 * S_NumWebVisitsMonth + -0.83754390793251 * S_Recency +
-0.4576645462819 * S_Teenhome ;
2052233   +   H15  =    -0.58161501095664 * S_Income  +     -1.0333658128614 * S_Kidhome
2052234   +          +     0.42646725119177 * S_MntFishProducts
2052235   +          +     -0.3264621401658 * S_MntFruits  +    -0.74616728524532 *
2052236   +        S_MntGoldProds  +    -0.97572068716712 * S_MntMeatProducts
2052237   +          +    -0.01493605582616 * S_MntSweetProducts
2052238   +          +      0.0311636632685 * S_MntWines  +    -1.68599903767191 *
2052239   +        S_NumCatalogPurchases  +    -1.25052648798307 * S_NumDealsPurchases
2052240   +          +     0.54256744091258 * S_NumStorePurchases
2052241   +          +     0.43065931458468 * S_NumWebPurchases
2052242   +          +      0.5935561420466 * S_NumWebVisitsMonth
2052243   +          +    -0.45183418369624 * S_Recency  +     0.19260512629844 *
2052244   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.58161501095664 * S_Income + -1.0333658128614 * S_Kidhome +
0.42646725119177 * S_MntFishProducts + -0.3264621401658 * S_MntFruits + -0.74616728524532 *
S_MntGoldProds + -0.97572068716712 * S_MntMeatProducts + -0.01493605582616 *
S_MntSweetProducts + 0.0311636632685 * S_MntWines + -1.68599903767191 * S_NumCatalogPurchases
+ -1.25052648798307 * S_NumDealsPurchases + 0.54256744091258 * S_NumStorePurchases +
0.43065931458468 * S_NumWebPurchases + 0.5935561420466 * S_NumWebVisitsMonth +
-0.45183418369624 * S_Recency + 0.19260512629844 * S_Teenhome ;
2052245   +   H11  = H11  +     0.61503950219838 * AcceptedCmp10
2052246   +          +     0.02945207091619 * AcceptedCmp20  +     0.99151950769472 *
2052247   +        AcceptedCmp30  +     1.08987060401718 * AcceptedCmp40
2052248   +          +     0.45427753773024 * AcceptedCmp50  +    -1.03533951966815 *
2052249   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.61503950219838 * AcceptedCmp10 + 0.02945207091619 *
AcceptedCmp20 + 0.99151950769472 * AcceptedCmp30 + 1.08987060401718 * AcceptedCmp40 +
0.45427753773024 * AcceptedCmp50 + -1.03533951966815 * Complain0 ;
2052250   +   H12  = H12  +     0.83823476190401 * AcceptedCmp10
2052251   +          +      1.0793719601418 * AcceptedCmp20  +     0.68538854946581 *
2052252   +        AcceptedCmp30  +     1.00297565893339 * AcceptedCmp40
2052253   +          +     0.24586379991786 * AcceptedCmp50  +     0.15471251255301 *
2052254   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.83823476190401 * AcceptedCmp10 + 1.0793719601418 *
AcceptedCmp20 + 0.68538854946581 * AcceptedCmp30 + 1.00297565893339 * AcceptedCmp40 +
0.24586379991786 * AcceptedCmp50 + 0.15471251255301 * Complain0 ;
2052255   +   H13  = H13  +    -0.41486094438907 * AcceptedCmp10
2052256   +          +    -0.76586628449839 * AcceptedCmp20  +    -0.59695459523693 *
2052257   +        AcceptedCmp30  +    -0.30262159911837 * AcceptedCmp40
2052258   +          +    -0.61141171124182 * AcceptedCmp50  +    -0.01086235188835 *
2052259   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.41486094438907 * AcceptedCmp10 + -0.76586628449839 *
AcceptedCmp20 + -0.59695459523693 * AcceptedCmp30 + -0.30262159911837 * AcceptedCmp40 +
-0.61141171124182 * AcceptedCmp50 + -0.01086235188835 * Complain0 ;
2052260   +   H14  = H14  +    -0.09662858884082 * AcceptedCmp10
2052261   +          +    -0.48515652524171 * AcceptedCmp20  +    -0.37421451374399 *
2052262   +        AcceptedCmp30  +    -0.52889523891817 * AcceptedCmp40
2052263   +          +    -0.73518448275357 * AcceptedCmp50  +    -0.36065830718672 *
2052264   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.09662858884082 * AcceptedCmp10 + -0.48515652524171 *
AcceptedCmp20 + -0.37421451374399 * AcceptedCmp30 + -0.52889523891817 * AcceptedCmp40 +
-0.73518448275357 * AcceptedCmp50 + -0.36065830718672 * Complain0 ;
2052265   +   H15  = H15  +      0.2985143092641 * AcceptedCmp10
2052266   +          +    -0.06881934778393 * AcceptedCmp20  +    -0.02609197044604 *
2052267   +        AcceptedCmp30  +    -0.79105657447885 * AcceptedCmp40
2052268   +          +    -0.02286855144948 * AcceptedCmp50  +     0.02884650192784 *
2052269   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.2985143092641 * AcceptedCmp10 + -0.06881934778393 *
AcceptedCmp20 + -0.02609197044604 * AcceptedCmp30 + -0.79105657447885 * AcceptedCmp40 +
-0.02286855144948 * AcceptedCmp50 + 0.02884650192784 * Complain0 ;
2052270   +   H11  = H11  +    -0.41169946146301 * Education2n_Cycle
2052271   +          +      0.8448273504441 * EducationBasic  +    -1.02497956377347 *
2052272   +        EducationGraduation  +     0.43998321745211 * EducationMaster
2052273   +          +    -0.85912688909911 * Marital_StatusDivorced
2052274   +          +     0.81561401465875 * Marital_StatusMarried
2052275   +          +    -0.58324403081542 * Marital_StatusSingle
2052276   +          +      0.9348017085106 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.41169946146301 * Education2n_Cycle + 0.8448273504441 *
EducationBasic + -1.02497956377347 * EducationGraduation + 0.43998321745211 * EducationMaster
+ -0.85912688909911 * Marital_StatusDivorced + 0.81561401465875 * Marital_StatusMarried +
-0.58324403081542 * Marital_StatusSingle + 0.9348017085106 * Marital_StatusTogether ;
2052277   +   H12  = H12  +     0.22828129841893 * Education2n_Cycle
2052278   +          +     0.47579227804033 * EducationBasic  +    -0.18165301263195 *
2052279   +        EducationGraduation  +    -0.16143431016405 * EducationMaster
2052280   +          +    -0.34784695867287 * Marital_StatusDivorced
2052281   +          +    -0.18194022182247 * Marital_StatusMarried
2052282   +          +    -0.10633185904164 * Marital_StatusSingle
2052283   +          +     0.13136125361628 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.22828129841893 * Education2n_Cycle + 0.47579227804033 *
EducationBasic + -0.18165301263195 * EducationGraduation + -0.16143431016405 * EducationMaster
+ -0.34784695867287 * Marital_StatusDivorced + -0.18194022182247 * Marital_StatusMarried +
-0.10633185904164 * Marital_StatusSingle + 0.13136125361628 * Marital_StatusTogether ;
2052284   +   H13  = H13  +     0.38705901043652 * Education2n_Cycle
2052285   +          +     0.19703188370189 * EducationBasic  +    -0.48062640599976 *
2052286   +        EducationGraduation  +     -0.3646621736273 * EducationMaster
2052287   +          +     0.61058752124466 * Marital_StatusDivorced
2052288   +          +    -1.38793808025141 * Marital_StatusMarried
2052289   +          +     1.10060737810944 * Marital_StatusSingle
2052290   +          +    -1.21250219018366 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.38705901043652 * Education2n_Cycle + 0.19703188370189 *
EducationBasic + -0.48062640599976 * EducationGraduation + -0.3646621736273 * EducationMaster
+ 0.61058752124466 * Marital_StatusDivorced + -1.38793808025141 * Marital_StatusMarried +
1.10060737810944 * Marital_StatusSingle + -1.21250219018366 * Marital_StatusTogether ;
2052291   +   H14  = H14  +    -0.20576658115662 * Education2n_Cycle
2052292   +          +    -0.09185472034614 * EducationBasic  +    -0.43674210064447 *
2052293   +        EducationGraduation  +    -0.18154054746298 * EducationMaster
2052294   +          +     0.11973800573581 * Marital_StatusDivorced
2052295   +          +      -0.294635257911 * Marital_StatusMarried
2052296   +          +    -0.05399659601172 * Marital_StatusSingle
2052297   +          +     0.34207780606239 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.20576658115662 * Education2n_Cycle + -0.09185472034614 *
EducationBasic + -0.43674210064447 * EducationGraduation + -0.18154054746298 * EducationMaster
+ 0.11973800573581 * Marital_StatusDivorced + -0.294635257911 * Marital_StatusMarried +
-0.05399659601172 * Marital_StatusSingle + 0.34207780606239 * Marital_StatusTogether ;
2052298   +   H15  = H15  +    -0.05553093684862 * Education2n_Cycle
2052299   +          +    -0.12898006732329 * EducationBasic  +    -0.16064118923518 *
2052300   +        EducationGraduation  +     -0.6431539624694 * EducationMaster
2052301   +          +     0.42838191659864 * Marital_StatusDivorced
2052302   +          +    -0.09150349181363 * Marital_StatusMarried
2052303   +          +    -0.33520164145276 * Marital_StatusSingle
2052304   +          +    -0.15253738713197 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.05553093684862 * Education2n_Cycle + -0.12898006732329 *
EducationBasic + -0.16064118923518 * EducationGraduation + -0.6431539624694 * EducationMaster
+ 0.42838191659864 * Marital_StatusDivorced + -0.09150349181363 * Marital_StatusMarried +
-0.33520164145276 * Marital_StatusSingle + -0.15253738713197 * Marital_StatusTogether ;
2052305   +   H11  =     -1.5079478405973 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.5079478405973 + H11 ;
2052306   +   H12  =     0.03014958331993 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.03014958331993 + H12 ;
2052307   +   H13  =    -1.78098671165572 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.78098671165572 + H13 ;
2052308   +   H14  =     0.22179429743277 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.22179429743277 + H14 ;
2052309   +   H15  =    -2.06602107857898 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -2.06602107857898 + H15 ;
2052310   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2052311   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2052312   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
2052313   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
2052314   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
2052315   +END;
MPRINT(EM_DIAGRAM):   END;
2052316   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2052317   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2052318   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2052319   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
2052320   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
2052321   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
2052322   +END;
MPRINT(EM_DIAGRAM):   END;
2052323   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2052324   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2052325   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2052326   +
2052327   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2052328   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2052329   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2052330   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2052331   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2052332   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2052333   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2052334   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2052335   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2052336   +end;
MPRINT(EM_DIAGRAM):   end;
2052337   +else do;
MPRINT(EM_DIAGRAM):   else do;
2052338   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2052339   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2052340   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2052341   +   end;
MPRINT(EM_DIAGRAM):   end;
2052342   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2052343   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2052344   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2052345   +   end;
MPRINT(EM_DIAGRAM):   end;
2052346   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2052347   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2052348   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2052349   +   end;
MPRINT(EM_DIAGRAM):   end;
2052350   +end;
MPRINT(EM_DIAGRAM):   end;
2052351   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2052352   +   P_DepVar1  =    -4.55666337815854 * H11  +    -4.04792544554995 * H12
2052353   +          +     4.56148127429284 * H13  +     2.36841344452371 * H14
2052354   +          +    -3.07371010011749 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.55666337815854 * H11 + -4.04792544554995 * H12 +
4.56148127429284 * H13 + 2.36841344452371 * H14 + -3.07371010011749 * H15 ;
2052355   +   P_DepVar1  =    -0.83283406236136 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.83283406236136 + P_DepVar1 ;
2052356   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2052357   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2052358   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2052359   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2052360   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2052361   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2052362   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2052363   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2052364   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2052365   +END;
MPRINT(EM_DIAGRAM):   END;
2052366   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2052367   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2052368   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2052369   +END;
MPRINT(EM_DIAGRAM):   END;
2052370   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2052371   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2052372   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2052373   +END;
MPRINT(EM_DIAGRAM):   END;
2052374   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2052375   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2052376   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2052377   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2052378   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2052379   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2052380   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2052381   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2052382   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2052383   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2052384   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2052385   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2052386   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2052387   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2052388   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2052389   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2052390   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2052391   +END;
MPRINT(EM_DIAGRAM):   END;
2052392   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2052393   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2052394   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2052395   +drop
2052396   +H11
2052397   +H12
2052398   +H13
2052399   +H14
2052400   +H15
2052401   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
2052402   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2052403   +* Renaming variables for Neural34;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural34;
2052404   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2052405   +* Renaming Posterior variables for Neural34;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural34;
2052406   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2052407   +drop Neural34_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural34_P_DepVar1;
2052408   +Neural34_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural34_P_DepVar1 = P_DepVar1;
2052409   +drop Neural34_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural34_P_DepVar0;
2052410   +Neural34_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural34_P_DepVar0 = P_DepVar0;
2052411   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2052412   +* Renaming _WARN_ variable for Neural34;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural34;
2052413   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2052414   +length Neural34_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural34_WARN_ $4;
2052415   +drop Neural34_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural34_WARN_;
2052416   +Neural34_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural34_WARN_ = _WARN_;
2052417   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2052418   +* Ensmbl22: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Scoring Code of model 5 of 7;
2052419   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2052420   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2052421   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
2052422   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2052423   +* NODE: Neural33;
MPRINT(EM_DIAGRAM):   * NODE: Neural33;
2052424   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2052425   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2052426   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2052427   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2052428   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2052429   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2052430   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2052431   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2052432   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2052433   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2052434   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2052435   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2052436   +LENGTH _WARN_ $4
2052437   +      F_DepVar  $ 12
2052438   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2052439   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2052440   +
2052441   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2052442   +
2052443   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2052444   +
2052445   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2052446   +
2052447   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2052448   +
2052449   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2052450   +
2052451   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2052452   +
2052453   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2052454   +
2052455   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2052456   +
2052457   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2052458   +
2052459   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2052460   +
2052461   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2052462   +
2052463   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2052464   +
2052465   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2052466   +
2052467   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2052468   +
2052469   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2052470   +
2052471   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2052472   +
2052473   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2052474   +
2052475   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2052476   +
2052477   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2052478   +
2052479   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2052480   +
2052481   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2052482   +
2052483   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2052484   +
2052485   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2052486   +
2052487   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2052488   +
2052489   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2052490   +
2052491   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2052492   +
2052493   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2052494   +
2052495   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2052496   +
2052497   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2052498   +
2052499   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2052500   +
2052501   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
2052502   +
2052503   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
2052504   +
2052505   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2052506   +
2052507   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2052508   +
2052509   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2052510   +
2052511   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2052512   +
2052513   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2052514   +
2052515   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2052516   +
2052517   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2052518   +
2052519   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2052520   +
2052521   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2052522   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2052523   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2052524   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2052525   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2052526   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2052527   +end;
MPRINT(EM_DIAGRAM):   end;
2052528   +else do;
MPRINT(EM_DIAGRAM):   else do;
2052529   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2052530   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2052531   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2052532   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2052533   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2052534   +   end;
MPRINT(EM_DIAGRAM):   end;
2052535   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2052536   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2052537   +   end;
MPRINT(EM_DIAGRAM):   end;
2052538   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2052539   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2052540   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2052541   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2052542   +   end;
MPRINT(EM_DIAGRAM):   end;
2052543   +end;
MPRINT(EM_DIAGRAM):   end;
2052544   +
2052545   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2052546   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2052547   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2052548   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2052549   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2052550   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2052551   +end;
MPRINT(EM_DIAGRAM):   end;
2052552   +else do;
MPRINT(EM_DIAGRAM):   else do;
2052553   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2052554   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2052555   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2052556   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2052557   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2052558   +   end;
MPRINT(EM_DIAGRAM):   end;
2052559   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2052560   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2052561   +   end;
MPRINT(EM_DIAGRAM):   end;
2052562   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2052563   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2052564   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2052565   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2052566   +   end;
MPRINT(EM_DIAGRAM):   end;
2052567   +end;
MPRINT(EM_DIAGRAM):   end;
2052568   +
2052569   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2052570   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2052571   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2052572   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2052573   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2052574   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2052575   +end;
MPRINT(EM_DIAGRAM):   end;
2052576   +else do;
MPRINT(EM_DIAGRAM):   else do;
2052577   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2052578   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2052579   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2052580   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2052581   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2052582   +   end;
MPRINT(EM_DIAGRAM):   end;
2052583   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2052584   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2052585   +   end;
MPRINT(EM_DIAGRAM):   end;
2052586   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2052587   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2052588   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2052589   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2052590   +   end;
MPRINT(EM_DIAGRAM):   end;
2052591   +end;
MPRINT(EM_DIAGRAM):   end;
2052592   +
2052593   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2052594   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2052595   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2052596   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2052597   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2052598   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2052599   +end;
MPRINT(EM_DIAGRAM):   end;
2052600   +else do;
MPRINT(EM_DIAGRAM):   else do;
2052601   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2052602   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2052603   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2052604   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2052605   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2052606   +   end;
MPRINT(EM_DIAGRAM):   end;
2052607   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2052608   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2052609   +   end;
MPRINT(EM_DIAGRAM):   end;
2052610   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2052611   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2052612   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2052613   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2052614   +   end;
MPRINT(EM_DIAGRAM):   end;
2052615   +end;
MPRINT(EM_DIAGRAM):   end;
2052616   +
2052617   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2052618   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2052619   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2052620   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2052621   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2052622   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2052623   +end;
MPRINT(EM_DIAGRAM):   end;
2052624   +else do;
MPRINT(EM_DIAGRAM):   else do;
2052625   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2052626   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2052627   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2052628   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2052629   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2052630   +   end;
MPRINT(EM_DIAGRAM):   end;
2052631   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2052632   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2052633   +   end;
MPRINT(EM_DIAGRAM):   end;
2052634   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2052635   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2052636   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2052637   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2052638   +   end;
MPRINT(EM_DIAGRAM):   end;
2052639   +end;
MPRINT(EM_DIAGRAM):   end;
2052640   +
2052641   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2052642   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2052643   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2052644   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2052645   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2052646   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2052647   +end;
MPRINT(EM_DIAGRAM):   end;
2052648   +else do;
MPRINT(EM_DIAGRAM):   else do;
2052649   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2052650   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2052651   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2052652   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2052653   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2052654   +   end;
MPRINT(EM_DIAGRAM):   end;
2052655   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2052656   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2052657   +   end;
MPRINT(EM_DIAGRAM):   end;
2052658   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2052659   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2052660   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2052661   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2052662   +   end;
MPRINT(EM_DIAGRAM):   end;
2052663   +end;
MPRINT(EM_DIAGRAM):   end;
2052664   +
2052665   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2052666   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2052667   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2052668   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2052669   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2052670   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2052671   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2052672   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2052673   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2052674   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2052675   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2052676   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2052677   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2052678   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2052679   +end;
MPRINT(EM_DIAGRAM):   end;
2052680   +else do;
MPRINT(EM_DIAGRAM):   else do;
2052681   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2052682   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2052683   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2052684   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2052685   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2052686   +   end;
MPRINT(EM_DIAGRAM):   end;
2052687   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2052688   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2052689   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2052690   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2052691   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2052692   +   end;
MPRINT(EM_DIAGRAM):   end;
2052693   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2052694   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2052695   +   end;
MPRINT(EM_DIAGRAM):   end;
2052696   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2052697   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2052698   +   end;
MPRINT(EM_DIAGRAM):   end;
2052699   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2052700   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2052701   +   end;
MPRINT(EM_DIAGRAM):   end;
2052702   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2052703   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2052704   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2052705   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2052706   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2052707   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2052708   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2052709   +   end;
MPRINT(EM_DIAGRAM):   end;
2052710   +end;
MPRINT(EM_DIAGRAM):   end;
2052711   +
2052712   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2052713   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2052714   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2052715   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2052716   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2052717   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2052718   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2052719   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2052720   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2052721   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2052722   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2052723   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2052724   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2052725   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2052726   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2052727   +end;
MPRINT(EM_DIAGRAM):   end;
2052728   +else do;
MPRINT(EM_DIAGRAM):   else do;
2052729   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2052730   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2052731   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2052732   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2052733   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2052734   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2052735   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2052736   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2052737   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2052738   +         end;
MPRINT(EM_DIAGRAM):   end;
2052739   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2052740   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2052741   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2052742   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2052743   +            end;
MPRINT(EM_DIAGRAM):   end;
2052744   +         end;
MPRINT(EM_DIAGRAM):   end;
2052745   +      end;
MPRINT(EM_DIAGRAM):   end;
2052746   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2052747   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2052748   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2052749   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2052750   +         end;
MPRINT(EM_DIAGRAM):   end;
2052751   +      end;
MPRINT(EM_DIAGRAM):   end;
2052752   +   end;
MPRINT(EM_DIAGRAM):   end;
2052753   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2052754   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2052755   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2052756   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2052757   +      end;
MPRINT(EM_DIAGRAM):   end;
2052758   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2052759   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2052760   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2052761   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2052762   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2052763   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2052764   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2052765   +         end;
MPRINT(EM_DIAGRAM):   end;
2052766   +      end;
MPRINT(EM_DIAGRAM):   end;
2052767   +   end;
MPRINT(EM_DIAGRAM):   end;
2052768   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2052769   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2052770   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2052771   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2052772   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2052773   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2052774   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2052775   +   end;
MPRINT(EM_DIAGRAM):   end;
2052776   +end;
MPRINT(EM_DIAGRAM):   end;
2052777   +
2052778   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2052779   +*** Checking missing input Interval
2052780   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2052781   +
2052782   +IF NMISS(
2052783   +   Income ,
2052784   +   Kidhome ,
2052785   +   MntFishProducts ,
2052786   +   MntFruits ,
2052787   +   MntGoldProds ,
2052788   +   MntMeatProducts ,
2052789   +   MntSweetProducts ,
2052790   +   MntWines ,
2052791   +   NumCatalogPurchases ,
2052792   +   NumDealsPurchases ,
2052793   +   NumStorePurchases ,
2052794   +   NumWebPurchases ,
2052795   +   NumWebVisitsMonth ,
2052796   +   Recency ,
2052797   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
2052798   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2052799   +
2052800   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2052801   +END;
MPRINT(EM_DIAGRAM):   END;
2052802   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2052803   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2052804   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2052805   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2052806   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2052807   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2052808   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2052809   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2052810   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2052811   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2052812   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2052813   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2052814   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2052815   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2052816   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2052817   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2052818   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2052819   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2052820   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2052821   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2052822   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2052823   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2052824   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2052825   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2052826   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2052827   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2052828   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2052829   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2052830   +END;
MPRINT(EM_DIAGRAM):   END;
2052831   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2052832   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2052833   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2052834   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2052835   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2052836   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2052837   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2052838   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2052839   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2052840   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2052841   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2052842   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2052843   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2052844   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2052845   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2052846   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2052847   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2052848   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2052849   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2052850   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2052851   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2052852   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2052853   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2052854   +   ELSE S_NumCatalogPurchases
2052855   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2052856   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2052857   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2052858   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2052859   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2052860   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2052861   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2052862   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2052863   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2052864   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2052865   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2052866   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2052867   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2052868   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2052869   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2052870   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2052871   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2052872   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2052873   +END;
MPRINT(EM_DIAGRAM):   END;
2052874   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2052875   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
2052876   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2052877   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2052878   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
2052879   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2052880   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2052881   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2052882   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2052883   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2052884   +   H11  =     0.32435248899543 * S_Income  +    -0.47929849648429 * S_Kidhome
2052885   +          +     0.13364230231465 * S_MntFishProducts
2052886   +          +     -0.1386717864506 * S_MntFruits  +    -0.02769770185129 *
2052887   +        S_MntGoldProds  +    -0.29009812234724 * S_MntMeatProducts
2052888   +          +    -0.10871064476617 * S_MntSweetProducts
2052889   +          +     0.57858611197719 * S_MntWines  +    -0.26900817180555 *
2052890   +        S_NumCatalogPurchases  +    -0.39598523430317 * S_NumDealsPurchases
2052891   +          +     0.52835897625366 * S_NumStorePurchases
2052892   +          +     0.66297635444958 * S_NumWebPurchases
2052893   +          +    -0.31727971903608 * S_NumWebVisitsMonth
2052894   +          +     0.12789679291219 * S_Recency  +    -0.39270105014448 *
2052895   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.32435248899543 * S_Income + -0.47929849648429 * S_Kidhome +
0.13364230231465 * S_MntFishProducts + -0.1386717864506 * S_MntFruits + -0.02769770185129 *
S_MntGoldProds + -0.29009812234724 * S_MntMeatProducts + -0.10871064476617 *
S_MntSweetProducts + 0.57858611197719 * S_MntWines + -0.26900817180555 * S_NumCatalogPurchases
+ -0.39598523430317 * S_NumDealsPurchases + 0.52835897625366 * S_NumStorePurchases +
0.66297635444958 * S_NumWebPurchases + -0.31727971903608 * S_NumWebVisitsMonth +
0.12789679291219 * S_Recency + -0.39270105014448 * S_Teenhome ;
2052896   +   H12  =     0.37777254641249 * S_Income  +     0.79199857244438 * S_Kidhome
2052897   +          +     0.14748983783528 * S_MntFishProducts
2052898   +          +     0.14994032216514 * S_MntFruits  +     0.19147871752132 *
2052899   +        S_MntGoldProds  +     0.80535213270443 * S_MntMeatProducts
2052900   +          +     0.31095426478608 * S_MntSweetProducts
2052901   +          +     0.00471809437476 * S_MntWines  +     0.93716396534802 *
2052902   +        S_NumCatalogPurchases  +     0.86841248727948 * S_NumDealsPurchases
2052903   +          +     0.14387100066933 * S_NumStorePurchases
2052904   +          +    -0.01648998884133 * S_NumWebPurchases
2052905   +          +     -0.1378597161576 * S_NumWebVisitsMonth
2052906   +          +     0.15850653387379 * S_Recency  +     0.11714339614827 *
2052907   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.37777254641249 * S_Income + 0.79199857244438 * S_Kidhome +
0.14748983783528 * S_MntFishProducts + 0.14994032216514 * S_MntFruits + 0.19147871752132 *
S_MntGoldProds + 0.80535213270443 * S_MntMeatProducts + 0.31095426478608 * S_MntSweetProducts
+ 0.00471809437476 * S_MntWines + 0.93716396534802 * S_NumCatalogPurchases + 0.86841248727948
* S_NumDealsPurchases + 0.14387100066933 * S_NumStorePurchases + -0.01648998884133 *
S_NumWebPurchases + -0.1378597161576 * S_NumWebVisitsMonth + 0.15850653387379 * S_Recency +
0.11714339614827 * S_Teenhome ;
2052908   +   H13  =    -0.31490756773649 * S_Income  +      0.4776214738577 * S_Kidhome
2052909   +          +     0.00774185404534 * S_MntFishProducts
2052910   +          +     0.22292845341942 * S_MntFruits  +     0.11636422687317 *
2052911   +        S_MntGoldProds  +    -0.45522230281212 * S_MntMeatProducts
2052912   +          +     0.28728624268589 * S_MntSweetProducts
2052913   +          +     0.74892928025295 * S_MntWines  +     -0.4834082773325 *
2052914   +        S_NumCatalogPurchases  +    -0.05055717315946 * S_NumDealsPurchases
2052915   +          +     0.56446566213593 * S_NumStorePurchases
2052916   +          +     0.44547549135846 * S_NumWebPurchases
2052917   +          +    -1.17648505936662 * S_NumWebVisitsMonth
2052918   +          +     1.30076355226685 * S_Recency  +     0.56217939635691 *
2052919   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.31490756773649 * S_Income + 0.4776214738577 * S_Kidhome +
0.00774185404534 * S_MntFishProducts + 0.22292845341942 * S_MntFruits + 0.11636422687317 *
S_MntGoldProds + -0.45522230281212 * S_MntMeatProducts + 0.28728624268589 * S_MntSweetProducts
+ 0.74892928025295 * S_MntWines + -0.4834082773325 * S_NumCatalogPurchases + -0.05055717315946
* S_NumDealsPurchases + 0.56446566213593 * S_NumStorePurchases + 0.44547549135846 *
S_NumWebPurchases + -1.17648505936662 * S_NumWebVisitsMonth + 1.30076355226685 * S_Recency +
0.56217939635691 * S_Teenhome ;
2052920   +   H14  =    -0.40179905952719 * S_Income  +     0.16141565212918 * S_Kidhome
2052921   +          +     0.24665716882586 * S_MntFishProducts
2052922   +          +     0.03410629332469 * S_MntFruits  +     -0.1353295645077 *
2052923   +        S_MntGoldProds  +    -0.74661391150362 * S_MntMeatProducts
2052924   +          +    -0.10530818594736 * S_MntSweetProducts
2052925   +          +     0.30618479493194 * S_MntWines  +    -0.63426712804061 *
2052926   +        S_NumCatalogPurchases  +    -0.39486403699564 * S_NumDealsPurchases
2052927   +          +     0.36617016651032 * S_NumStorePurchases
2052928   +          +      0.3580014320946 * S_NumWebPurchases
2052929   +          +    -0.72597289213724 * S_NumWebVisitsMonth
2052930   +          +     0.93272927444012 * S_Recency  +     0.24531402677279 *
2052931   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.40179905952719 * S_Income + 0.16141565212918 * S_Kidhome +
0.24665716882586 * S_MntFishProducts + 0.03410629332469 * S_MntFruits + -0.1353295645077 *
S_MntGoldProds + -0.74661391150362 * S_MntMeatProducts + -0.10530818594736 *
S_MntSweetProducts + 0.30618479493194 * S_MntWines + -0.63426712804061 * S_NumCatalogPurchases
+ -0.39486403699564 * S_NumDealsPurchases + 0.36617016651032 * S_NumStorePurchases +
0.3580014320946 * S_NumWebPurchases + -0.72597289213724 * S_NumWebVisitsMonth +
0.93272927444012 * S_Recency + 0.24531402677279 * S_Teenhome ;
2052932   +   H11  = H11  +     0.10790306691381 * AcceptedCmp10
2052933   +          +     0.36067546675468 * AcceptedCmp20  +     0.56838342781466 *
2052934   +        AcceptedCmp30  +     0.10138997954661 * AcceptedCmp40
2052935   +          +     0.23809874960179 * AcceptedCmp50  +     0.42164522965364 *
2052936   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.10790306691381 * AcceptedCmp10 + 0.36067546675468 *
AcceptedCmp20 + 0.56838342781466 * AcceptedCmp30 + 0.10138997954661 * AcceptedCmp40 +
0.23809874960179 * AcceptedCmp50 + 0.42164522965364 * Complain0 ;
2052937   +   H12  = H12  +    -0.10342435301564 * AcceptedCmp10
2052938   +          +     -0.1021625473908 * AcceptedCmp20  +    -0.17400073301804 *
2052939   +        AcceptedCmp30  +      0.1295257925186 * AcceptedCmp40
2052940   +          +    -0.17149939617806 * AcceptedCmp50  +    -0.11843709761825 *
2052941   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.10342435301564 * AcceptedCmp10 + -0.1021625473908 *
AcceptedCmp20 + -0.17400073301804 * AcceptedCmp30 + 0.1295257925186 * AcceptedCmp40 +
-0.17149939617806 * AcceptedCmp50 + -0.11843709761825 * Complain0 ;
2052942   +   H13  = H13  +      0.3357459370893 * AcceptedCmp10
2052943   +          +      -0.142120215863 * AcceptedCmp20  +     0.74265608697316 *
2052944   +        AcceptedCmp30  +     0.62493796040954 * AcceptedCmp40
2052945   +          +     0.60033091776267 * AcceptedCmp50  +    -0.70537393421868 *
2052946   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.3357459370893 * AcceptedCmp10 + -0.142120215863 *
AcceptedCmp20 + 0.74265608697316 * AcceptedCmp30 + 0.62493796040954 * AcceptedCmp40 +
0.60033091776267 * AcceptedCmp50 + -0.70537393421868 * Complain0 ;
2052947   +   H14  = H14  +     0.52427760948235 * AcceptedCmp10
2052948   +          +     0.50852083885302 * AcceptedCmp20  +     0.30116257238429 *
2052949   +        AcceptedCmp30  +     0.31213749631365 * AcceptedCmp40
2052950   +          +     0.49344261660916 * AcceptedCmp50  +    -0.18226921500969 *
2052951   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.52427760948235 * AcceptedCmp10 + 0.50852083885302 *
AcceptedCmp20 + 0.30116257238429 * AcceptedCmp30 + 0.31213749631365 * AcceptedCmp40 +
0.49344261660916 * AcceptedCmp50 + -0.18226921500969 * Complain0 ;
2052952   +   H11  = H11  +     0.04284090874847 * Education2n_Cycle
2052953   +          +    -0.30425860762413 * EducationBasic  +    -0.44977960705402 *
2052954   +        EducationGraduation  +     -0.0712759822621 * EducationMaster
2052955   +          +     0.05171313818048 * Marital_StatusDivorced
2052956   +          +    -0.79112453157624 * Marital_StatusMarried
2052957   +          +     0.89650138723512 * Marital_StatusSingle
2052958   +          +    -0.22094240412913 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04284090874847 * Education2n_Cycle + -0.30425860762413 *
EducationBasic + -0.44977960705402 * EducationGraduation + -0.0712759822621 * EducationMaster
+ 0.05171313818048 * Marital_StatusDivorced + -0.79112453157624 * Marital_StatusMarried +
0.89650138723512 * Marital_StatusSingle + -0.22094240412913 * Marital_StatusTogether ;
2052959   +   H12  = H12  +    -0.32431446530898 * Education2n_Cycle
2052960   +          +     0.04651949620543 * EducationBasic  +     0.50250608857106 *
2052961   +        EducationGraduation  +     0.00514401910219 * EducationMaster
2052962   +          +     0.05091092042416 * Marital_StatusDivorced
2052963   +          +     0.86642985712339 * Marital_StatusMarried
2052964   +          +    -0.14148832619997 * Marital_StatusSingle
2052965   +          +     0.54248977280079 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.32431446530898 * Education2n_Cycle + 0.04651949620543 *
EducationBasic + 0.50250608857106 * EducationGraduation + 0.00514401910219 * EducationMaster +
0.05091092042416 * Marital_StatusDivorced + 0.86642985712339 * Marital_StatusMarried +
-0.14148832619997 * Marital_StatusSingle + 0.54248977280079 * Marital_StatusTogether ;
2052966   +   H13  = H13  +      0.0307333873684 * Education2n_Cycle
2052967   +          +     0.54778728297045 * EducationBasic  +    -0.56032296783121 *
2052968   +        EducationGraduation  +     0.26811389967146 * EducationMaster
2052969   +          +    -0.67787102917679 * Marital_StatusDivorced
2052970   +          +     1.38931504762816 * Marital_StatusMarried
2052971   +          +    -0.51164629287485 * Marital_StatusSingle
2052972   +          +     1.18856608313733 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.0307333873684 * Education2n_Cycle + 0.54778728297045 *
EducationBasic + -0.56032296783121 * EducationGraduation + 0.26811389967146 * EducationMaster
+ -0.67787102917679 * Marital_StatusDivorced + 1.38931504762816 * Marital_StatusMarried +
-0.51164629287485 * Marital_StatusSingle + 1.18856608313733 * Marital_StatusTogether ;
2052973   +   H14  = H14  +    -0.07575289231798 * Education2n_Cycle
2052974   +          +     0.20678548929493 * EducationBasic  +     0.15952949579281 *
2052975   +        EducationGraduation  +    -0.08313247341922 * EducationMaster
2052976   +          +     0.12658153975639 * Marital_StatusDivorced
2052977   +          +     0.20111721742791 * Marital_StatusMarried
2052978   +          +     -0.3521524791648 * Marital_StatusSingle
2052979   +          +     0.24908846940254 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.07575289231798 * Education2n_Cycle + 0.20678548929493 *
EducationBasic + 0.15952949579281 * EducationGraduation + -0.08313247341922 * EducationMaster
+ 0.12658153975639 * Marital_StatusDivorced + 0.20111721742791 * Marital_StatusMarried +
-0.3521524791648 * Marital_StatusSingle + 0.24908846940254 * Marital_StatusTogether ;
2052980   +   H11  =      0.8846003542153 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.8846003542153 + H11 ;
2052981   +   H12  =      1.7793661863354 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.7793661863354 + H12 ;
2052982   +   H13  =    -0.73914187312129 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.73914187312129 + H13 ;
2052983   +   H14  =    -0.28907220457418 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.28907220457418 + H14 ;
2052984   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2052985   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2052986   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
2052987   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
2052988   +END;
MPRINT(EM_DIAGRAM):   END;
2052989   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2052990   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2052991   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2052992   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
2052993   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
2052994   +END;
MPRINT(EM_DIAGRAM):   END;
2052995   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2052996   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2052997   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2052998   +
2052999   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2053000   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2053001   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2053002   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2053003   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2053004   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2053005   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2053006   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2053007   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2053008   +end;
MPRINT(EM_DIAGRAM):   end;
2053009   +else do;
MPRINT(EM_DIAGRAM):   else do;
2053010   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2053011   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2053012   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2053013   +   end;
MPRINT(EM_DIAGRAM):   end;
2053014   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2053015   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2053016   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2053017   +   end;
MPRINT(EM_DIAGRAM):   end;
2053018   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2053019   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2053020   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2053021   +   end;
MPRINT(EM_DIAGRAM):   end;
2053022   +end;
MPRINT(EM_DIAGRAM):   end;
2053023   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2053024   +   P_DepVar1  =    -1.84303414221873 * H11  +     1.56062653143645 * H12
2053025   +          +     -3.0630784922123 * H13  +    -4.55573659919551 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.84303414221873 * H11 + 1.56062653143645 * H12 +
-3.0630784922123 * H13 + -4.55573659919551 * H14 ;
2053026   +   P_DepVar1  =    -1.51714888392638 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.51714888392638 + P_DepVar1 ;
2053027   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2053028   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2053029   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2053030   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2053031   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2053032   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2053033   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2053034   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2053035   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2053036   +END;
MPRINT(EM_DIAGRAM):   END;
2053037   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2053038   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2053039   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2053040   +END;
MPRINT(EM_DIAGRAM):   END;
2053041   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2053042   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2053043   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2053044   +END;
MPRINT(EM_DIAGRAM):   END;
2053045   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2053046   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2053047   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2053048   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2053049   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2053050   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2053051   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2053052   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2053053   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2053054   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2053055   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2053056   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2053057   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2053058   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2053059   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2053060   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2053061   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2053062   +END;
MPRINT(EM_DIAGRAM):   END;
2053063   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2053064   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2053065   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2053066   +drop
2053067   +H11
2053068   +H12
2053069   +H13
2053070   +H14
2053071   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
2053072   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2053073   +* Renaming variables for Neural33;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural33;
2053074   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2053075   +* Renaming Posterior variables for Neural33;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural33;
2053076   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2053077   +drop Neural33_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural33_P_DepVar1;
2053078   +Neural33_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural33_P_DepVar1 = P_DepVar1;
2053079   +drop Neural33_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural33_P_DepVar0;
2053080   +Neural33_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural33_P_DepVar0 = P_DepVar0;
2053081   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2053082   +* Renaming _WARN_ variable for Neural33;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural33;
2053083   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2053084   +length Neural33_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural33_WARN_ $4;
2053085   +drop Neural33_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural33_WARN_;
2053086   +Neural33_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural33_WARN_ = _WARN_;
2053087   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2053088   +* Ensmbl22: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Scoring Code of model 6 of 7;
2053089   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2053090   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2053091   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
2053092   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2053093   +* NODE: Neural32;
MPRINT(EM_DIAGRAM):   * NODE: Neural32;
2053094   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2053095   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2053096   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2053097   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2053098   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2053099   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2053100   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2053101   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2053102   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2053103   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2053104   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2053105   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2053106   +LENGTH _WARN_ $4
2053107   +      F_DepVar  $ 12
2053108   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2053109   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2053110   +
2053111   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2053112   +
2053113   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2053114   +
2053115   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2053116   +
2053117   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2053118   +
2053119   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2053120   +
2053121   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2053122   +
2053123   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2053124   +
2053125   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2053126   +
2053127   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2053128   +
2053129   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2053130   +
2053131   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2053132   +
2053133   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2053134   +
2053135   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2053136   +
2053137   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2053138   +
2053139   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2053140   +
2053141   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2053142   +
2053143   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2053144   +
2053145   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2053146   +
2053147   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2053148   +
2053149   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2053150   +
2053151   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2053152   +
2053153   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2053154   +
2053155   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2053156   +
2053157   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2053158   +
2053159   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2053160   +
2053161   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2053162   +
2053163   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2053164   +
2053165   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2053166   +
2053167   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2053168   +
2053169   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2053170   +
2053171   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
2053172   +
2053173   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2053174   +
2053175   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2053176   +
2053177   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2053178   +
2053179   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2053180   +
2053181   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2053182   +
2053183   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2053184   +
2053185   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2053186   +
2053187   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2053188   +
2053189   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2053190   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2053191   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2053192   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2053193   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2053194   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2053195   +end;
MPRINT(EM_DIAGRAM):   end;
2053196   +else do;
MPRINT(EM_DIAGRAM):   else do;
2053197   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2053198   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2053199   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2053200   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2053201   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2053202   +   end;
MPRINT(EM_DIAGRAM):   end;
2053203   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2053204   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2053205   +   end;
MPRINT(EM_DIAGRAM):   end;
2053206   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2053207   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2053208   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2053209   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2053210   +   end;
MPRINT(EM_DIAGRAM):   end;
2053211   +end;
MPRINT(EM_DIAGRAM):   end;
2053212   +
2053213   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2053214   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2053215   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2053216   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2053217   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2053218   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2053219   +end;
MPRINT(EM_DIAGRAM):   end;
2053220   +else do;
MPRINT(EM_DIAGRAM):   else do;
2053221   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2053222   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2053223   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2053224   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2053225   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2053226   +   end;
MPRINT(EM_DIAGRAM):   end;
2053227   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2053228   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2053229   +   end;
MPRINT(EM_DIAGRAM):   end;
2053230   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2053231   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2053232   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2053233   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2053234   +   end;
MPRINT(EM_DIAGRAM):   end;
2053235   +end;
MPRINT(EM_DIAGRAM):   end;
2053236   +
2053237   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2053238   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2053239   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2053240   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2053241   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2053242   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2053243   +end;
MPRINT(EM_DIAGRAM):   end;
2053244   +else do;
MPRINT(EM_DIAGRAM):   else do;
2053245   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2053246   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2053247   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2053248   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2053249   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2053250   +   end;
MPRINT(EM_DIAGRAM):   end;
2053251   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2053252   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2053253   +   end;
MPRINT(EM_DIAGRAM):   end;
2053254   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2053255   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2053256   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2053257   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2053258   +   end;
MPRINT(EM_DIAGRAM):   end;
2053259   +end;
MPRINT(EM_DIAGRAM):   end;
2053260   +
2053261   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2053262   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2053263   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2053264   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2053265   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2053266   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2053267   +end;
MPRINT(EM_DIAGRAM):   end;
2053268   +else do;
MPRINT(EM_DIAGRAM):   else do;
2053269   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2053270   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2053271   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2053272   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2053273   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2053274   +   end;
MPRINT(EM_DIAGRAM):   end;
2053275   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2053276   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2053277   +   end;
MPRINT(EM_DIAGRAM):   end;
2053278   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2053279   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2053280   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2053281   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2053282   +   end;
MPRINT(EM_DIAGRAM):   end;
2053283   +end;
MPRINT(EM_DIAGRAM):   end;
2053284   +
2053285   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2053286   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2053287   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2053288   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2053289   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2053290   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2053291   +end;
MPRINT(EM_DIAGRAM):   end;
2053292   +else do;
MPRINT(EM_DIAGRAM):   else do;
2053293   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2053294   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2053295   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2053296   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2053297   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2053298   +   end;
MPRINT(EM_DIAGRAM):   end;
2053299   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2053300   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2053301   +   end;
MPRINT(EM_DIAGRAM):   end;
2053302   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2053303   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2053304   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2053305   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2053306   +   end;
MPRINT(EM_DIAGRAM):   end;
2053307   +end;
MPRINT(EM_DIAGRAM):   end;
2053308   +
2053309   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2053310   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2053311   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2053312   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2053313   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2053314   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2053315   +end;
MPRINT(EM_DIAGRAM):   end;
2053316   +else do;
MPRINT(EM_DIAGRAM):   else do;
2053317   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2053318   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2053319   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2053320   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2053321   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2053322   +   end;
MPRINT(EM_DIAGRAM):   end;
2053323   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2053324   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2053325   +   end;
MPRINT(EM_DIAGRAM):   end;
2053326   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2053327   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2053328   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2053329   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2053330   +   end;
MPRINT(EM_DIAGRAM):   end;
2053331   +end;
MPRINT(EM_DIAGRAM):   end;
2053332   +
2053333   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2053334   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2053335   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2053336   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2053337   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2053338   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2053339   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2053340   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2053341   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2053342   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2053343   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2053344   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2053345   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2053346   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2053347   +end;
MPRINT(EM_DIAGRAM):   end;
2053348   +else do;
MPRINT(EM_DIAGRAM):   else do;
2053349   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2053350   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2053351   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2053352   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2053353   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2053354   +   end;
MPRINT(EM_DIAGRAM):   end;
2053355   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2053356   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2053357   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2053358   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2053359   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2053360   +   end;
MPRINT(EM_DIAGRAM):   end;
2053361   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2053362   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2053363   +   end;
MPRINT(EM_DIAGRAM):   end;
2053364   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2053365   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2053366   +   end;
MPRINT(EM_DIAGRAM):   end;
2053367   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2053368   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2053369   +   end;
MPRINT(EM_DIAGRAM):   end;
2053370   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2053371   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2053372   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2053373   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2053374   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2053375   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2053376   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2053377   +   end;
MPRINT(EM_DIAGRAM):   end;
2053378   +end;
MPRINT(EM_DIAGRAM):   end;
2053379   +
2053380   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2053381   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2053382   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2053383   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2053384   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2053385   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2053386   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2053387   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2053388   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2053389   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2053390   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2053391   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2053392   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2053393   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2053394   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2053395   +end;
MPRINT(EM_DIAGRAM):   end;
2053396   +else do;
MPRINT(EM_DIAGRAM):   else do;
2053397   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2053398   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2053399   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2053400   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2053401   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2053402   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2053403   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2053404   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2053405   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2053406   +         end;
MPRINT(EM_DIAGRAM):   end;
2053407   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2053408   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2053409   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2053410   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2053411   +            end;
MPRINT(EM_DIAGRAM):   end;
2053412   +         end;
MPRINT(EM_DIAGRAM):   end;
2053413   +      end;
MPRINT(EM_DIAGRAM):   end;
2053414   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2053415   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2053416   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2053417   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2053418   +         end;
MPRINT(EM_DIAGRAM):   end;
2053419   +      end;
MPRINT(EM_DIAGRAM):   end;
2053420   +   end;
MPRINT(EM_DIAGRAM):   end;
2053421   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2053422   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2053423   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2053424   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2053425   +      end;
MPRINT(EM_DIAGRAM):   end;
2053426   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2053427   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2053428   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2053429   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2053430   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2053431   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2053432   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2053433   +         end;
MPRINT(EM_DIAGRAM):   end;
2053434   +      end;
MPRINT(EM_DIAGRAM):   end;
2053435   +   end;
MPRINT(EM_DIAGRAM):   end;
2053436   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2053437   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2053438   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2053439   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2053440   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2053441   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2053442   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2053443   +   end;
MPRINT(EM_DIAGRAM):   end;
2053444   +end;
MPRINT(EM_DIAGRAM):   end;
2053445   +
2053446   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2053447   +*** Checking missing input Interval
2053448   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2053449   +
2053450   +IF NMISS(
2053451   +   Income ,
2053452   +   Kidhome ,
2053453   +   MntFishProducts ,
2053454   +   MntFruits ,
2053455   +   MntGoldProds ,
2053456   +   MntMeatProducts ,
2053457   +   MntSweetProducts ,
2053458   +   MntWines ,
2053459   +   NumCatalogPurchases ,
2053460   +   NumDealsPurchases ,
2053461   +   NumStorePurchases ,
2053462   +   NumWebPurchases ,
2053463   +   NumWebVisitsMonth ,
2053464   +   Recency ,
2053465   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
2053466   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2053467   +
2053468   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2053469   +END;
MPRINT(EM_DIAGRAM):   END;
2053470   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2053471   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2053472   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2053473   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2053474   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2053475   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2053476   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2053477   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2053478   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2053479   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2053480   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2053481   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2053482   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2053483   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2053484   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2053485   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2053486   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2053487   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2053488   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2053489   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2053490   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2053491   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2053492   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2053493   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2053494   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2053495   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2053496   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2053497   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2053498   +END;
MPRINT(EM_DIAGRAM):   END;
2053499   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2053500   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2053501   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2053502   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2053503   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2053504   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2053505   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2053506   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2053507   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2053508   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2053509   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2053510   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2053511   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2053512   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2053513   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2053514   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2053515   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2053516   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2053517   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2053518   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2053519   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2053520   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2053521   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2053522   +   ELSE S_NumCatalogPurchases
2053523   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2053524   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2053525   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2053526   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2053527   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2053528   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2053529   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2053530   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2053531   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2053532   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2053533   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2053534   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2053535   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2053536   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2053537   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2053538   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2053539   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2053540   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2053541   +END;
MPRINT(EM_DIAGRAM):   END;
2053542   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2053543   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
2053544   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2053545   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2053546   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
2053547   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2053548   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2053549   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2053550   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2053551   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2053552   +   H11  =     1.40261108800308 * S_Income  +     -0.8062097507842 * S_Kidhome
2053553   +          +    -0.12974862644982 * S_MntFishProducts
2053554   +          +     0.08065642800368 * S_MntFruits  +    -0.12102130003972 *
2053555   +        S_MntGoldProds  +     0.19226249622126 * S_MntMeatProducts
2053556   +          +    -0.12290326901613 * S_MntSweetProducts
2053557   +          +     0.07790241176978 * S_MntWines  +     0.36123042724896 *
2053558   +        S_NumCatalogPurchases  +    -0.01034406765754 * S_NumDealsPurchases
2053559   +          +     0.09738032540137 * S_NumStorePurchases
2053560   +          +     0.44459515215205 * S_NumWebPurchases
2053561   +          +      0.8471075994578 * S_NumWebVisitsMonth
2053562   +          +    -1.10667985160899 * S_Recency  +    -0.88509832868515 *
2053563   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 1.40261108800308 * S_Income + -0.8062097507842 * S_Kidhome +
-0.12974862644982 * S_MntFishProducts + 0.08065642800368 * S_MntFruits + -0.12102130003972 *
S_MntGoldProds + 0.19226249622126 * S_MntMeatProducts + -0.12290326901613 * S_MntSweetProducts
+ 0.07790241176978 * S_MntWines + 0.36123042724896 * S_NumCatalogPurchases + -0.01034406765754
* S_NumDealsPurchases + 0.09738032540137 * S_NumStorePurchases + 0.44459515215205 *
S_NumWebPurchases + 0.8471075994578 * S_NumWebVisitsMonth + -1.10667985160899 * S_Recency +
-0.88509832868515 * S_Teenhome ;
2053564   +   H12  =     0.51266936686642 * S_Income  +     0.26909433357851 * S_Kidhome
2053565   +          +     0.02406077596811 * S_MntFishProducts
2053566   +          +    -0.57443793453522 * S_MntFruits  +     0.36824731232149 *
2053567   +        S_MntGoldProds  +     0.40177289143061 * S_MntMeatProducts
2053568   +          +     -0.1147507059349 * S_MntSweetProducts
2053569   +          +    -0.66379351187459 * S_MntWines  +     1.33407347415468 *
2053570   +        S_NumCatalogPurchases  +     1.00633891197299 * S_NumDealsPurchases
2053571   +          +    -0.23920969262322 * S_NumStorePurchases
2053572   +          +     -0.6008837862932 * S_NumWebPurchases
2053573   +          +     0.26759743722885 * S_NumWebVisitsMonth
2053574   +          +    -0.42755419464125 * S_Recency  +    -0.14471776361394 *
2053575   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.51266936686642 * S_Income + 0.26909433357851 * S_Kidhome +
0.02406077596811 * S_MntFishProducts + -0.57443793453522 * S_MntFruits + 0.36824731232149 *
S_MntGoldProds + 0.40177289143061 * S_MntMeatProducts + -0.1147507059349 * S_MntSweetProducts
+ -0.66379351187459 * S_MntWines + 1.33407347415468 * S_NumCatalogPurchases + 1.00633891197299
* S_NumDealsPurchases + -0.23920969262322 * S_NumStorePurchases + -0.6008837862932 *
S_NumWebPurchases + 0.26759743722885 * S_NumWebVisitsMonth + -0.42755419464125 * S_Recency +
-0.14471776361394 * S_Teenhome ;
2053576   +   H13  =    -0.19807308698832 * S_Income  +     0.25934675474849 * S_Kidhome
2053577   +          +     0.04398331533724 * S_MntFishProducts
2053578   +          +    -0.00090357598988 * S_MntFruits  +     0.05139545341773 *
2053579   +        S_MntGoldProds  +    -0.74617114336019 * S_MntMeatProducts
2053580   +          +     0.00552488718744 * S_MntSweetProducts
2053581   +          +     0.47194407197012 * S_MntWines  +    -0.35149551848487 *
2053582   +        S_NumCatalogPurchases  +    -0.30232522133093 * S_NumDealsPurchases
2053583   +          +     0.60058189155105 * S_NumStorePurchases
2053584   +          +     0.51423374855856 * S_NumWebPurchases
2053585   +          +     -0.9075304423321 * S_NumWebVisitsMonth
2053586   +          +     0.83597739226791 * S_Recency  +     0.15783202762709 *
2053587   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.19807308698832 * S_Income + 0.25934675474849 * S_Kidhome +
0.04398331533724 * S_MntFishProducts + -0.00090357598988 * S_MntFruits + 0.05139545341773 *
S_MntGoldProds + -0.74617114336019 * S_MntMeatProducts + 0.00552488718744 * S_MntSweetProducts
+ 0.47194407197012 * S_MntWines + -0.35149551848487 * S_NumCatalogPurchases +
-0.30232522133093 * S_NumDealsPurchases + 0.60058189155105 * S_NumStorePurchases +
0.51423374855856 * S_NumWebPurchases + -0.9075304423321 * S_NumWebVisitsMonth +
0.83597739226791 * S_Recency + 0.15783202762709 * S_Teenhome ;
2053588   +   H11  = H11  +    -0.26274045665457 * AcceptedCmp10
2053589   +          +    -0.86105702939371 * AcceptedCmp20  +    -0.50476270558977 *
2053590   +        AcceptedCmp30  +    -0.84284126473343 * AcceptedCmp40
2053591   +          +     0.19764907691314 * AcceptedCmp50  +    -0.29305577412263 *
2053592   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.26274045665457 * AcceptedCmp10 + -0.86105702939371 *
AcceptedCmp20 + -0.50476270558977 * AcceptedCmp30 + -0.84284126473343 * AcceptedCmp40 +
0.19764907691314 * AcceptedCmp50 + -0.29305577412263 * Complain0 ;
2053593   +   H12  = H12  +    -0.27394139847883 * AcceptedCmp10
2053594   +          +    -0.14688750266104 * AcceptedCmp20  +    -0.27982299242327 *
2053595   +        AcceptedCmp30  +    -0.10465140408787 * AcceptedCmp40
2053596   +          +    -0.81681330244218 * AcceptedCmp50  +    -0.28152730217644 *
2053597   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.27394139847883 * AcceptedCmp10 + -0.14688750266104 *
AcceptedCmp20 + -0.27982299242327 * AcceptedCmp30 + -0.10465140408787 * AcceptedCmp40 +
-0.81681330244218 * AcceptedCmp50 + -0.28152730217644 * Complain0 ;
2053598   +   H13  = H13  +     0.42310780831005 * AcceptedCmp10
2053599   +          +     0.41337614261155 * AcceptedCmp20  +     0.41436520641821 *
2053600   +        AcceptedCmp30  +     0.08914989208239 * AcceptedCmp40
2053601   +          +     0.54013759697695 * AcceptedCmp50  +    -0.19478210268955 *
2053602   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.42310780831005 * AcceptedCmp10 + 0.41337614261155 *
AcceptedCmp20 + 0.41436520641821 * AcceptedCmp30 + 0.08914989208239 * AcceptedCmp40 +
0.54013759697695 * AcceptedCmp50 + -0.19478210268955 * Complain0 ;
2053603   +   H11  = H11  +     0.40331200702699 * Education2n_Cycle
2053604   +          +     0.17202421641945 * EducationBasic  +    -0.29654161092174 *
2053605   +        EducationGraduation  +     -0.4835104183635 * EducationMaster
2053606   +          +     0.52129580188513 * Marital_StatusDivorced
2053607   +          +     -1.5224490339553 * Marital_StatusMarried
2053608   +          +     1.05062906057771 * Marital_StatusSingle
2053609   +          +    -1.16420887937635 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.40331200702699 * Education2n_Cycle + 0.17202421641945 *
EducationBasic + -0.29654161092174 * EducationGraduation + -0.4835104183635 * EducationMaster
+ 0.52129580188513 * Marital_StatusDivorced + -1.5224490339553 * Marital_StatusMarried +
1.05062906057771 * Marital_StatusSingle + -1.16420887937635 * Marital_StatusTogether ;
2053610   +   H12  = H12  +     -0.3488928858263 * Education2n_Cycle
2053611   +          +     0.38279680594423 * EducationBasic  +     0.20376044836519 *
2053612   +        EducationGraduation  +     0.20697694670185 * EducationMaster
2053613   +          +    -0.14428158063317 * Marital_StatusDivorced
2053614   +          +     0.22396926143356 * Marital_StatusMarried
2053615   +          +    -0.12980854818876 * Marital_StatusSingle
2053616   +          +     0.32607015627906 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.3488928858263 * Education2n_Cycle + 0.38279680594423 *
EducationBasic + 0.20376044836519 * EducationGraduation + 0.20697694670185 * EducationMaster +
-0.14428158063317 * Marital_StatusDivorced + 0.22396926143356 * Marital_StatusMarried +
-0.12980854818876 * Marital_StatusSingle + 0.32607015627906 * Marital_StatusTogether ;
2053617   +   H13  = H13  +    -0.18351418824199 * Education2n_Cycle
2053618   +          +     0.53417952447263 * EducationBasic  +    -0.14333929289628 *
2053619   +        EducationGraduation  +     0.04513004774082 * EducationMaster
2053620   +          +    -0.25615797303064 * Marital_StatusDivorced
2053621   +          +     0.18825506199046 * Marital_StatusMarried
2053622   +          +    -0.24607556819871 * Marital_StatusSingle
2053623   +          +     0.29531673844201 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.18351418824199 * Education2n_Cycle + 0.53417952447263 *
EducationBasic + -0.14333929289628 * EducationGraduation + 0.04513004774082 * EducationMaster
+ -0.25615797303064 * Marital_StatusDivorced + 0.18825506199046 * Marital_StatusMarried +
-0.24607556819871 * Marital_StatusSingle + 0.29531673844201 * Marital_StatusTogether ;
2053624   +   H11  =    -1.29289362679377 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.29289362679377 + H11 ;
2053625   +   H12  =     0.88724419151235 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.88724419151235 + H12 ;
2053626   +   H13  =    -0.51194544699467 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.51194544699467 + H13 ;
2053627   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2053628   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2053629   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
2053630   +END;
MPRINT(EM_DIAGRAM):   END;
2053631   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2053632   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2053633   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2053634   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
2053635   +END;
MPRINT(EM_DIAGRAM):   END;
2053636   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2053637   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2053638   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2053639   +
2053640   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2053641   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2053642   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2053643   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2053644   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2053645   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2053646   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2053647   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2053648   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2053649   +end;
MPRINT(EM_DIAGRAM):   end;
2053650   +else do;
MPRINT(EM_DIAGRAM):   else do;
2053651   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2053652   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2053653   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2053654   +   end;
MPRINT(EM_DIAGRAM):   end;
2053655   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2053656   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2053657   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2053658   +   end;
MPRINT(EM_DIAGRAM):   end;
2053659   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2053660   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2053661   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2053662   +   end;
MPRINT(EM_DIAGRAM):   end;
2053663   +end;
MPRINT(EM_DIAGRAM):   end;
2053664   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2053665   +   P_DepVar1  =     4.44251020865882 * H11  +     2.67139161773156 * H12
2053666   +          +    -4.73549395111184 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.44251020865882 * H11 + 2.67139161773156 * H12 +
-4.73549395111184 * H13 ;
2053667   +   P_DepVar1  =     0.45492690116644 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.45492690116644 + P_DepVar1 ;
2053668   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2053669   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2053670   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2053671   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2053672   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2053673   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2053674   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2053675   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2053676   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2053677   +END;
MPRINT(EM_DIAGRAM):   END;
2053678   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2053679   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2053680   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2053681   +END;
MPRINT(EM_DIAGRAM):   END;
2053682   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2053683   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2053684   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2053685   +END;
MPRINT(EM_DIAGRAM):   END;
2053686   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2053687   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2053688   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2053689   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2053690   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2053691   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2053692   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2053693   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2053694   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2053695   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2053696   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2053697   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2053698   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2053699   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2053700   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2053701   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2053702   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2053703   +END;
MPRINT(EM_DIAGRAM):   END;
2053704   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2053705   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2053706   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2053707   +drop
2053708   +H11
2053709   +H12
2053710   +H13
2053711   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
2053712   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2053713   +* Renaming variables for Neural32;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural32;
2053714   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2053715   +* Renaming Posterior variables for Neural32;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural32;
2053716   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2053717   +drop Neural32_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural32_P_DepVar1;
2053718   +Neural32_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural32_P_DepVar1 = P_DepVar1;
2053719   +drop Neural32_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural32_P_DepVar0;
2053720   +Neural32_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural32_P_DepVar0 = P_DepVar0;
2053721   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2053722   +* Renaming _WARN_ variable for Neural32;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural32;
2053723   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2053724   +length Neural32_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural32_WARN_ $4;
2053725   +drop Neural32_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural32_WARN_;
2053726   +Neural32_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural32_WARN_ = _WARN_;
2053727   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2053728   +* Ensmbl22: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Scoring Code of model 7 of 7;
2053729   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2053730   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2053731   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
2053732   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2053733   +* NODE: Neural31;
MPRINT(EM_DIAGRAM):   * NODE: Neural31;
2053734   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2053735   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2053736   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2053737   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2053738   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2053739   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2053740   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2053741   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2053742   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2053743   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2053744   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2053745   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2053746   +LENGTH _WARN_ $4
2053747   +      F_DepVar  $ 12
2053748   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2053749   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2053750   +
2053751   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2053752   +
2053753   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2053754   +
2053755   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2053756   +
2053757   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2053758   +
2053759   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2053760   +
2053761   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2053762   +
2053763   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2053764   +
2053765   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2053766   +
2053767   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2053768   +
2053769   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2053770   +
2053771   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2053772   +
2053773   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2053774   +
2053775   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2053776   +
2053777   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2053778   +
2053779   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2053780   +
2053781   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2053782   +
2053783   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2053784   +
2053785   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2053786   +
2053787   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2053788   +
2053789   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2053790   +
2053791   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2053792   +
2053793   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2053794   +
2053795   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2053796   +
2053797   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2053798   +
2053799   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2053800   +
2053801   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2053802   +
2053803   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2053804   +
2053805   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2053806   +
2053807   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2053808   +
2053809   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2053810   +
2053811   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2053812   +
2053813   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2053814   +
2053815   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2053816   +
2053817   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2053818   +
2053819   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2053820   +
2053821   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2053822   +
2053823   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2053824   +
2053825   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2053826   +
2053827   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2053828   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2053829   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2053830   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2053831   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2053832   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2053833   +end;
MPRINT(EM_DIAGRAM):   end;
2053834   +else do;
MPRINT(EM_DIAGRAM):   else do;
2053835   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2053836   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2053837   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2053838   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2053839   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2053840   +   end;
MPRINT(EM_DIAGRAM):   end;
2053841   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2053842   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2053843   +   end;
MPRINT(EM_DIAGRAM):   end;
2053844   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2053845   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2053846   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2053847   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2053848   +   end;
MPRINT(EM_DIAGRAM):   end;
2053849   +end;
MPRINT(EM_DIAGRAM):   end;
2053850   +
2053851   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2053852   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2053853   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2053854   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2053855   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2053856   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2053857   +end;
MPRINT(EM_DIAGRAM):   end;
2053858   +else do;
MPRINT(EM_DIAGRAM):   else do;
2053859   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2053860   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2053861   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2053862   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2053863   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2053864   +   end;
MPRINT(EM_DIAGRAM):   end;
2053865   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2053866   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2053867   +   end;
MPRINT(EM_DIAGRAM):   end;
2053868   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2053869   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2053870   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2053871   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2053872   +   end;
MPRINT(EM_DIAGRAM):   end;
2053873   +end;
MPRINT(EM_DIAGRAM):   end;
2053874   +
2053875   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2053876   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2053877   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2053878   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2053879   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2053880   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2053881   +end;
MPRINT(EM_DIAGRAM):   end;
2053882   +else do;
MPRINT(EM_DIAGRAM):   else do;
2053883   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2053884   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2053885   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2053886   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2053887   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2053888   +   end;
MPRINT(EM_DIAGRAM):   end;
2053889   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2053890   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2053891   +   end;
MPRINT(EM_DIAGRAM):   end;
2053892   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2053893   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2053894   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2053895   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2053896   +   end;
MPRINT(EM_DIAGRAM):   end;
2053897   +end;
MPRINT(EM_DIAGRAM):   end;
2053898   +
2053899   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2053900   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2053901   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2053902   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2053903   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2053904   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2053905   +end;
MPRINT(EM_DIAGRAM):   end;
2053906   +else do;
MPRINT(EM_DIAGRAM):   else do;
2053907   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2053908   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2053909   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2053910   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2053911   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2053912   +   end;
MPRINT(EM_DIAGRAM):   end;
2053913   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2053914   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2053915   +   end;
MPRINT(EM_DIAGRAM):   end;
2053916   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2053917   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2053918   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2053919   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2053920   +   end;
MPRINT(EM_DIAGRAM):   end;
2053921   +end;
MPRINT(EM_DIAGRAM):   end;
2053922   +
2053923   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2053924   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2053925   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2053926   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2053927   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2053928   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2053929   +end;
MPRINT(EM_DIAGRAM):   end;
2053930   +else do;
MPRINT(EM_DIAGRAM):   else do;
2053931   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2053932   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2053933   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2053934   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2053935   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2053936   +   end;
MPRINT(EM_DIAGRAM):   end;
2053937   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2053938   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2053939   +   end;
MPRINT(EM_DIAGRAM):   end;
2053940   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2053941   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2053942   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2053943   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2053944   +   end;
MPRINT(EM_DIAGRAM):   end;
2053945   +end;
MPRINT(EM_DIAGRAM):   end;
2053946   +
2053947   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2053948   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2053949   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2053950   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2053951   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2053952   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2053953   +end;
MPRINT(EM_DIAGRAM):   end;
2053954   +else do;
MPRINT(EM_DIAGRAM):   else do;
2053955   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2053956   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2053957   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2053958   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2053959   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2053960   +   end;
MPRINT(EM_DIAGRAM):   end;
2053961   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2053962   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2053963   +   end;
MPRINT(EM_DIAGRAM):   end;
2053964   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2053965   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2053966   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2053967   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2053968   +   end;
MPRINT(EM_DIAGRAM):   end;
2053969   +end;
MPRINT(EM_DIAGRAM):   end;
2053970   +
2053971   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2053972   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2053973   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2053974   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2053975   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2053976   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2053977   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2053978   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2053979   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2053980   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2053981   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2053982   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2053983   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2053984   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2053985   +end;
MPRINT(EM_DIAGRAM):   end;
2053986   +else do;
MPRINT(EM_DIAGRAM):   else do;
2053987   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2053988   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2053989   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2053990   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2053991   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2053992   +   end;
MPRINT(EM_DIAGRAM):   end;
2053993   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2053994   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2053995   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2053996   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2053997   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2053998   +   end;
MPRINT(EM_DIAGRAM):   end;
2053999   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2054000   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2054001   +   end;
MPRINT(EM_DIAGRAM):   end;
2054002   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2054003   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2054004   +   end;
MPRINT(EM_DIAGRAM):   end;
2054005   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2054006   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2054007   +   end;
MPRINT(EM_DIAGRAM):   end;
2054008   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2054009   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2054010   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2054011   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2054012   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2054013   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2054014   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2054015   +   end;
MPRINT(EM_DIAGRAM):   end;
2054016   +end;
MPRINT(EM_DIAGRAM):   end;
2054017   +
2054018   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2054019   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2054020   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2054021   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2054022   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2054023   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2054024   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2054025   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2054026   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2054027   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2054028   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2054029   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2054030   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2054031   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2054032   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2054033   +end;
MPRINT(EM_DIAGRAM):   end;
2054034   +else do;
MPRINT(EM_DIAGRAM):   else do;
2054035   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2054036   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2054037   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2054038   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2054039   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2054040   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2054041   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2054042   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2054043   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2054044   +         end;
MPRINT(EM_DIAGRAM):   end;
2054045   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2054046   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2054047   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2054048   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2054049   +            end;
MPRINT(EM_DIAGRAM):   end;
2054050   +         end;
MPRINT(EM_DIAGRAM):   end;
2054051   +      end;
MPRINT(EM_DIAGRAM):   end;
2054052   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2054053   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2054054   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2054055   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2054056   +         end;
MPRINT(EM_DIAGRAM):   end;
2054057   +      end;
MPRINT(EM_DIAGRAM):   end;
2054058   +   end;
MPRINT(EM_DIAGRAM):   end;
2054059   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2054060   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2054061   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2054062   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2054063   +      end;
MPRINT(EM_DIAGRAM):   end;
2054064   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2054065   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2054066   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2054067   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2054068   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2054069   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2054070   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2054071   +         end;
MPRINT(EM_DIAGRAM):   end;
2054072   +      end;
MPRINT(EM_DIAGRAM):   end;
2054073   +   end;
MPRINT(EM_DIAGRAM):   end;
2054074   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2054075   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2054076   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2054077   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2054078   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2054079   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2054080   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2054081   +   end;
MPRINT(EM_DIAGRAM):   end;
2054082   +end;
MPRINT(EM_DIAGRAM):   end;
2054083   +
2054084   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2054085   +*** Checking missing input Interval
2054086   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2054087   +
2054088   +IF NMISS(
2054089   +   Income ,
2054090   +   Kidhome ,
2054091   +   MntFishProducts ,
2054092   +   MntFruits ,
2054093   +   MntGoldProds ,
2054094   +   MntMeatProducts ,
2054095   +   MntSweetProducts ,
2054096   +   MntWines ,
2054097   +   NumCatalogPurchases ,
2054098   +   NumDealsPurchases ,
2054099   +   NumStorePurchases ,
2054100   +   NumWebPurchases ,
2054101   +   NumWebVisitsMonth ,
2054102   +   Recency ,
2054103   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
2054104   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2054105   +
2054106   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2054107   +END;
MPRINT(EM_DIAGRAM):   END;
2054108   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2054109   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2054110   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2054111   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2054112   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2054113   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2054114   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2054115   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2054116   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2054117   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2054118   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2054119   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2054120   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2054121   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2054122   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2054123   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2054124   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2054125   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2054126   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2054127   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2054128   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2054129   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2054130   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2054131   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2054132   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2054133   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2054134   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2054135   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2054136   +END;
MPRINT(EM_DIAGRAM):   END;
2054137   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2054138   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2054139   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2054140   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2054141   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2054142   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2054143   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2054144   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2054145   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2054146   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2054147   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2054148   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2054149   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2054150   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2054151   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2054152   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2054153   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2054154   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2054155   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2054156   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2054157   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2054158   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2054159   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2054160   +   ELSE S_NumCatalogPurchases
2054161   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2054162   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2054163   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2054164   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2054165   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2054166   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2054167   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2054168   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2054169   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2054170   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2054171   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2054172   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2054173   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2054174   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2054175   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2054176   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2054177   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2054178   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2054179   +END;
MPRINT(EM_DIAGRAM):   END;
2054180   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2054181   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
2054182   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2054183   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2054184   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
2054185   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2054186   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2054187   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2054188   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2054189   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2054190   +   H11  =    -1.33502235588914 * S_Income  +     0.86914778071024 * S_Kidhome
2054191   +          +     0.06177226616611 * S_MntFishProducts
2054192   +          +     0.22465531888584 * S_MntFruits  +    -0.01216018017424 *
2054193   +        S_MntGoldProds  +    -0.10435601171346 * S_MntMeatProducts
2054194   +          +     0.19245635559754 * S_MntSweetProducts
2054195   +          +    -0.06473329764962 * S_MntWines  +    -0.40260570275107 *
2054196   +        S_NumCatalogPurchases  +    -0.01043435397255 * S_NumDealsPurchases
2054197   +          +    -0.35392759932805 * S_NumStorePurchases
2054198   +          +     -0.2443007642616 * S_NumWebPurchases
2054199   +          +    -0.72667572173837 * S_NumWebVisitsMonth
2054200   +          +     0.97336679863544 * S_Recency  +     0.72544205905496 *
2054201   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -1.33502235588914 * S_Income + 0.86914778071024 * S_Kidhome +
0.06177226616611 * S_MntFishProducts + 0.22465531888584 * S_MntFruits + -0.01216018017424 *
S_MntGoldProds + -0.10435601171346 * S_MntMeatProducts + 0.19245635559754 * S_MntSweetProducts
+ -0.06473329764962 * S_MntWines + -0.40260570275107 * S_NumCatalogPurchases +
-0.01043435397255 * S_NumDealsPurchases + -0.35392759932805 * S_NumStorePurchases +
-0.2443007642616 * S_NumWebPurchases + -0.72667572173837 * S_NumWebVisitsMonth +
0.97336679863544 * S_Recency + 0.72544205905496 * S_Teenhome ;
2054202   +   H12  =    -0.09105644521483 * S_Income  +     0.01920168996111 * S_Kidhome
2054203   +          +     0.00012212205827 * S_MntFishProducts
2054204   +          +     0.00032664246198 * S_MntFruits  +    -0.02161363659377 *
2054205   +        S_MntGoldProds  +    -0.40917729724893 * S_MntMeatProducts
2054206   +          +     0.01459978689352 * S_MntSweetProducts
2054207   +          +     0.28732983017398 * S_MntWines  +    -0.26033282919423 *
2054208   +        S_NumCatalogPurchases  +      -0.306688498482 * S_NumDealsPurchases
2054209   +          +      0.4054643699817 * S_NumStorePurchases
2054210   +          +     0.27747327375374 * S_NumWebPurchases
2054211   +          +    -0.31325270852641 * S_NumWebVisitsMonth
2054212   +          +      0.3707065492652 * S_Recency  +     0.05681262835219 *
2054213   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.09105644521483 * S_Income + 0.01920168996111 * S_Kidhome +
0.00012212205827 * S_MntFishProducts + 0.00032664246198 * S_MntFruits + -0.02161363659377 *
S_MntGoldProds + -0.40917729724893 * S_MntMeatProducts + 0.01459978689352 * S_MntSweetProducts
+ 0.28732983017398 * S_MntWines + -0.26033282919423 * S_NumCatalogPurchases + -0.306688498482
* S_NumDealsPurchases + 0.4054643699817 * S_NumStorePurchases + 0.27747327375374 *
S_NumWebPurchases + -0.31325270852641 * S_NumWebVisitsMonth + 0.3707065492652 * S_Recency +
0.05681262835219 * S_Teenhome ;
2054214   +   H11  = H11  +     0.23904403737743 * AcceptedCmp10
2054215   +          +     0.12365860406863 * AcceptedCmp20  +     0.28547657706908 *
2054216   +        AcceptedCmp30  +     0.37587337003909 * AcceptedCmp40
2054217   +          +    -0.04113029526683 * AcceptedCmp50  +      0.2596440604013 *
2054218   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.23904403737743 * AcceptedCmp10 + 0.12365860406863 *
AcceptedCmp20 + 0.28547657706908 * AcceptedCmp30 + 0.37587337003909 * AcceptedCmp40 +
-0.04113029526683 * AcceptedCmp50 + 0.2596440604013 * Complain0 ;
2054219   +   H12  = H12  +     0.25336773034662 * AcceptedCmp10
2054220   +          +     0.39499004620022 * AcceptedCmp20  +     0.19852127214148 *
2054221   +        AcceptedCmp30  +     0.19215250383325 * AcceptedCmp40
2054222   +          +     0.27213364707939 * AcceptedCmp50  +    -0.00774901485124 *
2054223   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.25336773034662 * AcceptedCmp10 + 0.39499004620022 *
AcceptedCmp20 + 0.19852127214148 * AcceptedCmp30 + 0.19215250383325 * AcceptedCmp40 +
0.27213364707939 * AcceptedCmp50 + -0.00774901485124 * Complain0 ;
2054224   +   H11  = H11  +    -0.05263155952227 * Education2n_Cycle
2054225   +          +    -1.40124591386453 * EducationBasic  +     0.43501491332678 *
2054226   +        EducationGraduation  +     0.77305262508081 * EducationMaster
2054227   +          +    -0.43667846017683 * Marital_StatusDivorced
2054228   +          +     1.33507828005472 * Marital_StatusMarried
2054229   +          +    -0.75026283842664 * Marital_StatusSingle
2054230   +          +     0.84436594207558 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.05263155952227 * Education2n_Cycle + -1.40124591386453 *
EducationBasic + 0.43501491332678 * EducationGraduation + 0.77305262508081 * EducationMaster +
-0.43667846017683 * Marital_StatusDivorced + 1.33507828005472 * Marital_StatusMarried +
-0.75026283842664 * Marital_StatusSingle + 0.84436594207558 * Marital_StatusTogether ;
2054231   +   H12  = H12  +     0.08398432584098 * Education2n_Cycle
2054232   +          +     0.12375156883157 * EducationBasic  +     -0.0901891766073 *
2054233   +        EducationGraduation  +    -0.07691770257441 * EducationMaster
2054234   +          +    -0.03531690128173 * Marital_StatusDivorced
2054235   +          +    -0.04344171367809 * Marital_StatusMarried
2054236   +          +    -0.05137362653166 * Marital_StatusSingle
2054237   +          +    -0.01265518570667 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.08398432584098 * Education2n_Cycle + 0.12375156883157 *
EducationBasic + -0.0901891766073 * EducationGraduation + -0.07691770257441 * EducationMaster
+ -0.03531690128173 * Marital_StatusDivorced + -0.04344171367809 * Marital_StatusMarried +
-0.05137362653166 * Marital_StatusSingle + -0.01265518570667 * Marital_StatusTogether ;
2054238   +   H11  =     1.86846527977677 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.86846527977677 + H11 ;
2054239   +   H12  =    -0.42494263287735 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.42494263287735 + H12 ;
2054240   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2054241   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2054242   +END;
MPRINT(EM_DIAGRAM):   END;
2054243   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2054244   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2054245   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2054246   +END;
MPRINT(EM_DIAGRAM):   END;
2054247   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2054248   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2054249   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2054250   +
2054251   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2054252   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2054253   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2054254   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2054255   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2054256   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2054257   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2054258   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2054259   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2054260   +end;
MPRINT(EM_DIAGRAM):   end;
2054261   +else do;
MPRINT(EM_DIAGRAM):   else do;
2054262   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2054263   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2054264   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2054265   +   end;
MPRINT(EM_DIAGRAM):   end;
2054266   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2054267   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2054268   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2054269   +   end;
MPRINT(EM_DIAGRAM):   end;
2054270   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2054271   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2054272   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2054273   +   end;
MPRINT(EM_DIAGRAM):   end;
2054274   +end;
MPRINT(EM_DIAGRAM):   end;
2054275   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2054276   +   P_DepVar1  =    -5.43090515434696 * H11  +    -9.08673127131886 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.43090515434696 * H11 + -9.08673127131886 * H12 ;
2054277   +   P_DepVar1  =      2.7752946076831 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.7752946076831 + P_DepVar1 ;
2054278   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2054279   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2054280   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2054281   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2054282   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2054283   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2054284   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2054285   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2054286   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2054287   +END;
MPRINT(EM_DIAGRAM):   END;
2054288   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2054289   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2054290   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2054291   +END;
MPRINT(EM_DIAGRAM):   END;
2054292   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2054293   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2054294   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2054295   +END;
MPRINT(EM_DIAGRAM):   END;
2054296   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2054297   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2054298   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2054299   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2054300   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2054301   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2054302   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2054303   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2054304   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2054305   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2054306   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2054307   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2054308   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2054309   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2054310   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2054311   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2054312   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2054313   +END;
MPRINT(EM_DIAGRAM):   END;
2054314   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2054315   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2054316   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2054317   +drop
2054318   +H11
2054319   +H12
2054320   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
2054321   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2054322   +* Renaming variables for Neural31;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural31;
2054323   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2054324   +* Renaming Posterior variables for Neural31;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural31;
2054325   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2054326   +drop Neural31_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural31_P_DepVar1;
2054327   +Neural31_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural31_P_DepVar1 = P_DepVar1;
2054328   +drop Neural31_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural31_P_DepVar0;
2054329   +Neural31_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural31_P_DepVar0 = P_DepVar0;
2054330   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2054331   +* Renaming _WARN_ variable for Neural31;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural31;
2054332   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2054333   +length Neural31_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural31_WARN_ $4;
2054334   +drop Neural31_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural31_WARN_;
2054335   +Neural31_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural31_WARN_ = _WARN_;
2054336   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2054337   +* Ensmbl22: Average Posteriors of 7 models;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Average Posteriors of 7 models;
2054338   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2054339   +P_DepVar1 = (
2054340   +Reg10_P_DepVar1 +
2054341   +Neural30_P_DepVar1 +
2054342   +Neural35_P_DepVar1 +
2054343   +Neural34_P_DepVar1 +
2054344   +Neural33_P_DepVar1 +
2054345   +Neural32_P_DepVar1 +
2054346   +Neural31_P_DepVar1
2054347   +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( Reg10_P_DepVar1 + Neural30_P_DepVar1 + Neural35_P_DepVar1
+ Neural34_P_DepVar1 + Neural33_P_DepVar1 + Neural32_P_DepVar1 + Neural31_P_DepVar1 )/7;
2054348   +P_DepVar0 = (
2054349   +Reg10_P_DepVar0 +
2054350   +Neural30_P_DepVar0 +
2054351   +Neural35_P_DepVar0 +
2054352   +Neural34_P_DepVar0 +
2054353   +Neural33_P_DepVar0 +
2054354   +Neural32_P_DepVar0 +
2054355   +Neural31_P_DepVar0
2054356   +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( Reg10_P_DepVar0 + Neural30_P_DepVar0 + Neural35_P_DepVar0
+ Neural34_P_DepVar0 + Neural33_P_DepVar0 + Neural32_P_DepVar0 + Neural31_P_DepVar0 )/7;
2054357   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2054358   +* Ensmbl22: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Computing Classification Vars;
2054359   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2054360   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
2054361   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
2054362   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
2054363   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
2054364   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
2054365   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
2054366   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
2054367   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
2054368   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
2054369   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
2054370   +end;
MPRINT(EM_DIAGRAM):   end;
2054371   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
2054372   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
2054373   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
2054374   +end;
MPRINT(EM_DIAGRAM):   end;
2054375   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2054376   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2054377   +* Ensmbl22: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Producing Unformatted variable;
2054378   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2054379   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
2054380   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
2054381   +else
2054382   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
2054383   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2054384   +* Ensmbl22: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Computing _WARN_ Variable;
2054385   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2054386   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
2054387   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
2054388   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
2054389   +if index(REG10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_,
1, 1) ='M';
2054390   +if index(REG10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_,
2, 1) ='U';
2054391   +if index(REG10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_,
3, 1) ='P';
2054392   +if index(REG10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_,
4, 1) ='C';
2054393   +if index(NEURAL30_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
2054393  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL30_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2054394   +if index(NEURAL30_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
2054394  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL30_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2054395   +if index(NEURAL30_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
2054395  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL30_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2054396   +if index(NEURAL30_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
2054396  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL30_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2054397   +if index(NEURAL35_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
2054397  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL35_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2054398   +if index(NEURAL35_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
2054398  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL35_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2054399   +if index(NEURAL35_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
2054399  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL35_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2054400   +if index(NEURAL35_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
2054400  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL35_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2054401   +if index(NEURAL34_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
2054401  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL34_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2054402   +if index(NEURAL34_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
2054402  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL34_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2054403   +if index(NEURAL34_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
2054403  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL34_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2054404   +if index(NEURAL34_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
2054404  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL34_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2054405   +if index(NEURAL33_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
2054405  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL33_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2054406   +if index(NEURAL33_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
2054406  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL33_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2054407   +if index(NEURAL33_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
2054407  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL33_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2054408   +if index(NEURAL33_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
2054408  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL33_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2054409   +if index(NEURAL32_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
2054409  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL32_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2054410   +if index(NEURAL32_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
2054410  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL32_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2054411   +if index(NEURAL32_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
2054411  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL32_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2054412   +if index(NEURAL32_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
2054412  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL32_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2054413   +if index(NEURAL31_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
2054413  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL31_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2054414   +if index(NEURAL31_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
2054414  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL31_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2054415   +if index(NEURAL31_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
2054415  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL31_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2054416   +if index(NEURAL31_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
2054416  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL31_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2054417   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2054418   +* Ensmbl22: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Computing Residual Vars;
2054419   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2054420   +if
2054421   +F_DepVar NE '1'
2054422   +AND F_DepVar NE '0'
2054423   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
2054424   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
2054425   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
2054426   +end;
MPRINT(EM_DIAGRAM):   end;
2054427   +else do;
MPRINT(EM_DIAGRAM):   else do;
2054428   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
2054429   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
2054430   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
2054431   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
2054432   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
2054433   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
2054434   +END;
MPRINT(EM_DIAGRAM):   END;
2054435   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2054436    run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL22_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.REG10_TRAIN.VIEW used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.16 seconds
      cpu time            0.15 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2054437    quit;
2054438    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
2054439    filename emflow
2054439  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl22\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl22\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Scoring REG10_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2054440    *------------------------------------------------------------*;
2054441    * Ensmbl22: Scoring REG10_VALIDATE data;
2054442    *------------------------------------------------------------*;
2054443    data EMWS8.Ensmbl22_VALIDATE
2054444    / view=EMWS8.Ensmbl22_VALIDATE
2054445    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl22_VALIDATE / view=EMWS8.Ensmbl22_VALIDATE ;
2054446    set EMWS8.Reg10_VALIDATE
2054447    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg10_VALIDATE ;
2054448    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl22\EMFLOWSCORE.sas.
2054449   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2054450   +* Ensmbl22: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Combine model for DepVar;
2054451   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2054452   +* Ensmbl22: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Scoring Code of model 1 of 7;
2054453   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2054454   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2054455   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
2054456   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2054457   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
2054458   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2054459   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2054460   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
2054461   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
2054462   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
2054463   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2054464   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2054465   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
2054466   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2054467   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
2054468   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2054469   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2054470   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
2054471   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2054472   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
2054473   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2054474   +
2054475   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2054476   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2054476  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2054477   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2054478   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2054479   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2054480   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2054481   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
2054482   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2054483   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
2054484   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2054485   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
2054486   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2054487   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2054488   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2054489   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2054490   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2054491   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2054492   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
2054493   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2054494   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
2054495   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2054496   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
2054497   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2054498   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2054499   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
2054500   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2054501   +* NODE: Meta2;
MPRINT(EM_DIAGRAM):   * NODE: Meta2;
2054502   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2054503   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2054504   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
2054505   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2054506   +* NODE: Reg10;
MPRINT(EM_DIAGRAM):   * NODE: Reg10;
2054507   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2054508   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
2054509   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
2054510   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
2054511   +
2054512   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
2054513   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
2054514   +
2054515   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
2054516   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2054517   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
2054518   +array REG10DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG10DRF [2] $12 _temporary_ ('1' '0' );
2054519   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2054520   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
2054521   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
2054522   +ARRAY REG10DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG10DRU[2] _TEMPORARY_ (1 0);
The SAS System
 
2054523   +
2054524   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2054525   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
2054526   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2054527   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2054528   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2054529   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2054530   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2054531   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
2054532   +end;
MPRINT(EM_DIAGRAM):   end;
2054533   +else do;
MPRINT(EM_DIAGRAM):   else do;
2054534   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2054535   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
2054536   +   end;
MPRINT(EM_DIAGRAM):   end;
2054537   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2054538   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
2054539   +   end;
MPRINT(EM_DIAGRAM):   end;
2054540   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2054541   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
2054542   +   end;
MPRINT(EM_DIAGRAM):   end;
2054543   +end;
MPRINT(EM_DIAGRAM):   end;
2054544   +
2054545   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
2054546   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
2054547   +
2054548   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
2054549   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
2054550   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2054551   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2054552   +end;
MPRINT(EM_DIAGRAM):   end;
2054553   +
2054554   +*** Check MntFishProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntFishProducts for missing values ;
2054555   +if missing( MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntFishProducts ) then do;
2054556   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2054557   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2054558   +end;
MPRINT(EM_DIAGRAM):   end;
2054559   +
2054560   +*** Check MntFruits for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntFruits for missing values ;
2054561   +if missing( MntFruits ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntFruits ) then do;
2054562   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2054563   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2054564   +end;
MPRINT(EM_DIAGRAM):   end;
2054565   +
2054566   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
2054567   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
2054568   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2054569   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2054570   +end;
MPRINT(EM_DIAGRAM):   end;
2054571   +
2054572   +*** Check MntWines for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntWines for missing values ;
2054573   +if missing( MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntWines ) then do;
2054574   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2054575   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2054576   +end;
MPRINT(EM_DIAGRAM):   end;
2054577   +
2054578   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
2054579   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
2054580   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2054581   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2054582   +end;
MPRINT(EM_DIAGRAM):   end;
2054583   +
2054584   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
2054585   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
2054586   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2054587   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2054588   +end;
MPRINT(EM_DIAGRAM):   end;
2054589   +
2054590   +*** Check NumStorePurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumStorePurchases for missing values ;
2054591   +if missing( NumStorePurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumStorePurchases ) then do;
2054592   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2054593   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2054594   +end;
MPRINT(EM_DIAGRAM):   end;
2054595   +
2054596   +*** Check NumWebPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebPurchases for missing values ;
2054597   +if missing( NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebPurchases ) then do;
2054598   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2054599   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2054600   +end;
MPRINT(EM_DIAGRAM):   end;
2054601   +
2054602   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
2054603   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
2054604   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2054605   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2054606   +end;
MPRINT(EM_DIAGRAM):   end;
2054607   +
2054608   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
2054609   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
2054610   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2054611   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2054612   +end;
MPRINT(EM_DIAGRAM):   end;
2054613   +
2054614   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
2054615   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
2054616   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2054617   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2054618   +end;
MPRINT(EM_DIAGRAM):   end;
2054619   +
2054620   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2054621   +drop _1_0 ;
MPRINT(EM_DIAGRAM):   drop _1_0 ;
2054622   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2054623   +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
2054624   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2054625   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2054626   +end;
MPRINT(EM_DIAGRAM):   end;
2054627   +else do;
MPRINT(EM_DIAGRAM):   else do;
2054628   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2054629   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2054630   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2054631   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2054632   +      _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
2054633   +   end;
MPRINT(EM_DIAGRAM):   end;
2054634   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2054635   +      _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
2054636   +   end;
MPRINT(EM_DIAGRAM):   end;
2054637   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2054638   +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
2054639   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2054640   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2054641   +   end;
MPRINT(EM_DIAGRAM):   end;
2054642   +end;
MPRINT(EM_DIAGRAM):   end;
2054643   +
2054644   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2054645   +drop _2_0 ;
MPRINT(EM_DIAGRAM):   drop _2_0 ;
2054646   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2054647   +   _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
2054648   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2054649   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2054650   +end;
MPRINT(EM_DIAGRAM):   end;
2054651   +else do;
MPRINT(EM_DIAGRAM):   else do;
2054652   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2054653   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2054654   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2054655   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2054656   +      _2_0 = 1;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
2054657   +   end;
MPRINT(EM_DIAGRAM):   end;
2054658   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2054659   +      _2_0 = -1;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
2054660   +   end;
MPRINT(EM_DIAGRAM):   end;
2054661   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2054662   +      _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
2054663   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2054664   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2054665   +   end;
MPRINT(EM_DIAGRAM):   end;
2054666   +end;
MPRINT(EM_DIAGRAM):   end;
2054667   +
2054668   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2054669   +drop _3_0 ;
MPRINT(EM_DIAGRAM):   drop _3_0 ;
2054670   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2054671   +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
2054672   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2054673   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2054674   +end;
MPRINT(EM_DIAGRAM):   end;
2054675   +else do;
MPRINT(EM_DIAGRAM):   else do;
2054676   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2054677   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2054678   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2054679   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2054680   +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
2054681   +   end;
MPRINT(EM_DIAGRAM):   end;
2054682   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2054683   +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
2054684   +   end;
MPRINT(EM_DIAGRAM):   end;
2054685   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2054686   +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
2054687   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2054688   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2054689   +   end;
MPRINT(EM_DIAGRAM):   end;
2054690   +end;
MPRINT(EM_DIAGRAM):   end;
2054691   +
2054692   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2054693   +drop _4_0 ;
MPRINT(EM_DIAGRAM):   drop _4_0 ;
2054694   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2054695   +   _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
2054696   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2054697   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2054698   +end;
MPRINT(EM_DIAGRAM):   end;
2054699   +else do;
MPRINT(EM_DIAGRAM):   else do;
2054700   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2054701   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2054702   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2054703   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2054704   +      _4_0 = 1;
MPRINT(EM_DIAGRAM):   _4_0 = 1;
2054705   +   end;
MPRINT(EM_DIAGRAM):   end;
2054706   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2054707   +      _4_0 = -1;
MPRINT(EM_DIAGRAM):   _4_0 = -1;
2054708   +   end;
MPRINT(EM_DIAGRAM):   end;
2054709   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2054710   +      _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
2054711   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2054712   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2054713   +   end;
MPRINT(EM_DIAGRAM):   end;
2054714   +end;
MPRINT(EM_DIAGRAM):   end;
2054715   +
2054716   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2054717   +drop _5_0 ;
MPRINT(EM_DIAGRAM):   drop _5_0 ;
2054718   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2054719   +   _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
2054720   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2054721   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2054722   +end;
MPRINT(EM_DIAGRAM):   end;
2054723   +else do;
MPRINT(EM_DIAGRAM):   else do;
2054724   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2054725   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2054726   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2054727   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2054728   +      _5_0 = 1;
MPRINT(EM_DIAGRAM):   _5_0 = 1;
2054729   +   end;
MPRINT(EM_DIAGRAM):   end;
2054730   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2054731   +      _5_0 = -1;
MPRINT(EM_DIAGRAM):   _5_0 = -1;
2054732   +   end;
MPRINT(EM_DIAGRAM):   end;
2054733   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2054734   +      _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
2054735   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2054736   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2054737   +   end;
MPRINT(EM_DIAGRAM):   end;
2054738   +end;
MPRINT(EM_DIAGRAM):   end;
2054739   +
2054740   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2054741   +drop _8_0 _8_1 _8_2 _8_3 ;
MPRINT(EM_DIAGRAM):   drop _8_0 _8_1 _8_2 _8_3 ;
2054742   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2054743   +_8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
2054744   +_8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
2054745   +_8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
2054746   +_8_3 = 0;
MPRINT(EM_DIAGRAM):   _8_3 = 0;
2054747   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2054748   +   _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
2054749   +   _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
2054750   +   _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
2054751   +   _8_3 = .;
MPRINT(EM_DIAGRAM):   _8_3 = .;
2054752   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2054753   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2054754   +end;
MPRINT(EM_DIAGRAM):   end;
2054755   +else do;
MPRINT(EM_DIAGRAM):   else do;
2054756   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2054757   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2054758   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2054759   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2054760   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2054761   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2054762   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2054763   +            _8_0 = 1;
MPRINT(EM_DIAGRAM):   _8_0 = 1;
2054764   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2054765   +         end;
MPRINT(EM_DIAGRAM):   end;
2054766   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2054767   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2054768   +               _8_1 = 1;
MPRINT(EM_DIAGRAM):   _8_1 = 1;
2054769   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2054770   +            end;
MPRINT(EM_DIAGRAM):   end;
2054771   +         end;
MPRINT(EM_DIAGRAM):   end;
2054772   +      end;
MPRINT(EM_DIAGRAM):   end;
2054773   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2054774   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2054775   +            _8_2 = 1;
MPRINT(EM_DIAGRAM):   _8_2 = 1;
2054776   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2054777   +         end;
MPRINT(EM_DIAGRAM):   end;
2054778   +      end;
MPRINT(EM_DIAGRAM):   end;
2054779   +   end;
MPRINT(EM_DIAGRAM):   end;
2054780   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2054781   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2054782   +         _8_3 = 1;
MPRINT(EM_DIAGRAM):   _8_3 = 1;
2054783   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2054784   +      end;
MPRINT(EM_DIAGRAM):   end;
2054785   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2054786   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2054787   +            _8_0 = -1;
MPRINT(EM_DIAGRAM):   _8_0 = -1;
2054788   +            _8_1 = -1;
MPRINT(EM_DIAGRAM):   _8_1 = -1;
2054789   +            _8_2 = -1;
MPRINT(EM_DIAGRAM):   _8_2 = -1;
2054790   +            _8_3 = -1;
MPRINT(EM_DIAGRAM):   _8_3 = -1;
2054791   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2054792   +         end;
MPRINT(EM_DIAGRAM):   end;
2054793   +      end;
MPRINT(EM_DIAGRAM):   end;
2054794   +   end;
MPRINT(EM_DIAGRAM):   end;
2054795   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2054796   +      _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
2054797   +      _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
2054798   +      _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
2054799   +      _8_3 = .;
MPRINT(EM_DIAGRAM):   _8_3 = .;
2054800   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2054801   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2054802   +   end;
MPRINT(EM_DIAGRAM):   end;
2054803   +end;
MPRINT(EM_DIAGRAM):   end;
2054804   +
2054805   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
2054806   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
2054807   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
2054808   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
2054809   +   goto REG10DR1;
MPRINT(EM_DIAGRAM):   goto REG10DR1;
2054810   +end;
MPRINT(EM_DIAGRAM):   end;
2054811   +
2054812   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
2054813   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
2054814   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
2054815   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
2054816   +
2054817   +***  Effect: AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp1 ;
2054818   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
2054819   +_LP0 = _LP0 + (   -0.71107732112007) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.71107732112007) * _TEMP * _1_0;
2054820   +
2054821   +***  Effect: AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp2 ;
2054822   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
2054823   +_LP0 = _LP0 + (   -0.81763295180983) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.81763295180983) * _TEMP * _2_0;
2054824   +
2054825   +***  Effect: AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp3 ;
2054826   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
2054827   +_LP0 = _LP0 + (    -0.8618538514738) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.8618538514738) * _TEMP * _3_0;
2054828   +
2054829   +***  Effect: AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp4 ;
2054830   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
2054831   +_LP0 = _LP0 + (   -0.64997710050937) * _TEMP * _4_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.64997710050937) * _TEMP * _4_0;
2054832   +
2054833   +***  Effect: AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp5 ;
2054834   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
2054835   +_LP0 = _LP0 + (   -0.91699409369659) * _TEMP * _5_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.91699409369659) * _TEMP * _5_0;
2054836   +
2054837   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
2054838   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
2054839   +_LP0 = _LP0 + (    0.00003628120307 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00003628120307 * _TEMP);
2054840   +
2054841   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
2054842   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
2054843   +_LP0 = _LP0 + (    0.09345382071006) * _TEMP * _8_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.09345382071006) * _TEMP * _8_0;
2054844   +_LP0 = _LP0 + (   -0.47894059934485) * _TEMP * _8_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.47894059934485) * _TEMP * _8_1;
2054845   +_LP0 = _LP0 + (    0.46164092141221) * _TEMP * _8_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.46164092141221) * _TEMP * _8_2;
2054846   +_LP0 = _LP0 + (    -0.5078574429985) * _TEMP * _8_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.5078574429985) * _TEMP * _8_3;
2054847   +
2054848   +***  Effect: MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntFishProducts ;
2054849   +_TEMP = MntFishProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntFishProducts ;
2054850   +_LP0 = _LP0 + (   -0.00285470778488 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00285470778488 * _TEMP);
2054851   +
2054852   +***  Effect: MntFruits ;
MPRINT(EM_DIAGRAM):   *** Effect: MntFruits ;
2054853   +_TEMP = MntFruits ;
MPRINT(EM_DIAGRAM):   _TEMP = MntFruits ;
2054854   +_LP0 = _LP0 + (   -0.00481548089585 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00481548089585 * _TEMP);
2054855   +
2054856   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
2054857   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
2054858   +_LP0 = _LP0 + (    0.00485302069895 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00485302069895 * _TEMP);
2054859   +
2054860   +***  Effect: MntWines ;
MPRINT(EM_DIAGRAM):   *** Effect: MntWines ;
2054861   +_TEMP = MntWines ;
MPRINT(EM_DIAGRAM):   _TEMP = MntWines ;
2054862   +_LP0 = _LP0 + (   -0.00184060065513 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00184060065513 * _TEMP);
2054863   +
2054864   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
2054865   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
2054866   +_LP0 = _LP0 + (    0.40015202354101 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.40015202354101 * _TEMP);
2054867   +
2054868   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
2054869   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
2054870   +_LP0 = _LP0 + (    0.39526484909287 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.39526484909287 * _TEMP);
2054871   +
2054872   +***  Effect: NumStorePurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumStorePurchases ;
2054873   +_TEMP = NumStorePurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumStorePurchases ;
2054874   +_LP0 = _LP0 + (   -0.21400418800044 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.21400418800044 * _TEMP);
2054875   +
2054876   +***  Effect: NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebPurchases ;
2054877   +_TEMP = NumWebPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebPurchases ;
2054878   +_LP0 = _LP0 + (    -0.2223953481686 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.2223953481686 * _TEMP);
2054879   +
2054880   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
2054881   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
2054882   +_LP0 = _LP0 + (    0.54388363089232 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.54388363089232 * _TEMP);
2054883   +
2054884   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
2054885   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
2054886   +_LP0 = _LP0 + (   -0.05513564922633 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05513564922633 * _TEMP);
2054887   +
2054888   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
2054889   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
2054890   +_LP0 = _LP0 + (   -0.70674092258187 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.70674092258187 * _TEMP);
2054891   +
2054892   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
2054893   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
2054894   +_P0 = probnorm((   -0.62163391257391) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -0.62163391257391) + _LP0);
2054895   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
2054896   +
2054897   +REG10DR1:
2054898   +
2054899   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG10DR1: *** Residuals;
2054900   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
2054901   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
2054902   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
2054903   +end;
MPRINT(EM_DIAGRAM):   end;
2054904   +else do;
MPRINT(EM_DIAGRAM):   else do;
2054905   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2054906   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2054907   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
2054908   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
2054909   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
2054910   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
2054911   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
2054912   +   end;
MPRINT(EM_DIAGRAM):   end;
2054913   +end;
MPRINT(EM_DIAGRAM):   end;
2054914   +
2054915   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
2054916   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2054917   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2054918   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
2054919   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
2054920   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
2054921   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
2054922   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
2054923   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
2054924   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
2054925   +end;
MPRINT(EM_DIAGRAM):   end;
2054926   +I_DepVar = REG10DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG10DRF[_IY];
2054927   +U_DepVar = REG10DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG10DRU[_IY];
2054928   +
2054929   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
2054930   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
2054931   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
2054932   +* Renaming variables for Reg10;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg10;
2054933   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2054934   +* Renaming Posterior variables for Reg10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg10;
2054935   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2054936   +drop Reg10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg10_P_DepVar1;
2054937   +Reg10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg10_P_DepVar1 = P_DepVar1;
2054938   +drop Reg10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg10_P_DepVar0;
2054939   +Reg10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg10_P_DepVar0 = P_DepVar0;
2054940   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2054941   +* Renaming _WARN_ variable for Reg10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg10;
2054942   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2054943   +length Reg10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg10_WARN_ $4;
2054944   +drop Reg10_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg10_WARN_;
2054945   +Reg10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg10_WARN_ = _WARN_;
2054946   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2054947   +* Ensmbl22: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Scoring Code of model 2 of 7;
2054948   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2054949   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2054950   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
2054951   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2054952   +* NODE: Neural30;
MPRINT(EM_DIAGRAM):   * NODE: Neural30;
2054953   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2054954   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2054955   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2054956   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2054957   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2054958   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2054959   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2054960   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2054961   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2054962   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2054963   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2054964   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2054965   +LENGTH _WARN_ $4
2054966   +      F_DepVar  $ 12
2054967   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2054968   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2054969   +
2054970   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2054971   +
2054972   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2054973   +
2054974   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2054975   +
2054976   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2054977   +
2054978   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2054979   +
2054980   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2054981   +
2054982   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2054983   +
2054984   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2054985   +
2054986   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2054987   +
2054988   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2054989   +
2054990   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2054991   +
2054992   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2054993   +
2054994   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2054995   +
2054996   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2054997   +
2054998   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2054999   +
2055000   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2055001   +
2055002   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2055003   +
2055004   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2055005   +
2055006   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2055007   +
2055008   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2055009   +
2055010   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2055011   +
2055012   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2055013   +
2055014   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2055015   +
2055016   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2055017   +
2055018   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2055019   +
2055020   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2055021   +
2055022   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2055023   +
2055024   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2055025   +
2055026   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2055027   +
2055028   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2055029   +
2055030   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
2055031   +
2055032   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
2055033   +
2055034   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
2055035   +
2055036   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
2055037   +
2055038   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
2055039   +
2055040   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2055041   +
2055042   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2055043   +
2055044   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2055045   +
2055046   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2055047   +
2055048   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2055049   +
2055050   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2055051   +
2055052   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2055053   +
2055054   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2055055   +
2055056   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2055057   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2055058   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2055059   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2055060   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2055061   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2055062   +end;
MPRINT(EM_DIAGRAM):   end;
2055063   +else do;
MPRINT(EM_DIAGRAM):   else do;
2055064   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2055065   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2055066   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2055067   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2055068   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2055069   +   end;
MPRINT(EM_DIAGRAM):   end;
2055070   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2055071   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2055072   +   end;
MPRINT(EM_DIAGRAM):   end;
2055073   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2055074   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2055075   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2055076   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2055077   +   end;
MPRINT(EM_DIAGRAM):   end;
2055078   +end;
MPRINT(EM_DIAGRAM):   end;
2055079   +
2055080   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2055081   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2055082   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2055083   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2055084   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2055085   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2055086   +end;
MPRINT(EM_DIAGRAM):   end;
2055087   +else do;
MPRINT(EM_DIAGRAM):   else do;
2055088   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2055089   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2055090   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2055091   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2055092   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2055093   +   end;
MPRINT(EM_DIAGRAM):   end;
2055094   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2055095   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2055096   +   end;
MPRINT(EM_DIAGRAM):   end;
2055097   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2055098   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2055099   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2055100   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2055101   +   end;
MPRINT(EM_DIAGRAM):   end;
2055102   +end;
MPRINT(EM_DIAGRAM):   end;
2055103   +
2055104   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2055105   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2055106   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2055107   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2055108   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2055109   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2055110   +end;
MPRINT(EM_DIAGRAM):   end;
2055111   +else do;
MPRINT(EM_DIAGRAM):   else do;
2055112   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2055113   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2055114   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2055115   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2055116   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2055117   +   end;
MPRINT(EM_DIAGRAM):   end;
2055118   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2055119   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2055120   +   end;
MPRINT(EM_DIAGRAM):   end;
2055121   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2055122   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2055123   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2055124   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2055125   +   end;
MPRINT(EM_DIAGRAM):   end;
2055126   +end;
MPRINT(EM_DIAGRAM):   end;
2055127   +
2055128   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2055129   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2055130   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2055131   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2055132   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2055133   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2055134   +end;
MPRINT(EM_DIAGRAM):   end;
2055135   +else do;
MPRINT(EM_DIAGRAM):   else do;
2055136   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2055137   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2055138   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2055139   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2055140   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2055141   +   end;
MPRINT(EM_DIAGRAM):   end;
2055142   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2055143   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2055144   +   end;
MPRINT(EM_DIAGRAM):   end;
2055145   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2055146   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2055147   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2055148   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2055149   +   end;
MPRINT(EM_DIAGRAM):   end;
2055150   +end;
MPRINT(EM_DIAGRAM):   end;
2055151   +
2055152   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2055153   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2055154   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2055155   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2055156   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2055157   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2055158   +end;
MPRINT(EM_DIAGRAM):   end;
2055159   +else do;
MPRINT(EM_DIAGRAM):   else do;
2055160   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2055161   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2055162   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2055163   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2055164   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2055165   +   end;
MPRINT(EM_DIAGRAM):   end;
2055166   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2055167   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2055168   +   end;
MPRINT(EM_DIAGRAM):   end;
2055169   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2055170   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2055171   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2055172   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2055173   +   end;
MPRINT(EM_DIAGRAM):   end;
2055174   +end;
MPRINT(EM_DIAGRAM):   end;
2055175   +
2055176   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2055177   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2055178   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2055179   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2055180   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2055181   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2055182   +end;
MPRINT(EM_DIAGRAM):   end;
2055183   +else do;
MPRINT(EM_DIAGRAM):   else do;
2055184   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2055185   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2055186   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2055187   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2055188   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2055189   +   end;
MPRINT(EM_DIAGRAM):   end;
2055190   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2055191   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2055192   +   end;
MPRINT(EM_DIAGRAM):   end;
2055193   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2055194   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2055195   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2055196   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2055197   +   end;
MPRINT(EM_DIAGRAM):   end;
2055198   +end;
MPRINT(EM_DIAGRAM):   end;
2055199   +
2055200   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2055201   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2055202   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2055203   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2055204   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2055205   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2055206   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2055207   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2055208   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2055209   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2055210   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2055211   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2055212   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2055213   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2055214   +end;
MPRINT(EM_DIAGRAM):   end;
2055215   +else do;
MPRINT(EM_DIAGRAM):   else do;
2055216   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2055217   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2055218   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2055219   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2055220   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2055221   +   end;
MPRINT(EM_DIAGRAM):   end;
2055222   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2055223   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2055224   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2055225   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2055226   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2055227   +   end;
MPRINT(EM_DIAGRAM):   end;
2055228   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2055229   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2055230   +   end;
MPRINT(EM_DIAGRAM):   end;
2055231   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2055232   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2055233   +   end;
MPRINT(EM_DIAGRAM):   end;
2055234   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2055235   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2055236   +   end;
MPRINT(EM_DIAGRAM):   end;
2055237   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2055238   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2055239   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2055240   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2055241   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2055242   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2055243   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2055244   +   end;
MPRINT(EM_DIAGRAM):   end;
2055245   +end;
MPRINT(EM_DIAGRAM):   end;
2055246   +
2055247   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2055248   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2055249   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2055250   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2055251   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2055252   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2055253   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2055254   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2055255   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2055256   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2055257   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2055258   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2055259   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2055260   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2055261   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2055262   +end;
MPRINT(EM_DIAGRAM):   end;
2055263   +else do;
MPRINT(EM_DIAGRAM):   else do;
2055264   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2055265   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2055266   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2055267   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2055268   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2055269   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2055270   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2055271   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2055272   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2055273   +         end;
MPRINT(EM_DIAGRAM):   end;
2055274   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2055275   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2055276   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2055277   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2055278   +            end;
MPRINT(EM_DIAGRAM):   end;
2055279   +         end;
MPRINT(EM_DIAGRAM):   end;
2055280   +      end;
MPRINT(EM_DIAGRAM):   end;
2055281   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2055282   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2055283   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2055284   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2055285   +         end;
MPRINT(EM_DIAGRAM):   end;
2055286   +      end;
MPRINT(EM_DIAGRAM):   end;
2055287   +   end;
MPRINT(EM_DIAGRAM):   end;
2055288   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2055289   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2055290   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2055291   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2055292   +      end;
MPRINT(EM_DIAGRAM):   end;
2055293   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2055294   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2055295   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2055296   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2055297   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2055298   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2055299   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2055300   +         end;
MPRINT(EM_DIAGRAM):   end;
2055301   +      end;
MPRINT(EM_DIAGRAM):   end;
2055302   +   end;
MPRINT(EM_DIAGRAM):   end;
2055303   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2055304   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2055305   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2055306   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2055307   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2055308   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2055309   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2055310   +   end;
MPRINT(EM_DIAGRAM):   end;
2055311   +end;
MPRINT(EM_DIAGRAM):   end;
2055312   +
2055313   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2055314   +*** Checking missing input Interval
2055315   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2055316   +
2055317   +IF NMISS(
2055318   +   Income ,
2055319   +   Kidhome ,
2055320   +   MntFishProducts ,
2055321   +   MntFruits ,
2055322   +   MntGoldProds ,
2055323   +   MntMeatProducts ,
2055324   +   MntSweetProducts ,
2055325   +   MntWines ,
2055326   +   NumCatalogPurchases ,
2055327   +   NumDealsPurchases ,
2055328   +   NumStorePurchases ,
2055329   +   NumWebPurchases ,
2055330   +   NumWebVisitsMonth ,
2055331   +   Recency ,
2055332   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
2055333   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2055334   +
2055335   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2055336   +END;
MPRINT(EM_DIAGRAM):   END;
2055337   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2055338   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2055339   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2055340   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2055341   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2055342   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2055343   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2055344   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2055345   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2055346   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2055347   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2055348   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2055349   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2055350   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2055351   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2055352   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2055353   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2055354   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2055355   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2055356   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2055357   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2055358   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2055359   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2055360   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2055361   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2055362   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2055363   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2055364   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2055365   +END;
MPRINT(EM_DIAGRAM):   END;
2055366   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2055367   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2055368   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2055369   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2055370   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2055371   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2055372   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2055373   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2055374   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2055375   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2055376   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2055377   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2055378   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2055379   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2055380   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2055381   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2055382   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2055383   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2055384   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2055385   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2055386   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2055387   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2055388   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2055389   +   ELSE S_NumCatalogPurchases
2055390   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2055391   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2055392   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2055393   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2055394   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2055395   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2055396   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2055397   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2055398   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2055399   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2055400   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2055401   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2055402   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2055403   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2055404   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2055405   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2055406   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2055407   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2055408   +END;
MPRINT(EM_DIAGRAM):   END;
2055409   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2055410   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
2055411   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2055412   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2055413   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
2055414   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2055415   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2055416   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2055417   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2055418   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2055419   +   H11  =    -0.59781928082243 * S_Income  +     0.49830142312288 * S_Kidhome
2055420   +          +    -0.00045024466632 * S_MntFishProducts
2055421   +          +    -0.22421712710333 * S_MntFruits  +    -0.19010144853469 *
2055422   +        S_MntGoldProds  +    -0.53373773623953 * S_MntMeatProducts
2055423   +          +     0.17506402203495 * S_MntSweetProducts
2055424   +          +    -0.28551398649672 * S_MntWines  +       0.019870944777 *
2055425   +        S_NumCatalogPurchases  +     0.03537776181533 * S_NumDealsPurchases
2055426   +          +     0.05580468715403 * S_NumStorePurchases
2055427   +          +    -0.29131611132704 * S_NumWebPurchases
2055428   +          +    -0.40690084025802 * S_NumWebVisitsMonth
2055429   +          +     0.48640195058901 * S_Recency  +     0.31820890239661 *
2055430   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.59781928082243 * S_Income + 0.49830142312288 * S_Kidhome +
-0.00045024466632 * S_MntFishProducts + -0.22421712710333 * S_MntFruits + -0.19010144853469 *
S_MntGoldProds + -0.53373773623953 * S_MntMeatProducts + 0.17506402203495 * S_MntSweetProducts
+ -0.28551398649672 * S_MntWines + 0.019870944777 * S_NumCatalogPurchases + 0.03537776181533 *
S_NumDealsPurchases + 0.05580468715403 * S_NumStorePurchases + -0.29131611132704 *
S_NumWebPurchases + -0.40690084025802 * S_NumWebVisitsMonth + 0.48640195058901 * S_Recency +
0.31820890239661 * S_Teenhome ;
2055431   +   H12  =    -0.41871753512335 * S_Income  +      0.6025072461821 * S_Kidhome
2055432   +          +    -0.03132724937716 * S_MntFishProducts
2055433   +          +     0.19114182835046 * S_MntFruits  +     0.13483463809539 *
2055434   +        S_MntGoldProds  +    -0.63593603749443 * S_MntMeatProducts
2055435   +          +    -0.07569302401223 * S_MntSweetProducts
2055436   +          +     0.67050112032753 * S_MntWines  +    -0.23159243932208 *
2055437   +        S_NumCatalogPurchases  +    -0.07183698407409 * S_NumDealsPurchases
2055438   +          +     0.54619681114623 * S_NumStorePurchases
2055439   +          +     0.44325129671249 * S_NumWebPurchases
2055440   +          +    -1.25054401670605 * S_NumWebVisitsMonth
2055441   +          +      1.2376290916151 * S_Recency  +     0.43747371517287 *
2055442   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.41871753512335 * S_Income + 0.6025072461821 * S_Kidhome +
-0.03132724937716 * S_MntFishProducts + 0.19114182835046 * S_MntFruits + 0.13483463809539 *
S_MntGoldProds + -0.63593603749443 * S_MntMeatProducts + -0.07569302401223 *
S_MntSweetProducts + 0.67050112032753 * S_MntWines + -0.23159243932208 * S_NumCatalogPurchases
+ -0.07183698407409 * S_NumDealsPurchases + 0.54619681114623 * S_NumStorePurchases +
0.44325129671249 * S_NumWebPurchases + -1.25054401670605 * S_NumWebVisitsMonth +
1.2376290916151 * S_Recency + 0.43747371517287 * S_Teenhome ;
2055443   +   H13  =      0.0713579189325 * S_Income  +    -0.05759612462349 * S_Kidhome
2055444   +          +     0.07631777381832 * S_MntFishProducts
2055445   +          +    -0.00387785552441 * S_MntFruits  +    -0.21868916314192 *
2055446   +        S_MntGoldProds  +       0.072623883197 * S_MntMeatProducts
2055447   +          +     0.12637946833766 * S_MntSweetProducts
2055448   +          +    -0.37981663841124 * S_MntWines  +    -0.89958525403162 *
2055449   +        S_NumCatalogPurchases  +    -0.17471885937598 * S_NumDealsPurchases
2055450   +          +     0.15845618359126 * S_NumStorePurchases
2055451   +          +    -0.33296932705082 * S_NumWebPurchases
2055452   +          +      0.0260072296349 * S_NumWebVisitsMonth
2055453   +          +     0.02544749712977 * S_Recency  +    -0.17381561661022 *
2055454   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.0713579189325 * S_Income + -0.05759612462349 * S_Kidhome +
0.07631777381832 * S_MntFishProducts + -0.00387785552441 * S_MntFruits + -0.21868916314192 *
S_MntGoldProds + 0.072623883197 * S_MntMeatProducts + 0.12637946833766 * S_MntSweetProducts +
-0.37981663841124 * S_MntWines + -0.89958525403162 * S_NumCatalogPurchases + -0.17471885937598
* S_NumDealsPurchases + 0.15845618359126 * S_NumStorePurchases + -0.33296932705082 *
S_NumWebPurchases + 0.0260072296349 * S_NumWebVisitsMonth + 0.02544749712977 * S_Recency +
-0.17381561661022 * S_Teenhome ;
2055455   +   H14  =    -0.47498613710851 * S_Income  +     0.09339198401437 * S_Kidhome
2055456   +          +    -0.13642352619174 * S_MntFishProducts
2055457   +          +     0.27167245582117 * S_MntFruits  +    -0.00579747559996 *
2055458   +        S_MntGoldProds  +     0.31591387319577 * S_MntMeatProducts
2055459   +          +     0.14125815807238 * S_MntSweetProducts
2055460   +          +     0.07862916790983 * S_MntWines  +    -0.58905358997534 *
2055461   +        S_NumCatalogPurchases  +     -0.5574069633995 * S_NumDealsPurchases
2055462   +          +     0.19718828261526 * S_NumStorePurchases
2055463   +          +    -0.24156925391919 * S_NumWebPurchases
2055464   +          +    -0.25711078938749 * S_NumWebVisitsMonth
2055465   +          +     0.38883063223812 * S_Recency  +     -0.2396731334184 *
2055466   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.47498613710851 * S_Income + 0.09339198401437 * S_Kidhome +
-0.13642352619174 * S_MntFishProducts + 0.27167245582117 * S_MntFruits + -0.00579747559996 *
S_MntGoldProds + 0.31591387319577 * S_MntMeatProducts + 0.14125815807238 * S_MntSweetProducts
+ 0.07862916790983 * S_MntWines + -0.58905358997534 * S_NumCatalogPurchases + -0.5574069633995
* S_NumDealsPurchases + 0.19718828261526 * S_NumStorePurchases + -0.24156925391919 *
S_NumWebPurchases + -0.25711078938749 * S_NumWebVisitsMonth + 0.38883063223812 * S_Recency +
-0.2396731334184 * S_Teenhome ;
2055467   +   H15  =     0.24624924979609 * S_Income  +    -0.37052106312109 * S_Kidhome
2055468   +          +     0.13579628643404 * S_MntFishProducts
2055469   +          +    -0.05263868911164 * S_MntFruits  +    -0.01504675049991 *
2055470   +        S_MntGoldProds  +     -0.4202277804998 * S_MntMeatProducts
2055471   +          +    -0.01039299374426 * S_MntSweetProducts
2055472   +          +     0.71197420459135 * S_MntWines  +    -0.35973505575029 *
2055473   +        S_NumCatalogPurchases  +     -0.4415445481482 * S_NumDealsPurchases
2055474   +          +     0.58897740652611 * S_NumStorePurchases
2055475   +          +     0.24564485851062 * S_NumWebPurchases
2055476   +          +    -0.13976320243555 * S_NumWebVisitsMonth
2055477   +          +      0.1199367613063 * S_Recency  +    -0.15283161418313 *
2055478   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.24624924979609 * S_Income + -0.37052106312109 * S_Kidhome +
0.13579628643404 * S_MntFishProducts + -0.05263868911164 * S_MntFruits + -0.01504675049991 *
S_MntGoldProds + -0.4202277804998 * S_MntMeatProducts + -0.01039299374426 * S_MntSweetProducts
+ 0.71197420459135 * S_MntWines + -0.35973505575029 * S_NumCatalogPurchases + -0.4415445481482
* S_NumDealsPurchases + 0.58897740652611 * S_NumStorePurchases + 0.24564485851062 *
S_NumWebPurchases + -0.13976320243555 * S_NumWebVisitsMonth + 0.1199367613063 * S_Recency +
-0.15283161418313 * S_Teenhome ;
2055479   +   H16  =     0.23493799758749 * S_Income  +     0.07038278079069 * S_Kidhome
2055480   +          +    -0.45448768538367 * S_MntFishProducts
2055481   +          +     0.02622380709004 * S_MntFruits  +     0.14726698184115 *
2055482   +        S_MntGoldProds  +     0.65760183569767 * S_MntMeatProducts
2055483   +          +    -0.16936256277023 * S_MntSweetProducts
2055484   +          +    -0.40647066866305 * S_MntWines  +     0.99645493491726 *
2055485   +        S_NumCatalogPurchases  +     0.65587239961358 * S_NumDealsPurchases
2055486   +          +    -0.22309716855774 * S_NumStorePurchases
2055487   +          +    -0.61204529910842 * S_NumWebPurchases
2055488   +          +     0.43742228867615 * S_NumWebVisitsMonth
2055489   +          +    -0.56099034256092 * S_Recency  +     -0.2445351671148 *
2055490   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = 0.23493799758749 * S_Income + 0.07038278079069 * S_Kidhome +
-0.45448768538367 * S_MntFishProducts + 0.02622380709004 * S_MntFruits + 0.14726698184115 *
S_MntGoldProds + 0.65760183569767 * S_MntMeatProducts + -0.16936256277023 * S_MntSweetProducts
+ -0.40647066866305 * S_MntWines + 0.99645493491726 * S_NumCatalogPurchases + 0.65587239961358
* S_NumDealsPurchases + -0.22309716855774 * S_NumStorePurchases + -0.61204529910842 *
S_NumWebPurchases + 0.43742228867615 * S_NumWebVisitsMonth + -0.56099034256092 * S_Recency +
-0.2445351671148 * S_Teenhome ;
2055491   +   H17  =    -0.00107702057163 * S_Income  +     0.25116135719972 * S_Kidhome
2055492   +          +    -0.04540308470858 * S_MntFishProducts
2055493   +          +        0.21487241577 * S_MntFruits  +    -0.12914913547414 *
2055494   +        S_MntGoldProds  +    -0.04149021191395 * S_MntMeatProducts
2055495   +          +     0.02853521979141 * S_MntSweetProducts
2055496   +          +     -0.2435805887418 * S_MntWines  +    -0.04509621661407 *
2055497   +        S_NumCatalogPurchases  +    -0.26492036720429 * S_NumDealsPurchases
2055498   +          +     -0.3299561248944 * S_NumStorePurchases
2055499   +          +    -0.09806597448224 * S_NumWebPurchases
2055500   +          +      0.0427056351245 * S_NumWebVisitsMonth
2055501   +          +     0.03953235628202 * S_Recency  +    -0.11317308767713 *
2055502   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = -0.00107702057163 * S_Income + 0.25116135719972 * S_Kidhome +
-0.04540308470858 * S_MntFishProducts + 0.21487241577 * S_MntFruits + -0.12914913547414 *
S_MntGoldProds + -0.04149021191395 * S_MntMeatProducts + 0.02853521979141 * S_MntSweetProducts
+ -0.2435805887418 * S_MntWines + -0.04509621661407 * S_NumCatalogPurchases +
-0.26492036720429 * S_NumDealsPurchases + -0.3299561248944 * S_NumStorePurchases +
-0.09806597448224 * S_NumWebPurchases + 0.0427056351245 * S_NumWebVisitsMonth +
0.03953235628202 * S_Recency + -0.11317308767713 * S_Teenhome ;
2055503   +   H11  = H11  +     0.50033674561531 * AcceptedCmp10
2055504   +          +    -0.02275693117286 * AcceptedCmp20  +     0.31338891533156 *
2055505   +        AcceptedCmp30  +      0.3901248845706 * AcceptedCmp40
2055506   +          +     0.44314358358111 * AcceptedCmp50  +    -0.20444060864498 *
2055507   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.50033674561531 * AcceptedCmp10 + -0.02275693117286 *
AcceptedCmp20 + 0.31338891533156 * AcceptedCmp30 + 0.3901248845706 * AcceptedCmp40 +
0.44314358358111 * AcceptedCmp50 + -0.20444060864498 * Complain0 ;
2055508   +   H12  = H12  +     0.30103938822692 * AcceptedCmp10
2055509   +          +     0.54298746723422 * AcceptedCmp20  +     0.50401040035525 *
2055510   +        AcceptedCmp30  +     0.43447710825306 * AcceptedCmp40
2055511   +          +     0.60794421030027 * AcceptedCmp50  +    -0.28114274461319 *
2055512   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.30103938822692 * AcceptedCmp10 + 0.54298746723422 *
AcceptedCmp20 + 0.50401040035525 * AcceptedCmp30 + 0.43447710825306 * AcceptedCmp40 +
0.60794421030027 * AcceptedCmp50 + -0.28114274461319 * Complain0 ;
2055513   +   H13  = H13  +     -0.1890212967757 * AcceptedCmp10
2055514   +          +    -0.11487406996391 * AcceptedCmp20  +    -0.22740618754863 *
2055515   +        AcceptedCmp30  +      0.2354510231918 * AcceptedCmp40
2055516   +          +    -0.14327434649067 * AcceptedCmp50  +    -0.17839080850556 *
2055517   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.1890212967757 * AcceptedCmp10 + -0.11487406996391 *
AcceptedCmp20 + -0.22740618754863 * AcceptedCmp30 + 0.2354510231918 * AcceptedCmp40 +
-0.14327434649067 * AcceptedCmp50 + -0.17839080850556 * Complain0 ;
2055518   +   H14  = H14  +    -0.28194187416219 * AcceptedCmp10
2055519   +          +     0.11732089254624 * AcceptedCmp20  +     0.34964075536156 *
2055520   +        AcceptedCmp30  +     0.05772396286169 * AcceptedCmp40
2055521   +          +    -0.08671748651826 * AcceptedCmp50  +      0.0629540108407 *
2055522   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.28194187416219 * AcceptedCmp10 + 0.11732089254624 *
AcceptedCmp20 + 0.34964075536156 * AcceptedCmp30 + 0.05772396286169 * AcceptedCmp40 +
-0.08671748651826 * AcceptedCmp50 + 0.0629540108407 * Complain0 ;
2055523   +   H15  = H15  +    -0.01058257322803 * AcceptedCmp10
2055524   +          +     0.26755355732587 * AcceptedCmp20  +     0.40856661734724 *
2055525   +        AcceptedCmp30  +     0.02977117354989 * AcceptedCmp40
2055526   +          +       0.073655049734 * AcceptedCmp50  +     0.25562048226555 *
2055527   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.01058257322803 * AcceptedCmp10 + 0.26755355732587 *
AcceptedCmp20 + 0.40856661734724 * AcceptedCmp30 + 0.02977117354989 * AcceptedCmp40 +
0.073655049734 * AcceptedCmp50 + 0.25562048226555 * Complain0 ;
2055528   +   H16  = H16  +    -0.65590117532084 * AcceptedCmp10
2055529   +          +    -0.31314161223579 * AcceptedCmp20  +    -0.18863165264573 *
2055530   +        AcceptedCmp30  +    -0.18832338914237 * AcceptedCmp40
2055531   +          +    -0.53765749471786 * AcceptedCmp50  +     0.17409401877513 *
2055532   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.65590117532084 * AcceptedCmp10 + -0.31314161223579 *
AcceptedCmp20 + -0.18863165264573 * AcceptedCmp30 + -0.18832338914237 * AcceptedCmp40 +
-0.53765749471786 * AcceptedCmp50 + 0.17409401877513 * Complain0 ;
2055533   +   H17  = H17  +    -0.42253231673718 * AcceptedCmp10
2055534   +          +    -0.40954345229557 * AcceptedCmp20  +    -0.30577523080786 *
2055535   +        AcceptedCmp30  +    -0.22396670899437 * AcceptedCmp40
2055536   +          +     0.05757251451004 * AcceptedCmp50  +     0.07813950542487 *
2055537   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.42253231673718 * AcceptedCmp10 + -0.40954345229557 *
AcceptedCmp20 + -0.30577523080786 * AcceptedCmp30 + -0.22396670899437 * AcceptedCmp40 +
0.05757251451004 * AcceptedCmp50 + 0.07813950542487 * Complain0 ;
2055538   +   H11  = H11  +    -0.14483542022901 * Education2n_Cycle
2055539   +          +     0.32176647745332 * EducationBasic  +     0.00900796305072 *
2055540   +        EducationGraduation  +    -0.00243484910123 * EducationMaster
2055541   +          +    -0.22074132229211 * Marital_StatusDivorced
2055542   +          +     0.70282742634901 * Marital_StatusMarried
2055543   +          +     -0.5926244797961 * Marital_StatusSingle
2055544   +          +     0.21342221410999 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.14483542022901 * Education2n_Cycle + 0.32176647745332 *
EducationBasic + 0.00900796305072 * EducationGraduation + -0.00243484910123 * EducationMaster
+ -0.22074132229211 * Marital_StatusDivorced + 0.70282742634901 * Marital_StatusMarried +
-0.5926244797961 * Marital_StatusSingle + 0.21342221410999 * Marital_StatusTogether ;
2055545   +   H12  = H12  +    -0.10242932200247 * Education2n_Cycle
2055546   +          +     0.34937926721317 * EducationBasic  +    -0.20395479511872 *
2055547   +        EducationGraduation  +     0.31210327899339 * EducationMaster
2055548   +          +    -0.46376392175295 * Marital_StatusDivorced
2055549   +          +       0.589453579718 * Marital_StatusMarried
2055550   +          +    -0.45342174978481 * Marital_StatusSingle
2055551   +          +     0.70517120763557 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.10242932200247 * Education2n_Cycle + 0.34937926721317 *
EducationBasic + -0.20395479511872 * EducationGraduation + 0.31210327899339 * EducationMaster
+ -0.46376392175295 * Marital_StatusDivorced + 0.589453579718 * Marital_StatusMarried +
-0.45342174978481 * Marital_StatusSingle + 0.70517120763557 * Marital_StatusTogether ;
2055552   +   H13  = H13  +     0.24858755570324 * Education2n_Cycle
2055553   +          +     0.07360039359386 * EducationBasic  +    -0.42563056620078 *
2055554   +        EducationGraduation  +    -0.25970840250323 * EducationMaster
2055555   +          +     0.26981972015482 * Marital_StatusDivorced
2055556   +          +    -0.01707364864139 * Marital_StatusMarried
2055557   +          +     0.38646060840009 * Marital_StatusSingle
2055558   +          +     0.19694047086013 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.24858755570324 * Education2n_Cycle + 0.07360039359386 *
EducationBasic + -0.42563056620078 * EducationGraduation + -0.25970840250323 * EducationMaster
+ 0.26981972015482 * Marital_StatusDivorced + -0.01707364864139 * Marital_StatusMarried +
0.38646060840009 * Marital_StatusSingle + 0.19694047086013 * Marital_StatusTogether ;
2055559   +   H14  = H14  +     0.22577522124265 * Education2n_Cycle
2055560   +          +     0.04183136697557 * EducationBasic  +    -0.27725331198825 *
2055561   +        EducationGraduation  +     0.15709188532123 * EducationMaster
2055562   +          +    -0.01933675094701 * Marital_StatusDivorced
2055563   +          +     0.52969577969434 * Marital_StatusMarried
2055564   +          +      -0.348697714569 * Marital_StatusSingle
2055565   +          +      0.5020342481888 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.22577522124265 * Education2n_Cycle + 0.04183136697557 *
EducationBasic + -0.27725331198825 * EducationGraduation + 0.15709188532123 * EducationMaster
+ -0.01933675094701 * Marital_StatusDivorced + 0.52969577969434 * Marital_StatusMarried +
-0.348697714569 * Marital_StatusSingle + 0.5020342481888 * Marital_StatusTogether ;
2055566   +   H15  = H15  +     0.04488332711225 * Education2n_Cycle
2055567   +          +     0.01911097443907 * EducationBasic  +    -0.11699443624996 *
2055568   +        EducationGraduation  +    -0.07291393566738 * EducationMaster
2055569   +          +    -0.04665146013984 * Marital_StatusDivorced
2055570   +          +      -0.586219175167 * Marital_StatusMarried
2055571   +          +     0.55713543417712 * Marital_StatusSingle
2055572   +          +    -0.42208959885332 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.04488332711225 * Education2n_Cycle + 0.01911097443907 *
EducationBasic + -0.11699443624996 * EducationGraduation + -0.07291393566738 * EducationMaster
+ -0.04665146013984 * Marital_StatusDivorced + -0.586219175167 * Marital_StatusMarried +
0.55713543417712 * Marital_StatusSingle + -0.42208959885332 * Marital_StatusTogether ;
2055573   +   H16  = H16  +     0.09174117861154 * Education2n_Cycle
2055574   +          +     -0.1378945860659 * EducationBasic  +     -0.0728635369665 *
2055575   +        EducationGraduation  +     0.29860714824438 * EducationMaster
2055576   +          +    -0.05632171154347 * Marital_StatusDivorced
2055577   +          +     0.03215547861665 * Marital_StatusMarried
2055578   +          +     0.16870781172538 * Marital_StatusSingle
2055579   +          +    -0.04883314322676 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.09174117861154 * Education2n_Cycle + -0.1378945860659 *
EducationBasic + -0.0728635369665 * EducationGraduation + 0.29860714824438 * EducationMaster +
-0.05632171154347 * Marital_StatusDivorced + 0.03215547861665 * Marital_StatusMarried +
0.16870781172538 * Marital_StatusSingle + -0.04883314322676 * Marital_StatusTogether ;
2055580   +   H17  = H17  +    -0.00343694558117 * Education2n_Cycle
2055581   +          +     0.32636427598227 * EducationBasic  +     0.16259654486833 *
2055582   +        EducationGraduation  +    -0.00424229454859 * EducationMaster
2055583   +          +    -0.21765415159355 * Marital_StatusDivorced
2055584   +          +     -0.0542857922075 * Marital_StatusMarried
2055585   +          +     0.20679907454933 * Marital_StatusSingle
2055586   +          +     0.14976519710725 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.00343694558117 * Education2n_Cycle + 0.32636427598227 *
EducationBasic + 0.16259654486833 * EducationGraduation + -0.00424229454859 * EducationMaster
+ -0.21765415159355 * Marital_StatusDivorced + -0.0542857922075 * Marital_StatusMarried +
0.20679907454933 * Marital_StatusSingle + 0.14976519710725 * Marital_StatusTogether ;
2055587   +   H11  =     0.92977078759503 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.92977078759503 + H11 ;
2055588   +   H12  =    -0.97970409253156 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.97970409253156 + H12 ;
2055589   +   H13  =     -0.5001144792196 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.5001144792196 + H13 ;
2055590   +   H14  =    -0.90715840862541 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.90715840862541 + H14 ;
2055591   +   H15  =     0.87046153389036 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.87046153389036 + H15 ;
2055592   +   H16  =     0.49066122767086 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 0.49066122767086 + H16 ;
2055593   +   H17  =    -1.05949763460293 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.05949763460293 + H17 ;
2055594   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2055595   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2055596   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
2055597   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
2055598   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
2055599   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
2055600   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
2055601   +END;
MPRINT(EM_DIAGRAM):   END;
2055602   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2055603   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2055604   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2055605   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
2055606   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
2055607   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
2055608   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
2055609   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
2055610   +END;
MPRINT(EM_DIAGRAM):   END;
2055611   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2055612   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2055613   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2055614   +
2055615   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2055616   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2055617   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2055618   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2055619   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2055620   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2055621   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2055622   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2055623   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2055624   +end;
MPRINT(EM_DIAGRAM):   end;
2055625   +else do;
MPRINT(EM_DIAGRAM):   else do;
2055626   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2055627   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2055628   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2055629   +   end;
MPRINT(EM_DIAGRAM):   end;
2055630   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2055631   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2055632   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2055633   +   end;
MPRINT(EM_DIAGRAM):   end;
2055634   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2055635   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2055636   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2055637   +   end;
MPRINT(EM_DIAGRAM):   end;
2055638   +end;
MPRINT(EM_DIAGRAM):   end;
2055639   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2055640   +   P_DepVar1  =    -2.32998401250848 * H11  +     -3.2074078511991 * H12
2055641   +          +    -0.69549988605443 * H13  +    -1.74950789108762 * H14
2055642   +          +    -1.74013772071344 * H15  +     2.65306089869015 * H16
2055643   +          +     0.03700459000906 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.32998401250848 * H11 + -3.2074078511991 * H12 +
-0.69549988605443 * H13 + -1.74950789108762 * H14 + -1.74013772071344 * H15 + 2.65306089869015
* H16 + 0.03700459000906 * H17 ;
2055644   +   P_DepVar1  =    -1.51229898726716 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.51229898726716 + P_DepVar1 ;
2055645   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2055646   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2055647   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2055648   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2055649   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2055650   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2055651   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2055652   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2055653   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2055654   +END;
MPRINT(EM_DIAGRAM):   END;
2055655   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2055656   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2055657   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2055658   +END;
MPRINT(EM_DIAGRAM):   END;
2055659   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2055660   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2055661   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2055662   +END;
MPRINT(EM_DIAGRAM):   END;
2055663   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2055664   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2055665   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2055666   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2055667   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2055668   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2055669   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2055670   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2055671   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2055672   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2055673   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2055674   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2055675   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2055676   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2055677   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2055678   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2055679   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2055680   +END;
MPRINT(EM_DIAGRAM):   END;
2055681   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2055682   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2055683   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2055684   +drop
2055685   +H11
2055686   +H12
2055687   +H13
2055688   +H14
2055689   +H15
2055690   +H16
2055691   +H17
2055692   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
2055693   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2055694   +* Renaming variables for Neural30;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural30;
2055695   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2055696   +* Renaming Posterior variables for Neural30;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural30;
2055697   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2055698   +drop Neural30_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural30_P_DepVar1;
2055699   +Neural30_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural30_P_DepVar1 = P_DepVar1;
2055700   +drop Neural30_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural30_P_DepVar0;
2055701   +Neural30_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural30_P_DepVar0 = P_DepVar0;
2055702   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2055703   +* Renaming _WARN_ variable for Neural30;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural30;
2055704   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2055705   +length Neural30_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural30_WARN_ $4;
2055706   +drop Neural30_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural30_WARN_;
2055707   +Neural30_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural30_WARN_ = _WARN_;
2055708   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2055709   +* Ensmbl22: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Scoring Code of model 3 of 7;
2055710   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2055711   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2055712   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
2055713   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2055714   +* NODE: Neural35;
MPRINT(EM_DIAGRAM):   * NODE: Neural35;
2055715   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2055716   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2055717   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2055718   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2055719   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2055720   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2055721   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2055722   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2055723   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2055724   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2055725   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2055726   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2055727   +LENGTH _WARN_ $4
2055728   +      F_DepVar  $ 12
2055729   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2055730   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2055731   +
2055732   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2055733   +
2055734   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2055735   +
2055736   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2055737   +
2055738   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2055739   +
2055740   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2055741   +
2055742   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2055743   +
2055744   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2055745   +
2055746   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2055747   +
2055748   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2055749   +
2055750   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2055751   +
2055752   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2055753   +
2055754   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2055755   +
2055756   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2055757   +
2055758   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2055759   +
2055760   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2055761   +
2055762   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2055763   +
2055764   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2055765   +
2055766   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2055767   +
2055768   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2055769   +
2055770   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2055771   +
2055772   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2055773   +
2055774   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2055775   +
2055776   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2055777   +
2055778   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2055779   +
2055780   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2055781   +
2055782   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2055783   +
2055784   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2055785   +
2055786   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2055787   +
2055788   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2055789   +
2055790   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2055791   +
2055792   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
2055793   +
2055794   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
2055795   +
2055796   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
2055797   +
2055798   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
2055799   +
2055800   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2055801   +
2055802   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2055803   +
2055804   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2055805   +
2055806   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2055807   +
2055808   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2055809   +
2055810   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2055811   +
2055812   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2055813   +
2055814   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2055815   +
2055816   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2055817   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2055818   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2055819   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2055820   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2055821   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2055822   +end;
MPRINT(EM_DIAGRAM):   end;
2055823   +else do;
MPRINT(EM_DIAGRAM):   else do;
2055824   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2055825   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2055826   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2055827   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2055828   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2055829   +   end;
MPRINT(EM_DIAGRAM):   end;
2055830   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2055831   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2055832   +   end;
MPRINT(EM_DIAGRAM):   end;
2055833   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2055834   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2055835   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2055836   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2055837   +   end;
MPRINT(EM_DIAGRAM):   end;
2055838   +end;
MPRINT(EM_DIAGRAM):   end;
2055839   +
2055840   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2055841   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2055842   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2055843   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2055844   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2055845   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2055846   +end;
MPRINT(EM_DIAGRAM):   end;
2055847   +else do;
MPRINT(EM_DIAGRAM):   else do;
2055848   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2055849   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2055850   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2055851   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2055852   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2055853   +   end;
MPRINT(EM_DIAGRAM):   end;
2055854   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2055855   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2055856   +   end;
MPRINT(EM_DIAGRAM):   end;
2055857   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2055858   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2055859   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2055860   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2055861   +   end;
MPRINT(EM_DIAGRAM):   end;
2055862   +end;
MPRINT(EM_DIAGRAM):   end;
2055863   +
2055864   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2055865   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2055866   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2055867   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2055868   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2055869   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2055870   +end;
MPRINT(EM_DIAGRAM):   end;
2055871   +else do;
MPRINT(EM_DIAGRAM):   else do;
2055872   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2055873   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2055874   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2055875   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2055876   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2055877   +   end;
MPRINT(EM_DIAGRAM):   end;
2055878   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2055879   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2055880   +   end;
MPRINT(EM_DIAGRAM):   end;
2055881   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2055882   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2055883   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2055884   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2055885   +   end;
MPRINT(EM_DIAGRAM):   end;
2055886   +end;
MPRINT(EM_DIAGRAM):   end;
2055887   +
2055888   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2055889   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2055890   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2055891   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2055892   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2055893   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2055894   +end;
MPRINT(EM_DIAGRAM):   end;
2055895   +else do;
MPRINT(EM_DIAGRAM):   else do;
2055896   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2055897   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2055898   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2055899   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2055900   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2055901   +   end;
MPRINT(EM_DIAGRAM):   end;
2055902   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2055903   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2055904   +   end;
MPRINT(EM_DIAGRAM):   end;
2055905   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2055906   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2055907   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2055908   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2055909   +   end;
MPRINT(EM_DIAGRAM):   end;
2055910   +end;
MPRINT(EM_DIAGRAM):   end;
2055911   +
2055912   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2055913   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2055914   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2055915   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2055916   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2055917   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2055918   +end;
MPRINT(EM_DIAGRAM):   end;
2055919   +else do;
MPRINT(EM_DIAGRAM):   else do;
2055920   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2055921   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2055922   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2055923   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2055924   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2055925   +   end;
MPRINT(EM_DIAGRAM):   end;
2055926   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2055927   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2055928   +   end;
MPRINT(EM_DIAGRAM):   end;
2055929   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2055930   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2055931   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2055932   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2055933   +   end;
MPRINT(EM_DIAGRAM):   end;
2055934   +end;
MPRINT(EM_DIAGRAM):   end;
2055935   +
2055936   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2055937   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2055938   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2055939   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2055940   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2055941   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2055942   +end;
MPRINT(EM_DIAGRAM):   end;
2055943   +else do;
MPRINT(EM_DIAGRAM):   else do;
2055944   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2055945   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2055946   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2055947   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2055948   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2055949   +   end;
MPRINT(EM_DIAGRAM):   end;
2055950   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2055951   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2055952   +   end;
MPRINT(EM_DIAGRAM):   end;
2055953   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2055954   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2055955   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2055956   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2055957   +   end;
MPRINT(EM_DIAGRAM):   end;
2055958   +end;
MPRINT(EM_DIAGRAM):   end;
2055959   +
2055960   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2055961   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2055962   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2055963   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2055964   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2055965   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2055966   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2055967   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2055968   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2055969   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2055970   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2055971   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2055972   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2055973   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2055974   +end;
MPRINT(EM_DIAGRAM):   end;
2055975   +else do;
MPRINT(EM_DIAGRAM):   else do;
2055976   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2055977   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2055978   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2055979   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2055980   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2055981   +   end;
MPRINT(EM_DIAGRAM):   end;
2055982   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2055983   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2055984   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2055985   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2055986   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2055987   +   end;
MPRINT(EM_DIAGRAM):   end;
2055988   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2055989   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2055990   +   end;
MPRINT(EM_DIAGRAM):   end;
2055991   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2055992   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2055993   +   end;
MPRINT(EM_DIAGRAM):   end;
2055994   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2055995   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2055996   +   end;
MPRINT(EM_DIAGRAM):   end;
2055997   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2055998   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2055999   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2056000   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2056001   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2056002   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2056003   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2056004   +   end;
MPRINT(EM_DIAGRAM):   end;
2056005   +end;
MPRINT(EM_DIAGRAM):   end;
2056006   +
2056007   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2056008   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2056009   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2056010   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2056011   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2056012   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2056013   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2056014   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2056015   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2056016   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2056017   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2056018   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2056019   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2056020   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2056021   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2056022   +end;
MPRINT(EM_DIAGRAM):   end;
2056023   +else do;
MPRINT(EM_DIAGRAM):   else do;
2056024   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2056025   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2056026   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2056027   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2056028   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2056029   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2056030   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2056031   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2056032   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2056033   +         end;
MPRINT(EM_DIAGRAM):   end;
2056034   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2056035   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2056036   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2056037   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2056038   +            end;
MPRINT(EM_DIAGRAM):   end;
2056039   +         end;
MPRINT(EM_DIAGRAM):   end;
2056040   +      end;
MPRINT(EM_DIAGRAM):   end;
2056041   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2056042   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2056043   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2056044   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2056045   +         end;
MPRINT(EM_DIAGRAM):   end;
2056046   +      end;
MPRINT(EM_DIAGRAM):   end;
2056047   +   end;
MPRINT(EM_DIAGRAM):   end;
2056048   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2056049   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2056050   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2056051   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2056052   +      end;
MPRINT(EM_DIAGRAM):   end;
2056053   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2056054   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2056055   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2056056   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2056057   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2056058   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2056059   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2056060   +         end;
MPRINT(EM_DIAGRAM):   end;
2056061   +      end;
MPRINT(EM_DIAGRAM):   end;
2056062   +   end;
MPRINT(EM_DIAGRAM):   end;
2056063   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2056064   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2056065   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2056066   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2056067   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2056068   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2056069   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2056070   +   end;
MPRINT(EM_DIAGRAM):   end;
2056071   +end;
MPRINT(EM_DIAGRAM):   end;
2056072   +
2056073   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2056074   +*** Checking missing input Interval
2056075   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2056076   +
2056077   +IF NMISS(
2056078   +   Income ,
2056079   +   Kidhome ,
2056080   +   MntFishProducts ,
2056081   +   MntFruits ,
2056082   +   MntGoldProds ,
2056083   +   MntMeatProducts ,
2056084   +   MntSweetProducts ,
2056085   +   MntWines ,
2056086   +   NumCatalogPurchases ,
2056087   +   NumDealsPurchases ,
2056088   +   NumStorePurchases ,
2056089   +   NumWebPurchases ,
2056090   +   NumWebVisitsMonth ,
2056091   +   Recency ,
2056092   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
2056093   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2056094   +
2056095   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2056096   +END;
MPRINT(EM_DIAGRAM):   END;
2056097   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2056098   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2056099   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2056100   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2056101   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2056102   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2056103   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2056104   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2056105   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2056106   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2056107   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2056108   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2056109   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2056110   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2056111   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2056112   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2056113   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2056114   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2056115   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2056116   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2056117   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2056118   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2056119   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2056120   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2056121   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2056122   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2056123   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2056124   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2056125   +END;
MPRINT(EM_DIAGRAM):   END;
2056126   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2056127   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2056128   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2056129   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2056130   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2056131   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2056132   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2056133   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2056134   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2056135   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2056136   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2056137   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2056138   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2056139   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2056140   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2056141   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2056142   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2056143   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2056144   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2056145   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2056146   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2056147   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2056148   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2056149   +   ELSE S_NumCatalogPurchases
2056150   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2056151   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2056152   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2056153   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2056154   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2056155   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2056156   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2056157   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2056158   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2056159   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2056160   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2056161   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2056162   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2056163   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2056164   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2056165   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2056166   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2056167   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2056168   +END;
MPRINT(EM_DIAGRAM):   END;
2056169   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2056170   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
2056171   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2056172   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2056173   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
2056174   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2056175   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2056176   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2056177   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2056178   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2056179   +   H11  =     0.87660114046125 * S_Income  +     -0.7994451897827 * S_Kidhome
2056180   +          +    -0.08967295716195 * S_MntFishProducts
2056181   +          +     0.03184635437516 * S_MntFruits  +    -0.13860895575438 *
2056182   +        S_MntGoldProds  +     0.55790460748169 * S_MntMeatProducts
2056183   +          +    -0.02806094557115 * S_MntSweetProducts
2056184   +          +    -0.14537763592724 * S_MntWines  +     0.76891266523847 *
2056185   +        S_NumCatalogPurchases  +     0.16842007461305 * S_NumDealsPurchases
2056186   +          +     0.25137876058262 * S_NumStorePurchases
2056187   +          +    -0.07865442401292 * S_NumWebPurchases
2056188   +          +     1.03197398967259 * S_NumWebVisitsMonth
2056189   +          +    -1.26907156503759 * S_Recency  +    -0.76016893316351 *
2056190   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.87660114046125 * S_Income + -0.7994451897827 * S_Kidhome +
-0.08967295716195 * S_MntFishProducts + 0.03184635437516 * S_MntFruits + -0.13860895575438 *
S_MntGoldProds + 0.55790460748169 * S_MntMeatProducts + -0.02806094557115 * S_MntSweetProducts
+ -0.14537763592724 * S_MntWines + 0.76891266523847 * S_NumCatalogPurchases + 0.16842007461305
* S_NumDealsPurchases + 0.25137876058262 * S_NumStorePurchases + -0.07865442401292 *
S_NumWebPurchases + 1.03197398967259 * S_NumWebVisitsMonth + -1.26907156503759 * S_Recency +
-0.76016893316351 * S_Teenhome ;
2056191   +   H12  =     0.37295000114468 * S_Income  +    -0.12834211496575 * S_Kidhome
2056192   +          +     0.19312392388912 * S_MntFishProducts
2056193   +          +      0.1561688289137 * S_MntFruits  +     0.04004810938796 *
2056194   +        S_MntGoldProds  +     0.32599201739588 * S_MntMeatProducts
2056195   +          +       0.204174263605 * S_MntSweetProducts
2056196   +          +    -0.11560784817014 * S_MntWines  +     0.12255073568725 *
2056197   +        S_NumCatalogPurchases  +    -0.05543734180218 * S_NumDealsPurchases
2056198   +          +     0.07747830335769 * S_NumStorePurchases
2056199   +          +     0.07960837555191 * S_NumWebPurchases
2056200   +          +     0.02351602389122 * S_NumWebVisitsMonth
2056201   +          +     -0.2840853952427 * S_Recency  +    -0.47421627761687 *
2056202   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.37295000114468 * S_Income + -0.12834211496575 * S_Kidhome +
0.19312392388912 * S_MntFishProducts + 0.1561688289137 * S_MntFruits + 0.04004810938796 *
S_MntGoldProds + 0.32599201739588 * S_MntMeatProducts + 0.204174263605 * S_MntSweetProducts +
-0.11560784817014 * S_MntWines + 0.12255073568725 * S_NumCatalogPurchases + -0.05543734180218
* S_NumDealsPurchases + 0.07747830335769 * S_NumStorePurchases + 0.07960837555191 *
S_NumWebPurchases + 0.02351602389122 * S_NumWebVisitsMonth + -0.2840853952427 * S_Recency +
-0.47421627761687 * S_Teenhome ;
2056203   +   H13  =    -0.33428925248315 * S_Income  +    -0.03845622730742 * S_Kidhome
2056204   +          +     0.18733919794636 * S_MntFishProducts
2056205   +          +     0.45907982190052 * S_MntFruits  +    -0.48776616433719 *
2056206   +        S_MntGoldProds  +    -0.41340481007204 * S_MntMeatProducts
2056207   +          +     0.42514606159239 * S_MntSweetProducts
2056208   +          +     0.20038001368787 * S_MntWines  +    -1.21708501803782 *
2056209   +        S_NumCatalogPurchases  +    -1.06820061274533 * S_NumDealsPurchases
2056210   +          +     0.36582106462789 * S_NumStorePurchases
2056211   +          +     0.04244777020435 * S_NumWebPurchases
2056212   +          +    -0.24296342902503 * S_NumWebVisitsMonth
2056213   +          +     0.27451716762947 * S_Recency  +     0.13110477325277 *
2056214   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.33428925248315 * S_Income + -0.03845622730742 * S_Kidhome +
0.18733919794636 * S_MntFishProducts + 0.45907982190052 * S_MntFruits + -0.48776616433719 *
S_MntGoldProds + -0.41340481007204 * S_MntMeatProducts + 0.42514606159239 * S_MntSweetProducts
+ 0.20038001368787 * S_MntWines + -1.21708501803782 * S_NumCatalogPurchases +
-1.06820061274533 * S_NumDealsPurchases + 0.36582106462789 * S_NumStorePurchases +
0.04244777020435 * S_NumWebPurchases + -0.24296342902503 * S_NumWebVisitsMonth +
0.27451716762947 * S_Recency + 0.13110477325277 * S_Teenhome ;
2056215   +   H14  =    -0.70493412542585 * S_Income  +     0.41202796606799 * S_Kidhome
2056216   +          +     0.05986489897572 * S_MntFishProducts
2056217   +          +    -0.05040531715469 * S_MntFruits  +       0.051068387592 *
2056218   +        S_MntGoldProds  +    -0.13581881662481 * S_MntMeatProducts
2056219   +          +    -0.05513370461072 * S_MntSweetProducts
2056220   +          +     0.77472084468819 * S_MntWines  +    -0.03211788969126 *
2056221   +        S_NumCatalogPurchases  +    -0.24097486430988 * S_NumDealsPurchases
2056222   +          +     0.64364674828841 * S_NumStorePurchases
2056223   +          +     0.15084748708424 * S_NumWebPurchases
2056224   +          +    -0.94144998356377 * S_NumWebVisitsMonth
2056225   +          +     1.16778338364599 * S_Recency  +     0.32089861635238 *
2056226   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.70493412542585 * S_Income + 0.41202796606799 * S_Kidhome +
0.05986489897572 * S_MntFishProducts + -0.05040531715469 * S_MntFruits + 0.051068387592 *
S_MntGoldProds + -0.13581881662481 * S_MntMeatProducts + -0.05513370461072 *
S_MntSweetProducts + 0.77472084468819 * S_MntWines + -0.03211788969126 * S_NumCatalogPurchases
+ -0.24097486430988 * S_NumDealsPurchases + 0.64364674828841 * S_NumStorePurchases +
0.15084748708424 * S_NumWebPurchases + -0.94144998356377 * S_NumWebVisitsMonth +
1.16778338364599 * S_Recency + 0.32089861635238 * S_Teenhome ;
2056227   +   H15  =    -0.15703510827879 * S_Income  +    -0.30977841002562 * S_Kidhome
2056228   +          +    -0.14543196273578 * S_MntFishProducts
2056229   +          +     0.32223695896711 * S_MntFruits  +    -0.31846203211698 *
2056230   +        S_MntGoldProds  +     -1.4125160823105 * S_MntMeatProducts
2056231   +          +     0.49374793444169 * S_MntSweetProducts
2056232   +          +     0.39699716010219 * S_MntWines  +    -0.88140331687645 *
2056233   +        S_NumCatalogPurchases  +    -0.87657222813687 * S_NumDealsPurchases
2056234   +          +     1.23754786782746 * S_NumStorePurchases
2056235   +          +     1.11316667348511 * S_NumWebPurchases
2056236   +          +    -1.08592446439781 * S_NumWebVisitsMonth
2056237   +          +     0.66958517589542 * S_Recency  +     0.06799032788481 *
2056238   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.15703510827879 * S_Income + -0.30977841002562 * S_Kidhome +
-0.14543196273578 * S_MntFishProducts + 0.32223695896711 * S_MntFruits + -0.31846203211698 *
S_MntGoldProds + -1.4125160823105 * S_MntMeatProducts + 0.49374793444169 * S_MntSweetProducts
+ 0.39699716010219 * S_MntWines + -0.88140331687645 * S_NumCatalogPurchases +
-0.87657222813687 * S_NumDealsPurchases + 1.23754786782746 * S_NumStorePurchases +
1.11316667348511 * S_NumWebPurchases + -1.08592446439781 * S_NumWebVisitsMonth +
0.66958517589542 * S_Recency + 0.06799032788481 * S_Teenhome ;
2056239   +   H16  =    -0.10360901553583 * S_Income  +     0.39257497240865 * S_Kidhome
2056240   +          +     0.29549884005341 * S_MntFishProducts
2056241   +          +     0.04922491353914 * S_MntFruits  +     -0.1412659458221 *
2056242   +        S_MntGoldProds  +    -0.12361454534126 * S_MntMeatProducts
2056243   +          +    -0.11909215986981 * S_MntSweetProducts
2056244   +          +     0.11430484977092 * S_MntWines  +    -0.66235553839539 *
2056245   +        S_NumCatalogPurchases  +     0.17261763180198 * S_NumDealsPurchases
2056246   +          +     0.30109334594548 * S_NumStorePurchases
2056247   +          +     0.01985762767489 * S_NumWebPurchases
2056248   +          +     0.44965133281333 * S_NumWebVisitsMonth
2056249   +          +     0.32338634259192 * S_Recency  +    -0.04032956941805 *
2056250   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.10360901553583 * S_Income + 0.39257497240865 * S_Kidhome +
0.29549884005341 * S_MntFishProducts + 0.04922491353914 * S_MntFruits + -0.1412659458221 *
S_MntGoldProds + -0.12361454534126 * S_MntMeatProducts + -0.11909215986981 *
S_MntSweetProducts + 0.11430484977092 * S_MntWines + -0.66235553839539 * S_NumCatalogPurchases
+ 0.17261763180198 * S_NumDealsPurchases + 0.30109334594548 * S_NumStorePurchases +
0.01985762767489 * S_NumWebPurchases + 0.44965133281333 * S_NumWebVisitsMonth +
0.32338634259192 * S_Recency + -0.04032956941805 * S_Teenhome ;
2056251   +   H11  = H11  +    -0.23026310289024 * AcceptedCmp10
2056252   +          +    -0.82550012364234 * AcceptedCmp20  +    -0.67764228269441 *
2056253   +        AcceptedCmp30  +    -0.51547666117685 * AcceptedCmp40
2056254   +          +    -0.36424958084824 * AcceptedCmp50  +       0.119862855783 *
2056255   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.23026310289024 * AcceptedCmp10 + -0.82550012364234 *
AcceptedCmp20 + -0.67764228269441 * AcceptedCmp30 + -0.51547666117685 * AcceptedCmp40 +
-0.36424958084824 * AcceptedCmp50 + 0.119862855783 * Complain0 ;
2056256   +   H12  = H12  +     0.02722288857426 * AcceptedCmp10
2056257   +          +      0.1236576068539 * AcceptedCmp20  +    -0.31265425960737 *
2056258   +        AcceptedCmp30  +    -0.25076565034266 * AcceptedCmp40
2056259   +          +    -0.20158659730872 * AcceptedCmp50  +    -0.43687103612629 *
2056260   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.02722288857426 * AcceptedCmp10 + 0.1236576068539 *
AcceptedCmp20 + -0.31265425960737 * AcceptedCmp30 + -0.25076565034266 * AcceptedCmp40 +
-0.20158659730872 * AcceptedCmp50 + -0.43687103612629 * Complain0 ;
2056261   +   H13  = H13  +     0.21852176280571 * AcceptedCmp10
2056262   +          +     0.01727991436107 * AcceptedCmp20  +     0.19303261094625 *
2056263   +        AcceptedCmp30  +    -0.65492191560509 * AcceptedCmp40
2056264   +          +    -0.09636750660684 * AcceptedCmp50  +     0.07579128571046 *
2056265   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.21852176280571 * AcceptedCmp10 + 0.01727991436107 *
AcceptedCmp20 + 0.19303261094625 * AcceptedCmp30 + -0.65492191560509 * AcceptedCmp40 +
-0.09636750660684 * AcceptedCmp50 + 0.07579128571046 * Complain0 ;
2056266   +   H14  = H14  +     0.20819294353855 * AcceptedCmp10
2056267   +          +      0.5159102831901 * AcceptedCmp20  +     0.55295587458643 *
2056268   +        AcceptedCmp30  +     0.80682431419623 * AcceptedCmp40
2056269   +          +     0.74007057798158 * AcceptedCmp50  +     -0.4573052390807 *
2056270   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.20819294353855 * AcceptedCmp10 + 0.5159102831901 *
AcceptedCmp20 + 0.55295587458643 * AcceptedCmp30 + 0.80682431419623 * AcceptedCmp40 +
0.74007057798158 * AcceptedCmp50 + -0.4573052390807 * Complain0 ;
2056271   +   H15  = H15  +     1.26330939420524 * AcceptedCmp10
2056272   +          +     0.29494505935793 * AcceptedCmp20  +     0.25561322032419 *
2056273   +        AcceptedCmp30  +     0.50102236777897 * AcceptedCmp40
2056274   +          +     0.20696267245027 * AcceptedCmp50  +    -0.00849145233901 *
2056275   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 1.26330939420524 * AcceptedCmp10 + 0.29494505935793 *
AcceptedCmp20 + 0.25561322032419 * AcceptedCmp30 + 0.50102236777897 * AcceptedCmp40 +
0.20696267245027 * AcceptedCmp50 + -0.00849145233901 * Complain0 ;
2056276   +   H16  = H16  +     0.03638428330381 * AcceptedCmp10
2056277   +          +     0.27994215452657 * AcceptedCmp20  +    -0.03861840445025 *
2056278   +        AcceptedCmp30  +      0.3398057347433 * AcceptedCmp40
2056279   +          +    -0.00738335957724 * AcceptedCmp50  +      0.0447804375799 *
2056280   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.03638428330381 * AcceptedCmp10 + 0.27994215452657 *
AcceptedCmp20 + -0.03861840445025 * AcceptedCmp30 + 0.3398057347433 * AcceptedCmp40 +
-0.00738335957724 * AcceptedCmp50 + 0.0447804375799 * Complain0 ;
2056281   +   H11  = H11  +     0.27482405283962 * Education2n_Cycle
2056282   +          +     0.11084012456612 * EducationBasic  +    -0.23835071987159 *
2056283   +        EducationGraduation  +    -0.10167082180552 * EducationMaster
2056284   +          +     0.51015833145636 * Marital_StatusDivorced
2056285   +          +     -1.1653662063616 * Marital_StatusMarried
2056286   +          +     1.19396547750441 * Marital_StatusSingle
2056287   +          +    -0.99605751789992 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.27482405283962 * Education2n_Cycle + 0.11084012456612 *
EducationBasic + -0.23835071987159 * EducationGraduation + -0.10167082180552 * EducationMaster
+ 0.51015833145636 * Marital_StatusDivorced + -1.1653662063616 * Marital_StatusMarried +
1.19396547750441 * Marital_StatusSingle + -0.99605751789992 * Marital_StatusTogether ;
2056288   +   H12  = H12  +    -0.05268347704739 * Education2n_Cycle
2056289   +          +     0.19362065968028 * EducationBasic  +    -0.26784257195414 *
2056290   +        EducationGraduation  +     0.16650577465959 * EducationMaster
2056291   +          +     0.09154288513995 * Marital_StatusDivorced
2056292   +          +     0.06725684628382 * Marital_StatusMarried
2056293   +          +     0.11327659191494 * Marital_StatusSingle
2056294   +          +     0.01793778876811 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.05268347704739 * Education2n_Cycle + 0.19362065968028 *
EducationBasic + -0.26784257195414 * EducationGraduation + 0.16650577465959 * EducationMaster
+ 0.09154288513995 * Marital_StatusDivorced + 0.06725684628382 * Marital_StatusMarried +
0.11327659191494 * Marital_StatusSingle + 0.01793778876811 * Marital_StatusTogether ;
2056295   +   H13  = H13  +     -0.1027084329077 * Education2n_Cycle
2056296   +          +    -0.01342449140757 * EducationBasic  +    -0.35627920427273 *
2056297   +        EducationGraduation  +    -0.05554656531793 * EducationMaster
2056298   +          +     0.37591653615852 * Marital_StatusDivorced
2056299   +          +    -0.05024236790132 * Marital_StatusMarried
2056300   +          +    -0.28317154997144 * Marital_StatusSingle
2056301   +          +    -0.19247490223101 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.1027084329077 * Education2n_Cycle + -0.01342449140757 *
EducationBasic + -0.35627920427273 * EducationGraduation + -0.05554656531793 * EducationMaster
+ 0.37591653615852 * Marital_StatusDivorced + -0.05024236790132 * Marital_StatusMarried +
-0.28317154997144 * Marital_StatusSingle + -0.19247490223101 * Marital_StatusTogether ;
2056302   +   H14  = H14  +     -0.4162491480577 * Education2n_Cycle
2056303   +          +     0.38075572764074 * EducationBasic  +    -0.28169469529121 *
2056304   +        EducationGraduation  +       0.638986138084 * EducationMaster
2056305   +          +    -0.44885292450558 * Marital_StatusDivorced
2056306   +          +     0.78958791519299 * Marital_StatusMarried
2056307   +          +    -0.09688714431356 * Marital_StatusSingle
2056308   +          +     0.84239030196202 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.4162491480577 * Education2n_Cycle + 0.38075572764074 *
EducationBasic + -0.28169469529121 * EducationGraduation + 0.638986138084 * EducationMaster +
-0.44885292450558 * Marital_StatusDivorced + 0.78958791519299 * Marital_StatusMarried +
-0.09688714431356 * Marital_StatusSingle + 0.84239030196202 * Marital_StatusTogether ;
2056309   +   H15  = H15  +     0.33126657974568 * Education2n_Cycle
2056310   +          +     0.44539039262703 * EducationBasic  +    -0.09154902903865 *
2056311   +        EducationGraduation  +    -0.26400363440725 * EducationMaster
2056312   +          +    -0.30801073895989 * Marital_StatusDivorced
2056313   +          +     -0.1285150749223 * Marital_StatusMarried
2056314   +          +     0.06775542164414 * Marital_StatusSingle
2056315   +          +    -0.13032366945766 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.33126657974568 * Education2n_Cycle + 0.44539039262703 *
EducationBasic + -0.09154902903865 * EducationGraduation + -0.26400363440725 * EducationMaster
+ -0.30801073895989 * Marital_StatusDivorced + -0.1285150749223 * Marital_StatusMarried +
0.06775542164414 * Marital_StatusSingle + -0.13032366945766 * Marital_StatusTogether ;
2056316   +   H16  = H16  +     0.02030175222681 * Education2n_Cycle
2056317   +          +    -0.19579401096879 * EducationBasic  +      0.2070703930869 *
2056318   +        EducationGraduation  +    -0.40706983167068 * EducationMaster
2056319   +          +     0.22193599090368 * Marital_StatusDivorced
2056320   +          +    -0.54544672042168 * Marital_StatusMarried
2056321   +          +    -0.02237436019864 * Marital_StatusSingle
2056322   +          +    -0.21979468164854 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.02030175222681 * Education2n_Cycle + -0.19579401096879 *
EducationBasic + 0.2070703930869 * EducationGraduation + -0.40706983167068 * EducationMaster +
0.22193599090368 * Marital_StatusDivorced + -0.54544672042168 * Marital_StatusMarried +
-0.02237436019864 * Marital_StatusSingle + -0.21979468164854 * Marital_StatusTogether ;
2056323   +   H11  =    -1.24550293901788 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.24550293901788 + H11 ;
2056324   +   H12  =     0.36762263942809 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.36762263942809 + H12 ;
2056325   +   H13  =     0.07010867577103 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.07010867577103 + H13 ;
2056326   +   H14  =    -1.94014549272156 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -1.94014549272156 + H14 ;
2056327   +   H15  =     0.17666656180153 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.17666656180153 + H15 ;
2056328   +   H16  =    -1.64626406576709 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.64626406576709 + H16 ;
2056329   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2056330   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2056331   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
2056332   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
2056333   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
2056334   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
2056335   +END;
MPRINT(EM_DIAGRAM):   END;
2056336   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2056337   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2056338   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2056339   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
2056340   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
2056341   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
2056342   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
2056343   +END;
MPRINT(EM_DIAGRAM):   END;
2056344   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2056345   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2056346   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2056347   +
2056348   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2056349   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2056350   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2056351   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2056352   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2056353   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2056354   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2056355   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2056356   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2056357   +end;
MPRINT(EM_DIAGRAM):   end;
2056358   +else do;
MPRINT(EM_DIAGRAM):   else do;
2056359   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2056360   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2056361   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2056362   +   end;
MPRINT(EM_DIAGRAM):   end;
2056363   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2056364   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2056365   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2056366   +   end;
MPRINT(EM_DIAGRAM):   end;
2056367   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2056368   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2056369   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2056370   +   end;
MPRINT(EM_DIAGRAM):   end;
2056371   +end;
MPRINT(EM_DIAGRAM):   end;
2056372   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2056373   +   P_DepVar1  =     4.21126046696691 * H11  +      0.6565061288056 * H12
2056374   +          +    -1.92484011508628 * H13  +    -3.74020722142387 * H14
2056375   +          +    -3.27353026762143 * H15  +     -1.2596922869974 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.21126046696691 * H11 + 0.6565061288056 * H12 +
-1.92484011508628 * H13 + -3.74020722142387 * H14 + -3.27353026762143 * H15 + -1.2596922869974
* H16 ;
2056376   +   P_DepVar1  =    -1.36806658950323 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.36806658950323 + P_DepVar1 ;
2056377   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2056378   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2056379   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2056380   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2056381   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2056382   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2056383   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2056384   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2056385   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2056386   +END;
MPRINT(EM_DIAGRAM):   END;
2056387   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2056388   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2056389   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2056390   +END;
MPRINT(EM_DIAGRAM):   END;
2056391   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2056392   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2056393   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2056394   +END;
MPRINT(EM_DIAGRAM):   END;
2056395   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2056396   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2056397   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2056398   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2056399   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2056400   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2056401   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2056402   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2056403   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2056404   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2056405   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2056406   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2056407   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2056408   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2056409   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2056410   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2056411   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2056412   +END;
MPRINT(EM_DIAGRAM):   END;
2056413   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2056414   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2056415   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2056416   +drop
2056417   +H11
2056418   +H12
2056419   +H13
2056420   +H14
2056421   +H15
2056422   +H16
2056423   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
2056424   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2056425   +* Renaming variables for Neural35;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural35;
2056426   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2056427   +* Renaming Posterior variables for Neural35;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural35;
2056428   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2056429   +drop Neural35_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural35_P_DepVar1;
2056430   +Neural35_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural35_P_DepVar1 = P_DepVar1;
2056431   +drop Neural35_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural35_P_DepVar0;
2056432   +Neural35_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural35_P_DepVar0 = P_DepVar0;
2056433   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2056434   +* Renaming _WARN_ variable for Neural35;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural35;
2056435   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2056436   +length Neural35_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural35_WARN_ $4;
2056437   +drop Neural35_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural35_WARN_;
2056438   +Neural35_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural35_WARN_ = _WARN_;
2056439   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2056440   +* Ensmbl22: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Scoring Code of model 4 of 7;
2056441   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2056442   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2056443   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
2056444   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2056445   +* NODE: Neural34;
MPRINT(EM_DIAGRAM):   * NODE: Neural34;
2056446   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2056447   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2056448   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2056449   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2056450   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2056451   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2056452   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2056453   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2056454   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2056455   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2056456   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2056457   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2056458   +LENGTH _WARN_ $4
2056459   +      F_DepVar  $ 12
2056460   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2056461   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2056462   +
2056463   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2056464   +
2056465   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2056466   +
2056467   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2056468   +
2056469   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2056470   +
2056471   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2056472   +
2056473   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2056474   +
2056475   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2056476   +
2056477   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2056478   +
2056479   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2056480   +
2056481   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2056482   +
2056483   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2056484   +
2056485   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2056486   +
2056487   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2056488   +
2056489   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2056490   +
2056491   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2056492   +
2056493   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2056494   +
2056495   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2056496   +
2056497   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2056498   +
2056499   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2056500   +
2056501   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2056502   +
2056503   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2056504   +
2056505   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2056506   +
2056507   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2056508   +
2056509   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2056510   +
2056511   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2056512   +
2056513   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2056514   +
2056515   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2056516   +
2056517   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2056518   +
2056519   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2056520   +
2056521   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2056522   +
2056523   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
2056524   +
2056525   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
2056526   +
2056527   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
2056528   +
2056529   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2056530   +
2056531   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2056532   +
2056533   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2056534   +
2056535   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2056536   +
2056537   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2056538   +
2056539   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2056540   +
2056541   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2056542   +
2056543   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2056544   +
2056545   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2056546   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2056547   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2056548   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2056549   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2056550   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2056551   +end;
MPRINT(EM_DIAGRAM):   end;
2056552   +else do;
MPRINT(EM_DIAGRAM):   else do;
2056553   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2056554   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2056555   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2056556   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2056557   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2056558   +   end;
MPRINT(EM_DIAGRAM):   end;
2056559   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2056560   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2056561   +   end;
MPRINT(EM_DIAGRAM):   end;
2056562   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2056563   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2056564   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2056565   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2056566   +   end;
MPRINT(EM_DIAGRAM):   end;
2056567   +end;
MPRINT(EM_DIAGRAM):   end;
2056568   +
2056569   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2056570   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2056571   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2056572   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2056573   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2056574   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2056575   +end;
MPRINT(EM_DIAGRAM):   end;
2056576   +else do;
MPRINT(EM_DIAGRAM):   else do;
2056577   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2056578   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2056579   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2056580   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2056581   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2056582   +   end;
MPRINT(EM_DIAGRAM):   end;
2056583   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2056584   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2056585   +   end;
MPRINT(EM_DIAGRAM):   end;
2056586   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2056587   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2056588   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2056589   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2056590   +   end;
MPRINT(EM_DIAGRAM):   end;
2056591   +end;
MPRINT(EM_DIAGRAM):   end;
2056592   +
2056593   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2056594   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2056595   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2056596   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2056597   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2056598   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2056599   +end;
MPRINT(EM_DIAGRAM):   end;
2056600   +else do;
MPRINT(EM_DIAGRAM):   else do;
2056601   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2056602   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2056603   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2056604   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2056605   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2056606   +   end;
MPRINT(EM_DIAGRAM):   end;
2056607   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2056608   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2056609   +   end;
MPRINT(EM_DIAGRAM):   end;
2056610   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2056611   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2056612   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2056613   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2056614   +   end;
MPRINT(EM_DIAGRAM):   end;
2056615   +end;
MPRINT(EM_DIAGRAM):   end;
2056616   +
2056617   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2056618   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2056619   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2056620   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2056621   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2056622   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2056623   +end;
MPRINT(EM_DIAGRAM):   end;
2056624   +else do;
MPRINT(EM_DIAGRAM):   else do;
2056625   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2056626   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2056627   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2056628   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2056629   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2056630   +   end;
MPRINT(EM_DIAGRAM):   end;
2056631   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2056632   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2056633   +   end;
MPRINT(EM_DIAGRAM):   end;
2056634   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2056635   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2056636   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2056637   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2056638   +   end;
MPRINT(EM_DIAGRAM):   end;
2056639   +end;
MPRINT(EM_DIAGRAM):   end;
2056640   +
2056641   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2056642   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2056643   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2056644   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2056645   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2056646   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2056647   +end;
MPRINT(EM_DIAGRAM):   end;
2056648   +else do;
MPRINT(EM_DIAGRAM):   else do;
2056649   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2056650   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2056651   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2056652   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2056653   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2056654   +   end;
MPRINT(EM_DIAGRAM):   end;
2056655   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2056656   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2056657   +   end;
MPRINT(EM_DIAGRAM):   end;
2056658   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2056659   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2056660   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2056661   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2056662   +   end;
MPRINT(EM_DIAGRAM):   end;
2056663   +end;
MPRINT(EM_DIAGRAM):   end;
2056664   +
2056665   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2056666   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2056667   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2056668   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2056669   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2056670   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2056671   +end;
MPRINT(EM_DIAGRAM):   end;
2056672   +else do;
MPRINT(EM_DIAGRAM):   else do;
2056673   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2056674   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2056675   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2056676   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2056677   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2056678   +   end;
MPRINT(EM_DIAGRAM):   end;
2056679   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2056680   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2056681   +   end;
MPRINT(EM_DIAGRAM):   end;
2056682   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2056683   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2056684   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2056685   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2056686   +   end;
MPRINT(EM_DIAGRAM):   end;
2056687   +end;
MPRINT(EM_DIAGRAM):   end;
2056688   +
2056689   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2056690   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2056691   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2056692   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2056693   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2056694   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2056695   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2056696   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2056697   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2056698   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2056699   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2056700   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2056701   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2056702   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2056703   +end;
MPRINT(EM_DIAGRAM):   end;
2056704   +else do;
MPRINT(EM_DIAGRAM):   else do;
2056705   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2056706   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2056707   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2056708   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2056709   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2056710   +   end;
MPRINT(EM_DIAGRAM):   end;
2056711   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2056712   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2056713   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2056714   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2056715   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2056716   +   end;
MPRINT(EM_DIAGRAM):   end;
2056717   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2056718   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2056719   +   end;
MPRINT(EM_DIAGRAM):   end;
2056720   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2056721   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2056722   +   end;
MPRINT(EM_DIAGRAM):   end;
2056723   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2056724   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2056725   +   end;
MPRINT(EM_DIAGRAM):   end;
2056726   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2056727   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2056728   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2056729   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2056730   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2056731   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2056732   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2056733   +   end;
MPRINT(EM_DIAGRAM):   end;
2056734   +end;
MPRINT(EM_DIAGRAM):   end;
2056735   +
2056736   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2056737   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2056738   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2056739   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2056740   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2056741   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2056742   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2056743   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2056744   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2056745   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2056746   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2056747   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2056748   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2056749   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2056750   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2056751   +end;
MPRINT(EM_DIAGRAM):   end;
2056752   +else do;
MPRINT(EM_DIAGRAM):   else do;
2056753   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2056754   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2056755   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2056756   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2056757   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2056758   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2056759   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2056760   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2056761   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2056762   +         end;
MPRINT(EM_DIAGRAM):   end;
2056763   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2056764   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2056765   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2056766   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2056767   +            end;
MPRINT(EM_DIAGRAM):   end;
2056768   +         end;
MPRINT(EM_DIAGRAM):   end;
2056769   +      end;
MPRINT(EM_DIAGRAM):   end;
2056770   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2056771   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2056772   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2056773   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2056774   +         end;
MPRINT(EM_DIAGRAM):   end;
2056775   +      end;
MPRINT(EM_DIAGRAM):   end;
2056776   +   end;
MPRINT(EM_DIAGRAM):   end;
2056777   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2056778   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2056779   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2056780   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2056781   +      end;
MPRINT(EM_DIAGRAM):   end;
2056782   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2056783   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2056784   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2056785   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2056786   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2056787   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2056788   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2056789   +         end;
MPRINT(EM_DIAGRAM):   end;
2056790   +      end;
MPRINT(EM_DIAGRAM):   end;
2056791   +   end;
MPRINT(EM_DIAGRAM):   end;
2056792   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2056793   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2056794   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2056795   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2056796   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2056797   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2056798   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2056799   +   end;
MPRINT(EM_DIAGRAM):   end;
2056800   +end;
MPRINT(EM_DIAGRAM):   end;
2056801   +
2056802   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2056803   +*** Checking missing input Interval
2056804   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2056805   +
2056806   +IF NMISS(
2056807   +   Income ,
2056808   +   Kidhome ,
2056809   +   MntFishProducts ,
2056810   +   MntFruits ,
2056811   +   MntGoldProds ,
2056812   +   MntMeatProducts ,
2056813   +   MntSweetProducts ,
2056814   +   MntWines ,
2056815   +   NumCatalogPurchases ,
2056816   +   NumDealsPurchases ,
2056817   +   NumStorePurchases ,
2056818   +   NumWebPurchases ,
2056819   +   NumWebVisitsMonth ,
2056820   +   Recency ,
2056821   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
2056822   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2056823   +
2056824   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2056825   +END;
MPRINT(EM_DIAGRAM):   END;
2056826   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2056827   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2056828   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2056829   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2056830   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2056831   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2056832   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2056833   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2056834   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2056835   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2056836   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2056837   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2056838   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2056839   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2056840   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2056841   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2056842   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2056843   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2056844   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2056845   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2056846   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2056847   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2056848   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2056849   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2056850   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2056851   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2056852   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2056853   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2056854   +END;
MPRINT(EM_DIAGRAM):   END;
2056855   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2056856   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2056857   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2056858   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2056859   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2056860   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2056861   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2056862   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2056863   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2056864   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2056865   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2056866   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2056867   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2056868   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2056869   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2056870   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2056871   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2056872   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2056873   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2056874   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2056875   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2056876   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2056877   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2056878   +   ELSE S_NumCatalogPurchases
2056879   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2056880   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2056881   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2056882   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2056883   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2056884   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2056885   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2056886   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2056887   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2056888   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2056889   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2056890   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2056891   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2056892   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2056893   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2056894   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2056895   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2056896   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2056897   +END;
MPRINT(EM_DIAGRAM):   END;
2056898   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2056899   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
2056900   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2056901   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2056902   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
2056903   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2056904   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2056905   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2056906   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2056907   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2056908   +   H11  =    -0.81572379016921 * S_Income  +    -0.07670946585348 * S_Kidhome
2056909   +          +     0.24367603598167 * S_MntFishProducts
2056910   +          +     0.19692980127348 * S_MntFruits  +    -0.03926738185333 *
2056911   +        S_MntGoldProds  +    -0.20900804333353 * S_MntMeatProducts
2056912   +          +     0.34054806441484 * S_MntSweetProducts
2056913   +          +     0.65956211369383 * S_MntWines  +    -0.95375334578522 *
2056914   +        S_NumCatalogPurchases  +    -0.73124740368567 * S_NumDealsPurchases
2056915   +          +     0.98942946974575 * S_NumStorePurchases
2056916   +          +     0.89701206630103 * S_NumWebPurchases
2056917   +          +    -1.22878611472154 * S_NumWebVisitsMonth
2056918   +          +     1.44981870978354 * S_Recency  +     0.47533125686411 *
2056919   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.81572379016921 * S_Income + -0.07670946585348 * S_Kidhome +
0.24367603598167 * S_MntFishProducts + 0.19692980127348 * S_MntFruits + -0.03926738185333 *
S_MntGoldProds + -0.20900804333353 * S_MntMeatProducts + 0.34054806441484 * S_MntSweetProducts
+ 0.65956211369383 * S_MntWines + -0.95375334578522 * S_NumCatalogPurchases +
-0.73124740368567 * S_NumDealsPurchases + 0.98942946974575 * S_NumStorePurchases +
0.89701206630103 * S_NumWebPurchases + -1.22878611472154 * S_NumWebVisitsMonth +
1.44981870978354 * S_Recency + 0.47533125686411 * S_Teenhome ;
2056920   +   H12  =    -0.18875145195495 * S_Income  +     0.42230998482453 * S_Kidhome
2056921   +          +     0.16683404689723 * S_MntFishProducts
2056922   +          +     0.32072658929401 * S_MntFruits  +    -0.12341748032201 *
2056923   +        S_MntGoldProds  +    -1.56478754527255 * S_MntMeatProducts
2056924   +          +     0.20389084548968 * S_MntSweetProducts
2056925   +          +     0.95592931625509 * S_MntWines  +    -0.69996817353755 *
2056926   +        S_NumCatalogPurchases  +    -0.92709806328697 * S_NumDealsPurchases
2056927   +          +     1.27164659640366 * S_NumStorePurchases
2056928   +          +     1.02122194207802 * S_NumWebPurchases
2056929   +          +     -1.5111033436803 * S_NumWebVisitsMonth
2056930   +          +     1.63712814901544 * S_Recency  +     0.14205116840572 *
2056931   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.18875145195495 * S_Income + 0.42230998482453 * S_Kidhome +
0.16683404689723 * S_MntFishProducts + 0.32072658929401 * S_MntFruits + -0.12341748032201 *
S_MntGoldProds + -1.56478754527255 * S_MntMeatProducts + 0.20389084548968 * S_MntSweetProducts
+ 0.95592931625509 * S_MntWines + -0.69996817353755 * S_NumCatalogPurchases +
-0.92709806328697 * S_NumDealsPurchases + 1.27164659640366 * S_NumStorePurchases +
1.02122194207802 * S_NumWebPurchases + -1.5111033436803 * S_NumWebVisitsMonth +
1.63712814901544 * S_Recency + 0.14205116840572 * S_Teenhome ;
2056932   +   H13  =     1.02798705354163 * S_Income  +    -0.94411708781921 * S_Kidhome
2056933   +          +    -0.03345077166544 * S_MntFishProducts
2056934   +          +     0.00038440809349 * S_MntFruits  +    -0.05068379715712 *
2056935   +        S_MntGoldProds  +     1.00464705307582 * S_MntMeatProducts
2056936   +          +    -0.11948662500951 * S_MntSweetProducts
2056937   +          +    -0.52438819731252 * S_MntWines  +     0.98586904866769 *
2056938   +        S_NumCatalogPurchases  +     0.09015295226839 * S_NumDealsPurchases
2056939   +          +     0.22401914357376 * S_NumStorePurchases
2056940   +          +     0.04219877865976 * S_NumWebPurchases
2056941   +          +     1.21753334166036 * S_NumWebVisitsMonth
2056942   +          +    -1.33712212110081 * S_Recency  +    -0.47582856683655 *
2056943   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 1.02798705354163 * S_Income + -0.94411708781921 * S_Kidhome +
-0.03345077166544 * S_MntFishProducts + 0.00038440809349 * S_MntFruits + -0.05068379715712 *
S_MntGoldProds + 1.00464705307582 * S_MntMeatProducts + -0.11948662500951 * S_MntSweetProducts
+ -0.52438819731252 * S_MntWines + 0.98586904866769 * S_NumCatalogPurchases + 0.09015295226839
* S_NumDealsPurchases + 0.22401914357376 * S_NumStorePurchases + 0.04219877865976 *
S_NumWebPurchases + 1.21753334166036 * S_NumWebVisitsMonth + -1.33712212110081 * S_Recency +
-0.47582856683655 * S_Teenhome ;
2056944   +   H14  =     0.91431429848834 * S_Income  +    -1.16289676557574 * S_Kidhome
2056945   +          +     0.31175257038578 * S_MntFishProducts
2056946   +          +     0.08080436076271 * S_MntFruits  +     0.15252288175851 *
2056947   +        S_MntGoldProds  +     0.21603546207654 * S_MntMeatProducts
2056948   +          +      0.0927253053382 * S_MntSweetProducts
2056949   +          +     0.05865323888304 * S_MntWines  +    -0.23426953728277 *
2056950   +        S_NumCatalogPurchases  +    -0.46451908614085 * S_NumDealsPurchases
2056951   +          +    -0.12667606349662 * S_NumStorePurchases
2056952   +          +     0.30148374518724 * S_NumWebPurchases
2056953   +          +     0.48934229701658 * S_NumWebVisitsMonth
2056954   +          +    -0.83754390793251 * S_Recency  +     -0.4576645462819 *
2056955   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.91431429848834 * S_Income + -1.16289676557574 * S_Kidhome +
0.31175257038578 * S_MntFishProducts + 0.08080436076271 * S_MntFruits + 0.15252288175851 *
S_MntGoldProds + 0.21603546207654 * S_MntMeatProducts + 0.0927253053382 * S_MntSweetProducts +
0.05865323888304 * S_MntWines + -0.23426953728277 * S_NumCatalogPurchases + -0.46451908614085
* S_NumDealsPurchases + -0.12667606349662 * S_NumStorePurchases + 0.30148374518724 *
S_NumWebPurchases + 0.48934229701658 * S_NumWebVisitsMonth + -0.83754390793251 * S_Recency +
-0.4576645462819 * S_Teenhome ;
2056956   +   H15  =    -0.58161501095664 * S_Income  +     -1.0333658128614 * S_Kidhome
2056957   +          +     0.42646725119177 * S_MntFishProducts
2056958   +          +     -0.3264621401658 * S_MntFruits  +    -0.74616728524532 *
2056959   +        S_MntGoldProds  +    -0.97572068716712 * S_MntMeatProducts
2056960   +          +    -0.01493605582616 * S_MntSweetProducts
2056961   +          +      0.0311636632685 * S_MntWines  +    -1.68599903767191 *
2056962   +        S_NumCatalogPurchases  +    -1.25052648798307 * S_NumDealsPurchases
2056963   +          +     0.54256744091258 * S_NumStorePurchases
2056964   +          +     0.43065931458468 * S_NumWebPurchases
2056965   +          +      0.5935561420466 * S_NumWebVisitsMonth
2056966   +          +    -0.45183418369624 * S_Recency  +     0.19260512629844 *
2056967   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.58161501095664 * S_Income + -1.0333658128614 * S_Kidhome +
0.42646725119177 * S_MntFishProducts + -0.3264621401658 * S_MntFruits + -0.74616728524532 *
S_MntGoldProds + -0.97572068716712 * S_MntMeatProducts + -0.01493605582616 *
S_MntSweetProducts + 0.0311636632685 * S_MntWines + -1.68599903767191 * S_NumCatalogPurchases
+ -1.25052648798307 * S_NumDealsPurchases + 0.54256744091258 * S_NumStorePurchases +
0.43065931458468 * S_NumWebPurchases + 0.5935561420466 * S_NumWebVisitsMonth +
-0.45183418369624 * S_Recency + 0.19260512629844 * S_Teenhome ;
2056968   +   H11  = H11  +     0.61503950219838 * AcceptedCmp10
2056969   +          +     0.02945207091619 * AcceptedCmp20  +     0.99151950769472 *
2056970   +        AcceptedCmp30  +     1.08987060401718 * AcceptedCmp40
2056971   +          +     0.45427753773024 * AcceptedCmp50  +    -1.03533951966815 *
2056972   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.61503950219838 * AcceptedCmp10 + 0.02945207091619 *
AcceptedCmp20 + 0.99151950769472 * AcceptedCmp30 + 1.08987060401718 * AcceptedCmp40 +
0.45427753773024 * AcceptedCmp50 + -1.03533951966815 * Complain0 ;
2056973   +   H12  = H12  +     0.83823476190401 * AcceptedCmp10
2056974   +          +      1.0793719601418 * AcceptedCmp20  +     0.68538854946581 *
2056975   +        AcceptedCmp30  +     1.00297565893339 * AcceptedCmp40
2056976   +          +     0.24586379991786 * AcceptedCmp50  +     0.15471251255301 *
2056977   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.83823476190401 * AcceptedCmp10 + 1.0793719601418 *
AcceptedCmp20 + 0.68538854946581 * AcceptedCmp30 + 1.00297565893339 * AcceptedCmp40 +
0.24586379991786 * AcceptedCmp50 + 0.15471251255301 * Complain0 ;
2056978   +   H13  = H13  +    -0.41486094438907 * AcceptedCmp10
2056979   +          +    -0.76586628449839 * AcceptedCmp20  +    -0.59695459523693 *
2056980   +        AcceptedCmp30  +    -0.30262159911837 * AcceptedCmp40
2056981   +          +    -0.61141171124182 * AcceptedCmp50  +    -0.01086235188835 *
2056982   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.41486094438907 * AcceptedCmp10 + -0.76586628449839 *
AcceptedCmp20 + -0.59695459523693 * AcceptedCmp30 + -0.30262159911837 * AcceptedCmp40 +
-0.61141171124182 * AcceptedCmp50 + -0.01086235188835 * Complain0 ;
2056983   +   H14  = H14  +    -0.09662858884082 * AcceptedCmp10
2056984   +          +    -0.48515652524171 * AcceptedCmp20  +    -0.37421451374399 *
2056985   +        AcceptedCmp30  +    -0.52889523891817 * AcceptedCmp40
2056986   +          +    -0.73518448275357 * AcceptedCmp50  +    -0.36065830718672 *
2056987   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.09662858884082 * AcceptedCmp10 + -0.48515652524171 *
AcceptedCmp20 + -0.37421451374399 * AcceptedCmp30 + -0.52889523891817 * AcceptedCmp40 +
-0.73518448275357 * AcceptedCmp50 + -0.36065830718672 * Complain0 ;
2056988   +   H15  = H15  +      0.2985143092641 * AcceptedCmp10
2056989   +          +    -0.06881934778393 * AcceptedCmp20  +    -0.02609197044604 *
2056990   +        AcceptedCmp30  +    -0.79105657447885 * AcceptedCmp40
2056991   +          +    -0.02286855144948 * AcceptedCmp50  +     0.02884650192784 *
2056992   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.2985143092641 * AcceptedCmp10 + -0.06881934778393 *
AcceptedCmp20 + -0.02609197044604 * AcceptedCmp30 + -0.79105657447885 * AcceptedCmp40 +
-0.02286855144948 * AcceptedCmp50 + 0.02884650192784 * Complain0 ;
2056993   +   H11  = H11  +    -0.41169946146301 * Education2n_Cycle
2056994   +          +      0.8448273504441 * EducationBasic  +    -1.02497956377347 *
2056995   +        EducationGraduation  +     0.43998321745211 * EducationMaster
2056996   +          +    -0.85912688909911 * Marital_StatusDivorced
2056997   +          +     0.81561401465875 * Marital_StatusMarried
2056998   +          +    -0.58324403081542 * Marital_StatusSingle
2056999   +          +      0.9348017085106 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.41169946146301 * Education2n_Cycle + 0.8448273504441 *
EducationBasic + -1.02497956377347 * EducationGraduation + 0.43998321745211 * EducationMaster
+ -0.85912688909911 * Marital_StatusDivorced + 0.81561401465875 * Marital_StatusMarried +
-0.58324403081542 * Marital_StatusSingle + 0.9348017085106 * Marital_StatusTogether ;
2057000   +   H12  = H12  +     0.22828129841893 * Education2n_Cycle
2057001   +          +     0.47579227804033 * EducationBasic  +    -0.18165301263195 *
2057002   +        EducationGraduation  +    -0.16143431016405 * EducationMaster
2057003   +          +    -0.34784695867287 * Marital_StatusDivorced
2057004   +          +    -0.18194022182247 * Marital_StatusMarried
2057005   +          +    -0.10633185904164 * Marital_StatusSingle
2057006   +          +     0.13136125361628 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.22828129841893 * Education2n_Cycle + 0.47579227804033 *
EducationBasic + -0.18165301263195 * EducationGraduation + -0.16143431016405 * EducationMaster
+ -0.34784695867287 * Marital_StatusDivorced + -0.18194022182247 * Marital_StatusMarried +
-0.10633185904164 * Marital_StatusSingle + 0.13136125361628 * Marital_StatusTogether ;
2057007   +   H13  = H13  +     0.38705901043652 * Education2n_Cycle
2057008   +          +     0.19703188370189 * EducationBasic  +    -0.48062640599976 *
2057009   +        EducationGraduation  +     -0.3646621736273 * EducationMaster
2057010   +          +     0.61058752124466 * Marital_StatusDivorced
2057011   +          +    -1.38793808025141 * Marital_StatusMarried
2057012   +          +     1.10060737810944 * Marital_StatusSingle
2057013   +          +    -1.21250219018366 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.38705901043652 * Education2n_Cycle + 0.19703188370189 *
EducationBasic + -0.48062640599976 * EducationGraduation + -0.3646621736273 * EducationMaster
+ 0.61058752124466 * Marital_StatusDivorced + -1.38793808025141 * Marital_StatusMarried +
1.10060737810944 * Marital_StatusSingle + -1.21250219018366 * Marital_StatusTogether ;
2057014   +   H14  = H14  +    -0.20576658115662 * Education2n_Cycle
2057015   +          +    -0.09185472034614 * EducationBasic  +    -0.43674210064447 *
2057016   +        EducationGraduation  +    -0.18154054746298 * EducationMaster
2057017   +          +     0.11973800573581 * Marital_StatusDivorced
2057018   +          +      -0.294635257911 * Marital_StatusMarried
2057019   +          +    -0.05399659601172 * Marital_StatusSingle
2057020   +          +     0.34207780606239 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.20576658115662 * Education2n_Cycle + -0.09185472034614 *
EducationBasic + -0.43674210064447 * EducationGraduation + -0.18154054746298 * EducationMaster
+ 0.11973800573581 * Marital_StatusDivorced + -0.294635257911 * Marital_StatusMarried +
-0.05399659601172 * Marital_StatusSingle + 0.34207780606239 * Marital_StatusTogether ;
2057021   +   H15  = H15  +    -0.05553093684862 * Education2n_Cycle
2057022   +          +    -0.12898006732329 * EducationBasic  +    -0.16064118923518 *
2057023   +        EducationGraduation  +     -0.6431539624694 * EducationMaster
2057024   +          +     0.42838191659864 * Marital_StatusDivorced
2057025   +          +    -0.09150349181363 * Marital_StatusMarried
2057026   +          +    -0.33520164145276 * Marital_StatusSingle
2057027   +          +    -0.15253738713197 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.05553093684862 * Education2n_Cycle + -0.12898006732329 *
EducationBasic + -0.16064118923518 * EducationGraduation + -0.6431539624694 * EducationMaster
+ 0.42838191659864 * Marital_StatusDivorced + -0.09150349181363 * Marital_StatusMarried +
-0.33520164145276 * Marital_StatusSingle + -0.15253738713197 * Marital_StatusTogether ;
2057028   +   H11  =     -1.5079478405973 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.5079478405973 + H11 ;
2057029   +   H12  =     0.03014958331993 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.03014958331993 + H12 ;
2057030   +   H13  =    -1.78098671165572 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.78098671165572 + H13 ;
2057031   +   H14  =     0.22179429743277 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.22179429743277 + H14 ;
2057032   +   H15  =    -2.06602107857898 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -2.06602107857898 + H15 ;
2057033   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2057034   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2057035   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
2057036   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
2057037   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
2057038   +END;
MPRINT(EM_DIAGRAM):   END;
2057039   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2057040   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2057041   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2057042   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
2057043   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
2057044   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
2057045   +END;
MPRINT(EM_DIAGRAM):   END;
2057046   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2057047   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2057048   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2057049   +
2057050   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2057051   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2057052   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2057053   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2057054   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2057055   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2057056   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2057057   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2057058   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2057059   +end;
MPRINT(EM_DIAGRAM):   end;
2057060   +else do;
MPRINT(EM_DIAGRAM):   else do;
2057061   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2057062   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2057063   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2057064   +   end;
MPRINT(EM_DIAGRAM):   end;
2057065   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2057066   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2057067   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2057068   +   end;
MPRINT(EM_DIAGRAM):   end;
2057069   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2057070   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2057071   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2057072   +   end;
MPRINT(EM_DIAGRAM):   end;
2057073   +end;
MPRINT(EM_DIAGRAM):   end;
2057074   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2057075   +   P_DepVar1  =    -4.55666337815854 * H11  +    -4.04792544554995 * H12
2057076   +          +     4.56148127429284 * H13  +     2.36841344452371 * H14
2057077   +          +    -3.07371010011749 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.55666337815854 * H11 + -4.04792544554995 * H12 +
4.56148127429284 * H13 + 2.36841344452371 * H14 + -3.07371010011749 * H15 ;
2057078   +   P_DepVar1  =    -0.83283406236136 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.83283406236136 + P_DepVar1 ;
2057079   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2057080   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2057081   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2057082   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2057083   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2057084   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2057085   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2057086   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2057087   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2057088   +END;
MPRINT(EM_DIAGRAM):   END;
2057089   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2057090   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2057091   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2057092   +END;
MPRINT(EM_DIAGRAM):   END;
2057093   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2057094   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2057095   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2057096   +END;
MPRINT(EM_DIAGRAM):   END;
2057097   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2057098   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2057099   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2057100   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2057101   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2057102   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2057103   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2057104   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2057105   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2057106   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2057107   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2057108   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2057109   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2057110   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2057111   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2057112   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2057113   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2057114   +END;
MPRINT(EM_DIAGRAM):   END;
2057115   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2057116   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2057117   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2057118   +drop
2057119   +H11
2057120   +H12
2057121   +H13
2057122   +H14
2057123   +H15
2057124   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
2057125   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2057126   +* Renaming variables for Neural34;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural34;
2057127   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2057128   +* Renaming Posterior variables for Neural34;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural34;
2057129   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2057130   +drop Neural34_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural34_P_DepVar1;
2057131   +Neural34_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural34_P_DepVar1 = P_DepVar1;
2057132   +drop Neural34_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural34_P_DepVar0;
2057133   +Neural34_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural34_P_DepVar0 = P_DepVar0;
2057134   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2057135   +* Renaming _WARN_ variable for Neural34;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural34;
2057136   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2057137   +length Neural34_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural34_WARN_ $4;
2057138   +drop Neural34_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural34_WARN_;
2057139   +Neural34_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural34_WARN_ = _WARN_;
2057140   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2057141   +* Ensmbl22: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Scoring Code of model 5 of 7;
2057142   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2057143   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2057144   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
2057145   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2057146   +* NODE: Neural33;
MPRINT(EM_DIAGRAM):   * NODE: Neural33;
2057147   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2057148   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2057149   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2057150   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2057151   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2057152   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2057153   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2057154   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2057155   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2057156   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2057157   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2057158   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2057159   +LENGTH _WARN_ $4
2057160   +      F_DepVar  $ 12
2057161   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2057162   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2057163   +
2057164   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2057165   +
2057166   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2057167   +
2057168   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2057169   +
2057170   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2057171   +
2057172   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2057173   +
2057174   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2057175   +
2057176   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2057177   +
2057178   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2057179   +
2057180   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2057181   +
2057182   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2057183   +
2057184   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2057185   +
2057186   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2057187   +
2057188   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2057189   +
2057190   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2057191   +
2057192   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2057193   +
2057194   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2057195   +
2057196   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2057197   +
2057198   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2057199   +
2057200   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2057201   +
2057202   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2057203   +
2057204   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2057205   +
2057206   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2057207   +
2057208   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2057209   +
2057210   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2057211   +
2057212   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2057213   +
2057214   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2057215   +
2057216   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2057217   +
2057218   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2057219   +
2057220   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2057221   +
2057222   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2057223   +
2057224   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
2057225   +
2057226   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
2057227   +
2057228   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2057229   +
2057230   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2057231   +
2057232   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2057233   +
2057234   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2057235   +
2057236   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2057237   +
2057238   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2057239   +
2057240   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2057241   +
2057242   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2057243   +
2057244   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2057245   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2057246   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2057247   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2057248   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2057249   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2057250   +end;
MPRINT(EM_DIAGRAM):   end;
2057251   +else do;
MPRINT(EM_DIAGRAM):   else do;
2057252   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2057253   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2057254   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2057255   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2057256   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2057257   +   end;
MPRINT(EM_DIAGRAM):   end;
2057258   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2057259   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2057260   +   end;
MPRINT(EM_DIAGRAM):   end;
2057261   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2057262   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2057263   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2057264   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2057265   +   end;
MPRINT(EM_DIAGRAM):   end;
2057266   +end;
MPRINT(EM_DIAGRAM):   end;
2057267   +
2057268   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2057269   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2057270   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2057271   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2057272   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2057273   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2057274   +end;
MPRINT(EM_DIAGRAM):   end;
2057275   +else do;
MPRINT(EM_DIAGRAM):   else do;
2057276   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2057277   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2057278   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2057279   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2057280   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2057281   +   end;
MPRINT(EM_DIAGRAM):   end;
2057282   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2057283   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2057284   +   end;
MPRINT(EM_DIAGRAM):   end;
2057285   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2057286   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2057287   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2057288   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2057289   +   end;
MPRINT(EM_DIAGRAM):   end;
2057290   +end;
MPRINT(EM_DIAGRAM):   end;
2057291   +
2057292   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2057293   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2057294   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2057295   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2057296   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2057297   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2057298   +end;
MPRINT(EM_DIAGRAM):   end;
2057299   +else do;
MPRINT(EM_DIAGRAM):   else do;
2057300   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2057301   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2057302   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2057303   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2057304   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2057305   +   end;
MPRINT(EM_DIAGRAM):   end;
2057306   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2057307   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2057308   +   end;
MPRINT(EM_DIAGRAM):   end;
2057309   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2057310   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2057311   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2057312   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2057313   +   end;
MPRINT(EM_DIAGRAM):   end;
2057314   +end;
MPRINT(EM_DIAGRAM):   end;
2057315   +
2057316   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2057317   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2057318   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2057319   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2057320   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2057321   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2057322   +end;
MPRINT(EM_DIAGRAM):   end;
2057323   +else do;
MPRINT(EM_DIAGRAM):   else do;
2057324   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2057325   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2057326   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2057327   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2057328   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2057329   +   end;
MPRINT(EM_DIAGRAM):   end;
2057330   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2057331   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2057332   +   end;
MPRINT(EM_DIAGRAM):   end;
2057333   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2057334   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2057335   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2057336   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2057337   +   end;
MPRINT(EM_DIAGRAM):   end;
2057338   +end;
MPRINT(EM_DIAGRAM):   end;
2057339   +
2057340   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2057341   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2057342   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2057343   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2057344   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2057345   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2057346   +end;
MPRINT(EM_DIAGRAM):   end;
2057347   +else do;
MPRINT(EM_DIAGRAM):   else do;
2057348   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2057349   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2057350   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2057351   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2057352   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2057353   +   end;
MPRINT(EM_DIAGRAM):   end;
2057354   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2057355   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2057356   +   end;
MPRINT(EM_DIAGRAM):   end;
2057357   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2057358   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2057359   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2057360   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2057361   +   end;
MPRINT(EM_DIAGRAM):   end;
2057362   +end;
MPRINT(EM_DIAGRAM):   end;
2057363   +
2057364   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2057365   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2057366   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2057367   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2057368   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2057369   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2057370   +end;
MPRINT(EM_DIAGRAM):   end;
2057371   +else do;
MPRINT(EM_DIAGRAM):   else do;
2057372   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2057373   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2057374   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2057375   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2057376   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2057377   +   end;
MPRINT(EM_DIAGRAM):   end;
2057378   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2057379   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2057380   +   end;
MPRINT(EM_DIAGRAM):   end;
2057381   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2057382   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2057383   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2057384   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2057385   +   end;
MPRINT(EM_DIAGRAM):   end;
2057386   +end;
MPRINT(EM_DIAGRAM):   end;
2057387   +
2057388   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2057389   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2057390   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2057391   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2057392   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2057393   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2057394   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2057395   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2057396   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2057397   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2057398   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2057399   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2057400   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2057401   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2057402   +end;
MPRINT(EM_DIAGRAM):   end;
2057403   +else do;
MPRINT(EM_DIAGRAM):   else do;
2057404   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2057405   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2057406   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2057407   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2057408   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2057409   +   end;
MPRINT(EM_DIAGRAM):   end;
2057410   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2057411   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2057412   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2057413   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2057414   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2057415   +   end;
MPRINT(EM_DIAGRAM):   end;
2057416   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2057417   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2057418   +   end;
MPRINT(EM_DIAGRAM):   end;
2057419   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2057420   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2057421   +   end;
MPRINT(EM_DIAGRAM):   end;
2057422   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2057423   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2057424   +   end;
MPRINT(EM_DIAGRAM):   end;
2057425   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2057426   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2057427   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2057428   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2057429   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2057430   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2057431   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2057432   +   end;
MPRINT(EM_DIAGRAM):   end;
2057433   +end;
MPRINT(EM_DIAGRAM):   end;
2057434   +
2057435   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2057436   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2057437   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2057438   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2057439   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2057440   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2057441   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2057442   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2057443   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2057444   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2057445   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2057446   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2057447   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2057448   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2057449   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2057450   +end;
MPRINT(EM_DIAGRAM):   end;
2057451   +else do;
MPRINT(EM_DIAGRAM):   else do;
2057452   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2057453   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2057454   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2057455   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2057456   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2057457   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2057458   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2057459   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2057460   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2057461   +         end;
MPRINT(EM_DIAGRAM):   end;
2057462   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2057463   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2057464   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2057465   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2057466   +            end;
MPRINT(EM_DIAGRAM):   end;
2057467   +         end;
MPRINT(EM_DIAGRAM):   end;
2057468   +      end;
MPRINT(EM_DIAGRAM):   end;
2057469   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2057470   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2057471   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2057472   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2057473   +         end;
MPRINT(EM_DIAGRAM):   end;
2057474   +      end;
MPRINT(EM_DIAGRAM):   end;
2057475   +   end;
MPRINT(EM_DIAGRAM):   end;
2057476   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2057477   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2057478   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2057479   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2057480   +      end;
MPRINT(EM_DIAGRAM):   end;
2057481   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2057482   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2057483   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2057484   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2057485   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2057486   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2057487   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2057488   +         end;
MPRINT(EM_DIAGRAM):   end;
2057489   +      end;
MPRINT(EM_DIAGRAM):   end;
2057490   +   end;
MPRINT(EM_DIAGRAM):   end;
2057491   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2057492   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2057493   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2057494   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2057495   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2057496   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2057497   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2057498   +   end;
MPRINT(EM_DIAGRAM):   end;
2057499   +end;
MPRINT(EM_DIAGRAM):   end;
2057500   +
2057501   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2057502   +*** Checking missing input Interval
2057503   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2057504   +
2057505   +IF NMISS(
2057506   +   Income ,
2057507   +   Kidhome ,
2057508   +   MntFishProducts ,
2057509   +   MntFruits ,
2057510   +   MntGoldProds ,
2057511   +   MntMeatProducts ,
2057512   +   MntSweetProducts ,
2057513   +   MntWines ,
2057514   +   NumCatalogPurchases ,
2057515   +   NumDealsPurchases ,
2057516   +   NumStorePurchases ,
2057517   +   NumWebPurchases ,
2057518   +   NumWebVisitsMonth ,
2057519   +   Recency ,
2057520   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
2057521   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2057522   +
2057523   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2057524   +END;
MPRINT(EM_DIAGRAM):   END;
2057525   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2057526   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2057527   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2057528   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2057529   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2057530   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2057531   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2057532   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2057533   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2057534   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2057535   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2057536   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2057537   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2057538   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2057539   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2057540   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2057541   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2057542   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2057543   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2057544   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2057545   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2057546   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2057547   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2057548   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2057549   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2057550   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2057551   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2057552   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2057553   +END;
MPRINT(EM_DIAGRAM):   END;
2057554   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2057555   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2057556   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2057557   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2057558   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2057559   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2057560   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2057561   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2057562   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2057563   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2057564   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2057565   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2057566   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2057567   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2057568   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2057569   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2057570   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2057571   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2057572   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2057573   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2057574   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2057575   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2057576   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2057577   +   ELSE S_NumCatalogPurchases
2057578   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2057579   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2057580   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2057581   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2057582   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2057583   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2057584   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2057585   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2057586   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2057587   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2057588   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2057589   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2057590   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2057591   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2057592   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2057593   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2057594   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2057595   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2057596   +END;
MPRINT(EM_DIAGRAM):   END;
2057597   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2057598   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
2057599   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2057600   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2057601   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
2057602   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2057603   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2057604   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2057605   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2057606   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2057607   +   H11  =     0.32435248899543 * S_Income  +    -0.47929849648429 * S_Kidhome
2057608   +          +     0.13364230231465 * S_MntFishProducts
2057609   +          +     -0.1386717864506 * S_MntFruits  +    -0.02769770185129 *
2057610   +        S_MntGoldProds  +    -0.29009812234724 * S_MntMeatProducts
2057611   +          +    -0.10871064476617 * S_MntSweetProducts
2057612   +          +     0.57858611197719 * S_MntWines  +    -0.26900817180555 *
2057613   +        S_NumCatalogPurchases  +    -0.39598523430317 * S_NumDealsPurchases
2057614   +          +     0.52835897625366 * S_NumStorePurchases
2057615   +          +     0.66297635444958 * S_NumWebPurchases
2057616   +          +    -0.31727971903608 * S_NumWebVisitsMonth
2057617   +          +     0.12789679291219 * S_Recency  +    -0.39270105014448 *
2057618   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.32435248899543 * S_Income + -0.47929849648429 * S_Kidhome +
0.13364230231465 * S_MntFishProducts + -0.1386717864506 * S_MntFruits + -0.02769770185129 *
S_MntGoldProds + -0.29009812234724 * S_MntMeatProducts + -0.10871064476617 *
S_MntSweetProducts + 0.57858611197719 * S_MntWines + -0.26900817180555 * S_NumCatalogPurchases
+ -0.39598523430317 * S_NumDealsPurchases + 0.52835897625366 * S_NumStorePurchases +
0.66297635444958 * S_NumWebPurchases + -0.31727971903608 * S_NumWebVisitsMonth +
0.12789679291219 * S_Recency + -0.39270105014448 * S_Teenhome ;
2057619   +   H12  =     0.37777254641249 * S_Income  +     0.79199857244438 * S_Kidhome
2057620   +          +     0.14748983783528 * S_MntFishProducts
2057621   +          +     0.14994032216514 * S_MntFruits  +     0.19147871752132 *
2057622   +        S_MntGoldProds  +     0.80535213270443 * S_MntMeatProducts
2057623   +          +     0.31095426478608 * S_MntSweetProducts
2057624   +          +     0.00471809437476 * S_MntWines  +     0.93716396534802 *
2057625   +        S_NumCatalogPurchases  +     0.86841248727948 * S_NumDealsPurchases
2057626   +          +     0.14387100066933 * S_NumStorePurchases
2057627   +          +    -0.01648998884133 * S_NumWebPurchases
2057628   +          +     -0.1378597161576 * S_NumWebVisitsMonth
2057629   +          +     0.15850653387379 * S_Recency  +     0.11714339614827 *
2057630   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.37777254641249 * S_Income + 0.79199857244438 * S_Kidhome +
0.14748983783528 * S_MntFishProducts + 0.14994032216514 * S_MntFruits + 0.19147871752132 *
S_MntGoldProds + 0.80535213270443 * S_MntMeatProducts + 0.31095426478608 * S_MntSweetProducts
+ 0.00471809437476 * S_MntWines + 0.93716396534802 * S_NumCatalogPurchases + 0.86841248727948
* S_NumDealsPurchases + 0.14387100066933 * S_NumStorePurchases + -0.01648998884133 *
S_NumWebPurchases + -0.1378597161576 * S_NumWebVisitsMonth + 0.15850653387379 * S_Recency +
0.11714339614827 * S_Teenhome ;
2057631   +   H13  =    -0.31490756773649 * S_Income  +      0.4776214738577 * S_Kidhome
2057632   +          +     0.00774185404534 * S_MntFishProducts
2057633   +          +     0.22292845341942 * S_MntFruits  +     0.11636422687317 *
2057634   +        S_MntGoldProds  +    -0.45522230281212 * S_MntMeatProducts
2057635   +          +     0.28728624268589 * S_MntSweetProducts
2057636   +          +     0.74892928025295 * S_MntWines  +     -0.4834082773325 *
2057637   +        S_NumCatalogPurchases  +    -0.05055717315946 * S_NumDealsPurchases
2057638   +          +     0.56446566213593 * S_NumStorePurchases
2057639   +          +     0.44547549135846 * S_NumWebPurchases
2057640   +          +    -1.17648505936662 * S_NumWebVisitsMonth
2057641   +          +     1.30076355226685 * S_Recency  +     0.56217939635691 *
2057642   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.31490756773649 * S_Income + 0.4776214738577 * S_Kidhome +
0.00774185404534 * S_MntFishProducts + 0.22292845341942 * S_MntFruits + 0.11636422687317 *
S_MntGoldProds + -0.45522230281212 * S_MntMeatProducts + 0.28728624268589 * S_MntSweetProducts
+ 0.74892928025295 * S_MntWines + -0.4834082773325 * S_NumCatalogPurchases + -0.05055717315946
* S_NumDealsPurchases + 0.56446566213593 * S_NumStorePurchases + 0.44547549135846 *
S_NumWebPurchases + -1.17648505936662 * S_NumWebVisitsMonth + 1.30076355226685 * S_Recency +
0.56217939635691 * S_Teenhome ;
2057643   +   H14  =    -0.40179905952719 * S_Income  +     0.16141565212918 * S_Kidhome
2057644   +          +     0.24665716882586 * S_MntFishProducts
2057645   +          +     0.03410629332469 * S_MntFruits  +     -0.1353295645077 *
2057646   +        S_MntGoldProds  +    -0.74661391150362 * S_MntMeatProducts
2057647   +          +    -0.10530818594736 * S_MntSweetProducts
2057648   +          +     0.30618479493194 * S_MntWines  +    -0.63426712804061 *
2057649   +        S_NumCatalogPurchases  +    -0.39486403699564 * S_NumDealsPurchases
2057650   +          +     0.36617016651032 * S_NumStorePurchases
2057651   +          +      0.3580014320946 * S_NumWebPurchases
2057652   +          +    -0.72597289213724 * S_NumWebVisitsMonth
2057653   +          +     0.93272927444012 * S_Recency  +     0.24531402677279 *
2057654   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.40179905952719 * S_Income + 0.16141565212918 * S_Kidhome +
0.24665716882586 * S_MntFishProducts + 0.03410629332469 * S_MntFruits + -0.1353295645077 *
S_MntGoldProds + -0.74661391150362 * S_MntMeatProducts + -0.10530818594736 *
S_MntSweetProducts + 0.30618479493194 * S_MntWines + -0.63426712804061 * S_NumCatalogPurchases
+ -0.39486403699564 * S_NumDealsPurchases + 0.36617016651032 * S_NumStorePurchases +
0.3580014320946 * S_NumWebPurchases + -0.72597289213724 * S_NumWebVisitsMonth +
0.93272927444012 * S_Recency + 0.24531402677279 * S_Teenhome ;
2057655   +   H11  = H11  +     0.10790306691381 * AcceptedCmp10
2057656   +          +     0.36067546675468 * AcceptedCmp20  +     0.56838342781466 *
2057657   +        AcceptedCmp30  +     0.10138997954661 * AcceptedCmp40
2057658   +          +     0.23809874960179 * AcceptedCmp50  +     0.42164522965364 *
2057659   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.10790306691381 * AcceptedCmp10 + 0.36067546675468 *
AcceptedCmp20 + 0.56838342781466 * AcceptedCmp30 + 0.10138997954661 * AcceptedCmp40 +
0.23809874960179 * AcceptedCmp50 + 0.42164522965364 * Complain0 ;
2057660   +   H12  = H12  +    -0.10342435301564 * AcceptedCmp10
2057661   +          +     -0.1021625473908 * AcceptedCmp20  +    -0.17400073301804 *
2057662   +        AcceptedCmp30  +      0.1295257925186 * AcceptedCmp40
2057663   +          +    -0.17149939617806 * AcceptedCmp50  +    -0.11843709761825 *
2057664   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.10342435301564 * AcceptedCmp10 + -0.1021625473908 *
AcceptedCmp20 + -0.17400073301804 * AcceptedCmp30 + 0.1295257925186 * AcceptedCmp40 +
-0.17149939617806 * AcceptedCmp50 + -0.11843709761825 * Complain0 ;
2057665   +   H13  = H13  +      0.3357459370893 * AcceptedCmp10
2057666   +          +      -0.142120215863 * AcceptedCmp20  +     0.74265608697316 *
2057667   +        AcceptedCmp30  +     0.62493796040954 * AcceptedCmp40
2057668   +          +     0.60033091776267 * AcceptedCmp50  +    -0.70537393421868 *
2057669   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.3357459370893 * AcceptedCmp10 + -0.142120215863 *
AcceptedCmp20 + 0.74265608697316 * AcceptedCmp30 + 0.62493796040954 * AcceptedCmp40 +
0.60033091776267 * AcceptedCmp50 + -0.70537393421868 * Complain0 ;
2057670   +   H14  = H14  +     0.52427760948235 * AcceptedCmp10
2057671   +          +     0.50852083885302 * AcceptedCmp20  +     0.30116257238429 *
2057672   +        AcceptedCmp30  +     0.31213749631365 * AcceptedCmp40
2057673   +          +     0.49344261660916 * AcceptedCmp50  +    -0.18226921500969 *
2057674   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.52427760948235 * AcceptedCmp10 + 0.50852083885302 *
AcceptedCmp20 + 0.30116257238429 * AcceptedCmp30 + 0.31213749631365 * AcceptedCmp40 +
0.49344261660916 * AcceptedCmp50 + -0.18226921500969 * Complain0 ;
2057675   +   H11  = H11  +     0.04284090874847 * Education2n_Cycle
2057676   +          +    -0.30425860762413 * EducationBasic  +    -0.44977960705402 *
2057677   +        EducationGraduation  +     -0.0712759822621 * EducationMaster
2057678   +          +     0.05171313818048 * Marital_StatusDivorced
2057679   +          +    -0.79112453157624 * Marital_StatusMarried
2057680   +          +     0.89650138723512 * Marital_StatusSingle
2057681   +          +    -0.22094240412913 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04284090874847 * Education2n_Cycle + -0.30425860762413 *
EducationBasic + -0.44977960705402 * EducationGraduation + -0.0712759822621 * EducationMaster
+ 0.05171313818048 * Marital_StatusDivorced + -0.79112453157624 * Marital_StatusMarried +
0.89650138723512 * Marital_StatusSingle + -0.22094240412913 * Marital_StatusTogether ;
2057682   +   H12  = H12  +    -0.32431446530898 * Education2n_Cycle
2057683   +          +     0.04651949620543 * EducationBasic  +     0.50250608857106 *
2057684   +        EducationGraduation  +     0.00514401910219 * EducationMaster
2057685   +          +     0.05091092042416 * Marital_StatusDivorced
2057686   +          +     0.86642985712339 * Marital_StatusMarried
2057687   +          +    -0.14148832619997 * Marital_StatusSingle
2057688   +          +     0.54248977280079 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.32431446530898 * Education2n_Cycle + 0.04651949620543 *
EducationBasic + 0.50250608857106 * EducationGraduation + 0.00514401910219 * EducationMaster +
0.05091092042416 * Marital_StatusDivorced + 0.86642985712339 * Marital_StatusMarried +
-0.14148832619997 * Marital_StatusSingle + 0.54248977280079 * Marital_StatusTogether ;
2057689   +   H13  = H13  +      0.0307333873684 * Education2n_Cycle
2057690   +          +     0.54778728297045 * EducationBasic  +    -0.56032296783121 *
2057691   +        EducationGraduation  +     0.26811389967146 * EducationMaster
2057692   +          +    -0.67787102917679 * Marital_StatusDivorced
2057693   +          +     1.38931504762816 * Marital_StatusMarried
2057694   +          +    -0.51164629287485 * Marital_StatusSingle
2057695   +          +     1.18856608313733 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.0307333873684 * Education2n_Cycle + 0.54778728297045 *
EducationBasic + -0.56032296783121 * EducationGraduation + 0.26811389967146 * EducationMaster
+ -0.67787102917679 * Marital_StatusDivorced + 1.38931504762816 * Marital_StatusMarried +
-0.51164629287485 * Marital_StatusSingle + 1.18856608313733 * Marital_StatusTogether ;
2057696   +   H14  = H14  +    -0.07575289231798 * Education2n_Cycle
2057697   +          +     0.20678548929493 * EducationBasic  +     0.15952949579281 *
2057698   +        EducationGraduation  +    -0.08313247341922 * EducationMaster
2057699   +          +     0.12658153975639 * Marital_StatusDivorced
2057700   +          +     0.20111721742791 * Marital_StatusMarried
2057701   +          +     -0.3521524791648 * Marital_StatusSingle
2057702   +          +     0.24908846940254 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.07575289231798 * Education2n_Cycle + 0.20678548929493 *
EducationBasic + 0.15952949579281 * EducationGraduation + -0.08313247341922 * EducationMaster
+ 0.12658153975639 * Marital_StatusDivorced + 0.20111721742791 * Marital_StatusMarried +
-0.3521524791648 * Marital_StatusSingle + 0.24908846940254 * Marital_StatusTogether ;
2057703   +   H11  =      0.8846003542153 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.8846003542153 + H11 ;
2057704   +   H12  =      1.7793661863354 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.7793661863354 + H12 ;
2057705   +   H13  =    -0.73914187312129 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.73914187312129 + H13 ;
2057706   +   H14  =    -0.28907220457418 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.28907220457418 + H14 ;
2057707   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2057708   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2057709   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
2057710   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
2057711   +END;
MPRINT(EM_DIAGRAM):   END;
2057712   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2057713   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2057714   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2057715   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
2057716   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
2057717   +END;
MPRINT(EM_DIAGRAM):   END;
2057718   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2057719   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2057720   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2057721   +
2057722   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2057723   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2057724   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2057725   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2057726   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2057727   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2057728   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2057729   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2057730   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2057731   +end;
MPRINT(EM_DIAGRAM):   end;
2057732   +else do;
MPRINT(EM_DIAGRAM):   else do;
2057733   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2057734   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2057735   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2057736   +   end;
MPRINT(EM_DIAGRAM):   end;
2057737   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2057738   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2057739   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2057740   +   end;
MPRINT(EM_DIAGRAM):   end;
2057741   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2057742   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2057743   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2057744   +   end;
MPRINT(EM_DIAGRAM):   end;
2057745   +end;
MPRINT(EM_DIAGRAM):   end;
2057746   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2057747   +   P_DepVar1  =    -1.84303414221873 * H11  +     1.56062653143645 * H12
2057748   +          +     -3.0630784922123 * H13  +    -4.55573659919551 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.84303414221873 * H11 + 1.56062653143645 * H12 +
-3.0630784922123 * H13 + -4.55573659919551 * H14 ;
2057749   +   P_DepVar1  =    -1.51714888392638 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.51714888392638 + P_DepVar1 ;
2057750   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2057751   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2057752   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2057753   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2057754   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2057755   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2057756   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2057757   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2057758   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2057759   +END;
MPRINT(EM_DIAGRAM):   END;
2057760   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2057761   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2057762   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2057763   +END;
MPRINT(EM_DIAGRAM):   END;
2057764   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2057765   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2057766   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2057767   +END;
MPRINT(EM_DIAGRAM):   END;
2057768   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2057769   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2057770   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2057771   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2057772   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2057773   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2057774   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2057775   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2057776   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2057777   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2057778   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2057779   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2057780   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2057781   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2057782   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2057783   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2057784   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2057785   +END;
MPRINT(EM_DIAGRAM):   END;
2057786   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2057787   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2057788   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2057789   +drop
2057790   +H11
2057791   +H12
2057792   +H13
2057793   +H14
2057794   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
2057795   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2057796   +* Renaming variables for Neural33;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural33;
2057797   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2057798   +* Renaming Posterior variables for Neural33;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural33;
2057799   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2057800   +drop Neural33_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural33_P_DepVar1;
2057801   +Neural33_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural33_P_DepVar1 = P_DepVar1;
2057802   +drop Neural33_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural33_P_DepVar0;
2057803   +Neural33_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural33_P_DepVar0 = P_DepVar0;
2057804   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2057805   +* Renaming _WARN_ variable for Neural33;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural33;
2057806   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2057807   +length Neural33_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural33_WARN_ $4;
2057808   +drop Neural33_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural33_WARN_;
2057809   +Neural33_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural33_WARN_ = _WARN_;
2057810   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2057811   +* Ensmbl22: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Scoring Code of model 6 of 7;
2057812   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2057813   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2057814   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
2057815   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2057816   +* NODE: Neural32;
MPRINT(EM_DIAGRAM):   * NODE: Neural32;
2057817   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2057818   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2057819   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2057820   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2057821   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2057822   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2057823   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2057824   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2057825   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2057826   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2057827   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2057828   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2057829   +LENGTH _WARN_ $4
2057830   +      F_DepVar  $ 12
2057831   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2057832   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2057833   +
2057834   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2057835   +
2057836   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2057837   +
2057838   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2057839   +
2057840   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2057841   +
2057842   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2057843   +
2057844   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2057845   +
2057846   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2057847   +
2057848   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2057849   +
2057850   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2057851   +
2057852   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2057853   +
2057854   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2057855   +
2057856   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2057857   +
2057858   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2057859   +
2057860   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2057861   +
2057862   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2057863   +
2057864   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2057865   +
2057866   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2057867   +
2057868   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2057869   +
2057870   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2057871   +
2057872   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2057873   +
2057874   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2057875   +
2057876   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2057877   +
2057878   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2057879   +
2057880   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2057881   +
2057882   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2057883   +
2057884   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2057885   +
2057886   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2057887   +
2057888   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2057889   +
2057890   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2057891   +
2057892   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2057893   +
2057894   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
2057895   +
2057896   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2057897   +
2057898   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2057899   +
2057900   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2057901   +
2057902   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2057903   +
2057904   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2057905   +
2057906   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2057907   +
2057908   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2057909   +
2057910   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2057911   +
2057912   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2057913   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2057914   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2057915   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2057916   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2057917   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2057918   +end;
MPRINT(EM_DIAGRAM):   end;
2057919   +else do;
MPRINT(EM_DIAGRAM):   else do;
2057920   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2057921   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2057922   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2057923   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2057924   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2057925   +   end;
MPRINT(EM_DIAGRAM):   end;
2057926   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2057927   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2057928   +   end;
MPRINT(EM_DIAGRAM):   end;
2057929   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2057930   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2057931   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2057932   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2057933   +   end;
MPRINT(EM_DIAGRAM):   end;
2057934   +end;
MPRINT(EM_DIAGRAM):   end;
2057935   +
2057936   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2057937   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2057938   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2057939   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2057940   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2057941   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2057942   +end;
MPRINT(EM_DIAGRAM):   end;
2057943   +else do;
MPRINT(EM_DIAGRAM):   else do;
2057944   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2057945   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2057946   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2057947   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2057948   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2057949   +   end;
MPRINT(EM_DIAGRAM):   end;
2057950   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2057951   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2057952   +   end;
MPRINT(EM_DIAGRAM):   end;
2057953   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2057954   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2057955   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2057956   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2057957   +   end;
MPRINT(EM_DIAGRAM):   end;
2057958   +end;
MPRINT(EM_DIAGRAM):   end;
2057959   +
2057960   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2057961   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2057962   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2057963   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2057964   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2057965   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2057966   +end;
MPRINT(EM_DIAGRAM):   end;
2057967   +else do;
MPRINT(EM_DIAGRAM):   else do;
2057968   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2057969   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2057970   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2057971   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2057972   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2057973   +   end;
MPRINT(EM_DIAGRAM):   end;
2057974   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2057975   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2057976   +   end;
MPRINT(EM_DIAGRAM):   end;
2057977   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2057978   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2057979   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2057980   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2057981   +   end;
MPRINT(EM_DIAGRAM):   end;
2057982   +end;
MPRINT(EM_DIAGRAM):   end;
2057983   +
2057984   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2057985   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2057986   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2057987   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2057988   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2057989   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2057990   +end;
MPRINT(EM_DIAGRAM):   end;
2057991   +else do;
MPRINT(EM_DIAGRAM):   else do;
2057992   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2057993   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2057994   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2057995   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2057996   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2057997   +   end;
MPRINT(EM_DIAGRAM):   end;
2057998   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2057999   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2058000   +   end;
MPRINT(EM_DIAGRAM):   end;
2058001   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2058002   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2058003   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2058004   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2058005   +   end;
MPRINT(EM_DIAGRAM):   end;
2058006   +end;
MPRINT(EM_DIAGRAM):   end;
2058007   +
2058008   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2058009   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2058010   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2058011   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2058012   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2058013   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2058014   +end;
MPRINT(EM_DIAGRAM):   end;
2058015   +else do;
MPRINT(EM_DIAGRAM):   else do;
2058016   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2058017   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2058018   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2058019   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2058020   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2058021   +   end;
MPRINT(EM_DIAGRAM):   end;
2058022   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2058023   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2058024   +   end;
MPRINT(EM_DIAGRAM):   end;
2058025   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2058026   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2058027   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2058028   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2058029   +   end;
MPRINT(EM_DIAGRAM):   end;
2058030   +end;
MPRINT(EM_DIAGRAM):   end;
2058031   +
2058032   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2058033   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2058034   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2058035   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2058036   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2058037   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2058038   +end;
MPRINT(EM_DIAGRAM):   end;
2058039   +else do;
MPRINT(EM_DIAGRAM):   else do;
2058040   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2058041   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2058042   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2058043   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2058044   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2058045   +   end;
MPRINT(EM_DIAGRAM):   end;
2058046   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2058047   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2058048   +   end;
MPRINT(EM_DIAGRAM):   end;
2058049   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2058050   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2058051   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2058052   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2058053   +   end;
MPRINT(EM_DIAGRAM):   end;
2058054   +end;
MPRINT(EM_DIAGRAM):   end;
2058055   +
2058056   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2058057   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2058058   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2058059   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2058060   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2058061   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2058062   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2058063   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2058064   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2058065   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2058066   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2058067   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2058068   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2058069   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2058070   +end;
MPRINT(EM_DIAGRAM):   end;
2058071   +else do;
MPRINT(EM_DIAGRAM):   else do;
2058072   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2058073   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2058074   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2058075   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2058076   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2058077   +   end;
MPRINT(EM_DIAGRAM):   end;
2058078   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2058079   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2058080   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2058081   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2058082   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2058083   +   end;
MPRINT(EM_DIAGRAM):   end;
2058084   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2058085   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2058086   +   end;
MPRINT(EM_DIAGRAM):   end;
2058087   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2058088   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2058089   +   end;
MPRINT(EM_DIAGRAM):   end;
2058090   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2058091   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2058092   +   end;
MPRINT(EM_DIAGRAM):   end;
2058093   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2058094   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2058095   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2058096   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2058097   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2058098   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2058099   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2058100   +   end;
MPRINT(EM_DIAGRAM):   end;
2058101   +end;
MPRINT(EM_DIAGRAM):   end;
2058102   +
2058103   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2058104   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2058105   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2058106   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2058107   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2058108   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2058109   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2058110   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2058111   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2058112   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2058113   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2058114   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2058115   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2058116   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2058117   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2058118   +end;
MPRINT(EM_DIAGRAM):   end;
2058119   +else do;
MPRINT(EM_DIAGRAM):   else do;
2058120   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2058121   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2058122   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2058123   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2058124   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2058125   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2058126   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2058127   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2058128   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2058129   +         end;
MPRINT(EM_DIAGRAM):   end;
2058130   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2058131   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2058132   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2058133   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2058134   +            end;
MPRINT(EM_DIAGRAM):   end;
2058135   +         end;
MPRINT(EM_DIAGRAM):   end;
2058136   +      end;
MPRINT(EM_DIAGRAM):   end;
2058137   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2058138   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2058139   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2058140   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2058141   +         end;
MPRINT(EM_DIAGRAM):   end;
2058142   +      end;
MPRINT(EM_DIAGRAM):   end;
2058143   +   end;
MPRINT(EM_DIAGRAM):   end;
2058144   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2058145   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2058146   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2058147   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2058148   +      end;
MPRINT(EM_DIAGRAM):   end;
2058149   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2058150   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2058151   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2058152   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2058153   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2058154   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2058155   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2058156   +         end;
MPRINT(EM_DIAGRAM):   end;
2058157   +      end;
MPRINT(EM_DIAGRAM):   end;
2058158   +   end;
MPRINT(EM_DIAGRAM):   end;
2058159   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2058160   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2058161   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2058162   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2058163   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2058164   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2058165   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2058166   +   end;
MPRINT(EM_DIAGRAM):   end;
2058167   +end;
MPRINT(EM_DIAGRAM):   end;
2058168   +
2058169   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2058170   +*** Checking missing input Interval
2058171   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2058172   +
2058173   +IF NMISS(
2058174   +   Income ,
2058175   +   Kidhome ,
2058176   +   MntFishProducts ,
2058177   +   MntFruits ,
2058178   +   MntGoldProds ,
2058179   +   MntMeatProducts ,
2058180   +   MntSweetProducts ,
2058181   +   MntWines ,
2058182   +   NumCatalogPurchases ,
2058183   +   NumDealsPurchases ,
2058184   +   NumStorePurchases ,
2058185   +   NumWebPurchases ,
2058186   +   NumWebVisitsMonth ,
2058187   +   Recency ,
2058188   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
2058189   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2058190   +
2058191   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2058192   +END;
MPRINT(EM_DIAGRAM):   END;
2058193   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2058194   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2058195   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2058196   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2058197   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2058198   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2058199   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2058200   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2058201   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2058202   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2058203   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2058204   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2058205   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2058206   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2058207   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2058208   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2058209   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2058210   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2058211   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2058212   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2058213   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2058214   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2058215   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2058216   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2058217   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2058218   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2058219   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2058220   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2058221   +END;
MPRINT(EM_DIAGRAM):   END;
2058222   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2058223   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2058224   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2058225   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2058226   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2058227   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2058228   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2058229   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2058230   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2058231   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2058232   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2058233   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2058234   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2058235   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2058236   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2058237   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2058238   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2058239   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2058240   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2058241   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2058242   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2058243   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2058244   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2058245   +   ELSE S_NumCatalogPurchases
2058246   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2058247   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2058248   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2058249   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2058250   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2058251   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2058252   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2058253   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2058254   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2058255   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2058256   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2058257   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2058258   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2058259   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2058260   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2058261   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2058262   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2058263   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2058264   +END;
MPRINT(EM_DIAGRAM):   END;
2058265   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2058266   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
2058267   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2058268   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2058269   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
2058270   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2058271   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2058272   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2058273   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2058274   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2058275   +   H11  =     1.40261108800308 * S_Income  +     -0.8062097507842 * S_Kidhome
2058276   +          +    -0.12974862644982 * S_MntFishProducts
2058277   +          +     0.08065642800368 * S_MntFruits  +    -0.12102130003972 *
2058278   +        S_MntGoldProds  +     0.19226249622126 * S_MntMeatProducts
2058279   +          +    -0.12290326901613 * S_MntSweetProducts
2058280   +          +     0.07790241176978 * S_MntWines  +     0.36123042724896 *
2058281   +        S_NumCatalogPurchases  +    -0.01034406765754 * S_NumDealsPurchases
2058282   +          +     0.09738032540137 * S_NumStorePurchases
2058283   +          +     0.44459515215205 * S_NumWebPurchases
2058284   +          +      0.8471075994578 * S_NumWebVisitsMonth
2058285   +          +    -1.10667985160899 * S_Recency  +    -0.88509832868515 *
2058286   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 1.40261108800308 * S_Income + -0.8062097507842 * S_Kidhome +
-0.12974862644982 * S_MntFishProducts + 0.08065642800368 * S_MntFruits + -0.12102130003972 *
S_MntGoldProds + 0.19226249622126 * S_MntMeatProducts + -0.12290326901613 * S_MntSweetProducts
+ 0.07790241176978 * S_MntWines + 0.36123042724896 * S_NumCatalogPurchases + -0.01034406765754
* S_NumDealsPurchases + 0.09738032540137 * S_NumStorePurchases + 0.44459515215205 *
S_NumWebPurchases + 0.8471075994578 * S_NumWebVisitsMonth + -1.10667985160899 * S_Recency +
-0.88509832868515 * S_Teenhome ;
2058287   +   H12  =     0.51266936686642 * S_Income  +     0.26909433357851 * S_Kidhome
2058288   +          +     0.02406077596811 * S_MntFishProducts
2058289   +          +    -0.57443793453522 * S_MntFruits  +     0.36824731232149 *
2058290   +        S_MntGoldProds  +     0.40177289143061 * S_MntMeatProducts
2058291   +          +     -0.1147507059349 * S_MntSweetProducts
2058292   +          +    -0.66379351187459 * S_MntWines  +     1.33407347415468 *
2058293   +        S_NumCatalogPurchases  +     1.00633891197299 * S_NumDealsPurchases
2058294   +          +    -0.23920969262322 * S_NumStorePurchases
2058295   +          +     -0.6008837862932 * S_NumWebPurchases
2058296   +          +     0.26759743722885 * S_NumWebVisitsMonth
2058297   +          +    -0.42755419464125 * S_Recency  +    -0.14471776361394 *
2058298   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.51266936686642 * S_Income + 0.26909433357851 * S_Kidhome +
0.02406077596811 * S_MntFishProducts + -0.57443793453522 * S_MntFruits + 0.36824731232149 *
S_MntGoldProds + 0.40177289143061 * S_MntMeatProducts + -0.1147507059349 * S_MntSweetProducts
+ -0.66379351187459 * S_MntWines + 1.33407347415468 * S_NumCatalogPurchases + 1.00633891197299
* S_NumDealsPurchases + -0.23920969262322 * S_NumStorePurchases + -0.6008837862932 *
S_NumWebPurchases + 0.26759743722885 * S_NumWebVisitsMonth + -0.42755419464125 * S_Recency +
-0.14471776361394 * S_Teenhome ;
2058299   +   H13  =    -0.19807308698832 * S_Income  +     0.25934675474849 * S_Kidhome
2058300   +          +     0.04398331533724 * S_MntFishProducts
2058301   +          +    -0.00090357598988 * S_MntFruits  +     0.05139545341773 *
2058302   +        S_MntGoldProds  +    -0.74617114336019 * S_MntMeatProducts
2058303   +          +     0.00552488718744 * S_MntSweetProducts
2058304   +          +     0.47194407197012 * S_MntWines  +    -0.35149551848487 *
2058305   +        S_NumCatalogPurchases  +    -0.30232522133093 * S_NumDealsPurchases
2058306   +          +     0.60058189155105 * S_NumStorePurchases
2058307   +          +     0.51423374855856 * S_NumWebPurchases
2058308   +          +     -0.9075304423321 * S_NumWebVisitsMonth
2058309   +          +     0.83597739226791 * S_Recency  +     0.15783202762709 *
2058310   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.19807308698832 * S_Income + 0.25934675474849 * S_Kidhome +
0.04398331533724 * S_MntFishProducts + -0.00090357598988 * S_MntFruits + 0.05139545341773 *
S_MntGoldProds + -0.74617114336019 * S_MntMeatProducts + 0.00552488718744 * S_MntSweetProducts
+ 0.47194407197012 * S_MntWines + -0.35149551848487 * S_NumCatalogPurchases +
-0.30232522133093 * S_NumDealsPurchases + 0.60058189155105 * S_NumStorePurchases +
0.51423374855856 * S_NumWebPurchases + -0.9075304423321 * S_NumWebVisitsMonth +
0.83597739226791 * S_Recency + 0.15783202762709 * S_Teenhome ;
2058311   +   H11  = H11  +    -0.26274045665457 * AcceptedCmp10
2058312   +          +    -0.86105702939371 * AcceptedCmp20  +    -0.50476270558977 *
2058313   +        AcceptedCmp30  +    -0.84284126473343 * AcceptedCmp40
2058314   +          +     0.19764907691314 * AcceptedCmp50  +    -0.29305577412263 *
2058315   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.26274045665457 * AcceptedCmp10 + -0.86105702939371 *
AcceptedCmp20 + -0.50476270558977 * AcceptedCmp30 + -0.84284126473343 * AcceptedCmp40 +
0.19764907691314 * AcceptedCmp50 + -0.29305577412263 * Complain0 ;
2058316   +   H12  = H12  +    -0.27394139847883 * AcceptedCmp10
2058317   +          +    -0.14688750266104 * AcceptedCmp20  +    -0.27982299242327 *
2058318   +        AcceptedCmp30  +    -0.10465140408787 * AcceptedCmp40
2058319   +          +    -0.81681330244218 * AcceptedCmp50  +    -0.28152730217644 *
2058320   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.27394139847883 * AcceptedCmp10 + -0.14688750266104 *
AcceptedCmp20 + -0.27982299242327 * AcceptedCmp30 + -0.10465140408787 * AcceptedCmp40 +
-0.81681330244218 * AcceptedCmp50 + -0.28152730217644 * Complain0 ;
2058321   +   H13  = H13  +     0.42310780831005 * AcceptedCmp10
2058322   +          +     0.41337614261155 * AcceptedCmp20  +     0.41436520641821 *
2058323   +        AcceptedCmp30  +     0.08914989208239 * AcceptedCmp40
2058324   +          +     0.54013759697695 * AcceptedCmp50  +    -0.19478210268955 *
2058325   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.42310780831005 * AcceptedCmp10 + 0.41337614261155 *
AcceptedCmp20 + 0.41436520641821 * AcceptedCmp30 + 0.08914989208239 * AcceptedCmp40 +
0.54013759697695 * AcceptedCmp50 + -0.19478210268955 * Complain0 ;
2058326   +   H11  = H11  +     0.40331200702699 * Education2n_Cycle
2058327   +          +     0.17202421641945 * EducationBasic  +    -0.29654161092174 *
2058328   +        EducationGraduation  +     -0.4835104183635 * EducationMaster
2058329   +          +     0.52129580188513 * Marital_StatusDivorced
2058330   +          +     -1.5224490339553 * Marital_StatusMarried
2058331   +          +     1.05062906057771 * Marital_StatusSingle
2058332   +          +    -1.16420887937635 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.40331200702699 * Education2n_Cycle + 0.17202421641945 *
EducationBasic + -0.29654161092174 * EducationGraduation + -0.4835104183635 * EducationMaster
+ 0.52129580188513 * Marital_StatusDivorced + -1.5224490339553 * Marital_StatusMarried +
1.05062906057771 * Marital_StatusSingle + -1.16420887937635 * Marital_StatusTogether ;
2058333   +   H12  = H12  +     -0.3488928858263 * Education2n_Cycle
2058334   +          +     0.38279680594423 * EducationBasic  +     0.20376044836519 *
2058335   +        EducationGraduation  +     0.20697694670185 * EducationMaster
2058336   +          +    -0.14428158063317 * Marital_StatusDivorced
2058337   +          +     0.22396926143356 * Marital_StatusMarried
2058338   +          +    -0.12980854818876 * Marital_StatusSingle
2058339   +          +     0.32607015627906 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.3488928858263 * Education2n_Cycle + 0.38279680594423 *
EducationBasic + 0.20376044836519 * EducationGraduation + 0.20697694670185 * EducationMaster +
-0.14428158063317 * Marital_StatusDivorced + 0.22396926143356 * Marital_StatusMarried +
-0.12980854818876 * Marital_StatusSingle + 0.32607015627906 * Marital_StatusTogether ;
2058340   +   H13  = H13  +    -0.18351418824199 * Education2n_Cycle
2058341   +          +     0.53417952447263 * EducationBasic  +    -0.14333929289628 *
2058342   +        EducationGraduation  +     0.04513004774082 * EducationMaster
2058343   +          +    -0.25615797303064 * Marital_StatusDivorced
2058344   +          +     0.18825506199046 * Marital_StatusMarried
2058345   +          +    -0.24607556819871 * Marital_StatusSingle
2058346   +          +     0.29531673844201 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.18351418824199 * Education2n_Cycle + 0.53417952447263 *
EducationBasic + -0.14333929289628 * EducationGraduation + 0.04513004774082 * EducationMaster
+ -0.25615797303064 * Marital_StatusDivorced + 0.18825506199046 * Marital_StatusMarried +
-0.24607556819871 * Marital_StatusSingle + 0.29531673844201 * Marital_StatusTogether ;
2058347   +   H11  =    -1.29289362679377 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.29289362679377 + H11 ;
2058348   +   H12  =     0.88724419151235 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.88724419151235 + H12 ;
2058349   +   H13  =    -0.51194544699467 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.51194544699467 + H13 ;
2058350   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2058351   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2058352   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
2058353   +END;
MPRINT(EM_DIAGRAM):   END;
2058354   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2058355   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2058356   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2058357   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
2058358   +END;
MPRINT(EM_DIAGRAM):   END;
2058359   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2058360   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2058361   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2058362   +
2058363   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2058364   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2058365   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2058366   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2058367   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2058368   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2058369   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2058370   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2058371   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2058372   +end;
MPRINT(EM_DIAGRAM):   end;
2058373   +else do;
MPRINT(EM_DIAGRAM):   else do;
2058374   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2058375   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2058376   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2058377   +   end;
MPRINT(EM_DIAGRAM):   end;
2058378   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2058379   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2058380   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2058381   +   end;
MPRINT(EM_DIAGRAM):   end;
2058382   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2058383   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2058384   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2058385   +   end;
MPRINT(EM_DIAGRAM):   end;
2058386   +end;
MPRINT(EM_DIAGRAM):   end;
2058387   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2058388   +   P_DepVar1  =     4.44251020865882 * H11  +     2.67139161773156 * H12
2058389   +          +    -4.73549395111184 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.44251020865882 * H11 + 2.67139161773156 * H12 +
-4.73549395111184 * H13 ;
2058390   +   P_DepVar1  =     0.45492690116644 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.45492690116644 + P_DepVar1 ;
2058391   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2058392   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2058393   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2058394   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2058395   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2058396   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2058397   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2058398   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2058399   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2058400   +END;
MPRINT(EM_DIAGRAM):   END;
2058401   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2058402   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2058403   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2058404   +END;
MPRINT(EM_DIAGRAM):   END;
2058405   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2058406   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2058407   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2058408   +END;
MPRINT(EM_DIAGRAM):   END;
2058409   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2058410   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2058411   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2058412   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2058413   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2058414   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2058415   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2058416   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2058417   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2058418   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2058419   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2058420   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2058421   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2058422   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2058423   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2058424   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2058425   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2058426   +END;
MPRINT(EM_DIAGRAM):   END;
2058427   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2058428   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2058429   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2058430   +drop
2058431   +H11
2058432   +H12
2058433   +H13
2058434   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
2058435   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2058436   +* Renaming variables for Neural32;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural32;
2058437   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2058438   +* Renaming Posterior variables for Neural32;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural32;
2058439   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2058440   +drop Neural32_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural32_P_DepVar1;
2058441   +Neural32_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural32_P_DepVar1 = P_DepVar1;
2058442   +drop Neural32_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural32_P_DepVar0;
2058443   +Neural32_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural32_P_DepVar0 = P_DepVar0;
2058444   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2058445   +* Renaming _WARN_ variable for Neural32;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural32;
2058446   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2058447   +length Neural32_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural32_WARN_ $4;
2058448   +drop Neural32_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural32_WARN_;
2058449   +Neural32_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural32_WARN_ = _WARN_;
2058450   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2058451   +* Ensmbl22: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Scoring Code of model 7 of 7;
2058452   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2058453   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2058454   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
2058455   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2058456   +* NODE: Neural31;
MPRINT(EM_DIAGRAM):   * NODE: Neural31;
2058457   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2058458   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2058459   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2058460   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2058461   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2058462   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2058463   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2058464   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2058465   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2058466   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2058467   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2058468   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2058469   +LENGTH _WARN_ $4
2058470   +      F_DepVar  $ 12
2058471   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2058472   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2058473   +
2058474   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2058475   +
2058476   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2058477   +
2058478   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2058479   +
2058480   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2058481   +
2058482   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2058483   +
2058484   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2058485   +
2058486   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2058487   +
2058488   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2058489   +
2058490   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2058491   +
2058492   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2058493   +
2058494   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2058495   +
2058496   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2058497   +
2058498   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2058499   +
2058500   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2058501   +
2058502   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2058503   +
2058504   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2058505   +
2058506   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2058507   +
2058508   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2058509   +
2058510   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2058511   +
2058512   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2058513   +
2058514   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2058515   +
2058516   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2058517   +
2058518   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2058519   +
2058520   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2058521   +
2058522   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2058523   +
2058524   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2058525   +
2058526   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2058527   +
2058528   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2058529   +
2058530   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2058531   +
2058532   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2058533   +
2058534   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2058535   +
2058536   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2058537   +
2058538   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2058539   +
2058540   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2058541   +
2058542   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2058543   +
2058544   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2058545   +
2058546   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2058547   +
2058548   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2058549   +
2058550   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2058551   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2058552   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2058553   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2058554   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2058555   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2058556   +end;
MPRINT(EM_DIAGRAM):   end;
2058557   +else do;
MPRINT(EM_DIAGRAM):   else do;
2058558   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2058559   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2058560   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2058561   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2058562   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2058563   +   end;
MPRINT(EM_DIAGRAM):   end;
2058564   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2058565   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2058566   +   end;
MPRINT(EM_DIAGRAM):   end;
2058567   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2058568   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2058569   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2058570   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2058571   +   end;
MPRINT(EM_DIAGRAM):   end;
2058572   +end;
MPRINT(EM_DIAGRAM):   end;
2058573   +
2058574   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2058575   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2058576   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2058577   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2058578   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2058579   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2058580   +end;
MPRINT(EM_DIAGRAM):   end;
2058581   +else do;
MPRINT(EM_DIAGRAM):   else do;
2058582   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2058583   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2058584   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2058585   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2058586   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2058587   +   end;
MPRINT(EM_DIAGRAM):   end;
2058588   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2058589   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2058590   +   end;
MPRINT(EM_DIAGRAM):   end;
2058591   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2058592   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2058593   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2058594   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2058595   +   end;
MPRINT(EM_DIAGRAM):   end;
2058596   +end;
MPRINT(EM_DIAGRAM):   end;
2058597   +
2058598   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2058599   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2058600   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2058601   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2058602   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2058603   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2058604   +end;
MPRINT(EM_DIAGRAM):   end;
2058605   +else do;
MPRINT(EM_DIAGRAM):   else do;
2058606   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2058607   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2058608   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2058609   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2058610   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2058611   +   end;
MPRINT(EM_DIAGRAM):   end;
2058612   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2058613   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2058614   +   end;
MPRINT(EM_DIAGRAM):   end;
2058615   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2058616   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2058617   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2058618   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2058619   +   end;
MPRINT(EM_DIAGRAM):   end;
2058620   +end;
MPRINT(EM_DIAGRAM):   end;
2058621   +
2058622   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2058623   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2058624   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2058625   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2058626   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2058627   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2058628   +end;
MPRINT(EM_DIAGRAM):   end;
2058629   +else do;
MPRINT(EM_DIAGRAM):   else do;
2058630   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2058631   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2058632   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2058633   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2058634   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2058635   +   end;
MPRINT(EM_DIAGRAM):   end;
2058636   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2058637   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2058638   +   end;
MPRINT(EM_DIAGRAM):   end;
2058639   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2058640   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2058641   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2058642   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2058643   +   end;
MPRINT(EM_DIAGRAM):   end;
2058644   +end;
MPRINT(EM_DIAGRAM):   end;
2058645   +
2058646   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2058647   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2058648   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2058649   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2058650   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2058651   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2058652   +end;
MPRINT(EM_DIAGRAM):   end;
2058653   +else do;
MPRINT(EM_DIAGRAM):   else do;
2058654   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2058655   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2058656   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2058657   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2058658   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2058659   +   end;
MPRINT(EM_DIAGRAM):   end;
2058660   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2058661   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2058662   +   end;
MPRINT(EM_DIAGRAM):   end;
2058663   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2058664   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2058665   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2058666   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2058667   +   end;
MPRINT(EM_DIAGRAM):   end;
2058668   +end;
MPRINT(EM_DIAGRAM):   end;
2058669   +
2058670   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2058671   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2058672   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2058673   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2058674   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2058675   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2058676   +end;
MPRINT(EM_DIAGRAM):   end;
2058677   +else do;
MPRINT(EM_DIAGRAM):   else do;
2058678   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2058679   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2058680   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2058681   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2058682   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2058683   +   end;
MPRINT(EM_DIAGRAM):   end;
2058684   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2058685   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2058686   +   end;
MPRINT(EM_DIAGRAM):   end;
2058687   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2058688   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2058689   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2058690   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2058691   +   end;
MPRINT(EM_DIAGRAM):   end;
2058692   +end;
MPRINT(EM_DIAGRAM):   end;
2058693   +
2058694   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2058695   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2058696   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2058697   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2058698   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2058699   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2058700   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2058701   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2058702   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2058703   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2058704   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2058705   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2058706   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2058707   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2058708   +end;
MPRINT(EM_DIAGRAM):   end;
2058709   +else do;
MPRINT(EM_DIAGRAM):   else do;
2058710   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2058711   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2058712   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2058713   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2058714   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2058715   +   end;
MPRINT(EM_DIAGRAM):   end;
2058716   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2058717   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2058718   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2058719   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2058720   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2058721   +   end;
MPRINT(EM_DIAGRAM):   end;
2058722   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2058723   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2058724   +   end;
MPRINT(EM_DIAGRAM):   end;
2058725   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2058726   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2058727   +   end;
MPRINT(EM_DIAGRAM):   end;
2058728   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2058729   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2058730   +   end;
MPRINT(EM_DIAGRAM):   end;
2058731   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2058732   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2058733   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2058734   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2058735   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2058736   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2058737   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2058738   +   end;
MPRINT(EM_DIAGRAM):   end;
2058739   +end;
MPRINT(EM_DIAGRAM):   end;
2058740   +
2058741   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2058742   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2058743   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2058744   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2058745   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2058746   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2058747   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2058748   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2058749   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2058750   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2058751   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2058752   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2058753   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2058754   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2058755   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2058756   +end;
MPRINT(EM_DIAGRAM):   end;
2058757   +else do;
MPRINT(EM_DIAGRAM):   else do;
2058758   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2058759   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2058760   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2058761   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2058762   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2058763   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2058764   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2058765   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2058766   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2058767   +         end;
MPRINT(EM_DIAGRAM):   end;
2058768   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2058769   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2058770   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2058771   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2058772   +            end;
MPRINT(EM_DIAGRAM):   end;
2058773   +         end;
MPRINT(EM_DIAGRAM):   end;
2058774   +      end;
MPRINT(EM_DIAGRAM):   end;
2058775   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2058776   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2058777   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2058778   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2058779   +         end;
MPRINT(EM_DIAGRAM):   end;
2058780   +      end;
MPRINT(EM_DIAGRAM):   end;
2058781   +   end;
MPRINT(EM_DIAGRAM):   end;
2058782   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2058783   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2058784   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2058785   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2058786   +      end;
MPRINT(EM_DIAGRAM):   end;
2058787   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2058788   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2058789   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2058790   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2058791   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2058792   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2058793   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2058794   +         end;
MPRINT(EM_DIAGRAM):   end;
2058795   +      end;
MPRINT(EM_DIAGRAM):   end;
2058796   +   end;
MPRINT(EM_DIAGRAM):   end;
2058797   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2058798   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2058799   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2058800   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2058801   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2058802   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2058803   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2058804   +   end;
MPRINT(EM_DIAGRAM):   end;
2058805   +end;
MPRINT(EM_DIAGRAM):   end;
2058806   +
2058807   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2058808   +*** Checking missing input Interval
2058809   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2058810   +
2058811   +IF NMISS(
2058812   +   Income ,
2058813   +   Kidhome ,
2058814   +   MntFishProducts ,
2058815   +   MntFruits ,
2058816   +   MntGoldProds ,
2058817   +   MntMeatProducts ,
2058818   +   MntSweetProducts ,
2058819   +   MntWines ,
2058820   +   NumCatalogPurchases ,
2058821   +   NumDealsPurchases ,
2058822   +   NumStorePurchases ,
2058823   +   NumWebPurchases ,
2058824   +   NumWebVisitsMonth ,
2058825   +   Recency ,
2058826   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
2058827   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2058828   +
2058829   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2058830   +END;
MPRINT(EM_DIAGRAM):   END;
2058831   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2058832   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2058833   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2058834   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2058835   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2058836   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2058837   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2058838   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2058839   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2058840   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2058841   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2058842   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2058843   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2058844   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2058845   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2058846   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2058847   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2058848   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2058849   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2058850   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2058851   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2058852   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2058853   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2058854   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2058855   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2058856   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2058857   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2058858   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2058859   +END;
MPRINT(EM_DIAGRAM):   END;
2058860   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2058861   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2058862   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2058863   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2058864   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2058865   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2058866   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2058867   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2058868   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2058869   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2058870   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2058871   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2058872   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2058873   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2058874   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2058875   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2058876   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2058877   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2058878   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2058879   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2058880   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2058881   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2058882   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2058883   +   ELSE S_NumCatalogPurchases
2058884   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2058885   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2058886   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2058887   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2058888   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2058889   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2058890   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2058891   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2058892   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2058893   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2058894   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2058895   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2058896   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2058897   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2058898   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2058899   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2058900   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2058901   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2058902   +END;
MPRINT(EM_DIAGRAM):   END;
2058903   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2058904   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
2058905   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2058906   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2058907   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
2058908   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2058909   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2058910   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2058911   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2058912   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2058913   +   H11  =    -1.33502235588914 * S_Income  +     0.86914778071024 * S_Kidhome
2058914   +          +     0.06177226616611 * S_MntFishProducts
2058915   +          +     0.22465531888584 * S_MntFruits  +    -0.01216018017424 *
2058916   +        S_MntGoldProds  +    -0.10435601171346 * S_MntMeatProducts
2058917   +          +     0.19245635559754 * S_MntSweetProducts
2058918   +          +    -0.06473329764962 * S_MntWines  +    -0.40260570275107 *
2058919   +        S_NumCatalogPurchases  +    -0.01043435397255 * S_NumDealsPurchases
2058920   +          +    -0.35392759932805 * S_NumStorePurchases
2058921   +          +     -0.2443007642616 * S_NumWebPurchases
2058922   +          +    -0.72667572173837 * S_NumWebVisitsMonth
2058923   +          +     0.97336679863544 * S_Recency  +     0.72544205905496 *
2058924   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -1.33502235588914 * S_Income + 0.86914778071024 * S_Kidhome +
0.06177226616611 * S_MntFishProducts + 0.22465531888584 * S_MntFruits + -0.01216018017424 *
S_MntGoldProds + -0.10435601171346 * S_MntMeatProducts + 0.19245635559754 * S_MntSweetProducts
+ -0.06473329764962 * S_MntWines + -0.40260570275107 * S_NumCatalogPurchases +
-0.01043435397255 * S_NumDealsPurchases + -0.35392759932805 * S_NumStorePurchases +
-0.2443007642616 * S_NumWebPurchases + -0.72667572173837 * S_NumWebVisitsMonth +
0.97336679863544 * S_Recency + 0.72544205905496 * S_Teenhome ;
2058925   +   H12  =    -0.09105644521483 * S_Income  +     0.01920168996111 * S_Kidhome
2058926   +          +     0.00012212205827 * S_MntFishProducts
2058927   +          +     0.00032664246198 * S_MntFruits  +    -0.02161363659377 *
2058928   +        S_MntGoldProds  +    -0.40917729724893 * S_MntMeatProducts
2058929   +          +     0.01459978689352 * S_MntSweetProducts
2058930   +          +     0.28732983017398 * S_MntWines  +    -0.26033282919423 *
2058931   +        S_NumCatalogPurchases  +      -0.306688498482 * S_NumDealsPurchases
2058932   +          +      0.4054643699817 * S_NumStorePurchases
2058933   +          +     0.27747327375374 * S_NumWebPurchases
2058934   +          +    -0.31325270852641 * S_NumWebVisitsMonth
2058935   +          +      0.3707065492652 * S_Recency  +     0.05681262835219 *
2058936   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.09105644521483 * S_Income + 0.01920168996111 * S_Kidhome +
0.00012212205827 * S_MntFishProducts + 0.00032664246198 * S_MntFruits + -0.02161363659377 *
S_MntGoldProds + -0.40917729724893 * S_MntMeatProducts + 0.01459978689352 * S_MntSweetProducts
+ 0.28732983017398 * S_MntWines + -0.26033282919423 * S_NumCatalogPurchases + -0.306688498482
* S_NumDealsPurchases + 0.4054643699817 * S_NumStorePurchases + 0.27747327375374 *
S_NumWebPurchases + -0.31325270852641 * S_NumWebVisitsMonth + 0.3707065492652 * S_Recency +
0.05681262835219 * S_Teenhome ;
2058937   +   H11  = H11  +     0.23904403737743 * AcceptedCmp10
2058938   +          +     0.12365860406863 * AcceptedCmp20  +     0.28547657706908 *
2058939   +        AcceptedCmp30  +     0.37587337003909 * AcceptedCmp40
2058940   +          +    -0.04113029526683 * AcceptedCmp50  +      0.2596440604013 *
2058941   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.23904403737743 * AcceptedCmp10 + 0.12365860406863 *
AcceptedCmp20 + 0.28547657706908 * AcceptedCmp30 + 0.37587337003909 * AcceptedCmp40 +
-0.04113029526683 * AcceptedCmp50 + 0.2596440604013 * Complain0 ;
2058942   +   H12  = H12  +     0.25336773034662 * AcceptedCmp10
2058943   +          +     0.39499004620022 * AcceptedCmp20  +     0.19852127214148 *
2058944   +        AcceptedCmp30  +     0.19215250383325 * AcceptedCmp40
2058945   +          +     0.27213364707939 * AcceptedCmp50  +    -0.00774901485124 *
2058946   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.25336773034662 * AcceptedCmp10 + 0.39499004620022 *
AcceptedCmp20 + 0.19852127214148 * AcceptedCmp30 + 0.19215250383325 * AcceptedCmp40 +
0.27213364707939 * AcceptedCmp50 + -0.00774901485124 * Complain0 ;
2058947   +   H11  = H11  +    -0.05263155952227 * Education2n_Cycle
2058948   +          +    -1.40124591386453 * EducationBasic  +     0.43501491332678 *
2058949   +        EducationGraduation  +     0.77305262508081 * EducationMaster
2058950   +          +    -0.43667846017683 * Marital_StatusDivorced
2058951   +          +     1.33507828005472 * Marital_StatusMarried
2058952   +          +    -0.75026283842664 * Marital_StatusSingle
2058953   +          +     0.84436594207558 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.05263155952227 * Education2n_Cycle + -1.40124591386453 *
EducationBasic + 0.43501491332678 * EducationGraduation + 0.77305262508081 * EducationMaster +
-0.43667846017683 * Marital_StatusDivorced + 1.33507828005472 * Marital_StatusMarried +
-0.75026283842664 * Marital_StatusSingle + 0.84436594207558 * Marital_StatusTogether ;
2058954   +   H12  = H12  +     0.08398432584098 * Education2n_Cycle
2058955   +          +     0.12375156883157 * EducationBasic  +     -0.0901891766073 *
2058956   +        EducationGraduation  +    -0.07691770257441 * EducationMaster
2058957   +          +    -0.03531690128173 * Marital_StatusDivorced
2058958   +          +    -0.04344171367809 * Marital_StatusMarried
2058959   +          +    -0.05137362653166 * Marital_StatusSingle
2058960   +          +    -0.01265518570667 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.08398432584098 * Education2n_Cycle + 0.12375156883157 *
EducationBasic + -0.0901891766073 * EducationGraduation + -0.07691770257441 * EducationMaster
+ -0.03531690128173 * Marital_StatusDivorced + -0.04344171367809 * Marital_StatusMarried +
-0.05137362653166 * Marital_StatusSingle + -0.01265518570667 * Marital_StatusTogether ;
2058961   +   H11  =     1.86846527977677 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.86846527977677 + H11 ;
2058962   +   H12  =    -0.42494263287735 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.42494263287735 + H12 ;
2058963   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2058964   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2058965   +END;
MPRINT(EM_DIAGRAM):   END;
2058966   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2058967   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2058968   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2058969   +END;
MPRINT(EM_DIAGRAM):   END;
2058970   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2058971   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2058972   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2058973   +
2058974   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2058975   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2058976   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2058977   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2058978   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2058979   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2058980   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2058981   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2058982   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2058983   +end;
MPRINT(EM_DIAGRAM):   end;
2058984   +else do;
MPRINT(EM_DIAGRAM):   else do;
2058985   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2058986   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2058987   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2058988   +   end;
MPRINT(EM_DIAGRAM):   end;
2058989   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2058990   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2058991   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2058992   +   end;
MPRINT(EM_DIAGRAM):   end;
2058993   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2058994   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2058995   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2058996   +   end;
MPRINT(EM_DIAGRAM):   end;
2058997   +end;
MPRINT(EM_DIAGRAM):   end;
2058998   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2058999   +   P_DepVar1  =    -5.43090515434696 * H11  +    -9.08673127131886 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.43090515434696 * H11 + -9.08673127131886 * H12 ;
2059000   +   P_DepVar1  =      2.7752946076831 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.7752946076831 + P_DepVar1 ;
2059001   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2059002   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2059003   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2059004   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2059005   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2059006   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2059007   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2059008   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2059009   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2059010   +END;
MPRINT(EM_DIAGRAM):   END;
2059011   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2059012   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2059013   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2059014   +END;
MPRINT(EM_DIAGRAM):   END;
2059015   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2059016   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2059017   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2059018   +END;
MPRINT(EM_DIAGRAM):   END;
2059019   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2059020   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2059021   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2059022   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2059023   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2059024   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2059025   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2059026   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2059027   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2059028   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2059029   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2059030   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2059031   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2059032   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2059033   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2059034   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2059035   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2059036   +END;
MPRINT(EM_DIAGRAM):   END;
2059037   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2059038   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2059039   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2059040   +drop
2059041   +H11
2059042   +H12
2059043   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
2059044   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2059045   +* Renaming variables for Neural31;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural31;
2059046   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2059047   +* Renaming Posterior variables for Neural31;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural31;
2059048   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2059049   +drop Neural31_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural31_P_DepVar1;
2059050   +Neural31_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural31_P_DepVar1 = P_DepVar1;
2059051   +drop Neural31_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural31_P_DepVar0;
2059052   +Neural31_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural31_P_DepVar0 = P_DepVar0;
2059053   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2059054   +* Renaming _WARN_ variable for Neural31;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural31;
2059055   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2059056   +length Neural31_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural31_WARN_ $4;
2059057   +drop Neural31_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural31_WARN_;
2059058   +Neural31_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural31_WARN_ = _WARN_;
2059059   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2059060   +* Ensmbl22: Average Posteriors of 7 models;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Average Posteriors of 7 models;
2059061   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2059062   +P_DepVar1 = (
2059063   +Reg10_P_DepVar1 +
2059064   +Neural30_P_DepVar1 +
2059065   +Neural35_P_DepVar1 +
2059066   +Neural34_P_DepVar1 +
2059067   +Neural33_P_DepVar1 +
2059068   +Neural32_P_DepVar1 +
2059069   +Neural31_P_DepVar1
2059070   +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( Reg10_P_DepVar1 + Neural30_P_DepVar1 + Neural35_P_DepVar1
+ Neural34_P_DepVar1 + Neural33_P_DepVar1 + Neural32_P_DepVar1 + Neural31_P_DepVar1 )/7;
2059071   +P_DepVar0 = (
2059072   +Reg10_P_DepVar0 +
2059073   +Neural30_P_DepVar0 +
2059074   +Neural35_P_DepVar0 +
2059075   +Neural34_P_DepVar0 +
2059076   +Neural33_P_DepVar0 +
2059077   +Neural32_P_DepVar0 +
2059078   +Neural31_P_DepVar0
2059079   +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( Reg10_P_DepVar0 + Neural30_P_DepVar0 + Neural35_P_DepVar0
+ Neural34_P_DepVar0 + Neural33_P_DepVar0 + Neural32_P_DepVar0 + Neural31_P_DepVar0 )/7;
2059080   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2059081   +* Ensmbl22: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Computing Classification Vars;
2059082   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2059083   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
2059084   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
2059085   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
2059086   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
2059087   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
2059088   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
2059089   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
2059090   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
2059091   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
2059092   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
2059093   +end;
MPRINT(EM_DIAGRAM):   end;
2059094   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
2059095   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
2059096   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
2059097   +end;
MPRINT(EM_DIAGRAM):   end;
2059098   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2059099   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2059100   +* Ensmbl22: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Producing Unformatted variable;
2059101   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2059102   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
2059103   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
2059104   +else
2059105   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
2059106   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2059107   +* Ensmbl22: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Computing _WARN_ Variable;
2059108   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2059109   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
2059110   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
2059111   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
2059112   +if index(REG10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_,
1, 1) ='M';
2059113   +if index(REG10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_,
2, 1) ='U';
2059114   +if index(REG10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_,
3, 1) ='P';
2059115   +if index(REG10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_,
4, 1) ='C';
2059116   +if index(NEURAL30_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
2059116  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL30_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2059117   +if index(NEURAL30_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
2059117  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL30_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2059118   +if index(NEURAL30_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
2059118  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL30_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2059119   +if index(NEURAL30_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
2059119  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL30_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2059120   +if index(NEURAL35_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
2059120  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL35_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2059121   +if index(NEURAL35_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
2059121  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL35_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2059122   +if index(NEURAL35_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
2059122  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL35_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2059123   +if index(NEURAL35_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
2059123  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL35_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2059124   +if index(NEURAL34_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
2059124  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL34_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2059125   +if index(NEURAL34_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
2059125  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL34_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2059126   +if index(NEURAL34_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
2059126  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL34_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2059127   +if index(NEURAL34_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
2059127  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL34_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2059128   +if index(NEURAL33_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
2059128  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL33_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2059129   +if index(NEURAL33_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
2059129  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL33_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2059130   +if index(NEURAL33_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
2059130  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL33_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2059131   +if index(NEURAL33_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
2059131  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL33_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2059132   +if index(NEURAL32_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
2059132  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL32_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2059133   +if index(NEURAL32_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
2059133  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL32_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2059134   +if index(NEURAL32_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
2059134  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL32_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2059135   +if index(NEURAL32_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
2059135  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL32_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2059136   +if index(NEURAL31_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
2059136  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL31_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2059137   +if index(NEURAL31_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
2059137  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL31_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2059138   +if index(NEURAL31_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
2059138  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL31_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2059139   +if index(NEURAL31_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
2059139  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL31_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2059140   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2059141   +* Ensmbl22: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Computing Residual Vars;
2059142   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2059143   +if
2059144   +F_DepVar NE '1'
2059145   +AND F_DepVar NE '0'
2059146   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
2059147   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
2059148   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
2059149   +end;
MPRINT(EM_DIAGRAM):   end;
2059150   +else do;
MPRINT(EM_DIAGRAM):   else do;
2059151   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
2059152   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
2059153   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
2059154   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
2059155   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
2059156   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
2059157   +END;
MPRINT(EM_DIAGRAM):   END;
2059158   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2059159    run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL22_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.REG10_VALIDATE.VIEW used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.16 seconds
      cpu time            0.15 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2059160    quit;
2059161    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl22_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error"
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_=
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train:
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl22_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl22_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error"
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_=
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid:
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl22_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl22_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
2059221    filename _pref
2059221  ! "C:\\predictive-models-project\Workspaces\EMWS8\Reg10\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Reg10\EMPUBLISHSCORE.sas";
2059222    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2059223    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Reg10\EMPUBLISHSCORE.sas.
2059224   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
2059225   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
2059226   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
2059227   +
2059228   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
2059229   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
2059230   +
2059231   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
2059232   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2059233   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
2059234   +array REG10DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG10DRF [2] $12 _temporary_ ('1' '0' );
2059235   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2059236   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
2059237   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
2059238   +ARRAY REG10DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG10DRU[2] _TEMPORARY_ (1 0);
2059239   +
2059240   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
2059241   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
2059242   +
2059243   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
2059244   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
2059245   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2059246   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2059247   +end;
MPRINT(EM_DIAGRAM):   end;
2059248   +
2059249   +*** Check MntFishProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntFishProducts for missing values ;
2059250   +if missing( MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntFishProducts ) then do;
2059251   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2059252   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2059253   +end;
MPRINT(EM_DIAGRAM):   end;
2059254   +
2059255   +*** Check MntFruits for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntFruits for missing values ;
2059256   +if missing( MntFruits ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntFruits ) then do;
2059257   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2059258   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2059259   +end;
MPRINT(EM_DIAGRAM):   end;
2059260   +
2059261   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
2059262   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
2059263   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2059264   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2059265   +end;
MPRINT(EM_DIAGRAM):   end;
2059266   +
2059267   +*** Check MntWines for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntWines for missing values ;
2059268   +if missing( MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntWines ) then do;
2059269   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2059270   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2059271   +end;
MPRINT(EM_DIAGRAM):   end;
2059272   +
2059273   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
2059274   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
2059275   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2059276   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2059277   +end;
MPRINT(EM_DIAGRAM):   end;
2059278   +
2059279   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
2059280   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
2059281   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2059282   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2059283   +end;
MPRINT(EM_DIAGRAM):   end;
2059284   +
2059285   +*** Check NumStorePurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumStorePurchases for missing values ;
2059286   +if missing( NumStorePurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumStorePurchases ) then do;
2059287   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2059288   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2059289   +end;
MPRINT(EM_DIAGRAM):   end;
2059290   +
2059291   +*** Check NumWebPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebPurchases for missing values ;
2059292   +if missing( NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebPurchases ) then do;
2059293   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2059294   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2059295   +end;
MPRINT(EM_DIAGRAM):   end;
2059296   +
2059297   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
2059298   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
2059299   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2059300   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2059301   +end;
MPRINT(EM_DIAGRAM):   end;
2059302   +
2059303   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
2059304   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
2059305   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2059306   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2059307   +end;
MPRINT(EM_DIAGRAM):   end;
2059308   +
2059309   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
2059310   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
2059311   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2059312   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2059313   +end;
MPRINT(EM_DIAGRAM):   end;
2059314   +
2059315   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2059316   +drop _1_0 ;
MPRINT(EM_DIAGRAM):   drop _1_0 ;
2059317   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2059318   +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
2059319   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2059320   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2059321   +end;
MPRINT(EM_DIAGRAM):   end;
2059322   +else do;
MPRINT(EM_DIAGRAM):   else do;
2059323   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2059324   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2059325   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2059326   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2059327   +      _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
2059328   +   end;
MPRINT(EM_DIAGRAM):   end;
2059329   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2059330   +      _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
2059331   +   end;
MPRINT(EM_DIAGRAM):   end;
2059332   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2059333   +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
2059334   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2059335   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2059336   +   end;
MPRINT(EM_DIAGRAM):   end;
2059337   +end;
MPRINT(EM_DIAGRAM):   end;
2059338   +
2059339   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2059340   +drop _2_0 ;
MPRINT(EM_DIAGRAM):   drop _2_0 ;
2059341   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2059342   +   _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
2059343   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2059344   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2059345   +end;
MPRINT(EM_DIAGRAM):   end;
2059346   +else do;
MPRINT(EM_DIAGRAM):   else do;
2059347   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2059348   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2059349   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2059350   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2059351   +      _2_0 = 1;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
2059352   +   end;
MPRINT(EM_DIAGRAM):   end;
2059353   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2059354   +      _2_0 = -1;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
2059355   +   end;
MPRINT(EM_DIAGRAM):   end;
2059356   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2059357   +      _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
2059358   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2059359   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2059360   +   end;
MPRINT(EM_DIAGRAM):   end;
2059361   +end;
MPRINT(EM_DIAGRAM):   end;
2059362   +
2059363   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2059364   +drop _3_0 ;
MPRINT(EM_DIAGRAM):   drop _3_0 ;
2059365   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2059366   +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
2059367   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2059368   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2059369   +end;
MPRINT(EM_DIAGRAM):   end;
2059370   +else do;
MPRINT(EM_DIAGRAM):   else do;
2059371   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2059372   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2059373   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2059374   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2059375   +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
2059376   +   end;
MPRINT(EM_DIAGRAM):   end;
2059377   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2059378   +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
2059379   +   end;
MPRINT(EM_DIAGRAM):   end;
2059380   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2059381   +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
2059382   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2059383   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2059384   +   end;
MPRINT(EM_DIAGRAM):   end;
2059385   +end;
MPRINT(EM_DIAGRAM):   end;
2059386   +
2059387   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2059388   +drop _4_0 ;
MPRINT(EM_DIAGRAM):   drop _4_0 ;
2059389   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2059390   +   _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
2059391   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2059392   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2059393   +end;
MPRINT(EM_DIAGRAM):   end;
2059394   +else do;
MPRINT(EM_DIAGRAM):   else do;
2059395   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2059396   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2059397   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2059398   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2059399   +      _4_0 = 1;
MPRINT(EM_DIAGRAM):   _4_0 = 1;
2059400   +   end;
MPRINT(EM_DIAGRAM):   end;
2059401   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2059402   +      _4_0 = -1;
MPRINT(EM_DIAGRAM):   _4_0 = -1;
2059403   +   end;
MPRINT(EM_DIAGRAM):   end;
2059404   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2059405   +      _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
2059406   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2059407   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2059408   +   end;
MPRINT(EM_DIAGRAM):   end;
2059409   +end;
MPRINT(EM_DIAGRAM):   end;
2059410   +
2059411   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2059412   +drop _5_0 ;
MPRINT(EM_DIAGRAM):   drop _5_0 ;
2059413   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2059414   +   _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
2059415   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2059416   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2059417   +end;
MPRINT(EM_DIAGRAM):   end;
2059418   +else do;
MPRINT(EM_DIAGRAM):   else do;
2059419   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2059420   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2059421   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2059422   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2059423   +      _5_0 = 1;
MPRINT(EM_DIAGRAM):   _5_0 = 1;
2059424   +   end;
MPRINT(EM_DIAGRAM):   end;
2059425   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2059426   +      _5_0 = -1;
MPRINT(EM_DIAGRAM):   _5_0 = -1;
2059427   +   end;
MPRINT(EM_DIAGRAM):   end;
2059428   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2059429   +      _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
2059430   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2059431   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2059432   +   end;
MPRINT(EM_DIAGRAM):   end;
2059433   +end;
MPRINT(EM_DIAGRAM):   end;
2059434   +
2059435   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2059436   +drop _8_0 _8_1 _8_2 _8_3 ;
MPRINT(EM_DIAGRAM):   drop _8_0 _8_1 _8_2 _8_3 ;
2059437   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2059438   +_8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
2059439   +_8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
2059440   +_8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
2059441   +_8_3 = 0;
MPRINT(EM_DIAGRAM):   _8_3 = 0;
2059442   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2059443   +   _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
2059444   +   _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
2059445   +   _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
2059446   +   _8_3 = .;
MPRINT(EM_DIAGRAM):   _8_3 = .;
2059447   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2059448   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2059449   +end;
MPRINT(EM_DIAGRAM):   end;
2059450   +else do;
MPRINT(EM_DIAGRAM):   else do;
2059451   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2059452   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2059453   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2059454   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2059455   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2059456   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2059457   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2059458   +            _8_0 = 1;
MPRINT(EM_DIAGRAM):   _8_0 = 1;
2059459   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2059460   +         end;
MPRINT(EM_DIAGRAM):   end;
2059461   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2059462   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2059463   +               _8_1 = 1;
MPRINT(EM_DIAGRAM):   _8_1 = 1;
2059464   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2059465   +            end;
MPRINT(EM_DIAGRAM):   end;
2059466   +         end;
MPRINT(EM_DIAGRAM):   end;
2059467   +      end;
MPRINT(EM_DIAGRAM):   end;
2059468   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2059469   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2059470   +            _8_2 = 1;
MPRINT(EM_DIAGRAM):   _8_2 = 1;
2059471   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2059472   +         end;
MPRINT(EM_DIAGRAM):   end;
2059473   +      end;
MPRINT(EM_DIAGRAM):   end;
2059474   +   end;
MPRINT(EM_DIAGRAM):   end;
2059475   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2059476   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2059477   +         _8_3 = 1;
MPRINT(EM_DIAGRAM):   _8_3 = 1;
2059478   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2059479   +      end;
MPRINT(EM_DIAGRAM):   end;
2059480   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2059481   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2059482   +            _8_0 = -1;
MPRINT(EM_DIAGRAM):   _8_0 = -1;
2059483   +            _8_1 = -1;
MPRINT(EM_DIAGRAM):   _8_1 = -1;
2059484   +            _8_2 = -1;
MPRINT(EM_DIAGRAM):   _8_2 = -1;
2059485   +            _8_3 = -1;
MPRINT(EM_DIAGRAM):   _8_3 = -1;
2059486   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2059487   +         end;
MPRINT(EM_DIAGRAM):   end;
2059488   +      end;
MPRINT(EM_DIAGRAM):   end;
2059489   +   end;
MPRINT(EM_DIAGRAM):   end;
2059490   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2059491   +      _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
2059492   +      _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
2059493   +      _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
2059494   +      _8_3 = .;
MPRINT(EM_DIAGRAM):   _8_3 = .;
2059495   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2059496   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2059497   +   end;
MPRINT(EM_DIAGRAM):   end;
2059498   +end;
MPRINT(EM_DIAGRAM):   end;
2059499   +
2059500   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
2059501   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
2059502   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
2059503   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
2059504   +   goto REG10DR1;
MPRINT(EM_DIAGRAM):   goto REG10DR1;
2059505   +end;
MPRINT(EM_DIAGRAM):   end;
2059506   +
2059507   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
2059508   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
2059509   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
2059510   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
2059511   +
2059512   +***  Effect: AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp1 ;
2059513   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
2059514   +_LP0 = _LP0 + (   -0.71107732112007) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.71107732112007) * _TEMP * _1_0;
2059515   +
2059516   +***  Effect: AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp2 ;
2059517   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
2059518   +_LP0 = _LP0 + (   -0.81763295180983) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.81763295180983) * _TEMP * _2_0;
2059519   +
2059520   +***  Effect: AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp3 ;
2059521   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
2059522   +_LP0 = _LP0 + (    -0.8618538514738) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.8618538514738) * _TEMP * _3_0;
2059523   +
2059524   +***  Effect: AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp4 ;
2059525   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
2059526   +_LP0 = _LP0 + (   -0.64997710050937) * _TEMP * _4_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.64997710050937) * _TEMP * _4_0;
2059527   +
2059528   +***  Effect: AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp5 ;
2059529   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
2059530   +_LP0 = _LP0 + (   -0.91699409369659) * _TEMP * _5_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.91699409369659) * _TEMP * _5_0;
2059531   +
2059532   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
2059533   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
2059534   +_LP0 = _LP0 + (    0.00003628120307 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00003628120307 * _TEMP);
2059535   +
2059536   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
2059537   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
2059538   +_LP0 = _LP0 + (    0.09345382071006) * _TEMP * _8_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.09345382071006) * _TEMP * _8_0;
2059539   +_LP0 = _LP0 + (   -0.47894059934485) * _TEMP * _8_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.47894059934485) * _TEMP * _8_1;
2059540   +_LP0 = _LP0 + (    0.46164092141221) * _TEMP * _8_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.46164092141221) * _TEMP * _8_2;
2059541   +_LP0 = _LP0 + (    -0.5078574429985) * _TEMP * _8_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.5078574429985) * _TEMP * _8_3;
2059542   +
2059543   +***  Effect: MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntFishProducts ;
2059544   +_TEMP = MntFishProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntFishProducts ;
2059545   +_LP0 = _LP0 + (   -0.00285470778488 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00285470778488 * _TEMP);
2059546   +
2059547   +***  Effect: MntFruits ;
MPRINT(EM_DIAGRAM):   *** Effect: MntFruits ;
2059548   +_TEMP = MntFruits ;
MPRINT(EM_DIAGRAM):   _TEMP = MntFruits ;
2059549   +_LP0 = _LP0 + (   -0.00481548089585 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00481548089585 * _TEMP);
2059550   +
2059551   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
2059552   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
2059553   +_LP0 = _LP0 + (    0.00485302069895 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00485302069895 * _TEMP);
2059554   +
2059555   +***  Effect: MntWines ;
MPRINT(EM_DIAGRAM):   *** Effect: MntWines ;
2059556   +_TEMP = MntWines ;
MPRINT(EM_DIAGRAM):   _TEMP = MntWines ;
2059557   +_LP0 = _LP0 + (   -0.00184060065513 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00184060065513 * _TEMP);
2059558   +
2059559   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
2059560   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
2059561   +_LP0 = _LP0 + (    0.40015202354101 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.40015202354101 * _TEMP);
2059562   +
2059563   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
2059564   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
2059565   +_LP0 = _LP0 + (    0.39526484909287 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.39526484909287 * _TEMP);
2059566   +
2059567   +***  Effect: NumStorePurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumStorePurchases ;
2059568   +_TEMP = NumStorePurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumStorePurchases ;
2059569   +_LP0 = _LP0 + (   -0.21400418800044 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.21400418800044 * _TEMP);
2059570   +
2059571   +***  Effect: NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebPurchases ;
2059572   +_TEMP = NumWebPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebPurchases ;
2059573   +_LP0 = _LP0 + (    -0.2223953481686 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.2223953481686 * _TEMP);
2059574   +
2059575   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
2059576   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
2059577   +_LP0 = _LP0 + (    0.54388363089232 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.54388363089232 * _TEMP);
2059578   +
2059579   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
2059580   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
2059581   +_LP0 = _LP0 + (   -0.05513564922633 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05513564922633 * _TEMP);
2059582   +
2059583   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
2059584   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
2059585   +_LP0 = _LP0 + (   -0.70674092258187 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.70674092258187 * _TEMP);
2059586   +
2059587   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
2059588   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
2059589   +_P0 = probnorm((   -0.62163391257391) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -0.62163391257391) + _LP0);
2059590   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
2059591   +
2059592   +REG10DR1:
2059593   +
2059594   +
2059595   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   REG10DR1: *** Posterior Probabilities and Predicted Level;
2059596   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2059597   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2059598   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
2059599   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
2059600   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
2059601   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
2059602   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
2059603   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
2059604   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
2059605   +end;
MPRINT(EM_DIAGRAM):   end;
2059606   +I_DepVar = REG10DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG10DRF[_IY];
2059607   +U_DepVar = REG10DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG10DRU[_IY];
2059608   +
2059609   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
2059610   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
2059611   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2059612    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2059613    quit;
2059614    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2059615    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2059616    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2059617    retain ID 2 Node "Reg10";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Reg10";
2059618    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2059619    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 461 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 461 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2059620    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2059621    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2059622    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 461 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 461 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2059623    proc sort data=EMWS8.Reg10_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Reg10_variableset out=_temp2(keep=NAME CREATOR);
2059624    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2059625    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.REG10_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2059626    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2059627    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2059628    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2059629    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2059630    proc contents data=EMWS8.Reg10_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Reg10_train out=_meta(keep=NAME) noprint;
2059631    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2059632    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2059633    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2059634    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2059635    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2059636    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2059637    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2059638    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2059639    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2059640    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2059640  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 264 rows and 5 columns.
 
2059641    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2059642    proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
2059643    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 264 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 264 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2059644    filename _pref
2059644  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2059645    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2059646    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2059647   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2059648   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2059649   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2059650   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2059651   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2059652   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2059653    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2059654    quit;
2059655    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2059656    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2059657    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2059658    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2059659    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2059660    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2059661    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2059662    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2059663    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2059664    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2059665    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2059666    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2059667    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2059668    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2059669    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2059670    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2059671    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2059672    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2059673    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2059674    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2059675    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2059676    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2059677    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2059678    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2059679    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2059680    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2059681    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2059681  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
2059682    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2059683    proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
2059684    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 268 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2059685    filename _pref
2059685  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2059686    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2059687    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2059688   +
2059689   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2059690   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2059690  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2059691   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2059692   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2059693   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2059694   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2059695   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2059696    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2059697    quit;
2059698    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2059699    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2059700    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2059701    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2059702    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2059703    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2059704    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2059705    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2059706    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2059707    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2059708    by NAME;
The SAS System
 
MPRINT(EM_DIAGRAM):   by NAME;
2059709    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2059710    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2059711    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2059712    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2059713    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2059714    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2059715    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2059716    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2059717    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2059718    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2059719    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2059720    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2059721    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2059722    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2059723    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2059724    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2059724  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
2059725    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2059726    proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
2059727    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 307 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2059728    filename _pref
2059728  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2059729    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2059730    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2059731   +
2059732   +
2059733   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2059734   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2059735   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2059736   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2059737   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2059738   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2059739   +
2059740   +
2059741   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2059742   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2059743   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2059744   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2059745   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2059746   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2059747   +
2059748   +
2059749   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2059750   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2059751   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2059752   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2059753   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2059754   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2059755   +
2059756   +
2059757   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2059758   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2059759   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2059760   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2059761   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2059762   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2059763   +
2059764   +
2059765   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2059766   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2059767   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2059768   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2059769   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2059770   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2059771   +
2059772   +
2059773   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2059774   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2059775   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2059776   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2059777   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2059778   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2059779   +
2059780   +
2059781   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2059782   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2059783   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2059784   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2059785   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2059786   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2059787   +
2059788   +
2059789   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2059790   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2059791   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2059792   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2059793   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2059794   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2059795   +if
2059796   +_FILTERNORM1 not in ( '.')
2059797   + and
2059798   +_FILTERNORM2 not in ( '.')
2059799   + and
2059800   +_FILTERNORM3 not in ( '.')
2059801   + and
2059802   +_FILTERNORM4 not in ( '.')
2059803   + and
2059804   +_FILTERNORM5 not in ( '.')
2059805   + and
2059806   +_FILTERNORM6 not in ( '.')
2059807   + and
2059808   +_FILTERNORM7 not in ( ' ')
2059809   + and
2059810   +_FILTERNORM8 not in ( ' ')
2059811   +and
2059812   +( Dt_Customer ne .)
2059813   +and ( Income ne . and (Income<=107000))
2059814   +and ( Kidhome ne .)
2059815   +and ( MntFishProducts ne .)
2059816   +and ( MntFruits ne .)
2059817   +and ( MntGoldProds ne .)
2059818   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2059819   +and ( MntSweetProducts ne .)
2059820   +and ( MntWines ne .)
2059821   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2059822   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2059823   +and ( NumStorePurchases ne .)
2059824   +and ( NumWebPurchases ne .)
2059825   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2059826   +and ( Recency ne .)
2059827   +and ( Teenhome ne .)
2059828   +and ( Year_Birth ne .)
2059829   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
2059830   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2059831   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2059832   +end;
MPRINT(EM_DIAGRAM):   end;
2059833   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2059834   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2059835    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2059836    quit;
2059837    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2059838    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2059839    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2059840    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2059841    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2059842    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2059843    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2059844    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2059845    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2059846    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2059847    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2059848    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2059849    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2059850    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2059851    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2059852    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2059853    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2059854    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2059855    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2059856    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2059857    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2059858    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2059859    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2059860    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2059861    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2059862    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2059863    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2059863  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
2059864    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2059865    proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
2059866    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 373 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2059867    %macro varDept(fcmpdata=,id=);
2059868    %global nobs&id scoreFlag&id;
2059869    %let scoreFlag&id = 0;
2059870    %if &id=1 or ^&fcmpStart %then %do;
2059871    proc sort data=&fcmpdata out=_temp&id nodupkey;
2059872    by NAME;
2059873    where id=&id and LHS in( %let j=1;
2059874    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2059875    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2059876    "&var" %let j = %eval(&j+1);
2059877    %end;
2059878    );
2059879    run;
2059880    %let dsid = %sysfunc(open(_temp&id));
2059881    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2059882    %let dsid = %sysfunc(close(&dsid));
2059883    %if &&nobs&id %then %do;
2059884    %let scoreFlag&id = 1;
2059885    %let fcmpStart = 1;
2059886    %end;
2059887    %else %let fcmpStart = 0;
2059888    %end;
2059889    %else %do;
2059890    proc sort data=&fcmpdata out=_tempid;
2059891    where id=&id;
2059892    by LHS;
2059893    run;
2059894    %let dsid = %sysfunc(open(_tempid));
2059895    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2059896    %let dsid = %sysfunc(close(&dsid));
2059897    %if ^&&nobs&id %then %do;
2059898    proc datasets lib=work nolist;
2059899    delete _tempid;
2059900    run;
2059901    quit;
2059902    %end;
2059903    %else %do;
2059904    data _tempAll;
2059905    set %let j=%eval(&id-1);
2059906    %do x=1 %to &j;
2059907    %if &&nobs&x %then %do;
2059908    _temp&x %end;
2059909    %end;
2059910    ;
2059911    run;
2059912    proc sql;
2059913    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2059913  ! work._tempid p2 where p.name=p2.lhs;
2059914    quit;
2059915    data _temp&id;
2059916    set _temp&id;
2059917    where LHS ne '' and NAME ne '' and Node ne '';
2059918    run;
2059919    proc datasets lib=work nolist;
2059920    delete _tempAll;
2059921    run;
2059922    %let dsid = %sysfunc(open(_temp&id));
2059923    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2059924    %let dsid = %sysfunc(close(&dsid));
2059925    %if ^&&nobs&id %then %do;
2059926    proc datasets lib=work nolist;
2059927    delete _temp&id;
2059928    run;
2059929    quit;
2059930    %end;
2059931    %else %do;
2059932    %let scoreFlag&id = 1;
2059933    data _temp&id;
2059934    set _temp&id;
2059935    where LHS ne NAME and node ne '';
2059936    run;
2059937    %let dsid = %sysfunc(open(_temp&id));
2059938    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2059939    %let dsid = %sysfunc(close(&dsid));
2059940    %if ^&&nobs&id %then %do;
2059941    proc datasets lib=work nolist;
2059942    delete _temp&id;
2059943    run;
2059944    quit;
2059945    %end;
2059946    %else %do;
2059947    proc sort data=_temp&id nodupkey;
2059948    by LHS NAME;
2059949    run;
2059950    %end;
2059951    %end;
2059952    %end;
2059953    %end;
2059954    %mend varDept;
2059955    %macro optCode(outdata=fcmpdata);
2059956    %global fcmpStart;
2059957    %let fcmpStart = 0;
2059958    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2059959    %let NumNodes=9;
2059960    %do k=1 %to &NumNodes;
2059961    %vardept(fcmpdata=&outdata, id=&k);
2059962    %end;
2059963    %mend optCode;
2059964    %optcode(outData=EMWS8.Ensmbl22_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 72 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 54 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 18 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 18 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 18 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 18 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 18 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp6;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP6 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 18 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 18 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.19 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
2059965    filename _pref
2059965  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural30\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural30\EMPUBLISHSCORE.sas";
2059966    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2059967    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural30\EMPUBLISHSCORE.sas.
2059968   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2059969   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2059970   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2059971   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2059972   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2059973   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2059974   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2059975   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2059976   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2059977   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2059978   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2059979   +LENGTH _WARN_ $4
2059980   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2059981   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2059982   +
2059983   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2059984   +
2059985   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2059986   +
2059987   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2059988   +
2059989   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2059990   +
2059991   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2059992   +
2059993   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2059994   +
2059995   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2059996   +
2059997   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2059998   +
2059999   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2060000   +
2060001   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2060002   +
2060003   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2060004   +
2060005   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2060006   +
2060007   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2060008   +
2060009   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2060010   +
2060011   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2060012   +
2060013   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2060014   +
2060015   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2060016   +
2060017   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2060018   +
2060019   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2060020   +
2060021   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2060022   +
2060023   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2060024   +
2060025   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2060026   +
2060027   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2060028   +
2060029   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2060030   +
2060031   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2060032   +
2060033   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2060034   +
2060035   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2060036   +
2060037   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2060038   +
2060039   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2060040   +
2060041   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2060042   +
2060043   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
2060044   +
2060045   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
2060046   +
2060047   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
2060048   +
2060049   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
2060050   +
2060051   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
2060052   +
2060053   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2060054   +
2060055   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2060056   +
2060057   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2060058   +
2060059   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2060060   +
2060061   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2060062   +
2060063   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2060064   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2060065   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2060066   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2060067   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2060068   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2060069   +end;
MPRINT(EM_DIAGRAM):   end;
2060070   +else do;
MPRINT(EM_DIAGRAM):   else do;
2060071   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2060072   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2060073   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2060074   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2060075   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2060076   +   end;
MPRINT(EM_DIAGRAM):   end;
2060077   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2060078   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2060079   +   end;
MPRINT(EM_DIAGRAM):   end;
2060080   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2060081   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2060082   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2060083   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2060084   +   end;
MPRINT(EM_DIAGRAM):   end;
2060085   +end;
MPRINT(EM_DIAGRAM):   end;
2060086   +
2060087   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2060088   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2060089   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2060090   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2060091   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2060092   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2060093   +end;
MPRINT(EM_DIAGRAM):   end;
2060094   +else do;
MPRINT(EM_DIAGRAM):   else do;
2060095   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2060096   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2060097   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2060098   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2060099   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2060100   +   end;
MPRINT(EM_DIAGRAM):   end;
2060101   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2060102   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2060103   +   end;
MPRINT(EM_DIAGRAM):   end;
2060104   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2060105   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2060106   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2060107   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2060108   +   end;
MPRINT(EM_DIAGRAM):   end;
2060109   +end;
MPRINT(EM_DIAGRAM):   end;
2060110   +
2060111   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2060112   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2060113   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2060114   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2060115   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2060116   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2060117   +end;
MPRINT(EM_DIAGRAM):   end;
2060118   +else do;
MPRINT(EM_DIAGRAM):   else do;
2060119   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2060120   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2060121   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2060122   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2060123   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2060124   +   end;
MPRINT(EM_DIAGRAM):   end;
2060125   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2060126   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2060127   +   end;
MPRINT(EM_DIAGRAM):   end;
2060128   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2060129   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2060130   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2060131   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2060132   +   end;
MPRINT(EM_DIAGRAM):   end;
2060133   +end;
MPRINT(EM_DIAGRAM):   end;
2060134   +
2060135   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2060136   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2060137   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2060138   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2060139   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2060140   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2060141   +end;
MPRINT(EM_DIAGRAM):   end;
2060142   +else do;
MPRINT(EM_DIAGRAM):   else do;
2060143   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2060144   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2060145   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2060146   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2060147   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2060148   +   end;
MPRINT(EM_DIAGRAM):   end;
2060149   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2060150   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2060151   +   end;
MPRINT(EM_DIAGRAM):   end;
2060152   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2060153   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2060154   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2060155   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2060156   +   end;
MPRINT(EM_DIAGRAM):   end;
2060157   +end;
MPRINT(EM_DIAGRAM):   end;
2060158   +
2060159   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2060160   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2060161   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2060162   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2060163   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2060164   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2060165   +end;
MPRINT(EM_DIAGRAM):   end;
2060166   +else do;
MPRINT(EM_DIAGRAM):   else do;
2060167   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2060168   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2060169   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2060170   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2060171   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2060172   +   end;
MPRINT(EM_DIAGRAM):   end;
2060173   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2060174   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2060175   +   end;
MPRINT(EM_DIAGRAM):   end;
2060176   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2060177   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2060178   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2060179   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2060180   +   end;
MPRINT(EM_DIAGRAM):   end;
2060181   +end;
MPRINT(EM_DIAGRAM):   end;
2060182   +
2060183   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2060184   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2060185   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2060186   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2060187   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2060188   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2060189   +end;
MPRINT(EM_DIAGRAM):   end;
2060190   +else do;
MPRINT(EM_DIAGRAM):   else do;
2060191   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2060192   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2060193   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2060194   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2060195   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2060196   +   end;
MPRINT(EM_DIAGRAM):   end;
2060197   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2060198   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2060199   +   end;
MPRINT(EM_DIAGRAM):   end;
2060200   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2060201   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2060202   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2060203   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2060204   +   end;
MPRINT(EM_DIAGRAM):   end;
2060205   +end;
MPRINT(EM_DIAGRAM):   end;
2060206   +
2060207   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2060208   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2060209   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2060210   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2060211   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2060212   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2060213   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2060214   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2060215   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2060216   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2060217   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2060218   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2060219   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2060220   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2060221   +end;
MPRINT(EM_DIAGRAM):   end;
2060222   +else do;
MPRINT(EM_DIAGRAM):   else do;
2060223   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2060224   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2060225   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2060226   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2060227   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2060228   +   end;
MPRINT(EM_DIAGRAM):   end;
2060229   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2060230   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2060231   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2060232   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2060233   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2060234   +   end;
MPRINT(EM_DIAGRAM):   end;
2060235   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2060236   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2060237   +   end;
MPRINT(EM_DIAGRAM):   end;
2060238   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2060239   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2060240   +   end;
MPRINT(EM_DIAGRAM):   end;
2060241   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2060242   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2060243   +   end;
MPRINT(EM_DIAGRAM):   end;
2060244   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2060245   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2060246   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2060247   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2060248   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2060249   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2060250   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2060251   +   end;
MPRINT(EM_DIAGRAM):   end;
2060252   +end;
MPRINT(EM_DIAGRAM):   end;
2060253   +
2060254   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2060255   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2060256   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2060257   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2060258   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2060259   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2060260   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2060261   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2060262   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2060263   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2060264   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2060265   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2060266   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2060267   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2060268   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2060269   +end;
MPRINT(EM_DIAGRAM):   end;
2060270   +else do;
MPRINT(EM_DIAGRAM):   else do;
2060271   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2060272   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2060273   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2060274   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2060275   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2060276   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2060277   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2060278   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2060279   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2060280   +         end;
MPRINT(EM_DIAGRAM):   end;
2060281   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2060282   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2060283   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2060284   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2060285   +            end;
MPRINT(EM_DIAGRAM):   end;
2060286   +         end;
MPRINT(EM_DIAGRAM):   end;
2060287   +      end;
MPRINT(EM_DIAGRAM):   end;
2060288   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2060289   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2060290   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2060291   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2060292   +         end;
MPRINT(EM_DIAGRAM):   end;
2060293   +      end;
MPRINT(EM_DIAGRAM):   end;
2060294   +   end;
MPRINT(EM_DIAGRAM):   end;
2060295   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2060296   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2060297   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2060298   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2060299   +      end;
MPRINT(EM_DIAGRAM):   end;
2060300   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2060301   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2060302   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2060303   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2060304   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2060305   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2060306   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2060307   +         end;
MPRINT(EM_DIAGRAM):   end;
2060308   +      end;
MPRINT(EM_DIAGRAM):   end;
2060309   +   end;
MPRINT(EM_DIAGRAM):   end;
2060310   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2060311   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2060312   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2060313   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2060314   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2060315   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2060316   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2060317   +   end;
MPRINT(EM_DIAGRAM):   end;
2060318   +end;
MPRINT(EM_DIAGRAM):   end;
2060319   +
2060320   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2060321   +*** Checking missing input Interval
2060322   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2060323   +
2060324   +IF NMISS(
2060325   +   Income ,
2060326   +   Kidhome ,
2060327   +   MntFishProducts ,
2060328   +   MntFruits ,
2060329   +   MntGoldProds ,
2060330   +   MntMeatProducts ,
2060331   +   MntSweetProducts ,
2060332   +   MntWines ,
2060333   +   NumCatalogPurchases ,
2060334   +   NumDealsPurchases ,
2060335   +   NumStorePurchases ,
2060336   +   NumWebPurchases ,
2060337   +   NumWebVisitsMonth ,
2060338   +   Recency ,
2060339   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
2060340   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2060341   +
2060342   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2060343   +END;
MPRINT(EM_DIAGRAM):   END;
2060344   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2060345   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2060346   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2060347   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2060348   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2060349   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2060350   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2060351   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2060352   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2060353   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2060354   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2060355   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2060356   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2060357   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2060358   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2060359   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2060360   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2060361   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2060362   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2060363   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2060364   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2060365   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2060366   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2060367   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2060368   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2060369   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2060370   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2060371   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2060372   +END;
MPRINT(EM_DIAGRAM):   END;
2060373   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2060374   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2060375   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2060376   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2060377   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2060378   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2060379   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2060380   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2060381   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2060382   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2060383   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2060384   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2060385   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2060386   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2060387   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2060388   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2060389   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2060390   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2060391   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2060392   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2060393   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2060394   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2060395   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2060396   +   ELSE S_NumCatalogPurchases
2060397   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2060398   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2060399   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2060400   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2060401   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2060402   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2060403   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2060404   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2060405   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2060406   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2060407   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2060408   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2060409   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2060410   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2060411   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2060412   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2060413   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2060414   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2060415   +END;
MPRINT(EM_DIAGRAM):   END;
2060416   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2060417   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
2060418   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2060419   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2060420   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
2060421   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2060422   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2060423   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2060424   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2060425   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2060426   +   H11  =    -0.59781928082243 * S_Income  +     0.49830142312288 * S_Kidhome
2060427   +          +    -0.00045024466632 * S_MntFishProducts
2060428   +          +    -0.22421712710333 * S_MntFruits  +    -0.19010144853469 *
2060429   +        S_MntGoldProds  +    -0.53373773623953 * S_MntMeatProducts
2060430   +          +     0.17506402203495 * S_MntSweetProducts
2060431   +          +    -0.28551398649672 * S_MntWines  +       0.019870944777 *
2060432   +        S_NumCatalogPurchases  +     0.03537776181533 * S_NumDealsPurchases
2060433   +          +     0.05580468715403 * S_NumStorePurchases
2060434   +          +    -0.29131611132704 * S_NumWebPurchases
2060435   +          +    -0.40690084025802 * S_NumWebVisitsMonth
2060436   +          +     0.48640195058901 * S_Recency  +     0.31820890239661 *
2060437   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.59781928082243 * S_Income + 0.49830142312288 * S_Kidhome +
-0.00045024466632 * S_MntFishProducts + -0.22421712710333 * S_MntFruits + -0.19010144853469 *
S_MntGoldProds + -0.53373773623953 * S_MntMeatProducts + 0.17506402203495 * S_MntSweetProducts
+ -0.28551398649672 * S_MntWines + 0.019870944777 * S_NumCatalogPurchases + 0.03537776181533 *
S_NumDealsPurchases + 0.05580468715403 * S_NumStorePurchases + -0.29131611132704 *
S_NumWebPurchases + -0.40690084025802 * S_NumWebVisitsMonth + 0.48640195058901 * S_Recency +
0.31820890239661 * S_Teenhome ;
2060438   +   H12  =    -0.41871753512335 * S_Income  +      0.6025072461821 * S_Kidhome
2060439   +          +    -0.03132724937716 * S_MntFishProducts
2060440   +          +     0.19114182835046 * S_MntFruits  +     0.13483463809539 *
2060441   +        S_MntGoldProds  +    -0.63593603749443 * S_MntMeatProducts
2060442   +          +    -0.07569302401223 * S_MntSweetProducts
2060443   +          +     0.67050112032753 * S_MntWines  +    -0.23159243932208 *
2060444   +        S_NumCatalogPurchases  +    -0.07183698407409 * S_NumDealsPurchases
2060445   +          +     0.54619681114623 * S_NumStorePurchases
2060446   +          +     0.44325129671249 * S_NumWebPurchases
2060447   +          +    -1.25054401670605 * S_NumWebVisitsMonth
2060448   +          +      1.2376290916151 * S_Recency  +     0.43747371517287 *
2060449   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.41871753512335 * S_Income + 0.6025072461821 * S_Kidhome +
-0.03132724937716 * S_MntFishProducts + 0.19114182835046 * S_MntFruits + 0.13483463809539 *
S_MntGoldProds + -0.63593603749443 * S_MntMeatProducts + -0.07569302401223 *
S_MntSweetProducts + 0.67050112032753 * S_MntWines + -0.23159243932208 * S_NumCatalogPurchases
+ -0.07183698407409 * S_NumDealsPurchases + 0.54619681114623 * S_NumStorePurchases +
0.44325129671249 * S_NumWebPurchases + -1.25054401670605 * S_NumWebVisitsMonth +
1.2376290916151 * S_Recency + 0.43747371517287 * S_Teenhome ;
2060450   +   H13  =      0.0713579189325 * S_Income  +    -0.05759612462349 * S_Kidhome
2060451   +          +     0.07631777381832 * S_MntFishProducts
2060452   +          +    -0.00387785552441 * S_MntFruits  +    -0.21868916314192 *
2060453   +        S_MntGoldProds  +       0.072623883197 * S_MntMeatProducts
2060454   +          +     0.12637946833766 * S_MntSweetProducts
2060455   +          +    -0.37981663841124 * S_MntWines  +    -0.89958525403162 *
2060456   +        S_NumCatalogPurchases  +    -0.17471885937598 * S_NumDealsPurchases
2060457   +          +     0.15845618359126 * S_NumStorePurchases
2060458   +          +    -0.33296932705082 * S_NumWebPurchases
2060459   +          +      0.0260072296349 * S_NumWebVisitsMonth
2060460   +          +     0.02544749712977 * S_Recency  +    -0.17381561661022 *
2060461   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.0713579189325 * S_Income + -0.05759612462349 * S_Kidhome +
0.07631777381832 * S_MntFishProducts + -0.00387785552441 * S_MntFruits + -0.21868916314192 *
S_MntGoldProds + 0.072623883197 * S_MntMeatProducts + 0.12637946833766 * S_MntSweetProducts +
-0.37981663841124 * S_MntWines + -0.89958525403162 * S_NumCatalogPurchases + -0.17471885937598
* S_NumDealsPurchases + 0.15845618359126 * S_NumStorePurchases + -0.33296932705082 *
S_NumWebPurchases + 0.0260072296349 * S_NumWebVisitsMonth + 0.02544749712977 * S_Recency +
-0.17381561661022 * S_Teenhome ;
2060462   +   H14  =    -0.47498613710851 * S_Income  +     0.09339198401437 * S_Kidhome
2060463   +          +    -0.13642352619174 * S_MntFishProducts
2060464   +          +     0.27167245582117 * S_MntFruits  +    -0.00579747559996 *
2060465   +        S_MntGoldProds  +     0.31591387319577 * S_MntMeatProducts
2060466   +          +     0.14125815807238 * S_MntSweetProducts
2060467   +          +     0.07862916790983 * S_MntWines  +    -0.58905358997534 *
2060468   +        S_NumCatalogPurchases  +     -0.5574069633995 * S_NumDealsPurchases
2060469   +          +     0.19718828261526 * S_NumStorePurchases
2060470   +          +    -0.24156925391919 * S_NumWebPurchases
2060471   +          +    -0.25711078938749 * S_NumWebVisitsMonth
2060472   +          +     0.38883063223812 * S_Recency  +     -0.2396731334184 *
2060473   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.47498613710851 * S_Income + 0.09339198401437 * S_Kidhome +
-0.13642352619174 * S_MntFishProducts + 0.27167245582117 * S_MntFruits + -0.00579747559996 *
S_MntGoldProds + 0.31591387319577 * S_MntMeatProducts + 0.14125815807238 * S_MntSweetProducts
+ 0.07862916790983 * S_MntWines + -0.58905358997534 * S_NumCatalogPurchases + -0.5574069633995
* S_NumDealsPurchases + 0.19718828261526 * S_NumStorePurchases + -0.24156925391919 *
S_NumWebPurchases + -0.25711078938749 * S_NumWebVisitsMonth + 0.38883063223812 * S_Recency +
-0.2396731334184 * S_Teenhome ;
2060474   +   H15  =     0.24624924979609 * S_Income  +    -0.37052106312109 * S_Kidhome
2060475   +          +     0.13579628643404 * S_MntFishProducts
2060476   +          +    -0.05263868911164 * S_MntFruits  +    -0.01504675049991 *
2060477   +        S_MntGoldProds  +     -0.4202277804998 * S_MntMeatProducts
2060478   +          +    -0.01039299374426 * S_MntSweetProducts
2060479   +          +     0.71197420459135 * S_MntWines  +    -0.35973505575029 *
2060480   +        S_NumCatalogPurchases  +     -0.4415445481482 * S_NumDealsPurchases
2060481   +          +     0.58897740652611 * S_NumStorePurchases
2060482   +          +     0.24564485851062 * S_NumWebPurchases
2060483   +          +    -0.13976320243555 * S_NumWebVisitsMonth
2060484   +          +      0.1199367613063 * S_Recency  +    -0.15283161418313 *
2060485   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.24624924979609 * S_Income + -0.37052106312109 * S_Kidhome +
0.13579628643404 * S_MntFishProducts + -0.05263868911164 * S_MntFruits + -0.01504675049991 *
S_MntGoldProds + -0.4202277804998 * S_MntMeatProducts + -0.01039299374426 * S_MntSweetProducts
+ 0.71197420459135 * S_MntWines + -0.35973505575029 * S_NumCatalogPurchases + -0.4415445481482
* S_NumDealsPurchases + 0.58897740652611 * S_NumStorePurchases + 0.24564485851062 *
S_NumWebPurchases + -0.13976320243555 * S_NumWebVisitsMonth + 0.1199367613063 * S_Recency +
-0.15283161418313 * S_Teenhome ;
2060486   +   H16  =     0.23493799758749 * S_Income  +     0.07038278079069 * S_Kidhome
2060487   +          +    -0.45448768538367 * S_MntFishProducts
2060488   +          +     0.02622380709004 * S_MntFruits  +     0.14726698184115 *
2060489   +        S_MntGoldProds  +     0.65760183569767 * S_MntMeatProducts
2060490   +          +    -0.16936256277023 * S_MntSweetProducts
2060491   +          +    -0.40647066866305 * S_MntWines  +     0.99645493491726 *
2060492   +        S_NumCatalogPurchases  +     0.65587239961358 * S_NumDealsPurchases
2060493   +          +    -0.22309716855774 * S_NumStorePurchases
2060494   +          +    -0.61204529910842 * S_NumWebPurchases
2060495   +          +     0.43742228867615 * S_NumWebVisitsMonth
2060496   +          +    -0.56099034256092 * S_Recency  +     -0.2445351671148 *
2060497   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = 0.23493799758749 * S_Income + 0.07038278079069 * S_Kidhome +
-0.45448768538367 * S_MntFishProducts + 0.02622380709004 * S_MntFruits + 0.14726698184115 *
S_MntGoldProds + 0.65760183569767 * S_MntMeatProducts + -0.16936256277023 * S_MntSweetProducts
+ -0.40647066866305 * S_MntWines + 0.99645493491726 * S_NumCatalogPurchases + 0.65587239961358
* S_NumDealsPurchases + -0.22309716855774 * S_NumStorePurchases + -0.61204529910842 *
S_NumWebPurchases + 0.43742228867615 * S_NumWebVisitsMonth + -0.56099034256092 * S_Recency +
-0.2445351671148 * S_Teenhome ;
2060498   +   H17  =    -0.00107702057163 * S_Income  +     0.25116135719972 * S_Kidhome
2060499   +          +    -0.04540308470858 * S_MntFishProducts
2060500   +          +        0.21487241577 * S_MntFruits  +    -0.12914913547414 *
2060501   +        S_MntGoldProds  +    -0.04149021191395 * S_MntMeatProducts
2060502   +          +     0.02853521979141 * S_MntSweetProducts
2060503   +          +     -0.2435805887418 * S_MntWines  +    -0.04509621661407 *
2060504   +        S_NumCatalogPurchases  +    -0.26492036720429 * S_NumDealsPurchases
2060505   +          +     -0.3299561248944 * S_NumStorePurchases
2060506   +          +    -0.09806597448224 * S_NumWebPurchases
2060507   +          +      0.0427056351245 * S_NumWebVisitsMonth
2060508   +          +     0.03953235628202 * S_Recency  +    -0.11317308767713 *
2060509   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = -0.00107702057163 * S_Income + 0.25116135719972 * S_Kidhome +
-0.04540308470858 * S_MntFishProducts + 0.21487241577 * S_MntFruits + -0.12914913547414 *
S_MntGoldProds + -0.04149021191395 * S_MntMeatProducts + 0.02853521979141 * S_MntSweetProducts
+ -0.2435805887418 * S_MntWines + -0.04509621661407 * S_NumCatalogPurchases +
-0.26492036720429 * S_NumDealsPurchases + -0.3299561248944 * S_NumStorePurchases +
-0.09806597448224 * S_NumWebPurchases + 0.0427056351245 * S_NumWebVisitsMonth +
0.03953235628202 * S_Recency + -0.11317308767713 * S_Teenhome ;
2060510   +   H11  = H11  +     0.50033674561531 * AcceptedCmp10
2060511   +          +    -0.02275693117286 * AcceptedCmp20  +     0.31338891533156 *
2060512   +        AcceptedCmp30  +      0.3901248845706 * AcceptedCmp40
2060513   +          +     0.44314358358111 * AcceptedCmp50  +    -0.20444060864498 *
2060514   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.50033674561531 * AcceptedCmp10 + -0.02275693117286 *
AcceptedCmp20 + 0.31338891533156 * AcceptedCmp30 + 0.3901248845706 * AcceptedCmp40 +
0.44314358358111 * AcceptedCmp50 + -0.20444060864498 * Complain0 ;
2060515   +   H12  = H12  +     0.30103938822692 * AcceptedCmp10
2060516   +          +     0.54298746723422 * AcceptedCmp20  +     0.50401040035525 *
2060517   +        AcceptedCmp30  +     0.43447710825306 * AcceptedCmp40
2060518   +          +     0.60794421030027 * AcceptedCmp50  +    -0.28114274461319 *
2060519   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.30103938822692 * AcceptedCmp10 + 0.54298746723422 *
AcceptedCmp20 + 0.50401040035525 * AcceptedCmp30 + 0.43447710825306 * AcceptedCmp40 +
0.60794421030027 * AcceptedCmp50 + -0.28114274461319 * Complain0 ;
2060520   +   H13  = H13  +     -0.1890212967757 * AcceptedCmp10
2060521   +          +    -0.11487406996391 * AcceptedCmp20  +    -0.22740618754863 *
2060522   +        AcceptedCmp30  +      0.2354510231918 * AcceptedCmp40
2060523   +          +    -0.14327434649067 * AcceptedCmp50  +    -0.17839080850556 *
2060524   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.1890212967757 * AcceptedCmp10 + -0.11487406996391 *
AcceptedCmp20 + -0.22740618754863 * AcceptedCmp30 + 0.2354510231918 * AcceptedCmp40 +
-0.14327434649067 * AcceptedCmp50 + -0.17839080850556 * Complain0 ;
2060525   +   H14  = H14  +    -0.28194187416219 * AcceptedCmp10
2060526   +          +     0.11732089254624 * AcceptedCmp20  +     0.34964075536156 *
2060527   +        AcceptedCmp30  +     0.05772396286169 * AcceptedCmp40
2060528   +          +    -0.08671748651826 * AcceptedCmp50  +      0.0629540108407 *
2060529   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.28194187416219 * AcceptedCmp10 + 0.11732089254624 *
AcceptedCmp20 + 0.34964075536156 * AcceptedCmp30 + 0.05772396286169 * AcceptedCmp40 +
-0.08671748651826 * AcceptedCmp50 + 0.0629540108407 * Complain0 ;
2060530   +   H15  = H15  +    -0.01058257322803 * AcceptedCmp10
2060531   +          +     0.26755355732587 * AcceptedCmp20  +     0.40856661734724 *
2060532   +        AcceptedCmp30  +     0.02977117354989 * AcceptedCmp40
2060533   +          +       0.073655049734 * AcceptedCmp50  +     0.25562048226555 *
2060534   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.01058257322803 * AcceptedCmp10 + 0.26755355732587 *
AcceptedCmp20 + 0.40856661734724 * AcceptedCmp30 + 0.02977117354989 * AcceptedCmp40 +
0.073655049734 * AcceptedCmp50 + 0.25562048226555 * Complain0 ;
2060535   +   H16  = H16  +    -0.65590117532084 * AcceptedCmp10
2060536   +          +    -0.31314161223579 * AcceptedCmp20  +    -0.18863165264573 *
2060537   +        AcceptedCmp30  +    -0.18832338914237 * AcceptedCmp40
2060538   +          +    -0.53765749471786 * AcceptedCmp50  +     0.17409401877513 *
2060539   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.65590117532084 * AcceptedCmp10 + -0.31314161223579 *
AcceptedCmp20 + -0.18863165264573 * AcceptedCmp30 + -0.18832338914237 * AcceptedCmp40 +
-0.53765749471786 * AcceptedCmp50 + 0.17409401877513 * Complain0 ;
2060540   +   H17  = H17  +    -0.42253231673718 * AcceptedCmp10
2060541   +          +    -0.40954345229557 * AcceptedCmp20  +    -0.30577523080786 *
2060542   +        AcceptedCmp30  +    -0.22396670899437 * AcceptedCmp40
2060543   +          +     0.05757251451004 * AcceptedCmp50  +     0.07813950542487 *
2060544   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.42253231673718 * AcceptedCmp10 + -0.40954345229557 *
AcceptedCmp20 + -0.30577523080786 * AcceptedCmp30 + -0.22396670899437 * AcceptedCmp40 +
0.05757251451004 * AcceptedCmp50 + 0.07813950542487 * Complain0 ;
2060545   +   H11  = H11  +    -0.14483542022901 * Education2n_Cycle
2060546   +          +     0.32176647745332 * EducationBasic  +     0.00900796305072 *
2060547   +        EducationGraduation  +    -0.00243484910123 * EducationMaster
2060548   +          +    -0.22074132229211 * Marital_StatusDivorced
2060549   +          +     0.70282742634901 * Marital_StatusMarried
2060550   +          +     -0.5926244797961 * Marital_StatusSingle
2060551   +          +     0.21342221410999 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.14483542022901 * Education2n_Cycle + 0.32176647745332 *
EducationBasic + 0.00900796305072 * EducationGraduation + -0.00243484910123 * EducationMaster
+ -0.22074132229211 * Marital_StatusDivorced + 0.70282742634901 * Marital_StatusMarried +
-0.5926244797961 * Marital_StatusSingle + 0.21342221410999 * Marital_StatusTogether ;
2060552   +   H12  = H12  +    -0.10242932200247 * Education2n_Cycle
2060553   +          +     0.34937926721317 * EducationBasic  +    -0.20395479511872 *
2060554   +        EducationGraduation  +     0.31210327899339 * EducationMaster
2060555   +          +    -0.46376392175295 * Marital_StatusDivorced
2060556   +          +       0.589453579718 * Marital_StatusMarried
2060557   +          +    -0.45342174978481 * Marital_StatusSingle
2060558   +          +     0.70517120763557 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.10242932200247 * Education2n_Cycle + 0.34937926721317 *
EducationBasic + -0.20395479511872 * EducationGraduation + 0.31210327899339 * EducationMaster
+ -0.46376392175295 * Marital_StatusDivorced + 0.589453579718 * Marital_StatusMarried +
-0.45342174978481 * Marital_StatusSingle + 0.70517120763557 * Marital_StatusTogether ;
2060559   +   H13  = H13  +     0.24858755570324 * Education2n_Cycle
2060560   +          +     0.07360039359386 * EducationBasic  +    -0.42563056620078 *
2060561   +        EducationGraduation  +    -0.25970840250323 * EducationMaster
2060562   +          +     0.26981972015482 * Marital_StatusDivorced
2060563   +          +    -0.01707364864139 * Marital_StatusMarried
2060564   +          +     0.38646060840009 * Marital_StatusSingle
2060565   +          +     0.19694047086013 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.24858755570324 * Education2n_Cycle + 0.07360039359386 *
EducationBasic + -0.42563056620078 * EducationGraduation + -0.25970840250323 * EducationMaster
+ 0.26981972015482 * Marital_StatusDivorced + -0.01707364864139 * Marital_StatusMarried +
0.38646060840009 * Marital_StatusSingle + 0.19694047086013 * Marital_StatusTogether ;
2060566   +   H14  = H14  +     0.22577522124265 * Education2n_Cycle
2060567   +          +     0.04183136697557 * EducationBasic  +    -0.27725331198825 *
2060568   +        EducationGraduation  +     0.15709188532123 * EducationMaster
2060569   +          +    -0.01933675094701 * Marital_StatusDivorced
2060570   +          +     0.52969577969434 * Marital_StatusMarried
2060571   +          +      -0.348697714569 * Marital_StatusSingle
2060572   +          +      0.5020342481888 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.22577522124265 * Education2n_Cycle + 0.04183136697557 *
EducationBasic + -0.27725331198825 * EducationGraduation + 0.15709188532123 * EducationMaster
+ -0.01933675094701 * Marital_StatusDivorced + 0.52969577969434 * Marital_StatusMarried +
-0.348697714569 * Marital_StatusSingle + 0.5020342481888 * Marital_StatusTogether ;
2060573   +   H15  = H15  +     0.04488332711225 * Education2n_Cycle
2060574   +          +     0.01911097443907 * EducationBasic  +    -0.11699443624996 *
2060575   +        EducationGraduation  +    -0.07291393566738 * EducationMaster
2060576   +          +    -0.04665146013984 * Marital_StatusDivorced
2060577   +          +      -0.586219175167 * Marital_StatusMarried
2060578   +          +     0.55713543417712 * Marital_StatusSingle
2060579   +          +    -0.42208959885332 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.04488332711225 * Education2n_Cycle + 0.01911097443907 *
EducationBasic + -0.11699443624996 * EducationGraduation + -0.07291393566738 * EducationMaster
+ -0.04665146013984 * Marital_StatusDivorced + -0.586219175167 * Marital_StatusMarried +
0.55713543417712 * Marital_StatusSingle + -0.42208959885332 * Marital_StatusTogether ;
2060580   +   H16  = H16  +     0.09174117861154 * Education2n_Cycle
2060581   +          +     -0.1378945860659 * EducationBasic  +     -0.0728635369665 *
2060582   +        EducationGraduation  +     0.29860714824438 * EducationMaster
2060583   +          +    -0.05632171154347 * Marital_StatusDivorced
2060584   +          +     0.03215547861665 * Marital_StatusMarried
2060585   +          +     0.16870781172538 * Marital_StatusSingle
2060586   +          +    -0.04883314322676 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.09174117861154 * Education2n_Cycle + -0.1378945860659 *
EducationBasic + -0.0728635369665 * EducationGraduation + 0.29860714824438 * EducationMaster +
-0.05632171154347 * Marital_StatusDivorced + 0.03215547861665 * Marital_StatusMarried +
0.16870781172538 * Marital_StatusSingle + -0.04883314322676 * Marital_StatusTogether ;
2060587   +   H17  = H17  +    -0.00343694558117 * Education2n_Cycle
2060588   +          +     0.32636427598227 * EducationBasic  +     0.16259654486833 *
2060589   +        EducationGraduation  +    -0.00424229454859 * EducationMaster
2060590   +          +    -0.21765415159355 * Marital_StatusDivorced
2060591   +          +     -0.0542857922075 * Marital_StatusMarried
2060592   +          +     0.20679907454933 * Marital_StatusSingle
2060593   +          +     0.14976519710725 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.00343694558117 * Education2n_Cycle + 0.32636427598227 *
EducationBasic + 0.16259654486833 * EducationGraduation + -0.00424229454859 * EducationMaster
+ -0.21765415159355 * Marital_StatusDivorced + -0.0542857922075 * Marital_StatusMarried +
0.20679907454933 * Marital_StatusSingle + 0.14976519710725 * Marital_StatusTogether ;
2060594   +   H11  =     0.92977078759503 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.92977078759503 + H11 ;
2060595   +   H12  =    -0.97970409253156 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.97970409253156 + H12 ;
2060596   +   H13  =     -0.5001144792196 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.5001144792196 + H13 ;
2060597   +   H14  =    -0.90715840862541 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.90715840862541 + H14 ;
2060598   +   H15  =     0.87046153389036 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.87046153389036 + H15 ;
2060599   +   H16  =     0.49066122767086 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 0.49066122767086 + H16 ;
2060600   +   H17  =    -1.05949763460293 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.05949763460293 + H17 ;
2060601   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2060602   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2060603   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
2060604   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
2060605   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
2060606   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
2060607   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
2060608   +END;
MPRINT(EM_DIAGRAM):   END;
2060609   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2060610   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2060611   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2060612   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
2060613   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
2060614   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
2060615   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
2060616   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
2060617   +END;
MPRINT(EM_DIAGRAM):   END;
2060618   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2060619   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2060620   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2060621   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2060622   +   P_DepVar1  =    -2.32998401250848 * H11  +     -3.2074078511991 * H12
2060623   +          +    -0.69549988605443 * H13  +    -1.74950789108762 * H14
2060624   +          +    -1.74013772071344 * H15  +     2.65306089869015 * H16
2060625   +          +     0.03700459000906 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.32998401250848 * H11 + -3.2074078511991 * H12 +
-0.69549988605443 * H13 + -1.74950789108762 * H14 + -1.74013772071344 * H15 + 2.65306089869015
* H16 + 0.03700459000906 * H17 ;
2060626   +   P_DepVar1  =    -1.51229898726716 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.51229898726716 + P_DepVar1 ;
2060627   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2060628   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2060629   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2060630   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2060631   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2060632   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2060633   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2060634   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2060635   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2060636   +END;
MPRINT(EM_DIAGRAM):   END;
2060637   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2060638   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2060639   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2060640   +END;
MPRINT(EM_DIAGRAM):   END;
2060641   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2060642   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2060643   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2060644   +END;
MPRINT(EM_DIAGRAM):   END;
2060645   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2060646   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2060647   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2060648   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2060649   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2060650   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2060651   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2060652   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2060653   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2060654   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2060655   +END;
MPRINT(EM_DIAGRAM):   END;
2060656   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2060657   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2060658   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2060659   +drop
2060660   +H11
2060661   +H12
2060662   +H13
2060663   +H14
2060664   +H15
2060665   +H16
2060666   +H17
2060667   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
2060668   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2060669    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2060670    quit;
2060671    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2060672    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2060673    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2060674    retain ID 2 Node "Neural30";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural30";
2060675    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2060676    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2154 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2154 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2060677    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2060678    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2060679    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2154 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2154 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2060680    proc sort data=EMWS8.Neural30_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural30_variableset out=_temp2(keep=NAME CREATOR);
2060681    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2060682    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.NEURAL30_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2060683    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2060684    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2060685    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2060686    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2060687    proc contents data=EMWS8.Neural30_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural30_train out=_meta(keep=NAME) noprint;
2060688    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2060689    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2060690    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2060691    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2060692    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2060693    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2060694    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2060695    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2060696    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2060697    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2060697  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1016 rows and 5 columns.
 
2060698    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2060699    proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
2060700    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1016 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 1016 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2060701    filename _pref
2060701  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2060702    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2060703    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2060704   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2060705   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2060706   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2060707   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2060708   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2060709   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2060710    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2060711    quit;
2060712    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2060713    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2060714    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2060715    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2060716    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2060717    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2060718    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2060719    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2060720    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2060721    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2060722    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2060723    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2060724    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2060725    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2060726    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2060727    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2060728    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2060729    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2060730    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2060731    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2060732    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2060733    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2060734    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2060735    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2060736    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2060737    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2060738    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2060738  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
2060739    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2060740    proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
2060741    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 1020 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2060742    filename _pref
2060742  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2060743    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2060744    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2060745   +
2060746   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2060747   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2060747  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2060748   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2060749   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2060750   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2060751   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2060752   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2060753    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2060754    quit;
2060755    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2060756    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2060757    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2060758    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2060759    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2060760    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2060761    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2060762    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2060763    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2060764    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2060765    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2060766    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2060767    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2060768    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2060769    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2060770    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2060771    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2060772    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2060773    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2060774    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2060775    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2060776    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2060777    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2060778    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2060779    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2060780    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2060781    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2060781  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
2060782    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2060783    proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
2060784    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 1059 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2060785    filename _pref
2060785  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2060786    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2060787    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2060788   +
2060789   +
2060790   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2060791   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2060792   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2060793   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2060794   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2060795   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2060796   +
2060797   +
2060798   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2060799   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2060800   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2060801   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2060802   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2060803   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2060804   +
2060805   +
2060806   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2060807   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2060808   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2060809   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2060810   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2060811   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2060812   +
2060813   +
2060814   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2060815   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2060816   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2060817   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2060818   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2060819   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2060820   +
2060821   +
2060822   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2060823   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2060824   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2060825   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2060826   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2060827   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2060828   +
2060829   +
2060830   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2060831   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2060832   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2060833   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2060834   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2060835   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2060836   +
2060837   +
2060838   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2060839   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2060840   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2060841   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2060842   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2060843   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2060844   +
2060845   +
2060846   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2060847   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2060848   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2060849   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2060850   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2060851   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2060852   +if
2060853   +_FILTERNORM1 not in ( '.')
2060854   + and
2060855   +_FILTERNORM2 not in ( '.')
2060856   + and
2060857   +_FILTERNORM3 not in ( '.')
2060858   + and
2060859   +_FILTERNORM4 not in ( '.')
2060860   + and
2060861   +_FILTERNORM5 not in ( '.')
2060862   + and
2060863   +_FILTERNORM6 not in ( '.')
2060864   + and
2060865   +_FILTERNORM7 not in ( ' ')
2060866   + and
2060867   +_FILTERNORM8 not in ( ' ')
2060868   +and
2060869   +( Dt_Customer ne .)
2060870   +and ( Income ne . and (Income<=107000))
2060871   +and ( Kidhome ne .)
2060872   +and ( MntFishProducts ne .)
2060873   +and ( MntFruits ne .)
2060874   +and ( MntGoldProds ne .)
2060875   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2060876   +and ( MntSweetProducts ne .)
2060877   +and ( MntWines ne .)
2060878   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2060879   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2060880   +and ( NumStorePurchases ne .)
2060881   +and ( NumWebPurchases ne .)
2060882   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2060883   +and ( Recency ne .)
2060884   +and ( Teenhome ne .)
2060885   +and ( Year_Birth ne .)
2060886   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
2060887   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2060888   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2060889   +end;
MPRINT(EM_DIAGRAM):   end;
2060890   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2060891   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2060892    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2060893    quit;
2060894    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2060895    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2060896    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2060897    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2060898    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2060899    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2060900    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2060901    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2060902    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2060903    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2060904    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2060905    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2060906    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2060907    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2060908    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2060909    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2060910    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2060911    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2060912    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2060913    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2060914    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2060915    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2060916    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2060917    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2060918    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2060919    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2060920    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2060920  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
2060921    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2060922    proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
2060923    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 1125 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2060924    %macro varDept(fcmpdata=,id=);
2060925    %global nobs&id scoreFlag&id;
2060926    %let scoreFlag&id = 0;
2060927    %if &id=1 or ^&fcmpStart %then %do;
2060928    proc sort data=&fcmpdata out=_temp&id nodupkey;
2060929    by NAME;
2060930    where id=&id and LHS in( %let j=1;
2060931    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2060932    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2060933    "&var" %let j = %eval(&j+1);
2060934    %end;
2060935    );
2060936    run;
2060937    %let dsid = %sysfunc(open(_temp&id));
2060938    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2060939    %let dsid = %sysfunc(close(&dsid));
2060940    %if &&nobs&id %then %do;
2060941    %let scoreFlag&id = 1;
2060942    %let fcmpStart = 1;
2060943    %end;
2060944    %else %let fcmpStart = 0;
2060945    %end;
2060946    %else %do;
2060947    proc sort data=&fcmpdata out=_tempid;
2060948    where id=&id;
2060949    by LHS;
2060950    run;
2060951    %let dsid = %sysfunc(open(_tempid));
2060952    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2060953    %let dsid = %sysfunc(close(&dsid));
2060954    %if ^&&nobs&id %then %do;
2060955    proc datasets lib=work nolist;
2060956    delete _tempid;
2060957    run;
2060958    quit;
2060959    %end;
2060960    %else %do;
2060961    data _tempAll;
2060962    set %let j=%eval(&id-1);
2060963    %do x=1 %to &j;
2060964    %if &&nobs&x %then %do;
2060965    _temp&x %end;
2060966    %end;
2060967    ;
2060968    run;
2060969    proc sql;
2060970    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2060970  ! work._tempid p2 where p.name=p2.lhs;
2060971    quit;
2060972    data _temp&id;
2060973    set _temp&id;
2060974    where LHS ne '' and NAME ne '' and Node ne '';
2060975    run;
2060976    proc datasets lib=work nolist;
2060977    delete _tempAll;
2060978    run;
2060979    %let dsid = %sysfunc(open(_temp&id));
2060980    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2060981    %let dsid = %sysfunc(close(&dsid));
2060982    %if ^&&nobs&id %then %do;
2060983    proc datasets lib=work nolist;
2060984    delete _temp&id;
2060985    run;
2060986    quit;
2060987    %end;
2060988    %else %do;
2060989    %let scoreFlag&id = 1;
2060990    data _temp&id;
2060991    set _temp&id;
2060992    where LHS ne NAME and node ne '';
2060993    run;
2060994    %let dsid = %sysfunc(open(_temp&id));
2060995    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2060996    %let dsid = %sysfunc(close(&dsid));
2060997    %if ^&&nobs&id %then %do;
2060998    proc datasets lib=work nolist;
2060999    delete _temp&id;
2061000    run;
2061001    quit;
2061002    %end;
2061003    %else %do;
2061004    proc sort data=_temp&id nodupkey;
2061005    by LHS NAME;
2061006    run;
2061007    %end;
2061008    %end;
2061009    %end;
2061010    %end;
2061011    %mend varDept;
2061012    %macro optCode(outdata=fcmpdata);
2061013    %global fcmpStart;
2061014    %let fcmpStart = 0;
2061015    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2061016    %let NumNodes=9;
2061017    %do k=1 %to &NumNodes;
2061018    %vardept(fcmpdata=&outdata, id=&k);
2061019    %end;
2061020    %mend optCode;
2061021    %optcode(outData=EMWS8.Ensmbl22_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 98 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 73 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 25 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp6;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP6 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
2061022    filename _pref
2061022  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural35\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural35\EMPUBLISHSCORE.sas";
2061023    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2061024    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural35\EMPUBLISHSCORE.sas.
2061025   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2061026   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2061027   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2061028   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2061029   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2061030   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2061031   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2061032   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2061033   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2061034   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2061035   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2061036   +LENGTH _WARN_ $4
2061037   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2061038   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2061039   +
2061040   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2061041   +
2061042   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2061043   +
2061044   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2061045   +
2061046   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2061047   +
2061048   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2061049   +
2061050   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2061051   +
2061052   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2061053   +
2061054   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2061055   +
2061056   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2061057   +
2061058   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2061059   +
2061060   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2061061   +
2061062   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2061063   +
2061064   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2061065   +
2061066   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2061067   +
2061068   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2061069   +
2061070   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2061071   +
2061072   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2061073   +
2061074   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2061075   +
2061076   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2061077   +
2061078   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2061079   +
2061080   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2061081   +
2061082   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2061083   +
2061084   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2061085   +
2061086   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2061087   +
2061088   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2061089   +
2061090   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2061091   +
2061092   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2061093   +
2061094   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2061095   +
2061096   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2061097   +
2061098   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2061099   +
2061100   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
2061101   +
2061102   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
2061103   +
2061104   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
2061105   +
2061106   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
2061107   +
2061108   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2061109   +
2061110   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2061111   +
2061112   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2061113   +
2061114   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2061115   +
2061116   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2061117   +
2061118   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2061119   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2061120   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2061121   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2061122   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2061123   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2061124   +end;
MPRINT(EM_DIAGRAM):   end;
2061125   +else do;
MPRINT(EM_DIAGRAM):   else do;
2061126   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2061127   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2061128   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2061129   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2061130   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2061131   +   end;
MPRINT(EM_DIAGRAM):   end;
2061132   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2061133   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2061134   +   end;
MPRINT(EM_DIAGRAM):   end;
2061135   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2061136   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2061137   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2061138   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2061139   +   end;
MPRINT(EM_DIAGRAM):   end;
2061140   +end;
MPRINT(EM_DIAGRAM):   end;
2061141   +
2061142   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2061143   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2061144   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2061145   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2061146   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2061147   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2061148   +end;
MPRINT(EM_DIAGRAM):   end;
2061149   +else do;
MPRINT(EM_DIAGRAM):   else do;
2061150   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2061151   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2061152   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2061153   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2061154   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2061155   +   end;
MPRINT(EM_DIAGRAM):   end;
2061156   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2061157   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2061158   +   end;
MPRINT(EM_DIAGRAM):   end;
2061159   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2061160   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2061161   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2061162   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2061163   +   end;
MPRINT(EM_DIAGRAM):   end;
2061164   +end;
MPRINT(EM_DIAGRAM):   end;
2061165   +
2061166   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2061167   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2061168   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2061169   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2061170   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2061171   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2061172   +end;
MPRINT(EM_DIAGRAM):   end;
2061173   +else do;
MPRINT(EM_DIAGRAM):   else do;
2061174   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2061175   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2061176   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2061177   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2061178   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2061179   +   end;
MPRINT(EM_DIAGRAM):   end;
2061180   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2061181   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2061182   +   end;
MPRINT(EM_DIAGRAM):   end;
2061183   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2061184   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2061185   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2061186   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2061187   +   end;
MPRINT(EM_DIAGRAM):   end;
2061188   +end;
MPRINT(EM_DIAGRAM):   end;
2061189   +
2061190   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2061191   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2061192   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2061193   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2061194   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2061195   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2061196   +end;
MPRINT(EM_DIAGRAM):   end;
2061197   +else do;
MPRINT(EM_DIAGRAM):   else do;
2061198   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2061199   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2061200   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2061201   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2061202   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2061203   +   end;
MPRINT(EM_DIAGRAM):   end;
2061204   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2061205   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2061206   +   end;
MPRINT(EM_DIAGRAM):   end;
2061207   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2061208   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2061209   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2061210   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2061211   +   end;
MPRINT(EM_DIAGRAM):   end;
2061212   +end;
MPRINT(EM_DIAGRAM):   end;
2061213   +
2061214   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2061215   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2061216   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2061217   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2061218   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2061219   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2061220   +end;
MPRINT(EM_DIAGRAM):   end;
2061221   +else do;
MPRINT(EM_DIAGRAM):   else do;
2061222   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2061223   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2061224   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2061225   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2061226   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2061227   +   end;
MPRINT(EM_DIAGRAM):   end;
2061228   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2061229   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2061230   +   end;
MPRINT(EM_DIAGRAM):   end;
2061231   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2061232   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2061233   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2061234   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2061235   +   end;
MPRINT(EM_DIAGRAM):   end;
2061236   +end;
MPRINT(EM_DIAGRAM):   end;
2061237   +
2061238   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2061239   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2061240   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2061241   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2061242   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2061243   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2061244   +end;
MPRINT(EM_DIAGRAM):   end;
2061245   +else do;
MPRINT(EM_DIAGRAM):   else do;
2061246   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2061247   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2061248   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2061249   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2061250   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2061251   +   end;
MPRINT(EM_DIAGRAM):   end;
2061252   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2061253   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2061254   +   end;
MPRINT(EM_DIAGRAM):   end;
2061255   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2061256   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2061257   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2061258   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2061259   +   end;
MPRINT(EM_DIAGRAM):   end;
2061260   +end;
MPRINT(EM_DIAGRAM):   end;
2061261   +
2061262   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2061263   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2061264   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2061265   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2061266   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2061267   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2061268   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2061269   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2061270   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2061271   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2061272   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2061273   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2061274   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2061275   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2061276   +end;
MPRINT(EM_DIAGRAM):   end;
2061277   +else do;
MPRINT(EM_DIAGRAM):   else do;
2061278   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2061279   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2061280   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2061281   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2061282   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2061283   +   end;
MPRINT(EM_DIAGRAM):   end;
2061284   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2061285   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2061286   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2061287   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2061288   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2061289   +   end;
MPRINT(EM_DIAGRAM):   end;
2061290   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2061291   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2061292   +   end;
MPRINT(EM_DIAGRAM):   end;
2061293   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2061294   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2061295   +   end;
MPRINT(EM_DIAGRAM):   end;
2061296   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2061297   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2061298   +   end;
MPRINT(EM_DIAGRAM):   end;
2061299   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2061300   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2061301   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2061302   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2061303   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2061304   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2061305   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2061306   +   end;
MPRINT(EM_DIAGRAM):   end;
2061307   +end;
MPRINT(EM_DIAGRAM):   end;
2061308   +
2061309   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2061310   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2061311   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2061312   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2061313   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2061314   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2061315   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2061316   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2061317   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2061318   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2061319   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2061320   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2061321   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2061322   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2061323   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2061324   +end;
MPRINT(EM_DIAGRAM):   end;
2061325   +else do;
MPRINT(EM_DIAGRAM):   else do;
2061326   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2061327   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2061328   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2061329   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2061330   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2061331   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2061332   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2061333   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2061334   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2061335   +         end;
MPRINT(EM_DIAGRAM):   end;
2061336   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2061337   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2061338   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2061339   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2061340   +            end;
MPRINT(EM_DIAGRAM):   end;
2061341   +         end;
MPRINT(EM_DIAGRAM):   end;
2061342   +      end;
MPRINT(EM_DIAGRAM):   end;
2061343   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2061344   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2061345   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2061346   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2061347   +         end;
MPRINT(EM_DIAGRAM):   end;
2061348   +      end;
MPRINT(EM_DIAGRAM):   end;
2061349   +   end;
MPRINT(EM_DIAGRAM):   end;
2061350   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2061351   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2061352   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2061353   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2061354   +      end;
MPRINT(EM_DIAGRAM):   end;
2061355   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2061356   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2061357   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2061358   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2061359   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2061360   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2061361   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2061362   +         end;
MPRINT(EM_DIAGRAM):   end;
2061363   +      end;
MPRINT(EM_DIAGRAM):   end;
2061364   +   end;
MPRINT(EM_DIAGRAM):   end;
2061365   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2061366   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2061367   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2061368   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2061369   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2061370   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2061371   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2061372   +   end;
MPRINT(EM_DIAGRAM):   end;
2061373   +end;
MPRINT(EM_DIAGRAM):   end;
2061374   +
2061375   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2061376   +*** Checking missing input Interval
2061377   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2061378   +
2061379   +IF NMISS(
2061380   +   Income ,
2061381   +   Kidhome ,
2061382   +   MntFishProducts ,
2061383   +   MntFruits ,
2061384   +   MntGoldProds ,
2061385   +   MntMeatProducts ,
2061386   +   MntSweetProducts ,
2061387   +   MntWines ,
2061388   +   NumCatalogPurchases ,
2061389   +   NumDealsPurchases ,
2061390   +   NumStorePurchases ,
2061391   +   NumWebPurchases ,
2061392   +   NumWebVisitsMonth ,
2061393   +   Recency ,
2061394   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
2061395   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2061396   +
2061397   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2061398   +END;
MPRINT(EM_DIAGRAM):   END;
2061399   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2061400   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2061401   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2061402   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2061403   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2061404   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2061405   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2061406   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2061407   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2061408   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2061409   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2061410   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2061411   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2061412   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2061413   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2061414   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2061415   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2061416   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2061417   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2061418   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2061419   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2061420   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2061421   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2061422   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2061423   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2061424   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2061425   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2061426   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2061427   +END;
MPRINT(EM_DIAGRAM):   END;
2061428   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2061429   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2061430   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2061431   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2061432   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2061433   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2061434   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2061435   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2061436   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2061437   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2061438   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2061439   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2061440   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2061441   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2061442   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2061443   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2061444   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2061445   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2061446   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2061447   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2061448   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2061449   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2061450   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2061451   +   ELSE S_NumCatalogPurchases
2061452   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2061453   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2061454   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2061455   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2061456   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2061457   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2061458   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2061459   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2061460   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2061461   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2061462   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2061463   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2061464   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2061465   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2061466   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2061467   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2061468   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2061469   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2061470   +END;
MPRINT(EM_DIAGRAM):   END;
2061471   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2061472   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
2061473   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2061474   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2061475   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
2061476   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2061477   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2061478   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2061479   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2061480   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2061481   +   H11  =     0.87660114046125 * S_Income  +     -0.7994451897827 * S_Kidhome
2061482   +          +    -0.08967295716195 * S_MntFishProducts
2061483   +          +     0.03184635437516 * S_MntFruits  +    -0.13860895575438 *
2061484   +        S_MntGoldProds  +     0.55790460748169 * S_MntMeatProducts
2061485   +          +    -0.02806094557115 * S_MntSweetProducts
2061486   +          +    -0.14537763592724 * S_MntWines  +     0.76891266523847 *
2061487   +        S_NumCatalogPurchases  +     0.16842007461305 * S_NumDealsPurchases
2061488   +          +     0.25137876058262 * S_NumStorePurchases
2061489   +          +    -0.07865442401292 * S_NumWebPurchases
2061490   +          +     1.03197398967259 * S_NumWebVisitsMonth
2061491   +          +    -1.26907156503759 * S_Recency  +    -0.76016893316351 *
2061492   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.87660114046125 * S_Income + -0.7994451897827 * S_Kidhome +
-0.08967295716195 * S_MntFishProducts + 0.03184635437516 * S_MntFruits + -0.13860895575438 *
S_MntGoldProds + 0.55790460748169 * S_MntMeatProducts + -0.02806094557115 * S_MntSweetProducts
+ -0.14537763592724 * S_MntWines + 0.76891266523847 * S_NumCatalogPurchases + 0.16842007461305
* S_NumDealsPurchases + 0.25137876058262 * S_NumStorePurchases + -0.07865442401292 *
S_NumWebPurchases + 1.03197398967259 * S_NumWebVisitsMonth + -1.26907156503759 * S_Recency +
-0.76016893316351 * S_Teenhome ;
2061493   +   H12  =     0.37295000114468 * S_Income  +    -0.12834211496575 * S_Kidhome
2061494   +          +     0.19312392388912 * S_MntFishProducts
2061495   +          +      0.1561688289137 * S_MntFruits  +     0.04004810938796 *
2061496   +        S_MntGoldProds  +     0.32599201739588 * S_MntMeatProducts
2061497   +          +       0.204174263605 * S_MntSweetProducts
2061498   +          +    -0.11560784817014 * S_MntWines  +     0.12255073568725 *
2061499   +        S_NumCatalogPurchases  +    -0.05543734180218 * S_NumDealsPurchases
2061500   +          +     0.07747830335769 * S_NumStorePurchases
2061501   +          +     0.07960837555191 * S_NumWebPurchases
2061502   +          +     0.02351602389122 * S_NumWebVisitsMonth
2061503   +          +     -0.2840853952427 * S_Recency  +    -0.47421627761687 *
2061504   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.37295000114468 * S_Income + -0.12834211496575 * S_Kidhome +
0.19312392388912 * S_MntFishProducts + 0.1561688289137 * S_MntFruits + 0.04004810938796 *
S_MntGoldProds + 0.32599201739588 * S_MntMeatProducts + 0.204174263605 * S_MntSweetProducts +
-0.11560784817014 * S_MntWines + 0.12255073568725 * S_NumCatalogPurchases + -0.05543734180218
* S_NumDealsPurchases + 0.07747830335769 * S_NumStorePurchases + 0.07960837555191 *
S_NumWebPurchases + 0.02351602389122 * S_NumWebVisitsMonth + -0.2840853952427 * S_Recency +
-0.47421627761687 * S_Teenhome ;
2061505   +   H13  =    -0.33428925248315 * S_Income  +    -0.03845622730742 * S_Kidhome
2061506   +          +     0.18733919794636 * S_MntFishProducts
2061507   +          +     0.45907982190052 * S_MntFruits  +    -0.48776616433719 *
2061508   +        S_MntGoldProds  +    -0.41340481007204 * S_MntMeatProducts
2061509   +          +     0.42514606159239 * S_MntSweetProducts
2061510   +          +     0.20038001368787 * S_MntWines  +    -1.21708501803782 *
2061511   +        S_NumCatalogPurchases  +    -1.06820061274533 * S_NumDealsPurchases
2061512   +          +     0.36582106462789 * S_NumStorePurchases
2061513   +          +     0.04244777020435 * S_NumWebPurchases
2061514   +          +    -0.24296342902503 * S_NumWebVisitsMonth
2061515   +          +     0.27451716762947 * S_Recency  +     0.13110477325277 *
2061516   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.33428925248315 * S_Income + -0.03845622730742 * S_Kidhome +
0.18733919794636 * S_MntFishProducts + 0.45907982190052 * S_MntFruits + -0.48776616433719 *
S_MntGoldProds + -0.41340481007204 * S_MntMeatProducts + 0.42514606159239 * S_MntSweetProducts
+ 0.20038001368787 * S_MntWines + -1.21708501803782 * S_NumCatalogPurchases +
-1.06820061274533 * S_NumDealsPurchases + 0.36582106462789 * S_NumStorePurchases +
0.04244777020435 * S_NumWebPurchases + -0.24296342902503 * S_NumWebVisitsMonth +
0.27451716762947 * S_Recency + 0.13110477325277 * S_Teenhome ;
2061517   +   H14  =    -0.70493412542585 * S_Income  +     0.41202796606799 * S_Kidhome
2061518   +          +     0.05986489897572 * S_MntFishProducts
2061519   +          +    -0.05040531715469 * S_MntFruits  +       0.051068387592 *
2061520   +        S_MntGoldProds  +    -0.13581881662481 * S_MntMeatProducts
2061521   +          +    -0.05513370461072 * S_MntSweetProducts
2061522   +          +     0.77472084468819 * S_MntWines  +    -0.03211788969126 *
2061523   +        S_NumCatalogPurchases  +    -0.24097486430988 * S_NumDealsPurchases
2061524   +          +     0.64364674828841 * S_NumStorePurchases
2061525   +          +     0.15084748708424 * S_NumWebPurchases
2061526   +          +    -0.94144998356377 * S_NumWebVisitsMonth
2061527   +          +     1.16778338364599 * S_Recency  +     0.32089861635238 *
2061528   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.70493412542585 * S_Income + 0.41202796606799 * S_Kidhome +
0.05986489897572 * S_MntFishProducts + -0.05040531715469 * S_MntFruits + 0.051068387592 *
S_MntGoldProds + -0.13581881662481 * S_MntMeatProducts + -0.05513370461072 *
S_MntSweetProducts + 0.77472084468819 * S_MntWines + -0.03211788969126 * S_NumCatalogPurchases
+ -0.24097486430988 * S_NumDealsPurchases + 0.64364674828841 * S_NumStorePurchases +
0.15084748708424 * S_NumWebPurchases + -0.94144998356377 * S_NumWebVisitsMonth +
1.16778338364599 * S_Recency + 0.32089861635238 * S_Teenhome ;
2061529   +   H15  =    -0.15703510827879 * S_Income  +    -0.30977841002562 * S_Kidhome
2061530   +          +    -0.14543196273578 * S_MntFishProducts
2061531   +          +     0.32223695896711 * S_MntFruits  +    -0.31846203211698 *
2061532   +        S_MntGoldProds  +     -1.4125160823105 * S_MntMeatProducts
2061533   +          +     0.49374793444169 * S_MntSweetProducts
2061534   +          +     0.39699716010219 * S_MntWines  +    -0.88140331687645 *
2061535   +        S_NumCatalogPurchases  +    -0.87657222813687 * S_NumDealsPurchases
2061536   +          +     1.23754786782746 * S_NumStorePurchases
2061537   +          +     1.11316667348511 * S_NumWebPurchases
2061538   +          +    -1.08592446439781 * S_NumWebVisitsMonth
2061539   +          +     0.66958517589542 * S_Recency  +     0.06799032788481 *
2061540   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.15703510827879 * S_Income + -0.30977841002562 * S_Kidhome +
-0.14543196273578 * S_MntFishProducts + 0.32223695896711 * S_MntFruits + -0.31846203211698 *
S_MntGoldProds + -1.4125160823105 * S_MntMeatProducts + 0.49374793444169 * S_MntSweetProducts
+ 0.39699716010219 * S_MntWines + -0.88140331687645 * S_NumCatalogPurchases +
-0.87657222813687 * S_NumDealsPurchases + 1.23754786782746 * S_NumStorePurchases +
1.11316667348511 * S_NumWebPurchases + -1.08592446439781 * S_NumWebVisitsMonth +
0.66958517589542 * S_Recency + 0.06799032788481 * S_Teenhome ;
2061541   +   H16  =    -0.10360901553583 * S_Income  +     0.39257497240865 * S_Kidhome
2061542   +          +     0.29549884005341 * S_MntFishProducts
2061543   +          +     0.04922491353914 * S_MntFruits  +     -0.1412659458221 *
2061544   +        S_MntGoldProds  +    -0.12361454534126 * S_MntMeatProducts
2061545   +          +    -0.11909215986981 * S_MntSweetProducts
2061546   +          +     0.11430484977092 * S_MntWines  +    -0.66235553839539 *
2061547   +        S_NumCatalogPurchases  +     0.17261763180198 * S_NumDealsPurchases
2061548   +          +     0.30109334594548 * S_NumStorePurchases
2061549   +          +     0.01985762767489 * S_NumWebPurchases
2061550   +          +     0.44965133281333 * S_NumWebVisitsMonth
2061551   +          +     0.32338634259192 * S_Recency  +    -0.04032956941805 *
2061552   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.10360901553583 * S_Income + 0.39257497240865 * S_Kidhome +
0.29549884005341 * S_MntFishProducts + 0.04922491353914 * S_MntFruits + -0.1412659458221 *
S_MntGoldProds + -0.12361454534126 * S_MntMeatProducts + -0.11909215986981 *
S_MntSweetProducts + 0.11430484977092 * S_MntWines + -0.66235553839539 * S_NumCatalogPurchases
+ 0.17261763180198 * S_NumDealsPurchases + 0.30109334594548 * S_NumStorePurchases +
0.01985762767489 * S_NumWebPurchases + 0.44965133281333 * S_NumWebVisitsMonth +
0.32338634259192 * S_Recency + -0.04032956941805 * S_Teenhome ;
2061553   +   H11  = H11  +    -0.23026310289024 * AcceptedCmp10
2061554   +          +    -0.82550012364234 * AcceptedCmp20  +    -0.67764228269441 *
2061555   +        AcceptedCmp30  +    -0.51547666117685 * AcceptedCmp40
2061556   +          +    -0.36424958084824 * AcceptedCmp50  +       0.119862855783 *
2061557   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.23026310289024 * AcceptedCmp10 + -0.82550012364234 *
AcceptedCmp20 + -0.67764228269441 * AcceptedCmp30 + -0.51547666117685 * AcceptedCmp40 +
-0.36424958084824 * AcceptedCmp50 + 0.119862855783 * Complain0 ;
2061558   +   H12  = H12  +     0.02722288857426 * AcceptedCmp10
2061559   +          +      0.1236576068539 * AcceptedCmp20  +    -0.31265425960737 *
2061560   +        AcceptedCmp30  +    -0.25076565034266 * AcceptedCmp40
2061561   +          +    -0.20158659730872 * AcceptedCmp50  +    -0.43687103612629 *
2061562   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.02722288857426 * AcceptedCmp10 + 0.1236576068539 *
AcceptedCmp20 + -0.31265425960737 * AcceptedCmp30 + -0.25076565034266 * AcceptedCmp40 +
-0.20158659730872 * AcceptedCmp50 + -0.43687103612629 * Complain0 ;
2061563   +   H13  = H13  +     0.21852176280571 * AcceptedCmp10
2061564   +          +     0.01727991436107 * AcceptedCmp20  +     0.19303261094625 *
2061565   +        AcceptedCmp30  +    -0.65492191560509 * AcceptedCmp40
2061566   +          +    -0.09636750660684 * AcceptedCmp50  +     0.07579128571046 *
2061567   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.21852176280571 * AcceptedCmp10 + 0.01727991436107 *
AcceptedCmp20 + 0.19303261094625 * AcceptedCmp30 + -0.65492191560509 * AcceptedCmp40 +
-0.09636750660684 * AcceptedCmp50 + 0.07579128571046 * Complain0 ;
2061568   +   H14  = H14  +     0.20819294353855 * AcceptedCmp10
2061569   +          +      0.5159102831901 * AcceptedCmp20  +     0.55295587458643 *
2061570   +        AcceptedCmp30  +     0.80682431419623 * AcceptedCmp40
2061571   +          +     0.74007057798158 * AcceptedCmp50  +     -0.4573052390807 *
2061572   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.20819294353855 * AcceptedCmp10 + 0.5159102831901 *
AcceptedCmp20 + 0.55295587458643 * AcceptedCmp30 + 0.80682431419623 * AcceptedCmp40 +
0.74007057798158 * AcceptedCmp50 + -0.4573052390807 * Complain0 ;
2061573   +   H15  = H15  +     1.26330939420524 * AcceptedCmp10
2061574   +          +     0.29494505935793 * AcceptedCmp20  +     0.25561322032419 *
2061575   +        AcceptedCmp30  +     0.50102236777897 * AcceptedCmp40
2061576   +          +     0.20696267245027 * AcceptedCmp50  +    -0.00849145233901 *
2061577   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 1.26330939420524 * AcceptedCmp10 + 0.29494505935793 *
AcceptedCmp20 + 0.25561322032419 * AcceptedCmp30 + 0.50102236777897 * AcceptedCmp40 +
0.20696267245027 * AcceptedCmp50 + -0.00849145233901 * Complain0 ;
2061578   +   H16  = H16  +     0.03638428330381 * AcceptedCmp10
2061579   +          +     0.27994215452657 * AcceptedCmp20  +    -0.03861840445025 *
2061580   +        AcceptedCmp30  +      0.3398057347433 * AcceptedCmp40
2061581   +          +    -0.00738335957724 * AcceptedCmp50  +      0.0447804375799 *
2061582   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.03638428330381 * AcceptedCmp10 + 0.27994215452657 *
AcceptedCmp20 + -0.03861840445025 * AcceptedCmp30 + 0.3398057347433 * AcceptedCmp40 +
-0.00738335957724 * AcceptedCmp50 + 0.0447804375799 * Complain0 ;
2061583   +   H11  = H11  +     0.27482405283962 * Education2n_Cycle
2061584   +          +     0.11084012456612 * EducationBasic  +    -0.23835071987159 *
2061585   +        EducationGraduation  +    -0.10167082180552 * EducationMaster
2061586   +          +     0.51015833145636 * Marital_StatusDivorced
2061587   +          +     -1.1653662063616 * Marital_StatusMarried
2061588   +          +     1.19396547750441 * Marital_StatusSingle
2061589   +          +    -0.99605751789992 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.27482405283962 * Education2n_Cycle + 0.11084012456612 *
EducationBasic + -0.23835071987159 * EducationGraduation + -0.10167082180552 * EducationMaster
+ 0.51015833145636 * Marital_StatusDivorced + -1.1653662063616 * Marital_StatusMarried +
1.19396547750441 * Marital_StatusSingle + -0.99605751789992 * Marital_StatusTogether ;
2061590   +   H12  = H12  +    -0.05268347704739 * Education2n_Cycle
2061591   +          +     0.19362065968028 * EducationBasic  +    -0.26784257195414 *
2061592   +        EducationGraduation  +     0.16650577465959 * EducationMaster
2061593   +          +     0.09154288513995 * Marital_StatusDivorced
2061594   +          +     0.06725684628382 * Marital_StatusMarried
2061595   +          +     0.11327659191494 * Marital_StatusSingle
2061596   +          +     0.01793778876811 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.05268347704739 * Education2n_Cycle + 0.19362065968028 *
EducationBasic + -0.26784257195414 * EducationGraduation + 0.16650577465959 * EducationMaster
+ 0.09154288513995 * Marital_StatusDivorced + 0.06725684628382 * Marital_StatusMarried +
0.11327659191494 * Marital_StatusSingle + 0.01793778876811 * Marital_StatusTogether ;
2061597   +   H13  = H13  +     -0.1027084329077 * Education2n_Cycle
2061598   +          +    -0.01342449140757 * EducationBasic  +    -0.35627920427273 *
2061599   +        EducationGraduation  +    -0.05554656531793 * EducationMaster
2061600   +          +     0.37591653615852 * Marital_StatusDivorced
2061601   +          +    -0.05024236790132 * Marital_StatusMarried
2061602   +          +    -0.28317154997144 * Marital_StatusSingle
2061603   +          +    -0.19247490223101 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.1027084329077 * Education2n_Cycle + -0.01342449140757 *
EducationBasic + -0.35627920427273 * EducationGraduation + -0.05554656531793 * EducationMaster
+ 0.37591653615852 * Marital_StatusDivorced + -0.05024236790132 * Marital_StatusMarried +
-0.28317154997144 * Marital_StatusSingle + -0.19247490223101 * Marital_StatusTogether ;
2061604   +   H14  = H14  +     -0.4162491480577 * Education2n_Cycle
2061605   +          +     0.38075572764074 * EducationBasic  +    -0.28169469529121 *
2061606   +        EducationGraduation  +       0.638986138084 * EducationMaster
2061607   +          +    -0.44885292450558 * Marital_StatusDivorced
2061608   +          +     0.78958791519299 * Marital_StatusMarried
2061609   +          +    -0.09688714431356 * Marital_StatusSingle
2061610   +          +     0.84239030196202 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.4162491480577 * Education2n_Cycle + 0.38075572764074 *
EducationBasic + -0.28169469529121 * EducationGraduation + 0.638986138084 * EducationMaster +
-0.44885292450558 * Marital_StatusDivorced + 0.78958791519299 * Marital_StatusMarried +
-0.09688714431356 * Marital_StatusSingle + 0.84239030196202 * Marital_StatusTogether ;
2061611   +   H15  = H15  +     0.33126657974568 * Education2n_Cycle
2061612   +          +     0.44539039262703 * EducationBasic  +    -0.09154902903865 *
2061613   +        EducationGraduation  +    -0.26400363440725 * EducationMaster
2061614   +          +    -0.30801073895989 * Marital_StatusDivorced
2061615   +          +     -0.1285150749223 * Marital_StatusMarried
2061616   +          +     0.06775542164414 * Marital_StatusSingle
2061617   +          +    -0.13032366945766 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.33126657974568 * Education2n_Cycle + 0.44539039262703 *
EducationBasic + -0.09154902903865 * EducationGraduation + -0.26400363440725 * EducationMaster
+ -0.30801073895989 * Marital_StatusDivorced + -0.1285150749223 * Marital_StatusMarried +
0.06775542164414 * Marital_StatusSingle + -0.13032366945766 * Marital_StatusTogether ;
2061618   +   H16  = H16  +     0.02030175222681 * Education2n_Cycle
2061619   +          +    -0.19579401096879 * EducationBasic  +      0.2070703930869 *
2061620   +        EducationGraduation  +    -0.40706983167068 * EducationMaster
2061621   +          +     0.22193599090368 * Marital_StatusDivorced
2061622   +          +    -0.54544672042168 * Marital_StatusMarried
2061623   +          +    -0.02237436019864 * Marital_StatusSingle
2061624   +          +    -0.21979468164854 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.02030175222681 * Education2n_Cycle + -0.19579401096879 *
EducationBasic + 0.2070703930869 * EducationGraduation + -0.40706983167068 * EducationMaster +
0.22193599090368 * Marital_StatusDivorced + -0.54544672042168 * Marital_StatusMarried +
-0.02237436019864 * Marital_StatusSingle + -0.21979468164854 * Marital_StatusTogether ;
2061625   +   H11  =    -1.24550293901788 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.24550293901788 + H11 ;
2061626   +   H12  =     0.36762263942809 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.36762263942809 + H12 ;
2061627   +   H13  =     0.07010867577103 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.07010867577103 + H13 ;
2061628   +   H14  =    -1.94014549272156 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -1.94014549272156 + H14 ;
2061629   +   H15  =     0.17666656180153 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.17666656180153 + H15 ;
2061630   +   H16  =    -1.64626406576709 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.64626406576709 + H16 ;
2061631   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2061632   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2061633   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
2061634   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
2061635   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
2061636   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
2061637   +END;
MPRINT(EM_DIAGRAM):   END;
2061638   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2061639   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2061640   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2061641   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
2061642   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
2061643   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
2061644   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
2061645   +END;
MPRINT(EM_DIAGRAM):   END;
2061646   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2061647   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2061648   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2061649   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2061650   +   P_DepVar1  =     4.21126046696691 * H11  +      0.6565061288056 * H12
2061651   +          +    -1.92484011508628 * H13  +    -3.74020722142387 * H14
2061652   +          +    -3.27353026762143 * H15  +     -1.2596922869974 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.21126046696691 * H11 + 0.6565061288056 * H12 +
-1.92484011508628 * H13 + -3.74020722142387 * H14 + -3.27353026762143 * H15 + -1.2596922869974
* H16 ;
2061653   +   P_DepVar1  =    -1.36806658950323 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.36806658950323 + P_DepVar1 ;
2061654   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2061655   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2061656   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2061657   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2061658   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2061659   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2061660   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2061661   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2061662   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2061663   +END;
MPRINT(EM_DIAGRAM):   END;
2061664   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2061665   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2061666   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2061667   +END;
MPRINT(EM_DIAGRAM):   END;
2061668   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2061669   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2061670   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2061671   +END;
MPRINT(EM_DIAGRAM):   END;
2061672   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2061673   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2061674   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2061675   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2061676   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2061677   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2061678   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2061679   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2061680   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2061681   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2061682   +END;
MPRINT(EM_DIAGRAM):   END;
2061683   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2061684   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2061685   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2061686   +drop
2061687   +H11
2061688   +H12
2061689   +H13
2061690   +H14
2061691   +H15
2061692   +H16
2061693   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
2061694   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2061695    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2061696    quit;
2061697    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2061698    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2061699    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2061700    retain ID 2 Node "Neural35";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural35";
2061701    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2061702    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2016 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2016 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2061703    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2061704    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2061705    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2016 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2016 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2061706    proc sort data=EMWS8.Neural35_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural35_variableset out=_temp2(keep=NAME CREATOR);
2061707    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2061708    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.NEURAL35_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2061709    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2061710    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2061711    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2061712    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2061713    proc contents data=EMWS8.Neural35_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural35_train out=_meta(keep=NAME) noprint;
2061714    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2061715    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2061716    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2061717    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2061718    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2061719    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2061720    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2061721    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2061722    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2061723    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2061723  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 970 rows and 5 columns.
 
2061724    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2061725    proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
2061726    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 970 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 970 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2061727    filename _pref
2061727  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2061728    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2061729    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2061730   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2061731   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2061732   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2061733   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2061734   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2061735   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2061736    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2061737    quit;
2061738    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2061739    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2061740    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2061741    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2061742    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2061743    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2061744    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2061745    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2061746    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2061747    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2061748    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2061749    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2061750    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2061751    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2061752    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2061753    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2061754    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2061755    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2061756    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2061757    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2061758    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2061759    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2061760    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2061761    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2061762    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2061763    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2061764    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2061764  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
2061765    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2061766    proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
2061767    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 974 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2061768    filename _pref
2061768  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2061769    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2061770    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2061771   +
2061772   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2061773   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2061773  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2061774   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2061775   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2061776   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2061777   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2061778   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2061779    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2061780    quit;
2061781    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2061782    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2061783    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2061784    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2061785    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2061786    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2061787    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2061788    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2061789    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2061790    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2061791    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2061792    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2061793    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2061794    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2061795    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2061796    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2061797    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2061798    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2061799    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2061800    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2061801    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2061802    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2061803    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2061804    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2061805    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2061806    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2061807    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2061807  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
2061808    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2061809    proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
2061810    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 1013 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2061811    filename _pref
2061811  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2061812    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2061813    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2061814   +
2061815   +
2061816   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2061817   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2061818   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2061819   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2061820   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2061821   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2061822   +
2061823   +
2061824   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2061825   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2061826   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2061827   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2061828   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2061829   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2061830   +
2061831   +
2061832   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2061833   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2061834   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2061835   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2061836   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2061837   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2061838   +
2061839   +
2061840   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2061841   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2061842   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2061843   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2061844   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2061845   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2061846   +
2061847   +
2061848   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2061849   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2061850   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2061851   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2061852   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2061853   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2061854   +
2061855   +
2061856   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2061857   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2061858   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2061859   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2061860   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2061861   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2061862   +
2061863   +
2061864   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2061865   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2061866   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2061867   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2061868   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2061869   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2061870   +
2061871   +
2061872   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2061873   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2061874   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2061875   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2061876   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2061877   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2061878   +if
2061879   +_FILTERNORM1 not in ( '.')
2061880   + and
2061881   +_FILTERNORM2 not in ( '.')
2061882   + and
2061883   +_FILTERNORM3 not in ( '.')
2061884   + and
2061885   +_FILTERNORM4 not in ( '.')
2061886   + and
2061887   +_FILTERNORM5 not in ( '.')
2061888   + and
2061889   +_FILTERNORM6 not in ( '.')
2061890   + and
2061891   +_FILTERNORM7 not in ( ' ')
2061892   + and
2061893   +_FILTERNORM8 not in ( ' ')
2061894   +and
2061895   +( Dt_Customer ne .)
2061896   +and ( Income ne . and (Income<=107000))
2061897   +and ( Kidhome ne .)
2061898   +and ( MntFishProducts ne .)
2061899   +and ( MntFruits ne .)
2061900   +and ( MntGoldProds ne .)
2061901   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2061902   +and ( MntSweetProducts ne .)
2061903   +and ( MntWines ne .)
2061904   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2061905   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2061906   +and ( NumStorePurchases ne .)
2061907   +and ( NumWebPurchases ne .)
2061908   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2061909   +and ( Recency ne .)
2061910   +and ( Teenhome ne .)
2061911   +and ( Year_Birth ne .)
2061912   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
2061913   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2061914   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2061915   +end;
MPRINT(EM_DIAGRAM):   end;
2061916   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2061917   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2061918    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2061919    quit;
2061920    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2061921    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2061922    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2061923    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2061924    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2061925    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2061926    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2061927    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2061928    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2061929    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2061930    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2061931    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2061932    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2061933    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2061934    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2061935    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2061936    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2061937    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2061938    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2061939    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2061940    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2061941    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2061942    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2061943    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2061944    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2061945    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2061946    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2061946  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
2061947    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2061948    proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
2061949    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 1079 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2061950    %macro varDept(fcmpdata=,id=);
2061951    %global nobs&id scoreFlag&id;
2061952    %let scoreFlag&id = 0;
2061953    %if &id=1 or ^&fcmpStart %then %do;
2061954    proc sort data=&fcmpdata out=_temp&id nodupkey;
2061955    by NAME;
2061956    where id=&id and LHS in( %let j=1;
2061957    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2061958    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2061959    "&var" %let j = %eval(&j+1);
2061960    %end;
2061961    );
2061962    run;
2061963    %let dsid = %sysfunc(open(_temp&id));
2061964    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2061965    %let dsid = %sysfunc(close(&dsid));
2061966    %if &&nobs&id %then %do;
2061967    %let scoreFlag&id = 1;
2061968    %let fcmpStart = 1;
2061969    %end;
2061970    %else %let fcmpStart = 0;
2061971    %end;
2061972    %else %do;
2061973    proc sort data=&fcmpdata out=_tempid;
2061974    where id=&id;
2061975    by LHS;
2061976    run;
2061977    %let dsid = %sysfunc(open(_tempid));
2061978    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2061979    %let dsid = %sysfunc(close(&dsid));
2061980    %if ^&&nobs&id %then %do;
2061981    proc datasets lib=work nolist;
2061982    delete _tempid;
2061983    run;
2061984    quit;
2061985    %end;
2061986    %else %do;
2061987    data _tempAll;
2061988    set %let j=%eval(&id-1);
2061989    %do x=1 %to &j;
2061990    %if &&nobs&x %then %do;
2061991    _temp&x %end;
2061992    %end;
2061993    ;
2061994    run;
2061995    proc sql;
2061996    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2061996  ! work._tempid p2 where p.name=p2.lhs;
2061997    quit;
2061998    data _temp&id;
2061999    set _temp&id;
2062000    where LHS ne '' and NAME ne '' and Node ne '';
2062001    run;
2062002    proc datasets lib=work nolist;
2062003    delete _tempAll;
2062004    run;
2062005    %let dsid = %sysfunc(open(_temp&id));
2062006    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2062007    %let dsid = %sysfunc(close(&dsid));
2062008    %if ^&&nobs&id %then %do;
2062009    proc datasets lib=work nolist;
2062010    delete _temp&id;
2062011    run;
2062012    quit;
2062013    %end;
2062014    %else %do;
2062015    %let scoreFlag&id = 1;
2062016    data _temp&id;
2062017    set _temp&id;
2062018    where LHS ne NAME and node ne '';
2062019    run;
2062020    %let dsid = %sysfunc(open(_temp&id));
2062021    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2062022    %let dsid = %sysfunc(close(&dsid));
2062023    %if ^&&nobs&id %then %do;
2062024    proc datasets lib=work nolist;
2062025    delete _temp&id;
2062026    run;
2062027    quit;
2062028    %end;
2062029    %else %do;
2062030    proc sort data=_temp&id nodupkey;
2062031    by LHS NAME;
2062032    run;
2062033    %end;
2062034    %end;
2062035    %end;
2062036    %end;
2062037    %mend varDept;
2062038    %macro optCode(outdata=fcmpdata);
2062039    %global fcmpStart;
2062040    %let fcmpStart = 0;
2062041    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2062042    %let NumNodes=9;
2062043    %do k=1 %to &NumNodes;
2062044    %vardept(fcmpdata=&outdata, id=&k);
2062045    %end;
2062046    %mend optCode;
2062047    %optcode(outData=EMWS8.Ensmbl22_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 98 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 73 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 25 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp6;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP6 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
2062048    filename _pref
2062048  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural34\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural34\EMPUBLISHSCORE.sas";
2062049    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2062050    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural34\EMPUBLISHSCORE.sas.
2062051   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2062052   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2062053   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2062054   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2062055   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2062056   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2062057   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2062058   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2062059   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2062060   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2062061   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2062062   +LENGTH _WARN_ $4
2062063   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2062064   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2062065   +
2062066   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2062067   +
2062068   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2062069   +
2062070   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2062071   +
2062072   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2062073   +
2062074   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2062075   +
2062076   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2062077   +
2062078   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2062079   +
2062080   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2062081   +
2062082   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2062083   +
2062084   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2062085   +
2062086   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2062087   +
2062088   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2062089   +
2062090   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2062091   +
2062092   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2062093   +
2062094   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2062095   +
2062096   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2062097   +
2062098   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2062099   +
2062100   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2062101   +
2062102   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2062103   +
2062104   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2062105   +
2062106   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2062107   +
2062108   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2062109   +
2062110   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2062111   +
2062112   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2062113   +
2062114   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2062115   +
2062116   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2062117   +
2062118   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2062119   +
2062120   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2062121   +
2062122   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2062123   +
2062124   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2062125   +
2062126   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
2062127   +
2062128   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
2062129   +
2062130   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
2062131   +
2062132   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2062133   +
2062134   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2062135   +
2062136   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2062137   +
2062138   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2062139   +
2062140   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2062141   +
2062142   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2062143   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2062144   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2062145   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2062146   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2062147   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2062148   +end;
MPRINT(EM_DIAGRAM):   end;
2062149   +else do;
MPRINT(EM_DIAGRAM):   else do;
2062150   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2062151   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2062152   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2062153   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2062154   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2062155   +   end;
MPRINT(EM_DIAGRAM):   end;
2062156   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2062157   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2062158   +   end;
MPRINT(EM_DIAGRAM):   end;
2062159   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2062160   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2062161   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2062162   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2062163   +   end;
MPRINT(EM_DIAGRAM):   end;
2062164   +end;
MPRINT(EM_DIAGRAM):   end;
2062165   +
2062166   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2062167   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2062168   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2062169   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2062170   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2062171   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2062172   +end;
MPRINT(EM_DIAGRAM):   end;
2062173   +else do;
MPRINT(EM_DIAGRAM):   else do;
2062174   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2062175   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2062176   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2062177   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2062178   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2062179   +   end;
MPRINT(EM_DIAGRAM):   end;
2062180   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2062181   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2062182   +   end;
MPRINT(EM_DIAGRAM):   end;
2062183   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2062184   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2062185   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2062186   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2062187   +   end;
MPRINT(EM_DIAGRAM):   end;
2062188   +end;
MPRINT(EM_DIAGRAM):   end;
2062189   +
2062190   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2062191   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2062192   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2062193   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2062194   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2062195   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2062196   +end;
MPRINT(EM_DIAGRAM):   end;
2062197   +else do;
MPRINT(EM_DIAGRAM):   else do;
2062198   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2062199   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2062200   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2062201   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2062202   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2062203   +   end;
MPRINT(EM_DIAGRAM):   end;
2062204   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2062205   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2062206   +   end;
MPRINT(EM_DIAGRAM):   end;
2062207   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2062208   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2062209   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2062210   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2062211   +   end;
MPRINT(EM_DIAGRAM):   end;
2062212   +end;
MPRINT(EM_DIAGRAM):   end;
2062213   +
2062214   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2062215   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2062216   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2062217   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2062218   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2062219   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2062220   +end;
MPRINT(EM_DIAGRAM):   end;
2062221   +else do;
MPRINT(EM_DIAGRAM):   else do;
2062222   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2062223   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2062224   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2062225   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2062226   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2062227   +   end;
MPRINT(EM_DIAGRAM):   end;
2062228   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2062229   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2062230   +   end;
MPRINT(EM_DIAGRAM):   end;
2062231   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2062232   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2062233   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2062234   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2062235   +   end;
MPRINT(EM_DIAGRAM):   end;
2062236   +end;
MPRINT(EM_DIAGRAM):   end;
2062237   +
2062238   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2062239   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2062240   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2062241   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2062242   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2062243   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2062244   +end;
MPRINT(EM_DIAGRAM):   end;
2062245   +else do;
MPRINT(EM_DIAGRAM):   else do;
2062246   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2062247   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2062248   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2062249   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2062250   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2062251   +   end;
MPRINT(EM_DIAGRAM):   end;
2062252   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2062253   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2062254   +   end;
MPRINT(EM_DIAGRAM):   end;
2062255   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2062256   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2062257   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2062258   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2062259   +   end;
MPRINT(EM_DIAGRAM):   end;
2062260   +end;
MPRINT(EM_DIAGRAM):   end;
2062261   +
2062262   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2062263   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2062264   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2062265   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2062266   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2062267   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2062268   +end;
MPRINT(EM_DIAGRAM):   end;
2062269   +else do;
MPRINT(EM_DIAGRAM):   else do;
2062270   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2062271   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2062272   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2062273   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2062274   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2062275   +   end;
MPRINT(EM_DIAGRAM):   end;
2062276   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2062277   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2062278   +   end;
MPRINT(EM_DIAGRAM):   end;
2062279   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2062280   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2062281   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2062282   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2062283   +   end;
MPRINT(EM_DIAGRAM):   end;
2062284   +end;
MPRINT(EM_DIAGRAM):   end;
2062285   +
2062286   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2062287   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2062288   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2062289   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2062290   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2062291   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2062292   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2062293   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2062294   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2062295   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2062296   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2062297   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2062298   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2062299   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2062300   +end;
MPRINT(EM_DIAGRAM):   end;
2062301   +else do;
MPRINT(EM_DIAGRAM):   else do;
2062302   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2062303   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2062304   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2062305   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2062306   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2062307   +   end;
MPRINT(EM_DIAGRAM):   end;
2062308   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2062309   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2062310   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2062311   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2062312   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2062313   +   end;
MPRINT(EM_DIAGRAM):   end;
2062314   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2062315   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2062316   +   end;
MPRINT(EM_DIAGRAM):   end;
2062317   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2062318   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2062319   +   end;
MPRINT(EM_DIAGRAM):   end;
2062320   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2062321   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2062322   +   end;
MPRINT(EM_DIAGRAM):   end;
2062323   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2062324   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2062325   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2062326   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2062327   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2062328   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2062329   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2062330   +   end;
MPRINT(EM_DIAGRAM):   end;
2062331   +end;
MPRINT(EM_DIAGRAM):   end;
2062332   +
2062333   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2062334   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2062335   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2062336   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2062337   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2062338   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2062339   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2062340   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2062341   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2062342   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2062343   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2062344   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2062345   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2062346   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2062347   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2062348   +end;
MPRINT(EM_DIAGRAM):   end;
2062349   +else do;
MPRINT(EM_DIAGRAM):   else do;
2062350   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2062351   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2062352   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2062353   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2062354   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2062355   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2062356   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2062357   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2062358   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2062359   +         end;
MPRINT(EM_DIAGRAM):   end;
2062360   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2062361   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2062362   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2062363   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2062364   +            end;
MPRINT(EM_DIAGRAM):   end;
2062365   +         end;
MPRINT(EM_DIAGRAM):   end;
2062366   +      end;
MPRINT(EM_DIAGRAM):   end;
2062367   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2062368   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2062369   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2062370   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2062371   +         end;
MPRINT(EM_DIAGRAM):   end;
2062372   +      end;
MPRINT(EM_DIAGRAM):   end;
2062373   +   end;
MPRINT(EM_DIAGRAM):   end;
2062374   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2062375   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2062376   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2062377   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2062378   +      end;
MPRINT(EM_DIAGRAM):   end;
2062379   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2062380   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2062381   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2062382   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2062383   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2062384   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2062385   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2062386   +         end;
MPRINT(EM_DIAGRAM):   end;
2062387   +      end;
MPRINT(EM_DIAGRAM):   end;
2062388   +   end;
MPRINT(EM_DIAGRAM):   end;
2062389   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2062390   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2062391   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2062392   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2062393   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2062394   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2062395   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2062396   +   end;
MPRINT(EM_DIAGRAM):   end;
2062397   +end;
MPRINT(EM_DIAGRAM):   end;
2062398   +
2062399   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2062400   +*** Checking missing input Interval
2062401   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2062402   +
2062403   +IF NMISS(
2062404   +   Income ,
2062405   +   Kidhome ,
2062406   +   MntFishProducts ,
2062407   +   MntFruits ,
2062408   +   MntGoldProds ,
2062409   +   MntMeatProducts ,
2062410   +   MntSweetProducts ,
2062411   +   MntWines ,
2062412   +   NumCatalogPurchases ,
2062413   +   NumDealsPurchases ,
2062414   +   NumStorePurchases ,
2062415   +   NumWebPurchases ,
2062416   +   NumWebVisitsMonth ,
2062417   +   Recency ,
2062418   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
2062419   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2062420   +
2062421   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2062422   +END;
MPRINT(EM_DIAGRAM):   END;
2062423   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2062424   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2062425   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2062426   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2062427   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2062428   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2062429   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2062430   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2062431   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2062432   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2062433   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2062434   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2062435   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2062436   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2062437   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2062438   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2062439   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2062440   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2062441   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2062442   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2062443   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2062444   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2062445   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2062446   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2062447   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2062448   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2062449   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2062450   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2062451   +END;
MPRINT(EM_DIAGRAM):   END;
2062452   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2062453   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2062454   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2062455   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2062456   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2062457   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2062458   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2062459   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2062460   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2062461   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2062462   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2062463   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2062464   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2062465   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2062466   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2062467   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2062468   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2062469   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2062470   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2062471   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2062472   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2062473   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2062474   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2062475   +   ELSE S_NumCatalogPurchases
2062476   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2062477   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2062478   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2062479   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2062480   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2062481   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2062482   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2062483   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2062484   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2062485   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2062486   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2062487   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2062488   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2062489   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2062490   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2062491   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2062492   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2062493   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2062494   +END;
MPRINT(EM_DIAGRAM):   END;
2062495   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2062496   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
2062497   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2062498   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2062499   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
2062500   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2062501   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2062502   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2062503   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2062504   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2062505   +   H11  =    -0.81572379016921 * S_Income  +    -0.07670946585348 * S_Kidhome
2062506   +          +     0.24367603598167 * S_MntFishProducts
2062507   +          +     0.19692980127348 * S_MntFruits  +    -0.03926738185333 *
2062508   +        S_MntGoldProds  +    -0.20900804333353 * S_MntMeatProducts
2062509   +          +     0.34054806441484 * S_MntSweetProducts
2062510   +          +     0.65956211369383 * S_MntWines  +    -0.95375334578522 *
2062511   +        S_NumCatalogPurchases  +    -0.73124740368567 * S_NumDealsPurchases
2062512   +          +     0.98942946974575 * S_NumStorePurchases
2062513   +          +     0.89701206630103 * S_NumWebPurchases
2062514   +          +    -1.22878611472154 * S_NumWebVisitsMonth
2062515   +          +     1.44981870978354 * S_Recency  +     0.47533125686411 *
2062516   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.81572379016921 * S_Income + -0.07670946585348 * S_Kidhome +
0.24367603598167 * S_MntFishProducts + 0.19692980127348 * S_MntFruits + -0.03926738185333 *
S_MntGoldProds + -0.20900804333353 * S_MntMeatProducts + 0.34054806441484 * S_MntSweetProducts
+ 0.65956211369383 * S_MntWines + -0.95375334578522 * S_NumCatalogPurchases +
-0.73124740368567 * S_NumDealsPurchases + 0.98942946974575 * S_NumStorePurchases +
0.89701206630103 * S_NumWebPurchases + -1.22878611472154 * S_NumWebVisitsMonth +
1.44981870978354 * S_Recency + 0.47533125686411 * S_Teenhome ;
2062517   +   H12  =    -0.18875145195495 * S_Income  +     0.42230998482453 * S_Kidhome
2062518   +          +     0.16683404689723 * S_MntFishProducts
2062519   +          +     0.32072658929401 * S_MntFruits  +    -0.12341748032201 *
2062520   +        S_MntGoldProds  +    -1.56478754527255 * S_MntMeatProducts
2062521   +          +     0.20389084548968 * S_MntSweetProducts
2062522   +          +     0.95592931625509 * S_MntWines  +    -0.69996817353755 *
2062523   +        S_NumCatalogPurchases  +    -0.92709806328697 * S_NumDealsPurchases
2062524   +          +     1.27164659640366 * S_NumStorePurchases
2062525   +          +     1.02122194207802 * S_NumWebPurchases
2062526   +          +     -1.5111033436803 * S_NumWebVisitsMonth
2062527   +          +     1.63712814901544 * S_Recency  +     0.14205116840572 *
2062528   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.18875145195495 * S_Income + 0.42230998482453 * S_Kidhome +
0.16683404689723 * S_MntFishProducts + 0.32072658929401 * S_MntFruits + -0.12341748032201 *
S_MntGoldProds + -1.56478754527255 * S_MntMeatProducts + 0.20389084548968 * S_MntSweetProducts
+ 0.95592931625509 * S_MntWines + -0.69996817353755 * S_NumCatalogPurchases +
-0.92709806328697 * S_NumDealsPurchases + 1.27164659640366 * S_NumStorePurchases +
1.02122194207802 * S_NumWebPurchases + -1.5111033436803 * S_NumWebVisitsMonth +
1.63712814901544 * S_Recency + 0.14205116840572 * S_Teenhome ;
2062529   +   H13  =     1.02798705354163 * S_Income  +    -0.94411708781921 * S_Kidhome
2062530   +          +    -0.03345077166544 * S_MntFishProducts
2062531   +          +     0.00038440809349 * S_MntFruits  +    -0.05068379715712 *
2062532   +        S_MntGoldProds  +     1.00464705307582 * S_MntMeatProducts
2062533   +          +    -0.11948662500951 * S_MntSweetProducts
2062534   +          +    -0.52438819731252 * S_MntWines  +     0.98586904866769 *
2062535   +        S_NumCatalogPurchases  +     0.09015295226839 * S_NumDealsPurchases
2062536   +          +     0.22401914357376 * S_NumStorePurchases
2062537   +          +     0.04219877865976 * S_NumWebPurchases
2062538   +          +     1.21753334166036 * S_NumWebVisitsMonth
2062539   +          +    -1.33712212110081 * S_Recency  +    -0.47582856683655 *
2062540   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 1.02798705354163 * S_Income + -0.94411708781921 * S_Kidhome +
-0.03345077166544 * S_MntFishProducts + 0.00038440809349 * S_MntFruits + -0.05068379715712 *
S_MntGoldProds + 1.00464705307582 * S_MntMeatProducts + -0.11948662500951 * S_MntSweetProducts
+ -0.52438819731252 * S_MntWines + 0.98586904866769 * S_NumCatalogPurchases + 0.09015295226839
* S_NumDealsPurchases + 0.22401914357376 * S_NumStorePurchases + 0.04219877865976 *
S_NumWebPurchases + 1.21753334166036 * S_NumWebVisitsMonth + -1.33712212110081 * S_Recency +
-0.47582856683655 * S_Teenhome ;
2062541   +   H14  =     0.91431429848834 * S_Income  +    -1.16289676557574 * S_Kidhome
2062542   +          +     0.31175257038578 * S_MntFishProducts
2062543   +          +     0.08080436076271 * S_MntFruits  +     0.15252288175851 *
2062544   +        S_MntGoldProds  +     0.21603546207654 * S_MntMeatProducts
2062545   +          +      0.0927253053382 * S_MntSweetProducts
2062546   +          +     0.05865323888304 * S_MntWines  +    -0.23426953728277 *
2062547   +        S_NumCatalogPurchases  +    -0.46451908614085 * S_NumDealsPurchases
2062548   +          +    -0.12667606349662 * S_NumStorePurchases
2062549   +          +     0.30148374518724 * S_NumWebPurchases
2062550   +          +     0.48934229701658 * S_NumWebVisitsMonth
2062551   +          +    -0.83754390793251 * S_Recency  +     -0.4576645462819 *
2062552   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.91431429848834 * S_Income + -1.16289676557574 * S_Kidhome +
0.31175257038578 * S_MntFishProducts + 0.08080436076271 * S_MntFruits + 0.15252288175851 *
S_MntGoldProds + 0.21603546207654 * S_MntMeatProducts + 0.0927253053382 * S_MntSweetProducts +
0.05865323888304 * S_MntWines + -0.23426953728277 * S_NumCatalogPurchases + -0.46451908614085
* S_NumDealsPurchases + -0.12667606349662 * S_NumStorePurchases + 0.30148374518724 *
S_NumWebPurchases + 0.48934229701658 * S_NumWebVisitsMonth + -0.83754390793251 * S_Recency +
-0.4576645462819 * S_Teenhome ;
2062553   +   H15  =    -0.58161501095664 * S_Income  +     -1.0333658128614 * S_Kidhome
2062554   +          +     0.42646725119177 * S_MntFishProducts
2062555   +          +     -0.3264621401658 * S_MntFruits  +    -0.74616728524532 *
2062556   +        S_MntGoldProds  +    -0.97572068716712 * S_MntMeatProducts
2062557   +          +    -0.01493605582616 * S_MntSweetProducts
2062558   +          +      0.0311636632685 * S_MntWines  +    -1.68599903767191 *
2062559   +        S_NumCatalogPurchases  +    -1.25052648798307 * S_NumDealsPurchases
2062560   +          +     0.54256744091258 * S_NumStorePurchases
2062561   +          +     0.43065931458468 * S_NumWebPurchases
2062562   +          +      0.5935561420466 * S_NumWebVisitsMonth
2062563   +          +    -0.45183418369624 * S_Recency  +     0.19260512629844 *
2062564   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.58161501095664 * S_Income + -1.0333658128614 * S_Kidhome +
0.42646725119177 * S_MntFishProducts + -0.3264621401658 * S_MntFruits + -0.74616728524532 *
S_MntGoldProds + -0.97572068716712 * S_MntMeatProducts + -0.01493605582616 *
S_MntSweetProducts + 0.0311636632685 * S_MntWines + -1.68599903767191 * S_NumCatalogPurchases
+ -1.25052648798307 * S_NumDealsPurchases + 0.54256744091258 * S_NumStorePurchases +
0.43065931458468 * S_NumWebPurchases + 0.5935561420466 * S_NumWebVisitsMonth +
-0.45183418369624 * S_Recency + 0.19260512629844 * S_Teenhome ;
2062565   +   H11  = H11  +     0.61503950219838 * AcceptedCmp10
2062566   +          +     0.02945207091619 * AcceptedCmp20  +     0.99151950769472 *
2062567   +        AcceptedCmp30  +     1.08987060401718 * AcceptedCmp40
2062568   +          +     0.45427753773024 * AcceptedCmp50  +    -1.03533951966815 *
2062569   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.61503950219838 * AcceptedCmp10 + 0.02945207091619 *
AcceptedCmp20 + 0.99151950769472 * AcceptedCmp30 + 1.08987060401718 * AcceptedCmp40 +
0.45427753773024 * AcceptedCmp50 + -1.03533951966815 * Complain0 ;
2062570   +   H12  = H12  +     0.83823476190401 * AcceptedCmp10
2062571   +          +      1.0793719601418 * AcceptedCmp20  +     0.68538854946581 *
2062572   +        AcceptedCmp30  +     1.00297565893339 * AcceptedCmp40
2062573   +          +     0.24586379991786 * AcceptedCmp50  +     0.15471251255301 *
2062574   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.83823476190401 * AcceptedCmp10 + 1.0793719601418 *
AcceptedCmp20 + 0.68538854946581 * AcceptedCmp30 + 1.00297565893339 * AcceptedCmp40 +
0.24586379991786 * AcceptedCmp50 + 0.15471251255301 * Complain0 ;
2062575   +   H13  = H13  +    -0.41486094438907 * AcceptedCmp10
2062576   +          +    -0.76586628449839 * AcceptedCmp20  +    -0.59695459523693 *
2062577   +        AcceptedCmp30  +    -0.30262159911837 * AcceptedCmp40
2062578   +          +    -0.61141171124182 * AcceptedCmp50  +    -0.01086235188835 *
2062579   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.41486094438907 * AcceptedCmp10 + -0.76586628449839 *
AcceptedCmp20 + -0.59695459523693 * AcceptedCmp30 + -0.30262159911837 * AcceptedCmp40 +
-0.61141171124182 * AcceptedCmp50 + -0.01086235188835 * Complain0 ;
2062580   +   H14  = H14  +    -0.09662858884082 * AcceptedCmp10
2062581   +          +    -0.48515652524171 * AcceptedCmp20  +    -0.37421451374399 *
2062582   +        AcceptedCmp30  +    -0.52889523891817 * AcceptedCmp40
2062583   +          +    -0.73518448275357 * AcceptedCmp50  +    -0.36065830718672 *
2062584   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.09662858884082 * AcceptedCmp10 + -0.48515652524171 *
AcceptedCmp20 + -0.37421451374399 * AcceptedCmp30 + -0.52889523891817 * AcceptedCmp40 +
-0.73518448275357 * AcceptedCmp50 + -0.36065830718672 * Complain0 ;
2062585   +   H15  = H15  +      0.2985143092641 * AcceptedCmp10
2062586   +          +    -0.06881934778393 * AcceptedCmp20  +    -0.02609197044604 *
2062587   +        AcceptedCmp30  +    -0.79105657447885 * AcceptedCmp40
2062588   +          +    -0.02286855144948 * AcceptedCmp50  +     0.02884650192784 *
2062589   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.2985143092641 * AcceptedCmp10 + -0.06881934778393 *
AcceptedCmp20 + -0.02609197044604 * AcceptedCmp30 + -0.79105657447885 * AcceptedCmp40 +
-0.02286855144948 * AcceptedCmp50 + 0.02884650192784 * Complain0 ;
2062590   +   H11  = H11  +    -0.41169946146301 * Education2n_Cycle
2062591   +          +      0.8448273504441 * EducationBasic  +    -1.02497956377347 *
2062592   +        EducationGraduation  +     0.43998321745211 * EducationMaster
2062593   +          +    -0.85912688909911 * Marital_StatusDivorced
2062594   +          +     0.81561401465875 * Marital_StatusMarried
2062595   +          +    -0.58324403081542 * Marital_StatusSingle
2062596   +          +      0.9348017085106 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.41169946146301 * Education2n_Cycle + 0.8448273504441 *
EducationBasic + -1.02497956377347 * EducationGraduation + 0.43998321745211 * EducationMaster
+ -0.85912688909911 * Marital_StatusDivorced + 0.81561401465875 * Marital_StatusMarried +
-0.58324403081542 * Marital_StatusSingle + 0.9348017085106 * Marital_StatusTogether ;
2062597   +   H12  = H12  +     0.22828129841893 * Education2n_Cycle
2062598   +          +     0.47579227804033 * EducationBasic  +    -0.18165301263195 *
2062599   +        EducationGraduation  +    -0.16143431016405 * EducationMaster
2062600   +          +    -0.34784695867287 * Marital_StatusDivorced
2062601   +          +    -0.18194022182247 * Marital_StatusMarried
2062602   +          +    -0.10633185904164 * Marital_StatusSingle
2062603   +          +     0.13136125361628 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.22828129841893 * Education2n_Cycle + 0.47579227804033 *
EducationBasic + -0.18165301263195 * EducationGraduation + -0.16143431016405 * EducationMaster
+ -0.34784695867287 * Marital_StatusDivorced + -0.18194022182247 * Marital_StatusMarried +
-0.10633185904164 * Marital_StatusSingle + 0.13136125361628 * Marital_StatusTogether ;
2062604   +   H13  = H13  +     0.38705901043652 * Education2n_Cycle
2062605   +          +     0.19703188370189 * EducationBasic  +    -0.48062640599976 *
2062606   +        EducationGraduation  +     -0.3646621736273 * EducationMaster
2062607   +          +     0.61058752124466 * Marital_StatusDivorced
2062608   +          +    -1.38793808025141 * Marital_StatusMarried
2062609   +          +     1.10060737810944 * Marital_StatusSingle
2062610   +          +    -1.21250219018366 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.38705901043652 * Education2n_Cycle + 0.19703188370189 *
EducationBasic + -0.48062640599976 * EducationGraduation + -0.3646621736273 * EducationMaster
+ 0.61058752124466 * Marital_StatusDivorced + -1.38793808025141 * Marital_StatusMarried +
1.10060737810944 * Marital_StatusSingle + -1.21250219018366 * Marital_StatusTogether ;
2062611   +   H14  = H14  +    -0.20576658115662 * Education2n_Cycle
2062612   +          +    -0.09185472034614 * EducationBasic  +    -0.43674210064447 *
2062613   +        EducationGraduation  +    -0.18154054746298 * EducationMaster
2062614   +          +     0.11973800573581 * Marital_StatusDivorced
2062615   +          +      -0.294635257911 * Marital_StatusMarried
2062616   +          +    -0.05399659601172 * Marital_StatusSingle
2062617   +          +     0.34207780606239 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.20576658115662 * Education2n_Cycle + -0.09185472034614 *
EducationBasic + -0.43674210064447 * EducationGraduation + -0.18154054746298 * EducationMaster
+ 0.11973800573581 * Marital_StatusDivorced + -0.294635257911 * Marital_StatusMarried +
-0.05399659601172 * Marital_StatusSingle + 0.34207780606239 * Marital_StatusTogether ;
2062618   +   H15  = H15  +    -0.05553093684862 * Education2n_Cycle
2062619   +          +    -0.12898006732329 * EducationBasic  +    -0.16064118923518 *
2062620   +        EducationGraduation  +     -0.6431539624694 * EducationMaster
2062621   +          +     0.42838191659864 * Marital_StatusDivorced
2062622   +          +    -0.09150349181363 * Marital_StatusMarried
2062623   +          +    -0.33520164145276 * Marital_StatusSingle
2062624   +          +    -0.15253738713197 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.05553093684862 * Education2n_Cycle + -0.12898006732329 *
EducationBasic + -0.16064118923518 * EducationGraduation + -0.6431539624694 * EducationMaster
+ 0.42838191659864 * Marital_StatusDivorced + -0.09150349181363 * Marital_StatusMarried +
-0.33520164145276 * Marital_StatusSingle + -0.15253738713197 * Marital_StatusTogether ;
2062625   +   H11  =     -1.5079478405973 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.5079478405973 + H11 ;
2062626   +   H12  =     0.03014958331993 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.03014958331993 + H12 ;
2062627   +   H13  =    -1.78098671165572 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.78098671165572 + H13 ;
2062628   +   H14  =     0.22179429743277 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.22179429743277 + H14 ;
2062629   +   H15  =    -2.06602107857898 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -2.06602107857898 + H15 ;
2062630   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2062631   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2062632   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
2062633   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
2062634   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
2062635   +END;
MPRINT(EM_DIAGRAM):   END;
2062636   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2062637   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2062638   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2062639   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
2062640   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
2062641   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
2062642   +END;
MPRINT(EM_DIAGRAM):   END;
2062643   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2062644   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2062645   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2062646   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2062647   +   P_DepVar1  =    -4.55666337815854 * H11  +    -4.04792544554995 * H12
2062648   +          +     4.56148127429284 * H13  +     2.36841344452371 * H14
2062649   +          +    -3.07371010011749 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.55666337815854 * H11 + -4.04792544554995 * H12 +
4.56148127429284 * H13 + 2.36841344452371 * H14 + -3.07371010011749 * H15 ;
2062650   +   P_DepVar1  =    -0.83283406236136 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.83283406236136 + P_DepVar1 ;
2062651   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2062652   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2062653   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2062654   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2062655   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2062656   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2062657   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2062658   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2062659   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2062660   +END;
MPRINT(EM_DIAGRAM):   END;
2062661   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2062662   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2062663   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2062664   +END;
MPRINT(EM_DIAGRAM):   END;
2062665   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2062666   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2062667   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2062668   +END;
MPRINT(EM_DIAGRAM):   END;
2062669   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2062670   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2062671   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2062672   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2062673   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2062674   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2062675   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2062676   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2062677   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2062678   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2062679   +END;
MPRINT(EM_DIAGRAM):   END;
2062680   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2062681   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2062682   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2062683   +drop
2062684   +H11
2062685   +H12
2062686   +H13
2062687   +H14
2062688   +H15
2062689   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
2062690   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2062691    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2062692    quit;
2062693    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2062694    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2062695    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2062696    retain ID 2 Node "Neural34";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural34";
2062697    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2062698    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1878 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1878 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2062699    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2062700    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2062701    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1878 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1878 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2062702    proc sort data=EMWS8.Neural34_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural34_variableset out=_temp2(keep=NAME CREATOR);
2062703    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2062704    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.NEURAL34_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2062705    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2062706    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2062707    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2062708    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2062709    proc contents data=EMWS8.Neural34_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural34_train out=_meta(keep=NAME) noprint;
2062710    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2062711    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2062712    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2062713    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2062714    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2062715    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2062716    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2062717    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2062718    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2062719    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2062719  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 924 rows and 5 columns.
 
2062720    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2062721    proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
2062722    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 924 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 924 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2062723    filename _pref
2062723  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2062724    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2062725    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2062726   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2062727   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2062728   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2062729   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2062730   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2062731   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2062732    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2062733    quit;
2062734    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2062735    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2062736    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2062737    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2062738    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2062739    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2062740    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2062741    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2062742    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2062743    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2062744    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2062745    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2062746    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2062747    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2062748    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2062749    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2062750    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2062751    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2062752    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2062753    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2062754    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2062755    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2062756    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2062757    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2062758    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2062759    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2062760    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2062760  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
2062761    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2062762    proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
2062763    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 928 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2062764    filename _pref
2062764  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2062765    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2062766    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2062767   +
2062768   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2062769   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2062769  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2062770   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2062771   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2062772   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2062773   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2062774   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2062775    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2062776    quit;
2062777    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2062778    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2062779    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2062780    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2062781    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2062782    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2062783    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2062784    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2062785    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2062786    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2062787    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2062788    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2062789    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2062790    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2062791    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2062792    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2062793    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2062794    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2062795    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2062796    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2062797    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2062798    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2062799    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2062800    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2062801    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2062802    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2062803    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2062803  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
2062804    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2062805    proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
2062806    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 967 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2062807    filename _pref
2062807  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2062808    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2062809    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2062810   +
2062811   +
2062812   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2062813   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2062814   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2062815   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2062816   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2062817   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2062818   +
2062819   +
2062820   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2062821   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2062822   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2062823   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2062824   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2062825   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2062826   +
2062827   +
2062828   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2062829   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2062830   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2062831   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2062832   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2062833   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2062834   +
2062835   +
2062836   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2062837   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2062838   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2062839   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2062840   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2062841   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2062842   +
2062843   +
2062844   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2062845   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2062846   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2062847   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2062848   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2062849   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2062850   +
2062851   +
2062852   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2062853   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2062854   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2062855   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2062856   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2062857   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2062858   +
2062859   +
2062860   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2062861   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2062862   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2062863   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2062864   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2062865   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2062866   +
2062867   +
2062868   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2062869   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2062870   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2062871   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2062872   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2062873   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2062874   +if
2062875   +_FILTERNORM1 not in ( '.')
2062876   + and
2062877   +_FILTERNORM2 not in ( '.')
2062878   + and
2062879   +_FILTERNORM3 not in ( '.')
2062880   + and
2062881   +_FILTERNORM4 not in ( '.')
2062882   + and
2062883   +_FILTERNORM5 not in ( '.')
2062884   + and
2062885   +_FILTERNORM6 not in ( '.')
2062886   + and
2062887   +_FILTERNORM7 not in ( ' ')
2062888   + and
2062889   +_FILTERNORM8 not in ( ' ')
2062890   +and
2062891   +( Dt_Customer ne .)
2062892   +and ( Income ne . and (Income<=107000))
2062893   +and ( Kidhome ne .)
2062894   +and ( MntFishProducts ne .)
2062895   +and ( MntFruits ne .)
2062896   +and ( MntGoldProds ne .)
2062897   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2062898   +and ( MntSweetProducts ne .)
2062899   +and ( MntWines ne .)
2062900   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2062901   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2062902   +and ( NumStorePurchases ne .)
2062903   +and ( NumWebPurchases ne .)
2062904   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2062905   +and ( Recency ne .)
2062906   +and ( Teenhome ne .)
2062907   +and ( Year_Birth ne .)
2062908   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
2062909   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2062910   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2062911   +end;
MPRINT(EM_DIAGRAM):   end;
2062912   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2062913   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2062914    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2062915    quit;
2062916    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2062917    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2062918    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2062919    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2062920    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2062921    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2062922    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2062923    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2062924    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2062925    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2062926    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2062927    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2062928    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2062929    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2062930    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2062931    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2062932    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2062933    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2062934    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2062935    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2062936    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2062937    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2062938    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2062939    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2062940    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2062941    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2062942    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2062942  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
2062943    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2062944    proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
2062945    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 1033 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2062946    %macro varDept(fcmpdata=,id=);
2062947    %global nobs&id scoreFlag&id;
2062948    %let scoreFlag&id = 0;
2062949    %if &id=1 or ^&fcmpStart %then %do;
2062950    proc sort data=&fcmpdata out=_temp&id nodupkey;
2062951    by NAME;
2062952    where id=&id and LHS in( %let j=1;
2062953    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2062954    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2062955    "&var" %let j = %eval(&j+1);
2062956    %end;
2062957    );
2062958    run;
2062959    %let dsid = %sysfunc(open(_temp&id));
2062960    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2062961    %let dsid = %sysfunc(close(&dsid));
2062962    %if &&nobs&id %then %do;
2062963    %let scoreFlag&id = 1;
2062964    %let fcmpStart = 1;
2062965    %end;
2062966    %else %let fcmpStart = 0;
2062967    %end;
2062968    %else %do;
2062969    proc sort data=&fcmpdata out=_tempid;
2062970    where id=&id;
2062971    by LHS;
2062972    run;
2062973    %let dsid = %sysfunc(open(_tempid));
2062974    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2062975    %let dsid = %sysfunc(close(&dsid));
2062976    %if ^&&nobs&id %then %do;
2062977    proc datasets lib=work nolist;
2062978    delete _tempid;
2062979    run;
2062980    quit;
2062981    %end;
2062982    %else %do;
2062983    data _tempAll;
2062984    set %let j=%eval(&id-1);
2062985    %do x=1 %to &j;
2062986    %if &&nobs&x %then %do;
2062987    _temp&x %end;
2062988    %end;
2062989    ;
2062990    run;
2062991    proc sql;
2062992    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2062992  ! work._tempid p2 where p.name=p2.lhs;
2062993    quit;
2062994    data _temp&id;
2062995    set _temp&id;
2062996    where LHS ne '' and NAME ne '' and Node ne '';
2062997    run;
2062998    proc datasets lib=work nolist;
2062999    delete _tempAll;
2063000    run;
2063001    %let dsid = %sysfunc(open(_temp&id));
2063002    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2063003    %let dsid = %sysfunc(close(&dsid));
2063004    %if ^&&nobs&id %then %do;
2063005    proc datasets lib=work nolist;
2063006    delete _temp&id;
2063007    run;
2063008    quit;
2063009    %end;
2063010    %else %do;
2063011    %let scoreFlag&id = 1;
2063012    data _temp&id;
2063013    set _temp&id;
2063014    where LHS ne NAME and node ne '';
2063015    run;
2063016    %let dsid = %sysfunc(open(_temp&id));
2063017    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2063018    %let dsid = %sysfunc(close(&dsid));
2063019    %if ^&&nobs&id %then %do;
2063020    proc datasets lib=work nolist;
2063021    delete _temp&id;
2063022    run;
2063023    quit;
2063024    %end;
2063025    %else %do;
2063026    proc sort data=_temp&id nodupkey;
2063027    by LHS NAME;
2063028    run;
2063029    %end;
2063030    %end;
2063031    %end;
2063032    %end;
2063033    %mend varDept;
2063034    %macro optCode(outdata=fcmpdata);
2063035    %global fcmpStart;
2063036    %let fcmpStart = 0;
2063037    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2063038    %let NumNodes=9;
2063039    %do k=1 %to &NumNodes;
2063040    %vardept(fcmpdata=&outdata, id=&k);
2063041    %end;
2063042    %mend optCode;
2063043    %optcode(outData=EMWS8.Ensmbl22_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 98 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 73 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 25 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp6;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP6 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
2063044    filename _pref
2063044  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural33\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural33\EMPUBLISHSCORE.sas";
2063045    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2063046    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural33\EMPUBLISHSCORE.sas.
2063047   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2063048   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2063049   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2063050   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2063051   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2063052   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2063053   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2063054   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2063055   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2063056   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2063057   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2063058   +LENGTH _WARN_ $4
2063059   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2063060   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2063061   +
2063062   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2063063   +
2063064   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2063065   +
2063066   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2063067   +
2063068   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2063069   +
2063070   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2063071   +
2063072   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2063073   +
2063074   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2063075   +
2063076   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2063077   +
2063078   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2063079   +
2063080   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2063081   +
2063082   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2063083   +
2063084   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2063085   +
2063086   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2063087   +
2063088   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2063089   +
2063090   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2063091   +
2063092   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2063093   +
2063094   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2063095   +
2063096   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2063097   +
2063098   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2063099   +
2063100   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2063101   +
2063102   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2063103   +
2063104   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2063105   +
2063106   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2063107   +
2063108   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2063109   +
2063110   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2063111   +
2063112   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2063113   +
2063114   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2063115   +
2063116   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2063117   +
2063118   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2063119   +
2063120   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2063121   +
2063122   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
2063123   +
2063124   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
2063125   +
2063126   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2063127   +
2063128   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2063129   +
2063130   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2063131   +
2063132   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2063133   +
2063134   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2063135   +
2063136   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2063137   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2063138   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2063139   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2063140   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2063141   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2063142   +end;
MPRINT(EM_DIAGRAM):   end;
2063143   +else do;
MPRINT(EM_DIAGRAM):   else do;
2063144   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2063145   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2063146   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2063147   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2063148   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2063149   +   end;
MPRINT(EM_DIAGRAM):   end;
2063150   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2063151   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2063152   +   end;
MPRINT(EM_DIAGRAM):   end;
2063153   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2063154   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2063155   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2063156   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2063157   +   end;
MPRINT(EM_DIAGRAM):   end;
2063158   +end;
MPRINT(EM_DIAGRAM):   end;
2063159   +
2063160   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2063161   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2063162   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2063163   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2063164   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2063165   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2063166   +end;
MPRINT(EM_DIAGRAM):   end;
2063167   +else do;
MPRINT(EM_DIAGRAM):   else do;
2063168   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2063169   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2063170   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2063171   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2063172   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2063173   +   end;
MPRINT(EM_DIAGRAM):   end;
2063174   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2063175   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2063176   +   end;
MPRINT(EM_DIAGRAM):   end;
2063177   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2063178   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2063179   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2063180   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2063181   +   end;
MPRINT(EM_DIAGRAM):   end;
2063182   +end;
MPRINT(EM_DIAGRAM):   end;
2063183   +
2063184   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2063185   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2063186   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2063187   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2063188   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2063189   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2063190   +end;
MPRINT(EM_DIAGRAM):   end;
2063191   +else do;
MPRINT(EM_DIAGRAM):   else do;
2063192   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2063193   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2063194   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2063195   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2063196   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2063197   +   end;
MPRINT(EM_DIAGRAM):   end;
2063198   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2063199   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2063200   +   end;
MPRINT(EM_DIAGRAM):   end;
2063201   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2063202   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2063203   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2063204   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2063205   +   end;
MPRINT(EM_DIAGRAM):   end;
2063206   +end;
MPRINT(EM_DIAGRAM):   end;
2063207   +
2063208   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2063209   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2063210   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2063211   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2063212   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2063213   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2063214   +end;
MPRINT(EM_DIAGRAM):   end;
2063215   +else do;
MPRINT(EM_DIAGRAM):   else do;
2063216   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2063217   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2063218   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2063219   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2063220   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2063221   +   end;
MPRINT(EM_DIAGRAM):   end;
2063222   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2063223   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2063224   +   end;
MPRINT(EM_DIAGRAM):   end;
2063225   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2063226   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2063227   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2063228   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2063229   +   end;
MPRINT(EM_DIAGRAM):   end;
2063230   +end;
MPRINT(EM_DIAGRAM):   end;
2063231   +
2063232   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2063233   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2063234   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2063235   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2063236   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2063237   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2063238   +end;
MPRINT(EM_DIAGRAM):   end;
2063239   +else do;
MPRINT(EM_DIAGRAM):   else do;
2063240   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2063241   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2063242   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2063243   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2063244   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2063245   +   end;
MPRINT(EM_DIAGRAM):   end;
2063246   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2063247   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2063248   +   end;
MPRINT(EM_DIAGRAM):   end;
2063249   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2063250   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2063251   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2063252   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2063253   +   end;
MPRINT(EM_DIAGRAM):   end;
2063254   +end;
MPRINT(EM_DIAGRAM):   end;
2063255   +
2063256   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2063257   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2063258   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2063259   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2063260   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2063261   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2063262   +end;
MPRINT(EM_DIAGRAM):   end;
2063263   +else do;
MPRINT(EM_DIAGRAM):   else do;
2063264   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2063265   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2063266   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2063267   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2063268   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2063269   +   end;
MPRINT(EM_DIAGRAM):   end;
2063270   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2063271   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2063272   +   end;
MPRINT(EM_DIAGRAM):   end;
2063273   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2063274   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2063275   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2063276   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2063277   +   end;
MPRINT(EM_DIAGRAM):   end;
2063278   +end;
MPRINT(EM_DIAGRAM):   end;
2063279   +
2063280   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2063281   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2063282   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2063283   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2063284   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2063285   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2063286   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2063287   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2063288   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2063289   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2063290   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2063291   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2063292   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2063293   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2063294   +end;
MPRINT(EM_DIAGRAM):   end;
2063295   +else do;
MPRINT(EM_DIAGRAM):   else do;
2063296   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2063297   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2063298   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2063299   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2063300   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2063301   +   end;
MPRINT(EM_DIAGRAM):   end;
2063302   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2063303   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2063304   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2063305   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2063306   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2063307   +   end;
MPRINT(EM_DIAGRAM):   end;
2063308   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2063309   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2063310   +   end;
MPRINT(EM_DIAGRAM):   end;
2063311   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2063312   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2063313   +   end;
MPRINT(EM_DIAGRAM):   end;
2063314   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2063315   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2063316   +   end;
MPRINT(EM_DIAGRAM):   end;
2063317   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2063318   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2063319   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2063320   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2063321   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2063322   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2063323   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2063324   +   end;
MPRINT(EM_DIAGRAM):   end;
2063325   +end;
MPRINT(EM_DIAGRAM):   end;
2063326   +
2063327   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2063328   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2063329   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2063330   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2063331   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2063332   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2063333   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2063334   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2063335   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2063336   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2063337   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2063338   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2063339   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2063340   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2063341   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2063342   +end;
MPRINT(EM_DIAGRAM):   end;
2063343   +else do;
MPRINT(EM_DIAGRAM):   else do;
2063344   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2063345   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2063346   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2063347   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2063348   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2063349   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2063350   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2063351   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2063352   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2063353   +         end;
MPRINT(EM_DIAGRAM):   end;
2063354   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2063355   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2063356   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2063357   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2063358   +            end;
MPRINT(EM_DIAGRAM):   end;
2063359   +         end;
MPRINT(EM_DIAGRAM):   end;
2063360   +      end;
MPRINT(EM_DIAGRAM):   end;
2063361   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2063362   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2063363   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2063364   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2063365   +         end;
MPRINT(EM_DIAGRAM):   end;
2063366   +      end;
MPRINT(EM_DIAGRAM):   end;
2063367   +   end;
MPRINT(EM_DIAGRAM):   end;
2063368   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2063369   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2063370   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2063371   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2063372   +      end;
MPRINT(EM_DIAGRAM):   end;
2063373   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2063374   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2063375   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2063376   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2063377   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2063378   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2063379   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2063380   +         end;
MPRINT(EM_DIAGRAM):   end;
2063381   +      end;
MPRINT(EM_DIAGRAM):   end;
2063382   +   end;
MPRINT(EM_DIAGRAM):   end;
2063383   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2063384   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2063385   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2063386   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2063387   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2063388   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2063389   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2063390   +   end;
MPRINT(EM_DIAGRAM):   end;
2063391   +end;
MPRINT(EM_DIAGRAM):   end;
2063392   +
2063393   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2063394   +*** Checking missing input Interval
2063395   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2063396   +
2063397   +IF NMISS(
2063398   +   Income ,
2063399   +   Kidhome ,
2063400   +   MntFishProducts ,
2063401   +   MntFruits ,
2063402   +   MntGoldProds ,
2063403   +   MntMeatProducts ,
2063404   +   MntSweetProducts ,
2063405   +   MntWines ,
2063406   +   NumCatalogPurchases ,
2063407   +   NumDealsPurchases ,
2063408   +   NumStorePurchases ,
2063409   +   NumWebPurchases ,
2063410   +   NumWebVisitsMonth ,
2063411   +   Recency ,
2063412   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
2063413   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2063414   +
2063415   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2063416   +END;
MPRINT(EM_DIAGRAM):   END;
2063417   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2063418   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2063419   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2063420   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2063421   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2063422   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2063423   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2063424   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2063425   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2063426   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2063427   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2063428   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2063429   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2063430   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2063431   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2063432   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2063433   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2063434   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2063435   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2063436   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2063437   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2063438   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2063439   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2063440   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2063441   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2063442   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2063443   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2063444   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2063445   +END;
MPRINT(EM_DIAGRAM):   END;
2063446   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2063447   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2063448   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2063449   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2063450   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2063451   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2063452   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2063453   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2063454   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2063455   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2063456   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2063457   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2063458   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2063459   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2063460   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2063461   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2063462   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2063463   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2063464   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2063465   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2063466   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2063467   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2063468   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2063469   +   ELSE S_NumCatalogPurchases
2063470   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2063471   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2063472   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2063473   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2063474   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2063475   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2063476   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2063477   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2063478   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2063479   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2063480   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2063481   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2063482   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2063483   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2063484   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2063485   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2063486   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2063487   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2063488   +END;
MPRINT(EM_DIAGRAM):   END;
2063489   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2063490   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
2063491   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2063492   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2063493   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
2063494   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2063495   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2063496   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2063497   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2063498   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2063499   +   H11  =     0.32435248899543 * S_Income  +    -0.47929849648429 * S_Kidhome
2063500   +          +     0.13364230231465 * S_MntFishProducts
2063501   +          +     -0.1386717864506 * S_MntFruits  +    -0.02769770185129 *
2063502   +        S_MntGoldProds  +    -0.29009812234724 * S_MntMeatProducts
2063503   +          +    -0.10871064476617 * S_MntSweetProducts
2063504   +          +     0.57858611197719 * S_MntWines  +    -0.26900817180555 *
2063505   +        S_NumCatalogPurchases  +    -0.39598523430317 * S_NumDealsPurchases
2063506   +          +     0.52835897625366 * S_NumStorePurchases
2063507   +          +     0.66297635444958 * S_NumWebPurchases
2063508   +          +    -0.31727971903608 * S_NumWebVisitsMonth
2063509   +          +     0.12789679291219 * S_Recency  +    -0.39270105014448 *
2063510   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.32435248899543 * S_Income + -0.47929849648429 * S_Kidhome +
0.13364230231465 * S_MntFishProducts + -0.1386717864506 * S_MntFruits + -0.02769770185129 *
S_MntGoldProds + -0.29009812234724 * S_MntMeatProducts + -0.10871064476617 *
S_MntSweetProducts + 0.57858611197719 * S_MntWines + -0.26900817180555 * S_NumCatalogPurchases
+ -0.39598523430317 * S_NumDealsPurchases + 0.52835897625366 * S_NumStorePurchases +
0.66297635444958 * S_NumWebPurchases + -0.31727971903608 * S_NumWebVisitsMonth +
0.12789679291219 * S_Recency + -0.39270105014448 * S_Teenhome ;
2063511   +   H12  =     0.37777254641249 * S_Income  +     0.79199857244438 * S_Kidhome
2063512   +          +     0.14748983783528 * S_MntFishProducts
2063513   +          +     0.14994032216514 * S_MntFruits  +     0.19147871752132 *
2063514   +        S_MntGoldProds  +     0.80535213270443 * S_MntMeatProducts
2063515   +          +     0.31095426478608 * S_MntSweetProducts
2063516   +          +     0.00471809437476 * S_MntWines  +     0.93716396534802 *
2063517   +        S_NumCatalogPurchases  +     0.86841248727948 * S_NumDealsPurchases
2063518   +          +     0.14387100066933 * S_NumStorePurchases
2063519   +          +    -0.01648998884133 * S_NumWebPurchases
2063520   +          +     -0.1378597161576 * S_NumWebVisitsMonth
2063521   +          +     0.15850653387379 * S_Recency  +     0.11714339614827 *
2063522   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.37777254641249 * S_Income + 0.79199857244438 * S_Kidhome +
0.14748983783528 * S_MntFishProducts + 0.14994032216514 * S_MntFruits + 0.19147871752132 *
S_MntGoldProds + 0.80535213270443 * S_MntMeatProducts + 0.31095426478608 * S_MntSweetProducts
+ 0.00471809437476 * S_MntWines + 0.93716396534802 * S_NumCatalogPurchases + 0.86841248727948
* S_NumDealsPurchases + 0.14387100066933 * S_NumStorePurchases + -0.01648998884133 *
S_NumWebPurchases + -0.1378597161576 * S_NumWebVisitsMonth + 0.15850653387379 * S_Recency +
0.11714339614827 * S_Teenhome ;
2063523   +   H13  =    -0.31490756773649 * S_Income  +      0.4776214738577 * S_Kidhome
2063524   +          +     0.00774185404534 * S_MntFishProducts
2063525   +          +     0.22292845341942 * S_MntFruits  +     0.11636422687317 *
2063526   +        S_MntGoldProds  +    -0.45522230281212 * S_MntMeatProducts
2063527   +          +     0.28728624268589 * S_MntSweetProducts
2063528   +          +     0.74892928025295 * S_MntWines  +     -0.4834082773325 *
2063529   +        S_NumCatalogPurchases  +    -0.05055717315946 * S_NumDealsPurchases
2063530   +          +     0.56446566213593 * S_NumStorePurchases
2063531   +          +     0.44547549135846 * S_NumWebPurchases
2063532   +          +    -1.17648505936662 * S_NumWebVisitsMonth
2063533   +          +     1.30076355226685 * S_Recency  +     0.56217939635691 *
2063534   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.31490756773649 * S_Income + 0.4776214738577 * S_Kidhome +
0.00774185404534 * S_MntFishProducts + 0.22292845341942 * S_MntFruits + 0.11636422687317 *
S_MntGoldProds + -0.45522230281212 * S_MntMeatProducts + 0.28728624268589 * S_MntSweetProducts
+ 0.74892928025295 * S_MntWines + -0.4834082773325 * S_NumCatalogPurchases + -0.05055717315946
* S_NumDealsPurchases + 0.56446566213593 * S_NumStorePurchases + 0.44547549135846 *
S_NumWebPurchases + -1.17648505936662 * S_NumWebVisitsMonth + 1.30076355226685 * S_Recency +
0.56217939635691 * S_Teenhome ;
2063535   +   H14  =    -0.40179905952719 * S_Income  +     0.16141565212918 * S_Kidhome
2063536   +          +     0.24665716882586 * S_MntFishProducts
2063537   +          +     0.03410629332469 * S_MntFruits  +     -0.1353295645077 *
2063538   +        S_MntGoldProds  +    -0.74661391150362 * S_MntMeatProducts
2063539   +          +    -0.10530818594736 * S_MntSweetProducts
2063540   +          +     0.30618479493194 * S_MntWines  +    -0.63426712804061 *
2063541   +        S_NumCatalogPurchases  +    -0.39486403699564 * S_NumDealsPurchases
2063542   +          +     0.36617016651032 * S_NumStorePurchases
2063543   +          +      0.3580014320946 * S_NumWebPurchases
2063544   +          +    -0.72597289213724 * S_NumWebVisitsMonth
2063545   +          +     0.93272927444012 * S_Recency  +     0.24531402677279 *
2063546   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.40179905952719 * S_Income + 0.16141565212918 * S_Kidhome +
0.24665716882586 * S_MntFishProducts + 0.03410629332469 * S_MntFruits + -0.1353295645077 *
S_MntGoldProds + -0.74661391150362 * S_MntMeatProducts + -0.10530818594736 *
S_MntSweetProducts + 0.30618479493194 * S_MntWines + -0.63426712804061 * S_NumCatalogPurchases
+ -0.39486403699564 * S_NumDealsPurchases + 0.36617016651032 * S_NumStorePurchases +
0.3580014320946 * S_NumWebPurchases + -0.72597289213724 * S_NumWebVisitsMonth +
0.93272927444012 * S_Recency + 0.24531402677279 * S_Teenhome ;
2063547   +   H11  = H11  +     0.10790306691381 * AcceptedCmp10
2063548   +          +     0.36067546675468 * AcceptedCmp20  +     0.56838342781466 *
2063549   +        AcceptedCmp30  +     0.10138997954661 * AcceptedCmp40
2063550   +          +     0.23809874960179 * AcceptedCmp50  +     0.42164522965364 *
2063551   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.10790306691381 * AcceptedCmp10 + 0.36067546675468 *
AcceptedCmp20 + 0.56838342781466 * AcceptedCmp30 + 0.10138997954661 * AcceptedCmp40 +
0.23809874960179 * AcceptedCmp50 + 0.42164522965364 * Complain0 ;
2063552   +   H12  = H12  +    -0.10342435301564 * AcceptedCmp10
2063553   +          +     -0.1021625473908 * AcceptedCmp20  +    -0.17400073301804 *
2063554   +        AcceptedCmp30  +      0.1295257925186 * AcceptedCmp40
2063555   +          +    -0.17149939617806 * AcceptedCmp50  +    -0.11843709761825 *
2063556   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.10342435301564 * AcceptedCmp10 + -0.1021625473908 *
AcceptedCmp20 + -0.17400073301804 * AcceptedCmp30 + 0.1295257925186 * AcceptedCmp40 +
-0.17149939617806 * AcceptedCmp50 + -0.11843709761825 * Complain0 ;
2063557   +   H13  = H13  +      0.3357459370893 * AcceptedCmp10
2063558   +          +      -0.142120215863 * AcceptedCmp20  +     0.74265608697316 *
2063559   +        AcceptedCmp30  +     0.62493796040954 * AcceptedCmp40
2063560   +          +     0.60033091776267 * AcceptedCmp50  +    -0.70537393421868 *
2063561   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.3357459370893 * AcceptedCmp10 + -0.142120215863 *
AcceptedCmp20 + 0.74265608697316 * AcceptedCmp30 + 0.62493796040954 * AcceptedCmp40 +
0.60033091776267 * AcceptedCmp50 + -0.70537393421868 * Complain0 ;
2063562   +   H14  = H14  +     0.52427760948235 * AcceptedCmp10
2063563   +          +     0.50852083885302 * AcceptedCmp20  +     0.30116257238429 *
2063564   +        AcceptedCmp30  +     0.31213749631365 * AcceptedCmp40
2063565   +          +     0.49344261660916 * AcceptedCmp50  +    -0.18226921500969 *
2063566   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.52427760948235 * AcceptedCmp10 + 0.50852083885302 *
AcceptedCmp20 + 0.30116257238429 * AcceptedCmp30 + 0.31213749631365 * AcceptedCmp40 +
0.49344261660916 * AcceptedCmp50 + -0.18226921500969 * Complain0 ;
2063567   +   H11  = H11  +     0.04284090874847 * Education2n_Cycle
2063568   +          +    -0.30425860762413 * EducationBasic  +    -0.44977960705402 *
2063569   +        EducationGraduation  +     -0.0712759822621 * EducationMaster
2063570   +          +     0.05171313818048 * Marital_StatusDivorced
2063571   +          +    -0.79112453157624 * Marital_StatusMarried
2063572   +          +     0.89650138723512 * Marital_StatusSingle
2063573   +          +    -0.22094240412913 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04284090874847 * Education2n_Cycle + -0.30425860762413 *
EducationBasic + -0.44977960705402 * EducationGraduation + -0.0712759822621 * EducationMaster
+ 0.05171313818048 * Marital_StatusDivorced + -0.79112453157624 * Marital_StatusMarried +
0.89650138723512 * Marital_StatusSingle + -0.22094240412913 * Marital_StatusTogether ;
2063574   +   H12  = H12  +    -0.32431446530898 * Education2n_Cycle
2063575   +          +     0.04651949620543 * EducationBasic  +     0.50250608857106 *
2063576   +        EducationGraduation  +     0.00514401910219 * EducationMaster
2063577   +          +     0.05091092042416 * Marital_StatusDivorced
2063578   +          +     0.86642985712339 * Marital_StatusMarried
2063579   +          +    -0.14148832619997 * Marital_StatusSingle
2063580   +          +     0.54248977280079 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.32431446530898 * Education2n_Cycle + 0.04651949620543 *
EducationBasic + 0.50250608857106 * EducationGraduation + 0.00514401910219 * EducationMaster +
0.05091092042416 * Marital_StatusDivorced + 0.86642985712339 * Marital_StatusMarried +
-0.14148832619997 * Marital_StatusSingle + 0.54248977280079 * Marital_StatusTogether ;
2063581   +   H13  = H13  +      0.0307333873684 * Education2n_Cycle
2063582   +          +     0.54778728297045 * EducationBasic  +    -0.56032296783121 *
2063583   +        EducationGraduation  +     0.26811389967146 * EducationMaster
2063584   +          +    -0.67787102917679 * Marital_StatusDivorced
2063585   +          +     1.38931504762816 * Marital_StatusMarried
2063586   +          +    -0.51164629287485 * Marital_StatusSingle
2063587   +          +     1.18856608313733 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.0307333873684 * Education2n_Cycle + 0.54778728297045 *
EducationBasic + -0.56032296783121 * EducationGraduation + 0.26811389967146 * EducationMaster
+ -0.67787102917679 * Marital_StatusDivorced + 1.38931504762816 * Marital_StatusMarried +
-0.51164629287485 * Marital_StatusSingle + 1.18856608313733 * Marital_StatusTogether ;
2063588   +   H14  = H14  +    -0.07575289231798 * Education2n_Cycle
2063589   +          +     0.20678548929493 * EducationBasic  +     0.15952949579281 *
2063590   +        EducationGraduation  +    -0.08313247341922 * EducationMaster
2063591   +          +     0.12658153975639 * Marital_StatusDivorced
2063592   +          +     0.20111721742791 * Marital_StatusMarried
2063593   +          +     -0.3521524791648 * Marital_StatusSingle
2063594   +          +     0.24908846940254 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.07575289231798 * Education2n_Cycle + 0.20678548929493 *
EducationBasic + 0.15952949579281 * EducationGraduation + -0.08313247341922 * EducationMaster
+ 0.12658153975639 * Marital_StatusDivorced + 0.20111721742791 * Marital_StatusMarried +
-0.3521524791648 * Marital_StatusSingle + 0.24908846940254 * Marital_StatusTogether ;
2063595   +   H11  =      0.8846003542153 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.8846003542153 + H11 ;
2063596   +   H12  =      1.7793661863354 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.7793661863354 + H12 ;
2063597   +   H13  =    -0.73914187312129 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.73914187312129 + H13 ;
2063598   +   H14  =    -0.28907220457418 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.28907220457418 + H14 ;
2063599   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2063600   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2063601   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
2063602   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
2063603   +END;
MPRINT(EM_DIAGRAM):   END;
2063604   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2063605   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2063606   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2063607   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
2063608   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
2063609   +END;
MPRINT(EM_DIAGRAM):   END;
2063610   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2063611   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2063612   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2063613   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2063614   +   P_DepVar1  =    -1.84303414221873 * H11  +     1.56062653143645 * H12
2063615   +          +     -3.0630784922123 * H13  +    -4.55573659919551 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.84303414221873 * H11 + 1.56062653143645 * H12 +
-3.0630784922123 * H13 + -4.55573659919551 * H14 ;
2063616   +   P_DepVar1  =    -1.51714888392638 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.51714888392638 + P_DepVar1 ;
2063617   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2063618   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2063619   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2063620   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2063621   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2063622   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2063623   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2063624   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2063625   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2063626   +END;
MPRINT(EM_DIAGRAM):   END;
2063627   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2063628   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2063629   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2063630   +END;
MPRINT(EM_DIAGRAM):   END;
2063631   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2063632   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2063633   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2063634   +END;
MPRINT(EM_DIAGRAM):   END;
2063635   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2063636   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2063637   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2063638   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2063639   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2063640   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2063641   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2063642   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2063643   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2063644   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2063645   +END;
MPRINT(EM_DIAGRAM):   END;
2063646   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2063647   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2063648   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2063649   +drop
2063650   +H11
2063651   +H12
2063652   +H13
2063653   +H14
2063654   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
2063655   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2063656    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2063657    quit;
2063658    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2063659    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2063660    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2063661    retain ID 2 Node "Neural33";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural33";
2063662    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2063663    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1740 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1740 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2063664    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2063665    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2063666    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1740 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1740 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2063667    proc sort data=EMWS8.Neural33_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural33_variableset out=_temp2(keep=NAME CREATOR);
2063668    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2063669    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.NEURAL33_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2063670    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2063671    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2063672    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2063673    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2063674    proc contents data=EMWS8.Neural33_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural33_train out=_meta(keep=NAME) noprint;
2063675    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2063676    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2063677    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2063678    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2063679    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2063680    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2063681    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2063682    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2063683    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2063684    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2063684  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 878 rows and 5 columns.
 
2063685    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2063686    proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
2063687    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 878 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 878 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2063688    filename _pref
2063688  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2063689    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2063690    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2063691   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2063692   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2063693   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2063694   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2063695   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2063696   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2063697    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2063698    quit;
2063699    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2063700    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2063701    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2063702    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2063703    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2063704    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2063705    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2063706    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2063707    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2063708    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2063709    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2063710    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2063711    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2063712    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2063713    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2063714    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2063715    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2063716    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2063717    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2063718    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2063719    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2063720    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2063721    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2063722    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2063723    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2063724    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2063725    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2063725  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
2063726    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2063727    proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
2063728    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
The SAS System
 
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 882 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2063729    filename _pref
2063729  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2063730    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2063731    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2063732   +
2063733   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2063734   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2063734  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2063735   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2063736   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2063737   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2063738   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2063739   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2063740    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2063741    quit;
2063742    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2063743    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2063744    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2063745    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2063746    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2063747    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2063748    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2063749    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2063750    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2063751    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2063752    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2063753    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2063754    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2063755    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2063756    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2063757    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2063758    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2063759    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2063760    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2063761    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2063762    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2063763    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2063764    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2063765    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2063766    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2063767    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2063768    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2063768  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
2063769    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2063770    proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
2063771    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 921 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2063772    filename _pref
2063772  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2063773    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2063774    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2063775   +
2063776   +
2063777   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2063778   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2063779   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2063780   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2063781   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2063782   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2063783   +
2063784   +
2063785   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2063786   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2063787   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2063788   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2063789   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2063790   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2063791   +
2063792   +
2063793   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2063794   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2063795   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2063796   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2063797   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2063798   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2063799   +
2063800   +
2063801   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2063802   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2063803   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2063804   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2063805   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2063806   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2063807   +
2063808   +
2063809   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2063810   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2063811   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2063812   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2063813   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2063814   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2063815   +
2063816   +
2063817   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2063818   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2063819   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2063820   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2063821   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2063822   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2063823   +
2063824   +
2063825   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2063826   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2063827   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2063828   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2063829   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2063830   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2063831   +
2063832   +
2063833   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2063834   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2063835   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2063836   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2063837   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2063838   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2063839   +if
2063840   +_FILTERNORM1 not in ( '.')
2063841   + and
2063842   +_FILTERNORM2 not in ( '.')
2063843   + and
2063844   +_FILTERNORM3 not in ( '.')
2063845   + and
2063846   +_FILTERNORM4 not in ( '.')
2063847   + and
2063848   +_FILTERNORM5 not in ( '.')
2063849   + and
2063850   +_FILTERNORM6 not in ( '.')
2063851   + and
2063852   +_FILTERNORM7 not in ( ' ')
2063853   + and
2063854   +_FILTERNORM8 not in ( ' ')
2063855   +and
2063856   +( Dt_Customer ne .)
2063857   +and ( Income ne . and (Income<=107000))
2063858   +and ( Kidhome ne .)
2063859   +and ( MntFishProducts ne .)
2063860   +and ( MntFruits ne .)
2063861   +and ( MntGoldProds ne .)
2063862   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2063863   +and ( MntSweetProducts ne .)
2063864   +and ( MntWines ne .)
2063865   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2063866   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2063867   +and ( NumStorePurchases ne .)
2063868   +and ( NumWebPurchases ne .)
2063869   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2063870   +and ( Recency ne .)
2063871   +and ( Teenhome ne .)
2063872   +and ( Year_Birth ne .)
2063873   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
2063874   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2063875   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2063876   +end;
MPRINT(EM_DIAGRAM):   end;
2063877   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2063878   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2063879    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2063880    quit;
2063881    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2063882    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2063883    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2063884    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2063885    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2063886    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2063887    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2063888    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2063889    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2063890    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2063891    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2063892    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2063893    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2063894    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2063895    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2063896    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2063897    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2063898    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2063899    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2063900    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2063901    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2063902    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2063903    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2063904    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2063905    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2063906    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2063907    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2063907  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
2063908    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2063909    proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
2063910    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 987 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2063911    %macro varDept(fcmpdata=,id=);
2063912    %global nobs&id scoreFlag&id;
2063913    %let scoreFlag&id = 0;
2063914    %if &id=1 or ^&fcmpStart %then %do;
2063915    proc sort data=&fcmpdata out=_temp&id nodupkey;
2063916    by NAME;
2063917    where id=&id and LHS in( %let j=1;
2063918    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2063919    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2063920    "&var" %let j = %eval(&j+1);
2063921    %end;
2063922    );
2063923    run;
2063924    %let dsid = %sysfunc(open(_temp&id));
2063925    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2063926    %let dsid = %sysfunc(close(&dsid));
2063927    %if &&nobs&id %then %do;
2063928    %let scoreFlag&id = 1;
2063929    %let fcmpStart = 1;
2063930    %end;
2063931    %else %let fcmpStart = 0;
2063932    %end;
2063933    %else %do;
2063934    proc sort data=&fcmpdata out=_tempid;
2063935    where id=&id;
2063936    by LHS;
2063937    run;
2063938    %let dsid = %sysfunc(open(_tempid));
2063939    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2063940    %let dsid = %sysfunc(close(&dsid));
2063941    %if ^&&nobs&id %then %do;
2063942    proc datasets lib=work nolist;
2063943    delete _tempid;
2063944    run;
2063945    quit;
2063946    %end;
2063947    %else %do;
2063948    data _tempAll;
2063949    set %let j=%eval(&id-1);
2063950    %do x=1 %to &j;
2063951    %if &&nobs&x %then %do;
2063952    _temp&x %end;
2063953    %end;
2063954    ;
2063955    run;
2063956    proc sql;
2063957    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2063957  ! work._tempid p2 where p.name=p2.lhs;
2063958    quit;
2063959    data _temp&id;
2063960    set _temp&id;
2063961    where LHS ne '' and NAME ne '' and Node ne '';
2063962    run;
2063963    proc datasets lib=work nolist;
2063964    delete _tempAll;
2063965    run;
2063966    %let dsid = %sysfunc(open(_temp&id));
2063967    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2063968    %let dsid = %sysfunc(close(&dsid));
2063969    %if ^&&nobs&id %then %do;
2063970    proc datasets lib=work nolist;
2063971    delete _temp&id;
2063972    run;
2063973    quit;
2063974    %end;
2063975    %else %do;
2063976    %let scoreFlag&id = 1;
2063977    data _temp&id;
2063978    set _temp&id;
2063979    where LHS ne NAME and node ne '';
2063980    run;
2063981    %let dsid = %sysfunc(open(_temp&id));
2063982    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2063983    %let dsid = %sysfunc(close(&dsid));
2063984    %if ^&&nobs&id %then %do;
2063985    proc datasets lib=work nolist;
2063986    delete _temp&id;
2063987    run;
2063988    quit;
2063989    %end;
2063990    %else %do;
2063991    proc sort data=_temp&id nodupkey;
2063992    by LHS NAME;
2063993    run;
2063994    %end;
2063995    %end;
2063996    %end;
2063997    %end;
2063998    %mend varDept;
2063999    %macro optCode(outdata=fcmpdata);
2064000    %global fcmpStart;
2064001    %let fcmpStart = 0;
2064002    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2064003    %let NumNodes=9;
2064004    %do k=1 %to &NumNodes;
2064005    %vardept(fcmpdata=&outdata, id=&k);
2064006    %end;
2064007    %mend optCode;
2064008    %optcode(outData=EMWS8.Ensmbl22_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 98 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 73 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 25 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp6;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP6 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
2064009    filename _pref
2064009  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural32\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural32\EMPUBLISHSCORE.sas";
2064010    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2064011    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural32\EMPUBLISHSCORE.sas.
2064012   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2064013   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2064014   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2064015   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2064016   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2064017   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2064018   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2064019   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2064020   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2064021   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2064022   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2064023   +LENGTH _WARN_ $4
2064024   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2064025   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2064026   +
2064027   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2064028   +
2064029   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2064030   +
2064031   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2064032   +
2064033   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2064034   +
2064035   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2064036   +
2064037   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2064038   +
2064039   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2064040   +
2064041   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2064042   +
2064043   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2064044   +
2064045   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2064046   +
2064047   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2064048   +
2064049   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2064050   +
2064051   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2064052   +
2064053   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2064054   +
2064055   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2064056   +
2064057   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2064058   +
2064059   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2064060   +
2064061   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2064062   +
2064063   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2064064   +
2064065   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2064066   +
2064067   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2064068   +
2064069   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2064070   +
2064071   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2064072   +
2064073   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2064074   +
2064075   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2064076   +
2064077   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2064078   +
2064079   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2064080   +
2064081   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2064082   +
2064083   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2064084   +
2064085   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2064086   +
2064087   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
2064088   +
2064089   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2064090   +
2064091   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2064092   +
2064093   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2064094   +
2064095   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2064096   +
2064097   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2064098   +
2064099   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2064100   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2064101   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2064102   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2064103   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2064104   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2064105   +end;
MPRINT(EM_DIAGRAM):   end;
2064106   +else do;
MPRINT(EM_DIAGRAM):   else do;
2064107   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2064108   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2064109   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2064110   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2064111   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2064112   +   end;
MPRINT(EM_DIAGRAM):   end;
2064113   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2064114   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2064115   +   end;
MPRINT(EM_DIAGRAM):   end;
2064116   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2064117   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2064118   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2064119   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2064120   +   end;
MPRINT(EM_DIAGRAM):   end;
2064121   +end;
MPRINT(EM_DIAGRAM):   end;
2064122   +
2064123   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2064124   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2064125   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2064126   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2064127   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2064128   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2064129   +end;
MPRINT(EM_DIAGRAM):   end;
2064130   +else do;
MPRINT(EM_DIAGRAM):   else do;
2064131   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2064132   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2064133   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2064134   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2064135   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2064136   +   end;
MPRINT(EM_DIAGRAM):   end;
2064137   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2064138   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2064139   +   end;
MPRINT(EM_DIAGRAM):   end;
2064140   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2064141   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2064142   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2064143   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2064144   +   end;
MPRINT(EM_DIAGRAM):   end;
2064145   +end;
MPRINT(EM_DIAGRAM):   end;
2064146   +
2064147   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2064148   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2064149   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2064150   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2064151   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2064152   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2064153   +end;
MPRINT(EM_DIAGRAM):   end;
2064154   +else do;
MPRINT(EM_DIAGRAM):   else do;
2064155   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2064156   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2064157   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2064158   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2064159   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2064160   +   end;
MPRINT(EM_DIAGRAM):   end;
2064161   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2064162   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2064163   +   end;
MPRINT(EM_DIAGRAM):   end;
2064164   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2064165   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2064166   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2064167   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2064168   +   end;
MPRINT(EM_DIAGRAM):   end;
2064169   +end;
MPRINT(EM_DIAGRAM):   end;
2064170   +
2064171   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2064172   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2064173   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2064174   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2064175   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2064176   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2064177   +end;
MPRINT(EM_DIAGRAM):   end;
2064178   +else do;
MPRINT(EM_DIAGRAM):   else do;
2064179   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2064180   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2064181   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2064182   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2064183   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2064184   +   end;
MPRINT(EM_DIAGRAM):   end;
2064185   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2064186   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2064187   +   end;
MPRINT(EM_DIAGRAM):   end;
2064188   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2064189   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2064190   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2064191   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2064192   +   end;
MPRINT(EM_DIAGRAM):   end;
2064193   +end;
MPRINT(EM_DIAGRAM):   end;
2064194   +
2064195   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2064196   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2064197   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2064198   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2064199   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2064200   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2064201   +end;
MPRINT(EM_DIAGRAM):   end;
2064202   +else do;
MPRINT(EM_DIAGRAM):   else do;
2064203   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2064204   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2064205   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2064206   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2064207   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2064208   +   end;
MPRINT(EM_DIAGRAM):   end;
2064209   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2064210   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2064211   +   end;
MPRINT(EM_DIAGRAM):   end;
2064212   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2064213   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2064214   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2064215   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2064216   +   end;
MPRINT(EM_DIAGRAM):   end;
2064217   +end;
MPRINT(EM_DIAGRAM):   end;
2064218   +
2064219   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2064220   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2064221   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2064222   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2064223   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2064224   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2064225   +end;
MPRINT(EM_DIAGRAM):   end;
2064226   +else do;
MPRINT(EM_DIAGRAM):   else do;
2064227   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2064228   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2064229   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2064230   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2064231   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2064232   +   end;
MPRINT(EM_DIAGRAM):   end;
2064233   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2064234   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2064235   +   end;
MPRINT(EM_DIAGRAM):   end;
2064236   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2064237   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2064238   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2064239   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2064240   +   end;
MPRINT(EM_DIAGRAM):   end;
2064241   +end;
MPRINT(EM_DIAGRAM):   end;
2064242   +
2064243   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2064244   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2064245   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2064246   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2064247   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2064248   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2064249   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2064250   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2064251   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2064252   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2064253   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2064254   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2064255   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2064256   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2064257   +end;
MPRINT(EM_DIAGRAM):   end;
2064258   +else do;
MPRINT(EM_DIAGRAM):   else do;
2064259   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2064260   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2064261   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2064262   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2064263   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2064264   +   end;
MPRINT(EM_DIAGRAM):   end;
2064265   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2064266   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2064267   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2064268   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2064269   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2064270   +   end;
MPRINT(EM_DIAGRAM):   end;
2064271   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2064272   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2064273   +   end;
MPRINT(EM_DIAGRAM):   end;
2064274   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2064275   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2064276   +   end;
MPRINT(EM_DIAGRAM):   end;
2064277   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2064278   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2064279   +   end;
MPRINT(EM_DIAGRAM):   end;
2064280   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2064281   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2064282   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2064283   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2064284   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2064285   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2064286   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2064287   +   end;
MPRINT(EM_DIAGRAM):   end;
2064288   +end;
MPRINT(EM_DIAGRAM):   end;
2064289   +
2064290   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2064291   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2064292   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2064293   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2064294   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2064295   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2064296   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2064297   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2064298   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2064299   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2064300   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2064301   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2064302   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2064303   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2064304   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2064305   +end;
MPRINT(EM_DIAGRAM):   end;
2064306   +else do;
MPRINT(EM_DIAGRAM):   else do;
2064307   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2064308   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2064309   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2064310   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2064311   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2064312   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2064313   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2064314   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2064315   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2064316   +         end;
MPRINT(EM_DIAGRAM):   end;
2064317   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2064318   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2064319   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2064320   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2064321   +            end;
MPRINT(EM_DIAGRAM):   end;
2064322   +         end;
MPRINT(EM_DIAGRAM):   end;
2064323   +      end;
MPRINT(EM_DIAGRAM):   end;
2064324   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2064325   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2064326   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2064327   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2064328   +         end;
MPRINT(EM_DIAGRAM):   end;
2064329   +      end;
MPRINT(EM_DIAGRAM):   end;
2064330   +   end;
MPRINT(EM_DIAGRAM):   end;
2064331   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2064332   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2064333   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2064334   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2064335   +      end;
MPRINT(EM_DIAGRAM):   end;
2064336   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2064337   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2064338   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2064339   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2064340   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2064341   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2064342   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2064343   +         end;
MPRINT(EM_DIAGRAM):   end;
2064344   +      end;
MPRINT(EM_DIAGRAM):   end;
2064345   +   end;
MPRINT(EM_DIAGRAM):   end;
2064346   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2064347   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2064348   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2064349   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2064350   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2064351   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2064352   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2064353   +   end;
MPRINT(EM_DIAGRAM):   end;
2064354   +end;
MPRINT(EM_DIAGRAM):   end;
2064355   +
2064356   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2064357   +*** Checking missing input Interval
2064358   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2064359   +
2064360   +IF NMISS(
2064361   +   Income ,
2064362   +   Kidhome ,
2064363   +   MntFishProducts ,
2064364   +   MntFruits ,
2064365   +   MntGoldProds ,
2064366   +   MntMeatProducts ,
2064367   +   MntSweetProducts ,
2064368   +   MntWines ,
2064369   +   NumCatalogPurchases ,
2064370   +   NumDealsPurchases ,
2064371   +   NumStorePurchases ,
2064372   +   NumWebPurchases ,
2064373   +   NumWebVisitsMonth ,
2064374   +   Recency ,
2064375   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
2064376   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2064377   +
2064378   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2064379   +END;
MPRINT(EM_DIAGRAM):   END;
2064380   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2064381   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2064382   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2064383   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2064384   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2064385   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2064386   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2064387   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2064388   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2064389   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2064390   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2064391   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2064392   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2064393   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2064394   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2064395   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2064396   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2064397   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2064398   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2064399   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2064400   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2064401   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2064402   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2064403   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2064404   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2064405   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2064406   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2064407   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2064408   +END;
MPRINT(EM_DIAGRAM):   END;
2064409   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2064410   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2064411   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2064412   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2064413   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2064414   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2064415   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2064416   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2064417   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2064418   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2064419   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2064420   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2064421   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2064422   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2064423   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2064424   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2064425   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2064426   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2064427   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2064428   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2064429   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2064430   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2064431   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2064432   +   ELSE S_NumCatalogPurchases
2064433   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2064434   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2064435   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2064436   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2064437   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2064438   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2064439   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2064440   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2064441   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2064442   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2064443   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2064444   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2064445   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2064446   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2064447   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2064448   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2064449   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2064450   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2064451   +END;
MPRINT(EM_DIAGRAM):   END;
2064452   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2064453   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
2064454   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2064455   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2064456   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
2064457   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2064458   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2064459   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2064460   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2064461   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2064462   +   H11  =     1.40261108800308 * S_Income  +     -0.8062097507842 * S_Kidhome
2064463   +          +    -0.12974862644982 * S_MntFishProducts
2064464   +          +     0.08065642800368 * S_MntFruits  +    -0.12102130003972 *
2064465   +        S_MntGoldProds  +     0.19226249622126 * S_MntMeatProducts
2064466   +          +    -0.12290326901613 * S_MntSweetProducts
2064467   +          +     0.07790241176978 * S_MntWines  +     0.36123042724896 *
2064468   +        S_NumCatalogPurchases  +    -0.01034406765754 * S_NumDealsPurchases
2064469   +          +     0.09738032540137 * S_NumStorePurchases
2064470   +          +     0.44459515215205 * S_NumWebPurchases
2064471   +          +      0.8471075994578 * S_NumWebVisitsMonth
2064472   +          +    -1.10667985160899 * S_Recency  +    -0.88509832868515 *
2064473   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 1.40261108800308 * S_Income + -0.8062097507842 * S_Kidhome +
-0.12974862644982 * S_MntFishProducts + 0.08065642800368 * S_MntFruits + -0.12102130003972 *
S_MntGoldProds + 0.19226249622126 * S_MntMeatProducts + -0.12290326901613 * S_MntSweetProducts
+ 0.07790241176978 * S_MntWines + 0.36123042724896 * S_NumCatalogPurchases + -0.01034406765754
* S_NumDealsPurchases + 0.09738032540137 * S_NumStorePurchases + 0.44459515215205 *
S_NumWebPurchases + 0.8471075994578 * S_NumWebVisitsMonth + -1.10667985160899 * S_Recency +
-0.88509832868515 * S_Teenhome ;
2064474   +   H12  =     0.51266936686642 * S_Income  +     0.26909433357851 * S_Kidhome
2064475   +          +     0.02406077596811 * S_MntFishProducts
2064476   +          +    -0.57443793453522 * S_MntFruits  +     0.36824731232149 *
2064477   +        S_MntGoldProds  +     0.40177289143061 * S_MntMeatProducts
2064478   +          +     -0.1147507059349 * S_MntSweetProducts
2064479   +          +    -0.66379351187459 * S_MntWines  +     1.33407347415468 *
2064480   +        S_NumCatalogPurchases  +     1.00633891197299 * S_NumDealsPurchases
2064481   +          +    -0.23920969262322 * S_NumStorePurchases
2064482   +          +     -0.6008837862932 * S_NumWebPurchases
2064483   +          +     0.26759743722885 * S_NumWebVisitsMonth
2064484   +          +    -0.42755419464125 * S_Recency  +    -0.14471776361394 *
2064485   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.51266936686642 * S_Income + 0.26909433357851 * S_Kidhome +
0.02406077596811 * S_MntFishProducts + -0.57443793453522 * S_MntFruits + 0.36824731232149 *
S_MntGoldProds + 0.40177289143061 * S_MntMeatProducts + -0.1147507059349 * S_MntSweetProducts
+ -0.66379351187459 * S_MntWines + 1.33407347415468 * S_NumCatalogPurchases + 1.00633891197299
* S_NumDealsPurchases + -0.23920969262322 * S_NumStorePurchases + -0.6008837862932 *
S_NumWebPurchases + 0.26759743722885 * S_NumWebVisitsMonth + -0.42755419464125 * S_Recency +
-0.14471776361394 * S_Teenhome ;
2064486   +   H13  =    -0.19807308698832 * S_Income  +     0.25934675474849 * S_Kidhome
2064487   +          +     0.04398331533724 * S_MntFishProducts
2064488   +          +    -0.00090357598988 * S_MntFruits  +     0.05139545341773 *
2064489   +        S_MntGoldProds  +    -0.74617114336019 * S_MntMeatProducts
2064490   +          +     0.00552488718744 * S_MntSweetProducts
2064491   +          +     0.47194407197012 * S_MntWines  +    -0.35149551848487 *
2064492   +        S_NumCatalogPurchases  +    -0.30232522133093 * S_NumDealsPurchases
2064493   +          +     0.60058189155105 * S_NumStorePurchases
2064494   +          +     0.51423374855856 * S_NumWebPurchases
2064495   +          +     -0.9075304423321 * S_NumWebVisitsMonth
2064496   +          +     0.83597739226791 * S_Recency  +     0.15783202762709 *
2064497   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.19807308698832 * S_Income + 0.25934675474849 * S_Kidhome +
0.04398331533724 * S_MntFishProducts + -0.00090357598988 * S_MntFruits + 0.05139545341773 *
S_MntGoldProds + -0.74617114336019 * S_MntMeatProducts + 0.00552488718744 * S_MntSweetProducts
+ 0.47194407197012 * S_MntWines + -0.35149551848487 * S_NumCatalogPurchases +
-0.30232522133093 * S_NumDealsPurchases + 0.60058189155105 * S_NumStorePurchases +
0.51423374855856 * S_NumWebPurchases + -0.9075304423321 * S_NumWebVisitsMonth +
0.83597739226791 * S_Recency + 0.15783202762709 * S_Teenhome ;
2064498   +   H11  = H11  +    -0.26274045665457 * AcceptedCmp10
2064499   +          +    -0.86105702939371 * AcceptedCmp20  +    -0.50476270558977 *
2064500   +        AcceptedCmp30  +    -0.84284126473343 * AcceptedCmp40
2064501   +          +     0.19764907691314 * AcceptedCmp50  +    -0.29305577412263 *
2064502   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.26274045665457 * AcceptedCmp10 + -0.86105702939371 *
AcceptedCmp20 + -0.50476270558977 * AcceptedCmp30 + -0.84284126473343 * AcceptedCmp40 +
0.19764907691314 * AcceptedCmp50 + -0.29305577412263 * Complain0 ;
2064503   +   H12  = H12  +    -0.27394139847883 * AcceptedCmp10
2064504   +          +    -0.14688750266104 * AcceptedCmp20  +    -0.27982299242327 *
2064505   +        AcceptedCmp30  +    -0.10465140408787 * AcceptedCmp40
2064506   +          +    -0.81681330244218 * AcceptedCmp50  +    -0.28152730217644 *
2064507   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.27394139847883 * AcceptedCmp10 + -0.14688750266104 *
AcceptedCmp20 + -0.27982299242327 * AcceptedCmp30 + -0.10465140408787 * AcceptedCmp40 +
-0.81681330244218 * AcceptedCmp50 + -0.28152730217644 * Complain0 ;
2064508   +   H13  = H13  +     0.42310780831005 * AcceptedCmp10
2064509   +          +     0.41337614261155 * AcceptedCmp20  +     0.41436520641821 *
2064510   +        AcceptedCmp30  +     0.08914989208239 * AcceptedCmp40
2064511   +          +     0.54013759697695 * AcceptedCmp50  +    -0.19478210268955 *
2064512   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.42310780831005 * AcceptedCmp10 + 0.41337614261155 *
AcceptedCmp20 + 0.41436520641821 * AcceptedCmp30 + 0.08914989208239 * AcceptedCmp40 +
0.54013759697695 * AcceptedCmp50 + -0.19478210268955 * Complain0 ;
2064513   +   H11  = H11  +     0.40331200702699 * Education2n_Cycle
2064514   +          +     0.17202421641945 * EducationBasic  +    -0.29654161092174 *
2064515   +        EducationGraduation  +     -0.4835104183635 * EducationMaster
2064516   +          +     0.52129580188513 * Marital_StatusDivorced
2064517   +          +     -1.5224490339553 * Marital_StatusMarried
2064518   +          +     1.05062906057771 * Marital_StatusSingle
2064519   +          +    -1.16420887937635 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.40331200702699 * Education2n_Cycle + 0.17202421641945 *
EducationBasic + -0.29654161092174 * EducationGraduation + -0.4835104183635 * EducationMaster
+ 0.52129580188513 * Marital_StatusDivorced + -1.5224490339553 * Marital_StatusMarried +
1.05062906057771 * Marital_StatusSingle + -1.16420887937635 * Marital_StatusTogether ;
2064520   +   H12  = H12  +     -0.3488928858263 * Education2n_Cycle
2064521   +          +     0.38279680594423 * EducationBasic  +     0.20376044836519 *
2064522   +        EducationGraduation  +     0.20697694670185 * EducationMaster
2064523   +          +    -0.14428158063317 * Marital_StatusDivorced
2064524   +          +     0.22396926143356 * Marital_StatusMarried
2064525   +          +    -0.12980854818876 * Marital_StatusSingle
2064526   +          +     0.32607015627906 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.3488928858263 * Education2n_Cycle + 0.38279680594423 *
EducationBasic + 0.20376044836519 * EducationGraduation + 0.20697694670185 * EducationMaster +
-0.14428158063317 * Marital_StatusDivorced + 0.22396926143356 * Marital_StatusMarried +
-0.12980854818876 * Marital_StatusSingle + 0.32607015627906 * Marital_StatusTogether ;
2064527   +   H13  = H13  +    -0.18351418824199 * Education2n_Cycle
2064528   +          +     0.53417952447263 * EducationBasic  +    -0.14333929289628 *
2064529   +        EducationGraduation  +     0.04513004774082 * EducationMaster
2064530   +          +    -0.25615797303064 * Marital_StatusDivorced
2064531   +          +     0.18825506199046 * Marital_StatusMarried
2064532   +          +    -0.24607556819871 * Marital_StatusSingle
2064533   +          +     0.29531673844201 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.18351418824199 * Education2n_Cycle + 0.53417952447263 *
EducationBasic + -0.14333929289628 * EducationGraduation + 0.04513004774082 * EducationMaster
+ -0.25615797303064 * Marital_StatusDivorced + 0.18825506199046 * Marital_StatusMarried +
-0.24607556819871 * Marital_StatusSingle + 0.29531673844201 * Marital_StatusTogether ;
2064534   +   H11  =    -1.29289362679377 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.29289362679377 + H11 ;
2064535   +   H12  =     0.88724419151235 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.88724419151235 + H12 ;
2064536   +   H13  =    -0.51194544699467 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.51194544699467 + H13 ;
2064537   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2064538   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2064539   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
2064540   +END;
MPRINT(EM_DIAGRAM):   END;
2064541   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2064542   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2064543   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2064544   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
2064545   +END;
MPRINT(EM_DIAGRAM):   END;
2064546   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2064547   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2064548   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2064549   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2064550   +   P_DepVar1  =     4.44251020865882 * H11  +     2.67139161773156 * H12
2064551   +          +    -4.73549395111184 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.44251020865882 * H11 + 2.67139161773156 * H12 +
-4.73549395111184 * H13 ;
2064552   +   P_DepVar1  =     0.45492690116644 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.45492690116644 + P_DepVar1 ;
2064553   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2064554   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2064555   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2064556   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2064557   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2064558   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2064559   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2064560   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2064561   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2064562   +END;
MPRINT(EM_DIAGRAM):   END;
2064563   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2064564   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2064565   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2064566   +END;
MPRINT(EM_DIAGRAM):   END;
2064567   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2064568   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2064569   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2064570   +END;
MPRINT(EM_DIAGRAM):   END;
2064571   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2064572   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2064573   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2064574   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2064575   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2064576   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2064577   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2064578   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2064579   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2064580   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2064581   +END;
MPRINT(EM_DIAGRAM):   END;
2064582   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2064583   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2064584   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2064585   +drop
2064586   +H11
2064587   +H12
2064588   +H13
2064589   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
2064590   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2064591    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2064592    quit;
2064593    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2064594    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2064595    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2064596    retain ID 2 Node "Neural32";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural32";
2064597    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2064598    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1602 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1602 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2064599    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2064600    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2064601    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1602 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1602 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2064602    proc sort data=EMWS8.Neural32_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural32_variableset out=_temp2(keep=NAME CREATOR);
2064603    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2064604    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.NEURAL32_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2064605    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2064606    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2064607    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2064608    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2064609    proc contents data=EMWS8.Neural32_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural32_train out=_meta(keep=NAME) noprint;
2064610    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2064611    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2064612    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2064613    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2064614    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2064615    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2064616    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2064617    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2064618    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2064619    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2064619  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 832 rows and 5 columns.
 
2064620    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2064621    proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
2064622    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 832 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 832 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2064623    filename _pref
2064623  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2064624    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2064625    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2064626   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2064627   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2064628   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2064629   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2064630   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2064631   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2064632    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2064633    quit;
2064634    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2064635    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2064636    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2064637    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2064638    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2064639    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2064640    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2064641    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2064642    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2064643    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2064644    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2064645    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2064646    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2064647    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2064648    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2064649    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2064650    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2064651    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2064652    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2064653    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2064654    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2064655    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2064656    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2064657    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2064658    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2064659    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2064660    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2064660  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
2064661    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2064662    proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
2064663    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 836 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2064664    filename _pref
2064664  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2064665    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2064666    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2064667   +
2064668   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2064669   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2064669  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2064670   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2064671   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2064672   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2064673   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2064674   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2064675    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2064676    quit;
2064677    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2064678    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2064679    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2064680    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2064681    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2064682    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2064683    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2064684    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2064685    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2064686    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2064687    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2064688    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2064689    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2064690    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2064691    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2064692    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2064693    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2064694    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2064695    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2064696    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2064697    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2064698    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2064699    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2064700    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2064701    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2064702    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2064703    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2064703  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
2064704    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2064705    proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
2064706    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 875 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2064707    filename _pref
2064707  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2064708    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2064709    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2064710   +
2064711   +
2064712   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2064713   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2064714   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2064715   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2064716   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2064717   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2064718   +
2064719   +
2064720   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2064721   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2064722   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2064723   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2064724   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2064725   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2064726   +
2064727   +
2064728   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2064729   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2064730   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2064731   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2064732   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2064733   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2064734   +
2064735   +
2064736   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2064737   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2064738   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2064739   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2064740   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2064741   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2064742   +
2064743   +
2064744   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2064745   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2064746   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2064747   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2064748   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2064749   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2064750   +
2064751   +
2064752   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2064753   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2064754   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2064755   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2064756   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2064757   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2064758   +
2064759   +
2064760   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2064761   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2064762   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2064763   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2064764   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2064765   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2064766   +
2064767   +
2064768   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2064769   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2064770   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2064771   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2064772   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2064773   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2064774   +if
2064775   +_FILTERNORM1 not in ( '.')
2064776   + and
2064777   +_FILTERNORM2 not in ( '.')
2064778   + and
2064779   +_FILTERNORM3 not in ( '.')
2064780   + and
2064781   +_FILTERNORM4 not in ( '.')
2064782   + and
2064783   +_FILTERNORM5 not in ( '.')
2064784   + and
2064785   +_FILTERNORM6 not in ( '.')
2064786   + and
2064787   +_FILTERNORM7 not in ( ' ')
2064788   + and
2064789   +_FILTERNORM8 not in ( ' ')
2064790   +and
2064791   +( Dt_Customer ne .)
2064792   +and ( Income ne . and (Income<=107000))
2064793   +and ( Kidhome ne .)
2064794   +and ( MntFishProducts ne .)
2064795   +and ( MntFruits ne .)
2064796   +and ( MntGoldProds ne .)
2064797   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2064798   +and ( MntSweetProducts ne .)
2064799   +and ( MntWines ne .)
2064800   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2064801   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2064802   +and ( NumStorePurchases ne .)
2064803   +and ( NumWebPurchases ne .)
2064804   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2064805   +and ( Recency ne .)
2064806   +and ( Teenhome ne .)
2064807   +and ( Year_Birth ne .)
2064808   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
2064809   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2064810   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2064811   +end;
MPRINT(EM_DIAGRAM):   end;
2064812   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2064813   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2064814    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2064815    quit;
2064816    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2064817    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2064818    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2064819    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2064820    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2064821    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2064822    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2064823    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2064824    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2064825    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2064826    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2064827    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2064828    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2064829    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2064830    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2064831    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2064832    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2064833    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2064834    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2064835    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2064836    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2064837    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2064838    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2064839    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2064840    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2064841    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2064842    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2064842  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
2064843    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2064844    proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
2064845    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 941 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2064846    %macro varDept(fcmpdata=,id=);
2064847    %global nobs&id scoreFlag&id;
2064848    %let scoreFlag&id = 0;
2064849    %if &id=1 or ^&fcmpStart %then %do;
2064850    proc sort data=&fcmpdata out=_temp&id nodupkey;
2064851    by NAME;
2064852    where id=&id and LHS in( %let j=1;
2064853    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2064854    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2064855    "&var" %let j = %eval(&j+1);
2064856    %end;
2064857    );
2064858    run;
2064859    %let dsid = %sysfunc(open(_temp&id));
2064860    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2064861    %let dsid = %sysfunc(close(&dsid));
2064862    %if &&nobs&id %then %do;
2064863    %let scoreFlag&id = 1;
2064864    %let fcmpStart = 1;
2064865    %end;
2064866    %else %let fcmpStart = 0;
2064867    %end;
2064868    %else %do;
2064869    proc sort data=&fcmpdata out=_tempid;
2064870    where id=&id;
2064871    by LHS;
2064872    run;
2064873    %let dsid = %sysfunc(open(_tempid));
2064874    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2064875    %let dsid = %sysfunc(close(&dsid));
2064876    %if ^&&nobs&id %then %do;
2064877    proc datasets lib=work nolist;
2064878    delete _tempid;
2064879    run;
2064880    quit;
2064881    %end;
2064882    %else %do;
2064883    data _tempAll;
2064884    set %let j=%eval(&id-1);
2064885    %do x=1 %to &j;
2064886    %if &&nobs&x %then %do;
2064887    _temp&x %end;
2064888    %end;
2064889    ;
2064890    run;
2064891    proc sql;
2064892    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2064892  ! work._tempid p2 where p.name=p2.lhs;
2064893    quit;
2064894    data _temp&id;
2064895    set _temp&id;
2064896    where LHS ne '' and NAME ne '' and Node ne '';
2064897    run;
2064898    proc datasets lib=work nolist;
2064899    delete _tempAll;
2064900    run;
2064901    %let dsid = %sysfunc(open(_temp&id));
2064902    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2064903    %let dsid = %sysfunc(close(&dsid));
2064904    %if ^&&nobs&id %then %do;
2064905    proc datasets lib=work nolist;
2064906    delete _temp&id;
2064907    run;
2064908    quit;
2064909    %end;
2064910    %else %do;
2064911    %let scoreFlag&id = 1;
2064912    data _temp&id;
2064913    set _temp&id;
2064914    where LHS ne NAME and node ne '';
2064915    run;
2064916    %let dsid = %sysfunc(open(_temp&id));
2064917    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2064918    %let dsid = %sysfunc(close(&dsid));
2064919    %if ^&&nobs&id %then %do;
2064920    proc datasets lib=work nolist;
2064921    delete _temp&id;
2064922    run;
2064923    quit;
2064924    %end;
2064925    %else %do;
2064926    proc sort data=_temp&id nodupkey;
2064927    by LHS NAME;
2064928    run;
2064929    %end;
2064930    %end;
2064931    %end;
2064932    %end;
2064933    %mend varDept;
2064934    %macro optCode(outdata=fcmpdata);
2064935    %global fcmpStart;
2064936    %let fcmpStart = 0;
2064937    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2064938    %let NumNodes=9;
2064939    %do k=1 %to &NumNodes;
2064940    %vardept(fcmpdata=&outdata, id=&k);
2064941    %end;
2064942    %mend optCode;
2064943    %optcode(outData=EMWS8.Ensmbl22_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 98 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 73 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 25 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp6;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP6 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.11 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
2064944    filename _pref
2064944  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural31\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural31\EMPUBLISHSCORE.sas";
2064945    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2064946    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural31\EMPUBLISHSCORE.sas.
2064947   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2064948   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2064949   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2064950   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2064951   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2064952   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2064953   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2064954   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2064955   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2064956   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2064957   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2064958   +LENGTH _WARN_ $4
2064959   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2064960   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2064961   +
2064962   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2064963   +
2064964   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2064965   +
2064966   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2064967   +
2064968   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2064969   +
2064970   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2064971   +
2064972   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2064973   +
2064974   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2064975   +
2064976   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2064977   +
2064978   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2064979   +
2064980   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2064981   +
2064982   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2064983   +
2064984   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2064985   +
2064986   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2064987   +
2064988   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2064989   +
2064990   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2064991   +
2064992   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2064993   +
2064994   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2064995   +
2064996   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2064997   +
2064998   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2064999   +
2065000   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2065001   +
2065002   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2065003   +
2065004   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2065005   +
2065006   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2065007   +
2065008   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2065009   +
2065010   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2065011   +
2065012   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2065013   +
2065014   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2065015   +
2065016   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2065017   +
2065018   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2065019   +
2065020   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2065021   +
2065022   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2065023   +
2065024   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2065025   +
2065026   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2065027   +
2065028   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2065029   +
2065030   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2065031   +
2065032   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2065033   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2065034   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2065035   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2065036   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2065037   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2065038   +end;
MPRINT(EM_DIAGRAM):   end;
2065039   +else do;
MPRINT(EM_DIAGRAM):   else do;
2065040   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2065041   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2065042   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2065043   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2065044   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2065045   +   end;
MPRINT(EM_DIAGRAM):   end;
2065046   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2065047   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2065048   +   end;
MPRINT(EM_DIAGRAM):   end;
2065049   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2065050   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2065051   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2065052   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2065053   +   end;
MPRINT(EM_DIAGRAM):   end;
2065054   +end;
MPRINT(EM_DIAGRAM):   end;
2065055   +
2065056   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2065057   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2065058   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2065059   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2065060   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2065061   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2065062   +end;
MPRINT(EM_DIAGRAM):   end;
2065063   +else do;
MPRINT(EM_DIAGRAM):   else do;
2065064   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2065065   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2065066   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2065067   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2065068   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2065069   +   end;
MPRINT(EM_DIAGRAM):   end;
2065070   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2065071   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2065072   +   end;
MPRINT(EM_DIAGRAM):   end;
2065073   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2065074   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2065075   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2065076   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2065077   +   end;
MPRINT(EM_DIAGRAM):   end;
2065078   +end;
MPRINT(EM_DIAGRAM):   end;
2065079   +
2065080   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2065081   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2065082   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2065083   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2065084   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2065085   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2065086   +end;
MPRINT(EM_DIAGRAM):   end;
2065087   +else do;
MPRINT(EM_DIAGRAM):   else do;
2065088   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2065089   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2065090   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2065091   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2065092   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2065093   +   end;
MPRINT(EM_DIAGRAM):   end;
2065094   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2065095   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2065096   +   end;
MPRINT(EM_DIAGRAM):   end;
2065097   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2065098   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2065099   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2065100   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2065101   +   end;
MPRINT(EM_DIAGRAM):   end;
2065102   +end;
MPRINT(EM_DIAGRAM):   end;
2065103   +
2065104   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2065105   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2065106   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2065107   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2065108   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2065109   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2065110   +end;
MPRINT(EM_DIAGRAM):   end;
2065111   +else do;
MPRINT(EM_DIAGRAM):   else do;
2065112   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2065113   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2065114   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2065115   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2065116   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2065117   +   end;
MPRINT(EM_DIAGRAM):   end;
2065118   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2065119   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2065120   +   end;
MPRINT(EM_DIAGRAM):   end;
2065121   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2065122   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2065123   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2065124   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2065125   +   end;
MPRINT(EM_DIAGRAM):   end;
2065126   +end;
MPRINT(EM_DIAGRAM):   end;
2065127   +
2065128   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2065129   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2065130   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2065131   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2065132   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2065133   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2065134   +end;
MPRINT(EM_DIAGRAM):   end;
2065135   +else do;
MPRINT(EM_DIAGRAM):   else do;
2065136   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2065137   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2065138   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2065139   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2065140   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2065141   +   end;
MPRINT(EM_DIAGRAM):   end;
2065142   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2065143   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2065144   +   end;
MPRINT(EM_DIAGRAM):   end;
2065145   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2065146   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2065147   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2065148   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2065149   +   end;
MPRINT(EM_DIAGRAM):   end;
2065150   +end;
MPRINT(EM_DIAGRAM):   end;
2065151   +
2065152   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2065153   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2065154   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2065155   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2065156   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2065157   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2065158   +end;
MPRINT(EM_DIAGRAM):   end;
2065159   +else do;
MPRINT(EM_DIAGRAM):   else do;
2065160   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2065161   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2065162   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2065163   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2065164   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2065165   +   end;
MPRINT(EM_DIAGRAM):   end;
2065166   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2065167   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2065168   +   end;
MPRINT(EM_DIAGRAM):   end;
2065169   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2065170   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2065171   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2065172   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2065173   +   end;
MPRINT(EM_DIAGRAM):   end;
2065174   +end;
MPRINT(EM_DIAGRAM):   end;
2065175   +
2065176   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2065177   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2065178   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2065179   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2065180   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2065181   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2065182   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2065183   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2065184   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2065185   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2065186   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2065187   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2065188   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2065189   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2065190   +end;
MPRINT(EM_DIAGRAM):   end;
2065191   +else do;
MPRINT(EM_DIAGRAM):   else do;
2065192   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2065193   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2065194   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2065195   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2065196   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2065197   +   end;
MPRINT(EM_DIAGRAM):   end;
2065198   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2065199   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2065200   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2065201   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2065202   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2065203   +   end;
MPRINT(EM_DIAGRAM):   end;
2065204   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2065205   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2065206   +   end;
MPRINT(EM_DIAGRAM):   end;
2065207   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2065208   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2065209   +   end;
MPRINT(EM_DIAGRAM):   end;
2065210   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2065211   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2065212   +   end;
MPRINT(EM_DIAGRAM):   end;
2065213   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2065214   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2065215   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2065216   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2065217   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2065218   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2065219   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2065220   +   end;
MPRINT(EM_DIAGRAM):   end;
2065221   +end;
MPRINT(EM_DIAGRAM):   end;
2065222   +
2065223   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2065224   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2065225   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2065226   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2065227   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2065228   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2065229   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2065230   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2065231   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2065232   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2065233   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2065234   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2065235   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2065236   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2065237   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2065238   +end;
MPRINT(EM_DIAGRAM):   end;
2065239   +else do;
MPRINT(EM_DIAGRAM):   else do;
2065240   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2065241   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2065242   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2065243   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2065244   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2065245   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2065246   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2065247   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2065248   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2065249   +         end;
MPRINT(EM_DIAGRAM):   end;
2065250   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2065251   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2065252   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2065253   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2065254   +            end;
MPRINT(EM_DIAGRAM):   end;
2065255   +         end;
MPRINT(EM_DIAGRAM):   end;
2065256   +      end;
MPRINT(EM_DIAGRAM):   end;
2065257   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2065258   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2065259   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2065260   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2065261   +         end;
MPRINT(EM_DIAGRAM):   end;
2065262   +      end;
MPRINT(EM_DIAGRAM):   end;
2065263   +   end;
MPRINT(EM_DIAGRAM):   end;
2065264   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2065265   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2065266   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2065267   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2065268   +      end;
MPRINT(EM_DIAGRAM):   end;
2065269   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2065270   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2065271   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2065272   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2065273   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2065274   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2065275   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2065276   +         end;
MPRINT(EM_DIAGRAM):   end;
2065277   +      end;
MPRINT(EM_DIAGRAM):   end;
2065278   +   end;
MPRINT(EM_DIAGRAM):   end;
2065279   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2065280   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2065281   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2065282   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2065283   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2065284   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2065285   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2065286   +   end;
MPRINT(EM_DIAGRAM):   end;
2065287   +end;
MPRINT(EM_DIAGRAM):   end;
2065288   +
2065289   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2065290   +*** Checking missing input Interval
2065291   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2065292   +
2065293   +IF NMISS(
2065294   +   Income ,
2065295   +   Kidhome ,
2065296   +   MntFishProducts ,
2065297   +   MntFruits ,
2065298   +   MntGoldProds ,
2065299   +   MntMeatProducts ,
2065300   +   MntSweetProducts ,
2065301   +   MntWines ,
2065302   +   NumCatalogPurchases ,
2065303   +   NumDealsPurchases ,
2065304   +   NumStorePurchases ,
2065305   +   NumWebPurchases ,
2065306   +   NumWebVisitsMonth ,
2065307   +   Recency ,
2065308   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
2065309   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2065310   +
2065311   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2065312   +END;
MPRINT(EM_DIAGRAM):   END;
2065313   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2065314   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2065315   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2065316   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2065317   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2065318   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2065319   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2065320   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2065321   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2065322   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2065323   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2065324   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2065325   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2065326   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2065327   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2065328   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2065329   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2065330   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2065331   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2065332   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2065333   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2065334   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2065335   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2065336   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2065337   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2065338   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2065339   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2065340   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2065341   +END;
MPRINT(EM_DIAGRAM):   END;
2065342   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2065343   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2065344   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2065345   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2065346   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2065347   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2065348   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2065349   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2065350   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2065351   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2065352   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2065353   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2065354   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2065355   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2065356   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2065357   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2065358   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2065359   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2065360   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2065361   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2065362   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2065363   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2065364   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2065365   +   ELSE S_NumCatalogPurchases
2065366   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2065367   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2065368   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2065369   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2065370   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2065371   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2065372   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2065373   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2065374   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2065375   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2065376   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2065377   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2065378   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2065379   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2065380   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2065381   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2065382   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2065383   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2065384   +END;
MPRINT(EM_DIAGRAM):   END;
2065385   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2065386   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
2065387   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2065388   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2065389   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
2065390   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2065391   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2065392   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2065393   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2065394   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2065395   +   H11  =    -1.33502235588914 * S_Income  +     0.86914778071024 * S_Kidhome
2065396   +          +     0.06177226616611 * S_MntFishProducts
2065397   +          +     0.22465531888584 * S_MntFruits  +    -0.01216018017424 *
2065398   +        S_MntGoldProds  +    -0.10435601171346 * S_MntMeatProducts
2065399   +          +     0.19245635559754 * S_MntSweetProducts
2065400   +          +    -0.06473329764962 * S_MntWines  +    -0.40260570275107 *
2065401   +        S_NumCatalogPurchases  +    -0.01043435397255 * S_NumDealsPurchases
2065402   +          +    -0.35392759932805 * S_NumStorePurchases
2065403   +          +     -0.2443007642616 * S_NumWebPurchases
2065404   +          +    -0.72667572173837 * S_NumWebVisitsMonth
2065405   +          +     0.97336679863544 * S_Recency  +     0.72544205905496 *
2065406   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -1.33502235588914 * S_Income + 0.86914778071024 * S_Kidhome +
0.06177226616611 * S_MntFishProducts + 0.22465531888584 * S_MntFruits + -0.01216018017424 *
S_MntGoldProds + -0.10435601171346 * S_MntMeatProducts + 0.19245635559754 * S_MntSweetProducts
+ -0.06473329764962 * S_MntWines + -0.40260570275107 * S_NumCatalogPurchases +
-0.01043435397255 * S_NumDealsPurchases + -0.35392759932805 * S_NumStorePurchases +
-0.2443007642616 * S_NumWebPurchases + -0.72667572173837 * S_NumWebVisitsMonth +
0.97336679863544 * S_Recency + 0.72544205905496 * S_Teenhome ;
2065407   +   H12  =    -0.09105644521483 * S_Income  +     0.01920168996111 * S_Kidhome
2065408   +          +     0.00012212205827 * S_MntFishProducts
2065409   +          +     0.00032664246198 * S_MntFruits  +    -0.02161363659377 *
2065410   +        S_MntGoldProds  +    -0.40917729724893 * S_MntMeatProducts
2065411   +          +     0.01459978689352 * S_MntSweetProducts
2065412   +          +     0.28732983017398 * S_MntWines  +    -0.26033282919423 *
2065413   +        S_NumCatalogPurchases  +      -0.306688498482 * S_NumDealsPurchases
2065414   +          +      0.4054643699817 * S_NumStorePurchases
2065415   +          +     0.27747327375374 * S_NumWebPurchases
2065416   +          +    -0.31325270852641 * S_NumWebVisitsMonth
2065417   +          +      0.3707065492652 * S_Recency  +     0.05681262835219 *
2065418   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.09105644521483 * S_Income + 0.01920168996111 * S_Kidhome +
0.00012212205827 * S_MntFishProducts + 0.00032664246198 * S_MntFruits + -0.02161363659377 *
S_MntGoldProds + -0.40917729724893 * S_MntMeatProducts + 0.01459978689352 * S_MntSweetProducts
+ 0.28732983017398 * S_MntWines + -0.26033282919423 * S_NumCatalogPurchases + -0.306688498482
* S_NumDealsPurchases + 0.4054643699817 * S_NumStorePurchases + 0.27747327375374 *
S_NumWebPurchases + -0.31325270852641 * S_NumWebVisitsMonth + 0.3707065492652 * S_Recency +
0.05681262835219 * S_Teenhome ;
2065419   +   H11  = H11  +     0.23904403737743 * AcceptedCmp10
2065420   +          +     0.12365860406863 * AcceptedCmp20  +     0.28547657706908 *
2065421   +        AcceptedCmp30  +     0.37587337003909 * AcceptedCmp40
2065422   +          +    -0.04113029526683 * AcceptedCmp50  +      0.2596440604013 *
2065423   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.23904403737743 * AcceptedCmp10 + 0.12365860406863 *
AcceptedCmp20 + 0.28547657706908 * AcceptedCmp30 + 0.37587337003909 * AcceptedCmp40 +
-0.04113029526683 * AcceptedCmp50 + 0.2596440604013 * Complain0 ;
2065424   +   H12  = H12  +     0.25336773034662 * AcceptedCmp10
2065425   +          +     0.39499004620022 * AcceptedCmp20  +     0.19852127214148 *
2065426   +        AcceptedCmp30  +     0.19215250383325 * AcceptedCmp40
2065427   +          +     0.27213364707939 * AcceptedCmp50  +    -0.00774901485124 *
2065428   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.25336773034662 * AcceptedCmp10 + 0.39499004620022 *
AcceptedCmp20 + 0.19852127214148 * AcceptedCmp30 + 0.19215250383325 * AcceptedCmp40 +
0.27213364707939 * AcceptedCmp50 + -0.00774901485124 * Complain0 ;
2065429   +   H11  = H11  +    -0.05263155952227 * Education2n_Cycle
2065430   +          +    -1.40124591386453 * EducationBasic  +     0.43501491332678 *
2065431   +        EducationGraduation  +     0.77305262508081 * EducationMaster
2065432   +          +    -0.43667846017683 * Marital_StatusDivorced
2065433   +          +     1.33507828005472 * Marital_StatusMarried
2065434   +          +    -0.75026283842664 * Marital_StatusSingle
2065435   +          +     0.84436594207558 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.05263155952227 * Education2n_Cycle + -1.40124591386453 *
EducationBasic + 0.43501491332678 * EducationGraduation + 0.77305262508081 * EducationMaster +
-0.43667846017683 * Marital_StatusDivorced + 1.33507828005472 * Marital_StatusMarried +
-0.75026283842664 * Marital_StatusSingle + 0.84436594207558 * Marital_StatusTogether ;
2065436   +   H12  = H12  +     0.08398432584098 * Education2n_Cycle
2065437   +          +     0.12375156883157 * EducationBasic  +     -0.0901891766073 *
2065438   +        EducationGraduation  +    -0.07691770257441 * EducationMaster
2065439   +          +    -0.03531690128173 * Marital_StatusDivorced
2065440   +          +    -0.04344171367809 * Marital_StatusMarried
2065441   +          +    -0.05137362653166 * Marital_StatusSingle
2065442   +          +    -0.01265518570667 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.08398432584098 * Education2n_Cycle + 0.12375156883157 *
EducationBasic + -0.0901891766073 * EducationGraduation + -0.07691770257441 * EducationMaster
+ -0.03531690128173 * Marital_StatusDivorced + -0.04344171367809 * Marital_StatusMarried +
-0.05137362653166 * Marital_StatusSingle + -0.01265518570667 * Marital_StatusTogether ;
2065443   +   H11  =     1.86846527977677 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.86846527977677 + H11 ;
2065444   +   H12  =    -0.42494263287735 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.42494263287735 + H12 ;
2065445   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2065446   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2065447   +END;
MPRINT(EM_DIAGRAM):   END;
2065448   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2065449   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2065450   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2065451   +END;
MPRINT(EM_DIAGRAM):   END;
2065452   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2065453   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2065454   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2065455   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2065456   +   P_DepVar1  =    -5.43090515434696 * H11  +    -9.08673127131886 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.43090515434696 * H11 + -9.08673127131886 * H12 ;
2065457   +   P_DepVar1  =      2.7752946076831 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.7752946076831 + P_DepVar1 ;
2065458   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2065459   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2065460   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2065461   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2065462   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2065463   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2065464   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2065465   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2065466   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2065467   +END;
MPRINT(EM_DIAGRAM):   END;
2065468   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2065469   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2065470   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2065471   +END;
MPRINT(EM_DIAGRAM):   END;
2065472   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2065473   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2065474   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2065475   +END;
MPRINT(EM_DIAGRAM):   END;
2065476   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2065477   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2065478   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2065479   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2065480   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2065481   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2065482   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2065483   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2065484   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2065485   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2065486   +END;
MPRINT(EM_DIAGRAM):   END;
2065487   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2065488   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2065489   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2065490   +drop
2065491   +H11
2065492   +H12
2065493   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
2065494   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2065495    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2065496    quit;
2065497    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2065498    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2065499    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2065500    retain ID 2 Node "Neural31";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural31";
2065501    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2065502    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1464 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1464 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2065503    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2065504    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2065505    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1464 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1464 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.03 seconds
 
 
2065506    proc sort data=EMWS8.Neural31_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural31_variableset out=_temp2(keep=NAME CREATOR);
2065507    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2065508    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.NEURAL31_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2065509    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2065510    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2065511    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2065512    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2065513    proc contents data=EMWS8.Neural31_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural31_train out=_meta(keep=NAME) noprint;
2065514    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2065515    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2065516    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2065517    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2065518    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2065519    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2065520    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2065521    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2065522    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2065523    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2065523  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 786 rows and 5 columns.
 
2065524    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2065525    proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
2065526    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 786 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 786 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2065527    filename _pref
2065527  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2065528    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2065529    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2065530   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2065531   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2065532   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2065533   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2065534   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2065535   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2065536    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2065537    quit;
2065538    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2065539    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2065540    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2065541    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2065542    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2065543    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2065544    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2065545    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2065546    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2065547    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2065548    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2065549    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2065550    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2065551    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2065552    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2065553    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2065554    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2065555    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2065556    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2065557    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2065558    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2065559    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2065560    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2065561    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2065562    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2065563    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2065564    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2065564  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
2065565    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2065566    proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
2065567    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 790 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2065568    filename _pref
2065568  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2065569    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2065570    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2065571   +
2065572   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2065573   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2065573  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2065574   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2065575   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2065576   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2065577   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2065578   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2065579    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2065580    quit;
2065581    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2065582    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2065583    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2065584    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2065585    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2065586    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2065587    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2065588    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2065589    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2065590    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2065591    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2065592    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2065593    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2065594    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2065595    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2065596    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2065597    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2065598    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2065599    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2065600    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2065601    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2065602    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2065603    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2065604    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2065605    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2065606    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2065607    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2065607  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
2065608    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2065609    proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
2065610    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 829 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2065611    filename _pref
2065611  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2065612    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2065613    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2065614   +
2065615   +
2065616   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2065617   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2065618   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2065619   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2065620   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2065621   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2065622   +
2065623   +
2065624   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2065625   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2065626   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2065627   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2065628   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2065629   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2065630   +
2065631   +
2065632   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2065633   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2065634   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2065635   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2065636   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2065637   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2065638   +
2065639   +
2065640   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2065641   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2065642   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2065643   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2065644   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2065645   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2065646   +
2065647   +
2065648   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2065649   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2065650   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2065651   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2065652   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2065653   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2065654   +
2065655   +
2065656   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2065657   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2065658   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2065659   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2065660   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2065661   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2065662   +
2065663   +
2065664   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2065665   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2065666   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2065667   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2065668   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2065669   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2065670   +
2065671   +
2065672   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2065673   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2065674   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2065675   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2065676   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2065677   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2065678   +if
2065679   +_FILTERNORM1 not in ( '.')
2065680   + and
2065681   +_FILTERNORM2 not in ( '.')
2065682   + and
2065683   +_FILTERNORM3 not in ( '.')
2065684   + and
2065685   +_FILTERNORM4 not in ( '.')
2065686   + and
2065687   +_FILTERNORM5 not in ( '.')
2065688   + and
2065689   +_FILTERNORM6 not in ( '.')
2065690   + and
2065691   +_FILTERNORM7 not in ( ' ')
2065692   + and
2065693   +_FILTERNORM8 not in ( ' ')
2065694   +and
2065695   +( Dt_Customer ne .)
2065696   +and ( Income ne . and (Income<=107000))
2065697   +and ( Kidhome ne .)
2065698   +and ( MntFishProducts ne .)
2065699   +and ( MntFruits ne .)
2065700   +and ( MntGoldProds ne .)
2065701   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2065702   +and ( MntSweetProducts ne .)
2065703   +and ( MntWines ne .)
2065704   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2065705   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2065706   +and ( NumStorePurchases ne .)
2065707   +and ( NumWebPurchases ne .)
2065708   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2065709   +and ( Recency ne .)
2065710   +and ( Teenhome ne .)
2065711   +and ( Year_Birth ne .)
2065712   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
2065713   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2065714   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2065715   +end;
MPRINT(EM_DIAGRAM):   end;
2065716   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2065717   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2065718    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2065719    quit;
2065720    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2065721    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2065722    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2065723    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2065724    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2065725    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2065726    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2065727    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2065728    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2065729    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2065730    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2065731    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2065732    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2065733    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2065734    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2065735    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2065736    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2065737    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2065738    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2065739    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2065740    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2065741    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2065742    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2065743    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2065744    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2065745    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2065746    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2065746  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
2065747    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2065748    proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
2065749    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 895 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2065750    %macro varDept(fcmpdata=,id=);
2065751    %global nobs&id scoreFlag&id;
2065752    %let scoreFlag&id = 0;
2065753    %if &id=1 or ^&fcmpStart %then %do;
2065754    proc sort data=&fcmpdata out=_temp&id nodupkey;
2065755    by NAME;
2065756    where id=&id and LHS in( %let j=1;
2065757    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2065758    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2065759    "&var" %let j = %eval(&j+1);
2065760    %end;
2065761    );
2065762    run;
2065763    %let dsid = %sysfunc(open(_temp&id));
2065764    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2065765    %let dsid = %sysfunc(close(&dsid));
2065766    %if &&nobs&id %then %do;
2065767    %let scoreFlag&id = 1;
2065768    %let fcmpStart = 1;
2065769    %end;
2065770    %else %let fcmpStart = 0;
2065771    %end;
2065772    %else %do;
2065773    proc sort data=&fcmpdata out=_tempid;
2065774    where id=&id;
2065775    by LHS;
2065776    run;
2065777    %let dsid = %sysfunc(open(_tempid));
2065778    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2065779    %let dsid = %sysfunc(close(&dsid));
2065780    %if ^&&nobs&id %then %do;
2065781    proc datasets lib=work nolist;
2065782    delete _tempid;
2065783    run;
2065784    quit;
2065785    %end;
2065786    %else %do;
2065787    data _tempAll;
2065788    set %let j=%eval(&id-1);
2065789    %do x=1 %to &j;
2065790    %if &&nobs&x %then %do;
2065791    _temp&x %end;
2065792    %end;
2065793    ;
2065794    run;
2065795    proc sql;
2065796    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2065796  ! work._tempid p2 where p.name=p2.lhs;
2065797    quit;
2065798    data _temp&id;
2065799    set _temp&id;
2065800    where LHS ne '' and NAME ne '' and Node ne '';
2065801    run;
2065802    proc datasets lib=work nolist;
2065803    delete _tempAll;
2065804    run;
2065805    %let dsid = %sysfunc(open(_temp&id));
2065806    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2065807    %let dsid = %sysfunc(close(&dsid));
2065808    %if ^&&nobs&id %then %do;
2065809    proc datasets lib=work nolist;
2065810    delete _temp&id;
2065811    run;
2065812    quit;
2065813    %end;
2065814    %else %do;
2065815    %let scoreFlag&id = 1;
2065816    data _temp&id;
2065817    set _temp&id;
2065818    where LHS ne NAME and node ne '';
2065819    run;
2065820    %let dsid = %sysfunc(open(_temp&id));
2065821    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2065822    %let dsid = %sysfunc(close(&dsid));
2065823    %if ^&&nobs&id %then %do;
2065824    proc datasets lib=work nolist;
2065825    delete _temp&id;
2065826    run;
2065827    quit;
2065828    %end;
2065829    %else %do;
2065830    proc sort data=_temp&id nodupkey;
2065831    by LHS NAME;
2065832    run;
2065833    %end;
2065834    %end;
2065835    %end;
2065836    %end;
2065837    %mend varDept;
2065838    %macro optCode(outdata=fcmpdata);
2065839    %global fcmpStart;
2065840    %let fcmpStart = 0;
2065841    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2065842    %let NumNodes=9;
2065843    %do k=1 %to &NumNodes;
2065844    %vardept(fcmpdata=&outdata, id=&k);
2065845    %end;
2065846    %mend optCode;
2065847    %optcode(outData=EMWS8.Ensmbl22_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 98 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 73 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 25 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp6;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP6 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
2065848    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2065849    * Ensmbl22: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Computing metadata for TRAIN data;
2065850    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS8.ENSMBL22_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl22\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl22_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl22_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl22_TRAIN out=WORK.M0LLC7OU noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0LLC7OU;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0LLC7OU(keep=name type length label format formatl
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl,
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd,
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat =
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0LLC7OU;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0LLC7OU;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M3KND80T NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3KND80T;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M3KND80T;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M209JLTO(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M3KND80T;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3KND80T;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M3KND80T;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN"
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO"
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON"
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD"
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" ))
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype =
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" ))
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT"
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB"
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType =
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA',
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W',
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL',
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT',
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3KND80T;
MPRINT(EMADVISECOLUMNS):   set WORK.M3KND80T;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL=
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY=
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT=
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL=
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Reg10_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Reg10_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl22_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl22";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl22";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl22";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl22";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl22";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl22";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl22";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl22";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl22";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl22";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1"
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl22";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
2066170    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
2066171    set EMWS8.Ensmbl22_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl22_EMINFO;
2066172    where DATA='Ensmbl22' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl22' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE',
'MODEL');
2066173    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_EMINFO.
      WHERE (DATA='Ensmbl22') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2066174    data EMWS8.Ensmbl22_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl22_EMINFO;
2066175    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
2066176    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
2066177    cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS8.ENSMBL22_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
2066181    run;
2066182    data EMWS8.Ensmbl22_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl22_EMINFO;
2066183    set EMWS8.Ensmbl22_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl22_EMINFO WORK.MODELTEMP_INFO;
2066184    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL22_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL22_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2066185    proc sort data = EMWS8.Ensmbl22_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl22_EMINFO NOTHREADS;
2066186    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2066187    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL22_EMINFO.
NOTE: The data set EMWS8.ENSMBL22_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2066188    proc sort data = EMWS8.Reg10_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Reg10_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
2066189    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2066190    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.REG10_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2066191    proc sort data = EMWS8.Ensmbl22_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl22_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
2066192    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2066193    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL22_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2066194    data EMWS8.Ensmbl22_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl22_EMINFO;
2066195    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
2066196    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2066197    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL22_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2066198    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
2066199    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
2066200    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
2066201    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
NOTE: View EMWS8.ENSMBL22_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
NOTE: View EMWS8.ENSMBL22_VALIDATE.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.36 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                20. April 2016
Time:                17.36 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1MKUW5S
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl22\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1MKUW5S new;
MPRINT(EM_DIAGRAM):   run;
2066225    data EMWS8.Ensmbl22_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl22_EMOUTFIT;
2066226    set EMWS8.Ensmbl22_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl22_EMOUTFIT;
2066227    length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
2066228    label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel,
2066228  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
2066229    if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
2066230    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL22_EMOUTFIT.
NOTE: The data set EMWS8.ENSMBL22_EMOUTFIT has 1 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2066231    proc sort data=EMWS8.Ensmbl22_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl22_EMREPORTFIT nothreads;
2066232    by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
2066233    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL22_EMREPORTFIT.
NOTE: The data set EMWS8.ENSMBL22_EMREPORTFIT has 9 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2066234    %let _EMwarndup = 0;
2066235    %let _EMtargetdup =;
2066236    %let _EMASEtargetdup =;
2066237    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2066238    set EMWS8.Ensmbl22_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl22_EMOUTFIT;
2066239    if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
2066240    call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
2066241    call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
2066242    call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
2066243    end;
MPRINT(EM_DIAGRAM):   end;
2066244    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL22_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2066245    proc sort data=EMWS8.Neural32_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Neural32_CMeta_TRAIN out=WORK.SUBSETINMETA;
2066246    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2066247    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set EMWS8.NEURAL32_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 44 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2066248    proc sort data=EMWS8.Ensmbl22_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Ensmbl22_VariableSet
out=WORK.SUBSETVARSET(keep=NAME REPORT);
2066249    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2066250    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.ENSMBL22_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2066251    data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
2066252    merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
2066253    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2066254    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 34 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 44 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2066255    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
2066256    set EMWS8.Ensmbl22_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl22_CMeta_TRAIN;
2066257    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
2066257  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
2066258    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL22_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2066259    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
2066260    set EMWS8.Ensmbl22_TRAIN(keep=
2066261    F_DepVar
2066262    I_DepVar
2066263    P_DepVar0
2066264    P_DepVar1
2066265    R_DepVar0
2066266    R_DepVar1
2066267    U_DepVar
2066268    _WARN_
2066269    DepVar
2066270    );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl22_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
2066271    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.META2_TRAIN.
NOTE: View EMWS8.ENSMBL22_TRAIN.VIEW used (Total process time):
      real time           0.13 seconds
      cpu time            0.14 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.REG10_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.ENSMBL22_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2374 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.14 seconds
      cpu time            0.15 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl22_0ST9SON nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl22_0ST9SON;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl22_0ST9SON(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl22_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl22_0ST9SON;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl22_0ST9SON;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl22_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl22_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural32_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.151221567 _NEVENTS 359
_NNONEVENTS 2015 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2374));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 5.2420133E-6 OVLMAX 0.9996127195 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2374 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2374)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl22_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl22_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
2070537    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
2070538    set EMWS8.Ensmbl22_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl22_CMeta_TRAIN;
2070539    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
2070539  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
2070540    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL22_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2070541    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
2070542    set EMWS8.Ensmbl22_VALIDATE(keep=
2070543    F_DepVar
2070544    I_DepVar
2070545    P_DepVar0
2070546    P_DepVar1
2070547    R_DepVar0
2070548    R_DepVar1
2070549    U_DepVar
2070550    _WARN_
2070551    DepVar
2070552    );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl22_VALIDATE(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
2070553    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.META2_VALIDATE.
NOTE: View EMWS8.ENSMBL22_VALIDATE.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.REG10_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.ENSMBL22_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 1018 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.13 seconds
      cpu time            0.14 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl22_0VSX96A nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl22_0VSX96A;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl22_0VSX96A(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "VALIDATE" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl22_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl22_EMCLASSIFICATION WORK.Ensmbl22_0VSX96A;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl22_0VSX96A;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl22_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl22_EMEVENTREPORT WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl22_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural32_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.152259332 _NEVENTS 155
_NNONEVENTS 863 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 1018));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "VALIDATE" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 4.8455801E-6 OVLMAX 0.9994490942 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 1018 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 1018)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl22_EMRANK;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl22_EMRANK WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl22_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   length P_LABEL $9;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl22_EMSCOREDIST WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
2074828    %let _cn = %sysfunc(getoption(CENTER));
2074829    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
2074830    proc print data=EMWS8.Ensmbl22_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl22_EMREPORTFIT noobs label;
2074831    var STAT LABEL TRAIN
2074832    VALIDATE
2074833    ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN VALIDATE ;
2074834    by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
2074835    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2074836    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
2074837    run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL22_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 1933.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2074838    title10;
MPRINT(EM_DIAGRAM):   title10;
2074839    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2074840    proc sort data=EMWS8.Ensmbl22_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl22_EMCLASSIFICATION nothreads;
2074841    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
2074842    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL22_EMCLASSIFICATION.
NOTE: The data set EMWS8.ENSMBL22_EMCLASSIFICATION has 8 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2074843    %let _cn = %sysfunc(getoption(CENTER));
2074844    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
2074845    proc print data=EMWS8.Ensmbl22_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl22_EMCLASSIFICATION noobs label;
2074846    var from into pct_row pct_col count percent
2074847    ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
2074848    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
2074849    label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
2074850    label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
2074851    label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
2074852    label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
2074853    label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
2074854    label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
2074855    where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
2074856    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2074857    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
2074858    run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL22_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 1934.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2074859    title9;
MPRINT(EM_DIAGRAM):   title9;
2074860    title10;
MPRINT(EM_DIAGRAM):   title10;
2074861    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2074862    %let _cn = %sysfunc(getoption(CENTER));
2074863    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
2074864    data EMWS8.Ensmbl22_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl22_EMEVENTREPORT;
2074865    length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
2074865  ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT
FALSEEVENT TRUEEVENT 8;
2074866    label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
2074866  !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
2074866  ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
2074866  ! FALSEEVENT
2074867    = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
2074867  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
2074867  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
2074868       "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True
Positive" TRUENEVENT = "True Negative";
2074869    FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
2074870    FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
2074871    TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
2074872    TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
2074873    set EMWS8.Ensmbl22_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl22_EMEVENTREPORT;
2074874    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL22_EMEVENTREPORT.
NOTE: The data set EMWS8.ENSMBL22_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2074875    proc print data=EMWS8.Ensmbl22_EMEVENTREPORT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl22_EMEVENTREPORT noobs label;
2074876    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2074877    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
2074878    by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
2074879    run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL22_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 1935.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2074880    title10;
MPRINT(EM_DIAGRAM):   title10;
2074881    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2074882    proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
2074883    modify Ensmbl22_EMRANK;
MPRINT(EM_DIAGRAM):   modify Ensmbl22_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
2074884    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
2074885    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
2074885  ! ;
MPRINT(EM_DIAGRAM):   run;
2074886    run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL22_EMRANK.DATA.
2074887    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.10 seconds
 
 
2074888    %let _cn = %sysfunc(getoption(CENTER));
2074889    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
2074890    proc print data=EMWS8.Ensmbl22_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl22_EMRANK label noobs;
2074891    var
2074892    decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
2074893    by
2074894    notsorted DATAROLE
2074895    notsorted TARGET
2074896    notsorted TARGETLABEL
2074897    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
2074898    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2074899    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
2074900    run;
 
NOTE: There were 40 observations read from the data set EMWS8.ENSMBL22_EMRANK.
NOTE: The PROCEDURE PRINT printed page 1936.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2074901    title10;
MPRINT(EM_DIAGRAM):   title10;
2074902    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2074903    proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
2074904    modify Ensmbl22_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify Ensmbl22_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
2074905    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
2074905  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
2074906    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
2074906  ! ;
MPRINT(EM_DIAGRAM):   run;
2074907    run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL22_EMSCOREDIST.DATA.
2074908    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
 
MPRINT(EM_DIAGRAM):    options nocenter;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl22_EMSCOREDIST label noobs;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
MPRINT(EM_DIAGRAM):   title9 ' ';
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   options NOCENTER;
MPRINT(EM_DIAGRAM):   proc printto;
MPRINT(EM_DIAGRAM):   run;
