*------------------------------------------------------------*
User:                Lukas Fahr
Date:                28. April 2016
Time:                13.33 Uhr
Site:                70107571
Platform:            X64_7PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13.33 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                28. April 2016
Time:                13.33 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2D2MGGQ
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl22\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2D2MGGQ new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl22\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13.33 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl22\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl22\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl22\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl22\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13.33 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl22\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl22\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl22\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_
'C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl22\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
(FREQ=(WHERE='ROLE = "FREQ"' DEFAULT='Y' RULE=(RULE1=(DESCRIPTION='USEATMOST1FREQ'
VALUES=(VALUE1='Y' )[91913] MAX=1 EXCEEDMAXVALUE='' )[91917] )[91911]
VALIDCHOICES=(CHOICE1='Y' )[91915] )[92199] INPUTREJECT=(WHERE='ROLE in("INPUT", "REJECTED")'
DEFAULT='D' VALIDCHOICES=(CHOICE1='D' )[91921]
RULE=(RULE1=(DESCRIPTION='USEATLEAST1INPUTREJECT' WHERE='(ROLE = "INPUT" and USE in("Y" "D"))
or (ROLE = "REJECTED" and USE = "Y")' MIN=. )[91925] )[91923] )[91919] TARGET=(WHERE='ROLE =
"TARGET"' DEFAULT='Y' VALIDCHOICES=(CHOICE1='Y' CHOICE2='N' )[91929]
RULE=(RULE1=(DESCRIPTION='METADATA.USE1TARGET' VALUES=(VALUE1='Y' )[91935] MIN=1 MAX=1
EXCEEDMAXVALUE='N' )[91933] )[91931] )[91927] )[91909]
142254     proc freq data=EMWS8.Ensmbl22_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.Ensmbl22_VariableSet noprint;
142255     table ROLE*LEVEL/out=WORK.Ensmbl22META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Ensmbl22META;
142256     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.ENSMBL22_VARIABLESET.
NOTE: The data set WORK.ENSMBL22META has 6 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
142257     proc print data=WORK.Ensmbl22META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl22META label noobs;
142258     var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
142259     label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
142259   ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
142259   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency
Count";
142260     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
142261     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
142262     run;
 
NOTE: There were 6 observations read from the data set WORK.ENSMBL22META.
NOTE: The PROCEDURE PRINT printed page 37.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
142263     title10;
MPRINT(EM_DIAGRAM):   title10;
142264     %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS8.Neural32_TRAIN EMWS8.Neural32_TRAIN
EMWS8.Neural32_TRAIN EMWS8.Neural32_TRAIN EMWS8 Neural32_TRAIN
EMWS8.Neural32_TRAIN EMWS8.Neural32_TRAIN
EMWS8.Neural32_TRAIN EMWS8.Neural32_TRAIN EMWS8 Neural32_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS8.Neural32_TRAIN
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Neural32_DepVar_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
142293     data WORK.Ensmbl22_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl22_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS
ORDER);
142294     length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
142295     label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
142295   ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
142295   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
142296        "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
142296   ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
142296   ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels"
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
142297     set EMWS8.NEURAL32_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS8.NEURAL32_DEPVAR_DM( where=(_TYPE_="TARGET"));
142298     NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
142299     select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
142300     when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
142301     when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
142302     when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
142303     when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
142304     otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
142305     end;
MPRINT(EM_DIAGRAM):   end;
142306     output;
MPRINT(EM_DIAGRAM):   output;
142307     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.NEURAL32_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.ENSMBL22_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
142308     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
142309     proc print data=WORK.Ensmbl22_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl22_EVENT noobs label;
142310     var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
142311     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
142312     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
142313     run;
 
NOTE: There were 1 observations read from the data set WORK.ENSMBL22_EVENT.
NOTE: The PROCEDURE PRINT printed page 38.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
142314     title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
142315     proc print data = EMWS8.Neural32_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS8.Neural32_DepVar_DM noobs label;
142316     var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
142317     where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR',
'DECPRIOR');
142318     label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
142318   ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
142318   ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
142319     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
142320     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
142321     run;
 
NOTE: There were 7 observations read from the data set EMWS8.NEURAL32_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 39.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
142322     title10;
MPRINT(EM_DIAGRAM):   title10;
142323     %let groupid =;
142324     %let endGroupid =;
142325     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
142326     set EMWS8.Neural34_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural34_EMINFO;
142327     where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
142327   ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
142328     if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
142329     else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
142330     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL34_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
142331     %let groupid =;
142332     %let endGroupid =;
142333     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
142334     set EMWS8.AutoNeural46_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural46_EMINFO;
142335     where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
142335   ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
142336     if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
142337     else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
142338     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL46_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
142339     %let groupid =;
142340     %let endGroupid =;
142341     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
142342     set EMWS8.AutoNeural42_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural42_EMINFO;
142343     where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
142343   ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
142344     if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
142345     else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
142346     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL42_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
142347     %let groupid =;
142348     %let endGroupid =;
142349     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
142350     set EMWS8.AutoNeural47_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural47_EMINFO;
142351     where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
142351   ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
142352     if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
142353     else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
142354     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL47_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
142355     %let groupid =;
142356     %let endGroupid =;
142357     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
142358     set EMWS8.Neural30_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural30_EMINFO;
142359     where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
142359   ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
142360     if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
142361     else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
142362     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL30_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
142363     %let groupid =;
142364     %let endGroupid =;
142365     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
142366     set EMWS8.Neural35_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural35_EMINFO;
142367     where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
142367   ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
142368     if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
142369     else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
142370     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL35_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
142371     %let groupid =;
142372     %let endGroupid =;
142373     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
142374     set EMWS8.Neural32_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural32_EMINFO;
142375     where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
142375   ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
142376     if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
142377     else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
142378     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL32_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
142379     data WORK.Ensmbl22;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl22;
142380     length NodeId $32 Model $64;
MPRINT(EM_DIAGRAM):   length NodeId $32 Model $64;
142381     label Nodeid = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodeId_vlabel,  NOQUOTE))" Model
142381   ! = "%sysfunc(sasmsg(sashelp.dmine, rpt_modeltype,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Nodeid = "Node Id" Model = "rpt_modeltype";
142382     nodeid="NEURAL34";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL34";
142383     model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
142384     output;
MPRINT(EM_DIAGRAM):   output;
142385     nodeid="AUTONEURAL46";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL46";
142386     model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
142387     output;
MPRINT(EM_DIAGRAM):   output;
142388     nodeid="AUTONEURAL42";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL42";
142389     model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
142390     output;
MPRINT(EM_DIAGRAM):   output;
142391     nodeid="AUTONEURAL47";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL47";
142392     model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
142393     output;
MPRINT(EM_DIAGRAM):   output;
142394     nodeid="NEURAL30";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL30";
142395     model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
142396     output;
MPRINT(EM_DIAGRAM):   output;
142397     nodeid="NEURAL35";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL35";
142398     model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
142399     output;
MPRINT(EM_DIAGRAM):   output;
142400     nodeid="NEURAL32";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL32";
142401     model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
142402     output;
MPRINT(EM_DIAGRAM):   output;
142403     ;
MPRINT(EM_DIAGRAM):   ;
142404     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.ENSMBL22 has 7 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
142405     title;
MPRINT(EM_DIAGRAM):   title;
142406     proc print data=WORK.Ensmbl22 label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl22 label noobs;
142407     title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_combinemodels_title,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Imported Models to be Combined";
142408     title10 "Probability Function: Average";
MPRINT(EM_DIAGRAM):   title10 "Probability Function: Average";
MPRINT(EM_DIAGRAM):   run;
142409     run;
 
NOTE: There were 7 observations read from the data set WORK.ENSMBL22.
NOTE: The PROCEDURE PRINT printed page 40.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
142410     title9;
MPRINT(EM_DIAGRAM):   title9;
142411     title10;
MPRINT(EM_DIAGRAM):   title10;
142412     data WORK.M0Z6OJYB;
MPRINT(EM_DIAGRAM):    data WORK.M0Z6OJYB;
142413     set WORK.M0Z6OJYB;
MPRINT(EM_DIAGRAM):   set WORK.M0Z6OJYB;
142414     where NAME = "DepVar";
MPRINT(EM_DIAGRAM):   where NAME = "DepVar";
142415     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.M0Z6OJYB.
      WHERE NAME='DepVar';
NOTE: The data set WORK.M0Z6OJYB has 1 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
142416     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
142417     * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
142418     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
142419     %macro DMDBClass;
142420         DepVar(DESC)
142421     %mend DMDBClass;
142422     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
142423     * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
142424     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
142425     %macro DMDBVar;
142426
142427     %mend DMDBVar;
142428     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
142429     * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
142430     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
142431     proc dmdb batch data=EMWS8.Neural34_TRAIN
142432     dmdbcat=WORK.EM_DMDB
142433     maxlevel = 513
142434     ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.Neural34_TRAIN dmdbcat=WORK.EM_DMDB maxlevel
= 513 ;
MPRINT(EM_DIAGRAM):   class
142435     class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(DESC)
MPRINT(EM_DIAGRAM):  ;
142436     target
142437     DepVar
142438     ;
MPRINT(EM_DIAGRAM):   target DepVar ;
142439     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 2374   Memory used = 511K.
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: View EMWS8.NEURAL34_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.META2_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.NEURAL34_TRAIN.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.06 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
142440     quit;
142441     *--- end code ---*;
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13.33 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                13.33 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3W4FAGZ
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl22\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3W4FAGZ new;
MPRINT(EM_DIAGRAM):   run;
142543     filename emflow
142543   ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl22\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl22\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Scoring NEURAL34_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
142544     *------------------------------------------------------------*;
142545     * Ensmbl22: Scoring NEURAL34_TRAIN data;
142546     *------------------------------------------------------------*;
142547     data EMWS8.Ensmbl22_TRAIN
142548     / view=EMWS8.Ensmbl22_TRAIN
142549     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl22_TRAIN / view=EMWS8.Ensmbl22_TRAIN ;
142550     set EMWS8.Neural34_TRAIN
142551     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural34_TRAIN ;
142552     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl22\EMFLOWSCORE.sas.
142553    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
142554    +* Ensmbl22: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Combine model for DepVar;
142555    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
142556    +* Ensmbl22: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Scoring Code of model 1 of 7;
142557    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
142558    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
142559    +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
142560    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
142561    +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
142562    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
142563    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
142564    +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
142565    +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
142566    +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
142567    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
142568    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
142569    +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
142570    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
142571    +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
142572    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
142573    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
142574    +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
142575    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
142576    +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
142577    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
142578    +
142579    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
142580    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
142580   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
142581    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
142582    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
142583    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
142584    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
142585    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
142586    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
142587    +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
142588    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
142589    +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
142590    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
142591    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
142592    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
142593    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
142594    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
142595    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
142596    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
142597    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
142598    +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
142599    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
142600    +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
142601    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
142602    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
142603    +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
142604    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
142605    +* NODE: Meta2;
MPRINT(EM_DIAGRAM):   * NODE: Meta2;
142606    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
142607    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
142608    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
142609    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
142610    +* NODE: Neural34;
MPRINT(EM_DIAGRAM):   * NODE: Neural34;
142611    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
142612    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
142613    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
142614    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
142615    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
142616    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
142617    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
142618    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
142619    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
142620    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
142621    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
142622    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
142623    +LENGTH _WARN_ $4
142624    +      F_DepVar  $ 12
142625    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
142626    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
142627    +
142628    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
142629    +
142630    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
142631    +
142632    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
142633    +
142634    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
142635    +
142636    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
142637    +
142638    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
142639    +
142640    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
142641    +
142642    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
142643    +
142644    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
142645    +
142646    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
142647    +
142648    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
142649    +
142650    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
142651    +
142652    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
142653    +
142654    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
142655    +
142656    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
142657    +
142658    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
142659    +
142660    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
142661    +
142662    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
142663    +
142664    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
142665    +
142666    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
142667    +
142668    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
142669    +
142670    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
142671    +
142672    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
142673    +
142674    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
142675    +
142676    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
142677    +
142678    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
142679    +
142680    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
142681    +
142682    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
142683    +
142684    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
142685    +
142686    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
142687    +
142688    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
142689    +
142690    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
142691    +
142692    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
142693    +
142694    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
142695    +
142696    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
142697    +
142698    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
142699    +
142700    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
142701    +
142702    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
142703    +
142704    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
142705    +
142706    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
142707    +
142708    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
142709    +
142710    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
142711    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
142712    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
142713    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
142714    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
142715    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
142716    +end;
MPRINT(EM_DIAGRAM):   end;
142717    +else do;
MPRINT(EM_DIAGRAM):   else do;
142718    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
142719    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
142720    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
142721    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
142722    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
142723    +   end;
MPRINT(EM_DIAGRAM):   end;
142724    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
142725    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
142726    +   end;
MPRINT(EM_DIAGRAM):   end;
142727    +   else do;
MPRINT(EM_DIAGRAM):   else do;
142728    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
142729    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
142730    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
142731    +   end;
MPRINT(EM_DIAGRAM):   end;
142732    +end;
MPRINT(EM_DIAGRAM):   end;
142733    +
142734    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
142735    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
142736    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
142737    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
142738    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
142739    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
142740    +end;
MPRINT(EM_DIAGRAM):   end;
142741    +else do;
MPRINT(EM_DIAGRAM):   else do;
142742    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
142743    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
142744    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
142745    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
142746    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
142747    +   end;
MPRINT(EM_DIAGRAM):   end;
142748    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
142749    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
142750    +   end;
MPRINT(EM_DIAGRAM):   end;
142751    +   else do;
MPRINT(EM_DIAGRAM):   else do;
142752    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
142753    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
142754    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
142755    +   end;
MPRINT(EM_DIAGRAM):   end;
142756    +end;
MPRINT(EM_DIAGRAM):   end;
142757    +
142758    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
142759    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
142760    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
142761    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
142762    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
142763    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
142764    +end;
MPRINT(EM_DIAGRAM):   end;
142765    +else do;
MPRINT(EM_DIAGRAM):   else do;
142766    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
142767    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
142768    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
142769    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
142770    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
142771    +   end;
MPRINT(EM_DIAGRAM):   end;
142772    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
142773    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
142774    +   end;
MPRINT(EM_DIAGRAM):   end;
142775    +   else do;
MPRINT(EM_DIAGRAM):   else do;
142776    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
142777    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
142778    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
142779    +   end;
MPRINT(EM_DIAGRAM):   end;
142780    +end;
MPRINT(EM_DIAGRAM):   end;
142781    +
142782    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
142783    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
142784    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
142785    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
142786    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
142787    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
142788    +end;
MPRINT(EM_DIAGRAM):   end;
142789    +else do;
MPRINT(EM_DIAGRAM):   else do;
142790    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
142791    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
142792    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
142793    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
142794    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
142795    +   end;
MPRINT(EM_DIAGRAM):   end;
142796    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
142797    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
142798    +   end;
MPRINT(EM_DIAGRAM):   end;
142799    +   else do;
MPRINT(EM_DIAGRAM):   else do;
142800    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
142801    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
142802    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
142803    +   end;
MPRINT(EM_DIAGRAM):   end;
142804    +end;
MPRINT(EM_DIAGRAM):   end;
142805    +
142806    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
142807    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
142808    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
142809    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
142810    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
142811    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
142812    +end;
MPRINT(EM_DIAGRAM):   end;
142813    +else do;
MPRINT(EM_DIAGRAM):   else do;
142814    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
142815    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
142816    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
142817    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
142818    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
142819    +   end;
MPRINT(EM_DIAGRAM):   end;
142820    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
142821    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
142822    +   end;
MPRINT(EM_DIAGRAM):   end;
142823    +   else do;
MPRINT(EM_DIAGRAM):   else do;
142824    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
142825    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
142826    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
142827    +   end;
MPRINT(EM_DIAGRAM):   end;
142828    +end;
MPRINT(EM_DIAGRAM):   end;
142829    +
142830    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
142831    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
142832    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
142833    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
142834    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
142835    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
142836    +end;
MPRINT(EM_DIAGRAM):   end;
142837    +else do;
MPRINT(EM_DIAGRAM):   else do;
142838    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
142839    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
142840    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
142841    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
142842    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
142843    +   end;
MPRINT(EM_DIAGRAM):   end;
142844    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
142845    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
142846    +   end;
MPRINT(EM_DIAGRAM):   end;
142847    +   else do;
MPRINT(EM_DIAGRAM):   else do;
142848    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
142849    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
142850    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
142851    +   end;
MPRINT(EM_DIAGRAM):   end;
142852    +end;
MPRINT(EM_DIAGRAM):   end;
142853    +
142854    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
142855    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
142856    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
142857    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
142858    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
142859    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
142860    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
142861    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
142862    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
142863    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
142864    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
142865    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
142866    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
142867    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
142868    +end;
MPRINT(EM_DIAGRAM):   end;
142869    +else do;
MPRINT(EM_DIAGRAM):   else do;
142870    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
142871    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
142872    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
142873    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
142874    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
142875    +   end;
MPRINT(EM_DIAGRAM):   end;
142876    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
142877    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
142878    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
142879    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
142880    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
142881    +   end;
MPRINT(EM_DIAGRAM):   end;
142882    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
142883    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
142884    +   end;
MPRINT(EM_DIAGRAM):   end;
142885    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
142886    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
142887    +   end;
MPRINT(EM_DIAGRAM):   end;
142888    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
142889    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
142890    +   end;
MPRINT(EM_DIAGRAM):   end;
142891    +   else do;
MPRINT(EM_DIAGRAM):   else do;
142892    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
142893    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
142894    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
142895    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
142896    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
142897    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
142898    +   end;
MPRINT(EM_DIAGRAM):   end;
142899    +end;
MPRINT(EM_DIAGRAM):   end;
142900    +
142901    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
142902    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
142903    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
142904    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
142905    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
142906    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
142907    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
142908    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
142909    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
142910    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
142911    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
142912    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
142913    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
142914    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
142915    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
142916    +end;
MPRINT(EM_DIAGRAM):   end;
142917    +else do;
MPRINT(EM_DIAGRAM):   else do;
142918    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
142919    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
142920    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
142921    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
142922    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
142923    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
142924    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
142925    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
142926    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
142927    +         end;
MPRINT(EM_DIAGRAM):   end;
142928    +         else do;
MPRINT(EM_DIAGRAM):   else do;
142929    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
142930    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
142931    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
142932    +            end;
MPRINT(EM_DIAGRAM):   end;
142933    +         end;
MPRINT(EM_DIAGRAM):   end;
142934    +      end;
MPRINT(EM_DIAGRAM):   end;
142935    +      else do;
MPRINT(EM_DIAGRAM):   else do;
142936    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
142937    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
142938    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
142939    +         end;
MPRINT(EM_DIAGRAM):   end;
142940    +      end;
MPRINT(EM_DIAGRAM):   end;
142941    +   end;
MPRINT(EM_DIAGRAM):   end;
142942    +   else do;
MPRINT(EM_DIAGRAM):   else do;
142943    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
142944    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
142945    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
142946    +      end;
MPRINT(EM_DIAGRAM):   end;
142947    +      else do;
MPRINT(EM_DIAGRAM):   else do;
142948    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
142949    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
142950    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
142951    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
142952    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
142953    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
142954    +         end;
MPRINT(EM_DIAGRAM):   end;
142955    +      end;
MPRINT(EM_DIAGRAM):   end;
142956    +   end;
MPRINT(EM_DIAGRAM):   end;
142957    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
142958    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
142959    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
142960    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
142961    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
142962    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
142963    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
142964    +   end;
MPRINT(EM_DIAGRAM):   end;
142965    +end;
MPRINT(EM_DIAGRAM):   end;
142966    +
142967    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
142968    +*** Checking missing input Interval
142969    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
142970    +
142971    +IF NMISS(
142972    +   Income ,
142973    +   Kidhome ,
142974    +   MntFishProducts ,
142975    +   MntFruits ,
142976    +   MntGoldProds ,
142977    +   MntMeatProducts ,
142978    +   MntSweetProducts ,
142979    +   MntWines ,
142980    +   NumCatalogPurchases ,
142981    +   NumDealsPurchases ,
142982    +   NumStorePurchases ,
142983    +   NumWebPurchases ,
142984    +   NumWebVisitsMonth ,
142985    +   Recency ,
142986    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
142987    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
142988    +
142989    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
142990    +END;
MPRINT(EM_DIAGRAM):   END;
142991    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
142992    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
142993    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
142994    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
142995    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
142996    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
142997    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
142998    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
142999    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
143000    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
143001    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
143002    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
143003    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
143004    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
143005    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
143006    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
143007    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
143008    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
143009    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
143010    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
143011    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
143012    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
143013    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
143014    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
143015    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
143016    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
143017    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
143018    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
143019    +END;
MPRINT(EM_DIAGRAM):   END;
143020    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
143021    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
143022    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
143023    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
143024    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
143025    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
143026    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
143027    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
143028    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
143029    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
143030    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
143031    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
143032    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
143033    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
143034    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
143035    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
143036    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
143037    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
143038    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
143039    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
143040    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
143041    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
143042    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
143043    +   ELSE S_NumCatalogPurchases
143044    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
143045    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
143046    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
143047    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
143048    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
143049    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
143050    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
143051    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
143052    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
143053    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
143054    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
143055    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
143056    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
143057    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
143058    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
143059    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
143060    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
143061    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
143062    +END;
MPRINT(EM_DIAGRAM):   END;
143063    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
143064    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
143065    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
143066    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
143067    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
143068    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
143069    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
143070    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
143071    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
143072    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
143073    +   H11  =    -0.81572379016921 * S_Income  +    -0.07670946585348 * S_Kidhome
143074    +          +     0.24367603598167 * S_MntFishProducts
143075    +          +     0.19692980127348 * S_MntFruits  +    -0.03926738185333 *
143076    +        S_MntGoldProds  +    -0.20900804333353 * S_MntMeatProducts
143077    +          +     0.34054806441484 * S_MntSweetProducts
143078    +          +     0.65956211369383 * S_MntWines  +    -0.95375334578522 *
143079    +        S_NumCatalogPurchases  +    -0.73124740368567 * S_NumDealsPurchases
143080    +          +     0.98942946974575 * S_NumStorePurchases
143081    +          +     0.89701206630103 * S_NumWebPurchases
143082    +          +    -1.22878611472154 * S_NumWebVisitsMonth
143083    +          +     1.44981870978354 * S_Recency  +     0.47533125686411 *
143084    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.81572379016921 * S_Income + -0.07670946585348 * S_Kidhome +
0.24367603598167 * S_MntFishProducts + 0.19692980127348 * S_MntFruits + -0.03926738185333 *
S_MntGoldProds + -0.20900804333353 * S_MntMeatProducts + 0.34054806441484 * S_MntSweetProducts
+ 0.65956211369383 * S_MntWines + -0.95375334578522 * S_NumCatalogPurchases +
-0.73124740368567 * S_NumDealsPurchases + 0.98942946974575 * S_NumStorePurchases +
0.89701206630103 * S_NumWebPurchases + -1.22878611472154 * S_NumWebVisitsMonth +
1.44981870978354 * S_Recency + 0.47533125686411 * S_Teenhome ;
143085    +   H12  =    -0.18875145195495 * S_Income  +     0.42230998482453 * S_Kidhome
143086    +          +     0.16683404689723 * S_MntFishProducts
143087    +          +     0.32072658929401 * S_MntFruits  +    -0.12341748032201 *
143088    +        S_MntGoldProds  +    -1.56478754527255 * S_MntMeatProducts
143089    +          +     0.20389084548968 * S_MntSweetProducts
143090    +          +     0.95592931625509 * S_MntWines  +    -0.69996817353755 *
143091    +        S_NumCatalogPurchases  +    -0.92709806328697 * S_NumDealsPurchases
143092    +          +     1.27164659640366 * S_NumStorePurchases
143093    +          +     1.02122194207802 * S_NumWebPurchases
143094    +          +     -1.5111033436803 * S_NumWebVisitsMonth
143095    +          +     1.63712814901544 * S_Recency  +     0.14205116840572 *
143096    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.18875145195495 * S_Income + 0.42230998482453 * S_Kidhome +
0.16683404689723 * S_MntFishProducts + 0.32072658929401 * S_MntFruits + -0.12341748032201 *
S_MntGoldProds + -1.56478754527255 * S_MntMeatProducts + 0.20389084548968 * S_MntSweetProducts
+ 0.95592931625509 * S_MntWines + -0.69996817353755 * S_NumCatalogPurchases +
-0.92709806328697 * S_NumDealsPurchases + 1.27164659640366 * S_NumStorePurchases +
1.02122194207802 * S_NumWebPurchases + -1.5111033436803 * S_NumWebVisitsMonth +
1.63712814901544 * S_Recency + 0.14205116840572 * S_Teenhome ;
143097    +   H13  =     1.02798705354163 * S_Income  +    -0.94411708781921 * S_Kidhome
143098    +          +    -0.03345077166544 * S_MntFishProducts
143099    +          +     0.00038440809349 * S_MntFruits  +    -0.05068379715712 *
143100    +        S_MntGoldProds  +     1.00464705307582 * S_MntMeatProducts
143101    +          +    -0.11948662500951 * S_MntSweetProducts
143102    +          +    -0.52438819731252 * S_MntWines  +     0.98586904866769 *
143103    +        S_NumCatalogPurchases  +     0.09015295226839 * S_NumDealsPurchases
143104    +          +     0.22401914357376 * S_NumStorePurchases
143105    +          +     0.04219877865976 * S_NumWebPurchases
143106    +          +     1.21753334166036 * S_NumWebVisitsMonth
143107    +          +    -1.33712212110081 * S_Recency  +    -0.47582856683655 *
143108    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 1.02798705354163 * S_Income + -0.94411708781921 * S_Kidhome +
-0.03345077166544 * S_MntFishProducts + 0.00038440809349 * S_MntFruits + -0.05068379715712 *
S_MntGoldProds + 1.00464705307582 * S_MntMeatProducts + -0.11948662500951 * S_MntSweetProducts
+ -0.52438819731252 * S_MntWines + 0.98586904866769 * S_NumCatalogPurchases + 0.09015295226839
* S_NumDealsPurchases + 0.22401914357376 * S_NumStorePurchases + 0.04219877865976 *
S_NumWebPurchases + 1.21753334166036 * S_NumWebVisitsMonth + -1.33712212110081 * S_Recency +
-0.47582856683655 * S_Teenhome ;
143109    +   H14  =     0.91431429848834 * S_Income  +    -1.16289676557574 * S_Kidhome
143110    +          +     0.31175257038578 * S_MntFishProducts
143111    +          +     0.08080436076271 * S_MntFruits  +     0.15252288175851 *
143112    +        S_MntGoldProds  +     0.21603546207654 * S_MntMeatProducts
143113    +          +      0.0927253053382 * S_MntSweetProducts
143114    +          +     0.05865323888304 * S_MntWines  +    -0.23426953728277 *
143115    +        S_NumCatalogPurchases  +    -0.46451908614085 * S_NumDealsPurchases
143116    +          +    -0.12667606349662 * S_NumStorePurchases
143117    +          +     0.30148374518724 * S_NumWebPurchases
143118    +          +     0.48934229701658 * S_NumWebVisitsMonth
143119    +          +    -0.83754390793251 * S_Recency  +     -0.4576645462819 *
143120    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.91431429848834 * S_Income + -1.16289676557574 * S_Kidhome +
0.31175257038578 * S_MntFishProducts + 0.08080436076271 * S_MntFruits + 0.15252288175851 *
S_MntGoldProds + 0.21603546207654 * S_MntMeatProducts + 0.0927253053382 * S_MntSweetProducts +
0.05865323888304 * S_MntWines + -0.23426953728277 * S_NumCatalogPurchases + -0.46451908614085
* S_NumDealsPurchases + -0.12667606349662 * S_NumStorePurchases + 0.30148374518724 *
S_NumWebPurchases + 0.48934229701658 * S_NumWebVisitsMonth + -0.83754390793251 * S_Recency +
-0.4576645462819 * S_Teenhome ;
143121    +   H15  =    -0.58161501095664 * S_Income  +     -1.0333658128614 * S_Kidhome
143122    +          +     0.42646725119177 * S_MntFishProducts
143123    +          +     -0.3264621401658 * S_MntFruits  +    -0.74616728524532 *
143124    +        S_MntGoldProds  +    -0.97572068716712 * S_MntMeatProducts
143125    +          +    -0.01493605582616 * S_MntSweetProducts
143126    +          +      0.0311636632685 * S_MntWines  +    -1.68599903767191 *
143127    +        S_NumCatalogPurchases  +    -1.25052648798307 * S_NumDealsPurchases
143128    +          +     0.54256744091258 * S_NumStorePurchases
143129    +          +     0.43065931458468 * S_NumWebPurchases
143130    +          +      0.5935561420466 * S_NumWebVisitsMonth
143131    +          +    -0.45183418369624 * S_Recency  +     0.19260512629844 *
143132    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.58161501095664 * S_Income + -1.0333658128614 * S_Kidhome +
0.42646725119177 * S_MntFishProducts + -0.3264621401658 * S_MntFruits + -0.74616728524532 *
S_MntGoldProds + -0.97572068716712 * S_MntMeatProducts + -0.01493605582616 *
S_MntSweetProducts + 0.0311636632685 * S_MntWines + -1.68599903767191 * S_NumCatalogPurchases
+ -1.25052648798307 * S_NumDealsPurchases + 0.54256744091258 * S_NumStorePurchases +
0.43065931458468 * S_NumWebPurchases + 0.5935561420466 * S_NumWebVisitsMonth +
-0.45183418369624 * S_Recency + 0.19260512629844 * S_Teenhome ;
143133    +   H11  = H11  +     0.61503950219838 * AcceptedCmp10
143134    +          +     0.02945207091619 * AcceptedCmp20  +     0.99151950769472 *
143135    +        AcceptedCmp30  +     1.08987060401718 * AcceptedCmp40
143136    +          +     0.45427753773024 * AcceptedCmp50  +    -1.03533951966815 *
143137    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.61503950219838 * AcceptedCmp10 + 0.02945207091619 *
AcceptedCmp20 + 0.99151950769472 * AcceptedCmp30 + 1.08987060401718 * AcceptedCmp40 +
0.45427753773024 * AcceptedCmp50 + -1.03533951966815 * Complain0 ;
143138    +   H12  = H12  +     0.83823476190401 * AcceptedCmp10
143139    +          +      1.0793719601418 * AcceptedCmp20  +     0.68538854946581 *
143140    +        AcceptedCmp30  +     1.00297565893339 * AcceptedCmp40
143141    +          +     0.24586379991786 * AcceptedCmp50  +     0.15471251255301 *
143142    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.83823476190401 * AcceptedCmp10 + 1.0793719601418 *
AcceptedCmp20 + 0.68538854946581 * AcceptedCmp30 + 1.00297565893339 * AcceptedCmp40 +
0.24586379991786 * AcceptedCmp50 + 0.15471251255301 * Complain0 ;
143143    +   H13  = H13  +    -0.41486094438907 * AcceptedCmp10
143144    +          +    -0.76586628449839 * AcceptedCmp20  +    -0.59695459523693 *
143145    +        AcceptedCmp30  +    -0.30262159911837 * AcceptedCmp40
143146    +          +    -0.61141171124182 * AcceptedCmp50  +    -0.01086235188835 *
143147    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.41486094438907 * AcceptedCmp10 + -0.76586628449839 *
AcceptedCmp20 + -0.59695459523693 * AcceptedCmp30 + -0.30262159911837 * AcceptedCmp40 +
-0.61141171124182 * AcceptedCmp50 + -0.01086235188835 * Complain0 ;
143148    +   H14  = H14  +    -0.09662858884082 * AcceptedCmp10
143149    +          +    -0.48515652524171 * AcceptedCmp20  +    -0.37421451374399 *
143150    +        AcceptedCmp30  +    -0.52889523891817 * AcceptedCmp40
143151    +          +    -0.73518448275357 * AcceptedCmp50  +    -0.36065830718672 *
143152    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.09662858884082 * AcceptedCmp10 + -0.48515652524171 *
AcceptedCmp20 + -0.37421451374399 * AcceptedCmp30 + -0.52889523891817 * AcceptedCmp40 +
-0.73518448275357 * AcceptedCmp50 + -0.36065830718672 * Complain0 ;
143153    +   H15  = H15  +      0.2985143092641 * AcceptedCmp10
143154    +          +    -0.06881934778393 * AcceptedCmp20  +    -0.02609197044604 *
143155    +        AcceptedCmp30  +    -0.79105657447885 * AcceptedCmp40
143156    +          +    -0.02286855144948 * AcceptedCmp50  +     0.02884650192784 *
143157    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.2985143092641 * AcceptedCmp10 + -0.06881934778393 *
AcceptedCmp20 + -0.02609197044604 * AcceptedCmp30 + -0.79105657447885 * AcceptedCmp40 +
-0.02286855144948 * AcceptedCmp50 + 0.02884650192784 * Complain0 ;
143158    +   H11  = H11  +    -0.41169946146301 * Education2n_Cycle
143159    +          +      0.8448273504441 * EducationBasic  +    -1.02497956377347 *
143160    +        EducationGraduation  +     0.43998321745211 * EducationMaster
143161    +          +    -0.85912688909911 * Marital_StatusDivorced
143162    +          +     0.81561401465875 * Marital_StatusMarried
143163    +          +    -0.58324403081542 * Marital_StatusSingle
143164    +          +      0.9348017085106 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.41169946146301 * Education2n_Cycle + 0.8448273504441 *
EducationBasic + -1.02497956377347 * EducationGraduation + 0.43998321745211 * EducationMaster
+ -0.85912688909911 * Marital_StatusDivorced + 0.81561401465875 * Marital_StatusMarried +
-0.58324403081542 * Marital_StatusSingle + 0.9348017085106 * Marital_StatusTogether ;
143165    +   H12  = H12  +     0.22828129841893 * Education2n_Cycle
143166    +          +     0.47579227804033 * EducationBasic  +    -0.18165301263195 *
143167    +        EducationGraduation  +    -0.16143431016405 * EducationMaster
143168    +          +    -0.34784695867287 * Marital_StatusDivorced
143169    +          +    -0.18194022182247 * Marital_StatusMarried
143170    +          +    -0.10633185904164 * Marital_StatusSingle
143171    +          +     0.13136125361628 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.22828129841893 * Education2n_Cycle + 0.47579227804033 *
EducationBasic + -0.18165301263195 * EducationGraduation + -0.16143431016405 * EducationMaster
+ -0.34784695867287 * Marital_StatusDivorced + -0.18194022182247 * Marital_StatusMarried +
-0.10633185904164 * Marital_StatusSingle + 0.13136125361628 * Marital_StatusTogether ;
143172    +   H13  = H13  +     0.38705901043652 * Education2n_Cycle
143173    +          +     0.19703188370189 * EducationBasic  +    -0.48062640599976 *
143174    +        EducationGraduation  +     -0.3646621736273 * EducationMaster
143175    +          +     0.61058752124466 * Marital_StatusDivorced
143176    +          +    -1.38793808025141 * Marital_StatusMarried
143177    +          +     1.10060737810944 * Marital_StatusSingle
143178    +          +    -1.21250219018366 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.38705901043652 * Education2n_Cycle + 0.19703188370189 *
EducationBasic + -0.48062640599976 * EducationGraduation + -0.3646621736273 * EducationMaster
+ 0.61058752124466 * Marital_StatusDivorced + -1.38793808025141 * Marital_StatusMarried +
1.10060737810944 * Marital_StatusSingle + -1.21250219018366 * Marital_StatusTogether ;
143179    +   H14  = H14  +    -0.20576658115662 * Education2n_Cycle
143180    +          +    -0.09185472034614 * EducationBasic  +    -0.43674210064447 *
143181    +        EducationGraduation  +    -0.18154054746298 * EducationMaster
143182    +          +     0.11973800573581 * Marital_StatusDivorced
143183    +          +      -0.294635257911 * Marital_StatusMarried
143184    +          +    -0.05399659601172 * Marital_StatusSingle
143185    +          +     0.34207780606239 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.20576658115662 * Education2n_Cycle + -0.09185472034614 *
EducationBasic + -0.43674210064447 * EducationGraduation + -0.18154054746298 * EducationMaster
+ 0.11973800573581 * Marital_StatusDivorced + -0.294635257911 * Marital_StatusMarried +
-0.05399659601172 * Marital_StatusSingle + 0.34207780606239 * Marital_StatusTogether ;
143186    +   H15  = H15  +    -0.05553093684862 * Education2n_Cycle
143187    +          +    -0.12898006732329 * EducationBasic  +    -0.16064118923518 *
143188    +        EducationGraduation  +     -0.6431539624694 * EducationMaster
143189    +          +     0.42838191659864 * Marital_StatusDivorced
143190    +          +    -0.09150349181363 * Marital_StatusMarried
143191    +          +    -0.33520164145276 * Marital_StatusSingle
143192    +          +    -0.15253738713197 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.05553093684862 * Education2n_Cycle + -0.12898006732329 *
EducationBasic + -0.16064118923518 * EducationGraduation + -0.6431539624694 * EducationMaster
+ 0.42838191659864 * Marital_StatusDivorced + -0.09150349181363 * Marital_StatusMarried +
-0.33520164145276 * Marital_StatusSingle + -0.15253738713197 * Marital_StatusTogether ;
143193    +   H11  =     -1.5079478405973 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.5079478405973 + H11 ;
143194    +   H12  =     0.03014958331993 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.03014958331993 + H12 ;
143195    +   H13  =    -1.78098671165572 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.78098671165572 + H13 ;
143196    +   H14  =     0.22179429743277 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.22179429743277 + H14 ;
143197    +   H15  =    -2.06602107857898 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -2.06602107857898 + H15 ;
143198    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
143199    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
143200    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
143201    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
143202    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
143203    +END;
MPRINT(EM_DIAGRAM):   END;
143204    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
143205    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
143206    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
143207    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
143208    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
143209    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
143210    +END;
MPRINT(EM_DIAGRAM):   END;
143211    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
143212    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
143213    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
143214    +
143215    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
143216    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
143217    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
143218    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
143219    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
143220    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
143221    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
143222    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
143223    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
143224    +end;
MPRINT(EM_DIAGRAM):   end;
143225    +else do;
MPRINT(EM_DIAGRAM):   else do;
143226    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
143227    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
143228    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
143229    +   end;
MPRINT(EM_DIAGRAM):   end;
143230    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
143231    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
143232    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
143233    +   end;
MPRINT(EM_DIAGRAM):   end;
143234    +   else do;
MPRINT(EM_DIAGRAM):   else do;
143235    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
143236    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
143237    +   end;
MPRINT(EM_DIAGRAM):   end;
143238    +end;
MPRINT(EM_DIAGRAM):   end;
143239    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
143240    +   P_DepVar1  =    -4.55666337815854 * H11  +    -4.04792544554995 * H12
143241    +          +     4.56148127429284 * H13  +     2.36841344452371 * H14
143242    +          +    -3.07371010011749 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.55666337815854 * H11 + -4.04792544554995 * H12 +
4.56148127429284 * H13 + 2.36841344452371 * H14 + -3.07371010011749 * H15 ;
143243    +   P_DepVar1  =    -0.83283406236136 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.83283406236136 + P_DepVar1 ;
143244    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
143245    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
143246    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
143247    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
143248    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
143249    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
143250    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
143251    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
143252    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
143253    +END;
MPRINT(EM_DIAGRAM):   END;
143254    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
143255    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
143256    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
143257    +END;
MPRINT(EM_DIAGRAM):   END;
143258    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
143259    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
143260    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
143261    +END;
MPRINT(EM_DIAGRAM):   END;
143262    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
143263    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
143264    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
143265    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
143266    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
143267    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
143268    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
143269    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
143270    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
143271    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
143272    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
143273    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
143274    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
143275    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
143276    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
143277    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
143278    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
143279    +END;
MPRINT(EM_DIAGRAM):   END;
143280    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
143281    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
143282    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
143283    +drop
143284    +H11
143285    +H12
143286    +H13
143287    +H14
143288    +H15
143289    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
143290    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
143291    +* Renaming variables for Neural34;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural34;
143292    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
143293    +* Renaming Posterior variables for Neural34;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural34;
143294    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
143295    +drop Neural34_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural34_P_DepVar1;
143296    +Neural34_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural34_P_DepVar1 = P_DepVar1;
143297    +drop Neural34_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural34_P_DepVar0;
143298    +Neural34_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural34_P_DepVar0 = P_DepVar0;
143299    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
143300    +* Renaming _WARN_ variable for Neural34;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural34;
143301    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
143302    +length Neural34_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural34_WARN_ $4;
143303    +drop Neural34_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural34_WARN_;
143304    +Neural34_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural34_WARN_ = _WARN_;
143305    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
143306    +* Ensmbl22: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Scoring Code of model 2 of 7;
143307    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
143308    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
143309    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
143310    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
143311    +* NODE: AutoNeural46;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural46;
143312    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
143313    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
143314    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
143315    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
143316    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
143317    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
143318    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
143319    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
143320    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
143321    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
143322    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
143323    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
143324    +LENGTH _WARN_ $4
143325    +      F_DepVar  $ 12
143326    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
143327    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
143328    +
143329    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
143330    +
143331    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
143332    +
143333    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
143334    +
143335    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
143336    +
143337    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
143338    +
143339    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
143340    +
143341    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
143342    +
143343    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
143344    +
143345    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
143346    +
143347    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
143348    +
143349    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
143350    +
143351    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
143352    +
143353    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
143354    +
143355    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
143356    +
143357    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
143358    +
143359    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
143360    +
143361    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
143362    +
143363    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
143364    +
143365    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
143366    +
143367    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
143368    +
143369    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
143370    +
143371    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
143372    +
143373    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
143374    +
143375    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
143376    +
143377    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
143378    +
143379    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
143380    +
143381    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
143382    +
143383    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
143384    +
143385    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
143386    +
143387    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
143388    +
143389    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
143390    +
143391    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
143392    +
143393    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
143394    +
143395    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
143396    +
143397    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
143398    +
143399    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
143400    +
143401    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
143402    +
143403    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
143404    +
143405    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
143406    +
143407    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
143408    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
143409    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
143410    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
143411    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
143412    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
143413    +end;
MPRINT(EM_DIAGRAM):   end;
143414    +else do;
MPRINT(EM_DIAGRAM):   else do;
143415    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
143416    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
143417    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
143418    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
143419    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
143420    +   end;
MPRINT(EM_DIAGRAM):   end;
143421    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
143422    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
143423    +   end;
MPRINT(EM_DIAGRAM):   end;
143424    +   else do;
MPRINT(EM_DIAGRAM):   else do;
143425    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
143426    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
143427    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
143428    +   end;
MPRINT(EM_DIAGRAM):   end;
143429    +end;
MPRINT(EM_DIAGRAM):   end;
143430    +
143431    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
143432    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
143433    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
143434    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
143435    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
143436    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
143437    +end;
MPRINT(EM_DIAGRAM):   end;
143438    +else do;
MPRINT(EM_DIAGRAM):   else do;
143439    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
143440    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
143441    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
143442    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
143443    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
143444    +   end;
MPRINT(EM_DIAGRAM):   end;
143445    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
143446    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
143447    +   end;
MPRINT(EM_DIAGRAM):   end;
143448    +   else do;
MPRINT(EM_DIAGRAM):   else do;
143449    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
143450    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
143451    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
143452    +   end;
MPRINT(EM_DIAGRAM):   end;
143453    +end;
MPRINT(EM_DIAGRAM):   end;
143454    +
143455    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
143456    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
143457    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
143458    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
143459    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
143460    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
143461    +end;
MPRINT(EM_DIAGRAM):   end;
143462    +else do;
MPRINT(EM_DIAGRAM):   else do;
143463    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
143464    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
143465    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
143466    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
143467    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
143468    +   end;
MPRINT(EM_DIAGRAM):   end;
143469    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
143470    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
143471    +   end;
MPRINT(EM_DIAGRAM):   end;
143472    +   else do;
MPRINT(EM_DIAGRAM):   else do;
143473    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
143474    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
143475    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
143476    +   end;
MPRINT(EM_DIAGRAM):   end;
143477    +end;
MPRINT(EM_DIAGRAM):   end;
143478    +
143479    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
143480    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
143481    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
143482    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
143483    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
143484    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
143485    +end;
MPRINT(EM_DIAGRAM):   end;
143486    +else do;
MPRINT(EM_DIAGRAM):   else do;
143487    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
143488    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
143489    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
143490    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
143491    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
143492    +   end;
MPRINT(EM_DIAGRAM):   end;
143493    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
143494    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
143495    +   end;
MPRINT(EM_DIAGRAM):   end;
143496    +   else do;
MPRINT(EM_DIAGRAM):   else do;
143497    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
143498    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
143499    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
143500    +   end;
MPRINT(EM_DIAGRAM):   end;
143501    +end;
MPRINT(EM_DIAGRAM):   end;
143502    +
143503    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
143504    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
143505    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
143506    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
143507    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
143508    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
143509    +end;
MPRINT(EM_DIAGRAM):   end;
143510    +else do;
MPRINT(EM_DIAGRAM):   else do;
143511    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
143512    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
143513    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
143514    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
143515    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
143516    +   end;
MPRINT(EM_DIAGRAM):   end;
143517    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
143518    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
143519    +   end;
MPRINT(EM_DIAGRAM):   end;
143520    +   else do;
MPRINT(EM_DIAGRAM):   else do;
143521    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
143522    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
143523    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
143524    +   end;
MPRINT(EM_DIAGRAM):   end;
143525    +end;
MPRINT(EM_DIAGRAM):   end;
143526    +
143527    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
143528    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
143529    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
143530    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
143531    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
143532    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
143533    +end;
MPRINT(EM_DIAGRAM):   end;
143534    +else do;
MPRINT(EM_DIAGRAM):   else do;
143535    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
143536    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
143537    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
143538    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
143539    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
143540    +   end;
MPRINT(EM_DIAGRAM):   end;
143541    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
143542    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
143543    +   end;
MPRINT(EM_DIAGRAM):   end;
143544    +   else do;
MPRINT(EM_DIAGRAM):   else do;
143545    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
143546    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
143547    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
143548    +   end;
MPRINT(EM_DIAGRAM):   end;
143549    +end;
MPRINT(EM_DIAGRAM):   end;
143550    +
143551    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
143552    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
143553    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
143554    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
143555    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
143556    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
143557    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
143558    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
143559    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
143560    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
143561    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
143562    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
143563    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
143564    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
143565    +end;
MPRINT(EM_DIAGRAM):   end;
143566    +else do;
MPRINT(EM_DIAGRAM):   else do;
143567    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
143568    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
143569    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
143570    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
143571    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
143572    +   end;
MPRINT(EM_DIAGRAM):   end;
143573    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
143574    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
143575    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
143576    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
143577    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
143578    +   end;
MPRINT(EM_DIAGRAM):   end;
143579    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
143580    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
143581    +   end;
MPRINT(EM_DIAGRAM):   end;
143582    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
143583    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
143584    +   end;
MPRINT(EM_DIAGRAM):   end;
143585    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
143586    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
143587    +   end;
MPRINT(EM_DIAGRAM):   end;
143588    +   else do;
MPRINT(EM_DIAGRAM):   else do;
143589    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
143590    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
143591    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
143592    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
143593    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
143594    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
143595    +   end;
MPRINT(EM_DIAGRAM):   end;
143596    +end;
MPRINT(EM_DIAGRAM):   end;
143597    +
143598    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
143599    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
143600    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
143601    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
143602    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
143603    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
143604    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
143605    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
143606    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
143607    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
143608    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
143609    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
143610    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
143611    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
143612    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
143613    +end;
MPRINT(EM_DIAGRAM):   end;
143614    +else do;
MPRINT(EM_DIAGRAM):   else do;
143615    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
143616    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
143617    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
143618    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
143619    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
143620    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
143621    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
143622    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
143623    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
143624    +         end;
MPRINT(EM_DIAGRAM):   end;
143625    +         else do;
MPRINT(EM_DIAGRAM):   else do;
143626    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
143627    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
143628    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
143629    +            end;
MPRINT(EM_DIAGRAM):   end;
143630    +         end;
MPRINT(EM_DIAGRAM):   end;
143631    +      end;
MPRINT(EM_DIAGRAM):   end;
143632    +      else do;
MPRINT(EM_DIAGRAM):   else do;
143633    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
143634    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
143635    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
143636    +         end;
MPRINT(EM_DIAGRAM):   end;
143637    +      end;
MPRINT(EM_DIAGRAM):   end;
143638    +   end;
MPRINT(EM_DIAGRAM):   end;
143639    +   else do;
MPRINT(EM_DIAGRAM):   else do;
143640    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
143641    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
143642    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
143643    +      end;
MPRINT(EM_DIAGRAM):   end;
143644    +      else do;
MPRINT(EM_DIAGRAM):   else do;
143645    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
143646    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
143647    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
143648    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
143649    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
143650    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
143651    +         end;
MPRINT(EM_DIAGRAM):   end;
143652    +      end;
MPRINT(EM_DIAGRAM):   end;
143653    +   end;
MPRINT(EM_DIAGRAM):   end;
143654    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
143655    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
143656    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
143657    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
143658    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
143659    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
143660    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
143661    +   end;
MPRINT(EM_DIAGRAM):   end;
143662    +end;
MPRINT(EM_DIAGRAM):   end;
143663    +
143664    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
143665    +*** Checking missing input Interval
143666    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
143667    +
143668    +IF NMISS(
143669    +   Income ,
143670    +   Kidhome ,
143671    +   MntFishProducts ,
143672    +   MntFruits ,
143673    +   MntGoldProds ,
143674    +   MntMeatProducts ,
143675    +   MntSweetProducts ,
143676    +   MntWines ,
143677    +   NumCatalogPurchases ,
143678    +   NumDealsPurchases ,
143679    +   NumStorePurchases ,
143680    +   NumWebPurchases ,
143681    +   NumWebVisitsMonth ,
143682    +   Recency ,
143683    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
143684    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
143685    +
143686    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
143687    +END;
MPRINT(EM_DIAGRAM):   END;
143688    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
143689    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
143690    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
143691    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
143692    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
143693    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
143694    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
143695    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
143696    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
143697    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
143698    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
143699    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
143700    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
143701    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
143702    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
143703    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
143704    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
143705    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
143706    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
143707    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
143708    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
143709    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
143710    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
143711    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
143712    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
143713    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
143714    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
143715    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
143716    +END;
MPRINT(EM_DIAGRAM):   END;
143717    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
143718    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
143719    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
143720    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
143721    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
143722    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
143723    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
143724    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
143725    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
143726    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
143727    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
143728    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
143729    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
143730    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
143731    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
143732    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
143733    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
143734    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
143735    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
143736    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
143737    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
143738    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
143739    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
143740    +   ELSE S_NumCatalogPurchases
143741    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
143742    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
143743    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
143744    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
143745    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
143746    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
143747    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
143748    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
143749    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
143750    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
143751    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
143752    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
143753    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
143754    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
143755    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
143756    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
143757    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
143758    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
143759    +END;
MPRINT(EM_DIAGRAM):   END;
143760    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
143761    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
143762    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
143763    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
143764    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
143765    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
143766    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
143767    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
143768    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
143769    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
143770    +   H1x1_1  =    -0.14779241211238 * S_Income  +     0.12406923960108 *
143771    +        S_Kidhome  +     0.07566108150758 * S_MntFishProducts
143772    +          +     0.04223936357442 * S_MntFruits  +    -0.01414396912246 *
143773    +        S_MntGoldProds  +    -0.43631543928923 * S_MntMeatProducts
143774    +          +      0.0311909552218 * S_MntSweetProducts
143775    +          +      0.1593908004139 * S_MntWines  +    -0.16331402526215 *
143776    +        S_NumCatalogPurchases  +    -0.08123579404919 * S_NumDealsPurchases
143777    +          +     0.12294876865087 * S_NumStorePurchases
143778    +          +     0.11602382379314 * S_NumWebPurchases
143779    +          +    -0.23519567542635 * S_NumWebVisitsMonth
143780    +          +     0.27617232496223 * S_Recency  +     0.06912944740739 *
143781    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.14779241211238 * S_Income + 0.12406923960108 * S_Kidhome +
0.07566108150758 * S_MntFishProducts + 0.04223936357442 * S_MntFruits + -0.01414396912246 *
S_MntGoldProds + -0.43631543928923 * S_MntMeatProducts + 0.0311909552218 * S_MntSweetProducts
+ 0.1593908004139 * S_MntWines + -0.16331402526215 * S_NumCatalogPurchases + -0.08123579404919
* S_NumDealsPurchases + 0.12294876865087 * S_NumStorePurchases + 0.11602382379314 *
S_NumWebPurchases + -0.23519567542635 * S_NumWebVisitsMonth + 0.27617232496223 * S_Recency +
0.06912944740739 * S_Teenhome ;
143782    +   H1x1_2  =    -0.13491153011654 * S_Income  +     0.14656938917448 *
143783    +        S_Kidhome  +     0.04457005191996 * S_MntFishProducts
143784    +          +     0.00771761834647 * S_MntFruits  +    -0.11830651019438 *
143785    +        S_MntGoldProds  +     0.06464771115751 * S_MntMeatProducts
143786    +          +     0.00133400054994 * S_MntSweetProducts
143787    +          +    -0.63837598558931 * S_MntWines  +     0.09668222160749 *
143788    +        S_NumCatalogPurchases  +     0.23530173987642 * S_NumDealsPurchases
143789    +          +    -0.49595472235036 * S_NumStorePurchases
143790    +          +    -0.24747548015204 * S_NumWebPurchases
143791    +          +     0.12326047694811 * S_NumWebVisitsMonth
143792    +          +    -0.04929000435218 * S_Recency  +     0.00568113597531 *
143793    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.13491153011654 * S_Income + 0.14656938917448 * S_Kidhome +
0.04457005191996 * S_MntFishProducts + 0.00771761834647 * S_MntFruits + -0.11830651019438 *
S_MntGoldProds + 0.06464771115751 * S_MntMeatProducts + 0.00133400054994 * S_MntSweetProducts
+ -0.63837598558931 * S_MntWines + 0.09668222160749 * S_NumCatalogPurchases + 0.23530173987642
* S_NumDealsPurchases + -0.49595472235036 * S_NumStorePurchases + -0.24747548015204 *
S_NumWebPurchases + 0.12326047694811 * S_NumWebVisitsMonth + -0.04929000435218 * S_Recency +
0.00568113597531 * S_Teenhome ;
143794    +   H1x1_3  =     0.13062973754666 * S_Income  +    -0.15311279667585 *
143795    +        S_Kidhome  +      0.0854652628099 * S_MntFishProducts
143796    +          +     0.02260695043189 * S_MntFruits  +    -0.06427354034325 *
143797    +        S_MntGoldProds  +    -0.51556004816788 * S_MntMeatProducts
143798    +          +    -0.03908755288099 * S_MntSweetProducts
143799    +          +    -0.24983513168561 * S_MntWines  +     0.11583370343483 *
143800    +        S_NumCatalogPurchases  +     0.05060583856766 * S_NumDealsPurchases
143801    +          +    -0.20634630081435 * S_NumStorePurchases
143802    +          +    -0.06734935798888 * S_NumWebPurchases
143803    +          +     0.32288250215418 * S_NumWebVisitsMonth
143804    +          +    -0.32978147839937 * S_Recency  +    -0.07420334428475 *
143805    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.13062973754666 * S_Income + -0.15311279667585 * S_Kidhome +
0.0854652628099 * S_MntFishProducts + 0.02260695043189 * S_MntFruits + -0.06427354034325 *
S_MntGoldProds + -0.51556004816788 * S_MntMeatProducts + -0.03908755288099 *
S_MntSweetProducts + -0.24983513168561 * S_MntWines + 0.11583370343483 * S_NumCatalogPurchases
+ 0.05060583856766 * S_NumDealsPurchases + -0.20634630081435 * S_NumStorePurchases +
-0.06734935798888 * S_NumWebPurchases + 0.32288250215418 * S_NumWebVisitsMonth +
-0.32978147839937 * S_Recency + -0.07420334428475 * S_Teenhome ;
143806    +   H1x1_1  = H1x1_1  +     0.14311220987159 * AcceptedCmp10
143807    +          +     0.25596748420576 * AcceptedCmp20  +     0.13199169114019 *
143808    +        AcceptedCmp30  +     0.14111066281846 * AcceptedCmp40
143809    +          +     0.16136804502708 * AcceptedCmp50  +     0.06340055511955 *
143810    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.14311220987159 * AcceptedCmp10 + 0.25596748420576 *
AcceptedCmp20 + 0.13199169114019 * AcceptedCmp30 + 0.14111066281846 * AcceptedCmp40 +
0.16136804502708 * AcceptedCmp50 + 0.06340055511955 * Complain0 ;
143811    +   H1x1_2  = H1x1_2  +     0.07692946904386 * AcceptedCmp10
143812    +          +     0.10129736414747 * AcceptedCmp20  +    -0.08526063108983 *
143813    +        AcceptedCmp30  +     0.00391518443243 * AcceptedCmp40
143814    +          +    -0.11013908503956 * AcceptedCmp50  +     0.03814032229209 *
143815    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.07692946904386 * AcceptedCmp10 + 0.10129736414747 *
AcceptedCmp20 + -0.08526063108983 * AcceptedCmp30 + 0.00391518443243 * AcceptedCmp40 +
-0.11013908503956 * AcceptedCmp50 + 0.03814032229209 * Complain0 ;
143816    +   H1x1_3  = H1x1_3  +    -0.02206432573422 * AcceptedCmp10
143817    +          +     0.22410311196864 * AcceptedCmp20  +    -0.19387020375313 *
143818    +        AcceptedCmp30  +    -0.12058647992586 * AcceptedCmp40
143819    +          +    -0.09809197464918 * AcceptedCmp50  +    -0.09604584189983 *
143820    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.02206432573422 * AcceptedCmp10 + 0.22410311196864 *
AcceptedCmp20 + -0.19387020375313 * AcceptedCmp30 + -0.12058647992586 * AcceptedCmp40 +
-0.09809197464918 * AcceptedCmp50 + -0.09604584189983 * Complain0 ;
143821    +   H1x1_1  = H1x1_1  +    -0.00017476927899 * Education2n_Cycle
143822    +          +    -0.15306731287208 * EducationBasic  +     0.04951359729631 *
143823    +        EducationGraduation  +     0.07475697967073 * EducationMaster
143824    +          +    -0.04265434587882 * Marital_StatusDivorced
143825    +          +     0.17114014094758 * Marital_StatusMarried
143826    +          +     -0.1537035921296 * Marital_StatusSingle
143827    +          +     0.15023718360478 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.00017476927899 * Education2n_Cycle +
-0.15306731287208 * EducationBasic + 0.04951359729631 * EducationGraduation + 0.07475697967073
* EducationMaster + -0.04265434587882 * Marital_StatusDivorced + 0.17114014094758 *
Marital_StatusMarried + -0.1537035921296 * Marital_StatusSingle + 0.15023718360478 *
Marital_StatusTogether ;
143828    +   H1x1_2  = H1x1_2  +     0.10391719023548 * Education2n_Cycle
143829    +          +    -0.71597921887555 * EducationBasic  +     0.38732833028427 *
143830    +        EducationGraduation  +     0.04507684017588 * EducationMaster
143831    +          +     0.25534272809394 * Marital_StatusDivorced
143832    +          +     0.20034903346804 * Marital_StatusMarried
143833    +          +    -0.38348393943797 * Marital_StatusSingle
143834    +          +     0.15254304652439 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.10391719023548 * Education2n_Cycle +
-0.71597921887555 * EducationBasic + 0.38732833028427 * EducationGraduation + 0.04507684017588
* EducationMaster + 0.25534272809394 * Marital_StatusDivorced + 0.20034903346804 *
Marital_StatusMarried + -0.38348393943797 * Marital_StatusSingle + 0.15254304652439 *
Marital_StatusTogether ;
143835    +   H1x1_3  = H1x1_3  +     0.06104667656786 * Education2n_Cycle
143836    +          +     -0.0935234366994 * EducationBasic  +     0.09446977823229 *
143837    +        EducationGraduation  +    -0.11683780234266 * EducationMaster
143838    +          +      0.1988416043876 * Marital_StatusDivorced
143839    +          +    -0.21663959478684 * Marital_StatusMarried
143840    +          +     0.06591480171547 * Marital_StatusSingle
143841    +          +    -0.17108581516048 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.06104667656786 * Education2n_Cycle +
-0.0935234366994 * EducationBasic + 0.09446977823229 * EducationGraduation + -0.11683780234266
* EducationMaster + 0.1988416043876 * Marital_StatusDivorced + -0.21663959478684 *
Marital_StatusMarried + 0.06591480171547 * Marital_StatusSingle + -0.17108581516048 *
Marital_StatusTogether ;
143842    +   H1x1_1  =     0.12085771569539 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.12085771569539 + H1x1_1 ;
143843    +   H1x1_2  =     1.88026862462696 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.88026862462696 + H1x1_2 ;
143844    +   H1x1_3  =    -1.66768306479405 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.66768306479405 + H1x1_3 ;
143845    +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
143846    +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
143847    +   H1x1_3  = SIN(H1x1_3 );
MPRINT(EM_DIAGRAM):   H1x1_3 = SIN(H1x1_3 );
143848    +END;
MPRINT(EM_DIAGRAM):   END;
143849    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
143850    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
143851    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
143852    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
143853    +END;
MPRINT(EM_DIAGRAM):   END;
143854    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
143855    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
143856    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
143857    +
143858    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
143859    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
143860    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
143861    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
143862    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
143863    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
143864    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
143865    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
143866    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
143867    +end;
MPRINT(EM_DIAGRAM):   end;
143868    +else do;
MPRINT(EM_DIAGRAM):   else do;
143869    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
143870    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
143871    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
143872    +   end;
MPRINT(EM_DIAGRAM):   end;
143873    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
143874    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
143875    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
143876    +   end;
MPRINT(EM_DIAGRAM):   end;
143877    +   else do;
MPRINT(EM_DIAGRAM):   else do;
143878    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
143879    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
143880    +   end;
MPRINT(EM_DIAGRAM):   end;
143881    +end;
MPRINT(EM_DIAGRAM):   end;
143882    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
143883    +   P_DepVar1  =    -105.465737701328 * H1x1_1  +    -25.9919910307682 * H1x1_2
143884    +          +    -60.7557666068018 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -105.465737701328 * H1x1_1 + -25.9919910307682 * H1x1_2 +
-60.7557666068018 * H1x1_3 ;
143885    +   P_DepVar1  =     17.0796398396243 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 17.0796398396243 + P_DepVar1 ;
143886    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
143887    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
143888    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
143889    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
143890    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
143891    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
143892    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
143893    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
143894    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
143895    +END;
MPRINT(EM_DIAGRAM):   END;
143896    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
143897    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
143898    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
143899    +END;
MPRINT(EM_DIAGRAM):   END;
143900    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
143901    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
143902    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
143903    +END;
MPRINT(EM_DIAGRAM):   END;
143904    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
143905    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
143906    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
143907    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
143908    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
143909    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
143910    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
143911    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
143912    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
143913    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
143914    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
143915    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
143916    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
143917    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
143918    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
143919    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
143920    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
143921    +END;
MPRINT(EM_DIAGRAM):   END;
143922    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
143923    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
143924    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
143925    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
143926    +* Renaming variables for AutoNeural46;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural46;
143927    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
143928    +* Renaming Posterior variables for AutoNeural46;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural46;
143929    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
143930    +drop AutoNeural46_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural46_P_DepVar1;
143931    +AutoNeural46_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural46_P_DepVar1 = P_DepVar1;
143932    +drop AutoNeural46_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural46_P_DepVar0;
143933    +AutoNeural46_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural46_P_DepVar0 = P_DepVar0;
143934    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
143935    +* Renaming _WARN_ variable for AutoNeural46;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural46;
143936    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
143937    +length AutoNeural46_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural46_WARN_ $4;
143938    +drop AutoNeural46_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural46_WARN_;
143939    +AutoNeural46_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural46_WARN_ = _WARN_;
143940    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
143941    +* Ensmbl22: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Scoring Code of model 3 of 7;
143942    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
143943    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
143944    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
143945    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
143946    +* NODE: AutoNeural42;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural42;
143947    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
143948    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
143949    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
143950    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
143951    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
143952    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
143953    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
143954    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
143955    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
143956    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
143957    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
143958    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
143959    +LENGTH _WARN_ $4
143960    +      F_DepVar  $ 12
143961    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
143962    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
143963    +
143964    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
143965    +
143966    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
143967    +
143968    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
143969    +
143970    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
143971    +
143972    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
143973    +
143974    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
143975    +
143976    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
143977    +
143978    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
143979    +
143980    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
143981    +
143982    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
143983    +
143984    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
143985    +
143986    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
143987    +
143988    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
143989    +
143990    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
143991    +
143992    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
143993    +
143994    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
143995    +
143996    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
143997    +
143998    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
143999    +
144000    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
144001    +
144002    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
144003    +
144004    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
144005    +
144006    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
144007    +
144008    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
144009    +
144010    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
144011    +
144012    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
144013    +
144014    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
144015    +
144016    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
144017    +
144018    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
144019    +
144020    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
144021    +
144022    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
144023    +
144024    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
144025    +
144026    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
144027    +
144028    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
144029    +
144030    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
144031    +
144032    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
144033    +
144034    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
144035    +
144036    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
144037    +
144038    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
144039    +
144040    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
144041    +
144042    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
144043    +
144044    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
144045    +
144046    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
144047    +
144048    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
144049    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
144050    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
144051    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
144052    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
144053    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
144054    +end;
MPRINT(EM_DIAGRAM):   end;
144055    +else do;
MPRINT(EM_DIAGRAM):   else do;
144056    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
144057    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
144058    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
144059    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
144060    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
144061    +   end;
MPRINT(EM_DIAGRAM):   end;
144062    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
144063    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
144064    +   end;
MPRINT(EM_DIAGRAM):   end;
144065    +   else do;
MPRINT(EM_DIAGRAM):   else do;
144066    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
144067    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
144068    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
144069    +   end;
MPRINT(EM_DIAGRAM):   end;
144070    +end;
MPRINT(EM_DIAGRAM):   end;
144071    +
144072    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
144073    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
144074    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
144075    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
144076    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
144077    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
144078    +end;
MPRINT(EM_DIAGRAM):   end;
144079    +else do;
MPRINT(EM_DIAGRAM):   else do;
144080    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
144081    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
144082    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
144083    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
144084    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
144085    +   end;
MPRINT(EM_DIAGRAM):   end;
144086    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
144087    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
144088    +   end;
MPRINT(EM_DIAGRAM):   end;
144089    +   else do;
MPRINT(EM_DIAGRAM):   else do;
144090    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
144091    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
144092    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
144093    +   end;
MPRINT(EM_DIAGRAM):   end;
144094    +end;
MPRINT(EM_DIAGRAM):   end;
144095    +
144096    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
144097    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
144098    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
144099    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
144100    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
144101    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
144102    +end;
MPRINT(EM_DIAGRAM):   end;
144103    +else do;
MPRINT(EM_DIAGRAM):   else do;
144104    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
144105    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
144106    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
144107    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
144108    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
144109    +   end;
MPRINT(EM_DIAGRAM):   end;
144110    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
144111    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
144112    +   end;
MPRINT(EM_DIAGRAM):   end;
144113    +   else do;
MPRINT(EM_DIAGRAM):   else do;
144114    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
144115    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
144116    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
144117    +   end;
MPRINT(EM_DIAGRAM):   end;
144118    +end;
MPRINT(EM_DIAGRAM):   end;
144119    +
144120    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
144121    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
144122    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
144123    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
144124    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
144125    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
144126    +end;
MPRINT(EM_DIAGRAM):   end;
144127    +else do;
MPRINT(EM_DIAGRAM):   else do;
144128    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
144129    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
144130    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
144131    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
144132    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
144133    +   end;
MPRINT(EM_DIAGRAM):   end;
144134    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
144135    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
144136    +   end;
MPRINT(EM_DIAGRAM):   end;
144137    +   else do;
MPRINT(EM_DIAGRAM):   else do;
144138    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
144139    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
144140    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
144141    +   end;
MPRINT(EM_DIAGRAM):   end;
144142    +end;
MPRINT(EM_DIAGRAM):   end;
144143    +
144144    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
144145    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
144146    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
144147    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
144148    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
144149    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
144150    +end;
MPRINT(EM_DIAGRAM):   end;
144151    +else do;
MPRINT(EM_DIAGRAM):   else do;
144152    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
144153    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
144154    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
144155    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
144156    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
144157    +   end;
MPRINT(EM_DIAGRAM):   end;
144158    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
144159    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
144160    +   end;
MPRINT(EM_DIAGRAM):   end;
144161    +   else do;
MPRINT(EM_DIAGRAM):   else do;
144162    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
144163    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
144164    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
144165    +   end;
MPRINT(EM_DIAGRAM):   end;
144166    +end;
MPRINT(EM_DIAGRAM):   end;
144167    +
144168    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
144169    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
144170    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
144171    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
144172    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
144173    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
144174    +end;
MPRINT(EM_DIAGRAM):   end;
144175    +else do;
MPRINT(EM_DIAGRAM):   else do;
144176    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
144177    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
144178    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
144179    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
144180    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
144181    +   end;
MPRINT(EM_DIAGRAM):   end;
144182    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
144183    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
144184    +   end;
MPRINT(EM_DIAGRAM):   end;
144185    +   else do;
MPRINT(EM_DIAGRAM):   else do;
144186    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
144187    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
144188    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
144189    +   end;
MPRINT(EM_DIAGRAM):   end;
144190    +end;
MPRINT(EM_DIAGRAM):   end;
144191    +
144192    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
144193    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
144194    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
144195    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
144196    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
144197    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
144198    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
144199    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
144200    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
144201    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
144202    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
144203    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
144204    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
144205    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
144206    +end;
MPRINT(EM_DIAGRAM):   end;
144207    +else do;
MPRINT(EM_DIAGRAM):   else do;
144208    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
144209    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
144210    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
144211    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
144212    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
144213    +   end;
MPRINT(EM_DIAGRAM):   end;
144214    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
144215    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
144216    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
144217    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
144218    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
144219    +   end;
MPRINT(EM_DIAGRAM):   end;
144220    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
144221    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
144222    +   end;
MPRINT(EM_DIAGRAM):   end;
144223    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
144224    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
144225    +   end;
MPRINT(EM_DIAGRAM):   end;
144226    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
144227    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
144228    +   end;
MPRINT(EM_DIAGRAM):   end;
144229    +   else do;
MPRINT(EM_DIAGRAM):   else do;
144230    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
144231    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
144232    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
144233    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
144234    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
144235    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
144236    +   end;
MPRINT(EM_DIAGRAM):   end;
144237    +end;
MPRINT(EM_DIAGRAM):   end;
144238    +
144239    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
144240    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
144241    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
144242    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
144243    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
144244    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
144245    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
144246    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
144247    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
144248    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
144249    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
144250    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
144251    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
144252    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
144253    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
144254    +end;
MPRINT(EM_DIAGRAM):   end;
144255    +else do;
MPRINT(EM_DIAGRAM):   else do;
144256    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
144257    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
144258    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
144259    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
144260    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
144261    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
144262    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
144263    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
144264    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
144265    +         end;
MPRINT(EM_DIAGRAM):   end;
144266    +         else do;
MPRINT(EM_DIAGRAM):   else do;
144267    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
144268    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
144269    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
144270    +            end;
MPRINT(EM_DIAGRAM):   end;
144271    +         end;
MPRINT(EM_DIAGRAM):   end;
144272    +      end;
MPRINT(EM_DIAGRAM):   end;
144273    +      else do;
MPRINT(EM_DIAGRAM):   else do;
144274    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
144275    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
144276    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
144277    +         end;
MPRINT(EM_DIAGRAM):   end;
144278    +      end;
MPRINT(EM_DIAGRAM):   end;
144279    +   end;
MPRINT(EM_DIAGRAM):   end;
144280    +   else do;
MPRINT(EM_DIAGRAM):   else do;
144281    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
144282    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
144283    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
144284    +      end;
MPRINT(EM_DIAGRAM):   end;
144285    +      else do;
MPRINT(EM_DIAGRAM):   else do;
144286    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
144287    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
144288    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
144289    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
144290    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
144291    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
144292    +         end;
MPRINT(EM_DIAGRAM):   end;
144293    +      end;
MPRINT(EM_DIAGRAM):   end;
144294    +   end;
MPRINT(EM_DIAGRAM):   end;
144295    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
144296    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
144297    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
144298    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
144299    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
144300    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
144301    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
144302    +   end;
MPRINT(EM_DIAGRAM):   end;
144303    +end;
MPRINT(EM_DIAGRAM):   end;
144304    +
144305    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
144306    +*** Checking missing input Interval
144307    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
144308    +
144309    +IF NMISS(
144310    +   Income ,
144311    +   Kidhome ,
144312    +   MntFishProducts ,
144313    +   MntFruits ,
144314    +   MntGoldProds ,
144315    +   MntMeatProducts ,
144316    +   MntSweetProducts ,
144317    +   MntWines ,
144318    +   NumCatalogPurchases ,
144319    +   NumDealsPurchases ,
144320    +   NumStorePurchases ,
144321    +   NumWebPurchases ,
144322    +   NumWebVisitsMonth ,
144323    +   Recency ,
144324    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
144325    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
144326    +
144327    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
144328    +END;
MPRINT(EM_DIAGRAM):   END;
144329    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
144330    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
144331    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
144332    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
144333    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
144334    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
144335    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
144336    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
144337    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
144338    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
144339    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
144340    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
144341    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
144342    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
144343    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
144344    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
144345    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
144346    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
144347    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
144348    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
144349    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
144350    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
144351    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
144352    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
144353    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
144354    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
144355    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
144356    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
144357    +END;
MPRINT(EM_DIAGRAM):   END;
144358    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
144359    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
144360    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
144361    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
144362    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
144363    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
144364    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
144365    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
144366    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
144367    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
144368    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
144369    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
144370    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
144371    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
144372    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
144373    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
144374    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
144375    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
144376    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
144377    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
144378    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
144379    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
144380    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
144381    +   ELSE S_NumCatalogPurchases
144382    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
144383    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
144384    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
144385    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
144386    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
144387    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
144388    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
144389    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
144390    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
144391    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
144392    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
144393    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
144394    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
144395    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
144396    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
144397    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
144398    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
144399    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
144400    +END;
MPRINT(EM_DIAGRAM):   END;
144401    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
144402    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
144403    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
144404    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
144405    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
144406    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
144407    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
144408    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
144409    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
144410    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
144411    +   H1x1_1  =    -0.61752831165943 * S_Income  +    -0.31903138173339 *
144412    +        S_Kidhome  +     1.07644564135555 * S_MntFishProducts
144413    +          +     0.65454839379318 * S_MntFruits  +    -0.14959507038031 *
144414    +        S_MntGoldProds  +    -5.93493457217182 * S_MntMeatProducts
144415    +          +     0.13203247258141 * S_MntSweetProducts
144416    +          +     2.56195281130506 * S_MntWines  +    -1.36884424558249 *
144417    +        S_NumCatalogPurchases  +    -0.86876556455629 * S_NumDealsPurchases
144418    +          +     1.48881174203434 * S_NumStorePurchases
144419    +          +     2.06403591844726 * S_NumWebPurchases
144420    +          +    -0.09535558759694 * S_NumWebVisitsMonth
144421    +          +    -0.05978552253526 * S_Recency  +     0.15007435747359 *
144422    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.61752831165943 * S_Income + -0.31903138173339 * S_Kidhome +
1.07644564135555 * S_MntFishProducts + 0.65454839379318 * S_MntFruits + -0.14959507038031 *
S_MntGoldProds + -5.93493457217182 * S_MntMeatProducts + 0.13203247258141 * S_MntSweetProducts
+ 2.56195281130506 * S_MntWines + -1.36884424558249 * S_NumCatalogPurchases +
-0.86876556455629 * S_NumDealsPurchases + 1.48881174203434 * S_NumStorePurchases +
2.06403591844726 * S_NumWebPurchases + -0.09535558759694 * S_NumWebVisitsMonth +
-0.05978552253526 * S_Recency + 0.15007435747359 * S_Teenhome ;
144423    +   H1x1_2  =     0.26608479656795 * S_Income  +    -1.19991366958494 *
144424    +        S_Kidhome  +    -0.06930701896636 * S_MntFishProducts
144425    +          +    -0.24491476793503 * S_MntFruits  +     0.61341878614078 *
144426    +        S_MntGoldProds  +     1.20573081926043 * S_MntMeatProducts
144427    +          +      0.3852767951223 * S_MntSweetProducts
144428    +          +     1.08228250264945 * S_MntWines  +     0.60642303652873 *
144429    +        S_NumCatalogPurchases  +     0.15318179926318 * S_NumDealsPurchases
144430    +          +     0.87686526091024 * S_NumStorePurchases
144431    +          +     0.48807967312664 * S_NumWebPurchases
144432    +          +     2.42770807785792 * S_NumWebVisitsMonth
144433    +          +      -2.239057176324 * S_Recency  +    -0.38694456406673 *
144434    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.26608479656795 * S_Income + -1.19991366958494 * S_Kidhome +
-0.06930701896636 * S_MntFishProducts + -0.24491476793503 * S_MntFruits + 0.61341878614078 *
S_MntGoldProds + 1.20573081926043 * S_MntMeatProducts + 0.3852767951223 * S_MntSweetProducts +
1.08228250264945 * S_MntWines + 0.60642303652873 * S_NumCatalogPurchases + 0.15318179926318 *
S_NumDealsPurchases + 0.87686526091024 * S_NumStorePurchases + 0.48807967312664 *
S_NumWebPurchases + 2.42770807785792 * S_NumWebVisitsMonth + -2.239057176324 * S_Recency +
-0.38694456406673 * S_Teenhome ;
144435    +   H1x1_3  =     2.14026785899485 * S_Income  +     0.71085813088393 *
144436    +        S_Kidhome  +    -0.12119457643873 * S_MntFishProducts
144437    +          +     0.52522197349122 * S_MntFruits  +     0.44706934196977 *
144438    +        S_MntGoldProds  +     1.26484530402043 * S_MntMeatProducts
144439    +          +      0.4461192743946 * S_MntSweetProducts
144440    +          +     0.68849791421776 * S_MntWines  +     0.73332275156447 *
144441    +        S_NumCatalogPurchases  +     0.25950906585502 * S_NumDealsPurchases
144442    +          +     1.26831094932108 * S_NumStorePurchases
144443    +          +     0.50819627174451 * S_NumWebPurchases
144444    +          +      0.5463426309003 * S_NumWebVisitsMonth
144445    +          +    -1.45156203280121 * S_Recency  +    -0.99155600458731 *
144446    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.14026785899485 * S_Income + 0.71085813088393 * S_Kidhome +
-0.12119457643873 * S_MntFishProducts + 0.52522197349122 * S_MntFruits + 0.44706934196977 *
S_MntGoldProds + 1.26484530402043 * S_MntMeatProducts + 0.4461192743946 * S_MntSweetProducts +
0.68849791421776 * S_MntWines + 0.73332275156447 * S_NumCatalogPurchases + 0.25950906585502 *
S_NumDealsPurchases + 1.26831094932108 * S_NumStorePurchases + 0.50819627174451 *
S_NumWebPurchases + 0.5463426309003 * S_NumWebVisitsMonth + -1.45156203280121 * S_Recency +
-0.99155600458731 * S_Teenhome ;
144447    +   H1x1_4  =     0.28134858392415 * S_Income  +     1.57838616473011 *
144448    +        S_Kidhome  +     0.01685933792865 * S_MntFishProducts
144449    +          +     0.64818795957189 * S_MntFruits  +     0.44053765721056 *
144450    +        S_MntGoldProds  +     -0.0350414210023 * S_MntMeatProducts
144451    +          +     0.73630834236265 * S_MntSweetProducts
144452    +          +     2.20164313777354 * S_MntWines  +    -0.71244138939707 *
144453    +        S_NumCatalogPurchases  +    -0.05218003711946 * S_NumDealsPurchases
144454    +          +     2.08815797619397 * S_NumStorePurchases
144455    +          +     1.47250122683369 * S_NumWebPurchases
144456    +          +    -1.95745344341946 * S_NumWebVisitsMonth
144457    +          +     1.52461902721397 * S_Recency  +     0.07114080397665 *
144458    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.28134858392415 * S_Income + 1.57838616473011 * S_Kidhome +
0.01685933792865 * S_MntFishProducts + 0.64818795957189 * S_MntFruits + 0.44053765721056 *
S_MntGoldProds + -0.0350414210023 * S_MntMeatProducts + 0.73630834236265 * S_MntSweetProducts
+ 2.20164313777354 * S_MntWines + -0.71244138939707 * S_NumCatalogPurchases +
-0.05218003711946 * S_NumDealsPurchases + 2.08815797619397 * S_NumStorePurchases +
1.47250122683369 * S_NumWebPurchases + -1.95745344341946 * S_NumWebVisitsMonth +
1.52461902721397 * S_Recency + 0.07114080397665 * S_Teenhome ;
144459    +   H1x1_5  =     0.06299419029838 * S_Income  +    -0.25263043424438 *
144460    +        S_Kidhome  +    -0.72407836360298 * S_MntFishProducts
144461    +          +     0.46240377706589 * S_MntFruits  +    -0.31168917499552 *
144462    +        S_MntGoldProds  +     3.17795585534164 * S_MntMeatProducts
144463    +          +    -0.23438993753342 * S_MntSweetProducts
144464    +          +     -2.0392497753494 * S_MntWines  +      1.0094456692298 *
144465    +        S_NumCatalogPurchases  +     1.21992922429388 * S_NumDealsPurchases
144466    +          +    -0.49697408067153 * S_NumStorePurchases
144467    +          +     0.41091736049576 * S_NumWebPurchases
144468    +          +     1.61180593172142 * S_NumWebVisitsMonth
144469    +          +    -2.15417652342106 * S_Recency  +    -0.30863432234672 *
144470    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.06299419029838 * S_Income + -0.25263043424438 * S_Kidhome +
-0.72407836360298 * S_MntFishProducts + 0.46240377706589 * S_MntFruits + -0.31168917499552 *
S_MntGoldProds + 3.17795585534164 * S_MntMeatProducts + -0.23438993753342 * S_MntSweetProducts
+ -2.0392497753494 * S_MntWines + 1.0094456692298 * S_NumCatalogPurchases + 1.21992922429388 *
S_NumDealsPurchases + -0.49697408067153 * S_NumStorePurchases + 0.41091736049576 *
S_NumWebPurchases + 1.61180593172142 * S_NumWebVisitsMonth + -2.15417652342106 * S_Recency +
-0.30863432234672 * S_Teenhome ;
144471    +   H1x1_1  = H1x1_1  +     1.15191639869453 * AcceptedCmp10
144472    +          +      0.0367982148477 * AcceptedCmp20  +      0.3258650789605 *
144473    +        AcceptedCmp30  +      0.2580514232707 * AcceptedCmp40
144474    +          +     0.63958723501202 * AcceptedCmp50  +    -0.32640656229888 *
144475    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.15191639869453 * AcceptedCmp10 + 0.0367982148477 *
AcceptedCmp20 + 0.3258650789605 * AcceptedCmp30 + 0.2580514232707 * AcceptedCmp40 +
0.63958723501202 * AcceptedCmp50 + -0.32640656229888 * Complain0 ;
144476    +   H1x1_2  = H1x1_2  +    -1.74950558446111 * AcceptedCmp10
144477    +          +    -0.90356166498734 * AcceptedCmp20  +    -1.23130580993933 *
144478    +        AcceptedCmp30  +     -1.4169795699816 * AcceptedCmp40
144479    +          +    -1.78889837976364 * AcceptedCmp50  +      1.4788954382262 *
144480    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.74950558446111 * AcceptedCmp10 + -0.90356166498734
* AcceptedCmp20 + -1.23130580993933 * AcceptedCmp30 + -1.4169795699816 * AcceptedCmp40 +
-1.78889837976364 * AcceptedCmp50 + 1.4788954382262 * Complain0 ;
144481    +   H1x1_3  = H1x1_3  +     0.19640584758608 * AcceptedCmp10
144482    +          +    -0.02812292141076 * AcceptedCmp20  +     0.18411950002405 *
144483    +        AcceptedCmp30  +     0.14654389018041 * AcceptedCmp40
144484    +          +    -0.73289230090736 * AcceptedCmp50  +    -0.18955862978745 *
144485    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.19640584758608 * AcceptedCmp10 + -0.02812292141076 *
AcceptedCmp20 + 0.18411950002405 * AcceptedCmp30 + 0.14654389018041 * AcceptedCmp40 +
-0.73289230090736 * AcceptedCmp50 + -0.18955862978745 * Complain0 ;
144486    +   H1x1_4  = H1x1_4  +     0.60930619563149 * AcceptedCmp10
144487    +          +     0.56372104821368 * AcceptedCmp20  +     1.23124531565034 *
144488    +        AcceptedCmp30  +     1.16511385622377 * AcceptedCmp40
144489    +          +     0.83299036807857 * AcceptedCmp50  +    -0.87889366207671 *
144490    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.60930619563149 * AcceptedCmp10 + 0.56372104821368 *
AcceptedCmp20 + 1.23124531565034 * AcceptedCmp30 + 1.16511385622377 * AcceptedCmp40 +
0.83299036807857 * AcceptedCmp50 + -0.87889366207671 * Complain0 ;
144491    +   H1x1_5  = H1x1_5  +    -1.02627214772402 * AcceptedCmp10
144492    +          +    -0.35326081554996 * AcceptedCmp20  +    -0.45229632523083 *
144493    +        AcceptedCmp30  +    -0.88576020203346 * AcceptedCmp40
144494    +          +    -0.25524770878943 * AcceptedCmp50  +    -0.58775156249673 *
144495    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -1.02627214772402 * AcceptedCmp10 + -0.35326081554996
* AcceptedCmp20 + -0.45229632523083 * AcceptedCmp30 + -0.88576020203346 * AcceptedCmp40 +
-0.25524770878943 * AcceptedCmp50 + -0.58775156249673 * Complain0 ;
144496    +   H1x1_1  = H1x1_1  +    -0.20048115002767 * Education2n_Cycle
144497    +          +     0.10477823552379 * EducationBasic  +    -0.09122776507376 *
144498    +        EducationGraduation  +    -0.01483389086199 * EducationMaster
144499    +          +    -0.14951932081311 * Marital_StatusDivorced
144500    +          +     0.08343648358981 * Marital_StatusMarried
144501    +          +    -0.52143432598374 * Marital_StatusSingle
144502    +          +    -0.17799942229122 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.20048115002767 * Education2n_Cycle +
0.10477823552379 * EducationBasic + -0.09122776507376 * EducationGraduation +
-0.01483389086199 * EducationMaster + -0.14951932081311 * Marital_StatusDivorced +
0.08343648358981 * Marital_StatusMarried + -0.52143432598374 * Marital_StatusSingle +
-0.17799942229122 * Marital_StatusTogether ;
144503    +   H1x1_2  = H1x1_2  +    -0.06492224317117 * Education2n_Cycle
144504    +          +     0.50630082280639 * EducationBasic  +    -0.32521089553297 *
144505    +        EducationGraduation  +    -0.38968023972702 * EducationMaster
144506    +          +    -0.34495973695408 * Marital_StatusDivorced
144507    +          +    -0.30910829853532 * Marital_StatusMarried
144508    +          +     0.14431404541055 * Marital_StatusSingle
144509    +          +    -0.62673029935295 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.06492224317117 * Education2n_Cycle +
0.50630082280639 * EducationBasic + -0.32521089553297 * EducationGraduation +
-0.38968023972702 * EducationMaster + -0.34495973695408 * Marital_StatusDivorced +
-0.30910829853532 * Marital_StatusMarried + 0.14431404541055 * Marital_StatusSingle +
-0.62673029935295 * Marital_StatusTogether ;
144510    +   H1x1_3  = H1x1_3  +     0.41266521248037 * Education2n_Cycle
144511    +          +    -0.11192325989817 * EducationBasic  +    -0.96742524784448 *
144512    +        EducationGraduation  +     0.05582780345024 * EducationMaster
144513    +          +     0.81191732290197 * Marital_StatusDivorced
144514    +          +    -2.53108753227171 * Marital_StatusMarried
144515    +          +     2.21769123178832 * Marital_StatusSingle
144516    +          +    -0.90613443546426 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.41266521248037 * Education2n_Cycle +
-0.11192325989817 * EducationBasic + -0.96742524784448 * EducationGraduation +
0.05582780345024 * EducationMaster + 0.81191732290197 * Marital_StatusDivorced +
-2.53108753227171 * Marital_StatusMarried + 2.21769123178832 * Marital_StatusSingle +
-0.90613443546426 * Marital_StatusTogether ;
144517    +   H1x1_4  = H1x1_4  +    -0.08882031994616 * Education2n_Cycle
144518    +          +     0.59640481500702 * EducationBasic  +    -0.75285942189639 *
144519    +        EducationGraduation  +     0.52527957409681 * EducationMaster
144520    +          +    -1.26246836163545 * Marital_StatusDivorced
144521    +          +     0.73147045162506 * Marital_StatusMarried
144522    +          +     0.04252836823306 * Marital_StatusSingle
144523    +          +     1.44915119635375 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.08882031994616 * Education2n_Cycle +
0.59640481500702 * EducationBasic + -0.75285942189639 * EducationGraduation + 0.52527957409681
* EducationMaster + -1.26246836163545 * Marital_StatusDivorced + 0.73147045162506 *
Marital_StatusMarried + 0.04252836823306 * Marital_StatusSingle + 1.44915119635375 *
Marital_StatusTogether ;
144524    +   H1x1_5  = H1x1_5  +    -0.24370046099656 * Education2n_Cycle
144525    +          +     0.03233873053213 * EducationBasic  +      0.1375198926931 *
144526    +        EducationGraduation  +      0.0979905405754 * EducationMaster
144527    +          +    -0.25571808514992 * Marital_StatusDivorced
144528    +          +     0.20684027342845 * Marital_StatusMarried
144529    +          +    -0.36983627747986 * Marital_StatusSingle
144530    +          +    -0.08239173696723 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.24370046099656 * Education2n_Cycle +
0.03233873053213 * EducationBasic + 0.1375198926931 * EducationGraduation + 0.0979905405754 *
EducationMaster + -0.25571808514992 * Marital_StatusDivorced + 0.20684027342845 *
Marital_StatusMarried + -0.36983627747986 * Marital_StatusSingle + -0.08239173696723 *
Marital_StatusTogether ;
144531    +   H1x1_1  =    -0.01788649837565 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.01788649837565 + H1x1_1 ;
144532    +   H1x1_2  =     1.77562113267961 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.77562113267961 + H1x1_2 ;
144533    +   H1x1_3  =    -1.36483909507433 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.36483909507433 + H1x1_3 ;
144534    +   H1x1_4  =    -0.17103473926556 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.17103473926556 + H1x1_4 ;
144535    +   H1x1_5  =     0.17065963901812 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.17065963901812 + H1x1_5 ;
144536    +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
144537    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
144538    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
144539    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
144540    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
144541    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
144542    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
144543    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
144544    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
144545    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
144546    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
144547    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
144548    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
144549    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
144550    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
144551    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
144552    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
144553    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
144554    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
144555    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
144556    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
144557    +END;
MPRINT(EM_DIAGRAM):   END;
144558    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
144559    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
144560    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
144561    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
144562    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
144563    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
144564    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
144565    +END;
MPRINT(EM_DIAGRAM):   END;
144566    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
144567    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
144568    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
144569    +
144570    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
144571    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
144572    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
144573    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
144574    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
144575    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
144576    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
144577    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
144578    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
144579    +end;
MPRINT(EM_DIAGRAM):   end;
144580    +else do;
MPRINT(EM_DIAGRAM):   else do;
144581    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
144582    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
144583    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
144584    +   end;
MPRINT(EM_DIAGRAM):   end;
144585    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
144586    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
144587    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
144588    +   end;
MPRINT(EM_DIAGRAM):   end;
144589    +   else do;
MPRINT(EM_DIAGRAM):   else do;
144590    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
144591    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
144592    +   end;
MPRINT(EM_DIAGRAM):   end;
144593    +end;
MPRINT(EM_DIAGRAM):   end;
144594    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
144595    +   P_DepVar1  =    -12.4855028874976 * H1x1_1  +     8.50519000347347 * H1x1_2
144596    +          +     3.84994997572101 * H1x1_3  +    -12.5610415895663 * H1x1_4
144597    +          +     17.4993211655408 * H1x1_5  +     0.14986282100716 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -12.4855028874976 * H1x1_1 + 8.50519000347347 * H1x1_2 +
3.84994997572101 * H1x1_3 + -12.5610415895663 * H1x1_4 + 17.4993211655408 * H1x1_5 +
0.14986282100716 * H1x1_6 ;
144598    +   P_DepVar1  =     3.23272740278636 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.23272740278636 + P_DepVar1 ;
144599    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
144600    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
144601    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
144602    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
144603    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
144604    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
144605    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
144606    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
144607    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
144608    +END;
MPRINT(EM_DIAGRAM):   END;
144609    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
144610    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
144611    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
144612    +END;
MPRINT(EM_DIAGRAM):   END;
144613    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
144614    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
144615    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
144616    +END;
MPRINT(EM_DIAGRAM):   END;
144617    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
144618    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
144619    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
144620    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
144621    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
144622    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
144623    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
144624    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
144625    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
144626    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
144627    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
144628    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
144629    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
144630    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
144631    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
144632    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
144633    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
144634    +END;
MPRINT(EM_DIAGRAM):   END;
144635    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
144636    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
144637    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
144638    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
144639    +* Renaming variables for AutoNeural42;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural42;
144640    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
144641    +* Renaming Posterior variables for AutoNeural42;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural42;
144642    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
144643    +drop AutoNeural42_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural42_P_DepVar1;
144644    +AutoNeural42_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural42_P_DepVar1 = P_DepVar1;
144645    +drop AutoNeural42_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural42_P_DepVar0;
144646    +AutoNeural42_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural42_P_DepVar0 = P_DepVar0;
144647    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
144648    +* Renaming _WARN_ variable for AutoNeural42;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural42;
144649    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
144650    +length AutoNeural42_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural42_WARN_ $4;
144651    +drop AutoNeural42_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural42_WARN_;
144652    +AutoNeural42_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural42_WARN_ = _WARN_;
144653    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
144654    +* Ensmbl22: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Scoring Code of model 4 of 7;
144655    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
144656    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
144657    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
144658    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
144659    +* NODE: AutoNeural47;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural47;
144660    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
144661    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
144662    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
144663    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
144664    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
144665    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
144666    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
144667    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
144668    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
144669    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
144670    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
144671    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
144672    +LENGTH _WARN_ $4
144673    +      F_DepVar  $ 12
144674    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
144675    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
144676    +
144677    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
144678    +
144679    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
144680    +
144681    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
144682    +
144683    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
144684    +
144685    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
144686    +
144687    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
144688    +
144689    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
144690    +
144691    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
144692    +
144693    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
144694    +
144695    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
144696    +
144697    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
144698    +
144699    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
144700    +
144701    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
144702    +
144703    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
144704    +
144705    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
144706    +
144707    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
144708    +
144709    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
144710    +
144711    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
144712    +
144713    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
144714    +
144715    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
144716    +
144717    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
144718    +
144719    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
144720    +
144721    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
144722    +
144723    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
144724    +
144725    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
144726    +
144727    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
144728    +
144729    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
144730    +
144731    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
144732    +
144733    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
144734    +
144735    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
144736    +
144737    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
144738    +
144739    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
144740    +
144741    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
144742    +
144743    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
144744    +
144745    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
144746    +
144747    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
144748    +
144749    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
144750    +
144751    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
144752    +
144753    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
144754    +
144755    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
144756    +
144757    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
144758    +
144759    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
144760    +
144761    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
144762    +
144763    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
144764    +
144765    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
144766    +
144767    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
144768    +
144769    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
144770    +
144771    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
144772    +
144773    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
144774    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
144775    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
144776    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
144777    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
144778    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
144779    +end;
MPRINT(EM_DIAGRAM):   end;
144780    +else do;
MPRINT(EM_DIAGRAM):   else do;
144781    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
144782    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
144783    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
144784    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
144785    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
144786    +   end;
MPRINT(EM_DIAGRAM):   end;
144787    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
144788    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
144789    +   end;
MPRINT(EM_DIAGRAM):   end;
144790    +   else do;
MPRINT(EM_DIAGRAM):   else do;
144791    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
144792    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
144793    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
144794    +   end;
MPRINT(EM_DIAGRAM):   end;
144795    +end;
MPRINT(EM_DIAGRAM):   end;
144796    +
144797    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
144798    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
144799    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
144800    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
144801    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
144802    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
144803    +end;
MPRINT(EM_DIAGRAM):   end;
144804    +else do;
MPRINT(EM_DIAGRAM):   else do;
144805    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
144806    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
144807    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
144808    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
144809    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
144810    +   end;
MPRINT(EM_DIAGRAM):   end;
144811    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
144812    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
144813    +   end;
MPRINT(EM_DIAGRAM):   end;
144814    +   else do;
MPRINT(EM_DIAGRAM):   else do;
144815    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
144816    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
144817    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
144818    +   end;
MPRINT(EM_DIAGRAM):   end;
144819    +end;
MPRINT(EM_DIAGRAM):   end;
144820    +
144821    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
144822    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
144823    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
144824    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
144825    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
144826    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
144827    +end;
MPRINT(EM_DIAGRAM):   end;
144828    +else do;
MPRINT(EM_DIAGRAM):   else do;
144829    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
144830    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
144831    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
144832    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
144833    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
144834    +   end;
MPRINT(EM_DIAGRAM):   end;
144835    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
144836    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
144837    +   end;
MPRINT(EM_DIAGRAM):   end;
144838    +   else do;
MPRINT(EM_DIAGRAM):   else do;
144839    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
144840    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
144841    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
144842    +   end;
MPRINT(EM_DIAGRAM):   end;
144843    +end;
MPRINT(EM_DIAGRAM):   end;
144844    +
144845    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
144846    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
144847    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
144848    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
144849    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
144850    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
144851    +end;
MPRINT(EM_DIAGRAM):   end;
144852    +else do;
MPRINT(EM_DIAGRAM):   else do;
144853    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
144854    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
144855    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
144856    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
144857    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
144858    +   end;
MPRINT(EM_DIAGRAM):   end;
144859    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
144860    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
144861    +   end;
MPRINT(EM_DIAGRAM):   end;
144862    +   else do;
MPRINT(EM_DIAGRAM):   else do;
144863    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
144864    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
144865    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
144866    +   end;
MPRINT(EM_DIAGRAM):   end;
144867    +end;
MPRINT(EM_DIAGRAM):   end;
144868    +
144869    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
144870    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
144871    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
144872    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
144873    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
144874    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
144875    +end;
MPRINT(EM_DIAGRAM):   end;
144876    +else do;
MPRINT(EM_DIAGRAM):   else do;
144877    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
144878    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
144879    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
144880    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
144881    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
144882    +   end;
MPRINT(EM_DIAGRAM):   end;
144883    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
144884    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
144885    +   end;
MPRINT(EM_DIAGRAM):   end;
144886    +   else do;
MPRINT(EM_DIAGRAM):   else do;
144887    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
144888    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
144889    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
144890    +   end;
MPRINT(EM_DIAGRAM):   end;
144891    +end;
MPRINT(EM_DIAGRAM):   end;
144892    +
144893    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
144894    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
144895    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
144896    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
144897    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
144898    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
144899    +end;
MPRINT(EM_DIAGRAM):   end;
144900    +else do;
MPRINT(EM_DIAGRAM):   else do;
144901    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
144902    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
144903    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
144904    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
144905    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
144906    +   end;
MPRINT(EM_DIAGRAM):   end;
144907    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
144908    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
144909    +   end;
MPRINT(EM_DIAGRAM):   end;
144910    +   else do;
MPRINT(EM_DIAGRAM):   else do;
144911    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
144912    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
144913    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
144914    +   end;
MPRINT(EM_DIAGRAM):   end;
144915    +end;
MPRINT(EM_DIAGRAM):   end;
144916    +
144917    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
144918    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
144919    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
144920    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
144921    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
144922    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
144923    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
144924    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
144925    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
144926    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
144927    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
144928    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
144929    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
144930    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
144931    +end;
MPRINT(EM_DIAGRAM):   end;
144932    +else do;
MPRINT(EM_DIAGRAM):   else do;
144933    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
144934    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
144935    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
144936    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
144937    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
144938    +   end;
MPRINT(EM_DIAGRAM):   end;
144939    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
144940    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
144941    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
144942    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
144943    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
144944    +   end;
MPRINT(EM_DIAGRAM):   end;
144945    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
144946    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
144947    +   end;
MPRINT(EM_DIAGRAM):   end;
144948    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
144949    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
144950    +   end;
MPRINT(EM_DIAGRAM):   end;
144951    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
144952    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
144953    +   end;
MPRINT(EM_DIAGRAM):   end;
144954    +   else do;
MPRINT(EM_DIAGRAM):   else do;
144955    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
144956    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
144957    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
144958    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
144959    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
144960    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
144961    +   end;
MPRINT(EM_DIAGRAM):   end;
144962    +end;
MPRINT(EM_DIAGRAM):   end;
144963    +
144964    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
144965    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
144966    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
144967    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
144968    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
144969    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
144970    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
144971    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
144972    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
144973    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
144974    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
144975    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
144976    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
144977    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
144978    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
144979    +end;
MPRINT(EM_DIAGRAM):   end;
144980    +else do;
MPRINT(EM_DIAGRAM):   else do;
144981    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
144982    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
144983    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
144984    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
144985    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
144986    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
144987    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
144988    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
144989    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
144990    +         end;
MPRINT(EM_DIAGRAM):   end;
144991    +         else do;
MPRINT(EM_DIAGRAM):   else do;
144992    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
144993    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
144994    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
144995    +            end;
MPRINT(EM_DIAGRAM):   end;
144996    +         end;
MPRINT(EM_DIAGRAM):   end;
144997    +      end;
MPRINT(EM_DIAGRAM):   end;
144998    +      else do;
MPRINT(EM_DIAGRAM):   else do;
144999    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
145000    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
145001    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
145002    +         end;
MPRINT(EM_DIAGRAM):   end;
145003    +      end;
MPRINT(EM_DIAGRAM):   end;
145004    +   end;
MPRINT(EM_DIAGRAM):   end;
145005    +   else do;
MPRINT(EM_DIAGRAM):   else do;
145006    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
145007    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
145008    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
145009    +      end;
MPRINT(EM_DIAGRAM):   end;
145010    +      else do;
MPRINT(EM_DIAGRAM):   else do;
145011    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
145012    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
145013    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
145014    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
145015    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
145016    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
145017    +         end;
MPRINT(EM_DIAGRAM):   end;
145018    +      end;
MPRINT(EM_DIAGRAM):   end;
145019    +   end;
MPRINT(EM_DIAGRAM):   end;
145020    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
145021    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
145022    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
145023    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
145024    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
145025    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
145026    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
145027    +   end;
MPRINT(EM_DIAGRAM):   end;
145028    +end;
MPRINT(EM_DIAGRAM):   end;
145029    +
145030    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
145031    +*** Checking missing input Interval
145032    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
145033    +
145034    +IF NMISS(
145035    +   Income ,
145036    +   Kidhome ,
145037    +   MntFishProducts ,
145038    +   MntFruits ,
145039    +   MntGoldProds ,
145040    +   MntMeatProducts ,
145041    +   MntSweetProducts ,
145042    +   MntWines ,
145043    +   NumCatalogPurchases ,
145044    +   NumDealsPurchases ,
145045    +   NumStorePurchases ,
145046    +   NumWebPurchases ,
145047    +   NumWebVisitsMonth ,
145048    +   Recency ,
145049    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
145050    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
145051    +
145052    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
145053    +END;
MPRINT(EM_DIAGRAM):   END;
145054    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
145055    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
145056    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
145057    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
145058    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
145059    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
145060    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
145061    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
145062    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
145063    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
145064    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
145065    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
145066    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
145067    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
145068    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
145069    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
145070    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
145071    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
145072    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
145073    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
145074    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
145075    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
145076    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
145077    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
145078    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
145079    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
145080    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
145081    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
145082    +END;
MPRINT(EM_DIAGRAM):   END;
145083    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
145084    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
145085    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
145086    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
145087    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
145088    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
145089    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
145090    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
145091    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
145092    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
145093    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
145094    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
145095    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
145096    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
145097    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
145098    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
145099    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
145100    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
145101    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
145102    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
145103    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
145104    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
145105    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
145106    +   ELSE S_NumCatalogPurchases
145107    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
145108    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
145109    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
145110    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
145111    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
145112    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
145113    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
145114    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
145115    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
145116    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
145117    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
145118    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
145119    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
145120    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
145121    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
145122    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
145123    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
145124    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
145125    +END;
MPRINT(EM_DIAGRAM):   END;
145126    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
145127    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
145128    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
145129    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
145130    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
145131    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
145132    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
145133    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
145134    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
145135    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
145136    +   H1x1_1  =     -0.6712927499227 * S_Income  +     0.52481056075303 *
145137    +        S_Kidhome  +     -2.3662268017216 * S_MntFishProducts
145138    +          +    -1.70194161526543 * S_MntFruits  +    -0.12195276696714 *
145139    +        S_MntGoldProds  +     5.02051235731232 * S_MntMeatProducts
145140    +          +    -2.37073629008864 * S_MntSweetProducts
145141    +          +    -7.49792253647533 * S_MntWines  +     1.93063890722455 *
145142    +        S_NumCatalogPurchases  +     1.44821336448113 * S_NumDealsPurchases
145143    +          +    -1.29021742502316 * S_NumStorePurchases
145144    +          +    -0.00949168969466 * S_NumWebPurchases
145145    +          +    -0.32248137192321 * S_NumWebVisitsMonth
145146    +          +    -0.55879173873733 * S_Recency  +    -0.22439654268554 *
145147    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.6712927499227 * S_Income + 0.52481056075303 * S_Kidhome +
-2.3662268017216 * S_MntFishProducts + -1.70194161526543 * S_MntFruits + -0.12195276696714 *
S_MntGoldProds + 5.02051235731232 * S_MntMeatProducts + -2.37073629008864 * S_MntSweetProducts
+ -7.49792253647533 * S_MntWines + 1.93063890722455 * S_NumCatalogPurchases + 1.44821336448113
* S_NumDealsPurchases + -1.29021742502316 * S_NumStorePurchases + -0.00949168969466 *
S_NumWebPurchases + -0.32248137192321 * S_NumWebVisitsMonth + -0.55879173873733 * S_Recency +
-0.22439654268554 * S_Teenhome ;
145148    +   H1x1_2  =    -1.63837717417638 * S_Income  +     1.01712005677207 *
145149    +        S_Kidhome  +    -0.11452425716086 * S_MntFishProducts
145150    +          +    -0.08273769039219 * S_MntFruits  +    -0.47045422182093 *
145151    +        S_MntGoldProds  +    -0.64593629987888 * S_MntMeatProducts
145152    +          +     0.41126087093412 * S_MntSweetProducts
145153    +          +    -0.00653581981542 * S_MntWines  +    -1.62534004647483 *
145154    +        S_NumCatalogPurchases  +    -0.74740978232431 * S_NumDealsPurchases
145155    +          +      0.2319226227964 * S_NumStorePurchases
145156    +          +     0.31190969795517 * S_NumWebPurchases
145157    +          +      -1.987305550542 * S_NumWebVisitsMonth
145158    +          +     2.46312593342153 * S_Recency  +     1.89469486725188 *
145159    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.63837717417638 * S_Income + 1.01712005677207 * S_Kidhome +
-0.11452425716086 * S_MntFishProducts + -0.08273769039219 * S_MntFruits + -0.47045422182093 *
S_MntGoldProds + -0.64593629987888 * S_MntMeatProducts + 0.41126087093412 * S_MntSweetProducts
+ -0.00653581981542 * S_MntWines + -1.62534004647483 * S_NumCatalogPurchases +
-0.74740978232431 * S_NumDealsPurchases + 0.2319226227964 * S_NumStorePurchases +
0.31190969795517 * S_NumWebPurchases + -1.987305550542 * S_NumWebVisitsMonth +
2.46312593342153 * S_Recency + 1.89469486725188 * S_Teenhome ;
145160    +   H1x1_3  =    -0.78523773312865 * S_Income  +    -1.40266608040579 *
145161    +        S_Kidhome  +     0.01206304735425 * S_MntFishProducts
145162    +          +    -0.50371384095637 * S_MntFruits  +    -0.93176870066879 *
145163    +        S_MntGoldProds  +    -0.53990224542491 * S_MntMeatProducts
145164    +          +    -0.73991431726966 * S_MntSweetProducts
145165    +          +    -0.21227505043037 * S_MntWines  +     0.42667885020643 *
145166    +        S_NumCatalogPurchases  +    -0.34821401096287 * S_NumDealsPurchases
145167    +          +    -2.50826402419251 * S_NumStorePurchases
145168    +          +    -0.30764477738015 * S_NumWebPurchases
145169    +          +     1.21240794582671 * S_NumWebVisitsMonth
145170    +          +    -2.22374004865256 * S_Recency  +    -0.07389156638234 *
145171    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.78523773312865 * S_Income + -1.40266608040579 * S_Kidhome +
0.01206304735425 * S_MntFishProducts + -0.50371384095637 * S_MntFruits + -0.93176870066879 *
S_MntGoldProds + -0.53990224542491 * S_MntMeatProducts + -0.73991431726966 *
S_MntSweetProducts + -0.21227505043037 * S_MntWines + 0.42667885020643 * S_NumCatalogPurchases
+ -0.34821401096287 * S_NumDealsPurchases + -2.50826402419251 * S_NumStorePurchases +
-0.30764477738015 * S_NumWebPurchases + 1.21240794582671 * S_NumWebVisitsMonth +
-2.22374004865256 * S_Recency + -0.07389156638234 * S_Teenhome ;
145172    +   H1x1_4  =     1.52339017953874 * S_Income  +     -0.0800472387091 *
145173    +        S_Kidhome  +    -0.81466158613596 * S_MntFishProducts
145174    +          +    -1.56740792821078 * S_MntFruits  +    -0.44251282056636 *
145175    +        S_MntGoldProds  +     4.21345569180051 * S_MntMeatProducts
145176    +          +     1.07674028011002 * S_MntSweetProducts
145177    +          +    -4.16668334099034 * S_MntWines  +     2.33183855256347 *
145178    +        S_NumCatalogPurchases  +     1.55678471765653 * S_NumDealsPurchases
145179    +          +    -0.47776935727231 * S_NumStorePurchases
145180    +          +     -0.5890810666834 * S_NumWebPurchases
145181    +          +      1.3845716796855 * S_NumWebVisitsMonth
145182    +          +    -0.37826249433224 * S_Recency  +    -0.32813220931783 *
145183    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.52339017953874 * S_Income + -0.0800472387091 * S_Kidhome +
-0.81466158613596 * S_MntFishProducts + -1.56740792821078 * S_MntFruits + -0.44251282056636 *
S_MntGoldProds + 4.21345569180051 * S_MntMeatProducts + 1.07674028011002 * S_MntSweetProducts
+ -4.16668334099034 * S_MntWines + 2.33183855256347 * S_NumCatalogPurchases + 1.55678471765653
* S_NumDealsPurchases + -0.47776935727231 * S_NumStorePurchases + -0.5890810666834 *
S_NumWebPurchases + 1.3845716796855 * S_NumWebVisitsMonth + -0.37826249433224 * S_Recency +
-0.32813220931783 * S_Teenhome ;
145184    +   H1x1_1  = H1x1_1  +     -1.8652801761626 * AcceptedCmp10
145185    +          +    -2.15838385124109 * AcceptedCmp20  +    -0.32281263106473 *
145186    +        AcceptedCmp30  +    -0.52751972284584 * AcceptedCmp40
145187    +          +    -0.16576520159698 * AcceptedCmp50  +      0.0798586391257 *
145188    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.8652801761626 * AcceptedCmp10 + -2.15838385124109 *
AcceptedCmp20 + -0.32281263106473 * AcceptedCmp30 + -0.52751972284584 * AcceptedCmp40 +
-0.16576520159698 * AcceptedCmp50 + 0.0798586391257 * Complain0 ;
145189    +   H1x1_2  = H1x1_2  +     1.18847829749899 * AcceptedCmp10
145190    +          +     2.28872916962314 * AcceptedCmp20  +      0.7666362501062 *
145191    +        AcceptedCmp30  +     0.63272382969915 * AcceptedCmp40
145192    +          +     1.03410667663543 * AcceptedCmp50  +    -0.44709535985633 *
145193    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.18847829749899 * AcceptedCmp10 + 2.28872916962314 *
AcceptedCmp20 + 0.7666362501062 * AcceptedCmp30 + 0.63272382969915 * AcceptedCmp40 +
1.03410667663543 * AcceptedCmp50 + -0.44709535985633 * Complain0 ;
145194    +   H1x1_3  = H1x1_3  +    -0.30260316693677 * AcceptedCmp10
145195    +          +     1.37858034146365 * AcceptedCmp20  +    -1.95638038137808 *
145196    +        AcceptedCmp30  +     -2.1581101738114 * AcceptedCmp40
145197    +          +    -1.72040670376675 * AcceptedCmp50  +     2.82913230380101 *
145198    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.30260316693677 * AcceptedCmp10 + 1.37858034146365 *
AcceptedCmp20 + -1.95638038137808 * AcceptedCmp30 + -2.1581101738114 * AcceptedCmp40 +
-1.72040670376675 * AcceptedCmp50 + 2.82913230380101 * Complain0 ;
145199    +   H1x1_4  = H1x1_4  +     0.37463576870294 * AcceptedCmp10
145200    +          +     -1.1935629973001 * AcceptedCmp20  +     -0.0357513820165 *
145201    +        AcceptedCmp30  +    -0.34228453024248 * AcceptedCmp40
145202    +          +     0.08692364147086 * AcceptedCmp50  +     0.01804293030366 *
145203    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.37463576870294 * AcceptedCmp10 + -1.1935629973001 *
AcceptedCmp20 + -0.0357513820165 * AcceptedCmp30 + -0.34228453024248 * AcceptedCmp40 +
0.08692364147086 * AcceptedCmp50 + 0.01804293030366 * Complain0 ;
145204    +   H1x1_1  = H1x1_1  +     0.10559298643668 * Education2n_Cycle
145205    +          +     -0.5051689695544 * EducationBasic  +     0.07434632730326 *
145206    +        EducationGraduation  +     0.68592368666749 * EducationMaster
145207    +          +     0.38999748028122 * Marital_StatusDivorced
145208    +          +     0.44180844463279 * Marital_StatusMarried
145209    +          +     0.63824884669155 * Marital_StatusSingle
145210    +          +    -0.26198648898013 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.10559298643668 * Education2n_Cycle +
-0.5051689695544 * EducationBasic + 0.07434632730326 * EducationGraduation + 0.68592368666749
* EducationMaster + 0.38999748028122 * Marital_StatusDivorced + 0.44180844463279 *
Marital_StatusMarried + 0.63824884669155 * Marital_StatusSingle + -0.26198648898013 *
Marital_StatusTogether ;
145211    +   H1x1_2  = H1x1_2  +     0.38077564253123 * Education2n_Cycle
145212    +          +    -1.71516234680597 * EducationBasic  +      0.9305914926408 *
145213    +        EducationGraduation  +    -0.48500520310542 * EducationMaster
145214    +          +    -0.95537871859519 * Marital_StatusDivorced
145215    +          +     2.55061153921286 * Marital_StatusMarried
145216    +          +    -1.78007154396711 * Marital_StatusSingle
145217    +          +     1.47779717106964 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.38077564253123 * Education2n_Cycle +
-1.71516234680597 * EducationBasic + 0.9305914926408 * EducationGraduation + -0.48500520310542
* EducationMaster + -0.95537871859519 * Marital_StatusDivorced + 2.55061153921286 *
Marital_StatusMarried + -1.78007154396711 * Marital_StatusSingle + 1.47779717106964 *
Marital_StatusTogether ;
145218    +   H1x1_3  = H1x1_3  +    -0.26877104077313 * Education2n_Cycle
145219    +          +    -1.51047207681049 * EducationBasic  +     1.00818590807055 *
145220    +        EducationGraduation  +    -2.08836171183474 * EducationMaster
145221    +          +     1.29930912124343 * Marital_StatusDivorced
145222    +          +    -1.63037830924789 * Marital_StatusMarried
145223    +          +     0.19040732776086 * Marital_StatusSingle
145224    +          +     -3.9038060950259 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.26877104077313 * Education2n_Cycle +
-1.51047207681049 * EducationBasic + 1.00818590807055 * EducationGraduation +
-2.08836171183474 * EducationMaster + 1.29930912124343 * Marital_StatusDivorced +
-1.63037830924789 * Marital_StatusMarried + 0.19040732776086 * Marital_StatusSingle +
-3.9038060950259 * Marital_StatusTogether ;
145225    +   H1x1_4  = H1x1_4  +     0.59574708300703 * Education2n_Cycle
145226    +          +    -0.19936070861543 * EducationBasic  +     0.82683145042233 *
145227    +        EducationGraduation  +    -0.24015931152788 * EducationMaster
145228    +          +     -0.3129003025095 * Marital_StatusDivorced
145229    +          +     0.00843550425239 * Marital_StatusMarried
145230    +          +    -0.20416436114776 * Marital_StatusSingle
145231    +          +     1.08624823622502 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.59574708300703 * Education2n_Cycle +
-0.19936070861543 * EducationBasic + 0.82683145042233 * EducationGraduation +
-0.24015931152788 * EducationMaster + -0.3129003025095 * Marital_StatusDivorced +
0.00843550425239 * Marital_StatusMarried + -0.20416436114776 * Marital_StatusSingle +
1.08624823622502 * Marital_StatusTogether ;
145232    +   H1x1_1  =    -2.66745806568988 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.66745806568988 + H1x1_1 ;
145233    +   H1x1_2  =     1.39870734752375 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.39870734752375 + H1x1_2 ;
145234    +   H1x1_3  =     3.90802178606462 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 3.90802178606462 + H1x1_3 ;
145235    +   H1x1_4  =    -1.61490323089776 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.61490323089776 + H1x1_4 ;
145236    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
145237    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
145238    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
145239    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
145240    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
145241    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
145242    +END;
MPRINT(EM_DIAGRAM):   END;
145243    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
145244    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
145245    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
145246    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
145247    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
145248    +END;
MPRINT(EM_DIAGRAM):   END;
145249    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
145250    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
145251    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
145252    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
145253    +   H1x2_1  =     0.40035517192793 * S_Income  +     1.50961149935512 *
145254    +        S_Kidhome  +    -0.71749794576247 * S_MntFishProducts
145255    +          +    -0.80539813415293 * S_MntFruits  +    -0.11190500470397 *
145256    +        S_MntGoldProds  +    -1.00287277559415 * S_MntMeatProducts
145257    +          +    -0.90866858123806 * S_MntSweetProducts
145258    +          +     0.48761861591898 * S_MntWines  +    -0.00278053699018 *
145259    +        S_NumCatalogPurchases  +     1.76527380505645 * S_NumDealsPurchases
145260    +          +     1.45805686107789 * S_NumStorePurchases
145261    +          +     1.48794767642409 * S_NumWebPurchases
145262    +          +    -1.24357395997191 * S_NumWebVisitsMonth
145263    +          +     2.73747730751211 * S_Recency  +    -0.74105180435611 *
145264    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.40035517192793 * S_Income + 1.50961149935512 * S_Kidhome +
-0.71749794576247 * S_MntFishProducts + -0.80539813415293 * S_MntFruits + -0.11190500470397 *
S_MntGoldProds + -1.00287277559415 * S_MntMeatProducts + -0.90866858123806 *
S_MntSweetProducts + 0.48761861591898 * S_MntWines + -0.00278053699018 * S_NumCatalogPurchases
+ 1.76527380505645 * S_NumDealsPurchases + 1.45805686107789 * S_NumStorePurchases +
1.48794767642409 * S_NumWebPurchases + -1.24357395997191 * S_NumWebVisitsMonth +
2.73747730751211 * S_Recency + -0.74105180435611 * S_Teenhome ;
145265    +   H1x2_2  =    -2.30368761501045 * S_Income  +     0.82837234680306 *
145266    +        S_Kidhome  +    -0.57801225504203 * S_MntFishProducts
145267    +          +    -0.53882153761332 * S_MntFruits  +    -0.06305202172404 *
145268    +        S_MntGoldProds  +    -0.83741138145577 * S_MntMeatProducts
145269    +          +     1.05010358762976 * S_MntSweetProducts
145270    +          +     -0.8308916879344 * S_MntWines  +     0.00135039846616 *
145271    +        S_NumCatalogPurchases  +     -0.1426130520252 * S_NumDealsPurchases
145272    +          +    -2.04318529474165 * S_NumStorePurchases
145273    +          +     1.64478964728594 * S_NumWebPurchases
145274    +          +    -0.74790322980646 * S_NumWebVisitsMonth
145275    +          +     0.44846346006135 * S_Recency  +    -1.17558204887145 *
145276    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.30368761501045 * S_Income + 0.82837234680306 * S_Kidhome +
-0.57801225504203 * S_MntFishProducts + -0.53882153761332 * S_MntFruits + -0.06305202172404 *
S_MntGoldProds + -0.83741138145577 * S_MntMeatProducts + 1.05010358762976 * S_MntSweetProducts
+ -0.8308916879344 * S_MntWines + 0.00135039846616 * S_NumCatalogPurchases + -0.1426130520252
* S_NumDealsPurchases + -2.04318529474165 * S_NumStorePurchases + 1.64478964728594 *
S_NumWebPurchases + -0.74790322980646 * S_NumWebVisitsMonth + 0.44846346006135 * S_Recency +
-1.17558204887145 * S_Teenhome ;
145277    +   H1x2_3  =     1.07803134847301 * S_Income  +     1.10001550023539 *
145278    +        S_Kidhome  +      2.1312863754193 * S_MntFishProducts
145279    +          +    -0.41841353908141 * S_MntFruits  +    -0.28009599678539 *
145280    +        S_MntGoldProds  +    -0.57516542648625 * S_MntMeatProducts
145281    +          +     0.39974532423377 * S_MntSweetProducts
145282    +          +    -1.03786923973351 * S_MntWines  +    -0.21873654141419 *
145283    +        S_NumCatalogPurchases  +    -0.12545360575656 * S_NumDealsPurchases
145284    +          +     0.70805557348415 * S_NumStorePurchases
145285    +          +     2.40362900277228 * S_NumWebPurchases
145286    +          +    -0.84521247676043 * S_NumWebVisitsMonth
145287    +          +     4.38953216910793 * S_Recency  +     1.39159599477449 *
145288    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.07803134847301 * S_Income + 1.10001550023539 * S_Kidhome +
2.1312863754193 * S_MntFishProducts + -0.41841353908141 * S_MntFruits + -0.28009599678539 *
S_MntGoldProds + -0.57516542648625 * S_MntMeatProducts + 0.39974532423377 * S_MntSweetProducts
+ -1.03786923973351 * S_MntWines + -0.21873654141419 * S_NumCatalogPurchases +
-0.12545360575656 * S_NumDealsPurchases + 0.70805557348415 * S_NumStorePurchases +
2.40362900277228 * S_NumWebPurchases + -0.84521247676043 * S_NumWebVisitsMonth +
4.38953216910793 * S_Recency + 1.39159599477449 * S_Teenhome ;
145289    +   H1x2_4  =      1.5904518722284 * S_Income  +     0.14957259343911 *
145290    +        S_Kidhome  +     1.71856101884761 * S_MntFishProducts
145291    +          +     0.97544338421034 * S_MntFruits  +     1.16387775609385 *
145292    +        S_MntGoldProds  +    -0.43463910907731 * S_MntMeatProducts
145293    +          +     1.67907268159197 * S_MntSweetProducts
145294    +          +    -0.67372438764914 * S_MntWines  +     0.34705529867224 *
145295    +        S_NumCatalogPurchases  +     1.55570260456887 * S_NumDealsPurchases
145296    +          +      0.0818178054474 * S_NumStorePurchases
145297    +          +     0.21533198164279 * S_NumWebPurchases
145298    +          +     2.13590425604302 * S_NumWebVisitsMonth
145299    +          +    -2.07481510631659 * S_Recency  +    -0.82288425478762 *
145300    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.5904518722284 * S_Income + 0.14957259343911 * S_Kidhome +
1.71856101884761 * S_MntFishProducts + 0.97544338421034 * S_MntFruits + 1.16387775609385 *
S_MntGoldProds + -0.43463910907731 * S_MntMeatProducts + 1.67907268159197 * S_MntSweetProducts
+ -0.67372438764914 * S_MntWines + 0.34705529867224 * S_NumCatalogPurchases + 1.55570260456887
* S_NumDealsPurchases + 0.0818178054474 * S_NumStorePurchases + 0.21533198164279 *
S_NumWebPurchases + 2.13590425604302 * S_NumWebVisitsMonth + -2.07481510631659 * S_Recency +
-0.82288425478762 * S_Teenhome ;
145301    +   H1x2_1  = H1x2_1  +    -1.62231361085618 * AcceptedCmp10
145302    +          +     0.93841494775887 * AcceptedCmp20  +      0.1734706863831 *
145303    +        AcceptedCmp30  +     0.16475784850175 * AcceptedCmp40
145304    +          +     0.65486951368163 * AcceptedCmp50  +      1.6226382489877 *
145305    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.62231361085618 * AcceptedCmp10 + 0.93841494775887 *
AcceptedCmp20 + 0.1734706863831 * AcceptedCmp30 + 0.16475784850175 * AcceptedCmp40 +
0.65486951368163 * AcceptedCmp50 + 1.6226382489877 * Complain0 ;
145306    +   H1x2_2  = H1x2_2  +     0.93875540013493 * AcceptedCmp10
145307    +          +     2.69754413059384 * AcceptedCmp20  +    -0.30913025234768 *
145308    +        AcceptedCmp30  +    -0.00924007964301 * AcceptedCmp40
145309    +          +     -0.7359545134435 * AcceptedCmp50  +    -0.44748157506074 *
145310    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.93875540013493 * AcceptedCmp10 + 2.69754413059384 *
AcceptedCmp20 + -0.30913025234768 * AcceptedCmp30 + -0.00924007964301 * AcceptedCmp40 +
-0.7359545134435 * AcceptedCmp50 + -0.44748157506074 * Complain0 ;
145311    +   H1x2_3  = H1x2_3  +      0.4023712256607 * AcceptedCmp10
145312    +          +    -0.46100225887196 * AcceptedCmp20  +    -0.11545325868036 *
145313    +        AcceptedCmp30  +     1.81326302523772 * AcceptedCmp40
145314    +          +     1.57642234573579 * AcceptedCmp50  +    -0.52645724664984 *
145315    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.4023712256607 * AcceptedCmp10 + -0.46100225887196 *
AcceptedCmp20 + -0.11545325868036 * AcceptedCmp30 + 1.81326302523772 * AcceptedCmp40 +
1.57642234573579 * AcceptedCmp50 + -0.52645724664984 * Complain0 ;
145316    +   H1x2_4  = H1x2_4  +    -1.08307715440234 * AcceptedCmp10
145317    +          +     0.10309372709877 * AcceptedCmp20  +    -1.18814330876811 *
145318    +        AcceptedCmp30  +    -1.69102202926075 * AcceptedCmp40
145319    +          +     0.10465943889984 * AcceptedCmp50  +    -0.96523771648083 *
145320    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.08307715440234 * AcceptedCmp10 + 0.10309372709877 *
AcceptedCmp20 + -1.18814330876811 * AcceptedCmp30 + -1.69102202926075 * AcceptedCmp40 +
0.10465943889984 * AcceptedCmp50 + -0.96523771648083 * Complain0 ;
145321    +   H1x2_1  = H1x2_1  +     0.57966380694999 * Education2n_Cycle
145322    +          +     1.09807543038463 * EducationBasic  +     0.56896005764417 *
145323    +        EducationGraduation  +     0.78238700450794 * EducationMaster
145324    +          +     0.09735596304222 * Marital_StatusDivorced
145325    +          +    -0.41892050812825 * Marital_StatusMarried
145326    +          +    -1.42753782654911 * Marital_StatusSingle
145327    +          +     2.12640980869845 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.57966380694999 * Education2n_Cycle +
1.09807543038463 * EducationBasic + 0.56896005764417 * EducationGraduation + 0.78238700450794
* EducationMaster + 0.09735596304222 * Marital_StatusDivorced + -0.41892050812825 *
Marital_StatusMarried + -1.42753782654911 * Marital_StatusSingle + 2.12640980869845 *
Marital_StatusTogether ;
145328    +   H1x2_2  = H1x2_2  +     1.23142964464278 * Education2n_Cycle
145329    +          +    -0.57685007681361 * EducationBasic  +     0.95565027871272 *
145330    +        EducationGraduation  +     1.03407121736627 * EducationMaster
145331    +          +    -0.32415267410507 * Marital_StatusDivorced
145332    +          +     0.49045578856782 * Marital_StatusMarried
145333    +          +    -1.95612005933176 * Marital_StatusSingle
145334    +          +    -0.09380239900044 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.23142964464278 * Education2n_Cycle +
-0.57685007681361 * EducationBasic + 0.95565027871272 * EducationGraduation + 1.03407121736627
* EducationMaster + -0.32415267410507 * Marital_StatusDivorced + 0.49045578856782 *
Marital_StatusMarried + -1.95612005933176 * Marital_StatusSingle + -0.09380239900044 *
Marital_StatusTogether ;
145335    +   H1x2_3  = H1x2_3  +    -0.59991828858437 * Education2n_Cycle
145336    +          +     0.16738017494874 * EducationBasic  +     1.11954020630495 *
145337    +        EducationGraduation  +    -1.26111004544108 * EducationMaster
145338    +          +    -1.25715350788627 * Marital_StatusDivorced
145339    +          +     0.74269511935299 * Marital_StatusMarried
145340    +          +    -0.27394822792771 * Marital_StatusSingle
145341    +          +     0.32120400150108 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.59991828858437 * Education2n_Cycle +
0.16738017494874 * EducationBasic + 1.11954020630495 * EducationGraduation + -1.26111004544108
* EducationMaster + -1.25715350788627 * Marital_StatusDivorced + 0.74269511935299 *
Marital_StatusMarried + -0.27394822792771 * Marital_StatusSingle + 0.32120400150108 *
Marital_StatusTogether ;
145342    +   H1x2_4  = H1x2_4  +     0.73858886461182 * Education2n_Cycle
145343    +          +     1.18482398810163 * EducationBasic  +     0.31912715416105 *
145344    +        EducationGraduation  +     -0.7403940659871 * EducationMaster
145345    +          +    -1.42754006114782 * Marital_StatusDivorced
145346    +          +    -0.13979120103654 * Marital_StatusMarried
145347    +          +    -1.66244370644258 * Marital_StatusSingle
145348    +          +     1.29295770867497 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.73858886461182 * Education2n_Cycle +
1.18482398810163 * EducationBasic + 0.31912715416105 * EducationGraduation + -0.7403940659871
* EducationMaster + -1.42754006114782 * Marital_StatusDivorced + -0.13979120103654 *
Marital_StatusMarried + -1.66244370644258 * Marital_StatusSingle + 1.29295770867497 *
Marital_StatusTogether ;
145349    +   H1x2_1  =     0.02486753071365 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.02486753071365 + H1x2_1 ;
145350    +   H1x2_2  =     1.30157602008517 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.30157602008517 + H1x2_2 ;
145351    +   H1x2_3  =    -0.71765289173772 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.71765289173772 + H1x2_3 ;
145352    +   H1x2_4  =    -0.28206267191961 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.28206267191961 + H1x2_4 ;
145353    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
145354    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
145355    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
145356    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
145357    +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
145358    +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
145359    +END;
MPRINT(EM_DIAGRAM):   END;
145360    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
145361    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
145362    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
145363    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
145364    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
145365    +END;
MPRINT(EM_DIAGRAM):   END;
145366    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
145367    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
145368    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
145369    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
145370    +   H2x1_1  =    -1.34021567967914 * H1x1_1  +    -0.82210150819056 * H1x1_2
145371    +          +      0.2051584088577 * H1x1_3  +    -0.14877251454609 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.34021567967914 * H1x1_1 + -0.82210150819056 * H1x1_2 +
0.2051584088577 * H1x1_3 + -0.14877251454609 * H1x1_4 ;
145372    +   H2x1_2  =     5.90283136076368 * H1x1_1  +    -7.93891997601848 * H1x1_2
145373    +          +     6.88352608350263 * H1x1_3  +     4.96968417177752 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 5.90283136076368 * H1x1_1 + -7.93891997601848 * H1x1_2 +
6.88352608350263 * H1x1_3 + 4.96968417177752 * H1x1_4 ;
145374    +   H2x1_3  =    -0.35820258372371 * H1x1_1  +      3.0004195561827 * H1x1_2
145375    +          +    -2.45737828305901 * H1x1_3  +     -3.3701635035096 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.35820258372371 * H1x1_1 + 3.0004195561827 * H1x1_2 +
-2.45737828305901 * H1x1_3 + -3.3701635035096 * H1x1_4 ;
145376    +   H2x1_4  =    -2.21298094667436 * H1x1_1  +     0.26414252140039 * H1x1_2
145377    +          +     1.09094365218549 * H1x1_3  +     1.52196888791164 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -2.21298094667436 * H1x1_1 + 0.26414252140039 * H1x1_2 +
1.09094365218549 * H1x1_3 + 1.52196888791164 * H1x1_4 ;
145378    +   H2x1_1  = H2x1_1  +    -0.84246838752596 * H1x2_1
145379    +          +     0.53874594317309 * H1x2_2  +     0.47956597308168 * H1x2_3
145380    +          +    -0.93255463077914 * H1x2_4 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.84246838752596 * H1x2_1 + 0.53874594317309 * H1x2_2
+ 0.47956597308168 * H1x2_3 + -0.93255463077914 * H1x2_4 ;
145381    +   H2x1_2  = H2x1_2  +     -1.9223116287684 * H1x2_1
145382    +          +    -2.37377206970433 * H1x2_2  +    -0.73887953722708 * H1x2_3
145383    +          +     2.71044044080254 * H1x2_4 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.9223116287684 * H1x2_1 + -2.37377206970433 * H1x2_2
+ -0.73887953722708 * H1x2_3 + 2.71044044080254 * H1x2_4 ;
145384    +   H2x1_3  = H2x1_3  +     0.53173546674544 * H1x2_1
145385    +          +     1.48831638926533 * H1x2_2  +     2.89231339277069 * H1x2_3
145386    +          +    -2.75774116509863 * H1x2_4 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.53173546674544 * H1x2_1 + 1.48831638926533 * H1x2_2
+ 2.89231339277069 * H1x2_3 + -2.75774116509863 * H1x2_4 ;
145387    +   H2x1_4  = H2x1_4  +     1.42086435786687 * H1x2_1
145388    +          +     0.41116169758796 * H1x2_2  +    -1.89087404607062 * H1x2_3
145389    +          +     1.62153254823704 * H1x2_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.42086435786687 * H1x2_1 + 0.41116169758796 * H1x2_2
+ -1.89087404607062 * H1x2_3 + 1.62153254823704 * H1x2_4 ;
145390    +   H2x1_1  =    -1.75788455741829 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.75788455741829 + H2x1_1 ;
145391    +   H2x1_2  =    -1.23949015246826 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.23949015246826 + H2x1_2 ;
145392    +   H2x1_3  =     0.22552341308337 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.22552341308337 + H2x1_3 ;
145393    +   H2x1_4  =    -0.29261642916715 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.29261642916715 + H2x1_4 ;
145394    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
145395    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
145396    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
145397    +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
145398    +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
145399    +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
145400    +END;
MPRINT(EM_DIAGRAM):   END;
145401    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
145402    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
145403    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
145404    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
145405    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
145406    +END;
MPRINT(EM_DIAGRAM):   END;
145407    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
145408    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
145409    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
145410    +
145411    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
145412    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
145413    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
145414    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
145415    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
145416    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
145417    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
145418    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
145419    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
145420    +end;
MPRINT(EM_DIAGRAM):   end;
145421    +else do;
MPRINT(EM_DIAGRAM):   else do;
145422    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
145423    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
145424    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
145425    +   end;
MPRINT(EM_DIAGRAM):   end;
145426    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
145427    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
145428    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
145429    +   end;
MPRINT(EM_DIAGRAM):   end;
145430    +   else do;
MPRINT(EM_DIAGRAM):   else do;
145431    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
145432    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
145433    +   end;
MPRINT(EM_DIAGRAM):   end;
145434    +end;
MPRINT(EM_DIAGRAM):   end;
145435    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
145436    +   P_DepVar1  =    -0.01128614443737 * H2x1_1  +     20.5485882709782 * H2x1_2
145437    +          +    -12.1833710389136 * H2x1_3  +     -2.9534639226061 * H2x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.01128614443737 * H2x1_1 + 20.5485882709782 * H2x1_2 +
-12.1833710389136 * H2x1_3 + -2.9534639226061 * H2x1_4 ;
145438    +   P_DepVar1  =     1.18328906065521 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.18328906065521 + P_DepVar1 ;
145439    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
145440    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
145441    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
145442    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
145443    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
145444    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
145445    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
145446    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
145447    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
145448    +END;
MPRINT(EM_DIAGRAM):   END;
145449    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
145450    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
145451    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
145452    +END;
MPRINT(EM_DIAGRAM):   END;
145453    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
145454    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
145455    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
145456    +END;
MPRINT(EM_DIAGRAM):   END;
145457    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
145458    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
145459    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
145460    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
145461    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
145462    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
145463    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
145464    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
145465    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
145466    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
145467    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
145468    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
145469    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
145470    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
145471    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
145472    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
145473    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
145474    +END;
MPRINT(EM_DIAGRAM):   END;
145475    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
145476    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
145477    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
145478    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
145479    +* Renaming variables for AutoNeural47;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural47;
145480    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
145481    +* Renaming Posterior variables for AutoNeural47;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural47;
145482    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
145483    +drop AutoNeural47_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural47_P_DepVar1;
145484    +AutoNeural47_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural47_P_DepVar1 = P_DepVar1;
145485    +drop AutoNeural47_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural47_P_DepVar0;
145486    +AutoNeural47_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural47_P_DepVar0 = P_DepVar0;
145487    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
145488    +* Renaming _WARN_ variable for AutoNeural47;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural47;
145489    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
145490    +length AutoNeural47_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural47_WARN_ $4;
145491    +drop AutoNeural47_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural47_WARN_;
145492    +AutoNeural47_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural47_WARN_ = _WARN_;
145493    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
145494    +* Ensmbl22: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Scoring Code of model 5 of 7;
145495    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
145496    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
145497    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
145498    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
145499    +* NODE: Neural30;
MPRINT(EM_DIAGRAM):   * NODE: Neural30;
145500    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
145501    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
145502    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
145503    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
145504    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
145505    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
145506    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
145507    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
145508    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
145509    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
145510    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
145511    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
145512    +LENGTH _WARN_ $4
145513    +      F_DepVar  $ 12
145514    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
145515    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
145516    +
145517    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
145518    +
145519    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
145520    +
145521    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
145522    +
145523    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
145524    +
145525    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
145526    +
145527    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
145528    +
145529    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
145530    +
145531    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
145532    +
145533    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
145534    +
145535    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
145536    +
145537    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
145538    +
145539    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
145540    +
145541    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
145542    +
145543    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
145544    +
145545    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
145546    +
145547    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
145548    +
145549    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
145550    +
145551    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
145552    +
145553    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
145554    +
145555    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
145556    +
145557    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
145558    +
145559    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
145560    +
145561    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
145562    +
145563    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
145564    +
145565    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
145566    +
145567    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
145568    +
145569    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
145570    +
145571    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
145572    +
145573    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
145574    +
145575    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
145576    +
145577    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
145578    +
145579    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
145580    +
145581    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
145582    +
145583    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
145584    +
145585    +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
145586    +
145587    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
145588    +
145589    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
145590    +
145591    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
145592    +
145593    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
145594    +
145595    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
145596    +
145597    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
145598    +
145599    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
145600    +
145601    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
145602    +
145603    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
145604    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
145605    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
145606    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
145607    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
145608    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
145609    +end;
MPRINT(EM_DIAGRAM):   end;
145610    +else do;
MPRINT(EM_DIAGRAM):   else do;
145611    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
145612    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
145613    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
145614    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
145615    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
145616    +   end;
MPRINT(EM_DIAGRAM):   end;
145617    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
145618    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
145619    +   end;
MPRINT(EM_DIAGRAM):   end;
145620    +   else do;
MPRINT(EM_DIAGRAM):   else do;
145621    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
145622    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
145623    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
145624    +   end;
MPRINT(EM_DIAGRAM):   end;
145625    +end;
MPRINT(EM_DIAGRAM):   end;
145626    +
145627    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
145628    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
145629    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
145630    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
145631    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
145632    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
145633    +end;
MPRINT(EM_DIAGRAM):   end;
145634    +else do;
MPRINT(EM_DIAGRAM):   else do;
145635    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
145636    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
145637    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
145638    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
145639    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
145640    +   end;
MPRINT(EM_DIAGRAM):   end;
145641    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
145642    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
145643    +   end;
MPRINT(EM_DIAGRAM):   end;
145644    +   else do;
MPRINT(EM_DIAGRAM):   else do;
145645    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
145646    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
145647    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
145648    +   end;
MPRINT(EM_DIAGRAM):   end;
145649    +end;
MPRINT(EM_DIAGRAM):   end;
145650    +
145651    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
145652    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
145653    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
145654    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
145655    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
145656    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
145657    +end;
MPRINT(EM_DIAGRAM):   end;
145658    +else do;
MPRINT(EM_DIAGRAM):   else do;
145659    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
145660    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
145661    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
145662    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
145663    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
145664    +   end;
MPRINT(EM_DIAGRAM):   end;
145665    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
145666    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
145667    +   end;
MPRINT(EM_DIAGRAM):   end;
145668    +   else do;
MPRINT(EM_DIAGRAM):   else do;
145669    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
145670    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
145671    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
145672    +   end;
MPRINT(EM_DIAGRAM):   end;
145673    +end;
MPRINT(EM_DIAGRAM):   end;
145674    +
145675    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
145676    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
145677    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
145678    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
145679    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
145680    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
145681    +end;
MPRINT(EM_DIAGRAM):   end;
145682    +else do;
MPRINT(EM_DIAGRAM):   else do;
145683    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
145684    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
145685    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
145686    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
145687    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
145688    +   end;
MPRINT(EM_DIAGRAM):   end;
145689    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
145690    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
145691    +   end;
MPRINT(EM_DIAGRAM):   end;
145692    +   else do;
MPRINT(EM_DIAGRAM):   else do;
145693    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
145694    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
145695    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
145696    +   end;
MPRINT(EM_DIAGRAM):   end;
145697    +end;
MPRINT(EM_DIAGRAM):   end;
145698    +
145699    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
145700    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
145701    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
145702    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
145703    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
145704    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
145705    +end;
MPRINT(EM_DIAGRAM):   end;
145706    +else do;
MPRINT(EM_DIAGRAM):   else do;
145707    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
145708    +   _dm12 = put( AcceptedCmp5 , BEST. );
The SAS System
 
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
145709    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
145710    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
145711    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
145712    +   end;
MPRINT(EM_DIAGRAM):   end;
145713    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
145714    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
145715    +   end;
MPRINT(EM_DIAGRAM):   end;
145716    +   else do;
MPRINT(EM_DIAGRAM):   else do;
145717    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
145718    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
145719    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
145720    +   end;
MPRINT(EM_DIAGRAM):   end;
145721    +end;
MPRINT(EM_DIAGRAM):   end;
145722    +
145723    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
145724    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
145725    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
145726    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
145727    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
145728    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
145729    +end;
MPRINT(EM_DIAGRAM):   end;
145730    +else do;
MPRINT(EM_DIAGRAM):   else do;
145731    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
145732    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
145733    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
145734    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
145735    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
145736    +   end;
MPRINT(EM_DIAGRAM):   end;
145737    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
145738    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
145739    +   end;
MPRINT(EM_DIAGRAM):   end;
145740    +   else do;
MPRINT(EM_DIAGRAM):   else do;
145741    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
145742    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
145743    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
145744    +   end;
MPRINT(EM_DIAGRAM):   end;
145745    +end;
MPRINT(EM_DIAGRAM):   end;
145746    +
145747    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
145748    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
145749    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
145750    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
145751    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
145752    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
145753    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
145754    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
145755    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
145756    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
145757    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
145758    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
145759    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
145760    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
145761    +end;
MPRINT(EM_DIAGRAM):   end;
145762    +else do;
MPRINT(EM_DIAGRAM):   else do;
145763    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
145764    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
145765    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
145766    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
145767    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
145768    +   end;
MPRINT(EM_DIAGRAM):   end;
145769    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
145770    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
145771    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
145772    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
145773    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
145774    +   end;
MPRINT(EM_DIAGRAM):   end;
145775    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
145776    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
145777    +   end;
MPRINT(EM_DIAGRAM):   end;
145778    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
145779    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
145780    +   end;
MPRINT(EM_DIAGRAM):   end;
145781    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
145782    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
145783    +   end;
MPRINT(EM_DIAGRAM):   end;
145784    +   else do;
MPRINT(EM_DIAGRAM):   else do;
145785    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
145786    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
145787    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
145788    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
145789    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
145790    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
145791    +   end;
MPRINT(EM_DIAGRAM):   end;
145792    +end;
MPRINT(EM_DIAGRAM):   end;
145793    +
145794    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
145795    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
145796    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
145797    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
145798    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
145799    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
145800    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
145801    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
145802    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
145803    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
145804    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
145805    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
145806    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
145807    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
145808    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
145809    +end;
MPRINT(EM_DIAGRAM):   end;
145810    +else do;
MPRINT(EM_DIAGRAM):   else do;
145811    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
145812    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
145813    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
145814    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
145815    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
145816    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
145817    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
145818    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
145819    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
145820    +         end;
MPRINT(EM_DIAGRAM):   end;
145821    +         else do;
MPRINT(EM_DIAGRAM):   else do;
145822    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
145823    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
145824    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
145825    +            end;
MPRINT(EM_DIAGRAM):   end;
145826    +         end;
MPRINT(EM_DIAGRAM):   end;
145827    +      end;
MPRINT(EM_DIAGRAM):   end;
145828    +      else do;
MPRINT(EM_DIAGRAM):   else do;
145829    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
145830    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
145831    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
145832    +         end;
MPRINT(EM_DIAGRAM):   end;
145833    +      end;
MPRINT(EM_DIAGRAM):   end;
145834    +   end;
MPRINT(EM_DIAGRAM):   end;
145835    +   else do;
MPRINT(EM_DIAGRAM):   else do;
145836    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
145837    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
145838    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
145839    +      end;
MPRINT(EM_DIAGRAM):   end;
145840    +      else do;
MPRINT(EM_DIAGRAM):   else do;
145841    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
145842    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
145843    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
145844    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
145845    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
145846    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
145847    +         end;
MPRINT(EM_DIAGRAM):   end;
145848    +      end;
MPRINT(EM_DIAGRAM):   end;
145849    +   end;
MPRINT(EM_DIAGRAM):   end;
145850    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
145851    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
145852    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
145853    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
145854    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
145855    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
145856    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
145857    +   end;
MPRINT(EM_DIAGRAM):   end;
145858    +end;
MPRINT(EM_DIAGRAM):   end;
145859    +
145860    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
145861    +*** Checking missing input Interval
145862    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
145863    +
145864    +IF NMISS(
145865    +   Income ,
145866    +   Kidhome ,
145867    +   MntFishProducts ,
145868    +   MntFruits ,
145869    +   MntGoldProds ,
145870    +   MntMeatProducts ,
145871    +   MntSweetProducts ,
145872    +   MntWines ,
145873    +   NumCatalogPurchases ,
145874    +   NumDealsPurchases ,
145875    +   NumStorePurchases ,
145876    +   NumWebPurchases ,
145877    +   NumWebVisitsMonth ,
145878    +   Recency ,
145879    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
145880    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
145881    +
145882    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
145883    +END;
MPRINT(EM_DIAGRAM):   END;
145884    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
145885    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
145886    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
145887    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
145888    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
145889    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
145890    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
145891    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
145892    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
145893    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
145894    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
145895    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
145896    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
145897    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
145898    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
145899    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
145900    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
145901    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
145902    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
145903    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
145904    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
145905    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
145906    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
145907    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
145908    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
145909    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
145910    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
145911    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
145912    +END;
MPRINT(EM_DIAGRAM):   END;
145913    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
145914    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
145915    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
145916    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
145917    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
145918    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
145919    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
145920    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
145921    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
145922    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
145923    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
145924    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
145925    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
145926    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
145927    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
145928    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
145929    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
145930    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
145931    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
145932    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
145933    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
145934    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
145935    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
145936    +   ELSE S_NumCatalogPurchases
145937    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
145938    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
145939    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
145940    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
145941    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
145942    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
145943    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
145944    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
145945    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
145946    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
145947    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
145948    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
145949    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
145950    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
145951    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
145952    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
145953    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
145954    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
145955    +END;
MPRINT(EM_DIAGRAM):   END;
145956    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
145957    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
145958    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
145959    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
145960    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
145961    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
145962    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
145963    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
145964    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
145965    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
145966    +   H11  =    -0.59781928082243 * S_Income  +     0.49830142312288 * S_Kidhome
145967    +          +    -0.00045024466632 * S_MntFishProducts
145968    +          +    -0.22421712710333 * S_MntFruits  +    -0.19010144853469 *
145969    +        S_MntGoldProds  +    -0.53373773623953 * S_MntMeatProducts
145970    +          +     0.17506402203495 * S_MntSweetProducts
145971    +          +    -0.28551398649672 * S_MntWines  +       0.019870944777 *
145972    +        S_NumCatalogPurchases  +     0.03537776181533 * S_NumDealsPurchases
145973    +          +     0.05580468715403 * S_NumStorePurchases
145974    +          +    -0.29131611132704 * S_NumWebPurchases
145975    +          +    -0.40690084025802 * S_NumWebVisitsMonth
145976    +          +     0.48640195058901 * S_Recency  +     0.31820890239661 *
145977    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.59781928082243 * S_Income + 0.49830142312288 * S_Kidhome +
-0.00045024466632 * S_MntFishProducts + -0.22421712710333 * S_MntFruits + -0.19010144853469 *
S_MntGoldProds + -0.53373773623953 * S_MntMeatProducts + 0.17506402203495 * S_MntSweetProducts
+ -0.28551398649672 * S_MntWines + 0.019870944777 * S_NumCatalogPurchases + 0.03537776181533 *
S_NumDealsPurchases + 0.05580468715403 * S_NumStorePurchases + -0.29131611132704 *
S_NumWebPurchases + -0.40690084025802 * S_NumWebVisitsMonth + 0.48640195058901 * S_Recency +
0.31820890239661 * S_Teenhome ;
145978    +   H12  =    -0.41871753512335 * S_Income  +      0.6025072461821 * S_Kidhome
145979    +          +    -0.03132724937716 * S_MntFishProducts
145980    +          +     0.19114182835046 * S_MntFruits  +     0.13483463809539 *
145981    +        S_MntGoldProds  +    -0.63593603749443 * S_MntMeatProducts
145982    +          +    -0.07569302401223 * S_MntSweetProducts
145983    +          +     0.67050112032753 * S_MntWines  +    -0.23159243932208 *
145984    +        S_NumCatalogPurchases  +    -0.07183698407409 * S_NumDealsPurchases
145985    +          +     0.54619681114623 * S_NumStorePurchases
145986    +          +     0.44325129671249 * S_NumWebPurchases
145987    +          +    -1.25054401670605 * S_NumWebVisitsMonth
145988    +          +      1.2376290916151 * S_Recency  +     0.43747371517287 *
145989    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.41871753512335 * S_Income + 0.6025072461821 * S_Kidhome +
-0.03132724937716 * S_MntFishProducts + 0.19114182835046 * S_MntFruits + 0.13483463809539 *
S_MntGoldProds + -0.63593603749443 * S_MntMeatProducts + -0.07569302401223 *
S_MntSweetProducts + 0.67050112032753 * S_MntWines + -0.23159243932208 * S_NumCatalogPurchases
+ -0.07183698407409 * S_NumDealsPurchases + 0.54619681114623 * S_NumStorePurchases +
0.44325129671249 * S_NumWebPurchases + -1.25054401670605 * S_NumWebVisitsMonth +
1.2376290916151 * S_Recency + 0.43747371517287 * S_Teenhome ;
145990    +   H13  =      0.0713579189325 * S_Income  +    -0.05759612462349 * S_Kidhome
145991    +          +     0.07631777381832 * S_MntFishProducts
145992    +          +    -0.00387785552441 * S_MntFruits  +    -0.21868916314192 *
145993    +        S_MntGoldProds  +       0.072623883197 * S_MntMeatProducts
145994    +          +     0.12637946833766 * S_MntSweetProducts
145995    +          +    -0.37981663841124 * S_MntWines  +    -0.89958525403162 *
145996    +        S_NumCatalogPurchases  +    -0.17471885937598 * S_NumDealsPurchases
145997    +          +     0.15845618359126 * S_NumStorePurchases
145998    +          +    -0.33296932705082 * S_NumWebPurchases
145999    +          +      0.0260072296349 * S_NumWebVisitsMonth
146000    +          +     0.02544749712977 * S_Recency  +    -0.17381561661022 *
146001    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.0713579189325 * S_Income + -0.05759612462349 * S_Kidhome +
0.07631777381832 * S_MntFishProducts + -0.00387785552441 * S_MntFruits + -0.21868916314192 *
S_MntGoldProds + 0.072623883197 * S_MntMeatProducts + 0.12637946833766 * S_MntSweetProducts +
-0.37981663841124 * S_MntWines + -0.89958525403162 * S_NumCatalogPurchases + -0.17471885937598
* S_NumDealsPurchases + 0.15845618359126 * S_NumStorePurchases + -0.33296932705082 *
S_NumWebPurchases + 0.0260072296349 * S_NumWebVisitsMonth + 0.02544749712977 * S_Recency +
-0.17381561661022 * S_Teenhome ;
146002    +   H14  =    -0.47498613710851 * S_Income  +     0.09339198401437 * S_Kidhome
146003    +          +    -0.13642352619174 * S_MntFishProducts
146004    +          +     0.27167245582117 * S_MntFruits  +    -0.00579747559996 *
146005    +        S_MntGoldProds  +     0.31591387319577 * S_MntMeatProducts
146006    +          +     0.14125815807238 * S_MntSweetProducts
146007    +          +     0.07862916790983 * S_MntWines  +    -0.58905358997534 *
146008    +        S_NumCatalogPurchases  +     -0.5574069633995 * S_NumDealsPurchases
146009    +          +     0.19718828261526 * S_NumStorePurchases
146010    +          +    -0.24156925391919 * S_NumWebPurchases
146011    +          +    -0.25711078938749 * S_NumWebVisitsMonth
146012    +          +     0.38883063223812 * S_Recency  +     -0.2396731334184 *
146013    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.47498613710851 * S_Income + 0.09339198401437 * S_Kidhome +
-0.13642352619174 * S_MntFishProducts + 0.27167245582117 * S_MntFruits + -0.00579747559996 *
S_MntGoldProds + 0.31591387319577 * S_MntMeatProducts + 0.14125815807238 * S_MntSweetProducts
+ 0.07862916790983 * S_MntWines + -0.58905358997534 * S_NumCatalogPurchases + -0.5574069633995
* S_NumDealsPurchases + 0.19718828261526 * S_NumStorePurchases + -0.24156925391919 *
S_NumWebPurchases + -0.25711078938749 * S_NumWebVisitsMonth + 0.38883063223812 * S_Recency +
-0.2396731334184 * S_Teenhome ;
146014    +   H15  =     0.24624924979609 * S_Income  +    -0.37052106312109 * S_Kidhome
146015    +          +     0.13579628643404 * S_MntFishProducts
146016    +          +    -0.05263868911164 * S_MntFruits  +    -0.01504675049991 *
146017    +        S_MntGoldProds  +     -0.4202277804998 * S_MntMeatProducts
146018    +          +    -0.01039299374426 * S_MntSweetProducts
146019    +          +     0.71197420459135 * S_MntWines  +    -0.35973505575029 *
146020    +        S_NumCatalogPurchases  +     -0.4415445481482 * S_NumDealsPurchases
146021    +          +     0.58897740652611 * S_NumStorePurchases
146022    +          +     0.24564485851062 * S_NumWebPurchases
146023    +          +    -0.13976320243555 * S_NumWebVisitsMonth
146024    +          +      0.1199367613063 * S_Recency  +    -0.15283161418313 *
146025    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.24624924979609 * S_Income + -0.37052106312109 * S_Kidhome +
0.13579628643404 * S_MntFishProducts + -0.05263868911164 * S_MntFruits + -0.01504675049991 *
S_MntGoldProds + -0.4202277804998 * S_MntMeatProducts + -0.01039299374426 * S_MntSweetProducts
+ 0.71197420459135 * S_MntWines + -0.35973505575029 * S_NumCatalogPurchases + -0.4415445481482
* S_NumDealsPurchases + 0.58897740652611 * S_NumStorePurchases + 0.24564485851062 *
S_NumWebPurchases + -0.13976320243555 * S_NumWebVisitsMonth + 0.1199367613063 * S_Recency +
-0.15283161418313 * S_Teenhome ;
146026    +   H16  =     0.23493799758749 * S_Income  +     0.07038278079069 * S_Kidhome
146027    +          +    -0.45448768538367 * S_MntFishProducts
146028    +          +     0.02622380709004 * S_MntFruits  +     0.14726698184115 *
146029    +        S_MntGoldProds  +     0.65760183569767 * S_MntMeatProducts
146030    +          +    -0.16936256277023 * S_MntSweetProducts
146031    +          +    -0.40647066866305 * S_MntWines  +     0.99645493491726 *
146032    +        S_NumCatalogPurchases  +     0.65587239961358 * S_NumDealsPurchases
146033    +          +    -0.22309716855774 * S_NumStorePurchases
146034    +          +    -0.61204529910842 * S_NumWebPurchases
146035    +          +     0.43742228867615 * S_NumWebVisitsMonth
146036    +          +    -0.56099034256092 * S_Recency  +     -0.2445351671148 *
146037    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = 0.23493799758749 * S_Income + 0.07038278079069 * S_Kidhome +
-0.45448768538367 * S_MntFishProducts + 0.02622380709004 * S_MntFruits + 0.14726698184115 *
S_MntGoldProds + 0.65760183569767 * S_MntMeatProducts + -0.16936256277023 * S_MntSweetProducts
+ -0.40647066866305 * S_MntWines + 0.99645493491726 * S_NumCatalogPurchases + 0.65587239961358
* S_NumDealsPurchases + -0.22309716855774 * S_NumStorePurchases + -0.61204529910842 *
S_NumWebPurchases + 0.43742228867615 * S_NumWebVisitsMonth + -0.56099034256092 * S_Recency +
-0.2445351671148 * S_Teenhome ;
146038    +   H17  =    -0.00107702057163 * S_Income  +     0.25116135719972 * S_Kidhome
146039    +          +    -0.04540308470858 * S_MntFishProducts
146040    +          +        0.21487241577 * S_MntFruits  +    -0.12914913547414 *
146041    +        S_MntGoldProds  +    -0.04149021191395 * S_MntMeatProducts
146042    +          +     0.02853521979141 * S_MntSweetProducts
146043    +          +     -0.2435805887418 * S_MntWines  +    -0.04509621661407 *
146044    +        S_NumCatalogPurchases  +    -0.26492036720429 * S_NumDealsPurchases
146045    +          +     -0.3299561248944 * S_NumStorePurchases
146046    +          +    -0.09806597448224 * S_NumWebPurchases
146047    +          +      0.0427056351245 * S_NumWebVisitsMonth
146048    +          +     0.03953235628202 * S_Recency  +    -0.11317308767713 *
146049    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = -0.00107702057163 * S_Income + 0.25116135719972 * S_Kidhome +
-0.04540308470858 * S_MntFishProducts + 0.21487241577 * S_MntFruits + -0.12914913547414 *
S_MntGoldProds + -0.04149021191395 * S_MntMeatProducts + 0.02853521979141 * S_MntSweetProducts
+ -0.2435805887418 * S_MntWines + -0.04509621661407 * S_NumCatalogPurchases +
-0.26492036720429 * S_NumDealsPurchases + -0.3299561248944 * S_NumStorePurchases +
-0.09806597448224 * S_NumWebPurchases + 0.0427056351245 * S_NumWebVisitsMonth +
0.03953235628202 * S_Recency + -0.11317308767713 * S_Teenhome ;
146050    +   H11  = H11  +     0.50033674561531 * AcceptedCmp10
146051    +          +    -0.02275693117286 * AcceptedCmp20  +     0.31338891533156 *
146052    +        AcceptedCmp30  +      0.3901248845706 * AcceptedCmp40
146053    +          +     0.44314358358111 * AcceptedCmp50  +    -0.20444060864498 *
146054    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.50033674561531 * AcceptedCmp10 + -0.02275693117286 *
AcceptedCmp20 + 0.31338891533156 * AcceptedCmp30 + 0.3901248845706 * AcceptedCmp40 +
0.44314358358111 * AcceptedCmp50 + -0.20444060864498 * Complain0 ;
146055    +   H12  = H12  +     0.30103938822692 * AcceptedCmp10
146056    +          +     0.54298746723422 * AcceptedCmp20  +     0.50401040035525 *
146057    +        AcceptedCmp30  +     0.43447710825306 * AcceptedCmp40
146058    +          +     0.60794421030027 * AcceptedCmp50  +    -0.28114274461319 *
146059    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.30103938822692 * AcceptedCmp10 + 0.54298746723422 *
AcceptedCmp20 + 0.50401040035525 * AcceptedCmp30 + 0.43447710825306 * AcceptedCmp40 +
0.60794421030027 * AcceptedCmp50 + -0.28114274461319 * Complain0 ;
146060    +   H13  = H13  +     -0.1890212967757 * AcceptedCmp10
146061    +          +    -0.11487406996391 * AcceptedCmp20  +    -0.22740618754863 *
146062    +        AcceptedCmp30  +      0.2354510231918 * AcceptedCmp40
146063    +          +    -0.14327434649067 * AcceptedCmp50  +    -0.17839080850556 *
146064    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.1890212967757 * AcceptedCmp10 + -0.11487406996391 *
AcceptedCmp20 + -0.22740618754863 * AcceptedCmp30 + 0.2354510231918 * AcceptedCmp40 +
-0.14327434649067 * AcceptedCmp50 + -0.17839080850556 * Complain0 ;
146065    +   H14  = H14  +    -0.28194187416219 * AcceptedCmp10
146066    +          +     0.11732089254624 * AcceptedCmp20  +     0.34964075536156 *
146067    +        AcceptedCmp30  +     0.05772396286169 * AcceptedCmp40
146068    +          +    -0.08671748651826 * AcceptedCmp50  +      0.0629540108407 *
146069    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.28194187416219 * AcceptedCmp10 + 0.11732089254624 *
AcceptedCmp20 + 0.34964075536156 * AcceptedCmp30 + 0.05772396286169 * AcceptedCmp40 +
-0.08671748651826 * AcceptedCmp50 + 0.0629540108407 * Complain0 ;
146070    +   H15  = H15  +    -0.01058257322803 * AcceptedCmp10
146071    +          +     0.26755355732587 * AcceptedCmp20  +     0.40856661734724 *
146072    +        AcceptedCmp30  +     0.02977117354989 * AcceptedCmp40
146073    +          +       0.073655049734 * AcceptedCmp50  +     0.25562048226555 *
146074    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.01058257322803 * AcceptedCmp10 + 0.26755355732587 *
AcceptedCmp20 + 0.40856661734724 * AcceptedCmp30 + 0.02977117354989 * AcceptedCmp40 +
0.073655049734 * AcceptedCmp50 + 0.25562048226555 * Complain0 ;
146075    +   H16  = H16  +    -0.65590117532084 * AcceptedCmp10
146076    +          +    -0.31314161223579 * AcceptedCmp20  +    -0.18863165264573 *
146077    +        AcceptedCmp30  +    -0.18832338914237 * AcceptedCmp40
146078    +          +    -0.53765749471786 * AcceptedCmp50  +     0.17409401877513 *
146079    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.65590117532084 * AcceptedCmp10 + -0.31314161223579 *
AcceptedCmp20 + -0.18863165264573 * AcceptedCmp30 + -0.18832338914237 * AcceptedCmp40 +
-0.53765749471786 * AcceptedCmp50 + 0.17409401877513 * Complain0 ;
146080    +   H17  = H17  +    -0.42253231673718 * AcceptedCmp10
146081    +          +    -0.40954345229557 * AcceptedCmp20  +    -0.30577523080786 *
146082    +        AcceptedCmp30  +    -0.22396670899437 * AcceptedCmp40
146083    +          +     0.05757251451004 * AcceptedCmp50  +     0.07813950542487 *
146084    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.42253231673718 * AcceptedCmp10 + -0.40954345229557 *
AcceptedCmp20 + -0.30577523080786 * AcceptedCmp30 + -0.22396670899437 * AcceptedCmp40 +
0.05757251451004 * AcceptedCmp50 + 0.07813950542487 * Complain0 ;
146085    +   H11  = H11  +    -0.14483542022901 * Education2n_Cycle
146086    +          +     0.32176647745332 * EducationBasic  +     0.00900796305072 *
146087    +        EducationGraduation  +    -0.00243484910123 * EducationMaster
146088    +          +    -0.22074132229211 * Marital_StatusDivorced
146089    +          +     0.70282742634901 * Marital_StatusMarried
146090    +          +     -0.5926244797961 * Marital_StatusSingle
146091    +          +     0.21342221410999 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.14483542022901 * Education2n_Cycle + 0.32176647745332 *
EducationBasic + 0.00900796305072 * EducationGraduation + -0.00243484910123 * EducationMaster
+ -0.22074132229211 * Marital_StatusDivorced + 0.70282742634901 * Marital_StatusMarried +
-0.5926244797961 * Marital_StatusSingle + 0.21342221410999 * Marital_StatusTogether ;
146092    +   H12  = H12  +    -0.10242932200247 * Education2n_Cycle
146093    +          +     0.34937926721317 * EducationBasic  +    -0.20395479511872 *
146094    +        EducationGraduation  +     0.31210327899339 * EducationMaster
146095    +          +    -0.46376392175295 * Marital_StatusDivorced
146096    +          +       0.589453579718 * Marital_StatusMarried
146097    +          +    -0.45342174978481 * Marital_StatusSingle
146098    +          +     0.70517120763557 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.10242932200247 * Education2n_Cycle + 0.34937926721317 *
EducationBasic + -0.20395479511872 * EducationGraduation + 0.31210327899339 * EducationMaster
+ -0.46376392175295 * Marital_StatusDivorced + 0.589453579718 * Marital_StatusMarried +
-0.45342174978481 * Marital_StatusSingle + 0.70517120763557 * Marital_StatusTogether ;
146099    +   H13  = H13  +     0.24858755570324 * Education2n_Cycle
146100    +          +     0.07360039359386 * EducationBasic  +    -0.42563056620078 *
146101    +        EducationGraduation  +    -0.25970840250323 * EducationMaster
146102    +          +     0.26981972015482 * Marital_StatusDivorced
146103    +          +    -0.01707364864139 * Marital_StatusMarried
146104    +          +     0.38646060840009 * Marital_StatusSingle
146105    +          +     0.19694047086013 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.24858755570324 * Education2n_Cycle + 0.07360039359386 *
EducationBasic + -0.42563056620078 * EducationGraduation + -0.25970840250323 * EducationMaster
+ 0.26981972015482 * Marital_StatusDivorced + -0.01707364864139 * Marital_StatusMarried +
0.38646060840009 * Marital_StatusSingle + 0.19694047086013 * Marital_StatusTogether ;
146106    +   H14  = H14  +     0.22577522124265 * Education2n_Cycle
146107    +          +     0.04183136697557 * EducationBasic  +    -0.27725331198825 *
146108    +        EducationGraduation  +     0.15709188532123 * EducationMaster
146109    +          +    -0.01933675094701 * Marital_StatusDivorced
146110    +          +     0.52969577969434 * Marital_StatusMarried
146111    +          +      -0.348697714569 * Marital_StatusSingle
146112    +          +      0.5020342481888 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.22577522124265 * Education2n_Cycle + 0.04183136697557 *
EducationBasic + -0.27725331198825 * EducationGraduation + 0.15709188532123 * EducationMaster
+ -0.01933675094701 * Marital_StatusDivorced + 0.52969577969434 * Marital_StatusMarried +
-0.348697714569 * Marital_StatusSingle + 0.5020342481888 * Marital_StatusTogether ;
146113    +   H15  = H15  +     0.04488332711225 * Education2n_Cycle
146114    +          +     0.01911097443907 * EducationBasic  +    -0.11699443624996 *
146115    +        EducationGraduation  +    -0.07291393566738 * EducationMaster
146116    +          +    -0.04665146013984 * Marital_StatusDivorced
146117    +          +      -0.586219175167 * Marital_StatusMarried
146118    +          +     0.55713543417712 * Marital_StatusSingle
146119    +          +    -0.42208959885332 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.04488332711225 * Education2n_Cycle + 0.01911097443907 *
EducationBasic + -0.11699443624996 * EducationGraduation + -0.07291393566738 * EducationMaster
+ -0.04665146013984 * Marital_StatusDivorced + -0.586219175167 * Marital_StatusMarried +
0.55713543417712 * Marital_StatusSingle + -0.42208959885332 * Marital_StatusTogether ;
146120    +   H16  = H16  +     0.09174117861154 * Education2n_Cycle
146121    +          +     -0.1378945860659 * EducationBasic  +     -0.0728635369665 *
146122    +        EducationGraduation  +     0.29860714824438 * EducationMaster
146123    +          +    -0.05632171154347 * Marital_StatusDivorced
146124    +          +     0.03215547861665 * Marital_StatusMarried
146125    +          +     0.16870781172538 * Marital_StatusSingle
146126    +          +    -0.04883314322676 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.09174117861154 * Education2n_Cycle + -0.1378945860659 *
EducationBasic + -0.0728635369665 * EducationGraduation + 0.29860714824438 * EducationMaster +
-0.05632171154347 * Marital_StatusDivorced + 0.03215547861665 * Marital_StatusMarried +
0.16870781172538 * Marital_StatusSingle + -0.04883314322676 * Marital_StatusTogether ;
146127    +   H17  = H17  +    -0.00343694558117 * Education2n_Cycle
146128    +          +     0.32636427598227 * EducationBasic  +     0.16259654486833 *
146129    +        EducationGraduation  +    -0.00424229454859 * EducationMaster
146130    +          +    -0.21765415159355 * Marital_StatusDivorced
146131    +          +     -0.0542857922075 * Marital_StatusMarried
146132    +          +     0.20679907454933 * Marital_StatusSingle
146133    +          +     0.14976519710725 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.00343694558117 * Education2n_Cycle + 0.32636427598227 *
EducationBasic + 0.16259654486833 * EducationGraduation + -0.00424229454859 * EducationMaster
+ -0.21765415159355 * Marital_StatusDivorced + -0.0542857922075 * Marital_StatusMarried +
0.20679907454933 * Marital_StatusSingle + 0.14976519710725 * Marital_StatusTogether ;
146134    +   H11  =     0.92977078759503 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.92977078759503 + H11 ;
146135    +   H12  =    -0.97970409253156 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.97970409253156 + H12 ;
146136    +   H13  =     -0.5001144792196 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.5001144792196 + H13 ;
146137    +   H14  =    -0.90715840862541 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.90715840862541 + H14 ;
146138    +   H15  =     0.87046153389036 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.87046153389036 + H15 ;
146139    +   H16  =     0.49066122767086 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 0.49066122767086 + H16 ;
146140    +   H17  =    -1.05949763460293 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.05949763460293 + H17 ;
146141    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
146142    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
146143    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
146144    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
146145    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
146146    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
146147    +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
146148    +END;
MPRINT(EM_DIAGRAM):   END;
146149    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
146150    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
146151    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
146152    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
146153    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
146154    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
146155    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
146156    +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
146157    +END;
MPRINT(EM_DIAGRAM):   END;
146158    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
146159    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
146160    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
146161    +
146162    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
146163    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
146164    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
146165    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
146166    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
146167    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
146168    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
146169    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
146170    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
146171    +end;
MPRINT(EM_DIAGRAM):   end;
146172    +else do;
MPRINT(EM_DIAGRAM):   else do;
146173    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
146174    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
146175    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
146176    +   end;
MPRINT(EM_DIAGRAM):   end;
146177    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
146178    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
146179    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
146180    +   end;
MPRINT(EM_DIAGRAM):   end;
146181    +   else do;
MPRINT(EM_DIAGRAM):   else do;
146182    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
146183    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
146184    +   end;
MPRINT(EM_DIAGRAM):   end;
146185    +end;
MPRINT(EM_DIAGRAM):   end;
146186    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
146187    +   P_DepVar1  =    -2.32998401250848 * H11  +     -3.2074078511991 * H12
146188    +          +    -0.69549988605443 * H13  +    -1.74950789108762 * H14
146189    +          +    -1.74013772071344 * H15  +     2.65306089869015 * H16
146190    +          +     0.03700459000906 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.32998401250848 * H11 + -3.2074078511991 * H12 +
-0.69549988605443 * H13 + -1.74950789108762 * H14 + -1.74013772071344 * H15 + 2.65306089869015
* H16 + 0.03700459000906 * H17 ;
146191    +   P_DepVar1  =    -1.51229898726716 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.51229898726716 + P_DepVar1 ;
146192    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
146193    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
146194    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
146195    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
146196    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
146197    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
146198    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
146199    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
146200    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
146201    +END;
MPRINT(EM_DIAGRAM):   END;
146202    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
146203    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
146204    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
146205    +END;
MPRINT(EM_DIAGRAM):   END;
146206    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
146207    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
146208    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
146209    +END;
MPRINT(EM_DIAGRAM):   END;
146210    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
146211    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
146212    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
146213    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
146214    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
146215    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
146216    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
146217    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
146218    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
146219    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
146220    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
146221    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
146222    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
146223    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
146224    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
146225    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
146226    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
146227    +END;
MPRINT(EM_DIAGRAM):   END;
146228    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
146229    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
146230    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
146231    +drop
146232    +H11
146233    +H12
146234    +H13
146235    +H14
146236    +H15
146237    +H16
146238    +H17
146239    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
146240    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
146241    +* Renaming variables for Neural30;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural30;
146242    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
146243    +* Renaming Posterior variables for Neural30;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural30;
146244    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
146245    +drop Neural30_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural30_P_DepVar1;
146246    +Neural30_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural30_P_DepVar1 = P_DepVar1;
146247    +drop Neural30_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural30_P_DepVar0;
146248    +Neural30_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural30_P_DepVar0 = P_DepVar0;
146249    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
146250    +* Renaming _WARN_ variable for Neural30;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural30;
146251    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
146252    +length Neural30_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural30_WARN_ $4;
146253    +drop Neural30_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural30_WARN_;
146254    +Neural30_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural30_WARN_ = _WARN_;
146255    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
146256    +* Ensmbl22: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Scoring Code of model 6 of 7;
146257    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
146258    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
146259    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
146260    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
146261    +* NODE: Neural35;
MPRINT(EM_DIAGRAM):   * NODE: Neural35;
146262    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
146263    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
146264    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
146265    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
146266    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
146267    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
146268    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
146269    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
146270    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
146271    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
146272    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
146273    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
146274    +LENGTH _WARN_ $4
146275    +      F_DepVar  $ 12
146276    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
146277    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
146278    +
146279    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
146280    +
146281    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
146282    +
146283    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
146284    +
146285    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
146286    +
146287    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
146288    +
146289    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
146290    +
146291    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
146292    +
146293    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
146294    +
146295    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
146296    +
146297    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
146298    +
146299    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
146300    +
146301    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
146302    +
146303    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
146304    +
146305    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
146306    +
146307    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
146308    +
146309    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
146310    +
146311    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
146312    +
146313    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
146314    +
146315    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
146316    +
146317    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
146318    +
146319    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
146320    +
146321    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
146322    +
146323    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
146324    +
146325    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
146326    +
146327    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
146328    +
146329    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
146330    +
146331    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
146332    +
146333    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
146334    +
146335    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
146336    +
146337    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
146338    +
146339    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
146340    +
146341    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
146342    +
146343    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
146344    +
146345    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
146346    +
146347    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
146348    +
146349    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
146350    +
146351    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
146352    +
146353    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
146354    +
146355    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
146356    +
146357    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
146358    +
146359    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
146360    +
146361    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
146362    +
146363    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
146364    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
146365    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
146366    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
146367    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
146368    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
146369    +end;
MPRINT(EM_DIAGRAM):   end;
146370    +else do;
MPRINT(EM_DIAGRAM):   else do;
146371    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
146372    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
146373    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
146374    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
146375    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
146376    +   end;
MPRINT(EM_DIAGRAM):   end;
146377    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
146378    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
146379    +   end;
MPRINT(EM_DIAGRAM):   end;
146380    +   else do;
MPRINT(EM_DIAGRAM):   else do;
146381    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
146382    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
146383    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
146384    +   end;
MPRINT(EM_DIAGRAM):   end;
146385    +end;
MPRINT(EM_DIAGRAM):   end;
146386    +
146387    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
146388    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
146389    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
146390    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
146391    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
146392    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
146393    +end;
MPRINT(EM_DIAGRAM):   end;
146394    +else do;
MPRINT(EM_DIAGRAM):   else do;
146395    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
146396    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
146397    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
146398    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
146399    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
146400    +   end;
MPRINT(EM_DIAGRAM):   end;
146401    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
146402    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
146403    +   end;
MPRINT(EM_DIAGRAM):   end;
146404    +   else do;
MPRINT(EM_DIAGRAM):   else do;
146405    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
146406    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
146407    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
146408    +   end;
MPRINT(EM_DIAGRAM):   end;
146409    +end;
MPRINT(EM_DIAGRAM):   end;
146410    +
146411    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
146412    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
146413    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
146414    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
146415    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
146416    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
146417    +end;
MPRINT(EM_DIAGRAM):   end;
146418    +else do;
MPRINT(EM_DIAGRAM):   else do;
146419    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
146420    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
146421    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
146422    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
146423    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
146424    +   end;
MPRINT(EM_DIAGRAM):   end;
146425    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
146426    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
146427    +   end;
MPRINT(EM_DIAGRAM):   end;
146428    +   else do;
MPRINT(EM_DIAGRAM):   else do;
146429    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
146430    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
146431    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
146432    +   end;
MPRINT(EM_DIAGRAM):   end;
146433    +end;
MPRINT(EM_DIAGRAM):   end;
146434    +
146435    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
146436    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
146437    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
146438    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
146439    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
146440    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
146441    +end;
MPRINT(EM_DIAGRAM):   end;
146442    +else do;
MPRINT(EM_DIAGRAM):   else do;
146443    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
146444    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
146445    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
146446    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
146447    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
146448    +   end;
MPRINT(EM_DIAGRAM):   end;
146449    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
146450    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
146451    +   end;
MPRINT(EM_DIAGRAM):   end;
146452    +   else do;
MPRINT(EM_DIAGRAM):   else do;
146453    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
146454    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
146455    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
146456    +   end;
MPRINT(EM_DIAGRAM):   end;
146457    +end;
MPRINT(EM_DIAGRAM):   end;
146458    +
146459    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
146460    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
146461    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
146462    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
146463    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
146464    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
146465    +end;
MPRINT(EM_DIAGRAM):   end;
146466    +else do;
MPRINT(EM_DIAGRAM):   else do;
146467    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
146468    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
146469    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
146470    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
146471    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
146472    +   end;
MPRINT(EM_DIAGRAM):   end;
146473    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
146474    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
146475    +   end;
MPRINT(EM_DIAGRAM):   end;
146476    +   else do;
MPRINT(EM_DIAGRAM):   else do;
146477    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
146478    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
146479    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
146480    +   end;
MPRINT(EM_DIAGRAM):   end;
146481    +end;
MPRINT(EM_DIAGRAM):   end;
146482    +
146483    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
146484    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
146485    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
146486    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
146487    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
146488    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
146489    +end;
MPRINT(EM_DIAGRAM):   end;
146490    +else do;
MPRINT(EM_DIAGRAM):   else do;
146491    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
146492    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
146493    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
146494    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
146495    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
146496    +   end;
MPRINT(EM_DIAGRAM):   end;
146497    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
146498    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
146499    +   end;
MPRINT(EM_DIAGRAM):   end;
146500    +   else do;
MPRINT(EM_DIAGRAM):   else do;
146501    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
146502    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
146503    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
146504    +   end;
MPRINT(EM_DIAGRAM):   end;
146505    +end;
MPRINT(EM_DIAGRAM):   end;
146506    +
146507    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
146508    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
146509    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
146510    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
146511    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
146512    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
146513    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
146514    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
146515    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
146516    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
146517    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
146518    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
146519    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
146520    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
146521    +end;
MPRINT(EM_DIAGRAM):   end;
146522    +else do;
MPRINT(EM_DIAGRAM):   else do;
146523    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
146524    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
146525    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
146526    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
146527    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
146528    +   end;
MPRINT(EM_DIAGRAM):   end;
146529    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
146530    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
146531    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
146532    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
146533    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
146534    +   end;
MPRINT(EM_DIAGRAM):   end;
146535    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
146536    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
146537    +   end;
MPRINT(EM_DIAGRAM):   end;
146538    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
146539    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
146540    +   end;
MPRINT(EM_DIAGRAM):   end;
146541    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
146542    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
146543    +   end;
MPRINT(EM_DIAGRAM):   end;
146544    +   else do;
MPRINT(EM_DIAGRAM):   else do;
146545    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
146546    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
146547    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
146548    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
146549    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
146550    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
146551    +   end;
MPRINT(EM_DIAGRAM):   end;
146552    +end;
MPRINT(EM_DIAGRAM):   end;
146553    +
146554    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
146555    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
146556    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
146557    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
146558    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
146559    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
146560    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
146561    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
146562    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
146563    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
146564    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
146565    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
146566    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
146567    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
146568    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
146569    +end;
MPRINT(EM_DIAGRAM):   end;
146570    +else do;
MPRINT(EM_DIAGRAM):   else do;
146571    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
146572    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
146573    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
146574    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
146575    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
146576    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
146577    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
146578    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
146579    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
146580    +         end;
MPRINT(EM_DIAGRAM):   end;
146581    +         else do;
MPRINT(EM_DIAGRAM):   else do;
146582    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
146583    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
146584    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
146585    +            end;
MPRINT(EM_DIAGRAM):   end;
146586    +         end;
MPRINT(EM_DIAGRAM):   end;
146587    +      end;
MPRINT(EM_DIAGRAM):   end;
146588    +      else do;
MPRINT(EM_DIAGRAM):   else do;
146589    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
146590    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
146591    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
146592    +         end;
MPRINT(EM_DIAGRAM):   end;
146593    +      end;
MPRINT(EM_DIAGRAM):   end;
146594    +   end;
MPRINT(EM_DIAGRAM):   end;
146595    +   else do;
MPRINT(EM_DIAGRAM):   else do;
146596    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
146597    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
146598    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
146599    +      end;
MPRINT(EM_DIAGRAM):   end;
146600    +      else do;
MPRINT(EM_DIAGRAM):   else do;
146601    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
146602    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
146603    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
146604    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
146605    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
146606    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
146607    +         end;
MPRINT(EM_DIAGRAM):   end;
146608    +      end;
MPRINT(EM_DIAGRAM):   end;
146609    +   end;
MPRINT(EM_DIAGRAM):   end;
146610    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
146611    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
146612    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
146613    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
146614    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
146615    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
146616    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
146617    +   end;
MPRINT(EM_DIAGRAM):   end;
146618    +end;
MPRINT(EM_DIAGRAM):   end;
146619    +
146620    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
146621    +*** Checking missing input Interval
146622    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
146623    +
146624    +IF NMISS(
146625    +   Income ,
146626    +   Kidhome ,
146627    +   MntFishProducts ,
146628    +   MntFruits ,
146629    +   MntGoldProds ,
146630    +   MntMeatProducts ,
146631    +   MntSweetProducts ,
146632    +   MntWines ,
146633    +   NumCatalogPurchases ,
146634    +   NumDealsPurchases ,
146635    +   NumStorePurchases ,
146636    +   NumWebPurchases ,
146637    +   NumWebVisitsMonth ,
146638    +   Recency ,
146639    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
146640    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
146641    +
146642    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
146643    +END;
MPRINT(EM_DIAGRAM):   END;
146644    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
146645    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
146646    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
146647    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
146648    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
146649    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
146650    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
146651    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
146652    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
146653    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
146654    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
146655    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
146656    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
146657    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
146658    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
146659    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
146660    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
146661    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
146662    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
146663    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
146664    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
146665    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
146666    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
146667    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
146668    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
146669    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
146670    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
146671    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
146672    +END;
MPRINT(EM_DIAGRAM):   END;
146673    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
146674    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
146675    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
146676    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
146677    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
146678    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
146679    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
146680    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
146681    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
146682    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
146683    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
146684    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
146685    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
146686    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
146687    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
146688    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
146689    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
146690    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
146691    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
146692    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
146693    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
146694    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
146695    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
146696    +   ELSE S_NumCatalogPurchases
146697    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
146698    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
146699    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
146700    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
146701    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
146702    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
146703    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
146704    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
146705    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
146706    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
146707    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
146708    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
146709    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
146710    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
146711    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
146712    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
146713    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
146714    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
146715    +END;
MPRINT(EM_DIAGRAM):   END;
146716    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
146717    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
146718    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
146719    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
146720    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
146721    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
146722    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
146723    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
146724    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
146725    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
146726    +   H11  =     0.87660114046125 * S_Income  +     -0.7994451897827 * S_Kidhome
146727    +          +    -0.08967295716195 * S_MntFishProducts
146728    +          +     0.03184635437516 * S_MntFruits  +    -0.13860895575438 *
146729    +        S_MntGoldProds  +     0.55790460748169 * S_MntMeatProducts
146730    +          +    -0.02806094557115 * S_MntSweetProducts
146731    +          +    -0.14537763592724 * S_MntWines  +     0.76891266523847 *
146732    +        S_NumCatalogPurchases  +     0.16842007461305 * S_NumDealsPurchases
146733    +          +     0.25137876058262 * S_NumStorePurchases
146734    +          +    -0.07865442401292 * S_NumWebPurchases
146735    +          +     1.03197398967259 * S_NumWebVisitsMonth
146736    +          +    -1.26907156503759 * S_Recency  +    -0.76016893316351 *
146737    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.87660114046125 * S_Income + -0.7994451897827 * S_Kidhome +
-0.08967295716195 * S_MntFishProducts + 0.03184635437516 * S_MntFruits + -0.13860895575438 *
S_MntGoldProds + 0.55790460748169 * S_MntMeatProducts + -0.02806094557115 * S_MntSweetProducts
+ -0.14537763592724 * S_MntWines + 0.76891266523847 * S_NumCatalogPurchases + 0.16842007461305
* S_NumDealsPurchases + 0.25137876058262 * S_NumStorePurchases + -0.07865442401292 *
S_NumWebPurchases + 1.03197398967259 * S_NumWebVisitsMonth + -1.26907156503759 * S_Recency +
-0.76016893316351 * S_Teenhome ;
146738    +   H12  =     0.37295000114468 * S_Income  +    -0.12834211496575 * S_Kidhome
146739    +          +     0.19312392388912 * S_MntFishProducts
146740    +          +      0.1561688289137 * S_MntFruits  +     0.04004810938796 *
146741    +        S_MntGoldProds  +     0.32599201739588 * S_MntMeatProducts
146742    +          +       0.204174263605 * S_MntSweetProducts
146743    +          +    -0.11560784817014 * S_MntWines  +     0.12255073568725 *
146744    +        S_NumCatalogPurchases  +    -0.05543734180218 * S_NumDealsPurchases
146745    +          +     0.07747830335769 * S_NumStorePurchases
146746    +          +     0.07960837555191 * S_NumWebPurchases
146747    +          +     0.02351602389122 * S_NumWebVisitsMonth
146748    +          +     -0.2840853952427 * S_Recency  +    -0.47421627761687 *
146749    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.37295000114468 * S_Income + -0.12834211496575 * S_Kidhome +
0.19312392388912 * S_MntFishProducts + 0.1561688289137 * S_MntFruits + 0.04004810938796 *
S_MntGoldProds + 0.32599201739588 * S_MntMeatProducts + 0.204174263605 * S_MntSweetProducts +
-0.11560784817014 * S_MntWines + 0.12255073568725 * S_NumCatalogPurchases + -0.05543734180218
* S_NumDealsPurchases + 0.07747830335769 * S_NumStorePurchases + 0.07960837555191 *
S_NumWebPurchases + 0.02351602389122 * S_NumWebVisitsMonth + -0.2840853952427 * S_Recency +
-0.47421627761687 * S_Teenhome ;
146750    +   H13  =    -0.33428925248315 * S_Income  +    -0.03845622730742 * S_Kidhome
146751    +          +     0.18733919794636 * S_MntFishProducts
146752    +          +     0.45907982190052 * S_MntFruits  +    -0.48776616433719 *
146753    +        S_MntGoldProds  +    -0.41340481007204 * S_MntMeatProducts
146754    +          +     0.42514606159239 * S_MntSweetProducts
146755    +          +     0.20038001368787 * S_MntWines  +    -1.21708501803782 *
146756    +        S_NumCatalogPurchases  +    -1.06820061274533 * S_NumDealsPurchases
146757    +          +     0.36582106462789 * S_NumStorePurchases
146758    +          +     0.04244777020435 * S_NumWebPurchases
146759    +          +    -0.24296342902503 * S_NumWebVisitsMonth
146760    +          +     0.27451716762947 * S_Recency  +     0.13110477325277 *
146761    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.33428925248315 * S_Income + -0.03845622730742 * S_Kidhome +
0.18733919794636 * S_MntFishProducts + 0.45907982190052 * S_MntFruits + -0.48776616433719 *
S_MntGoldProds + -0.41340481007204 * S_MntMeatProducts + 0.42514606159239 * S_MntSweetProducts
+ 0.20038001368787 * S_MntWines + -1.21708501803782 * S_NumCatalogPurchases +
-1.06820061274533 * S_NumDealsPurchases + 0.36582106462789 * S_NumStorePurchases +
0.04244777020435 * S_NumWebPurchases + -0.24296342902503 * S_NumWebVisitsMonth +
0.27451716762947 * S_Recency + 0.13110477325277 * S_Teenhome ;
146762    +   H14  =    -0.70493412542585 * S_Income  +     0.41202796606799 * S_Kidhome
146763    +          +     0.05986489897572 * S_MntFishProducts
146764    +          +    -0.05040531715469 * S_MntFruits  +       0.051068387592 *
146765    +        S_MntGoldProds  +    -0.13581881662481 * S_MntMeatProducts
146766    +          +    -0.05513370461072 * S_MntSweetProducts
146767    +          +     0.77472084468819 * S_MntWines  +    -0.03211788969126 *
146768    +        S_NumCatalogPurchases  +    -0.24097486430988 * S_NumDealsPurchases
146769    +          +     0.64364674828841 * S_NumStorePurchases
146770    +          +     0.15084748708424 * S_NumWebPurchases
146771    +          +    -0.94144998356377 * S_NumWebVisitsMonth
146772    +          +     1.16778338364599 * S_Recency  +     0.32089861635238 *
146773    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.70493412542585 * S_Income + 0.41202796606799 * S_Kidhome +
0.05986489897572 * S_MntFishProducts + -0.05040531715469 * S_MntFruits + 0.051068387592 *
S_MntGoldProds + -0.13581881662481 * S_MntMeatProducts + -0.05513370461072 *
S_MntSweetProducts + 0.77472084468819 * S_MntWines + -0.03211788969126 * S_NumCatalogPurchases
+ -0.24097486430988 * S_NumDealsPurchases + 0.64364674828841 * S_NumStorePurchases +
0.15084748708424 * S_NumWebPurchases + -0.94144998356377 * S_NumWebVisitsMonth +
1.16778338364599 * S_Recency + 0.32089861635238 * S_Teenhome ;
146774    +   H15  =    -0.15703510827879 * S_Income  +    -0.30977841002562 * S_Kidhome
146775    +          +    -0.14543196273578 * S_MntFishProducts
146776    +          +     0.32223695896711 * S_MntFruits  +    -0.31846203211698 *
146777    +        S_MntGoldProds  +     -1.4125160823105 * S_MntMeatProducts
146778    +          +     0.49374793444169 * S_MntSweetProducts
146779    +          +     0.39699716010219 * S_MntWines  +    -0.88140331687645 *
146780    +        S_NumCatalogPurchases  +    -0.87657222813687 * S_NumDealsPurchases
146781    +          +     1.23754786782746 * S_NumStorePurchases
146782    +          +     1.11316667348511 * S_NumWebPurchases
146783    +          +    -1.08592446439781 * S_NumWebVisitsMonth
146784    +          +     0.66958517589542 * S_Recency  +     0.06799032788481 *
146785    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.15703510827879 * S_Income + -0.30977841002562 * S_Kidhome +
-0.14543196273578 * S_MntFishProducts + 0.32223695896711 * S_MntFruits + -0.31846203211698 *
S_MntGoldProds + -1.4125160823105 * S_MntMeatProducts + 0.49374793444169 * S_MntSweetProducts
+ 0.39699716010219 * S_MntWines + -0.88140331687645 * S_NumCatalogPurchases +
-0.87657222813687 * S_NumDealsPurchases + 1.23754786782746 * S_NumStorePurchases +
1.11316667348511 * S_NumWebPurchases + -1.08592446439781 * S_NumWebVisitsMonth +
0.66958517589542 * S_Recency + 0.06799032788481 * S_Teenhome ;
146786    +   H16  =    -0.10360901553583 * S_Income  +     0.39257497240865 * S_Kidhome
146787    +          +     0.29549884005341 * S_MntFishProducts
146788    +          +     0.04922491353914 * S_MntFruits  +     -0.1412659458221 *
146789    +        S_MntGoldProds  +    -0.12361454534126 * S_MntMeatProducts
146790    +          +    -0.11909215986981 * S_MntSweetProducts
146791    +          +     0.11430484977092 * S_MntWines  +    -0.66235553839539 *
146792    +        S_NumCatalogPurchases  +     0.17261763180198 * S_NumDealsPurchases
146793    +          +     0.30109334594548 * S_NumStorePurchases
146794    +          +     0.01985762767489 * S_NumWebPurchases
146795    +          +     0.44965133281333 * S_NumWebVisitsMonth
146796    +          +     0.32338634259192 * S_Recency  +    -0.04032956941805 *
146797    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.10360901553583 * S_Income + 0.39257497240865 * S_Kidhome +
0.29549884005341 * S_MntFishProducts + 0.04922491353914 * S_MntFruits + -0.1412659458221 *
S_MntGoldProds + -0.12361454534126 * S_MntMeatProducts + -0.11909215986981 *
S_MntSweetProducts + 0.11430484977092 * S_MntWines + -0.66235553839539 * S_NumCatalogPurchases
+ 0.17261763180198 * S_NumDealsPurchases + 0.30109334594548 * S_NumStorePurchases +
0.01985762767489 * S_NumWebPurchases + 0.44965133281333 * S_NumWebVisitsMonth +
0.32338634259192 * S_Recency + -0.04032956941805 * S_Teenhome ;
146798    +   H11  = H11  +    -0.23026310289024 * AcceptedCmp10
146799    +          +    -0.82550012364234 * AcceptedCmp20  +    -0.67764228269441 *
146800    +        AcceptedCmp30  +    -0.51547666117685 * AcceptedCmp40
146801    +          +    -0.36424958084824 * AcceptedCmp50  +       0.119862855783 *
146802    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.23026310289024 * AcceptedCmp10 + -0.82550012364234 *
AcceptedCmp20 + -0.67764228269441 * AcceptedCmp30 + -0.51547666117685 * AcceptedCmp40 +
-0.36424958084824 * AcceptedCmp50 + 0.119862855783 * Complain0 ;
146803    +   H12  = H12  +     0.02722288857426 * AcceptedCmp10
146804    +          +      0.1236576068539 * AcceptedCmp20  +    -0.31265425960737 *
146805    +        AcceptedCmp30  +    -0.25076565034266 * AcceptedCmp40
146806    +          +    -0.20158659730872 * AcceptedCmp50  +    -0.43687103612629 *
146807    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.02722288857426 * AcceptedCmp10 + 0.1236576068539 *
AcceptedCmp20 + -0.31265425960737 * AcceptedCmp30 + -0.25076565034266 * AcceptedCmp40 +
-0.20158659730872 * AcceptedCmp50 + -0.43687103612629 * Complain0 ;
146808    +   H13  = H13  +     0.21852176280571 * AcceptedCmp10
146809    +          +     0.01727991436107 * AcceptedCmp20  +     0.19303261094625 *
146810    +        AcceptedCmp30  +    -0.65492191560509 * AcceptedCmp40
146811    +          +    -0.09636750660684 * AcceptedCmp50  +     0.07579128571046 *
146812    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.21852176280571 * AcceptedCmp10 + 0.01727991436107 *
AcceptedCmp20 + 0.19303261094625 * AcceptedCmp30 + -0.65492191560509 * AcceptedCmp40 +
-0.09636750660684 * AcceptedCmp50 + 0.07579128571046 * Complain0 ;
146813    +   H14  = H14  +     0.20819294353855 * AcceptedCmp10
146814    +          +      0.5159102831901 * AcceptedCmp20  +     0.55295587458643 *
146815    +        AcceptedCmp30  +     0.80682431419623 * AcceptedCmp40
146816    +          +     0.74007057798158 * AcceptedCmp50  +     -0.4573052390807 *
146817    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.20819294353855 * AcceptedCmp10 + 0.5159102831901 *
AcceptedCmp20 + 0.55295587458643 * AcceptedCmp30 + 0.80682431419623 * AcceptedCmp40 +
0.74007057798158 * AcceptedCmp50 + -0.4573052390807 * Complain0 ;
146818    +   H15  = H15  +     1.26330939420524 * AcceptedCmp10
146819    +          +     0.29494505935793 * AcceptedCmp20  +     0.25561322032419 *
146820    +        AcceptedCmp30  +     0.50102236777897 * AcceptedCmp40
146821    +          +     0.20696267245027 * AcceptedCmp50  +    -0.00849145233901 *
146822    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 1.26330939420524 * AcceptedCmp10 + 0.29494505935793 *
AcceptedCmp20 + 0.25561322032419 * AcceptedCmp30 + 0.50102236777897 * AcceptedCmp40 +
0.20696267245027 * AcceptedCmp50 + -0.00849145233901 * Complain0 ;
146823    +   H16  = H16  +     0.03638428330381 * AcceptedCmp10
146824    +          +     0.27994215452657 * AcceptedCmp20  +    -0.03861840445025 *
146825    +        AcceptedCmp30  +      0.3398057347433 * AcceptedCmp40
146826    +          +    -0.00738335957724 * AcceptedCmp50  +      0.0447804375799 *
146827    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.03638428330381 * AcceptedCmp10 + 0.27994215452657 *
AcceptedCmp20 + -0.03861840445025 * AcceptedCmp30 + 0.3398057347433 * AcceptedCmp40 +
-0.00738335957724 * AcceptedCmp50 + 0.0447804375799 * Complain0 ;
146828    +   H11  = H11  +     0.27482405283962 * Education2n_Cycle
146829    +          +     0.11084012456612 * EducationBasic  +    -0.23835071987159 *
146830    +        EducationGraduation  +    -0.10167082180552 * EducationMaster
146831    +          +     0.51015833145636 * Marital_StatusDivorced
146832    +          +     -1.1653662063616 * Marital_StatusMarried
146833    +          +     1.19396547750441 * Marital_StatusSingle
146834    +          +    -0.99605751789992 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.27482405283962 * Education2n_Cycle + 0.11084012456612 *
EducationBasic + -0.23835071987159 * EducationGraduation + -0.10167082180552 * EducationMaster
+ 0.51015833145636 * Marital_StatusDivorced + -1.1653662063616 * Marital_StatusMarried +
1.19396547750441 * Marital_StatusSingle + -0.99605751789992 * Marital_StatusTogether ;
146835    +   H12  = H12  +    -0.05268347704739 * Education2n_Cycle
146836    +          +     0.19362065968028 * EducationBasic  +    -0.26784257195414 *
146837    +        EducationGraduation  +     0.16650577465959 * EducationMaster
146838    +          +     0.09154288513995 * Marital_StatusDivorced
146839    +          +     0.06725684628382 * Marital_StatusMarried
146840    +          +     0.11327659191494 * Marital_StatusSingle
146841    +          +     0.01793778876811 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.05268347704739 * Education2n_Cycle + 0.19362065968028 *
EducationBasic + -0.26784257195414 * EducationGraduation + 0.16650577465959 * EducationMaster
+ 0.09154288513995 * Marital_StatusDivorced + 0.06725684628382 * Marital_StatusMarried +
0.11327659191494 * Marital_StatusSingle + 0.01793778876811 * Marital_StatusTogether ;
146842    +   H13  = H13  +     -0.1027084329077 * Education2n_Cycle
146843    +          +    -0.01342449140757 * EducationBasic  +    -0.35627920427273 *
146844    +        EducationGraduation  +    -0.05554656531793 * EducationMaster
146845    +          +     0.37591653615852 * Marital_StatusDivorced
146846    +          +    -0.05024236790132 * Marital_StatusMarried
146847    +          +    -0.28317154997144 * Marital_StatusSingle
146848    +          +    -0.19247490223101 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.1027084329077 * Education2n_Cycle + -0.01342449140757 *
EducationBasic + -0.35627920427273 * EducationGraduation + -0.05554656531793 * EducationMaster
+ 0.37591653615852 * Marital_StatusDivorced + -0.05024236790132 * Marital_StatusMarried +
-0.28317154997144 * Marital_StatusSingle + -0.19247490223101 * Marital_StatusTogether ;
146849    +   H14  = H14  +     -0.4162491480577 * Education2n_Cycle
146850    +          +     0.38075572764074 * EducationBasic  +    -0.28169469529121 *
146851    +        EducationGraduation  +       0.638986138084 * EducationMaster
146852    +          +    -0.44885292450558 * Marital_StatusDivorced
146853    +          +     0.78958791519299 * Marital_StatusMarried
146854    +          +    -0.09688714431356 * Marital_StatusSingle
146855    +          +     0.84239030196202 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.4162491480577 * Education2n_Cycle + 0.38075572764074 *
EducationBasic + -0.28169469529121 * EducationGraduation + 0.638986138084 * EducationMaster +
-0.44885292450558 * Marital_StatusDivorced + 0.78958791519299 * Marital_StatusMarried +
-0.09688714431356 * Marital_StatusSingle + 0.84239030196202 * Marital_StatusTogether ;
146856    +   H15  = H15  +     0.33126657974568 * Education2n_Cycle
146857    +          +     0.44539039262703 * EducationBasic  +    -0.09154902903865 *
146858    +        EducationGraduation  +    -0.26400363440725 * EducationMaster
146859    +          +    -0.30801073895989 * Marital_StatusDivorced
146860    +          +     -0.1285150749223 * Marital_StatusMarried
146861    +          +     0.06775542164414 * Marital_StatusSingle
146862    +          +    -0.13032366945766 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.33126657974568 * Education2n_Cycle + 0.44539039262703 *
EducationBasic + -0.09154902903865 * EducationGraduation + -0.26400363440725 * EducationMaster
+ -0.30801073895989 * Marital_StatusDivorced + -0.1285150749223 * Marital_StatusMarried +
0.06775542164414 * Marital_StatusSingle + -0.13032366945766 * Marital_StatusTogether ;
146863    +   H16  = H16  +     0.02030175222681 * Education2n_Cycle
146864    +          +    -0.19579401096879 * EducationBasic  +      0.2070703930869 *
146865    +        EducationGraduation  +    -0.40706983167068 * EducationMaster
146866    +          +     0.22193599090368 * Marital_StatusDivorced
146867    +          +    -0.54544672042168 * Marital_StatusMarried
146868    +          +    -0.02237436019864 * Marital_StatusSingle
146869    +          +    -0.21979468164854 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.02030175222681 * Education2n_Cycle + -0.19579401096879 *
EducationBasic + 0.2070703930869 * EducationGraduation + -0.40706983167068 * EducationMaster +
0.22193599090368 * Marital_StatusDivorced + -0.54544672042168 * Marital_StatusMarried +
-0.02237436019864 * Marital_StatusSingle + -0.21979468164854 * Marital_StatusTogether ;
146870    +   H11  =    -1.24550293901788 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.24550293901788 + H11 ;
146871    +   H12  =     0.36762263942809 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.36762263942809 + H12 ;
146872    +   H13  =     0.07010867577103 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.07010867577103 + H13 ;
146873    +   H14  =    -1.94014549272156 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -1.94014549272156 + H14 ;
146874    +   H15  =     0.17666656180153 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.17666656180153 + H15 ;
146875    +   H16  =    -1.64626406576709 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.64626406576709 + H16 ;
146876    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
146877    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
146878    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
146879    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
146880    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
146881    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
146882    +END;
MPRINT(EM_DIAGRAM):   END;
146883    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
146884    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
146885    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
146886    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
146887    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
146888    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
146889    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
146890    +END;
MPRINT(EM_DIAGRAM):   END;
146891    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
146892    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
146893    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
146894    +
146895    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
146896    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
146897    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
146898    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
146899    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
146900    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
146901    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
146902    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
146903    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
146904    +end;
MPRINT(EM_DIAGRAM):   end;
146905    +else do;
MPRINT(EM_DIAGRAM):   else do;
146906    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
146907    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
146908    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
146909    +   end;
MPRINT(EM_DIAGRAM):   end;
146910    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
146911    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
146912    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
146913    +   end;
MPRINT(EM_DIAGRAM):   end;
146914    +   else do;
MPRINT(EM_DIAGRAM):   else do;
146915    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
146916    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
146917    +   end;
MPRINT(EM_DIAGRAM):   end;
146918    +end;
MPRINT(EM_DIAGRAM):   end;
146919    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
146920    +   P_DepVar1  =     4.21126046696691 * H11  +      0.6565061288056 * H12
146921    +          +    -1.92484011508628 * H13  +    -3.74020722142387 * H14
146922    +          +    -3.27353026762143 * H15  +     -1.2596922869974 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.21126046696691 * H11 + 0.6565061288056 * H12 +
-1.92484011508628 * H13 + -3.74020722142387 * H14 + -3.27353026762143 * H15 + -1.2596922869974
* H16 ;
146923    +   P_DepVar1  =    -1.36806658950323 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.36806658950323 + P_DepVar1 ;
146924    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
146925    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
146926    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
146927    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
146928    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
146929    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
146930    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
146931    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
146932    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
146933    +END;
MPRINT(EM_DIAGRAM):   END;
146934    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
146935    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
146936    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
146937    +END;
MPRINT(EM_DIAGRAM):   END;
146938    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
146939    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
146940    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
146941    +END;
MPRINT(EM_DIAGRAM):   END;
146942    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
146943    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
146944    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
146945    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
146946    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
146947    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
146948    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
146949    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
146950    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
146951    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
146952    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
146953    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
146954    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
146955    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
146956    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
146957    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
146958    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
146959    +END;
MPRINT(EM_DIAGRAM):   END;
146960    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
146961    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
146962    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
146963    +drop
146964    +H11
146965    +H12
146966    +H13
146967    +H14
146968    +H15
146969    +H16
146970    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
146971    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
146972    +* Renaming variables for Neural35;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural35;
146973    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
146974    +* Renaming Posterior variables for Neural35;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural35;
146975    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
146976    +drop Neural35_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural35_P_DepVar1;
146977    +Neural35_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural35_P_DepVar1 = P_DepVar1;
146978    +drop Neural35_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural35_P_DepVar0;
146979    +Neural35_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural35_P_DepVar0 = P_DepVar0;
146980    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
146981    +* Renaming _WARN_ variable for Neural35;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural35;
146982    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
146983    +length Neural35_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural35_WARN_ $4;
146984    +drop Neural35_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural35_WARN_;
146985    +Neural35_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural35_WARN_ = _WARN_;
146986    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
146987    +* Ensmbl22: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Scoring Code of model 7 of 7;
146988    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
146989    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
146990    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
146991    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
146992    +* NODE: Neural32;
MPRINT(EM_DIAGRAM):   * NODE: Neural32;
146993    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
146994    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
146995    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
146996    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
146997    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
146998    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
146999    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
147000    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
147001    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
147002    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
147003    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
147004    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
147005    +LENGTH _WARN_ $4
147006    +      F_DepVar  $ 12
147007    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
147008    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
147009    +
147010    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
147011    +
147012    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
147013    +
147014    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
147015    +
147016    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
147017    +
147018    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
147019    +
147020    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
147021    +
147022    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
147023    +
147024    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
147025    +
147026    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
147027    +
147028    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
147029    +
147030    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
147031    +
147032    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
147033    +
147034    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
147035    +
147036    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
147037    +
147038    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
147039    +
147040    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
147041    +
147042    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
147043    +
147044    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
147045    +
147046    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
147047    +
147048    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
147049    +
147050    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
147051    +
147052    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
147053    +
147054    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
147055    +
147056    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
147057    +
147058    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
147059    +
147060    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
147061    +
147062    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
147063    +
147064    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
147065    +
147066    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
147067    +
147068    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
147069    +
147070    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
147071    +
147072    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
147073    +
147074    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
147075    +
147076    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
147077    +
147078    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
147079    +
147080    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
147081    +
147082    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
147083    +
147084    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
147085    +
147086    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
147087    +
147088    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
147089    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
147090    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
147091    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
147092    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
147093    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
147094    +end;
MPRINT(EM_DIAGRAM):   end;
147095    +else do;
MPRINT(EM_DIAGRAM):   else do;
147096    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
147097    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
147098    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
147099    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
147100    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
147101    +   end;
MPRINT(EM_DIAGRAM):   end;
147102    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
147103    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
147104    +   end;
MPRINT(EM_DIAGRAM):   end;
147105    +   else do;
MPRINT(EM_DIAGRAM):   else do;
147106    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
147107    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
147108    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
147109    +   end;
MPRINT(EM_DIAGRAM):   end;
147110    +end;
MPRINT(EM_DIAGRAM):   end;
147111    +
147112    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
147113    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
147114    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
147115    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
147116    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
147117    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
147118    +end;
MPRINT(EM_DIAGRAM):   end;
147119    +else do;
MPRINT(EM_DIAGRAM):   else do;
147120    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
147121    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
147122    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
147123    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
147124    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
147125    +   end;
MPRINT(EM_DIAGRAM):   end;
147126    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
147127    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
147128    +   end;
MPRINT(EM_DIAGRAM):   end;
147129    +   else do;
MPRINT(EM_DIAGRAM):   else do;
147130    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
147131    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
147132    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
147133    +   end;
MPRINT(EM_DIAGRAM):   end;
147134    +end;
MPRINT(EM_DIAGRAM):   end;
147135    +
147136    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
147137    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
147138    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
147139    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
147140    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
147141    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
147142    +end;
MPRINT(EM_DIAGRAM):   end;
147143    +else do;
MPRINT(EM_DIAGRAM):   else do;
147144    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
147145    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
147146    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
147147    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
147148    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
147149    +   end;
MPRINT(EM_DIAGRAM):   end;
147150    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
147151    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
147152    +   end;
MPRINT(EM_DIAGRAM):   end;
147153    +   else do;
MPRINT(EM_DIAGRAM):   else do;
147154    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
147155    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
147156    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
147157    +   end;
MPRINT(EM_DIAGRAM):   end;
147158    +end;
MPRINT(EM_DIAGRAM):   end;
147159    +
147160    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
147161    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
147162    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
147163    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
147164    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
147165    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
147166    +end;
MPRINT(EM_DIAGRAM):   end;
147167    +else do;
MPRINT(EM_DIAGRAM):   else do;
147168    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
147169    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
147170    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
147171    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
147172    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
147173    +   end;
MPRINT(EM_DIAGRAM):   end;
147174    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
147175    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
147176    +   end;
MPRINT(EM_DIAGRAM):   end;
147177    +   else do;
MPRINT(EM_DIAGRAM):   else do;
147178    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
147179    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
147180    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
147181    +   end;
MPRINT(EM_DIAGRAM):   end;
147182    +end;
MPRINT(EM_DIAGRAM):   end;
147183    +
147184    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
147185    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
147186    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
147187    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
147188    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
147189    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
147190    +end;
MPRINT(EM_DIAGRAM):   end;
147191    +else do;
MPRINT(EM_DIAGRAM):   else do;
147192    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
147193    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
147194    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
147195    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
147196    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
147197    +   end;
MPRINT(EM_DIAGRAM):   end;
147198    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
147199    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
147200    +   end;
MPRINT(EM_DIAGRAM):   end;
147201    +   else do;
MPRINT(EM_DIAGRAM):   else do;
147202    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
147203    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
147204    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
147205    +   end;
MPRINT(EM_DIAGRAM):   end;
147206    +end;
MPRINT(EM_DIAGRAM):   end;
147207    +
147208    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
147209    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
147210    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
147211    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
147212    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
147213    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
147214    +end;
MPRINT(EM_DIAGRAM):   end;
147215    +else do;
MPRINT(EM_DIAGRAM):   else do;
147216    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
147217    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
147218    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
147219    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
147220    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
147221    +   end;
MPRINT(EM_DIAGRAM):   end;
147222    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
147223    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
147224    +   end;
MPRINT(EM_DIAGRAM):   end;
147225    +   else do;
MPRINT(EM_DIAGRAM):   else do;
147226    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
147227    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
147228    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
147229    +   end;
MPRINT(EM_DIAGRAM):   end;
147230    +end;
MPRINT(EM_DIAGRAM):   end;
147231    +
147232    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
147233    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
147234    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
147235    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
147236    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
147237    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
147238    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
147239    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
147240    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
147241    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
147242    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
147243    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
147244    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
147245    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
147246    +end;
MPRINT(EM_DIAGRAM):   end;
147247    +else do;
MPRINT(EM_DIAGRAM):   else do;
147248    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
147249    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
147250    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
147251    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
147252    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
147253    +   end;
MPRINT(EM_DIAGRAM):   end;
147254    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
147255    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
147256    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
147257    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
147258    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
147259    +   end;
MPRINT(EM_DIAGRAM):   end;
147260    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
147261    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
147262    +   end;
MPRINT(EM_DIAGRAM):   end;
147263    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
147264    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
147265    +   end;
MPRINT(EM_DIAGRAM):   end;
147266    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
147267    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
147268    +   end;
MPRINT(EM_DIAGRAM):   end;
147269    +   else do;
MPRINT(EM_DIAGRAM):   else do;
147270    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
147271    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
147272    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
147273    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
147274    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
147275    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
147276    +   end;
MPRINT(EM_DIAGRAM):   end;
147277    +end;
MPRINT(EM_DIAGRAM):   end;
147278    +
147279    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
147280    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
147281    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
147282    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
147283    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
147284    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
147285    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
147286    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
147287    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
147288    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
147289    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
147290    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
147291    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
147292    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
147293    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
147294    +end;
MPRINT(EM_DIAGRAM):   end;
147295    +else do;
MPRINT(EM_DIAGRAM):   else do;
147296    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
147297    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
147298    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
147299    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
147300    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
147301    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
147302    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
147303    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
147304    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
147305    +         end;
MPRINT(EM_DIAGRAM):   end;
147306    +         else do;
MPRINT(EM_DIAGRAM):   else do;
147307    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
147308    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
147309    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
147310    +            end;
MPRINT(EM_DIAGRAM):   end;
147311    +         end;
MPRINT(EM_DIAGRAM):   end;
147312    +      end;
MPRINT(EM_DIAGRAM):   end;
147313    +      else do;
MPRINT(EM_DIAGRAM):   else do;
147314    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
147315    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
147316    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
147317    +         end;
MPRINT(EM_DIAGRAM):   end;
147318    +      end;
MPRINT(EM_DIAGRAM):   end;
147319    +   end;
MPRINT(EM_DIAGRAM):   end;
147320    +   else do;
MPRINT(EM_DIAGRAM):   else do;
147321    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
147322    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
147323    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
147324    +      end;
MPRINT(EM_DIAGRAM):   end;
147325    +      else do;
MPRINT(EM_DIAGRAM):   else do;
147326    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
147327    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
147328    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
147329    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
147330    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
147331    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
147332    +         end;
MPRINT(EM_DIAGRAM):   end;
147333    +      end;
MPRINT(EM_DIAGRAM):   end;
147334    +   end;
MPRINT(EM_DIAGRAM):   end;
147335    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
147336    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
147337    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
147338    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
147339    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
147340    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
147341    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
147342    +   end;
MPRINT(EM_DIAGRAM):   end;
147343    +end;
MPRINT(EM_DIAGRAM):   end;
147344    +
147345    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
147346    +*** Checking missing input Interval
147347    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
147348    +
147349    +IF NMISS(
147350    +   Income ,
147351    +   Kidhome ,
147352    +   MntFishProducts ,
147353    +   MntFruits ,
147354    +   MntGoldProds ,
147355    +   MntMeatProducts ,
147356    +   MntSweetProducts ,
147357    +   MntWines ,
147358    +   NumCatalogPurchases ,
147359    +   NumDealsPurchases ,
147360    +   NumStorePurchases ,
147361    +   NumWebPurchases ,
147362    +   NumWebVisitsMonth ,
147363    +   Recency ,
147364    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
147365    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
147366    +
147367    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
147368    +END;
MPRINT(EM_DIAGRAM):   END;
147369    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
147370    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
147371    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
147372    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
147373    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
147374    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
147375    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
147376    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
147377    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
147378    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
147379    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
147380    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
147381    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
147382    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
147383    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
147384    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
147385    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
147386    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
147387    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
147388    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
147389    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
147390    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
147391    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
147392    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
147393    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
147394    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
147395    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
147396    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
147397    +END;
MPRINT(EM_DIAGRAM):   END;
147398    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
147399    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
147400    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
147401    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
147402    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
147403    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
147404    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
147405    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
147406    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
147407    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
147408    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
147409    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
147410    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
147411    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
147412    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
147413    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
147414    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
147415    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
147416    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
147417    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
147418    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
147419    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
147420    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
147421    +   ELSE S_NumCatalogPurchases
147422    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
147423    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
147424    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
147425    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
147426    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
147427    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
147428    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
147429    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
147430    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
147431    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
147432    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
147433    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
147434    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
147435    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
147436    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
147437    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
147438    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
147439    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
147440    +END;
MPRINT(EM_DIAGRAM):   END;
147441    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
147442    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
147443    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
147444    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
147445    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
147446    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
147447    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
147448    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
147449    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
147450    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
147451    +   H11  =     1.40261108800308 * S_Income  +     -0.8062097507842 * S_Kidhome
147452    +          +    -0.12974862644982 * S_MntFishProducts
147453    +          +     0.08065642800368 * S_MntFruits  +    -0.12102130003972 *
147454    +        S_MntGoldProds  +     0.19226249622126 * S_MntMeatProducts
147455    +          +    -0.12290326901613 * S_MntSweetProducts
147456    +          +     0.07790241176978 * S_MntWines  +     0.36123042724896 *
147457    +        S_NumCatalogPurchases  +    -0.01034406765754 * S_NumDealsPurchases
147458    +          +     0.09738032540137 * S_NumStorePurchases
147459    +          +     0.44459515215205 * S_NumWebPurchases
147460    +          +      0.8471075994578 * S_NumWebVisitsMonth
147461    +          +    -1.10667985160899 * S_Recency  +    -0.88509832868515 *
147462    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 1.40261108800308 * S_Income + -0.8062097507842 * S_Kidhome +
-0.12974862644982 * S_MntFishProducts + 0.08065642800368 * S_MntFruits + -0.12102130003972 *
S_MntGoldProds + 0.19226249622126 * S_MntMeatProducts + -0.12290326901613 * S_MntSweetProducts
+ 0.07790241176978 * S_MntWines + 0.36123042724896 * S_NumCatalogPurchases + -0.01034406765754
* S_NumDealsPurchases + 0.09738032540137 * S_NumStorePurchases + 0.44459515215205 *
S_NumWebPurchases + 0.8471075994578 * S_NumWebVisitsMonth + -1.10667985160899 * S_Recency +
-0.88509832868515 * S_Teenhome ;
147463    +   H12  =     0.51266936686642 * S_Income  +     0.26909433357851 * S_Kidhome
147464    +          +     0.02406077596811 * S_MntFishProducts
147465    +          +    -0.57443793453522 * S_MntFruits  +     0.36824731232149 *
147466    +        S_MntGoldProds  +     0.40177289143061 * S_MntMeatProducts
147467    +          +     -0.1147507059349 * S_MntSweetProducts
147468    +          +    -0.66379351187459 * S_MntWines  +     1.33407347415468 *
147469    +        S_NumCatalogPurchases  +     1.00633891197299 * S_NumDealsPurchases
147470    +          +    -0.23920969262322 * S_NumStorePurchases
147471    +          +     -0.6008837862932 * S_NumWebPurchases
147472    +          +     0.26759743722885 * S_NumWebVisitsMonth
147473    +          +    -0.42755419464125 * S_Recency  +    -0.14471776361394 *
147474    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.51266936686642 * S_Income + 0.26909433357851 * S_Kidhome +
0.02406077596811 * S_MntFishProducts + -0.57443793453522 * S_MntFruits + 0.36824731232149 *
S_MntGoldProds + 0.40177289143061 * S_MntMeatProducts + -0.1147507059349 * S_MntSweetProducts
+ -0.66379351187459 * S_MntWines + 1.33407347415468 * S_NumCatalogPurchases + 1.00633891197299
* S_NumDealsPurchases + -0.23920969262322 * S_NumStorePurchases + -0.6008837862932 *
S_NumWebPurchases + 0.26759743722885 * S_NumWebVisitsMonth + -0.42755419464125 * S_Recency +
-0.14471776361394 * S_Teenhome ;
147475    +   H13  =    -0.19807308698832 * S_Income  +     0.25934675474849 * S_Kidhome
147476    +          +     0.04398331533724 * S_MntFishProducts
147477    +          +    -0.00090357598988 * S_MntFruits  +     0.05139545341773 *
147478    +        S_MntGoldProds  +    -0.74617114336019 * S_MntMeatProducts
147479    +          +     0.00552488718744 * S_MntSweetProducts
147480    +          +     0.47194407197012 * S_MntWines  +    -0.35149551848487 *
147481    +        S_NumCatalogPurchases  +    -0.30232522133093 * S_NumDealsPurchases
147482    +          +     0.60058189155105 * S_NumStorePurchases
147483    +          +     0.51423374855856 * S_NumWebPurchases
147484    +          +     -0.9075304423321 * S_NumWebVisitsMonth
147485    +          +     0.83597739226791 * S_Recency  +     0.15783202762709 *
147486    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.19807308698832 * S_Income + 0.25934675474849 * S_Kidhome +
0.04398331533724 * S_MntFishProducts + -0.00090357598988 * S_MntFruits + 0.05139545341773 *
S_MntGoldProds + -0.74617114336019 * S_MntMeatProducts + 0.00552488718744 * S_MntSweetProducts
+ 0.47194407197012 * S_MntWines + -0.35149551848487 * S_NumCatalogPurchases +
-0.30232522133093 * S_NumDealsPurchases + 0.60058189155105 * S_NumStorePurchases +
0.51423374855856 * S_NumWebPurchases + -0.9075304423321 * S_NumWebVisitsMonth +
0.83597739226791 * S_Recency + 0.15783202762709 * S_Teenhome ;
147487    +   H11  = H11  +    -0.26274045665457 * AcceptedCmp10
147488    +          +    -0.86105702939371 * AcceptedCmp20  +    -0.50476270558977 *
147489    +        AcceptedCmp30  +    -0.84284126473343 * AcceptedCmp40
147490    +          +     0.19764907691314 * AcceptedCmp50  +    -0.29305577412263 *
147491    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.26274045665457 * AcceptedCmp10 + -0.86105702939371 *
AcceptedCmp20 + -0.50476270558977 * AcceptedCmp30 + -0.84284126473343 * AcceptedCmp40 +
0.19764907691314 * AcceptedCmp50 + -0.29305577412263 * Complain0 ;
147492    +   H12  = H12  +    -0.27394139847883 * AcceptedCmp10
147493    +          +    -0.14688750266104 * AcceptedCmp20  +    -0.27982299242327 *
147494    +        AcceptedCmp30  +    -0.10465140408787 * AcceptedCmp40
147495    +          +    -0.81681330244218 * AcceptedCmp50  +    -0.28152730217644 *
147496    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.27394139847883 * AcceptedCmp10 + -0.14688750266104 *
AcceptedCmp20 + -0.27982299242327 * AcceptedCmp30 + -0.10465140408787 * AcceptedCmp40 +
-0.81681330244218 * AcceptedCmp50 + -0.28152730217644 * Complain0 ;
147497    +   H13  = H13  +     0.42310780831005 * AcceptedCmp10
147498    +          +     0.41337614261155 * AcceptedCmp20  +     0.41436520641821 *
147499    +        AcceptedCmp30  +     0.08914989208239 * AcceptedCmp40
147500    +          +     0.54013759697695 * AcceptedCmp50  +    -0.19478210268955 *
147501    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.42310780831005 * AcceptedCmp10 + 0.41337614261155 *
AcceptedCmp20 + 0.41436520641821 * AcceptedCmp30 + 0.08914989208239 * AcceptedCmp40 +
0.54013759697695 * AcceptedCmp50 + -0.19478210268955 * Complain0 ;
147502    +   H11  = H11  +     0.40331200702699 * Education2n_Cycle
147503    +          +     0.17202421641945 * EducationBasic  +    -0.29654161092174 *
147504    +        EducationGraduation  +     -0.4835104183635 * EducationMaster
147505    +          +     0.52129580188513 * Marital_StatusDivorced
147506    +          +     -1.5224490339553 * Marital_StatusMarried
147507    +          +     1.05062906057771 * Marital_StatusSingle
147508    +          +    -1.16420887937635 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.40331200702699 * Education2n_Cycle + 0.17202421641945 *
EducationBasic + -0.29654161092174 * EducationGraduation + -0.4835104183635 * EducationMaster
+ 0.52129580188513 * Marital_StatusDivorced + -1.5224490339553 * Marital_StatusMarried +
1.05062906057771 * Marital_StatusSingle + -1.16420887937635 * Marital_StatusTogether ;
147509    +   H12  = H12  +     -0.3488928858263 * Education2n_Cycle
147510    +          +     0.38279680594423 * EducationBasic  +     0.20376044836519 *
147511    +        EducationGraduation  +     0.20697694670185 * EducationMaster
147512    +          +    -0.14428158063317 * Marital_StatusDivorced
147513    +          +     0.22396926143356 * Marital_StatusMarried
147514    +          +    -0.12980854818876 * Marital_StatusSingle
147515    +          +     0.32607015627906 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.3488928858263 * Education2n_Cycle + 0.38279680594423 *
EducationBasic + 0.20376044836519 * EducationGraduation + 0.20697694670185 * EducationMaster +
-0.14428158063317 * Marital_StatusDivorced + 0.22396926143356 * Marital_StatusMarried +
-0.12980854818876 * Marital_StatusSingle + 0.32607015627906 * Marital_StatusTogether ;
147516    +   H13  = H13  +    -0.18351418824199 * Education2n_Cycle
147517    +          +     0.53417952447263 * EducationBasic  +    -0.14333929289628 *
147518    +        EducationGraduation  +     0.04513004774082 * EducationMaster
147519    +          +    -0.25615797303064 * Marital_StatusDivorced
147520    +          +     0.18825506199046 * Marital_StatusMarried
147521    +          +    -0.24607556819871 * Marital_StatusSingle
147522    +          +     0.29531673844201 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.18351418824199 * Education2n_Cycle + 0.53417952447263 *
EducationBasic + -0.14333929289628 * EducationGraduation + 0.04513004774082 * EducationMaster
+ -0.25615797303064 * Marital_StatusDivorced + 0.18825506199046 * Marital_StatusMarried +
-0.24607556819871 * Marital_StatusSingle + 0.29531673844201 * Marital_StatusTogether ;
147523    +   H11  =    -1.29289362679377 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.29289362679377 + H11 ;
147524    +   H12  =     0.88724419151235 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.88724419151235 + H12 ;
147525    +   H13  =    -0.51194544699467 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.51194544699467 + H13 ;
147526    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
147527    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
147528    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
147529    +END;
MPRINT(EM_DIAGRAM):   END;
147530    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
147531    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
147532    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
147533    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
147534    +END;
MPRINT(EM_DIAGRAM):   END;
147535    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
147536    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
147537    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
147538    +
147539    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
147540    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
147541    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
147542    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
147543    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
147544    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
147545    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
147546    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
147547    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
147548    +end;
MPRINT(EM_DIAGRAM):   end;
147549    +else do;
MPRINT(EM_DIAGRAM):   else do;
147550    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
147551    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
147552    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
147553    +   end;
MPRINT(EM_DIAGRAM):   end;
147554    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
147555    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
147556    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
147557    +   end;
MPRINT(EM_DIAGRAM):   end;
147558    +   else do;
MPRINT(EM_DIAGRAM):   else do;
147559    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
147560    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
147561    +   end;
MPRINT(EM_DIAGRAM):   end;
147562    +end;
MPRINT(EM_DIAGRAM):   end;
147563    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
147564    +   P_DepVar1  =     4.44251020865882 * H11  +     2.67139161773156 * H12
147565    +          +    -4.73549395111184 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.44251020865882 * H11 + 2.67139161773156 * H12 +
-4.73549395111184 * H13 ;
147566    +   P_DepVar1  =     0.45492690116644 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.45492690116644 + P_DepVar1 ;
147567    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
147568    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
147569    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
147570    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
147571    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
147572    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
147573    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
147574    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
147575    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
147576    +END;
MPRINT(EM_DIAGRAM):   END;
147577    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
147578    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
147579    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
147580    +END;
MPRINT(EM_DIAGRAM):   END;
147581    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
147582    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
147583    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
147584    +END;
MPRINT(EM_DIAGRAM):   END;
147585    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
147586    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
147587    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
147588    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
147589    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
147590    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
147591    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
147592    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
147593    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
147594    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
147595    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
147596    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
147597    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
147598    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
147599    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
147600    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
147601    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
147602    +END;
MPRINT(EM_DIAGRAM):   END;
147603    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
147604    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
147605    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
147606    +drop
147607    +H11
147608    +H12
147609    +H13
147610    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
147611    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
147612    +* Renaming variables for Neural32;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural32;
147613    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
147614    +* Renaming Posterior variables for Neural32;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural32;
147615    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
147616    +drop Neural32_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural32_P_DepVar1;
147617    +Neural32_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural32_P_DepVar1 = P_DepVar1;
147618    +drop Neural32_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural32_P_DepVar0;
147619    +Neural32_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural32_P_DepVar0 = P_DepVar0;
147620    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
147621    +* Renaming _WARN_ variable for Neural32;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural32;
147622    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
147623    +length Neural32_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural32_WARN_ $4;
147624    +drop Neural32_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural32_WARN_;
147625    +Neural32_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural32_WARN_ = _WARN_;
147626    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
147627    +* Ensmbl22: Average Posteriors of 7 models;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Average Posteriors of 7 models;
147628    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
147629    +P_DepVar1 = (
147630    +Neural34_P_DepVar1 +
147631    +AutoNeural46_P_DepVar1 +
147632    +AutoNeural42_P_DepVar1 +
147633    +AutoNeural47_P_DepVar1 +
147634    +Neural30_P_DepVar1 +
147635    +Neural35_P_DepVar1 +
147636    +Neural32_P_DepVar1
147637    +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( Neural34_P_DepVar1 + AutoNeural46_P_DepVar1 +
AutoNeural42_P_DepVar1 + AutoNeural47_P_DepVar1 + Neural30_P_DepVar1 + Neural35_P_DepVar1 +
Neural32_P_DepVar1 )/7;
147638    +P_DepVar0 = (
147639    +Neural34_P_DepVar0 +
147640    +AutoNeural46_P_DepVar0 +
147641    +AutoNeural42_P_DepVar0 +
147642    +AutoNeural47_P_DepVar0 +
147643    +Neural30_P_DepVar0 +
147644    +Neural35_P_DepVar0 +
147645    +Neural32_P_DepVar0
147646    +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( Neural34_P_DepVar0 + AutoNeural46_P_DepVar0 +
AutoNeural42_P_DepVar0 + AutoNeural47_P_DepVar0 + Neural30_P_DepVar0 + Neural35_P_DepVar0 +
Neural32_P_DepVar0 )/7;
147647    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
147648    +* Ensmbl22: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Computing Classification Vars;
147649    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
147650    +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
147651    +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
147652    +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
147653    +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
147654    +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
147655    +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
147656    +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
147657    +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
147658    +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
147659    +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
147660    +end;
MPRINT(EM_DIAGRAM):   end;
147661    +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
147662    +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
147663    +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
147664    +end;
MPRINT(EM_DIAGRAM):   end;
147665    +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
147666    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
147667    +* Ensmbl22: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Producing Unformatted variable;
147668    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
147669    +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
147670    +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
147671    +else
147672    +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
147673    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
147674    +* Ensmbl22: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Computing _WARN_ Variable;
147675    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
147676    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
147677    +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
147678    +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
147679    +if index(NEURAL34_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
147679   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL34_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
147680    +if index(NEURAL34_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
147680   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL34_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
147681    +if index(NEURAL34_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
147681   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL34_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
147682    +if index(NEURAL34_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
147682   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL34_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
147683    +if index(AUTONEURAL46_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
147683   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL46_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
147684    +if index(AUTONEURAL46_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
147684   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL46_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
147685    +if index(AUTONEURAL46_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
147685   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL46_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
147686    +if index(AUTONEURAL46_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
147686   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL46_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
147687    +if index(AUTONEURAL42_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
147687   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL42_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
147688    +if index(AUTONEURAL42_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
147688   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL42_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
147689    +if index(AUTONEURAL42_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
147689   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL42_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
147690    +if index(AUTONEURAL42_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
147690   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL42_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
147691    +if index(AUTONEURAL47_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
147691   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL47_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
147692    +if index(AUTONEURAL47_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
147692   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL47_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
147693    +if index(AUTONEURAL47_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
147693   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL47_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
147694    +if index(AUTONEURAL47_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
147694   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL47_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
147695    +if index(NEURAL30_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
147695   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL30_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
147696    +if index(NEURAL30_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
147696   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL30_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
147697    +if index(NEURAL30_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
147697   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL30_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
147698    +if index(NEURAL30_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
147698   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL30_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
147699    +if index(NEURAL35_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
147699   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL35_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
147700    +if index(NEURAL35_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
147700   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL35_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
147701    +if index(NEURAL35_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
147701   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL35_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
147702    +if index(NEURAL35_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
147702   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL35_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
147703    +if index(NEURAL32_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
147703   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL32_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
147704    +if index(NEURAL32_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
147704   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL32_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
147705    +if index(NEURAL32_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
147705   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL32_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
147706    +if index(NEURAL32_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
147706   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL32_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
147707    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
147708    +* Ensmbl22: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Computing Residual Vars;
147709    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
147710    +if
147711    +F_DepVar NE '1'
147712    +AND F_DepVar NE '0'
147713    +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
147714    +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
147715    +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
147716    +end;
MPRINT(EM_DIAGRAM):   end;
147717    +else do;
MPRINT(EM_DIAGRAM):   else do;
147718    +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
147719    +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
147720    +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
147721    +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
147722    +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
147723    +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
147724    +END;
MPRINT(EM_DIAGRAM):   END;
147725    +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
147726     run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL22_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.NEURAL34_TRAIN.VIEW used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
147727     quit;
147728     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
147729     filename emflow
147729   ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl22\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl22\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Scoring NEURAL34_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
147730     *------------------------------------------------------------*;
147731     * Ensmbl22: Scoring NEURAL34_VALIDATE data;
147732     *------------------------------------------------------------*;
147733     data EMWS8.Ensmbl22_VALIDATE
147734     / view=EMWS8.Ensmbl22_VALIDATE
147735     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl22_VALIDATE / view=EMWS8.Ensmbl22_VALIDATE ;
147736     set EMWS8.Neural34_VALIDATE
147737     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural34_VALIDATE ;
147738     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl22\EMFLOWSCORE.sas.
147739    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
147740    +* Ensmbl22: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Combine model for DepVar;
147741    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
147742    +* Ensmbl22: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Scoring Code of model 1 of 7;
147743    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
147744    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
147745    +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
147746    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
147747    +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
147748    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
147749    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
147750    +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
147751    +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
147752    +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
147753    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
147754    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
147755    +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
147756    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
147757    +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
147758    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
147759    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
147760    +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
147761    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
147762    +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
147763    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
147764    +
147765    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
147766    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
147766   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
147767    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
147768    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
147769    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
147770    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
147771    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
147772    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
147773    +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
147774    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
147775    +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
147776    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
147777    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
147778    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
147779    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
147780    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
147781    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
147782    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
147783    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
147784    +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
147785    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
147786    +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
147787    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
147788    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
147789    +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
147790    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
147791    +* NODE: Meta2;
MPRINT(EM_DIAGRAM):   * NODE: Meta2;
147792    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
147793    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
147794    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
147795    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
147796    +* NODE: Neural34;
MPRINT(EM_DIAGRAM):   * NODE: Neural34;
147797    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
147798    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
147799    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
147800    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
147801    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
147802    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
147803    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
147804    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
147805    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
147806    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
147807    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
147808    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
147809    +LENGTH _WARN_ $4
147810    +      F_DepVar  $ 12
147811    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
147812    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
147813    +
147814    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
147815    +
147816    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
147817    +
147818    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
147819    +
147820    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
147821    +
147822    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
147823    +
147824    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
147825    +
147826    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
147827    +
147828    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
147829    +
147830    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
147831    +
147832    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
147833    +
147834    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
147835    +
147836    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
147837    +
147838    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
147839    +
147840    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
147841    +
147842    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
147843    +
147844    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
147845    +
147846    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
147847    +
147848    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
147849    +
147850    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
147851    +
147852    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
147853    +
147854    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
147855    +
147856    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
147857    +
147858    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
147859    +
147860    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
147861    +
147862    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
147863    +
147864    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
147865    +
147866    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
147867    +
147868    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
147869    +
147870    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
147871    +
147872    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
147873    +
147874    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
147875    +
147876    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
147877    +
147878    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
147879    +
147880    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
147881    +
147882    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
147883    +
147884    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
147885    +
147886    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
147887    +
147888    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
147889    +
147890    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
147891    +
147892    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
147893    +
147894    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
147895    +
147896    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
147897    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
147898    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
147899    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
147900    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
147901    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
147902    +end;
MPRINT(EM_DIAGRAM):   end;
147903    +else do;
MPRINT(EM_DIAGRAM):   else do;
147904    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
147905    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
147906    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
147907    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
147908    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
147909    +   end;
MPRINT(EM_DIAGRAM):   end;
147910    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
147911    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
147912    +   end;
MPRINT(EM_DIAGRAM):   end;
147913    +   else do;
MPRINT(EM_DIAGRAM):   else do;
147914    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
147915    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
147916    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
147917    +   end;
MPRINT(EM_DIAGRAM):   end;
147918    +end;
MPRINT(EM_DIAGRAM):   end;
147919    +
147920    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
147921    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
147922    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
147923    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
147924    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
147925    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
147926    +end;
MPRINT(EM_DIAGRAM):   end;
147927    +else do;
MPRINT(EM_DIAGRAM):   else do;
147928    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
147929    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
147930    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
147931    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
147932    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
147933    +   end;
MPRINT(EM_DIAGRAM):   end;
147934    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
147935    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
147936    +   end;
MPRINT(EM_DIAGRAM):   end;
147937    +   else do;
MPRINT(EM_DIAGRAM):   else do;
147938    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
147939    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
147940    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
147941    +   end;
MPRINT(EM_DIAGRAM):   end;
147942    +end;
MPRINT(EM_DIAGRAM):   end;
147943    +
147944    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
147945    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
147946    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
147947    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
147948    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
147949    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
147950    +end;
MPRINT(EM_DIAGRAM):   end;
147951    +else do;
MPRINT(EM_DIAGRAM):   else do;
147952    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
147953    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
147954    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
147955    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
147956    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
147957    +   end;
MPRINT(EM_DIAGRAM):   end;
147958    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
147959    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
147960    +   end;
MPRINT(EM_DIAGRAM):   end;
147961    +   else do;
MPRINT(EM_DIAGRAM):   else do;
147962    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
147963    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
147964    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
147965    +   end;
MPRINT(EM_DIAGRAM):   end;
147966    +end;
MPRINT(EM_DIAGRAM):   end;
147967    +
147968    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
147969    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
147970    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
147971    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
147972    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
147973    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
147974    +end;
MPRINT(EM_DIAGRAM):   end;
147975    +else do;
MPRINT(EM_DIAGRAM):   else do;
147976    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
147977    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
147978    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
147979    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
147980    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
147981    +   end;
MPRINT(EM_DIAGRAM):   end;
147982    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
147983    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
147984    +   end;
MPRINT(EM_DIAGRAM):   end;
147985    +   else do;
MPRINT(EM_DIAGRAM):   else do;
147986    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
147987    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
147988    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
147989    +   end;
MPRINT(EM_DIAGRAM):   end;
147990    +end;
MPRINT(EM_DIAGRAM):   end;
147991    +
147992    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
147993    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
147994    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
147995    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
147996    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
147997    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
147998    +end;
MPRINT(EM_DIAGRAM):   end;
147999    +else do;
MPRINT(EM_DIAGRAM):   else do;
148000    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
148001    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
148002    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
148003    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
148004    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
148005    +   end;
MPRINT(EM_DIAGRAM):   end;
148006    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
148007    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
148008    +   end;
MPRINT(EM_DIAGRAM):   end;
148009    +   else do;
MPRINT(EM_DIAGRAM):   else do;
148010    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
148011    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
148012    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
148013    +   end;
MPRINT(EM_DIAGRAM):   end;
148014    +end;
MPRINT(EM_DIAGRAM):   end;
148015    +
148016    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
148017    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
148018    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
148019    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
148020    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
148021    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
148022    +end;
MPRINT(EM_DIAGRAM):   end;
148023    +else do;
MPRINT(EM_DIAGRAM):   else do;
148024    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
148025    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
148026    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
148027    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
148028    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
148029    +   end;
MPRINT(EM_DIAGRAM):   end;
148030    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
148031    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
148032    +   end;
MPRINT(EM_DIAGRAM):   end;
148033    +   else do;
MPRINT(EM_DIAGRAM):   else do;
148034    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
148035    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
148036    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
148037    +   end;
MPRINT(EM_DIAGRAM):   end;
148038    +end;
MPRINT(EM_DIAGRAM):   end;
148039    +
148040    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
148041    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
148042    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
148043    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
148044    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
148045    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
148046    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
148047    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
148048    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
148049    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
148050    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
148051    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
148052    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
148053    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
148054    +end;
MPRINT(EM_DIAGRAM):   end;
148055    +else do;
MPRINT(EM_DIAGRAM):   else do;
148056    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
148057    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
148058    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
148059    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
148060    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
148061    +   end;
MPRINT(EM_DIAGRAM):   end;
148062    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
148063    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
148064    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
148065    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
148066    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
148067    +   end;
MPRINT(EM_DIAGRAM):   end;
148068    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
148069    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
148070    +   end;
MPRINT(EM_DIAGRAM):   end;
148071    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
148072    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
148073    +   end;
MPRINT(EM_DIAGRAM):   end;
148074    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
148075    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
148076    +   end;
MPRINT(EM_DIAGRAM):   end;
148077    +   else do;
MPRINT(EM_DIAGRAM):   else do;
148078    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
148079    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
148080    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
148081    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
148082    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
148083    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
148084    +   end;
MPRINT(EM_DIAGRAM):   end;
148085    +end;
MPRINT(EM_DIAGRAM):   end;
148086    +
148087    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
148088    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
148089    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
148090    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
148091    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
148092    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
148093    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
148094    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
148095    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
148096    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
148097    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
148098    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
148099    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
148100    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
148101    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
148102    +end;
MPRINT(EM_DIAGRAM):   end;
148103    +else do;
MPRINT(EM_DIAGRAM):   else do;
148104    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
148105    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
148106    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
148107    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
148108    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
148109    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
148110    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
148111    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
148112    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
148113    +         end;
MPRINT(EM_DIAGRAM):   end;
148114    +         else do;
MPRINT(EM_DIAGRAM):   else do;
148115    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
148116    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
148117    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
148118    +            end;
MPRINT(EM_DIAGRAM):   end;
148119    +         end;
MPRINT(EM_DIAGRAM):   end;
148120    +      end;
MPRINT(EM_DIAGRAM):   end;
148121    +      else do;
MPRINT(EM_DIAGRAM):   else do;
148122    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
148123    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
148124    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
148125    +         end;
MPRINT(EM_DIAGRAM):   end;
148126    +      end;
MPRINT(EM_DIAGRAM):   end;
148127    +   end;
MPRINT(EM_DIAGRAM):   end;
148128    +   else do;
MPRINT(EM_DIAGRAM):   else do;
148129    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
148130    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
148131    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
148132    +      end;
MPRINT(EM_DIAGRAM):   end;
148133    +      else do;
MPRINT(EM_DIAGRAM):   else do;
148134    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
148135    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
148136    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
148137    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
148138    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
148139    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
148140    +         end;
MPRINT(EM_DIAGRAM):   end;
148141    +      end;
MPRINT(EM_DIAGRAM):   end;
148142    +   end;
MPRINT(EM_DIAGRAM):   end;
148143    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
148144    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
148145    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
148146    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
148147    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
148148    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
148149    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
148150    +   end;
MPRINT(EM_DIAGRAM):   end;
148151    +end;
MPRINT(EM_DIAGRAM):   end;
148152    +
148153    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
148154    +*** Checking missing input Interval
148155    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
148156    +
148157    +IF NMISS(
148158    +   Income ,
148159    +   Kidhome ,
148160    +   MntFishProducts ,
148161    +   MntFruits ,
148162    +   MntGoldProds ,
148163    +   MntMeatProducts ,
148164    +   MntSweetProducts ,
148165    +   MntWines ,
148166    +   NumCatalogPurchases ,
148167    +   NumDealsPurchases ,
148168    +   NumStorePurchases ,
148169    +   NumWebPurchases ,
148170    +   NumWebVisitsMonth ,
148171    +   Recency ,
148172    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
148173    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
148174    +
148175    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
148176    +END;
MPRINT(EM_DIAGRAM):   END;
148177    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
148178    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
148179    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
148180    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
148181    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
148182    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
148183    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
148184    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
148185    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
148186    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
148187    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
148188    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
148189    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
148190    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
148191    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
148192    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
148193    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
148194    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
148195    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
148196    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
148197    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
148198    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
148199    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
148200    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
148201    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
148202    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
148203    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
148204    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
148205    +END;
MPRINT(EM_DIAGRAM):   END;
148206    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
148207    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
148208    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
148209    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
148210    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
148211    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
148212    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
148213    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
148214    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
148215    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
148216    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
148217    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
148218    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
148219    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
148220    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
148221    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
148222    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
148223    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
148224    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
148225    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
148226    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
148227    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
148228    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
148229    +   ELSE S_NumCatalogPurchases
148230    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
148231    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
148232    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
148233    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
148234    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
148235    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
148236    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
148237    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
148238    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
148239    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
148240    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
148241    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
148242    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
148243    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
148244    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
148245    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
148246    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
148247    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
148248    +END;
MPRINT(EM_DIAGRAM):   END;
148249    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
148250    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
148251    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
148252    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
148253    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
148254    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
148255    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
148256    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
148257    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
148258    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
148259    +   H11  =    -0.81572379016921 * S_Income  +    -0.07670946585348 * S_Kidhome
148260    +          +     0.24367603598167 * S_MntFishProducts
148261    +          +     0.19692980127348 * S_MntFruits  +    -0.03926738185333 *
148262    +        S_MntGoldProds  +    -0.20900804333353 * S_MntMeatProducts
148263    +          +     0.34054806441484 * S_MntSweetProducts
148264    +          +     0.65956211369383 * S_MntWines  +    -0.95375334578522 *
148265    +        S_NumCatalogPurchases  +    -0.73124740368567 * S_NumDealsPurchases
148266    +          +     0.98942946974575 * S_NumStorePurchases
148267    +          +     0.89701206630103 * S_NumWebPurchases
148268    +          +    -1.22878611472154 * S_NumWebVisitsMonth
148269    +          +     1.44981870978354 * S_Recency  +     0.47533125686411 *
148270    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.81572379016921 * S_Income + -0.07670946585348 * S_Kidhome +
0.24367603598167 * S_MntFishProducts + 0.19692980127348 * S_MntFruits + -0.03926738185333 *
S_MntGoldProds + -0.20900804333353 * S_MntMeatProducts + 0.34054806441484 * S_MntSweetProducts
+ 0.65956211369383 * S_MntWines + -0.95375334578522 * S_NumCatalogPurchases +
-0.73124740368567 * S_NumDealsPurchases + 0.98942946974575 * S_NumStorePurchases +
0.89701206630103 * S_NumWebPurchases + -1.22878611472154 * S_NumWebVisitsMonth +
1.44981870978354 * S_Recency + 0.47533125686411 * S_Teenhome ;
148271    +   H12  =    -0.18875145195495 * S_Income  +     0.42230998482453 * S_Kidhome
148272    +          +     0.16683404689723 * S_MntFishProducts
148273    +          +     0.32072658929401 * S_MntFruits  +    -0.12341748032201 *
148274    +        S_MntGoldProds  +    -1.56478754527255 * S_MntMeatProducts
148275    +          +     0.20389084548968 * S_MntSweetProducts
148276    +          +     0.95592931625509 * S_MntWines  +    -0.69996817353755 *
148277    +        S_NumCatalogPurchases  +    -0.92709806328697 * S_NumDealsPurchases
148278    +          +     1.27164659640366 * S_NumStorePurchases
148279    +          +     1.02122194207802 * S_NumWebPurchases
148280    +          +     -1.5111033436803 * S_NumWebVisitsMonth
148281    +          +     1.63712814901544 * S_Recency  +     0.14205116840572 *
148282    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.18875145195495 * S_Income + 0.42230998482453 * S_Kidhome +
0.16683404689723 * S_MntFishProducts + 0.32072658929401 * S_MntFruits + -0.12341748032201 *
S_MntGoldProds + -1.56478754527255 * S_MntMeatProducts + 0.20389084548968 * S_MntSweetProducts
+ 0.95592931625509 * S_MntWines + -0.69996817353755 * S_NumCatalogPurchases +
-0.92709806328697 * S_NumDealsPurchases + 1.27164659640366 * S_NumStorePurchases +
1.02122194207802 * S_NumWebPurchases + -1.5111033436803 * S_NumWebVisitsMonth +
1.63712814901544 * S_Recency + 0.14205116840572 * S_Teenhome ;
148283    +   H13  =     1.02798705354163 * S_Income  +    -0.94411708781921 * S_Kidhome
148284    +          +    -0.03345077166544 * S_MntFishProducts
148285    +          +     0.00038440809349 * S_MntFruits  +    -0.05068379715712 *
148286    +        S_MntGoldProds  +     1.00464705307582 * S_MntMeatProducts
148287    +          +    -0.11948662500951 * S_MntSweetProducts
148288    +          +    -0.52438819731252 * S_MntWines  +     0.98586904866769 *
148289    +        S_NumCatalogPurchases  +     0.09015295226839 * S_NumDealsPurchases
148290    +          +     0.22401914357376 * S_NumStorePurchases
148291    +          +     0.04219877865976 * S_NumWebPurchases
148292    +          +     1.21753334166036 * S_NumWebVisitsMonth
148293    +          +    -1.33712212110081 * S_Recency  +    -0.47582856683655 *
148294    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 1.02798705354163 * S_Income + -0.94411708781921 * S_Kidhome +
-0.03345077166544 * S_MntFishProducts + 0.00038440809349 * S_MntFruits + -0.05068379715712 *
S_MntGoldProds + 1.00464705307582 * S_MntMeatProducts + -0.11948662500951 * S_MntSweetProducts
+ -0.52438819731252 * S_MntWines + 0.98586904866769 * S_NumCatalogPurchases + 0.09015295226839
* S_NumDealsPurchases + 0.22401914357376 * S_NumStorePurchases + 0.04219877865976 *
S_NumWebPurchases + 1.21753334166036 * S_NumWebVisitsMonth + -1.33712212110081 * S_Recency +
-0.47582856683655 * S_Teenhome ;
148295    +   H14  =     0.91431429848834 * S_Income  +    -1.16289676557574 * S_Kidhome
148296    +          +     0.31175257038578 * S_MntFishProducts
148297    +          +     0.08080436076271 * S_MntFruits  +     0.15252288175851 *
148298    +        S_MntGoldProds  +     0.21603546207654 * S_MntMeatProducts
148299    +          +      0.0927253053382 * S_MntSweetProducts
148300    +          +     0.05865323888304 * S_MntWines  +    -0.23426953728277 *
148301    +        S_NumCatalogPurchases  +    -0.46451908614085 * S_NumDealsPurchases
148302    +          +    -0.12667606349662 * S_NumStorePurchases
148303    +          +     0.30148374518724 * S_NumWebPurchases
148304    +          +     0.48934229701658 * S_NumWebVisitsMonth
148305    +          +    -0.83754390793251 * S_Recency  +     -0.4576645462819 *
148306    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.91431429848834 * S_Income + -1.16289676557574 * S_Kidhome +
0.31175257038578 * S_MntFishProducts + 0.08080436076271 * S_MntFruits + 0.15252288175851 *
S_MntGoldProds + 0.21603546207654 * S_MntMeatProducts + 0.0927253053382 * S_MntSweetProducts +
0.05865323888304 * S_MntWines + -0.23426953728277 * S_NumCatalogPurchases + -0.46451908614085
* S_NumDealsPurchases + -0.12667606349662 * S_NumStorePurchases + 0.30148374518724 *
S_NumWebPurchases + 0.48934229701658 * S_NumWebVisitsMonth + -0.83754390793251 * S_Recency +
-0.4576645462819 * S_Teenhome ;
148307    +   H15  =    -0.58161501095664 * S_Income  +     -1.0333658128614 * S_Kidhome
148308    +          +     0.42646725119177 * S_MntFishProducts
148309    +          +     -0.3264621401658 * S_MntFruits  +    -0.74616728524532 *
148310    +        S_MntGoldProds  +    -0.97572068716712 * S_MntMeatProducts
148311    +          +    -0.01493605582616 * S_MntSweetProducts
148312    +          +      0.0311636632685 * S_MntWines  +    -1.68599903767191 *
148313    +        S_NumCatalogPurchases  +    -1.25052648798307 * S_NumDealsPurchases
148314    +          +     0.54256744091258 * S_NumStorePurchases
148315    +          +     0.43065931458468 * S_NumWebPurchases
148316    +          +      0.5935561420466 * S_NumWebVisitsMonth
148317    +          +    -0.45183418369624 * S_Recency  +     0.19260512629844 *
148318    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.58161501095664 * S_Income + -1.0333658128614 * S_Kidhome +
0.42646725119177 * S_MntFishProducts + -0.3264621401658 * S_MntFruits + -0.74616728524532 *
S_MntGoldProds + -0.97572068716712 * S_MntMeatProducts + -0.01493605582616 *
S_MntSweetProducts + 0.0311636632685 * S_MntWines + -1.68599903767191 * S_NumCatalogPurchases
+ -1.25052648798307 * S_NumDealsPurchases + 0.54256744091258 * S_NumStorePurchases +
0.43065931458468 * S_NumWebPurchases + 0.5935561420466 * S_NumWebVisitsMonth +
-0.45183418369624 * S_Recency + 0.19260512629844 * S_Teenhome ;
148319    +   H11  = H11  +     0.61503950219838 * AcceptedCmp10
148320    +          +     0.02945207091619 * AcceptedCmp20  +     0.99151950769472 *
148321    +        AcceptedCmp30  +     1.08987060401718 * AcceptedCmp40
148322    +          +     0.45427753773024 * AcceptedCmp50  +    -1.03533951966815 *
148323    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.61503950219838 * AcceptedCmp10 + 0.02945207091619 *
AcceptedCmp20 + 0.99151950769472 * AcceptedCmp30 + 1.08987060401718 * AcceptedCmp40 +
0.45427753773024 * AcceptedCmp50 + -1.03533951966815 * Complain0 ;
148324    +   H12  = H12  +     0.83823476190401 * AcceptedCmp10
148325    +          +      1.0793719601418 * AcceptedCmp20  +     0.68538854946581 *
148326    +        AcceptedCmp30  +     1.00297565893339 * AcceptedCmp40
148327    +          +     0.24586379991786 * AcceptedCmp50  +     0.15471251255301 *
148328    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.83823476190401 * AcceptedCmp10 + 1.0793719601418 *
AcceptedCmp20 + 0.68538854946581 * AcceptedCmp30 + 1.00297565893339 * AcceptedCmp40 +
0.24586379991786 * AcceptedCmp50 + 0.15471251255301 * Complain0 ;
148329    +   H13  = H13  +    -0.41486094438907 * AcceptedCmp10
148330    +          +    -0.76586628449839 * AcceptedCmp20  +    -0.59695459523693 *
148331    +        AcceptedCmp30  +    -0.30262159911837 * AcceptedCmp40
148332    +          +    -0.61141171124182 * AcceptedCmp50  +    -0.01086235188835 *
148333    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.41486094438907 * AcceptedCmp10 + -0.76586628449839 *
AcceptedCmp20 + -0.59695459523693 * AcceptedCmp30 + -0.30262159911837 * AcceptedCmp40 +
-0.61141171124182 * AcceptedCmp50 + -0.01086235188835 * Complain0 ;
148334    +   H14  = H14  +    -0.09662858884082 * AcceptedCmp10
148335    +          +    -0.48515652524171 * AcceptedCmp20  +    -0.37421451374399 *
148336    +        AcceptedCmp30  +    -0.52889523891817 * AcceptedCmp40
148337    +          +    -0.73518448275357 * AcceptedCmp50  +    -0.36065830718672 *
148338    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.09662858884082 * AcceptedCmp10 + -0.48515652524171 *
AcceptedCmp20 + -0.37421451374399 * AcceptedCmp30 + -0.52889523891817 * AcceptedCmp40 +
-0.73518448275357 * AcceptedCmp50 + -0.36065830718672 * Complain0 ;
148339    +   H15  = H15  +      0.2985143092641 * AcceptedCmp10
148340    +          +    -0.06881934778393 * AcceptedCmp20  +    -0.02609197044604 *
148341    +        AcceptedCmp30  +    -0.79105657447885 * AcceptedCmp40
148342    +          +    -0.02286855144948 * AcceptedCmp50  +     0.02884650192784 *
148343    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.2985143092641 * AcceptedCmp10 + -0.06881934778393 *
AcceptedCmp20 + -0.02609197044604 * AcceptedCmp30 + -0.79105657447885 * AcceptedCmp40 +
-0.02286855144948 * AcceptedCmp50 + 0.02884650192784 * Complain0 ;
148344    +   H11  = H11  +    -0.41169946146301 * Education2n_Cycle
148345    +          +      0.8448273504441 * EducationBasic  +    -1.02497956377347 *
148346    +        EducationGraduation  +     0.43998321745211 * EducationMaster
148347    +          +    -0.85912688909911 * Marital_StatusDivorced
148348    +          +     0.81561401465875 * Marital_StatusMarried
148349    +          +    -0.58324403081542 * Marital_StatusSingle
148350    +          +      0.9348017085106 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.41169946146301 * Education2n_Cycle + 0.8448273504441 *
EducationBasic + -1.02497956377347 * EducationGraduation + 0.43998321745211 * EducationMaster
+ -0.85912688909911 * Marital_StatusDivorced + 0.81561401465875 * Marital_StatusMarried +
-0.58324403081542 * Marital_StatusSingle + 0.9348017085106 * Marital_StatusTogether ;
148351    +   H12  = H12  +     0.22828129841893 * Education2n_Cycle
148352    +          +     0.47579227804033 * EducationBasic  +    -0.18165301263195 *
148353    +        EducationGraduation  +    -0.16143431016405 * EducationMaster
148354    +          +    -0.34784695867287 * Marital_StatusDivorced
148355    +          +    -0.18194022182247 * Marital_StatusMarried
148356    +          +    -0.10633185904164 * Marital_StatusSingle
148357    +          +     0.13136125361628 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.22828129841893 * Education2n_Cycle + 0.47579227804033 *
EducationBasic + -0.18165301263195 * EducationGraduation + -0.16143431016405 * EducationMaster
+ -0.34784695867287 * Marital_StatusDivorced + -0.18194022182247 * Marital_StatusMarried +
-0.10633185904164 * Marital_StatusSingle + 0.13136125361628 * Marital_StatusTogether ;
148358    +   H13  = H13  +     0.38705901043652 * Education2n_Cycle
148359    +          +     0.19703188370189 * EducationBasic  +    -0.48062640599976 *
148360    +        EducationGraduation  +     -0.3646621736273 * EducationMaster
148361    +          +     0.61058752124466 * Marital_StatusDivorced
148362    +          +    -1.38793808025141 * Marital_StatusMarried
148363    +          +     1.10060737810944 * Marital_StatusSingle
148364    +          +    -1.21250219018366 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.38705901043652 * Education2n_Cycle + 0.19703188370189 *
EducationBasic + -0.48062640599976 * EducationGraduation + -0.3646621736273 * EducationMaster
+ 0.61058752124466 * Marital_StatusDivorced + -1.38793808025141 * Marital_StatusMarried +
1.10060737810944 * Marital_StatusSingle + -1.21250219018366 * Marital_StatusTogether ;
148365    +   H14  = H14  +    -0.20576658115662 * Education2n_Cycle
148366    +          +    -0.09185472034614 * EducationBasic  +    -0.43674210064447 *
148367    +        EducationGraduation  +    -0.18154054746298 * EducationMaster
148368    +          +     0.11973800573581 * Marital_StatusDivorced
148369    +          +      -0.294635257911 * Marital_StatusMarried
148370    +          +    -0.05399659601172 * Marital_StatusSingle
148371    +          +     0.34207780606239 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.20576658115662 * Education2n_Cycle + -0.09185472034614 *
EducationBasic + -0.43674210064447 * EducationGraduation + -0.18154054746298 * EducationMaster
+ 0.11973800573581 * Marital_StatusDivorced + -0.294635257911 * Marital_StatusMarried +
-0.05399659601172 * Marital_StatusSingle + 0.34207780606239 * Marital_StatusTogether ;
148372    +   H15  = H15  +    -0.05553093684862 * Education2n_Cycle
148373    +          +    -0.12898006732329 * EducationBasic  +    -0.16064118923518 *
148374    +        EducationGraduation  +     -0.6431539624694 * EducationMaster
148375    +          +     0.42838191659864 * Marital_StatusDivorced
148376    +          +    -0.09150349181363 * Marital_StatusMarried
148377    +          +    -0.33520164145276 * Marital_StatusSingle
148378    +          +    -0.15253738713197 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.05553093684862 * Education2n_Cycle + -0.12898006732329 *
EducationBasic + -0.16064118923518 * EducationGraduation + -0.6431539624694 * EducationMaster
+ 0.42838191659864 * Marital_StatusDivorced + -0.09150349181363 * Marital_StatusMarried +
-0.33520164145276 * Marital_StatusSingle + -0.15253738713197 * Marital_StatusTogether ;
148379    +   H11  =     -1.5079478405973 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.5079478405973 + H11 ;
148380    +   H12  =     0.03014958331993 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.03014958331993 + H12 ;
148381    +   H13  =    -1.78098671165572 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.78098671165572 + H13 ;
148382    +   H14  =     0.22179429743277 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.22179429743277 + H14 ;
148383    +   H15  =    -2.06602107857898 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -2.06602107857898 + H15 ;
148384    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
148385    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
148386    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
148387    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
148388    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
148389    +END;
MPRINT(EM_DIAGRAM):   END;
148390    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
148391    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
148392    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
148393    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
148394    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
148395    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
148396    +END;
MPRINT(EM_DIAGRAM):   END;
148397    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
148398    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
148399    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
148400    +
148401    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
148402    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
148403    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
148404    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
148405    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
148406    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
148407    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
148408    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
148409    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
148410    +end;
MPRINT(EM_DIAGRAM):   end;
148411    +else do;
MPRINT(EM_DIAGRAM):   else do;
148412    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
148413    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
148414    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
148415    +   end;
MPRINT(EM_DIAGRAM):   end;
148416    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
148417    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
148418    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
148419    +   end;
MPRINT(EM_DIAGRAM):   end;
148420    +   else do;
MPRINT(EM_DIAGRAM):   else do;
148421    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
148422    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
148423    +   end;
MPRINT(EM_DIAGRAM):   end;
148424    +end;
MPRINT(EM_DIAGRAM):   end;
148425    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
148426    +   P_DepVar1  =    -4.55666337815854 * H11  +    -4.04792544554995 * H12
148427    +          +     4.56148127429284 * H13  +     2.36841344452371 * H14
148428    +          +    -3.07371010011749 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.55666337815854 * H11 + -4.04792544554995 * H12 +
4.56148127429284 * H13 + 2.36841344452371 * H14 + -3.07371010011749 * H15 ;
148429    +   P_DepVar1  =    -0.83283406236136 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.83283406236136 + P_DepVar1 ;
148430    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
148431    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
148432    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
148433    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
148434    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
148435    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
148436    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
148437    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
148438    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
148439    +END;
MPRINT(EM_DIAGRAM):   END;
148440    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
148441    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
148442    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
148443    +END;
MPRINT(EM_DIAGRAM):   END;
148444    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
148445    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
148446    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
148447    +END;
MPRINT(EM_DIAGRAM):   END;
148448    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
148449    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
148450    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
148451    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
148452    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
148453    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
148454    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
148455    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
148456    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
148457    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
148458    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
148459    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
148460    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
148461    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
148462    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
148463    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
148464    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
148465    +END;
MPRINT(EM_DIAGRAM):   END;
148466    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
148467    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
148468    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
148469    +drop
148470    +H11
148471    +H12
148472    +H13
148473    +H14
148474    +H15
148475    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
148476    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
148477    +* Renaming variables for Neural34;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural34;
148478    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
148479    +* Renaming Posterior variables for Neural34;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural34;
148480    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
148481    +drop Neural34_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural34_P_DepVar1;
148482    +Neural34_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural34_P_DepVar1 = P_DepVar1;
148483    +drop Neural34_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural34_P_DepVar0;
148484    +Neural34_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural34_P_DepVar0 = P_DepVar0;
148485    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
148486    +* Renaming _WARN_ variable for Neural34;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural34;
148487    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
148488    +length Neural34_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural34_WARN_ $4;
148489    +drop Neural34_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural34_WARN_;
148490    +Neural34_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural34_WARN_ = _WARN_;
148491    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
148492    +* Ensmbl22: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Scoring Code of model 2 of 7;
148493    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
148494    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
148495    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
148496    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
148497    +* NODE: AutoNeural46;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural46;
148498    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
148499    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
148500    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
148501    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
148502    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
148503    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
148504    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
148505    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
148506    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
148507    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
148508    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
148509    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
148510    +LENGTH _WARN_ $4
148511    +      F_DepVar  $ 12
148512    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
148513    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
148514    +
148515    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
148516    +
148517    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
148518    +
148519    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
148520    +
148521    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
148522    +
148523    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
148524    +
148525    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
148526    +
148527    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
148528    +
148529    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
148530    +
148531    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
148532    +
148533    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
148534    +
148535    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
148536    +
148537    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
148538    +
148539    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
148540    +
148541    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
148542    +
148543    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
148544    +
148545    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
148546    +
148547    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
148548    +
148549    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
148550    +
148551    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
148552    +
148553    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
148554    +
148555    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
148556    +
148557    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
148558    +
148559    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
148560    +
148561    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
148562    +
148563    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
148564    +
148565    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
148566    +
148567    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
148568    +
148569    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
148570    +
148571    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
148572    +
148573    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
148574    +
148575    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
148576    +
148577    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
148578    +
148579    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
148580    +
148581    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
148582    +
148583    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
148584    +
148585    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
148586    +
148587    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
148588    +
148589    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
148590    +
148591    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
148592    +
148593    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
148594    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
148595    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
148596    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
148597    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
148598    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
148599    +end;
MPRINT(EM_DIAGRAM):   end;
148600    +else do;
MPRINT(EM_DIAGRAM):   else do;
148601    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
148602    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
148603    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
148604    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
148605    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
148606    +   end;
MPRINT(EM_DIAGRAM):   end;
148607    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
148608    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
148609    +   end;
MPRINT(EM_DIAGRAM):   end;
148610    +   else do;
MPRINT(EM_DIAGRAM):   else do;
148611    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
148612    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
148613    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
148614    +   end;
MPRINT(EM_DIAGRAM):   end;
148615    +end;
MPRINT(EM_DIAGRAM):   end;
148616    +
148617    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
148618    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
148619    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
148620    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
148621    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
148622    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
148623    +end;
MPRINT(EM_DIAGRAM):   end;
148624    +else do;
MPRINT(EM_DIAGRAM):   else do;
148625    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
148626    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
148627    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
148628    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
148629    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
148630    +   end;
MPRINT(EM_DIAGRAM):   end;
148631    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
148632    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
148633    +   end;
MPRINT(EM_DIAGRAM):   end;
148634    +   else do;
MPRINT(EM_DIAGRAM):   else do;
148635    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
148636    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
148637    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
148638    +   end;
MPRINT(EM_DIAGRAM):   end;
148639    +end;
MPRINT(EM_DIAGRAM):   end;
148640    +
148641    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
148642    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
148643    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
148644    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
148645    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
148646    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
148647    +end;
MPRINT(EM_DIAGRAM):   end;
148648    +else do;
MPRINT(EM_DIAGRAM):   else do;
148649    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
148650    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
148651    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
148652    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
148653    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
148654    +   end;
MPRINT(EM_DIAGRAM):   end;
148655    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
148656    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
148657    +   end;
MPRINT(EM_DIAGRAM):   end;
148658    +   else do;
MPRINT(EM_DIAGRAM):   else do;
148659    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
148660    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
148661    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
148662    +   end;
MPRINT(EM_DIAGRAM):   end;
148663    +end;
MPRINT(EM_DIAGRAM):   end;
148664    +
148665    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
148666    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
148667    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
148668    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
148669    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
148670    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
148671    +end;
MPRINT(EM_DIAGRAM):   end;
148672    +else do;
MPRINT(EM_DIAGRAM):   else do;
148673    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
148674    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
148675    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
148676    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
148677    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
148678    +   end;
MPRINT(EM_DIAGRAM):   end;
148679    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
148680    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
148681    +   end;
MPRINT(EM_DIAGRAM):   end;
148682    +   else do;
MPRINT(EM_DIAGRAM):   else do;
148683    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
148684    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
148685    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
148686    +   end;
MPRINT(EM_DIAGRAM):   end;
148687    +end;
MPRINT(EM_DIAGRAM):   end;
148688    +
148689    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
148690    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
148691    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
148692    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
148693    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
148694    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
148695    +end;
MPRINT(EM_DIAGRAM):   end;
148696    +else do;
MPRINT(EM_DIAGRAM):   else do;
148697    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
148698    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
148699    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
148700    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
148701    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
148702    +   end;
MPRINT(EM_DIAGRAM):   end;
148703    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
148704    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
148705    +   end;
MPRINT(EM_DIAGRAM):   end;
148706    +   else do;
MPRINT(EM_DIAGRAM):   else do;
148707    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
148708    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
148709    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
148710    +   end;
MPRINT(EM_DIAGRAM):   end;
148711    +end;
MPRINT(EM_DIAGRAM):   end;
148712    +
148713    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
148714    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
148715    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
148716    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
148717    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
148718    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
148719    +end;
MPRINT(EM_DIAGRAM):   end;
148720    +else do;
MPRINT(EM_DIAGRAM):   else do;
148721    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
148722    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
148723    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
148724    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
148725    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
148726    +   end;
MPRINT(EM_DIAGRAM):   end;
148727    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
148728    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
148729    +   end;
MPRINT(EM_DIAGRAM):   end;
148730    +   else do;
MPRINT(EM_DIAGRAM):   else do;
148731    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
148732    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
148733    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
148734    +   end;
MPRINT(EM_DIAGRAM):   end;
148735    +end;
MPRINT(EM_DIAGRAM):   end;
148736    +
148737    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
148738    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
148739    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
148740    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
148741    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
148742    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
148743    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
148744    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
148745    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
148746    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
148747    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
148748    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
148749    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
148750    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
148751    +end;
MPRINT(EM_DIAGRAM):   end;
148752    +else do;
MPRINT(EM_DIAGRAM):   else do;
148753    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
148754    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
148755    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
148756    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
148757    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
148758    +   end;
MPRINT(EM_DIAGRAM):   end;
148759    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
148760    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
148761    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
148762    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
148763    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
148764    +   end;
MPRINT(EM_DIAGRAM):   end;
148765    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
148766    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
148767    +   end;
MPRINT(EM_DIAGRAM):   end;
148768    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
148769    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
148770    +   end;
MPRINT(EM_DIAGRAM):   end;
148771    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
148772    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
148773    +   end;
MPRINT(EM_DIAGRAM):   end;
148774    +   else do;
MPRINT(EM_DIAGRAM):   else do;
148775    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
148776    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
148777    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
148778    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
148779    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
148780    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
148781    +   end;
MPRINT(EM_DIAGRAM):   end;
148782    +end;
MPRINT(EM_DIAGRAM):   end;
148783    +
148784    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
148785    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
148786    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
148787    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
148788    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
148789    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
148790    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
148791    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
148792    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
148793    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
148794    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
148795    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
148796    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
148797    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
148798    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
148799    +end;
MPRINT(EM_DIAGRAM):   end;
148800    +else do;
MPRINT(EM_DIAGRAM):   else do;
148801    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
148802    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
148803    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
148804    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
148805    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
148806    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
148807    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
148808    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
148809    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
148810    +         end;
MPRINT(EM_DIAGRAM):   end;
148811    +         else do;
MPRINT(EM_DIAGRAM):   else do;
148812    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
148813    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
148814    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
148815    +            end;
MPRINT(EM_DIAGRAM):   end;
148816    +         end;
MPRINT(EM_DIAGRAM):   end;
148817    +      end;
MPRINT(EM_DIAGRAM):   end;
148818    +      else do;
MPRINT(EM_DIAGRAM):   else do;
148819    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
148820    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
148821    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
148822    +         end;
MPRINT(EM_DIAGRAM):   end;
148823    +      end;
MPRINT(EM_DIAGRAM):   end;
148824    +   end;
MPRINT(EM_DIAGRAM):   end;
148825    +   else do;
MPRINT(EM_DIAGRAM):   else do;
148826    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
148827    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
148828    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
148829    +      end;
MPRINT(EM_DIAGRAM):   end;
148830    +      else do;
MPRINT(EM_DIAGRAM):   else do;
148831    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
148832    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
148833    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
148834    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
148835    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
148836    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
148837    +         end;
MPRINT(EM_DIAGRAM):   end;
148838    +      end;
MPRINT(EM_DIAGRAM):   end;
148839    +   end;
MPRINT(EM_DIAGRAM):   end;
148840    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
148841    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
148842    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
148843    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
148844    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
148845    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
148846    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
148847    +   end;
MPRINT(EM_DIAGRAM):   end;
148848    +end;
MPRINT(EM_DIAGRAM):   end;
148849    +
148850    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
148851    +*** Checking missing input Interval
148852    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
148853    +
148854    +IF NMISS(
148855    +   Income ,
148856    +   Kidhome ,
148857    +   MntFishProducts ,
148858    +   MntFruits ,
148859    +   MntGoldProds ,
148860    +   MntMeatProducts ,
148861    +   MntSweetProducts ,
148862    +   MntWines ,
148863    +   NumCatalogPurchases ,
148864    +   NumDealsPurchases ,
148865    +   NumStorePurchases ,
148866    +   NumWebPurchases ,
148867    +   NumWebVisitsMonth ,
148868    +   Recency ,
148869    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
148870    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
148871    +
148872    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
148873    +END;
MPRINT(EM_DIAGRAM):   END;
148874    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
148875    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
148876    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
148877    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
148878    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
148879    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
148880    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
148881    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
148882    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
148883    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
148884    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
148885    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
148886    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
148887    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
148888    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
148889    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
148890    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
148891    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
148892    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
148893    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
148894    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
148895    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
148896    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
148897    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
148898    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
148899    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
148900    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
148901    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
148902    +END;
MPRINT(EM_DIAGRAM):   END;
148903    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
148904    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
148905    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
148906    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
148907    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
148908    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
148909    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
148910    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
148911    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
148912    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
148913    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
148914    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
148915    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
148916    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
148917    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
148918    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
148919    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
148920    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
148921    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
148922    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
148923    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
148924    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
148925    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
148926    +   ELSE S_NumCatalogPurchases
148927    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
148928    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
148929    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
148930    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
148931    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
148932    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
148933    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
148934    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
148935    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
148936    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
148937    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
148938    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
148939    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
148940    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
148941    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
148942    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
148943    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
148944    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
148945    +END;
MPRINT(EM_DIAGRAM):   END;
148946    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
148947    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
148948    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
148949    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
148950    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
148951    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
148952    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
148953    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
148954    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
148955    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
148956    +   H1x1_1  =    -0.14779241211238 * S_Income  +     0.12406923960108 *
148957    +        S_Kidhome  +     0.07566108150758 * S_MntFishProducts
148958    +          +     0.04223936357442 * S_MntFruits  +    -0.01414396912246 *
148959    +        S_MntGoldProds  +    -0.43631543928923 * S_MntMeatProducts
148960    +          +      0.0311909552218 * S_MntSweetProducts
148961    +          +      0.1593908004139 * S_MntWines  +    -0.16331402526215 *
148962    +        S_NumCatalogPurchases  +    -0.08123579404919 * S_NumDealsPurchases
148963    +          +     0.12294876865087 * S_NumStorePurchases
148964    +          +     0.11602382379314 * S_NumWebPurchases
148965    +          +    -0.23519567542635 * S_NumWebVisitsMonth
148966    +          +     0.27617232496223 * S_Recency  +     0.06912944740739 *
148967    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.14779241211238 * S_Income + 0.12406923960108 * S_Kidhome +
0.07566108150758 * S_MntFishProducts + 0.04223936357442 * S_MntFruits + -0.01414396912246 *
S_MntGoldProds + -0.43631543928923 * S_MntMeatProducts + 0.0311909552218 * S_MntSweetProducts
+ 0.1593908004139 * S_MntWines + -0.16331402526215 * S_NumCatalogPurchases + -0.08123579404919
* S_NumDealsPurchases + 0.12294876865087 * S_NumStorePurchases + 0.11602382379314 *
S_NumWebPurchases + -0.23519567542635 * S_NumWebVisitsMonth + 0.27617232496223 * S_Recency +
0.06912944740739 * S_Teenhome ;
148968    +   H1x1_2  =    -0.13491153011654 * S_Income  +     0.14656938917448 *
148969    +        S_Kidhome  +     0.04457005191996 * S_MntFishProducts
148970    +          +     0.00771761834647 * S_MntFruits  +    -0.11830651019438 *
148971    +        S_MntGoldProds  +     0.06464771115751 * S_MntMeatProducts
148972    +          +     0.00133400054994 * S_MntSweetProducts
148973    +          +    -0.63837598558931 * S_MntWines  +     0.09668222160749 *
148974    +        S_NumCatalogPurchases  +     0.23530173987642 * S_NumDealsPurchases
148975    +          +    -0.49595472235036 * S_NumStorePurchases
148976    +          +    -0.24747548015204 * S_NumWebPurchases
148977    +          +     0.12326047694811 * S_NumWebVisitsMonth
148978    +          +    -0.04929000435218 * S_Recency  +     0.00568113597531 *
148979    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.13491153011654 * S_Income + 0.14656938917448 * S_Kidhome +
0.04457005191996 * S_MntFishProducts + 0.00771761834647 * S_MntFruits + -0.11830651019438 *
S_MntGoldProds + 0.06464771115751 * S_MntMeatProducts + 0.00133400054994 * S_MntSweetProducts
+ -0.63837598558931 * S_MntWines + 0.09668222160749 * S_NumCatalogPurchases + 0.23530173987642
* S_NumDealsPurchases + -0.49595472235036 * S_NumStorePurchases + -0.24747548015204 *
S_NumWebPurchases + 0.12326047694811 * S_NumWebVisitsMonth + -0.04929000435218 * S_Recency +
0.00568113597531 * S_Teenhome ;
148980    +   H1x1_3  =     0.13062973754666 * S_Income  +    -0.15311279667585 *
148981    +        S_Kidhome  +      0.0854652628099 * S_MntFishProducts
148982    +          +     0.02260695043189 * S_MntFruits  +    -0.06427354034325 *
148983    +        S_MntGoldProds  +    -0.51556004816788 * S_MntMeatProducts
148984    +          +    -0.03908755288099 * S_MntSweetProducts
148985    +          +    -0.24983513168561 * S_MntWines  +     0.11583370343483 *
148986    +        S_NumCatalogPurchases  +     0.05060583856766 * S_NumDealsPurchases
148987    +          +    -0.20634630081435 * S_NumStorePurchases
148988    +          +    -0.06734935798888 * S_NumWebPurchases
148989    +          +     0.32288250215418 * S_NumWebVisitsMonth
148990    +          +    -0.32978147839937 * S_Recency  +    -0.07420334428475 *
148991    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.13062973754666 * S_Income + -0.15311279667585 * S_Kidhome +
0.0854652628099 * S_MntFishProducts + 0.02260695043189 * S_MntFruits + -0.06427354034325 *
S_MntGoldProds + -0.51556004816788 * S_MntMeatProducts + -0.03908755288099 *
S_MntSweetProducts + -0.24983513168561 * S_MntWines + 0.11583370343483 * S_NumCatalogPurchases
+ 0.05060583856766 * S_NumDealsPurchases + -0.20634630081435 * S_NumStorePurchases +
-0.06734935798888 * S_NumWebPurchases + 0.32288250215418 * S_NumWebVisitsMonth +
-0.32978147839937 * S_Recency + -0.07420334428475 * S_Teenhome ;
148992    +   H1x1_1  = H1x1_1  +     0.14311220987159 * AcceptedCmp10
148993    +          +     0.25596748420576 * AcceptedCmp20  +     0.13199169114019 *
148994    +        AcceptedCmp30  +     0.14111066281846 * AcceptedCmp40
148995    +          +     0.16136804502708 * AcceptedCmp50  +     0.06340055511955 *
148996    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.14311220987159 * AcceptedCmp10 + 0.25596748420576 *
AcceptedCmp20 + 0.13199169114019 * AcceptedCmp30 + 0.14111066281846 * AcceptedCmp40 +
0.16136804502708 * AcceptedCmp50 + 0.06340055511955 * Complain0 ;
148997    +   H1x1_2  = H1x1_2  +     0.07692946904386 * AcceptedCmp10
148998    +          +     0.10129736414747 * AcceptedCmp20  +    -0.08526063108983 *
148999    +        AcceptedCmp30  +     0.00391518443243 * AcceptedCmp40
149000    +          +    -0.11013908503956 * AcceptedCmp50  +     0.03814032229209 *
149001    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.07692946904386 * AcceptedCmp10 + 0.10129736414747 *
AcceptedCmp20 + -0.08526063108983 * AcceptedCmp30 + 0.00391518443243 * AcceptedCmp40 +
-0.11013908503956 * AcceptedCmp50 + 0.03814032229209 * Complain0 ;
149002    +   H1x1_3  = H1x1_3  +    -0.02206432573422 * AcceptedCmp10
149003    +          +     0.22410311196864 * AcceptedCmp20  +    -0.19387020375313 *
149004    +        AcceptedCmp30  +    -0.12058647992586 * AcceptedCmp40
149005    +          +    -0.09809197464918 * AcceptedCmp50  +    -0.09604584189983 *
149006    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.02206432573422 * AcceptedCmp10 + 0.22410311196864 *
AcceptedCmp20 + -0.19387020375313 * AcceptedCmp30 + -0.12058647992586 * AcceptedCmp40 +
-0.09809197464918 * AcceptedCmp50 + -0.09604584189983 * Complain0 ;
149007    +   H1x1_1  = H1x1_1  +    -0.00017476927899 * Education2n_Cycle
149008    +          +    -0.15306731287208 * EducationBasic  +     0.04951359729631 *
149009    +        EducationGraduation  +     0.07475697967073 * EducationMaster
149010    +          +    -0.04265434587882 * Marital_StatusDivorced
149011    +          +     0.17114014094758 * Marital_StatusMarried
149012    +          +     -0.1537035921296 * Marital_StatusSingle
149013    +          +     0.15023718360478 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.00017476927899 * Education2n_Cycle +
-0.15306731287208 * EducationBasic + 0.04951359729631 * EducationGraduation + 0.07475697967073
* EducationMaster + -0.04265434587882 * Marital_StatusDivorced + 0.17114014094758 *
Marital_StatusMarried + -0.1537035921296 * Marital_StatusSingle + 0.15023718360478 *
Marital_StatusTogether ;
149014    +   H1x1_2  = H1x1_2  +     0.10391719023548 * Education2n_Cycle
149015    +          +    -0.71597921887555 * EducationBasic  +     0.38732833028427 *
149016    +        EducationGraduation  +     0.04507684017588 * EducationMaster
149017    +          +     0.25534272809394 * Marital_StatusDivorced
149018    +          +     0.20034903346804 * Marital_StatusMarried
149019    +          +    -0.38348393943797 * Marital_StatusSingle
149020    +          +     0.15254304652439 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.10391719023548 * Education2n_Cycle +
-0.71597921887555 * EducationBasic + 0.38732833028427 * EducationGraduation + 0.04507684017588
* EducationMaster + 0.25534272809394 * Marital_StatusDivorced + 0.20034903346804 *
Marital_StatusMarried + -0.38348393943797 * Marital_StatusSingle + 0.15254304652439 *
Marital_StatusTogether ;
149021    +   H1x1_3  = H1x1_3  +     0.06104667656786 * Education2n_Cycle
149022    +          +     -0.0935234366994 * EducationBasic  +     0.09446977823229 *
149023    +        EducationGraduation  +    -0.11683780234266 * EducationMaster
149024    +          +      0.1988416043876 * Marital_StatusDivorced
149025    +          +    -0.21663959478684 * Marital_StatusMarried
149026    +          +     0.06591480171547 * Marital_StatusSingle
149027    +          +    -0.17108581516048 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.06104667656786 * Education2n_Cycle +
-0.0935234366994 * EducationBasic + 0.09446977823229 * EducationGraduation + -0.11683780234266
* EducationMaster + 0.1988416043876 * Marital_StatusDivorced + -0.21663959478684 *
Marital_StatusMarried + 0.06591480171547 * Marital_StatusSingle + -0.17108581516048 *
Marital_StatusTogether ;
149028    +   H1x1_1  =     0.12085771569539 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.12085771569539 + H1x1_1 ;
149029    +   H1x1_2  =     1.88026862462696 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.88026862462696 + H1x1_2 ;
149030    +   H1x1_3  =    -1.66768306479405 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.66768306479405 + H1x1_3 ;
149031    +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
149032    +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
149033    +   H1x1_3  = SIN(H1x1_3 );
MPRINT(EM_DIAGRAM):   H1x1_3 = SIN(H1x1_3 );
149034    +END;
MPRINT(EM_DIAGRAM):   END;
149035    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
149036    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
149037    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
149038    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
149039    +END;
MPRINT(EM_DIAGRAM):   END;
149040    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
149041    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
149042    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
149043    +
149044    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
149045    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
149046    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
149047    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
149048    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
149049    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
149050    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
149051    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
149052    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
149053    +end;
MPRINT(EM_DIAGRAM):   end;
149054    +else do;
MPRINT(EM_DIAGRAM):   else do;
149055    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
149056    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
149057    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
149058    +   end;
MPRINT(EM_DIAGRAM):   end;
149059    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
149060    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
149061    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
149062    +   end;
MPRINT(EM_DIAGRAM):   end;
149063    +   else do;
MPRINT(EM_DIAGRAM):   else do;
149064    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
149065    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
149066    +   end;
MPRINT(EM_DIAGRAM):   end;
149067    +end;
MPRINT(EM_DIAGRAM):   end;
149068    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
149069    +   P_DepVar1  =    -105.465737701328 * H1x1_1  +    -25.9919910307682 * H1x1_2
149070    +          +    -60.7557666068018 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -105.465737701328 * H1x1_1 + -25.9919910307682 * H1x1_2 +
-60.7557666068018 * H1x1_3 ;
149071    +   P_DepVar1  =     17.0796398396243 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 17.0796398396243 + P_DepVar1 ;
149072    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
149073    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
149074    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
149075    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
149076    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
149077    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
149078    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
149079    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
149080    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
149081    +END;
MPRINT(EM_DIAGRAM):   END;
149082    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
149083    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
149084    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
149085    +END;
MPRINT(EM_DIAGRAM):   END;
149086    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
149087    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
149088    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
149089    +END;
MPRINT(EM_DIAGRAM):   END;
149090    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
149091    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
149092    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
149093    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
149094    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
149095    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
149096    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
149097    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
149098    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
149099    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
149100    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
149101    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
149102    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
149103    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
149104    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
149105    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
149106    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
149107    +END;
MPRINT(EM_DIAGRAM):   END;
149108    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
149109    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
149110    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
149111    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
149112    +* Renaming variables for AutoNeural46;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural46;
149113    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
149114    +* Renaming Posterior variables for AutoNeural46;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural46;
149115    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
149116    +drop AutoNeural46_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural46_P_DepVar1;
149117    +AutoNeural46_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural46_P_DepVar1 = P_DepVar1;
149118    +drop AutoNeural46_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural46_P_DepVar0;
149119    +AutoNeural46_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural46_P_DepVar0 = P_DepVar0;
149120    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
149121    +* Renaming _WARN_ variable for AutoNeural46;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural46;
149122    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
149123    +length AutoNeural46_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural46_WARN_ $4;
149124    +drop AutoNeural46_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural46_WARN_;
149125    +AutoNeural46_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural46_WARN_ = _WARN_;
149126    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
149127    +* Ensmbl22: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Scoring Code of model 3 of 7;
149128    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
149129    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
149130    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
149131    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
149132    +* NODE: AutoNeural42;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural42;
149133    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
149134    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
149135    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
149136    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
149137    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
149138    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
149139    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
149140    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
149141    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
149142    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
149143    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
149144    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
149145    +LENGTH _WARN_ $4
149146    +      F_DepVar  $ 12
149147    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
149148    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
149149    +
149150    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
149151    +
149152    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
149153    +
149154    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
149155    +
149156    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
149157    +
149158    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
149159    +
149160    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
149161    +
149162    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
149163    +
149164    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
149165    +
149166    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
149167    +
149168    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
149169    +
149170    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
149171    +
149172    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
149173    +
149174    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
149175    +
149176    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
149177    +
149178    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
149179    +
149180    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
149181    +
149182    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
149183    +
149184    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
149185    +
149186    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
149187    +
149188    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
149189    +
149190    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
149191    +
149192    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
149193    +
149194    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
149195    +
149196    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
149197    +
149198    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
149199    +
149200    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
149201    +
149202    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
149203    +
149204    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
149205    +
149206    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
149207    +
149208    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
149209    +
149210    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
149211    +
149212    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
149213    +
149214    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
149215    +
149216    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
149217    +
149218    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
149219    +
149220    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
149221    +
149222    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
149223    +
149224    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
149225    +
149226    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
149227    +
149228    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
149229    +
149230    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
149231    +
149232    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
149233    +
149234    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
149235    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
149236    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
149237    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
149238    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
149239    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
149240    +end;
MPRINT(EM_DIAGRAM):   end;
149241    +else do;
MPRINT(EM_DIAGRAM):   else do;
149242    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
149243    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
149244    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
149245    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
149246    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
149247    +   end;
MPRINT(EM_DIAGRAM):   end;
149248    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
149249    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
149250    +   end;
MPRINT(EM_DIAGRAM):   end;
149251    +   else do;
MPRINT(EM_DIAGRAM):   else do;
149252    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
149253    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
149254    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
149255    +   end;
MPRINT(EM_DIAGRAM):   end;
149256    +end;
MPRINT(EM_DIAGRAM):   end;
149257    +
149258    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
149259    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
149260    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
149261    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
149262    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
149263    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
149264    +end;
MPRINT(EM_DIAGRAM):   end;
149265    +else do;
MPRINT(EM_DIAGRAM):   else do;
149266    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
149267    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
149268    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
149269    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
149270    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
149271    +   end;
MPRINT(EM_DIAGRAM):   end;
149272    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
149273    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
149274    +   end;
MPRINT(EM_DIAGRAM):   end;
149275    +   else do;
MPRINT(EM_DIAGRAM):   else do;
149276    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
149277    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
149278    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
149279    +   end;
MPRINT(EM_DIAGRAM):   end;
149280    +end;
MPRINT(EM_DIAGRAM):   end;
149281    +
149282    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
149283    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
149284    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
149285    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
149286    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
149287    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
149288    +end;
MPRINT(EM_DIAGRAM):   end;
149289    +else do;
MPRINT(EM_DIAGRAM):   else do;
149290    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
149291    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
149292    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
149293    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
149294    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
149295    +   end;
MPRINT(EM_DIAGRAM):   end;
149296    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
149297    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
149298    +   end;
MPRINT(EM_DIAGRAM):   end;
149299    +   else do;
MPRINT(EM_DIAGRAM):   else do;
149300    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
149301    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
149302    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
149303    +   end;
MPRINT(EM_DIAGRAM):   end;
149304    +end;
MPRINT(EM_DIAGRAM):   end;
149305    +
149306    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
149307    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
149308    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
149309    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
149310    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
149311    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
149312    +end;
MPRINT(EM_DIAGRAM):   end;
149313    +else do;
MPRINT(EM_DIAGRAM):   else do;
149314    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
149315    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
149316    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
149317    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
149318    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
149319    +   end;
MPRINT(EM_DIAGRAM):   end;
149320    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
149321    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
149322    +   end;
MPRINT(EM_DIAGRAM):   end;
149323    +   else do;
MPRINT(EM_DIAGRAM):   else do;
149324    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
149325    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
149326    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
149327    +   end;
MPRINT(EM_DIAGRAM):   end;
149328    +end;
MPRINT(EM_DIAGRAM):   end;
149329    +
149330    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
149331    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
149332    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
149333    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
149334    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
149335    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
149336    +end;
MPRINT(EM_DIAGRAM):   end;
149337    +else do;
MPRINT(EM_DIAGRAM):   else do;
149338    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
149339    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
149340    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
149341    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
149342    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
149343    +   end;
MPRINT(EM_DIAGRAM):   end;
149344    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
149345    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
149346    +   end;
MPRINT(EM_DIAGRAM):   end;
149347    +   else do;
MPRINT(EM_DIAGRAM):   else do;
149348    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
149349    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
149350    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
149351    +   end;
MPRINT(EM_DIAGRAM):   end;
149352    +end;
MPRINT(EM_DIAGRAM):   end;
149353    +
149354    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
149355    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
149356    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
149357    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
149358    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
149359    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
149360    +end;
MPRINT(EM_DIAGRAM):   end;
149361    +else do;
MPRINT(EM_DIAGRAM):   else do;
149362    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
149363    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
149364    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
149365    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
149366    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
149367    +   end;
MPRINT(EM_DIAGRAM):   end;
149368    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
149369    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
149370    +   end;
MPRINT(EM_DIAGRAM):   end;
149371    +   else do;
MPRINT(EM_DIAGRAM):   else do;
149372    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
149373    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
149374    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
149375    +   end;
MPRINT(EM_DIAGRAM):   end;
149376    +end;
MPRINT(EM_DIAGRAM):   end;
149377    +
149378    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
149379    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
149380    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
149381    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
149382    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
149383    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
149384    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
149385    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
149386    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
149387    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
149388    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
149389    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
149390    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
149391    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
149392    +end;
MPRINT(EM_DIAGRAM):   end;
149393    +else do;
MPRINT(EM_DIAGRAM):   else do;
149394    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
149395    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
149396    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
149397    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
149398    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
149399    +   end;
MPRINT(EM_DIAGRAM):   end;
149400    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
149401    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
149402    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
149403    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
149404    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
149405    +   end;
MPRINT(EM_DIAGRAM):   end;
149406    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
149407    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
149408    +   end;
MPRINT(EM_DIAGRAM):   end;
149409    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
149410    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
149411    +   end;
MPRINT(EM_DIAGRAM):   end;
149412    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
149413    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
149414    +   end;
MPRINT(EM_DIAGRAM):   end;
149415    +   else do;
MPRINT(EM_DIAGRAM):   else do;
149416    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
149417    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
149418    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
149419    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
149420    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
149421    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
149422    +   end;
MPRINT(EM_DIAGRAM):   end;
149423    +end;
MPRINT(EM_DIAGRAM):   end;
149424    +
149425    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
149426    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
149427    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
149428    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
149429    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
149430    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
149431    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
149432    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
149433    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
149434    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
149435    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
149436    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
149437    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
149438    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
149439    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
149440    +end;
MPRINT(EM_DIAGRAM):   end;
149441    +else do;
MPRINT(EM_DIAGRAM):   else do;
149442    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
149443    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
149444    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
149445    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
149446    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
149447    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
149448    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
149449    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
149450    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
149451    +         end;
MPRINT(EM_DIAGRAM):   end;
149452    +         else do;
MPRINT(EM_DIAGRAM):   else do;
149453    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
149454    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
149455    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
149456    +            end;
MPRINT(EM_DIAGRAM):   end;
149457    +         end;
MPRINT(EM_DIAGRAM):   end;
149458    +      end;
MPRINT(EM_DIAGRAM):   end;
149459    +      else do;
MPRINT(EM_DIAGRAM):   else do;
149460    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
149461    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
149462    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
149463    +         end;
MPRINT(EM_DIAGRAM):   end;
149464    +      end;
MPRINT(EM_DIAGRAM):   end;
149465    +   end;
MPRINT(EM_DIAGRAM):   end;
149466    +   else do;
MPRINT(EM_DIAGRAM):   else do;
149467    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
149468    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
149469    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
149470    +      end;
MPRINT(EM_DIAGRAM):   end;
149471    +      else do;
MPRINT(EM_DIAGRAM):   else do;
149472    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
149473    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
149474    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
149475    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
149476    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
149477    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
149478    +         end;
MPRINT(EM_DIAGRAM):   end;
149479    +      end;
MPRINT(EM_DIAGRAM):   end;
149480    +   end;
MPRINT(EM_DIAGRAM):   end;
149481    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
149482    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
149483    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
149484    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
149485    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
149486    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
149487    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
149488    +   end;
MPRINT(EM_DIAGRAM):   end;
149489    +end;
MPRINT(EM_DIAGRAM):   end;
149490    +
149491    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
149492    +*** Checking missing input Interval
149493    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
149494    +
149495    +IF NMISS(
149496    +   Income ,
149497    +   Kidhome ,
149498    +   MntFishProducts ,
149499    +   MntFruits ,
149500    +   MntGoldProds ,
149501    +   MntMeatProducts ,
149502    +   MntSweetProducts ,
149503    +   MntWines ,
149504    +   NumCatalogPurchases ,
149505    +   NumDealsPurchases ,
149506    +   NumStorePurchases ,
149507    +   NumWebPurchases ,
149508    +   NumWebVisitsMonth ,
149509    +   Recency ,
149510    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
149511    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
149512    +
149513    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
149514    +END;
MPRINT(EM_DIAGRAM):   END;
149515    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
149516    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
149517    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
149518    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
149519    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
149520    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
149521    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
149522    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
149523    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
149524    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
149525    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
149526    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
149527    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
149528    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
149529    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
149530    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
149531    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
149532    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
149533    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
149534    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
149535    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
149536    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
149537    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
149538    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
149539    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
149540    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
149541    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
149542    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
149543    +END;
MPRINT(EM_DIAGRAM):   END;
149544    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
149545    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
149546    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
149547    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
149548    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
149549    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
149550    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
149551    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
149552    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
149553    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
149554    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
149555    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
149556    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
149557    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
149558    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
149559    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
149560    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
149561    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
149562    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
149563    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
149564    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
149565    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
149566    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
149567    +   ELSE S_NumCatalogPurchases
149568    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
149569    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
149570    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
149571    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
149572    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
149573    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
149574    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
149575    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
149576    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
149577    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
149578    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
149579    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
149580    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
149581    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
149582    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
149583    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
149584    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
149585    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
149586    +END;
MPRINT(EM_DIAGRAM):   END;
149587    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
149588    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
149589    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
149590    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
149591    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
149592    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
149593    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
149594    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
149595    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
149596    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
149597    +   H1x1_1  =    -0.61752831165943 * S_Income  +    -0.31903138173339 *
149598    +        S_Kidhome  +     1.07644564135555 * S_MntFishProducts
149599    +          +     0.65454839379318 * S_MntFruits  +    -0.14959507038031 *
149600    +        S_MntGoldProds  +    -5.93493457217182 * S_MntMeatProducts
149601    +          +     0.13203247258141 * S_MntSweetProducts
149602    +          +     2.56195281130506 * S_MntWines  +    -1.36884424558249 *
149603    +        S_NumCatalogPurchases  +    -0.86876556455629 * S_NumDealsPurchases
149604    +          +     1.48881174203434 * S_NumStorePurchases
149605    +          +     2.06403591844726 * S_NumWebPurchases
149606    +          +    -0.09535558759694 * S_NumWebVisitsMonth
149607    +          +    -0.05978552253526 * S_Recency  +     0.15007435747359 *
149608    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.61752831165943 * S_Income + -0.31903138173339 * S_Kidhome +
1.07644564135555 * S_MntFishProducts + 0.65454839379318 * S_MntFruits + -0.14959507038031 *
S_MntGoldProds + -5.93493457217182 * S_MntMeatProducts + 0.13203247258141 * S_MntSweetProducts
+ 2.56195281130506 * S_MntWines + -1.36884424558249 * S_NumCatalogPurchases +
-0.86876556455629 * S_NumDealsPurchases + 1.48881174203434 * S_NumStorePurchases +
2.06403591844726 * S_NumWebPurchases + -0.09535558759694 * S_NumWebVisitsMonth +
-0.05978552253526 * S_Recency + 0.15007435747359 * S_Teenhome ;
149609    +   H1x1_2  =     0.26608479656795 * S_Income  +    -1.19991366958494 *
149610    +        S_Kidhome  +    -0.06930701896636 * S_MntFishProducts
149611    +          +    -0.24491476793503 * S_MntFruits  +     0.61341878614078 *
149612    +        S_MntGoldProds  +     1.20573081926043 * S_MntMeatProducts
149613    +          +      0.3852767951223 * S_MntSweetProducts
149614    +          +     1.08228250264945 * S_MntWines  +     0.60642303652873 *
149615    +        S_NumCatalogPurchases  +     0.15318179926318 * S_NumDealsPurchases
149616    +          +     0.87686526091024 * S_NumStorePurchases
149617    +          +     0.48807967312664 * S_NumWebPurchases
149618    +          +     2.42770807785792 * S_NumWebVisitsMonth
149619    +          +      -2.239057176324 * S_Recency  +    -0.38694456406673 *
149620    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.26608479656795 * S_Income + -1.19991366958494 * S_Kidhome +
-0.06930701896636 * S_MntFishProducts + -0.24491476793503 * S_MntFruits + 0.61341878614078 *
S_MntGoldProds + 1.20573081926043 * S_MntMeatProducts + 0.3852767951223 * S_MntSweetProducts +
1.08228250264945 * S_MntWines + 0.60642303652873 * S_NumCatalogPurchases + 0.15318179926318 *
S_NumDealsPurchases + 0.87686526091024 * S_NumStorePurchases + 0.48807967312664 *
S_NumWebPurchases + 2.42770807785792 * S_NumWebVisitsMonth + -2.239057176324 * S_Recency +
-0.38694456406673 * S_Teenhome ;
149621    +   H1x1_3  =     2.14026785899485 * S_Income  +     0.71085813088393 *
149622    +        S_Kidhome  +    -0.12119457643873 * S_MntFishProducts
149623    +          +     0.52522197349122 * S_MntFruits  +     0.44706934196977 *
149624    +        S_MntGoldProds  +     1.26484530402043 * S_MntMeatProducts
149625    +          +      0.4461192743946 * S_MntSweetProducts
149626    +          +     0.68849791421776 * S_MntWines  +     0.73332275156447 *
149627    +        S_NumCatalogPurchases  +     0.25950906585502 * S_NumDealsPurchases
149628    +          +     1.26831094932108 * S_NumStorePurchases
149629    +          +     0.50819627174451 * S_NumWebPurchases
149630    +          +      0.5463426309003 * S_NumWebVisitsMonth
149631    +          +    -1.45156203280121 * S_Recency  +    -0.99155600458731 *
149632    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.14026785899485 * S_Income + 0.71085813088393 * S_Kidhome +
-0.12119457643873 * S_MntFishProducts + 0.52522197349122 * S_MntFruits + 0.44706934196977 *
S_MntGoldProds + 1.26484530402043 * S_MntMeatProducts + 0.4461192743946 * S_MntSweetProducts +
0.68849791421776 * S_MntWines + 0.73332275156447 * S_NumCatalogPurchases + 0.25950906585502 *
S_NumDealsPurchases + 1.26831094932108 * S_NumStorePurchases + 0.50819627174451 *
S_NumWebPurchases + 0.5463426309003 * S_NumWebVisitsMonth + -1.45156203280121 * S_Recency +
-0.99155600458731 * S_Teenhome ;
149633    +   H1x1_4  =     0.28134858392415 * S_Income  +     1.57838616473011 *
149634    +        S_Kidhome  +     0.01685933792865 * S_MntFishProducts
149635    +          +     0.64818795957189 * S_MntFruits  +     0.44053765721056 *
149636    +        S_MntGoldProds  +     -0.0350414210023 * S_MntMeatProducts
149637    +          +     0.73630834236265 * S_MntSweetProducts
149638    +          +     2.20164313777354 * S_MntWines  +    -0.71244138939707 *
149639    +        S_NumCatalogPurchases  +    -0.05218003711946 * S_NumDealsPurchases
149640    +          +     2.08815797619397 * S_NumStorePurchases
149641    +          +     1.47250122683369 * S_NumWebPurchases
149642    +          +    -1.95745344341946 * S_NumWebVisitsMonth
149643    +          +     1.52461902721397 * S_Recency  +     0.07114080397665 *
149644    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.28134858392415 * S_Income + 1.57838616473011 * S_Kidhome +
0.01685933792865 * S_MntFishProducts + 0.64818795957189 * S_MntFruits + 0.44053765721056 *
S_MntGoldProds + -0.0350414210023 * S_MntMeatProducts + 0.73630834236265 * S_MntSweetProducts
+ 2.20164313777354 * S_MntWines + -0.71244138939707 * S_NumCatalogPurchases +
-0.05218003711946 * S_NumDealsPurchases + 2.08815797619397 * S_NumStorePurchases +
1.47250122683369 * S_NumWebPurchases + -1.95745344341946 * S_NumWebVisitsMonth +
1.52461902721397 * S_Recency + 0.07114080397665 * S_Teenhome ;
149645    +   H1x1_5  =     0.06299419029838 * S_Income  +    -0.25263043424438 *
149646    +        S_Kidhome  +    -0.72407836360298 * S_MntFishProducts
149647    +          +     0.46240377706589 * S_MntFruits  +    -0.31168917499552 *
149648    +        S_MntGoldProds  +     3.17795585534164 * S_MntMeatProducts
149649    +          +    -0.23438993753342 * S_MntSweetProducts
149650    +          +     -2.0392497753494 * S_MntWines  +      1.0094456692298 *
149651    +        S_NumCatalogPurchases  +     1.21992922429388 * S_NumDealsPurchases
149652    +          +    -0.49697408067153 * S_NumStorePurchases
149653    +          +     0.41091736049576 * S_NumWebPurchases
149654    +          +     1.61180593172142 * S_NumWebVisitsMonth
149655    +          +    -2.15417652342106 * S_Recency  +    -0.30863432234672 *
149656    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.06299419029838 * S_Income + -0.25263043424438 * S_Kidhome +
-0.72407836360298 * S_MntFishProducts + 0.46240377706589 * S_MntFruits + -0.31168917499552 *
S_MntGoldProds + 3.17795585534164 * S_MntMeatProducts + -0.23438993753342 * S_MntSweetProducts
+ -2.0392497753494 * S_MntWines + 1.0094456692298 * S_NumCatalogPurchases + 1.21992922429388 *
S_NumDealsPurchases + -0.49697408067153 * S_NumStorePurchases + 0.41091736049576 *
S_NumWebPurchases + 1.61180593172142 * S_NumWebVisitsMonth + -2.15417652342106 * S_Recency +
-0.30863432234672 * S_Teenhome ;
149657    +   H1x1_1  = H1x1_1  +     1.15191639869453 * AcceptedCmp10
149658    +          +      0.0367982148477 * AcceptedCmp20  +      0.3258650789605 *
149659    +        AcceptedCmp30  +      0.2580514232707 * AcceptedCmp40
149660    +          +     0.63958723501202 * AcceptedCmp50  +    -0.32640656229888 *
149661    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.15191639869453 * AcceptedCmp10 + 0.0367982148477 *
AcceptedCmp20 + 0.3258650789605 * AcceptedCmp30 + 0.2580514232707 * AcceptedCmp40 +
0.63958723501202 * AcceptedCmp50 + -0.32640656229888 * Complain0 ;
149662    +   H1x1_2  = H1x1_2  +    -1.74950558446111 * AcceptedCmp10
149663    +          +    -0.90356166498734 * AcceptedCmp20  +    -1.23130580993933 *
149664    +        AcceptedCmp30  +     -1.4169795699816 * AcceptedCmp40
149665    +          +    -1.78889837976364 * AcceptedCmp50  +      1.4788954382262 *
149666    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.74950558446111 * AcceptedCmp10 + -0.90356166498734
* AcceptedCmp20 + -1.23130580993933 * AcceptedCmp30 + -1.4169795699816 * AcceptedCmp40 +
-1.78889837976364 * AcceptedCmp50 + 1.4788954382262 * Complain0 ;
149667    +   H1x1_3  = H1x1_3  +     0.19640584758608 * AcceptedCmp10
149668    +          +    -0.02812292141076 * AcceptedCmp20  +     0.18411950002405 *
149669    +        AcceptedCmp30  +     0.14654389018041 * AcceptedCmp40
149670    +          +    -0.73289230090736 * AcceptedCmp50  +    -0.18955862978745 *
149671    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.19640584758608 * AcceptedCmp10 + -0.02812292141076 *
AcceptedCmp20 + 0.18411950002405 * AcceptedCmp30 + 0.14654389018041 * AcceptedCmp40 +
-0.73289230090736 * AcceptedCmp50 + -0.18955862978745 * Complain0 ;
149672    +   H1x1_4  = H1x1_4  +     0.60930619563149 * AcceptedCmp10
149673    +          +     0.56372104821368 * AcceptedCmp20  +     1.23124531565034 *
149674    +        AcceptedCmp30  +     1.16511385622377 * AcceptedCmp40
149675    +          +     0.83299036807857 * AcceptedCmp50  +    -0.87889366207671 *
149676    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.60930619563149 * AcceptedCmp10 + 0.56372104821368 *
AcceptedCmp20 + 1.23124531565034 * AcceptedCmp30 + 1.16511385622377 * AcceptedCmp40 +
0.83299036807857 * AcceptedCmp50 + -0.87889366207671 * Complain0 ;
149677    +   H1x1_5  = H1x1_5  +    -1.02627214772402 * AcceptedCmp10
149678    +          +    -0.35326081554996 * AcceptedCmp20  +    -0.45229632523083 *
149679    +        AcceptedCmp30  +    -0.88576020203346 * AcceptedCmp40
149680    +          +    -0.25524770878943 * AcceptedCmp50  +    -0.58775156249673 *
149681    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -1.02627214772402 * AcceptedCmp10 + -0.35326081554996
* AcceptedCmp20 + -0.45229632523083 * AcceptedCmp30 + -0.88576020203346 * AcceptedCmp40 +
-0.25524770878943 * AcceptedCmp50 + -0.58775156249673 * Complain0 ;
149682    +   H1x1_1  = H1x1_1  +    -0.20048115002767 * Education2n_Cycle
149683    +          +     0.10477823552379 * EducationBasic  +    -0.09122776507376 *
149684    +        EducationGraduation  +    -0.01483389086199 * EducationMaster
149685    +          +    -0.14951932081311 * Marital_StatusDivorced
149686    +          +     0.08343648358981 * Marital_StatusMarried
149687    +          +    -0.52143432598374 * Marital_StatusSingle
149688    +          +    -0.17799942229122 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.20048115002767 * Education2n_Cycle +
0.10477823552379 * EducationBasic + -0.09122776507376 * EducationGraduation +
-0.01483389086199 * EducationMaster + -0.14951932081311 * Marital_StatusDivorced +
0.08343648358981 * Marital_StatusMarried + -0.52143432598374 * Marital_StatusSingle +
-0.17799942229122 * Marital_StatusTogether ;
149689    +   H1x1_2  = H1x1_2  +    -0.06492224317117 * Education2n_Cycle
149690    +          +     0.50630082280639 * EducationBasic  +    -0.32521089553297 *
149691    +        EducationGraduation  +    -0.38968023972702 * EducationMaster
149692    +          +    -0.34495973695408 * Marital_StatusDivorced
149693    +          +    -0.30910829853532 * Marital_StatusMarried
149694    +          +     0.14431404541055 * Marital_StatusSingle
149695    +          +    -0.62673029935295 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.06492224317117 * Education2n_Cycle +
0.50630082280639 * EducationBasic + -0.32521089553297 * EducationGraduation +
-0.38968023972702 * EducationMaster + -0.34495973695408 * Marital_StatusDivorced +
-0.30910829853532 * Marital_StatusMarried + 0.14431404541055 * Marital_StatusSingle +
-0.62673029935295 * Marital_StatusTogether ;
149696    +   H1x1_3  = H1x1_3  +     0.41266521248037 * Education2n_Cycle
149697    +          +    -0.11192325989817 * EducationBasic  +    -0.96742524784448 *
149698    +        EducationGraduation  +     0.05582780345024 * EducationMaster
149699    +          +     0.81191732290197 * Marital_StatusDivorced
149700    +          +    -2.53108753227171 * Marital_StatusMarried
149701    +          +     2.21769123178832 * Marital_StatusSingle
149702    +          +    -0.90613443546426 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.41266521248037 * Education2n_Cycle +
-0.11192325989817 * EducationBasic + -0.96742524784448 * EducationGraduation +
0.05582780345024 * EducationMaster + 0.81191732290197 * Marital_StatusDivorced +
-2.53108753227171 * Marital_StatusMarried + 2.21769123178832 * Marital_StatusSingle +
-0.90613443546426 * Marital_StatusTogether ;
149703    +   H1x1_4  = H1x1_4  +    -0.08882031994616 * Education2n_Cycle
149704    +          +     0.59640481500702 * EducationBasic  +    -0.75285942189639 *
149705    +        EducationGraduation  +     0.52527957409681 * EducationMaster
149706    +          +    -1.26246836163545 * Marital_StatusDivorced
149707    +          +     0.73147045162506 * Marital_StatusMarried
149708    +          +     0.04252836823306 * Marital_StatusSingle
149709    +          +     1.44915119635375 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.08882031994616 * Education2n_Cycle +
0.59640481500702 * EducationBasic + -0.75285942189639 * EducationGraduation + 0.52527957409681
* EducationMaster + -1.26246836163545 * Marital_StatusDivorced + 0.73147045162506 *
Marital_StatusMarried + 0.04252836823306 * Marital_StatusSingle + 1.44915119635375 *
Marital_StatusTogether ;
149710    +   H1x1_5  = H1x1_5  +    -0.24370046099656 * Education2n_Cycle
149711    +          +     0.03233873053213 * EducationBasic  +      0.1375198926931 *
149712    +        EducationGraduation  +      0.0979905405754 * EducationMaster
149713    +          +    -0.25571808514992 * Marital_StatusDivorced
149714    +          +     0.20684027342845 * Marital_StatusMarried
149715    +          +    -0.36983627747986 * Marital_StatusSingle
149716    +          +    -0.08239173696723 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.24370046099656 * Education2n_Cycle +
0.03233873053213 * EducationBasic + 0.1375198926931 * EducationGraduation + 0.0979905405754 *
EducationMaster + -0.25571808514992 * Marital_StatusDivorced + 0.20684027342845 *
Marital_StatusMarried + -0.36983627747986 * Marital_StatusSingle + -0.08239173696723 *
Marital_StatusTogether ;
149717    +   H1x1_1  =    -0.01788649837565 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.01788649837565 + H1x1_1 ;
149718    +   H1x1_2  =     1.77562113267961 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.77562113267961 + H1x1_2 ;
149719    +   H1x1_3  =    -1.36483909507433 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.36483909507433 + H1x1_3 ;
149720    +   H1x1_4  =    -0.17103473926556 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.17103473926556 + H1x1_4 ;
149721    +   H1x1_5  =     0.17065963901812 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.17065963901812 + H1x1_5 ;
149722    +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
149723    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
149724    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
149725    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
149726    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
149727    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
149728    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
149729    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
149730    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
149731    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
149732    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
149733    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
149734    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
149735    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
149736    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
149737    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
149738    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
149739    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
149740    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
149741    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
149742    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
149743    +END;
MPRINT(EM_DIAGRAM):   END;
149744    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
149745    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
149746    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
149747    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
149748    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
149749    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
149750    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
149751    +END;
MPRINT(EM_DIAGRAM):   END;
149752    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
149753    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
149754    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
149755    +
149756    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
149757    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
149758    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
149759    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
149760    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
149761    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
149762    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
149763    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
149764    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
149765    +end;
MPRINT(EM_DIAGRAM):   end;
149766    +else do;
MPRINT(EM_DIAGRAM):   else do;
149767    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
149768    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
149769    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
149770    +   end;
MPRINT(EM_DIAGRAM):   end;
149771    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
149772    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
149773    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
149774    +   end;
MPRINT(EM_DIAGRAM):   end;
149775    +   else do;
MPRINT(EM_DIAGRAM):   else do;
149776    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
149777    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
149778    +   end;
MPRINT(EM_DIAGRAM):   end;
149779    +end;
MPRINT(EM_DIAGRAM):   end;
149780    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
149781    +   P_DepVar1  =    -12.4855028874976 * H1x1_1  +     8.50519000347347 * H1x1_2
149782    +          +     3.84994997572101 * H1x1_3  +    -12.5610415895663 * H1x1_4
149783    +          +     17.4993211655408 * H1x1_5  +     0.14986282100716 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -12.4855028874976 * H1x1_1 + 8.50519000347347 * H1x1_2 +
3.84994997572101 * H1x1_3 + -12.5610415895663 * H1x1_4 + 17.4993211655408 * H1x1_5 +
0.14986282100716 * H1x1_6 ;
149784    +   P_DepVar1  =     3.23272740278636 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.23272740278636 + P_DepVar1 ;
149785    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
149786    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
149787    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
149788    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
149789    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
149790    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
149791    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
149792    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
149793    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
149794    +END;
MPRINT(EM_DIAGRAM):   END;
149795    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
149796    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
149797    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
149798    +END;
MPRINT(EM_DIAGRAM):   END;
149799    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
149800    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
149801    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
149802    +END;
MPRINT(EM_DIAGRAM):   END;
149803    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
149804    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
149805    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
149806    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
149807    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
149808    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
149809    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
149810    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
149811    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
149812    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
149813    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
149814    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
149815    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
149816    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
149817    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
149818    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
149819    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
149820    +END;
MPRINT(EM_DIAGRAM):   END;
149821    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
149822    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
149823    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
149824    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
149825    +* Renaming variables for AutoNeural42;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural42;
149826    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
149827    +* Renaming Posterior variables for AutoNeural42;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural42;
149828    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
149829    +drop AutoNeural42_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural42_P_DepVar1;
149830    +AutoNeural42_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural42_P_DepVar1 = P_DepVar1;
149831    +drop AutoNeural42_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural42_P_DepVar0;
149832    +AutoNeural42_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural42_P_DepVar0 = P_DepVar0;
149833    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
149834    +* Renaming _WARN_ variable for AutoNeural42;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural42;
149835    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
149836    +length AutoNeural42_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural42_WARN_ $4;
149837    +drop AutoNeural42_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural42_WARN_;
149838    +AutoNeural42_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural42_WARN_ = _WARN_;
149839    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
149840    +* Ensmbl22: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Scoring Code of model 4 of 7;
149841    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
149842    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
149843    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
149844    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
149845    +* NODE: AutoNeural47;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural47;
149846    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
149847    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
149848    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
149849    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
149850    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
149851    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
149852    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
149853    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
149854    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
149855    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
149856    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
149857    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
149858    +LENGTH _WARN_ $4
149859    +      F_DepVar  $ 12
149860    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
149861    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
149862    +
149863    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
149864    +
149865    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
149866    +
149867    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
149868    +
149869    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
149870    +
149871    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
149872    +
149873    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
149874    +
149875    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
149876    +
149877    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
149878    +
149879    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
149880    +
149881    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
149882    +
149883    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
149884    +
149885    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
149886    +
149887    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
149888    +
149889    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
149890    +
149891    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
149892    +
149893    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
149894    +
149895    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
149896    +
149897    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
149898    +
149899    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
149900    +
149901    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
149902    +
149903    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
149904    +
149905    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
149906    +
149907    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
149908    +
149909    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
149910    +
149911    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
149912    +
149913    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
149914    +
149915    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
149916    +
149917    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
149918    +
149919    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
149920    +
149921    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
149922    +
149923    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
149924    +
149925    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
149926    +
149927    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
149928    +
149929    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
149930    +
149931    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
149932    +
149933    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
149934    +
149935    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
149936    +
149937    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
149938    +
149939    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
149940    +
149941    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
149942    +
149943    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
149944    +
149945    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
149946    +
149947    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
149948    +
149949    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
149950    +
149951    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
149952    +
149953    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
149954    +
149955    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
149956    +
149957    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
149958    +
149959    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
149960    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
149961    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
149962    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
149963    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
149964    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
149965    +end;
MPRINT(EM_DIAGRAM):   end;
149966    +else do;
MPRINT(EM_DIAGRAM):   else do;
149967    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
149968    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
149969    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
149970    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
149971    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
149972    +   end;
MPRINT(EM_DIAGRAM):   end;
149973    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
149974    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
149975    +   end;
MPRINT(EM_DIAGRAM):   end;
149976    +   else do;
MPRINT(EM_DIAGRAM):   else do;
149977    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
149978    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
149979    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
149980    +   end;
MPRINT(EM_DIAGRAM):   end;
149981    +end;
MPRINT(EM_DIAGRAM):   end;
149982    +
149983    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
149984    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
149985    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
149986    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
149987    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
149988    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
149989    +end;
MPRINT(EM_DIAGRAM):   end;
149990    +else do;
MPRINT(EM_DIAGRAM):   else do;
149991    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
149992    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
149993    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
149994    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
149995    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
149996    +   end;
MPRINT(EM_DIAGRAM):   end;
149997    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
149998    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
149999    +   end;
MPRINT(EM_DIAGRAM):   end;
150000    +   else do;
MPRINT(EM_DIAGRAM):   else do;
150001    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
150002    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
150003    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
150004    +   end;
MPRINT(EM_DIAGRAM):   end;
150005    +end;
MPRINT(EM_DIAGRAM):   end;
150006    +
150007    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
150008    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
150009    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
150010    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
150011    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
150012    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
150013    +end;
MPRINT(EM_DIAGRAM):   end;
150014    +else do;
MPRINT(EM_DIAGRAM):   else do;
150015    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
150016    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
150017    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
150018    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
150019    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
150020    +   end;
MPRINT(EM_DIAGRAM):   end;
150021    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
150022    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
150023    +   end;
MPRINT(EM_DIAGRAM):   end;
150024    +   else do;
MPRINT(EM_DIAGRAM):   else do;
150025    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
150026    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
150027    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
150028    +   end;
MPRINT(EM_DIAGRAM):   end;
150029    +end;
MPRINT(EM_DIAGRAM):   end;
150030    +
150031    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
150032    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
150033    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
150034    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
150035    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
150036    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
150037    +end;
MPRINT(EM_DIAGRAM):   end;
150038    +else do;
MPRINT(EM_DIAGRAM):   else do;
150039    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
150040    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
150041    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
150042    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
150043    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
150044    +   end;
MPRINT(EM_DIAGRAM):   end;
150045    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
150046    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
150047    +   end;
MPRINT(EM_DIAGRAM):   end;
150048    +   else do;
MPRINT(EM_DIAGRAM):   else do;
150049    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
150050    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
150051    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
150052    +   end;
MPRINT(EM_DIAGRAM):   end;
150053    +end;
MPRINT(EM_DIAGRAM):   end;
150054    +
150055    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
150056    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
150057    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
150058    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
150059    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
150060    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
150061    +end;
MPRINT(EM_DIAGRAM):   end;
150062    +else do;
MPRINT(EM_DIAGRAM):   else do;
150063    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
150064    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
150065    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
150066    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
150067    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
150068    +   end;
MPRINT(EM_DIAGRAM):   end;
150069    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
150070    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
150071    +   end;
MPRINT(EM_DIAGRAM):   end;
150072    +   else do;
MPRINT(EM_DIAGRAM):   else do;
150073    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
150074    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
150075    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
150076    +   end;
MPRINT(EM_DIAGRAM):   end;
150077    +end;
MPRINT(EM_DIAGRAM):   end;
150078    +
150079    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
150080    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
150081    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
150082    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
150083    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
150084    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
150085    +end;
MPRINT(EM_DIAGRAM):   end;
150086    +else do;
MPRINT(EM_DIAGRAM):   else do;
150087    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
150088    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
150089    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
150090    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
150091    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
150092    +   end;
MPRINT(EM_DIAGRAM):   end;
150093    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
150094    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
150095    +   end;
MPRINT(EM_DIAGRAM):   end;
150096    +   else do;
MPRINT(EM_DIAGRAM):   else do;
150097    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
150098    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
150099    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
150100    +   end;
MPRINT(EM_DIAGRAM):   end;
150101    +end;
MPRINT(EM_DIAGRAM):   end;
150102    +
150103    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
150104    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
150105    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
150106    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
150107    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
150108    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
150109    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
150110    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
150111    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
150112    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
150113    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
150114    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
150115    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
150116    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
150117    +end;
MPRINT(EM_DIAGRAM):   end;
150118    +else do;
MPRINT(EM_DIAGRAM):   else do;
150119    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
150120    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
150121    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
150122    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
150123    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
150124    +   end;
MPRINT(EM_DIAGRAM):   end;
150125    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
150126    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
150127    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
150128    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
150129    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
150130    +   end;
MPRINT(EM_DIAGRAM):   end;
150131    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
150132    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
150133    +   end;
MPRINT(EM_DIAGRAM):   end;
150134    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
150135    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
150136    +   end;
MPRINT(EM_DIAGRAM):   end;
150137    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
150138    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
150139    +   end;
MPRINT(EM_DIAGRAM):   end;
150140    +   else do;
MPRINT(EM_DIAGRAM):   else do;
150141    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
150142    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
150143    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
150144    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
150145    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
150146    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
150147    +   end;
MPRINT(EM_DIAGRAM):   end;
150148    +end;
MPRINT(EM_DIAGRAM):   end;
150149    +
150150    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
150151    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
150152    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
150153    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
150154    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
150155    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
150156    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
150157    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
150158    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
150159    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
150160    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
150161    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
150162    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
150163    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
150164    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
150165    +end;
MPRINT(EM_DIAGRAM):   end;
150166    +else do;
MPRINT(EM_DIAGRAM):   else do;
150167    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
150168    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
150169    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
150170    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
150171    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
150172    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
150173    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
150174    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
150175    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
150176    +         end;
MPRINT(EM_DIAGRAM):   end;
150177    +         else do;
MPRINT(EM_DIAGRAM):   else do;
150178    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
150179    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
150180    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
150181    +            end;
MPRINT(EM_DIAGRAM):   end;
150182    +         end;
MPRINT(EM_DIAGRAM):   end;
150183    +      end;
MPRINT(EM_DIAGRAM):   end;
150184    +      else do;
MPRINT(EM_DIAGRAM):   else do;
150185    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
150186    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
150187    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
150188    +         end;
MPRINT(EM_DIAGRAM):   end;
150189    +      end;
MPRINT(EM_DIAGRAM):   end;
150190    +   end;
MPRINT(EM_DIAGRAM):   end;
150191    +   else do;
MPRINT(EM_DIAGRAM):   else do;
150192    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
150193    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
150194    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
150195    +      end;
MPRINT(EM_DIAGRAM):   end;
150196    +      else do;
MPRINT(EM_DIAGRAM):   else do;
150197    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
150198    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
150199    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
150200    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
150201    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
150202    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
150203    +         end;
MPRINT(EM_DIAGRAM):   end;
150204    +      end;
MPRINT(EM_DIAGRAM):   end;
150205    +   end;
MPRINT(EM_DIAGRAM):   end;
150206    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
150207    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
150208    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
150209    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
150210    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
150211    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
150212    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
150213    +   end;
MPRINT(EM_DIAGRAM):   end;
150214    +end;
MPRINT(EM_DIAGRAM):   end;
150215    +
150216    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
150217    +*** Checking missing input Interval
150218    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
150219    +
150220    +IF NMISS(
150221    +   Income ,
150222    +   Kidhome ,
150223    +   MntFishProducts ,
150224    +   MntFruits ,
150225    +   MntGoldProds ,
150226    +   MntMeatProducts ,
150227    +   MntSweetProducts ,
150228    +   MntWines ,
150229    +   NumCatalogPurchases ,
150230    +   NumDealsPurchases ,
150231    +   NumStorePurchases ,
150232    +   NumWebPurchases ,
150233    +   NumWebVisitsMonth ,
150234    +   Recency ,
150235    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
150236    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
150237    +
150238    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
150239    +END;
MPRINT(EM_DIAGRAM):   END;
150240    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
150241    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
150242    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
150243    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
150244    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
150245    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
150246    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
150247    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
150248    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
150249    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
150250    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
150251    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
150252    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
150253    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
150254    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
150255    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
150256    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
150257    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
150258    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
150259    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
150260    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
150261    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
150262    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
150263    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
150264    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
150265    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
150266    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
150267    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
150268    +END;
MPRINT(EM_DIAGRAM):   END;
150269    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
150270    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
150271    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
150272    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
150273    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
150274    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
150275    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
150276    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
150277    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
150278    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
150279    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
150280    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
150281    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
150282    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
150283    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
150284    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
150285    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
150286    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
150287    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
150288    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
150289    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
150290    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
150291    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
150292    +   ELSE S_NumCatalogPurchases
150293    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
150294    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
150295    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
150296    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
150297    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
150298    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
150299    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
150300    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
150301    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
150302    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
150303    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
150304    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
150305    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
150306    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
150307    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
150308    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
150309    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
150310    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
150311    +END;
MPRINT(EM_DIAGRAM):   END;
150312    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
150313    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
150314    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
150315    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
150316    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
150317    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
150318    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
150319    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
150320    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
150321    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
150322    +   H1x1_1  =     -0.6712927499227 * S_Income  +     0.52481056075303 *
150323    +        S_Kidhome  +     -2.3662268017216 * S_MntFishProducts
150324    +          +    -1.70194161526543 * S_MntFruits  +    -0.12195276696714 *
150325    +        S_MntGoldProds  +     5.02051235731232 * S_MntMeatProducts
150326    +          +    -2.37073629008864 * S_MntSweetProducts
150327    +          +    -7.49792253647533 * S_MntWines  +     1.93063890722455 *
150328    +        S_NumCatalogPurchases  +     1.44821336448113 * S_NumDealsPurchases
150329    +          +    -1.29021742502316 * S_NumStorePurchases
150330    +          +    -0.00949168969466 * S_NumWebPurchases
150331    +          +    -0.32248137192321 * S_NumWebVisitsMonth
150332    +          +    -0.55879173873733 * S_Recency  +    -0.22439654268554 *
150333    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.6712927499227 * S_Income + 0.52481056075303 * S_Kidhome +
-2.3662268017216 * S_MntFishProducts + -1.70194161526543 * S_MntFruits + -0.12195276696714 *
S_MntGoldProds + 5.02051235731232 * S_MntMeatProducts + -2.37073629008864 * S_MntSweetProducts
+ -7.49792253647533 * S_MntWines + 1.93063890722455 * S_NumCatalogPurchases + 1.44821336448113
* S_NumDealsPurchases + -1.29021742502316 * S_NumStorePurchases + -0.00949168969466 *
S_NumWebPurchases + -0.32248137192321 * S_NumWebVisitsMonth + -0.55879173873733 * S_Recency +
-0.22439654268554 * S_Teenhome ;
150334    +   H1x1_2  =    -1.63837717417638 * S_Income  +     1.01712005677207 *
150335    +        S_Kidhome  +    -0.11452425716086 * S_MntFishProducts
150336    +          +    -0.08273769039219 * S_MntFruits  +    -0.47045422182093 *
150337    +        S_MntGoldProds  +    -0.64593629987888 * S_MntMeatProducts
150338    +          +     0.41126087093412 * S_MntSweetProducts
150339    +          +    -0.00653581981542 * S_MntWines  +    -1.62534004647483 *
150340    +        S_NumCatalogPurchases  +    -0.74740978232431 * S_NumDealsPurchases
150341    +          +      0.2319226227964 * S_NumStorePurchases
150342    +          +     0.31190969795517 * S_NumWebPurchases
150343    +          +      -1.987305550542 * S_NumWebVisitsMonth
150344    +          +     2.46312593342153 * S_Recency  +     1.89469486725188 *
150345    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.63837717417638 * S_Income + 1.01712005677207 * S_Kidhome +
-0.11452425716086 * S_MntFishProducts + -0.08273769039219 * S_MntFruits + -0.47045422182093 *
S_MntGoldProds + -0.64593629987888 * S_MntMeatProducts + 0.41126087093412 * S_MntSweetProducts
+ -0.00653581981542 * S_MntWines + -1.62534004647483 * S_NumCatalogPurchases +
-0.74740978232431 * S_NumDealsPurchases + 0.2319226227964 * S_NumStorePurchases +
0.31190969795517 * S_NumWebPurchases + -1.987305550542 * S_NumWebVisitsMonth +
2.46312593342153 * S_Recency + 1.89469486725188 * S_Teenhome ;
150346    +   H1x1_3  =    -0.78523773312865 * S_Income  +    -1.40266608040579 *
150347    +        S_Kidhome  +     0.01206304735425 * S_MntFishProducts
150348    +          +    -0.50371384095637 * S_MntFruits  +    -0.93176870066879 *
150349    +        S_MntGoldProds  +    -0.53990224542491 * S_MntMeatProducts
150350    +          +    -0.73991431726966 * S_MntSweetProducts
150351    +          +    -0.21227505043037 * S_MntWines  +     0.42667885020643 *
150352    +        S_NumCatalogPurchases  +    -0.34821401096287 * S_NumDealsPurchases
150353    +          +    -2.50826402419251 * S_NumStorePurchases
150354    +          +    -0.30764477738015 * S_NumWebPurchases
150355    +          +     1.21240794582671 * S_NumWebVisitsMonth
150356    +          +    -2.22374004865256 * S_Recency  +    -0.07389156638234 *
150357    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.78523773312865 * S_Income + -1.40266608040579 * S_Kidhome +
0.01206304735425 * S_MntFishProducts + -0.50371384095637 * S_MntFruits + -0.93176870066879 *
S_MntGoldProds + -0.53990224542491 * S_MntMeatProducts + -0.73991431726966 *
S_MntSweetProducts + -0.21227505043037 * S_MntWines + 0.42667885020643 * S_NumCatalogPurchases
+ -0.34821401096287 * S_NumDealsPurchases + -2.50826402419251 * S_NumStorePurchases +
-0.30764477738015 * S_NumWebPurchases + 1.21240794582671 * S_NumWebVisitsMonth +
-2.22374004865256 * S_Recency + -0.07389156638234 * S_Teenhome ;
150358    +   H1x1_4  =     1.52339017953874 * S_Income  +     -0.0800472387091 *
150359    +        S_Kidhome  +    -0.81466158613596 * S_MntFishProducts
150360    +          +    -1.56740792821078 * S_MntFruits  +    -0.44251282056636 *
150361    +        S_MntGoldProds  +     4.21345569180051 * S_MntMeatProducts
150362    +          +     1.07674028011002 * S_MntSweetProducts
150363    +          +    -4.16668334099034 * S_MntWines  +     2.33183855256347 *
150364    +        S_NumCatalogPurchases  +     1.55678471765653 * S_NumDealsPurchases
150365    +          +    -0.47776935727231 * S_NumStorePurchases
150366    +          +     -0.5890810666834 * S_NumWebPurchases
150367    +          +      1.3845716796855 * S_NumWebVisitsMonth
150368    +          +    -0.37826249433224 * S_Recency  +    -0.32813220931783 *
150369    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.52339017953874 * S_Income + -0.0800472387091 * S_Kidhome +
-0.81466158613596 * S_MntFishProducts + -1.56740792821078 * S_MntFruits + -0.44251282056636 *
S_MntGoldProds + 4.21345569180051 * S_MntMeatProducts + 1.07674028011002 * S_MntSweetProducts
+ -4.16668334099034 * S_MntWines + 2.33183855256347 * S_NumCatalogPurchases + 1.55678471765653
* S_NumDealsPurchases + -0.47776935727231 * S_NumStorePurchases + -0.5890810666834 *
S_NumWebPurchases + 1.3845716796855 * S_NumWebVisitsMonth + -0.37826249433224 * S_Recency +
-0.32813220931783 * S_Teenhome ;
150370    +   H1x1_1  = H1x1_1  +     -1.8652801761626 * AcceptedCmp10
150371    +          +    -2.15838385124109 * AcceptedCmp20  +    -0.32281263106473 *
150372    +        AcceptedCmp30  +    -0.52751972284584 * AcceptedCmp40
150373    +          +    -0.16576520159698 * AcceptedCmp50  +      0.0798586391257 *
150374    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.8652801761626 * AcceptedCmp10 + -2.15838385124109 *
AcceptedCmp20 + -0.32281263106473 * AcceptedCmp30 + -0.52751972284584 * AcceptedCmp40 +
-0.16576520159698 * AcceptedCmp50 + 0.0798586391257 * Complain0 ;
150375    +   H1x1_2  = H1x1_2  +     1.18847829749899 * AcceptedCmp10
150376    +          +     2.28872916962314 * AcceptedCmp20  +      0.7666362501062 *
150377    +        AcceptedCmp30  +     0.63272382969915 * AcceptedCmp40
150378    +          +     1.03410667663543 * AcceptedCmp50  +    -0.44709535985633 *
150379    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.18847829749899 * AcceptedCmp10 + 2.28872916962314 *
AcceptedCmp20 + 0.7666362501062 * AcceptedCmp30 + 0.63272382969915 * AcceptedCmp40 +
1.03410667663543 * AcceptedCmp50 + -0.44709535985633 * Complain0 ;
150380    +   H1x1_3  = H1x1_3  +    -0.30260316693677 * AcceptedCmp10
150381    +          +     1.37858034146365 * AcceptedCmp20  +    -1.95638038137808 *
150382    +        AcceptedCmp30  +     -2.1581101738114 * AcceptedCmp40
150383    +          +    -1.72040670376675 * AcceptedCmp50  +     2.82913230380101 *
150384    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.30260316693677 * AcceptedCmp10 + 1.37858034146365 *
AcceptedCmp20 + -1.95638038137808 * AcceptedCmp30 + -2.1581101738114 * AcceptedCmp40 +
-1.72040670376675 * AcceptedCmp50 + 2.82913230380101 * Complain0 ;
150385    +   H1x1_4  = H1x1_4  +     0.37463576870294 * AcceptedCmp10
150386    +          +     -1.1935629973001 * AcceptedCmp20  +     -0.0357513820165 *
150387    +        AcceptedCmp30  +    -0.34228453024248 * AcceptedCmp40
150388    +          +     0.08692364147086 * AcceptedCmp50  +     0.01804293030366 *
150389    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.37463576870294 * AcceptedCmp10 + -1.1935629973001 *
AcceptedCmp20 + -0.0357513820165 * AcceptedCmp30 + -0.34228453024248 * AcceptedCmp40 +
0.08692364147086 * AcceptedCmp50 + 0.01804293030366 * Complain0 ;
150390    +   H1x1_1  = H1x1_1  +     0.10559298643668 * Education2n_Cycle
150391    +          +     -0.5051689695544 * EducationBasic  +     0.07434632730326 *
150392    +        EducationGraduation  +     0.68592368666749 * EducationMaster
150393    +          +     0.38999748028122 * Marital_StatusDivorced
150394    +          +     0.44180844463279 * Marital_StatusMarried
150395    +          +     0.63824884669155 * Marital_StatusSingle
150396    +          +    -0.26198648898013 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.10559298643668 * Education2n_Cycle +
-0.5051689695544 * EducationBasic + 0.07434632730326 * EducationGraduation + 0.68592368666749
* EducationMaster + 0.38999748028122 * Marital_StatusDivorced + 0.44180844463279 *
Marital_StatusMarried + 0.63824884669155 * Marital_StatusSingle + -0.26198648898013 *
Marital_StatusTogether ;
150397    +   H1x1_2  = H1x1_2  +     0.38077564253123 * Education2n_Cycle
150398    +          +    -1.71516234680597 * EducationBasic  +      0.9305914926408 *
150399    +        EducationGraduation  +    -0.48500520310542 * EducationMaster
150400    +          +    -0.95537871859519 * Marital_StatusDivorced
150401    +          +     2.55061153921286 * Marital_StatusMarried
150402    +          +    -1.78007154396711 * Marital_StatusSingle
150403    +          +     1.47779717106964 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.38077564253123 * Education2n_Cycle +
-1.71516234680597 * EducationBasic + 0.9305914926408 * EducationGraduation + -0.48500520310542
* EducationMaster + -0.95537871859519 * Marital_StatusDivorced + 2.55061153921286 *
Marital_StatusMarried + -1.78007154396711 * Marital_StatusSingle + 1.47779717106964 *
Marital_StatusTogether ;
150404    +   H1x1_3  = H1x1_3  +    -0.26877104077313 * Education2n_Cycle
150405    +          +    -1.51047207681049 * EducationBasic  +     1.00818590807055 *
150406    +        EducationGraduation  +    -2.08836171183474 * EducationMaster
150407    +          +     1.29930912124343 * Marital_StatusDivorced
150408    +          +    -1.63037830924789 * Marital_StatusMarried
150409    +          +     0.19040732776086 * Marital_StatusSingle
150410    +          +     -3.9038060950259 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.26877104077313 * Education2n_Cycle +
-1.51047207681049 * EducationBasic + 1.00818590807055 * EducationGraduation +
-2.08836171183474 * EducationMaster + 1.29930912124343 * Marital_StatusDivorced +
-1.63037830924789 * Marital_StatusMarried + 0.19040732776086 * Marital_StatusSingle +
-3.9038060950259 * Marital_StatusTogether ;
150411    +   H1x1_4  = H1x1_4  +     0.59574708300703 * Education2n_Cycle
150412    +          +    -0.19936070861543 * EducationBasic  +     0.82683145042233 *
150413    +        EducationGraduation  +    -0.24015931152788 * EducationMaster
150414    +          +     -0.3129003025095 * Marital_StatusDivorced
150415    +          +     0.00843550425239 * Marital_StatusMarried
150416    +          +    -0.20416436114776 * Marital_StatusSingle
150417    +          +     1.08624823622502 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.59574708300703 * Education2n_Cycle +
-0.19936070861543 * EducationBasic + 0.82683145042233 * EducationGraduation +
-0.24015931152788 * EducationMaster + -0.3129003025095 * Marital_StatusDivorced +
0.00843550425239 * Marital_StatusMarried + -0.20416436114776 * Marital_StatusSingle +
1.08624823622502 * Marital_StatusTogether ;
150418    +   H1x1_1  =    -2.66745806568988 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.66745806568988 + H1x1_1 ;
150419    +   H1x1_2  =     1.39870734752375 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.39870734752375 + H1x1_2 ;
150420    +   H1x1_3  =     3.90802178606462 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 3.90802178606462 + H1x1_3 ;
150421    +   H1x1_4  =    -1.61490323089776 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.61490323089776 + H1x1_4 ;
150422    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
150423    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
150424    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
150425    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
150426    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
150427    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
150428    +END;
MPRINT(EM_DIAGRAM):   END;
150429    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
150430    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
150431    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
150432    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
150433    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
150434    +END;
MPRINT(EM_DIAGRAM):   END;
150435    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
150436    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
150437    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
150438    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
150439    +   H1x2_1  =     0.40035517192793 * S_Income  +     1.50961149935512 *
150440    +        S_Kidhome  +    -0.71749794576247 * S_MntFishProducts
150441    +          +    -0.80539813415293 * S_MntFruits  +    -0.11190500470397 *
150442    +        S_MntGoldProds  +    -1.00287277559415 * S_MntMeatProducts
150443    +          +    -0.90866858123806 * S_MntSweetProducts
150444    +          +     0.48761861591898 * S_MntWines  +    -0.00278053699018 *
150445    +        S_NumCatalogPurchases  +     1.76527380505645 * S_NumDealsPurchases
150446    +          +     1.45805686107789 * S_NumStorePurchases
150447    +          +     1.48794767642409 * S_NumWebPurchases
150448    +          +    -1.24357395997191 * S_NumWebVisitsMonth
150449    +          +     2.73747730751211 * S_Recency  +    -0.74105180435611 *
150450    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.40035517192793 * S_Income + 1.50961149935512 * S_Kidhome +
-0.71749794576247 * S_MntFishProducts + -0.80539813415293 * S_MntFruits + -0.11190500470397 *
S_MntGoldProds + -1.00287277559415 * S_MntMeatProducts + -0.90866858123806 *
S_MntSweetProducts + 0.48761861591898 * S_MntWines + -0.00278053699018 * S_NumCatalogPurchases
+ 1.76527380505645 * S_NumDealsPurchases + 1.45805686107789 * S_NumStorePurchases +
1.48794767642409 * S_NumWebPurchases + -1.24357395997191 * S_NumWebVisitsMonth +
2.73747730751211 * S_Recency + -0.74105180435611 * S_Teenhome ;
150451    +   H1x2_2  =    -2.30368761501045 * S_Income  +     0.82837234680306 *
150452    +        S_Kidhome  +    -0.57801225504203 * S_MntFishProducts
150453    +          +    -0.53882153761332 * S_MntFruits  +    -0.06305202172404 *
150454    +        S_MntGoldProds  +    -0.83741138145577 * S_MntMeatProducts
150455    +          +     1.05010358762976 * S_MntSweetProducts
150456    +          +     -0.8308916879344 * S_MntWines  +     0.00135039846616 *
150457    +        S_NumCatalogPurchases  +     -0.1426130520252 * S_NumDealsPurchases
150458    +          +    -2.04318529474165 * S_NumStorePurchases
150459    +          +     1.64478964728594 * S_NumWebPurchases
150460    +          +    -0.74790322980646 * S_NumWebVisitsMonth
150461    +          +     0.44846346006135 * S_Recency  +    -1.17558204887145 *
150462    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.30368761501045 * S_Income + 0.82837234680306 * S_Kidhome +
-0.57801225504203 * S_MntFishProducts + -0.53882153761332 * S_MntFruits + -0.06305202172404 *
S_MntGoldProds + -0.83741138145577 * S_MntMeatProducts + 1.05010358762976 * S_MntSweetProducts
+ -0.8308916879344 * S_MntWines + 0.00135039846616 * S_NumCatalogPurchases + -0.1426130520252
* S_NumDealsPurchases + -2.04318529474165 * S_NumStorePurchases + 1.64478964728594 *
S_NumWebPurchases + -0.74790322980646 * S_NumWebVisitsMonth + 0.44846346006135 * S_Recency +
-1.17558204887145 * S_Teenhome ;
150463    +   H1x2_3  =     1.07803134847301 * S_Income  +     1.10001550023539 *
150464    +        S_Kidhome  +      2.1312863754193 * S_MntFishProducts
150465    +          +    -0.41841353908141 * S_MntFruits  +    -0.28009599678539 *
150466    +        S_MntGoldProds  +    -0.57516542648625 * S_MntMeatProducts
150467    +          +     0.39974532423377 * S_MntSweetProducts
150468    +          +    -1.03786923973351 * S_MntWines  +    -0.21873654141419 *
150469    +        S_NumCatalogPurchases  +    -0.12545360575656 * S_NumDealsPurchases
150470    +          +     0.70805557348415 * S_NumStorePurchases
150471    +          +     2.40362900277228 * S_NumWebPurchases
150472    +          +    -0.84521247676043 * S_NumWebVisitsMonth
150473    +          +     4.38953216910793 * S_Recency  +     1.39159599477449 *
150474    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.07803134847301 * S_Income + 1.10001550023539 * S_Kidhome +
2.1312863754193 * S_MntFishProducts + -0.41841353908141 * S_MntFruits + -0.28009599678539 *
S_MntGoldProds + -0.57516542648625 * S_MntMeatProducts + 0.39974532423377 * S_MntSweetProducts
+ -1.03786923973351 * S_MntWines + -0.21873654141419 * S_NumCatalogPurchases +
-0.12545360575656 * S_NumDealsPurchases + 0.70805557348415 * S_NumStorePurchases +
2.40362900277228 * S_NumWebPurchases + -0.84521247676043 * S_NumWebVisitsMonth +
4.38953216910793 * S_Recency + 1.39159599477449 * S_Teenhome ;
150475    +   H1x2_4  =      1.5904518722284 * S_Income  +     0.14957259343911 *
150476    +        S_Kidhome  +     1.71856101884761 * S_MntFishProducts
150477    +          +     0.97544338421034 * S_MntFruits  +     1.16387775609385 *
150478    +        S_MntGoldProds  +    -0.43463910907731 * S_MntMeatProducts
150479    +          +     1.67907268159197 * S_MntSweetProducts
150480    +          +    -0.67372438764914 * S_MntWines  +     0.34705529867224 *
150481    +        S_NumCatalogPurchases  +     1.55570260456887 * S_NumDealsPurchases
150482    +          +      0.0818178054474 * S_NumStorePurchases
150483    +          +     0.21533198164279 * S_NumWebPurchases
150484    +          +     2.13590425604302 * S_NumWebVisitsMonth
150485    +          +    -2.07481510631659 * S_Recency  +    -0.82288425478762 *
150486    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.5904518722284 * S_Income + 0.14957259343911 * S_Kidhome +
1.71856101884761 * S_MntFishProducts + 0.97544338421034 * S_MntFruits + 1.16387775609385 *
S_MntGoldProds + -0.43463910907731 * S_MntMeatProducts + 1.67907268159197 * S_MntSweetProducts
+ -0.67372438764914 * S_MntWines + 0.34705529867224 * S_NumCatalogPurchases + 1.55570260456887
* S_NumDealsPurchases + 0.0818178054474 * S_NumStorePurchases + 0.21533198164279 *
S_NumWebPurchases + 2.13590425604302 * S_NumWebVisitsMonth + -2.07481510631659 * S_Recency +
-0.82288425478762 * S_Teenhome ;
150487    +   H1x2_1  = H1x2_1  +    -1.62231361085618 * AcceptedCmp10
150488    +          +     0.93841494775887 * AcceptedCmp20  +      0.1734706863831 *
150489    +        AcceptedCmp30  +     0.16475784850175 * AcceptedCmp40
150490    +          +     0.65486951368163 * AcceptedCmp50  +      1.6226382489877 *
150491    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.62231361085618 * AcceptedCmp10 + 0.93841494775887 *
AcceptedCmp20 + 0.1734706863831 * AcceptedCmp30 + 0.16475784850175 * AcceptedCmp40 +
0.65486951368163 * AcceptedCmp50 + 1.6226382489877 * Complain0 ;
150492    +   H1x2_2  = H1x2_2  +     0.93875540013493 * AcceptedCmp10
150493    +          +     2.69754413059384 * AcceptedCmp20  +    -0.30913025234768 *
150494    +        AcceptedCmp30  +    -0.00924007964301 * AcceptedCmp40
150495    +          +     -0.7359545134435 * AcceptedCmp50  +    -0.44748157506074 *
150496    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.93875540013493 * AcceptedCmp10 + 2.69754413059384 *
AcceptedCmp20 + -0.30913025234768 * AcceptedCmp30 + -0.00924007964301 * AcceptedCmp40 +
-0.7359545134435 * AcceptedCmp50 + -0.44748157506074 * Complain0 ;
150497    +   H1x2_3  = H1x2_3  +      0.4023712256607 * AcceptedCmp10
150498    +          +    -0.46100225887196 * AcceptedCmp20  +    -0.11545325868036 *
150499    +        AcceptedCmp30  +     1.81326302523772 * AcceptedCmp40
150500    +          +     1.57642234573579 * AcceptedCmp50  +    -0.52645724664984 *
150501    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.4023712256607 * AcceptedCmp10 + -0.46100225887196 *
AcceptedCmp20 + -0.11545325868036 * AcceptedCmp30 + 1.81326302523772 * AcceptedCmp40 +
1.57642234573579 * AcceptedCmp50 + -0.52645724664984 * Complain0 ;
150502    +   H1x2_4  = H1x2_4  +    -1.08307715440234 * AcceptedCmp10
150503    +          +     0.10309372709877 * AcceptedCmp20  +    -1.18814330876811 *
150504    +        AcceptedCmp30  +    -1.69102202926075 * AcceptedCmp40
150505    +          +     0.10465943889984 * AcceptedCmp50  +    -0.96523771648083 *
150506    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.08307715440234 * AcceptedCmp10 + 0.10309372709877 *
AcceptedCmp20 + -1.18814330876811 * AcceptedCmp30 + -1.69102202926075 * AcceptedCmp40 +
0.10465943889984 * AcceptedCmp50 + -0.96523771648083 * Complain0 ;
150507    +   H1x2_1  = H1x2_1  +     0.57966380694999 * Education2n_Cycle
150508    +          +     1.09807543038463 * EducationBasic  +     0.56896005764417 *
150509    +        EducationGraduation  +     0.78238700450794 * EducationMaster
150510    +          +     0.09735596304222 * Marital_StatusDivorced
150511    +          +    -0.41892050812825 * Marital_StatusMarried
150512    +          +    -1.42753782654911 * Marital_StatusSingle
150513    +          +     2.12640980869845 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.57966380694999 * Education2n_Cycle +
1.09807543038463 * EducationBasic + 0.56896005764417 * EducationGraduation + 0.78238700450794
* EducationMaster + 0.09735596304222 * Marital_StatusDivorced + -0.41892050812825 *
Marital_StatusMarried + -1.42753782654911 * Marital_StatusSingle + 2.12640980869845 *
Marital_StatusTogether ;
150514    +   H1x2_2  = H1x2_2  +     1.23142964464278 * Education2n_Cycle
150515    +          +    -0.57685007681361 * EducationBasic  +     0.95565027871272 *
150516    +        EducationGraduation  +     1.03407121736627 * EducationMaster
150517    +          +    -0.32415267410507 * Marital_StatusDivorced
150518    +          +     0.49045578856782 * Marital_StatusMarried
150519    +          +    -1.95612005933176 * Marital_StatusSingle
150520    +          +    -0.09380239900044 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.23142964464278 * Education2n_Cycle +
-0.57685007681361 * EducationBasic + 0.95565027871272 * EducationGraduation + 1.03407121736627
* EducationMaster + -0.32415267410507 * Marital_StatusDivorced + 0.49045578856782 *
Marital_StatusMarried + -1.95612005933176 * Marital_StatusSingle + -0.09380239900044 *
Marital_StatusTogether ;
150521    +   H1x2_3  = H1x2_3  +    -0.59991828858437 * Education2n_Cycle
150522    +          +     0.16738017494874 * EducationBasic  +     1.11954020630495 *
150523    +        EducationGraduation  +    -1.26111004544108 * EducationMaster
150524    +          +    -1.25715350788627 * Marital_StatusDivorced
150525    +          +     0.74269511935299 * Marital_StatusMarried
150526    +          +    -0.27394822792771 * Marital_StatusSingle
150527    +          +     0.32120400150108 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.59991828858437 * Education2n_Cycle +
0.16738017494874 * EducationBasic + 1.11954020630495 * EducationGraduation + -1.26111004544108
* EducationMaster + -1.25715350788627 * Marital_StatusDivorced + 0.74269511935299 *
Marital_StatusMarried + -0.27394822792771 * Marital_StatusSingle + 0.32120400150108 *
Marital_StatusTogether ;
150528    +   H1x2_4  = H1x2_4  +     0.73858886461182 * Education2n_Cycle
150529    +          +     1.18482398810163 * EducationBasic  +     0.31912715416105 *
150530    +        EducationGraduation  +     -0.7403940659871 * EducationMaster
150531    +          +    -1.42754006114782 * Marital_StatusDivorced
150532    +          +    -0.13979120103654 * Marital_StatusMarried
150533    +          +    -1.66244370644258 * Marital_StatusSingle
150534    +          +     1.29295770867497 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.73858886461182 * Education2n_Cycle +
1.18482398810163 * EducationBasic + 0.31912715416105 * EducationGraduation + -0.7403940659871
* EducationMaster + -1.42754006114782 * Marital_StatusDivorced + -0.13979120103654 *
Marital_StatusMarried + -1.66244370644258 * Marital_StatusSingle + 1.29295770867497 *
Marital_StatusTogether ;
150535    +   H1x2_1  =     0.02486753071365 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.02486753071365 + H1x2_1 ;
150536    +   H1x2_2  =     1.30157602008517 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.30157602008517 + H1x2_2 ;
150537    +   H1x2_3  =    -0.71765289173772 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.71765289173772 + H1x2_3 ;
150538    +   H1x2_4  =    -0.28206267191961 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.28206267191961 + H1x2_4 ;
150539    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
150540    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
150541    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
150542    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
150543    +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
150544    +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
150545    +END;
MPRINT(EM_DIAGRAM):   END;
150546    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
150547    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
150548    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
150549    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
150550    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
150551    +END;
MPRINT(EM_DIAGRAM):   END;
150552    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
150553    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
150554    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
150555    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
150556    +   H2x1_1  =    -1.34021567967914 * H1x1_1  +    -0.82210150819056 * H1x1_2
150557    +          +      0.2051584088577 * H1x1_3  +    -0.14877251454609 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.34021567967914 * H1x1_1 + -0.82210150819056 * H1x1_2 +
0.2051584088577 * H1x1_3 + -0.14877251454609 * H1x1_4 ;
150558    +   H2x1_2  =     5.90283136076368 * H1x1_1  +    -7.93891997601848 * H1x1_2
150559    +          +     6.88352608350263 * H1x1_3  +     4.96968417177752 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 5.90283136076368 * H1x1_1 + -7.93891997601848 * H1x1_2 +
6.88352608350263 * H1x1_3 + 4.96968417177752 * H1x1_4 ;
150560    +   H2x1_3  =    -0.35820258372371 * H1x1_1  +      3.0004195561827 * H1x1_2
150561    +          +    -2.45737828305901 * H1x1_3  +     -3.3701635035096 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.35820258372371 * H1x1_1 + 3.0004195561827 * H1x1_2 +
-2.45737828305901 * H1x1_3 + -3.3701635035096 * H1x1_4 ;
150562    +   H2x1_4  =    -2.21298094667436 * H1x1_1  +     0.26414252140039 * H1x1_2
150563    +          +     1.09094365218549 * H1x1_3  +     1.52196888791164 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -2.21298094667436 * H1x1_1 + 0.26414252140039 * H1x1_2 +
1.09094365218549 * H1x1_3 + 1.52196888791164 * H1x1_4 ;
150564    +   H2x1_1  = H2x1_1  +    -0.84246838752596 * H1x2_1
150565    +          +     0.53874594317309 * H1x2_2  +     0.47956597308168 * H1x2_3
150566    +          +    -0.93255463077914 * H1x2_4 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.84246838752596 * H1x2_1 + 0.53874594317309 * H1x2_2
+ 0.47956597308168 * H1x2_3 + -0.93255463077914 * H1x2_4 ;
150567    +   H2x1_2  = H2x1_2  +     -1.9223116287684 * H1x2_1
150568    +          +    -2.37377206970433 * H1x2_2  +    -0.73887953722708 * H1x2_3
150569    +          +     2.71044044080254 * H1x2_4 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.9223116287684 * H1x2_1 + -2.37377206970433 * H1x2_2
+ -0.73887953722708 * H1x2_3 + 2.71044044080254 * H1x2_4 ;
150570    +   H2x1_3  = H2x1_3  +     0.53173546674544 * H1x2_1
150571    +          +     1.48831638926533 * H1x2_2  +     2.89231339277069 * H1x2_3
150572    +          +    -2.75774116509863 * H1x2_4 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.53173546674544 * H1x2_1 + 1.48831638926533 * H1x2_2
+ 2.89231339277069 * H1x2_3 + -2.75774116509863 * H1x2_4 ;
150573    +   H2x1_4  = H2x1_4  +     1.42086435786687 * H1x2_1
150574    +          +     0.41116169758796 * H1x2_2  +    -1.89087404607062 * H1x2_3
150575    +          +     1.62153254823704 * H1x2_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.42086435786687 * H1x2_1 + 0.41116169758796 * H1x2_2
+ -1.89087404607062 * H1x2_3 + 1.62153254823704 * H1x2_4 ;
150576    +   H2x1_1  =    -1.75788455741829 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.75788455741829 + H2x1_1 ;
150577    +   H2x1_2  =    -1.23949015246826 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.23949015246826 + H2x1_2 ;
150578    +   H2x1_3  =     0.22552341308337 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.22552341308337 + H2x1_3 ;
150579    +   H2x1_4  =    -0.29261642916715 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.29261642916715 + H2x1_4 ;
150580    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
150581    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
150582    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
150583    +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
150584    +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
150585    +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
150586    +END;
MPRINT(EM_DIAGRAM):   END;
150587    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
150588    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
150589    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
150590    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
150591    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
150592    +END;
MPRINT(EM_DIAGRAM):   END;
150593    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
150594    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
150595    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
150596    +
150597    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
150598    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
150599    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
150600    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
150601    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
150602    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
150603    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
150604    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
150605    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
150606    +end;
MPRINT(EM_DIAGRAM):   end;
150607    +else do;
MPRINT(EM_DIAGRAM):   else do;
150608    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
150609    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
150610    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
150611    +   end;
MPRINT(EM_DIAGRAM):   end;
150612    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
150613    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
150614    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
150615    +   end;
MPRINT(EM_DIAGRAM):   end;
150616    +   else do;
MPRINT(EM_DIAGRAM):   else do;
150617    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
150618    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
150619    +   end;
MPRINT(EM_DIAGRAM):   end;
150620    +end;
MPRINT(EM_DIAGRAM):   end;
150621    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
150622    +   P_DepVar1  =    -0.01128614443737 * H2x1_1  +     20.5485882709782 * H2x1_2
150623    +          +    -12.1833710389136 * H2x1_3  +     -2.9534639226061 * H2x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.01128614443737 * H2x1_1 + 20.5485882709782 * H2x1_2 +
-12.1833710389136 * H2x1_3 + -2.9534639226061 * H2x1_4 ;
150624    +   P_DepVar1  =     1.18328906065521 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.18328906065521 + P_DepVar1 ;
150625    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
150626    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
150627    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
150628    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
150629    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
150630    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
150631    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
150632    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
150633    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
150634    +END;
MPRINT(EM_DIAGRAM):   END;
150635    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
150636    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
150637    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
150638    +END;
MPRINT(EM_DIAGRAM):   END;
150639    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
150640    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
150641    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
150642    +END;
MPRINT(EM_DIAGRAM):   END;
150643    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
150644    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
150645    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
150646    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
150647    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
150648    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
150649    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
150650    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
150651    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
150652    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
150653    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
150654    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
150655    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
150656    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
150657    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
150658    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
150659    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
150660    +END;
MPRINT(EM_DIAGRAM):   END;
150661    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
150662    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
150663    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
150664    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
150665    +* Renaming variables for AutoNeural47;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural47;
150666    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
150667    +* Renaming Posterior variables for AutoNeural47;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural47;
150668    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
150669    +drop AutoNeural47_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural47_P_DepVar1;
150670    +AutoNeural47_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural47_P_DepVar1 = P_DepVar1;
150671    +drop AutoNeural47_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural47_P_DepVar0;
150672    +AutoNeural47_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural47_P_DepVar0 = P_DepVar0;
150673    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
150674    +* Renaming _WARN_ variable for AutoNeural47;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural47;
150675    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
150676    +length AutoNeural47_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural47_WARN_ $4;
150677    +drop AutoNeural47_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural47_WARN_;
150678    +AutoNeural47_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural47_WARN_ = _WARN_;
150679    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
150680    +* Ensmbl22: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Scoring Code of model 5 of 7;
150681    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
150682    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
150683    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
150684    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
150685    +* NODE: Neural30;
MPRINT(EM_DIAGRAM):   * NODE: Neural30;
150686    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
150687    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
150688    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
150689    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
150690    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
150691    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
150692    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
150693    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
150694    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
150695    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
150696    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
150697    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
150698    +LENGTH _WARN_ $4
150699    +      F_DepVar  $ 12
150700    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
150701    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
150702    +
150703    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
150704    +
150705    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
150706    +
150707    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
150708    +
150709    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
150710    +
150711    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
150712    +
150713    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
150714    +
150715    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
150716    +
150717    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
150718    +
150719    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
150720    +
150721    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
150722    +
150723    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
150724    +
150725    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
150726    +
150727    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
150728    +
150729    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
150730    +
150731    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
150732    +
150733    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
150734    +
150735    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
150736    +
150737    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
150738    +
150739    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
150740    +
150741    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
150742    +
150743    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
150744    +
150745    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
150746    +
150747    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
150748    +
150749    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
150750    +
150751    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
150752    +
150753    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
150754    +
150755    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
150756    +
150757    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
150758    +
150759    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
150760    +
150761    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
150762    +
150763    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
150764    +
150765    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
150766    +
150767    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
150768    +
150769    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
150770    +
150771    +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
150772    +
150773    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
150774    +
150775    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
150776    +
150777    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
150778    +
150779    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
150780    +
150781    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
150782    +
150783    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
150784    +
150785    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
150786    +
150787    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
150788    +
150789    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
150790    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
150791    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
150792    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
150793    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
150794    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
150795    +end;
MPRINT(EM_DIAGRAM):   end;
150796    +else do;
MPRINT(EM_DIAGRAM):   else do;
150797    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
150798    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
150799    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
150800    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
150801    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
150802    +   end;
MPRINT(EM_DIAGRAM):   end;
150803    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
150804    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
150805    +   end;
MPRINT(EM_DIAGRAM):   end;
150806    +   else do;
MPRINT(EM_DIAGRAM):   else do;
150807    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
150808    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
150809    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
150810    +   end;
MPRINT(EM_DIAGRAM):   end;
150811    +end;
MPRINT(EM_DIAGRAM):   end;
150812    +
150813    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
150814    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
150815    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
150816    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
150817    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
150818    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
150819    +end;
MPRINT(EM_DIAGRAM):   end;
150820    +else do;
MPRINT(EM_DIAGRAM):   else do;
150821    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
150822    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
150823    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
150824    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
150825    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
150826    +   end;
MPRINT(EM_DIAGRAM):   end;
150827    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
150828    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
150829    +   end;
MPRINT(EM_DIAGRAM):   end;
150830    +   else do;
MPRINT(EM_DIAGRAM):   else do;
150831    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
150832    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
150833    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
150834    +   end;
MPRINT(EM_DIAGRAM):   end;
150835    +end;
MPRINT(EM_DIAGRAM):   end;
150836    +
150837    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
150838    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
150839    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
150840    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
150841    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
150842    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
150843    +end;
MPRINT(EM_DIAGRAM):   end;
150844    +else do;
MPRINT(EM_DIAGRAM):   else do;
150845    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
150846    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
150847    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
150848    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
150849    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
150850    +   end;
MPRINT(EM_DIAGRAM):   end;
150851    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
150852    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
150853    +   end;
MPRINT(EM_DIAGRAM):   end;
150854    +   else do;
MPRINT(EM_DIAGRAM):   else do;
150855    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
150856    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
150857    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
150858    +   end;
MPRINT(EM_DIAGRAM):   end;
150859    +end;
MPRINT(EM_DIAGRAM):   end;
150860    +
150861    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
150862    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
150863    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
150864    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
150865    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
150866    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
150867    +end;
MPRINT(EM_DIAGRAM):   end;
150868    +else do;
MPRINT(EM_DIAGRAM):   else do;
150869    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
150870    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
150871    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
150872    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
150873    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
150874    +   end;
MPRINT(EM_DIAGRAM):   end;
150875    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
150876    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
150877    +   end;
MPRINT(EM_DIAGRAM):   end;
150878    +   else do;
MPRINT(EM_DIAGRAM):   else do;
150879    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
150880    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
150881    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
150882    +   end;
MPRINT(EM_DIAGRAM):   end;
150883    +end;
MPRINT(EM_DIAGRAM):   end;
150884    +
150885    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
150886    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
150887    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
150888    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
150889    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
150890    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
150891    +end;
MPRINT(EM_DIAGRAM):   end;
150892    +else do;
MPRINT(EM_DIAGRAM):   else do;
150893    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
150894    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
150895    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
150896    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
150897    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
150898    +   end;
MPRINT(EM_DIAGRAM):   end;
150899    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
150900    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
150901    +   end;
MPRINT(EM_DIAGRAM):   end;
150902    +   else do;
MPRINT(EM_DIAGRAM):   else do;
150903    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
150904    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
150905    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
150906    +   end;
MPRINT(EM_DIAGRAM):   end;
150907    +end;
MPRINT(EM_DIAGRAM):   end;
150908    +
150909    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
150910    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
150911    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
150912    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
150913    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
150914    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
150915    +end;
MPRINT(EM_DIAGRAM):   end;
150916    +else do;
MPRINT(EM_DIAGRAM):   else do;
150917    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
150918    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
150919    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
150920    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
150921    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
150922    +   end;
MPRINT(EM_DIAGRAM):   end;
150923    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
150924    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
150925    +   end;
MPRINT(EM_DIAGRAM):   end;
150926    +   else do;
MPRINT(EM_DIAGRAM):   else do;
150927    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
150928    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
150929    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
150930    +   end;
MPRINT(EM_DIAGRAM):   end;
150931    +end;
MPRINT(EM_DIAGRAM):   end;
150932    +
150933    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
150934    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
150935    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
150936    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
150937    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
150938    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
150939    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
150940    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
150941    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
150942    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
150943    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
150944    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
150945    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
150946    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
150947    +end;
MPRINT(EM_DIAGRAM):   end;
150948    +else do;
MPRINT(EM_DIAGRAM):   else do;
150949    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
150950    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
150951    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
150952    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
150953    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
150954    +   end;
MPRINT(EM_DIAGRAM):   end;
150955    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
150956    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
150957    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
150958    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
150959    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
150960    +   end;
MPRINT(EM_DIAGRAM):   end;
150961    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
150962    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
150963    +   end;
MPRINT(EM_DIAGRAM):   end;
150964    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
150965    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
150966    +   end;
MPRINT(EM_DIAGRAM):   end;
150967    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
150968    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
150969    +   end;
MPRINT(EM_DIAGRAM):   end;
150970    +   else do;
MPRINT(EM_DIAGRAM):   else do;
150971    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
150972    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
150973    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
150974    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
150975    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
150976    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
150977    +   end;
MPRINT(EM_DIAGRAM):   end;
150978    +end;
MPRINT(EM_DIAGRAM):   end;
150979    +
150980    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
150981    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
150982    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
150983    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
150984    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
150985    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
150986    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
150987    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
150988    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
150989    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
150990    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
150991    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
150992    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
150993    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
150994    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
150995    +end;
MPRINT(EM_DIAGRAM):   end;
150996    +else do;
MPRINT(EM_DIAGRAM):   else do;
150997    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
150998    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
150999    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
151000    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
151001    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
151002    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
151003    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
151004    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
151005    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
151006    +         end;
MPRINT(EM_DIAGRAM):   end;
151007    +         else do;
MPRINT(EM_DIAGRAM):   else do;
151008    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
151009    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
151010    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
151011    +            end;
MPRINT(EM_DIAGRAM):   end;
151012    +         end;
MPRINT(EM_DIAGRAM):   end;
151013    +      end;
MPRINT(EM_DIAGRAM):   end;
151014    +      else do;
MPRINT(EM_DIAGRAM):   else do;
151015    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
151016    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
151017    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
151018    +         end;
MPRINT(EM_DIAGRAM):   end;
151019    +      end;
MPRINT(EM_DIAGRAM):   end;
151020    +   end;
MPRINT(EM_DIAGRAM):   end;
151021    +   else do;
The SAS System
 
MPRINT(EM_DIAGRAM):   else do;
151022    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
151023    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
151024    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
151025    +      end;
MPRINT(EM_DIAGRAM):   end;
151026    +      else do;
MPRINT(EM_DIAGRAM):   else do;
151027    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
151028    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
151029    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
151030    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
151031    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
151032    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
151033    +         end;
MPRINT(EM_DIAGRAM):   end;
151034    +      end;
MPRINT(EM_DIAGRAM):   end;
151035    +   end;
MPRINT(EM_DIAGRAM):   end;
151036    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
151037    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
151038    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
151039    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
151040    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
151041    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
151042    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
151043    +   end;
MPRINT(EM_DIAGRAM):   end;
151044    +end;
MPRINT(EM_DIAGRAM):   end;
151045    +
151046    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
151047    +*** Checking missing input Interval
151048    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
151049    +
151050    +IF NMISS(
151051    +   Income ,
151052    +   Kidhome ,
151053    +   MntFishProducts ,
151054    +   MntFruits ,
151055    +   MntGoldProds ,
151056    +   MntMeatProducts ,
151057    +   MntSweetProducts ,
151058    +   MntWines ,
151059    +   NumCatalogPurchases ,
151060    +   NumDealsPurchases ,
151061    +   NumStorePurchases ,
151062    +   NumWebPurchases ,
151063    +   NumWebVisitsMonth ,
151064    +   Recency ,
151065    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
151066    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
151067    +
151068    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
151069    +END;
MPRINT(EM_DIAGRAM):   END;
151070    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
151071    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
151072    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
151073    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
151074    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
151075    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
151076    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
151077    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
151078    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
151079    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
151080    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
151081    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
151082    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
151083    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
151084    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
151085    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
151086    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
151087    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
151088    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
151089    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
151090    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
151091    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
151092    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
151093    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
151094    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
151095    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
151096    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
151097    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
151098    +END;
MPRINT(EM_DIAGRAM):   END;
151099    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
151100    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
151101    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
151102    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
151103    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
151104    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
151105    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
151106    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
151107    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
151108    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
151109    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
151110    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
151111    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
151112    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
151113    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
151114    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
151115    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
151116    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
151117    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
151118    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
151119    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
151120    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
151121    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
151122    +   ELSE S_NumCatalogPurchases
151123    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
151124    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
151125    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
151126    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
151127    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
151128    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
151129    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
151130    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
151131    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
151132    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
151133    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
151134    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
151135    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
151136    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
151137    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
151138    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
151139    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
151140    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
151141    +END;
MPRINT(EM_DIAGRAM):   END;
151142    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
151143    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
151144    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
151145    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
151146    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
151147    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
151148    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
151149    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
151150    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
151151    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
151152    +   H11  =    -0.59781928082243 * S_Income  +     0.49830142312288 * S_Kidhome
151153    +          +    -0.00045024466632 * S_MntFishProducts
151154    +          +    -0.22421712710333 * S_MntFruits  +    -0.19010144853469 *
151155    +        S_MntGoldProds  +    -0.53373773623953 * S_MntMeatProducts
151156    +          +     0.17506402203495 * S_MntSweetProducts
151157    +          +    -0.28551398649672 * S_MntWines  +       0.019870944777 *
151158    +        S_NumCatalogPurchases  +     0.03537776181533 * S_NumDealsPurchases
151159    +          +     0.05580468715403 * S_NumStorePurchases
151160    +          +    -0.29131611132704 * S_NumWebPurchases
151161    +          +    -0.40690084025802 * S_NumWebVisitsMonth
151162    +          +     0.48640195058901 * S_Recency  +     0.31820890239661 *
151163    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.59781928082243 * S_Income + 0.49830142312288 * S_Kidhome +
-0.00045024466632 * S_MntFishProducts + -0.22421712710333 * S_MntFruits + -0.19010144853469 *
S_MntGoldProds + -0.53373773623953 * S_MntMeatProducts + 0.17506402203495 * S_MntSweetProducts
+ -0.28551398649672 * S_MntWines + 0.019870944777 * S_NumCatalogPurchases + 0.03537776181533 *
S_NumDealsPurchases + 0.05580468715403 * S_NumStorePurchases + -0.29131611132704 *
S_NumWebPurchases + -0.40690084025802 * S_NumWebVisitsMonth + 0.48640195058901 * S_Recency +
0.31820890239661 * S_Teenhome ;
151164    +   H12  =    -0.41871753512335 * S_Income  +      0.6025072461821 * S_Kidhome
151165    +          +    -0.03132724937716 * S_MntFishProducts
151166    +          +     0.19114182835046 * S_MntFruits  +     0.13483463809539 *
151167    +        S_MntGoldProds  +    -0.63593603749443 * S_MntMeatProducts
151168    +          +    -0.07569302401223 * S_MntSweetProducts
151169    +          +     0.67050112032753 * S_MntWines  +    -0.23159243932208 *
151170    +        S_NumCatalogPurchases  +    -0.07183698407409 * S_NumDealsPurchases
151171    +          +     0.54619681114623 * S_NumStorePurchases
151172    +          +     0.44325129671249 * S_NumWebPurchases
151173    +          +    -1.25054401670605 * S_NumWebVisitsMonth
151174    +          +      1.2376290916151 * S_Recency  +     0.43747371517287 *
151175    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.41871753512335 * S_Income + 0.6025072461821 * S_Kidhome +
-0.03132724937716 * S_MntFishProducts + 0.19114182835046 * S_MntFruits + 0.13483463809539 *
S_MntGoldProds + -0.63593603749443 * S_MntMeatProducts + -0.07569302401223 *
S_MntSweetProducts + 0.67050112032753 * S_MntWines + -0.23159243932208 * S_NumCatalogPurchases
+ -0.07183698407409 * S_NumDealsPurchases + 0.54619681114623 * S_NumStorePurchases +
0.44325129671249 * S_NumWebPurchases + -1.25054401670605 * S_NumWebVisitsMonth +
1.2376290916151 * S_Recency + 0.43747371517287 * S_Teenhome ;
151176    +   H13  =      0.0713579189325 * S_Income  +    -0.05759612462349 * S_Kidhome
151177    +          +     0.07631777381832 * S_MntFishProducts
151178    +          +    -0.00387785552441 * S_MntFruits  +    -0.21868916314192 *
151179    +        S_MntGoldProds  +       0.072623883197 * S_MntMeatProducts
151180    +          +     0.12637946833766 * S_MntSweetProducts
151181    +          +    -0.37981663841124 * S_MntWines  +    -0.89958525403162 *
151182    +        S_NumCatalogPurchases  +    -0.17471885937598 * S_NumDealsPurchases
151183    +          +     0.15845618359126 * S_NumStorePurchases
151184    +          +    -0.33296932705082 * S_NumWebPurchases
151185    +          +      0.0260072296349 * S_NumWebVisitsMonth
151186    +          +     0.02544749712977 * S_Recency  +    -0.17381561661022 *
151187    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.0713579189325 * S_Income + -0.05759612462349 * S_Kidhome +
0.07631777381832 * S_MntFishProducts + -0.00387785552441 * S_MntFruits + -0.21868916314192 *
S_MntGoldProds + 0.072623883197 * S_MntMeatProducts + 0.12637946833766 * S_MntSweetProducts +
-0.37981663841124 * S_MntWines + -0.89958525403162 * S_NumCatalogPurchases + -0.17471885937598
* S_NumDealsPurchases + 0.15845618359126 * S_NumStorePurchases + -0.33296932705082 *
S_NumWebPurchases + 0.0260072296349 * S_NumWebVisitsMonth + 0.02544749712977 * S_Recency +
-0.17381561661022 * S_Teenhome ;
151188    +   H14  =    -0.47498613710851 * S_Income  +     0.09339198401437 * S_Kidhome
151189    +          +    -0.13642352619174 * S_MntFishProducts
151190    +          +     0.27167245582117 * S_MntFruits  +    -0.00579747559996 *
151191    +        S_MntGoldProds  +     0.31591387319577 * S_MntMeatProducts
151192    +          +     0.14125815807238 * S_MntSweetProducts
151193    +          +     0.07862916790983 * S_MntWines  +    -0.58905358997534 *
151194    +        S_NumCatalogPurchases  +     -0.5574069633995 * S_NumDealsPurchases
151195    +          +     0.19718828261526 * S_NumStorePurchases
151196    +          +    -0.24156925391919 * S_NumWebPurchases
151197    +          +    -0.25711078938749 * S_NumWebVisitsMonth
151198    +          +     0.38883063223812 * S_Recency  +     -0.2396731334184 *
151199    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.47498613710851 * S_Income + 0.09339198401437 * S_Kidhome +
-0.13642352619174 * S_MntFishProducts + 0.27167245582117 * S_MntFruits + -0.00579747559996 *
S_MntGoldProds + 0.31591387319577 * S_MntMeatProducts + 0.14125815807238 * S_MntSweetProducts
+ 0.07862916790983 * S_MntWines + -0.58905358997534 * S_NumCatalogPurchases + -0.5574069633995
* S_NumDealsPurchases + 0.19718828261526 * S_NumStorePurchases + -0.24156925391919 *
S_NumWebPurchases + -0.25711078938749 * S_NumWebVisitsMonth + 0.38883063223812 * S_Recency +
-0.2396731334184 * S_Teenhome ;
151200    +   H15  =     0.24624924979609 * S_Income  +    -0.37052106312109 * S_Kidhome
151201    +          +     0.13579628643404 * S_MntFishProducts
151202    +          +    -0.05263868911164 * S_MntFruits  +    -0.01504675049991 *
151203    +        S_MntGoldProds  +     -0.4202277804998 * S_MntMeatProducts
151204    +          +    -0.01039299374426 * S_MntSweetProducts
151205    +          +     0.71197420459135 * S_MntWines  +    -0.35973505575029 *
151206    +        S_NumCatalogPurchases  +     -0.4415445481482 * S_NumDealsPurchases
151207    +          +     0.58897740652611 * S_NumStorePurchases
151208    +          +     0.24564485851062 * S_NumWebPurchases
151209    +          +    -0.13976320243555 * S_NumWebVisitsMonth
151210    +          +      0.1199367613063 * S_Recency  +    -0.15283161418313 *
151211    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.24624924979609 * S_Income + -0.37052106312109 * S_Kidhome +
0.13579628643404 * S_MntFishProducts + -0.05263868911164 * S_MntFruits + -0.01504675049991 *
S_MntGoldProds + -0.4202277804998 * S_MntMeatProducts + -0.01039299374426 * S_MntSweetProducts
+ 0.71197420459135 * S_MntWines + -0.35973505575029 * S_NumCatalogPurchases + -0.4415445481482
* S_NumDealsPurchases + 0.58897740652611 * S_NumStorePurchases + 0.24564485851062 *
S_NumWebPurchases + -0.13976320243555 * S_NumWebVisitsMonth + 0.1199367613063 * S_Recency +
-0.15283161418313 * S_Teenhome ;
151212    +   H16  =     0.23493799758749 * S_Income  +     0.07038278079069 * S_Kidhome
151213    +          +    -0.45448768538367 * S_MntFishProducts
151214    +          +     0.02622380709004 * S_MntFruits  +     0.14726698184115 *
151215    +        S_MntGoldProds  +     0.65760183569767 * S_MntMeatProducts
151216    +          +    -0.16936256277023 * S_MntSweetProducts
151217    +          +    -0.40647066866305 * S_MntWines  +     0.99645493491726 *
151218    +        S_NumCatalogPurchases  +     0.65587239961358 * S_NumDealsPurchases
151219    +          +    -0.22309716855774 * S_NumStorePurchases
151220    +          +    -0.61204529910842 * S_NumWebPurchases
151221    +          +     0.43742228867615 * S_NumWebVisitsMonth
151222    +          +    -0.56099034256092 * S_Recency  +     -0.2445351671148 *
151223    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = 0.23493799758749 * S_Income + 0.07038278079069 * S_Kidhome +
-0.45448768538367 * S_MntFishProducts + 0.02622380709004 * S_MntFruits + 0.14726698184115 *
S_MntGoldProds + 0.65760183569767 * S_MntMeatProducts + -0.16936256277023 * S_MntSweetProducts
+ -0.40647066866305 * S_MntWines + 0.99645493491726 * S_NumCatalogPurchases + 0.65587239961358
* S_NumDealsPurchases + -0.22309716855774 * S_NumStorePurchases + -0.61204529910842 *
S_NumWebPurchases + 0.43742228867615 * S_NumWebVisitsMonth + -0.56099034256092 * S_Recency +
-0.2445351671148 * S_Teenhome ;
151224    +   H17  =    -0.00107702057163 * S_Income  +     0.25116135719972 * S_Kidhome
151225    +          +    -0.04540308470858 * S_MntFishProducts
151226    +          +        0.21487241577 * S_MntFruits  +    -0.12914913547414 *
151227    +        S_MntGoldProds  +    -0.04149021191395 * S_MntMeatProducts
151228    +          +     0.02853521979141 * S_MntSweetProducts
151229    +          +     -0.2435805887418 * S_MntWines  +    -0.04509621661407 *
151230    +        S_NumCatalogPurchases  +    -0.26492036720429 * S_NumDealsPurchases
151231    +          +     -0.3299561248944 * S_NumStorePurchases
151232    +          +    -0.09806597448224 * S_NumWebPurchases
151233    +          +      0.0427056351245 * S_NumWebVisitsMonth
151234    +          +     0.03953235628202 * S_Recency  +    -0.11317308767713 *
151235    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = -0.00107702057163 * S_Income + 0.25116135719972 * S_Kidhome +
-0.04540308470858 * S_MntFishProducts + 0.21487241577 * S_MntFruits + -0.12914913547414 *
S_MntGoldProds + -0.04149021191395 * S_MntMeatProducts + 0.02853521979141 * S_MntSweetProducts
+ -0.2435805887418 * S_MntWines + -0.04509621661407 * S_NumCatalogPurchases +
-0.26492036720429 * S_NumDealsPurchases + -0.3299561248944 * S_NumStorePurchases +
-0.09806597448224 * S_NumWebPurchases + 0.0427056351245 * S_NumWebVisitsMonth +
0.03953235628202 * S_Recency + -0.11317308767713 * S_Teenhome ;
151236    +   H11  = H11  +     0.50033674561531 * AcceptedCmp10
151237    +          +    -0.02275693117286 * AcceptedCmp20  +     0.31338891533156 *
151238    +        AcceptedCmp30  +      0.3901248845706 * AcceptedCmp40
151239    +          +     0.44314358358111 * AcceptedCmp50  +    -0.20444060864498 *
151240    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.50033674561531 * AcceptedCmp10 + -0.02275693117286 *
AcceptedCmp20 + 0.31338891533156 * AcceptedCmp30 + 0.3901248845706 * AcceptedCmp40 +
0.44314358358111 * AcceptedCmp50 + -0.20444060864498 * Complain0 ;
151241    +   H12  = H12  +     0.30103938822692 * AcceptedCmp10
151242    +          +     0.54298746723422 * AcceptedCmp20  +     0.50401040035525 *
151243    +        AcceptedCmp30  +     0.43447710825306 * AcceptedCmp40
151244    +          +     0.60794421030027 * AcceptedCmp50  +    -0.28114274461319 *
151245    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.30103938822692 * AcceptedCmp10 + 0.54298746723422 *
AcceptedCmp20 + 0.50401040035525 * AcceptedCmp30 + 0.43447710825306 * AcceptedCmp40 +
0.60794421030027 * AcceptedCmp50 + -0.28114274461319 * Complain0 ;
151246    +   H13  = H13  +     -0.1890212967757 * AcceptedCmp10
151247    +          +    -0.11487406996391 * AcceptedCmp20  +    -0.22740618754863 *
151248    +        AcceptedCmp30  +      0.2354510231918 * AcceptedCmp40
151249    +          +    -0.14327434649067 * AcceptedCmp50  +    -0.17839080850556 *
151250    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.1890212967757 * AcceptedCmp10 + -0.11487406996391 *
AcceptedCmp20 + -0.22740618754863 * AcceptedCmp30 + 0.2354510231918 * AcceptedCmp40 +
-0.14327434649067 * AcceptedCmp50 + -0.17839080850556 * Complain0 ;
151251    +   H14  = H14  +    -0.28194187416219 * AcceptedCmp10
151252    +          +     0.11732089254624 * AcceptedCmp20  +     0.34964075536156 *
151253    +        AcceptedCmp30  +     0.05772396286169 * AcceptedCmp40
151254    +          +    -0.08671748651826 * AcceptedCmp50  +      0.0629540108407 *
151255    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.28194187416219 * AcceptedCmp10 + 0.11732089254624 *
AcceptedCmp20 + 0.34964075536156 * AcceptedCmp30 + 0.05772396286169 * AcceptedCmp40 +
-0.08671748651826 * AcceptedCmp50 + 0.0629540108407 * Complain0 ;
151256    +   H15  = H15  +    -0.01058257322803 * AcceptedCmp10
151257    +          +     0.26755355732587 * AcceptedCmp20  +     0.40856661734724 *
151258    +        AcceptedCmp30  +     0.02977117354989 * AcceptedCmp40
151259    +          +       0.073655049734 * AcceptedCmp50  +     0.25562048226555 *
151260    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.01058257322803 * AcceptedCmp10 + 0.26755355732587 *
AcceptedCmp20 + 0.40856661734724 * AcceptedCmp30 + 0.02977117354989 * AcceptedCmp40 +
0.073655049734 * AcceptedCmp50 + 0.25562048226555 * Complain0 ;
151261    +   H16  = H16  +    -0.65590117532084 * AcceptedCmp10
151262    +          +    -0.31314161223579 * AcceptedCmp20  +    -0.18863165264573 *
151263    +        AcceptedCmp30  +    -0.18832338914237 * AcceptedCmp40
151264    +          +    -0.53765749471786 * AcceptedCmp50  +     0.17409401877513 *
151265    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.65590117532084 * AcceptedCmp10 + -0.31314161223579 *
AcceptedCmp20 + -0.18863165264573 * AcceptedCmp30 + -0.18832338914237 * AcceptedCmp40 +
-0.53765749471786 * AcceptedCmp50 + 0.17409401877513 * Complain0 ;
151266    +   H17  = H17  +    -0.42253231673718 * AcceptedCmp10
151267    +          +    -0.40954345229557 * AcceptedCmp20  +    -0.30577523080786 *
151268    +        AcceptedCmp30  +    -0.22396670899437 * AcceptedCmp40
151269    +          +     0.05757251451004 * AcceptedCmp50  +     0.07813950542487 *
151270    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.42253231673718 * AcceptedCmp10 + -0.40954345229557 *
AcceptedCmp20 + -0.30577523080786 * AcceptedCmp30 + -0.22396670899437 * AcceptedCmp40 +
0.05757251451004 * AcceptedCmp50 + 0.07813950542487 * Complain0 ;
151271    +   H11  = H11  +    -0.14483542022901 * Education2n_Cycle
151272    +          +     0.32176647745332 * EducationBasic  +     0.00900796305072 *
151273    +        EducationGraduation  +    -0.00243484910123 * EducationMaster
151274    +          +    -0.22074132229211 * Marital_StatusDivorced
151275    +          +     0.70282742634901 * Marital_StatusMarried
151276    +          +     -0.5926244797961 * Marital_StatusSingle
151277    +          +     0.21342221410999 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.14483542022901 * Education2n_Cycle + 0.32176647745332 *
EducationBasic + 0.00900796305072 * EducationGraduation + -0.00243484910123 * EducationMaster
+ -0.22074132229211 * Marital_StatusDivorced + 0.70282742634901 * Marital_StatusMarried +
-0.5926244797961 * Marital_StatusSingle + 0.21342221410999 * Marital_StatusTogether ;
151278    +   H12  = H12  +    -0.10242932200247 * Education2n_Cycle
151279    +          +     0.34937926721317 * EducationBasic  +    -0.20395479511872 *
151280    +        EducationGraduation  +     0.31210327899339 * EducationMaster
151281    +          +    -0.46376392175295 * Marital_StatusDivorced
151282    +          +       0.589453579718 * Marital_StatusMarried
151283    +          +    -0.45342174978481 * Marital_StatusSingle
151284    +          +     0.70517120763557 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.10242932200247 * Education2n_Cycle + 0.34937926721317 *
EducationBasic + -0.20395479511872 * EducationGraduation + 0.31210327899339 * EducationMaster
+ -0.46376392175295 * Marital_StatusDivorced + 0.589453579718 * Marital_StatusMarried +
-0.45342174978481 * Marital_StatusSingle + 0.70517120763557 * Marital_StatusTogether ;
151285    +   H13  = H13  +     0.24858755570324 * Education2n_Cycle
151286    +          +     0.07360039359386 * EducationBasic  +    -0.42563056620078 *
151287    +        EducationGraduation  +    -0.25970840250323 * EducationMaster
151288    +          +     0.26981972015482 * Marital_StatusDivorced
151289    +          +    -0.01707364864139 * Marital_StatusMarried
151290    +          +     0.38646060840009 * Marital_StatusSingle
151291    +          +     0.19694047086013 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.24858755570324 * Education2n_Cycle + 0.07360039359386 *
EducationBasic + -0.42563056620078 * EducationGraduation + -0.25970840250323 * EducationMaster
+ 0.26981972015482 * Marital_StatusDivorced + -0.01707364864139 * Marital_StatusMarried +
0.38646060840009 * Marital_StatusSingle + 0.19694047086013 * Marital_StatusTogether ;
151292    +   H14  = H14  +     0.22577522124265 * Education2n_Cycle
151293    +          +     0.04183136697557 * EducationBasic  +    -0.27725331198825 *
151294    +        EducationGraduation  +     0.15709188532123 * EducationMaster
151295    +          +    -0.01933675094701 * Marital_StatusDivorced
151296    +          +     0.52969577969434 * Marital_StatusMarried
151297    +          +      -0.348697714569 * Marital_StatusSingle
151298    +          +      0.5020342481888 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.22577522124265 * Education2n_Cycle + 0.04183136697557 *
EducationBasic + -0.27725331198825 * EducationGraduation + 0.15709188532123 * EducationMaster
+ -0.01933675094701 * Marital_StatusDivorced + 0.52969577969434 * Marital_StatusMarried +
-0.348697714569 * Marital_StatusSingle + 0.5020342481888 * Marital_StatusTogether ;
151299    +   H15  = H15  +     0.04488332711225 * Education2n_Cycle
151300    +          +     0.01911097443907 * EducationBasic  +    -0.11699443624996 *
151301    +        EducationGraduation  +    -0.07291393566738 * EducationMaster
151302    +          +    -0.04665146013984 * Marital_StatusDivorced
151303    +          +      -0.586219175167 * Marital_StatusMarried
151304    +          +     0.55713543417712 * Marital_StatusSingle
151305    +          +    -0.42208959885332 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.04488332711225 * Education2n_Cycle + 0.01911097443907 *
EducationBasic + -0.11699443624996 * EducationGraduation + -0.07291393566738 * EducationMaster
+ -0.04665146013984 * Marital_StatusDivorced + -0.586219175167 * Marital_StatusMarried +
0.55713543417712 * Marital_StatusSingle + -0.42208959885332 * Marital_StatusTogether ;
151306    +   H16  = H16  +     0.09174117861154 * Education2n_Cycle
151307    +          +     -0.1378945860659 * EducationBasic  +     -0.0728635369665 *
151308    +        EducationGraduation  +     0.29860714824438 * EducationMaster
151309    +          +    -0.05632171154347 * Marital_StatusDivorced
151310    +          +     0.03215547861665 * Marital_StatusMarried
151311    +          +     0.16870781172538 * Marital_StatusSingle
151312    +          +    -0.04883314322676 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.09174117861154 * Education2n_Cycle + -0.1378945860659 *
EducationBasic + -0.0728635369665 * EducationGraduation + 0.29860714824438 * EducationMaster +
-0.05632171154347 * Marital_StatusDivorced + 0.03215547861665 * Marital_StatusMarried +
0.16870781172538 * Marital_StatusSingle + -0.04883314322676 * Marital_StatusTogether ;
151313    +   H17  = H17  +    -0.00343694558117 * Education2n_Cycle
151314    +          +     0.32636427598227 * EducationBasic  +     0.16259654486833 *
151315    +        EducationGraduation  +    -0.00424229454859 * EducationMaster
151316    +          +    -0.21765415159355 * Marital_StatusDivorced
151317    +          +     -0.0542857922075 * Marital_StatusMarried
151318    +          +     0.20679907454933 * Marital_StatusSingle
151319    +          +     0.14976519710725 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.00343694558117 * Education2n_Cycle + 0.32636427598227 *
EducationBasic + 0.16259654486833 * EducationGraduation + -0.00424229454859 * EducationMaster
+ -0.21765415159355 * Marital_StatusDivorced + -0.0542857922075 * Marital_StatusMarried +
0.20679907454933 * Marital_StatusSingle + 0.14976519710725 * Marital_StatusTogether ;
151320    +   H11  =     0.92977078759503 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.92977078759503 + H11 ;
151321    +   H12  =    -0.97970409253156 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.97970409253156 + H12 ;
151322    +   H13  =     -0.5001144792196 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.5001144792196 + H13 ;
151323    +   H14  =    -0.90715840862541 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.90715840862541 + H14 ;
151324    +   H15  =     0.87046153389036 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.87046153389036 + H15 ;
151325    +   H16  =     0.49066122767086 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 0.49066122767086 + H16 ;
151326    +   H17  =    -1.05949763460293 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.05949763460293 + H17 ;
151327    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
151328    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
151329    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
151330    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
151331    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
151332    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
151333    +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
151334    +END;
MPRINT(EM_DIAGRAM):   END;
151335    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
151336    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
151337    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
151338    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
151339    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
151340    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
151341    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
151342    +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
151343    +END;
MPRINT(EM_DIAGRAM):   END;
151344    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
151345    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
151346    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
151347    +
151348    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
151349    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
151350    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
151351    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
151352    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
151353    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
151354    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
151355    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
151356    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
151357    +end;
MPRINT(EM_DIAGRAM):   end;
151358    +else do;
MPRINT(EM_DIAGRAM):   else do;
151359    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
151360    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
151361    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
151362    +   end;
MPRINT(EM_DIAGRAM):   end;
151363    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
151364    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
151365    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
151366    +   end;
MPRINT(EM_DIAGRAM):   end;
151367    +   else do;
MPRINT(EM_DIAGRAM):   else do;
151368    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
151369    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
151370    +   end;
MPRINT(EM_DIAGRAM):   end;
151371    +end;
MPRINT(EM_DIAGRAM):   end;
151372    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
151373    +   P_DepVar1  =    -2.32998401250848 * H11  +     -3.2074078511991 * H12
151374    +          +    -0.69549988605443 * H13  +    -1.74950789108762 * H14
151375    +          +    -1.74013772071344 * H15  +     2.65306089869015 * H16
151376    +          +     0.03700459000906 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.32998401250848 * H11 + -3.2074078511991 * H12 +
-0.69549988605443 * H13 + -1.74950789108762 * H14 + -1.74013772071344 * H15 + 2.65306089869015
* H16 + 0.03700459000906 * H17 ;
151377    +   P_DepVar1  =    -1.51229898726716 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.51229898726716 + P_DepVar1 ;
151378    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
151379    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
151380    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
151381    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
151382    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
151383    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
151384    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
151385    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
151386    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
151387    +END;
MPRINT(EM_DIAGRAM):   END;
151388    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
151389    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
151390    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
151391    +END;
MPRINT(EM_DIAGRAM):   END;
151392    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
151393    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
151394    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
151395    +END;
MPRINT(EM_DIAGRAM):   END;
151396    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
151397    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
151398    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
151399    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
151400    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
151401    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
151402    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
151403    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
151404    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
151405    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
151406    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
151407    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
151408    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
151409    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
151410    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
151411    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
151412    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
151413    +END;
MPRINT(EM_DIAGRAM):   END;
151414    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
151415    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
151416    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
151417    +drop
151418    +H11
151419    +H12
151420    +H13
151421    +H14
151422    +H15
151423    +H16
151424    +H17
151425    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
151426    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
151427    +* Renaming variables for Neural30;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural30;
151428    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
151429    +* Renaming Posterior variables for Neural30;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural30;
151430    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
151431    +drop Neural30_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural30_P_DepVar1;
151432    +Neural30_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural30_P_DepVar1 = P_DepVar1;
151433    +drop Neural30_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural30_P_DepVar0;
151434    +Neural30_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural30_P_DepVar0 = P_DepVar0;
151435    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
151436    +* Renaming _WARN_ variable for Neural30;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural30;
151437    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
151438    +length Neural30_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural30_WARN_ $4;
151439    +drop Neural30_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural30_WARN_;
151440    +Neural30_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural30_WARN_ = _WARN_;
151441    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
151442    +* Ensmbl22: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Scoring Code of model 6 of 7;
151443    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
151444    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
151445    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
151446    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
151447    +* NODE: Neural35;
MPRINT(EM_DIAGRAM):   * NODE: Neural35;
151448    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
151449    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
151450    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
151451    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
151452    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
151453    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
151454    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
151455    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
151456    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
151457    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
151458    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
151459    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
151460    +LENGTH _WARN_ $4
151461    +      F_DepVar  $ 12
151462    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
151463    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
151464    +
151465    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
151466    +
151467    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
151468    +
151469    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
151470    +
151471    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
151472    +
151473    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
151474    +
151475    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
151476    +
151477    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
151478    +
151479    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
151480    +
151481    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
151482    +
151483    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
151484    +
151485    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
151486    +
151487    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
151488    +
151489    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
151490    +
151491    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
151492    +
151493    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
151494    +
151495    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
151496    +
151497    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
151498    +
151499    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
151500    +
151501    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
151502    +
151503    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
151504    +
151505    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
151506    +
151507    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
151508    +
151509    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
151510    +
151511    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
151512    +
151513    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
151514    +
151515    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
151516    +
151517    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
151518    +
151519    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
151520    +
151521    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
151522    +
151523    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
151524    +
151525    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
151526    +
151527    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
151528    +
151529    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
151530    +
151531    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
151532    +
151533    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
151534    +
151535    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
151536    +
151537    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
151538    +
151539    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
151540    +
151541    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
151542    +
151543    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
151544    +
151545    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
151546    +
151547    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
151548    +
151549    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
151550    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
151551    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
151552    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
151553    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
151554    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
151555    +end;
MPRINT(EM_DIAGRAM):   end;
151556    +else do;
MPRINT(EM_DIAGRAM):   else do;
151557    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
151558    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
151559    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
151560    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
151561    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
151562    +   end;
MPRINT(EM_DIAGRAM):   end;
151563    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
151564    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
151565    +   end;
MPRINT(EM_DIAGRAM):   end;
151566    +   else do;
MPRINT(EM_DIAGRAM):   else do;
151567    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
151568    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
151569    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
151570    +   end;
MPRINT(EM_DIAGRAM):   end;
151571    +end;
MPRINT(EM_DIAGRAM):   end;
151572    +
151573    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
151574    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
151575    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
151576    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
151577    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
151578    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
151579    +end;
MPRINT(EM_DIAGRAM):   end;
151580    +else do;
MPRINT(EM_DIAGRAM):   else do;
151581    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
151582    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
151583    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
151584    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
151585    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
151586    +   end;
MPRINT(EM_DIAGRAM):   end;
151587    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
151588    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
151589    +   end;
MPRINT(EM_DIAGRAM):   end;
151590    +   else do;
MPRINT(EM_DIAGRAM):   else do;
151591    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
151592    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
151593    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
151594    +   end;
MPRINT(EM_DIAGRAM):   end;
151595    +end;
MPRINT(EM_DIAGRAM):   end;
151596    +
151597    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
151598    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
151599    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
151600    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
151601    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
151602    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
151603    +end;
MPRINT(EM_DIAGRAM):   end;
151604    +else do;
MPRINT(EM_DIAGRAM):   else do;
151605    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
151606    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
151607    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
151608    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
151609    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
151610    +   end;
MPRINT(EM_DIAGRAM):   end;
151611    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
151612    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
151613    +   end;
MPRINT(EM_DIAGRAM):   end;
151614    +   else do;
MPRINT(EM_DIAGRAM):   else do;
151615    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
151616    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
151617    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
151618    +   end;
MPRINT(EM_DIAGRAM):   end;
151619    +end;
MPRINT(EM_DIAGRAM):   end;
151620    +
151621    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
151622    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
151623    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
151624    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
151625    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
151626    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
151627    +end;
MPRINT(EM_DIAGRAM):   end;
151628    +else do;
MPRINT(EM_DIAGRAM):   else do;
151629    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
151630    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
151631    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
151632    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
151633    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
151634    +   end;
MPRINT(EM_DIAGRAM):   end;
151635    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
151636    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
151637    +   end;
MPRINT(EM_DIAGRAM):   end;
151638    +   else do;
MPRINT(EM_DIAGRAM):   else do;
151639    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
151640    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
151641    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
151642    +   end;
MPRINT(EM_DIAGRAM):   end;
151643    +end;
MPRINT(EM_DIAGRAM):   end;
151644    +
151645    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
151646    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
151647    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
151648    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
151649    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
151650    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
151651    +end;
MPRINT(EM_DIAGRAM):   end;
151652    +else do;
MPRINT(EM_DIAGRAM):   else do;
151653    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
151654    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
151655    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
151656    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
151657    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
151658    +   end;
MPRINT(EM_DIAGRAM):   end;
151659    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
151660    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
151661    +   end;
MPRINT(EM_DIAGRAM):   end;
151662    +   else do;
MPRINT(EM_DIAGRAM):   else do;
151663    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
151664    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
151665    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
151666    +   end;
MPRINT(EM_DIAGRAM):   end;
151667    +end;
MPRINT(EM_DIAGRAM):   end;
151668    +
151669    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
151670    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
151671    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
151672    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
151673    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
151674    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
151675    +end;
MPRINT(EM_DIAGRAM):   end;
151676    +else do;
MPRINT(EM_DIAGRAM):   else do;
151677    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
151678    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
151679    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
151680    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
151681    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
151682    +   end;
MPRINT(EM_DIAGRAM):   end;
151683    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
151684    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
151685    +   end;
MPRINT(EM_DIAGRAM):   end;
151686    +   else do;
MPRINT(EM_DIAGRAM):   else do;
151687    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
151688    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
151689    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
151690    +   end;
MPRINT(EM_DIAGRAM):   end;
151691    +end;
MPRINT(EM_DIAGRAM):   end;
151692    +
151693    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
151694    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
151695    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
151696    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
151697    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
151698    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
151699    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
151700    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
151701    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
151702    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
151703    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
151704    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
151705    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
151706    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
151707    +end;
MPRINT(EM_DIAGRAM):   end;
151708    +else do;
MPRINT(EM_DIAGRAM):   else do;
151709    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
151710    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
151711    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
151712    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
151713    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
151714    +   end;
MPRINT(EM_DIAGRAM):   end;
151715    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
151716    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
151717    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
151718    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
151719    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
151720    +   end;
MPRINT(EM_DIAGRAM):   end;
151721    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
151722    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
151723    +   end;
MPRINT(EM_DIAGRAM):   end;
151724    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
151725    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
151726    +   end;
MPRINT(EM_DIAGRAM):   end;
151727    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
151728    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
151729    +   end;
MPRINT(EM_DIAGRAM):   end;
151730    +   else do;
MPRINT(EM_DIAGRAM):   else do;
151731    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
151732    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
151733    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
151734    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
151735    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
151736    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
151737    +   end;
MPRINT(EM_DIAGRAM):   end;
151738    +end;
MPRINT(EM_DIAGRAM):   end;
151739    +
151740    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
151741    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
151742    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
151743    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
151744    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
151745    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
151746    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
151747    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
151748    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
151749    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
151750    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
151751    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
151752    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
151753    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
151754    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
151755    +end;
MPRINT(EM_DIAGRAM):   end;
151756    +else do;
MPRINT(EM_DIAGRAM):   else do;
151757    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
151758    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
151759    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
151760    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
151761    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
151762    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
151763    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
151764    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
151765    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
151766    +         end;
MPRINT(EM_DIAGRAM):   end;
151767    +         else do;
MPRINT(EM_DIAGRAM):   else do;
151768    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
151769    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
151770    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
151771    +            end;
MPRINT(EM_DIAGRAM):   end;
151772    +         end;
MPRINT(EM_DIAGRAM):   end;
151773    +      end;
MPRINT(EM_DIAGRAM):   end;
151774    +      else do;
MPRINT(EM_DIAGRAM):   else do;
151775    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
151776    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
151777    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
151778    +         end;
MPRINT(EM_DIAGRAM):   end;
151779    +      end;
MPRINT(EM_DIAGRAM):   end;
151780    +   end;
MPRINT(EM_DIAGRAM):   end;
151781    +   else do;
MPRINT(EM_DIAGRAM):   else do;
151782    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
151783    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
151784    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
151785    +      end;
MPRINT(EM_DIAGRAM):   end;
151786    +      else do;
MPRINT(EM_DIAGRAM):   else do;
151787    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
151788    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
151789    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
151790    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
151791    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
151792    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
151793    +         end;
MPRINT(EM_DIAGRAM):   end;
151794    +      end;
MPRINT(EM_DIAGRAM):   end;
151795    +   end;
MPRINT(EM_DIAGRAM):   end;
151796    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
151797    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
151798    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
151799    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
151800    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
151801    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
151802    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
151803    +   end;
MPRINT(EM_DIAGRAM):   end;
151804    +end;
MPRINT(EM_DIAGRAM):   end;
151805    +
151806    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
151807    +*** Checking missing input Interval
151808    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
151809    +
151810    +IF NMISS(
151811    +   Income ,
151812    +   Kidhome ,
151813    +   MntFishProducts ,
151814    +   MntFruits ,
151815    +   MntGoldProds ,
151816    +   MntMeatProducts ,
151817    +   MntSweetProducts ,
151818    +   MntWines ,
151819    +   NumCatalogPurchases ,
151820    +   NumDealsPurchases ,
151821    +   NumStorePurchases ,
151822    +   NumWebPurchases ,
151823    +   NumWebVisitsMonth ,
151824    +   Recency ,
151825    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
151826    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
151827    +
151828    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
151829    +END;
MPRINT(EM_DIAGRAM):   END;
151830    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
151831    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
151832    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
151833    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
151834    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
151835    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
151836    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
151837    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
151838    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
151839    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
151840    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
151841    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
151842    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
151843    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
151844    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
151845    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
151846    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
151847    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
151848    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
151849    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
151850    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
151851    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
151852    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
151853    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
151854    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
151855    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
151856    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
151857    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
151858    +END;
MPRINT(EM_DIAGRAM):   END;
151859    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
151860    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
151861    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
151862    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
151863    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
151864    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
151865    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
151866    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
151867    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
151868    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
151869    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
151870    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
151871    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
151872    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
151873    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
151874    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
151875    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
151876    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
151877    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
151878    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
151879    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
151880    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
151881    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
151882    +   ELSE S_NumCatalogPurchases
151883    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
151884    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
151885    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
151886    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
151887    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
151888    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
151889    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
151890    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
151891    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
151892    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
151893    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
151894    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
151895    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
151896    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
151897    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
151898    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
151899    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
151900    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
151901    +END;
MPRINT(EM_DIAGRAM):   END;
151902    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
151903    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
151904    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
151905    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
151906    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
151907    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
151908    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
151909    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
151910    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
151911    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
151912    +   H11  =     0.87660114046125 * S_Income  +     -0.7994451897827 * S_Kidhome
151913    +          +    -0.08967295716195 * S_MntFishProducts
151914    +          +     0.03184635437516 * S_MntFruits  +    -0.13860895575438 *
151915    +        S_MntGoldProds  +     0.55790460748169 * S_MntMeatProducts
151916    +          +    -0.02806094557115 * S_MntSweetProducts
151917    +          +    -0.14537763592724 * S_MntWines  +     0.76891266523847 *
151918    +        S_NumCatalogPurchases  +     0.16842007461305 * S_NumDealsPurchases
151919    +          +     0.25137876058262 * S_NumStorePurchases
151920    +          +    -0.07865442401292 * S_NumWebPurchases
151921    +          +     1.03197398967259 * S_NumWebVisitsMonth
151922    +          +    -1.26907156503759 * S_Recency  +    -0.76016893316351 *
151923    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.87660114046125 * S_Income + -0.7994451897827 * S_Kidhome +
-0.08967295716195 * S_MntFishProducts + 0.03184635437516 * S_MntFruits + -0.13860895575438 *
S_MntGoldProds + 0.55790460748169 * S_MntMeatProducts + -0.02806094557115 * S_MntSweetProducts
+ -0.14537763592724 * S_MntWines + 0.76891266523847 * S_NumCatalogPurchases + 0.16842007461305
* S_NumDealsPurchases + 0.25137876058262 * S_NumStorePurchases + -0.07865442401292 *
S_NumWebPurchases + 1.03197398967259 * S_NumWebVisitsMonth + -1.26907156503759 * S_Recency +
-0.76016893316351 * S_Teenhome ;
151924    +   H12  =     0.37295000114468 * S_Income  +    -0.12834211496575 * S_Kidhome
151925    +          +     0.19312392388912 * S_MntFishProducts
151926    +          +      0.1561688289137 * S_MntFruits  +     0.04004810938796 *
151927    +        S_MntGoldProds  +     0.32599201739588 * S_MntMeatProducts
151928    +          +       0.204174263605 * S_MntSweetProducts
151929    +          +    -0.11560784817014 * S_MntWines  +     0.12255073568725 *
151930    +        S_NumCatalogPurchases  +    -0.05543734180218 * S_NumDealsPurchases
151931    +          +     0.07747830335769 * S_NumStorePurchases
151932    +          +     0.07960837555191 * S_NumWebPurchases
151933    +          +     0.02351602389122 * S_NumWebVisitsMonth
151934    +          +     -0.2840853952427 * S_Recency  +    -0.47421627761687 *
151935    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.37295000114468 * S_Income + -0.12834211496575 * S_Kidhome +
0.19312392388912 * S_MntFishProducts + 0.1561688289137 * S_MntFruits + 0.04004810938796 *
S_MntGoldProds + 0.32599201739588 * S_MntMeatProducts + 0.204174263605 * S_MntSweetProducts +
-0.11560784817014 * S_MntWines + 0.12255073568725 * S_NumCatalogPurchases + -0.05543734180218
* S_NumDealsPurchases + 0.07747830335769 * S_NumStorePurchases + 0.07960837555191 *
S_NumWebPurchases + 0.02351602389122 * S_NumWebVisitsMonth + -0.2840853952427 * S_Recency +
-0.47421627761687 * S_Teenhome ;
151936    +   H13  =    -0.33428925248315 * S_Income  +    -0.03845622730742 * S_Kidhome
151937    +          +     0.18733919794636 * S_MntFishProducts
151938    +          +     0.45907982190052 * S_MntFruits  +    -0.48776616433719 *
151939    +        S_MntGoldProds  +    -0.41340481007204 * S_MntMeatProducts
151940    +          +     0.42514606159239 * S_MntSweetProducts
151941    +          +     0.20038001368787 * S_MntWines  +    -1.21708501803782 *
151942    +        S_NumCatalogPurchases  +    -1.06820061274533 * S_NumDealsPurchases
151943    +          +     0.36582106462789 * S_NumStorePurchases
151944    +          +     0.04244777020435 * S_NumWebPurchases
151945    +          +    -0.24296342902503 * S_NumWebVisitsMonth
151946    +          +     0.27451716762947 * S_Recency  +     0.13110477325277 *
151947    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.33428925248315 * S_Income + -0.03845622730742 * S_Kidhome +
0.18733919794636 * S_MntFishProducts + 0.45907982190052 * S_MntFruits + -0.48776616433719 *
S_MntGoldProds + -0.41340481007204 * S_MntMeatProducts + 0.42514606159239 * S_MntSweetProducts
+ 0.20038001368787 * S_MntWines + -1.21708501803782 * S_NumCatalogPurchases +
-1.06820061274533 * S_NumDealsPurchases + 0.36582106462789 * S_NumStorePurchases +
0.04244777020435 * S_NumWebPurchases + -0.24296342902503 * S_NumWebVisitsMonth +
0.27451716762947 * S_Recency + 0.13110477325277 * S_Teenhome ;
151948    +   H14  =    -0.70493412542585 * S_Income  +     0.41202796606799 * S_Kidhome
151949    +          +     0.05986489897572 * S_MntFishProducts
151950    +          +    -0.05040531715469 * S_MntFruits  +       0.051068387592 *
151951    +        S_MntGoldProds  +    -0.13581881662481 * S_MntMeatProducts
151952    +          +    -0.05513370461072 * S_MntSweetProducts
151953    +          +     0.77472084468819 * S_MntWines  +    -0.03211788969126 *
151954    +        S_NumCatalogPurchases  +    -0.24097486430988 * S_NumDealsPurchases
151955    +          +     0.64364674828841 * S_NumStorePurchases
151956    +          +     0.15084748708424 * S_NumWebPurchases
151957    +          +    -0.94144998356377 * S_NumWebVisitsMonth
151958    +          +     1.16778338364599 * S_Recency  +     0.32089861635238 *
151959    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.70493412542585 * S_Income + 0.41202796606799 * S_Kidhome +
0.05986489897572 * S_MntFishProducts + -0.05040531715469 * S_MntFruits + 0.051068387592 *
S_MntGoldProds + -0.13581881662481 * S_MntMeatProducts + -0.05513370461072 *
S_MntSweetProducts + 0.77472084468819 * S_MntWines + -0.03211788969126 * S_NumCatalogPurchases
+ -0.24097486430988 * S_NumDealsPurchases + 0.64364674828841 * S_NumStorePurchases +
0.15084748708424 * S_NumWebPurchases + -0.94144998356377 * S_NumWebVisitsMonth +
1.16778338364599 * S_Recency + 0.32089861635238 * S_Teenhome ;
151960    +   H15  =    -0.15703510827879 * S_Income  +    -0.30977841002562 * S_Kidhome
151961    +          +    -0.14543196273578 * S_MntFishProducts
151962    +          +     0.32223695896711 * S_MntFruits  +    -0.31846203211698 *
151963    +        S_MntGoldProds  +     -1.4125160823105 * S_MntMeatProducts
151964    +          +     0.49374793444169 * S_MntSweetProducts
151965    +          +     0.39699716010219 * S_MntWines  +    -0.88140331687645 *
151966    +        S_NumCatalogPurchases  +    -0.87657222813687 * S_NumDealsPurchases
151967    +          +     1.23754786782746 * S_NumStorePurchases
151968    +          +     1.11316667348511 * S_NumWebPurchases
151969    +          +    -1.08592446439781 * S_NumWebVisitsMonth
151970    +          +     0.66958517589542 * S_Recency  +     0.06799032788481 *
151971    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.15703510827879 * S_Income + -0.30977841002562 * S_Kidhome +
-0.14543196273578 * S_MntFishProducts + 0.32223695896711 * S_MntFruits + -0.31846203211698 *
S_MntGoldProds + -1.4125160823105 * S_MntMeatProducts + 0.49374793444169 * S_MntSweetProducts
+ 0.39699716010219 * S_MntWines + -0.88140331687645 * S_NumCatalogPurchases +
-0.87657222813687 * S_NumDealsPurchases + 1.23754786782746 * S_NumStorePurchases +
1.11316667348511 * S_NumWebPurchases + -1.08592446439781 * S_NumWebVisitsMonth +
0.66958517589542 * S_Recency + 0.06799032788481 * S_Teenhome ;
151972    +   H16  =    -0.10360901553583 * S_Income  +     0.39257497240865 * S_Kidhome
151973    +          +     0.29549884005341 * S_MntFishProducts
151974    +          +     0.04922491353914 * S_MntFruits  +     -0.1412659458221 *
151975    +        S_MntGoldProds  +    -0.12361454534126 * S_MntMeatProducts
151976    +          +    -0.11909215986981 * S_MntSweetProducts
151977    +          +     0.11430484977092 * S_MntWines  +    -0.66235553839539 *
151978    +        S_NumCatalogPurchases  +     0.17261763180198 * S_NumDealsPurchases
151979    +          +     0.30109334594548 * S_NumStorePurchases
151980    +          +     0.01985762767489 * S_NumWebPurchases
151981    +          +     0.44965133281333 * S_NumWebVisitsMonth
151982    +          +     0.32338634259192 * S_Recency  +    -0.04032956941805 *
151983    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.10360901553583 * S_Income + 0.39257497240865 * S_Kidhome +
0.29549884005341 * S_MntFishProducts + 0.04922491353914 * S_MntFruits + -0.1412659458221 *
S_MntGoldProds + -0.12361454534126 * S_MntMeatProducts + -0.11909215986981 *
S_MntSweetProducts + 0.11430484977092 * S_MntWines + -0.66235553839539 * S_NumCatalogPurchases
+ 0.17261763180198 * S_NumDealsPurchases + 0.30109334594548 * S_NumStorePurchases +
0.01985762767489 * S_NumWebPurchases + 0.44965133281333 * S_NumWebVisitsMonth +
0.32338634259192 * S_Recency + -0.04032956941805 * S_Teenhome ;
151984    +   H11  = H11  +    -0.23026310289024 * AcceptedCmp10
151985    +          +    -0.82550012364234 * AcceptedCmp20  +    -0.67764228269441 *
151986    +        AcceptedCmp30  +    -0.51547666117685 * AcceptedCmp40
151987    +          +    -0.36424958084824 * AcceptedCmp50  +       0.119862855783 *
151988    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.23026310289024 * AcceptedCmp10 + -0.82550012364234 *
AcceptedCmp20 + -0.67764228269441 * AcceptedCmp30 + -0.51547666117685 * AcceptedCmp40 +
-0.36424958084824 * AcceptedCmp50 + 0.119862855783 * Complain0 ;
151989    +   H12  = H12  +     0.02722288857426 * AcceptedCmp10
151990    +          +      0.1236576068539 * AcceptedCmp20  +    -0.31265425960737 *
151991    +        AcceptedCmp30  +    -0.25076565034266 * AcceptedCmp40
151992    +          +    -0.20158659730872 * AcceptedCmp50  +    -0.43687103612629 *
151993    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.02722288857426 * AcceptedCmp10 + 0.1236576068539 *
AcceptedCmp20 + -0.31265425960737 * AcceptedCmp30 + -0.25076565034266 * AcceptedCmp40 +
-0.20158659730872 * AcceptedCmp50 + -0.43687103612629 * Complain0 ;
151994    +   H13  = H13  +     0.21852176280571 * AcceptedCmp10
151995    +          +     0.01727991436107 * AcceptedCmp20  +     0.19303261094625 *
151996    +        AcceptedCmp30  +    -0.65492191560509 * AcceptedCmp40
151997    +          +    -0.09636750660684 * AcceptedCmp50  +     0.07579128571046 *
151998    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.21852176280571 * AcceptedCmp10 + 0.01727991436107 *
AcceptedCmp20 + 0.19303261094625 * AcceptedCmp30 + -0.65492191560509 * AcceptedCmp40 +
-0.09636750660684 * AcceptedCmp50 + 0.07579128571046 * Complain0 ;
151999    +   H14  = H14  +     0.20819294353855 * AcceptedCmp10
152000    +          +      0.5159102831901 * AcceptedCmp20  +     0.55295587458643 *
152001    +        AcceptedCmp30  +     0.80682431419623 * AcceptedCmp40
152002    +          +     0.74007057798158 * AcceptedCmp50  +     -0.4573052390807 *
152003    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.20819294353855 * AcceptedCmp10 + 0.5159102831901 *
AcceptedCmp20 + 0.55295587458643 * AcceptedCmp30 + 0.80682431419623 * AcceptedCmp40 +
0.74007057798158 * AcceptedCmp50 + -0.4573052390807 * Complain0 ;
152004    +   H15  = H15  +     1.26330939420524 * AcceptedCmp10
152005    +          +     0.29494505935793 * AcceptedCmp20  +     0.25561322032419 *
152006    +        AcceptedCmp30  +     0.50102236777897 * AcceptedCmp40
152007    +          +     0.20696267245027 * AcceptedCmp50  +    -0.00849145233901 *
152008    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 1.26330939420524 * AcceptedCmp10 + 0.29494505935793 *
AcceptedCmp20 + 0.25561322032419 * AcceptedCmp30 + 0.50102236777897 * AcceptedCmp40 +
0.20696267245027 * AcceptedCmp50 + -0.00849145233901 * Complain0 ;
152009    +   H16  = H16  +     0.03638428330381 * AcceptedCmp10
152010    +          +     0.27994215452657 * AcceptedCmp20  +    -0.03861840445025 *
152011    +        AcceptedCmp30  +      0.3398057347433 * AcceptedCmp40
152012    +          +    -0.00738335957724 * AcceptedCmp50  +      0.0447804375799 *
152013    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.03638428330381 * AcceptedCmp10 + 0.27994215452657 *
AcceptedCmp20 + -0.03861840445025 * AcceptedCmp30 + 0.3398057347433 * AcceptedCmp40 +
-0.00738335957724 * AcceptedCmp50 + 0.0447804375799 * Complain0 ;
152014    +   H11  = H11  +     0.27482405283962 * Education2n_Cycle
152015    +          +     0.11084012456612 * EducationBasic  +    -0.23835071987159 *
152016    +        EducationGraduation  +    -0.10167082180552 * EducationMaster
152017    +          +     0.51015833145636 * Marital_StatusDivorced
152018    +          +     -1.1653662063616 * Marital_StatusMarried
152019    +          +     1.19396547750441 * Marital_StatusSingle
152020    +          +    -0.99605751789992 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.27482405283962 * Education2n_Cycle + 0.11084012456612 *
EducationBasic + -0.23835071987159 * EducationGraduation + -0.10167082180552 * EducationMaster
+ 0.51015833145636 * Marital_StatusDivorced + -1.1653662063616 * Marital_StatusMarried +
1.19396547750441 * Marital_StatusSingle + -0.99605751789992 * Marital_StatusTogether ;
152021    +   H12  = H12  +    -0.05268347704739 * Education2n_Cycle
152022    +          +     0.19362065968028 * EducationBasic  +    -0.26784257195414 *
152023    +        EducationGraduation  +     0.16650577465959 * EducationMaster
152024    +          +     0.09154288513995 * Marital_StatusDivorced
152025    +          +     0.06725684628382 * Marital_StatusMarried
152026    +          +     0.11327659191494 * Marital_StatusSingle
152027    +          +     0.01793778876811 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.05268347704739 * Education2n_Cycle + 0.19362065968028 *
EducationBasic + -0.26784257195414 * EducationGraduation + 0.16650577465959 * EducationMaster
+ 0.09154288513995 * Marital_StatusDivorced + 0.06725684628382 * Marital_StatusMarried +
0.11327659191494 * Marital_StatusSingle + 0.01793778876811 * Marital_StatusTogether ;
152028    +   H13  = H13  +     -0.1027084329077 * Education2n_Cycle
152029    +          +    -0.01342449140757 * EducationBasic  +    -0.35627920427273 *
152030    +        EducationGraduation  +    -0.05554656531793 * EducationMaster
152031    +          +     0.37591653615852 * Marital_StatusDivorced
152032    +          +    -0.05024236790132 * Marital_StatusMarried
152033    +          +    -0.28317154997144 * Marital_StatusSingle
152034    +          +    -0.19247490223101 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.1027084329077 * Education2n_Cycle + -0.01342449140757 *
EducationBasic + -0.35627920427273 * EducationGraduation + -0.05554656531793 * EducationMaster
+ 0.37591653615852 * Marital_StatusDivorced + -0.05024236790132 * Marital_StatusMarried +
-0.28317154997144 * Marital_StatusSingle + -0.19247490223101 * Marital_StatusTogether ;
152035    +   H14  = H14  +     -0.4162491480577 * Education2n_Cycle
152036    +          +     0.38075572764074 * EducationBasic  +    -0.28169469529121 *
152037    +        EducationGraduation  +       0.638986138084 * EducationMaster
152038    +          +    -0.44885292450558 * Marital_StatusDivorced
152039    +          +     0.78958791519299 * Marital_StatusMarried
152040    +          +    -0.09688714431356 * Marital_StatusSingle
152041    +          +     0.84239030196202 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.4162491480577 * Education2n_Cycle + 0.38075572764074 *
EducationBasic + -0.28169469529121 * EducationGraduation + 0.638986138084 * EducationMaster +
-0.44885292450558 * Marital_StatusDivorced + 0.78958791519299 * Marital_StatusMarried +
-0.09688714431356 * Marital_StatusSingle + 0.84239030196202 * Marital_StatusTogether ;
152042    +   H15  = H15  +     0.33126657974568 * Education2n_Cycle
152043    +          +     0.44539039262703 * EducationBasic  +    -0.09154902903865 *
152044    +        EducationGraduation  +    -0.26400363440725 * EducationMaster
152045    +          +    -0.30801073895989 * Marital_StatusDivorced
152046    +          +     -0.1285150749223 * Marital_StatusMarried
152047    +          +     0.06775542164414 * Marital_StatusSingle
152048    +          +    -0.13032366945766 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.33126657974568 * Education2n_Cycle + 0.44539039262703 *
EducationBasic + -0.09154902903865 * EducationGraduation + -0.26400363440725 * EducationMaster
+ -0.30801073895989 * Marital_StatusDivorced + -0.1285150749223 * Marital_StatusMarried +
0.06775542164414 * Marital_StatusSingle + -0.13032366945766 * Marital_StatusTogether ;
152049    +   H16  = H16  +     0.02030175222681 * Education2n_Cycle
152050    +          +    -0.19579401096879 * EducationBasic  +      0.2070703930869 *
152051    +        EducationGraduation  +    -0.40706983167068 * EducationMaster
152052    +          +     0.22193599090368 * Marital_StatusDivorced
152053    +          +    -0.54544672042168 * Marital_StatusMarried
152054    +          +    -0.02237436019864 * Marital_StatusSingle
152055    +          +    -0.21979468164854 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.02030175222681 * Education2n_Cycle + -0.19579401096879 *
EducationBasic + 0.2070703930869 * EducationGraduation + -0.40706983167068 * EducationMaster +
0.22193599090368 * Marital_StatusDivorced + -0.54544672042168 * Marital_StatusMarried +
-0.02237436019864 * Marital_StatusSingle + -0.21979468164854 * Marital_StatusTogether ;
152056    +   H11  =    -1.24550293901788 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.24550293901788 + H11 ;
152057    +   H12  =     0.36762263942809 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.36762263942809 + H12 ;
152058    +   H13  =     0.07010867577103 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.07010867577103 + H13 ;
152059    +   H14  =    -1.94014549272156 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -1.94014549272156 + H14 ;
152060    +   H15  =     0.17666656180153 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.17666656180153 + H15 ;
152061    +   H16  =    -1.64626406576709 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.64626406576709 + H16 ;
152062    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
152063    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
152064    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
152065    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
152066    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
152067    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
152068    +END;
MPRINT(EM_DIAGRAM):   END;
152069    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
152070    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
152071    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
152072    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
152073    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
152074    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
152075    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
152076    +END;
MPRINT(EM_DIAGRAM):   END;
152077    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
152078    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
152079    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
152080    +
152081    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
152082    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
152083    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
152084    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
152085    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
152086    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
152087    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
152088    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
152089    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
152090    +end;
MPRINT(EM_DIAGRAM):   end;
152091    +else do;
MPRINT(EM_DIAGRAM):   else do;
152092    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
152093    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
152094    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
152095    +   end;
MPRINT(EM_DIAGRAM):   end;
152096    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
152097    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
152098    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
152099    +   end;
MPRINT(EM_DIAGRAM):   end;
152100    +   else do;
MPRINT(EM_DIAGRAM):   else do;
152101    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
152102    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
152103    +   end;
MPRINT(EM_DIAGRAM):   end;
152104    +end;
MPRINT(EM_DIAGRAM):   end;
152105    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
152106    +   P_DepVar1  =     4.21126046696691 * H11  +      0.6565061288056 * H12
152107    +          +    -1.92484011508628 * H13  +    -3.74020722142387 * H14
152108    +          +    -3.27353026762143 * H15  +     -1.2596922869974 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.21126046696691 * H11 + 0.6565061288056 * H12 +
-1.92484011508628 * H13 + -3.74020722142387 * H14 + -3.27353026762143 * H15 + -1.2596922869974
* H16 ;
152109    +   P_DepVar1  =    -1.36806658950323 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.36806658950323 + P_DepVar1 ;
152110    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
152111    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
152112    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
152113    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
152114    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
152115    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
152116    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
152117    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
152118    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
152119    +END;
MPRINT(EM_DIAGRAM):   END;
152120    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
152121    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
152122    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
152123    +END;
MPRINT(EM_DIAGRAM):   END;
152124    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
152125    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
152126    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
152127    +END;
MPRINT(EM_DIAGRAM):   END;
152128    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
152129    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
152130    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
152131    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
152132    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
152133    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
152134    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
152135    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
152136    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
152137    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
152138    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
152139    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
152140    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
152141    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
152142    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
152143    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
152144    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
152145    +END;
MPRINT(EM_DIAGRAM):   END;
152146    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
152147    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
152148    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
152149    +drop
152150    +H11
152151    +H12
152152    +H13
152153    +H14
152154    +H15
152155    +H16
152156    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
152157    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
152158    +* Renaming variables for Neural35;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural35;
152159    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
152160    +* Renaming Posterior variables for Neural35;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural35;
152161    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
152162    +drop Neural35_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural35_P_DepVar1;
152163    +Neural35_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural35_P_DepVar1 = P_DepVar1;
152164    +drop Neural35_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural35_P_DepVar0;
152165    +Neural35_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural35_P_DepVar0 = P_DepVar0;
152166    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
152167    +* Renaming _WARN_ variable for Neural35;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural35;
152168    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
152169    +length Neural35_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural35_WARN_ $4;
152170    +drop Neural35_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural35_WARN_;
152171    +Neural35_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural35_WARN_ = _WARN_;
152172    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
152173    +* Ensmbl22: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Scoring Code of model 7 of 7;
152174    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
152175    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
152176    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
152177    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
152178    +* NODE: Neural32;
MPRINT(EM_DIAGRAM):   * NODE: Neural32;
152179    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
152180    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
152181    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
152182    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
152183    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
152184    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
152185    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
152186    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
152187    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
152188    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
152189    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
152190    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
152191    +LENGTH _WARN_ $4
152192    +      F_DepVar  $ 12
152193    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
152194    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
152195    +
152196    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
152197    +
152198    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
152199    +
152200    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
152201    +
152202    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
152203    +
152204    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
152205    +
152206    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
152207    +
152208    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
152209    +
152210    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
152211    +
152212    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
152213    +
152214    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
152215    +
152216    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
152217    +
152218    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
152219    +
152220    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
152221    +
152222    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
152223    +
152224    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
152225    +
152226    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
152227    +
152228    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
152229    +
152230    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
152231    +
152232    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
152233    +
152234    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
152235    +
152236    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
152237    +
152238    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
152239    +
152240    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
152241    +
152242    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
152243    +
152244    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
152245    +
152246    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
152247    +
152248    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
152249    +
152250    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
152251    +
152252    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
152253    +
152254    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
152255    +
152256    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
152257    +
152258    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
152259    +
152260    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
152261    +
152262    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
152263    +
152264    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
152265    +
152266    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
152267    +
152268    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
152269    +
152270    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
152271    +
152272    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
152273    +
152274    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
152275    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
152276    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
152277    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
152278    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
152279    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
152280    +end;
MPRINT(EM_DIAGRAM):   end;
152281    +else do;
MPRINT(EM_DIAGRAM):   else do;
152282    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
152283    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
152284    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
152285    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
152286    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
152287    +   end;
MPRINT(EM_DIAGRAM):   end;
152288    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
152289    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
152290    +   end;
MPRINT(EM_DIAGRAM):   end;
152291    +   else do;
MPRINT(EM_DIAGRAM):   else do;
152292    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
152293    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
152294    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
152295    +   end;
MPRINT(EM_DIAGRAM):   end;
152296    +end;
MPRINT(EM_DIAGRAM):   end;
152297    +
152298    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
152299    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
152300    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
152301    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
152302    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
152303    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
152304    +end;
MPRINT(EM_DIAGRAM):   end;
152305    +else do;
MPRINT(EM_DIAGRAM):   else do;
152306    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
152307    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
152308    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
152309    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
152310    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
152311    +   end;
MPRINT(EM_DIAGRAM):   end;
152312    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
152313    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
152314    +   end;
MPRINT(EM_DIAGRAM):   end;
152315    +   else do;
MPRINT(EM_DIAGRAM):   else do;
152316    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
152317    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
152318    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
152319    +   end;
MPRINT(EM_DIAGRAM):   end;
152320    +end;
MPRINT(EM_DIAGRAM):   end;
152321    +
152322    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
152323    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
152324    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
152325    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
152326    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
152327    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
152328    +end;
MPRINT(EM_DIAGRAM):   end;
152329    +else do;
MPRINT(EM_DIAGRAM):   else do;
152330    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
152331    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
152332    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
152333    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
152334    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
152335    +   end;
MPRINT(EM_DIAGRAM):   end;
152336    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
152337    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
152338    +   end;
MPRINT(EM_DIAGRAM):   end;
152339    +   else do;
MPRINT(EM_DIAGRAM):   else do;
152340    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
152341    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
152342    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
152343    +   end;
MPRINT(EM_DIAGRAM):   end;
152344    +end;
MPRINT(EM_DIAGRAM):   end;
152345    +
152346    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
152347    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
152348    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
152349    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
152350    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
152351    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
152352    +end;
MPRINT(EM_DIAGRAM):   end;
152353    +else do;
MPRINT(EM_DIAGRAM):   else do;
152354    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
152355    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
152356    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
152357    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
152358    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
152359    +   end;
MPRINT(EM_DIAGRAM):   end;
152360    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
152361    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
152362    +   end;
MPRINT(EM_DIAGRAM):   end;
152363    +   else do;
MPRINT(EM_DIAGRAM):   else do;
152364    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
152365    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
152366    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
152367    +   end;
MPRINT(EM_DIAGRAM):   end;
152368    +end;
MPRINT(EM_DIAGRAM):   end;
152369    +
152370    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
152371    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
152372    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
152373    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
152374    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
152375    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
152376    +end;
MPRINT(EM_DIAGRAM):   end;
152377    +else do;
MPRINT(EM_DIAGRAM):   else do;
152378    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
152379    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
152380    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
152381    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
152382    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
152383    +   end;
MPRINT(EM_DIAGRAM):   end;
152384    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
152385    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
152386    +   end;
MPRINT(EM_DIAGRAM):   end;
152387    +   else do;
MPRINT(EM_DIAGRAM):   else do;
152388    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
152389    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
152390    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
152391    +   end;
MPRINT(EM_DIAGRAM):   end;
152392    +end;
MPRINT(EM_DIAGRAM):   end;
152393    +
152394    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
152395    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
152396    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
152397    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
152398    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
152399    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
152400    +end;
MPRINT(EM_DIAGRAM):   end;
152401    +else do;
MPRINT(EM_DIAGRAM):   else do;
152402    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
152403    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
152404    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
152405    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
152406    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
152407    +   end;
MPRINT(EM_DIAGRAM):   end;
152408    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
152409    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
152410    +   end;
MPRINT(EM_DIAGRAM):   end;
152411    +   else do;
MPRINT(EM_DIAGRAM):   else do;
152412    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
152413    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
152414    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
152415    +   end;
MPRINT(EM_DIAGRAM):   end;
152416    +end;
MPRINT(EM_DIAGRAM):   end;
152417    +
152418    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
152419    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
152420    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
152421    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
152422    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
152423    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
152424    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
152425    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
152426    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
152427    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
152428    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
152429    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
152430    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
152431    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
152432    +end;
MPRINT(EM_DIAGRAM):   end;
152433    +else do;
MPRINT(EM_DIAGRAM):   else do;
152434    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
152435    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
152436    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
152437    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
152438    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
152439    +   end;
MPRINT(EM_DIAGRAM):   end;
152440    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
152441    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
152442    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
152443    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
152444    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
152445    +   end;
MPRINT(EM_DIAGRAM):   end;
152446    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
152447    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
152448    +   end;
MPRINT(EM_DIAGRAM):   end;
152449    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
152450    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
152451    +   end;
MPRINT(EM_DIAGRAM):   end;
152452    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
152453    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
152454    +   end;
MPRINT(EM_DIAGRAM):   end;
152455    +   else do;
MPRINT(EM_DIAGRAM):   else do;
152456    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
152457    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
152458    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
152459    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
152460    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
152461    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
152462    +   end;
MPRINT(EM_DIAGRAM):   end;
152463    +end;
MPRINT(EM_DIAGRAM):   end;
152464    +
152465    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
152466    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
152467    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
152468    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
152469    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
152470    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
152471    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
152472    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
152473    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
152474    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
152475    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
152476    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
152477    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
152478    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
152479    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
152480    +end;
MPRINT(EM_DIAGRAM):   end;
152481    +else do;
MPRINT(EM_DIAGRAM):   else do;
152482    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
152483    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
152484    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
152485    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
152486    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
152487    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
152488    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
152489    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
152490    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
152491    +         end;
MPRINT(EM_DIAGRAM):   end;
152492    +         else do;
MPRINT(EM_DIAGRAM):   else do;
152493    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
152494    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
152495    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
152496    +            end;
MPRINT(EM_DIAGRAM):   end;
152497    +         end;
MPRINT(EM_DIAGRAM):   end;
152498    +      end;
MPRINT(EM_DIAGRAM):   end;
152499    +      else do;
MPRINT(EM_DIAGRAM):   else do;
152500    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
152501    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
152502    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
152503    +         end;
MPRINT(EM_DIAGRAM):   end;
152504    +      end;
MPRINT(EM_DIAGRAM):   end;
152505    +   end;
MPRINT(EM_DIAGRAM):   end;
152506    +   else do;
MPRINT(EM_DIAGRAM):   else do;
152507    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
152508    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
152509    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
152510    +      end;
MPRINT(EM_DIAGRAM):   end;
152511    +      else do;
MPRINT(EM_DIAGRAM):   else do;
152512    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
152513    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
152514    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
152515    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
152516    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
152517    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
152518    +         end;
MPRINT(EM_DIAGRAM):   end;
152519    +      end;
MPRINT(EM_DIAGRAM):   end;
152520    +   end;
MPRINT(EM_DIAGRAM):   end;
152521    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
152522    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
152523    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
152524    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
152525    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
152526    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
152527    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
152528    +   end;
MPRINT(EM_DIAGRAM):   end;
152529    +end;
MPRINT(EM_DIAGRAM):   end;
152530    +
152531    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
152532    +*** Checking missing input Interval
152533    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
152534    +
152535    +IF NMISS(
152536    +   Income ,
152537    +   Kidhome ,
152538    +   MntFishProducts ,
152539    +   MntFruits ,
152540    +   MntGoldProds ,
152541    +   MntMeatProducts ,
152542    +   MntSweetProducts ,
152543    +   MntWines ,
152544    +   NumCatalogPurchases ,
152545    +   NumDealsPurchases ,
152546    +   NumStorePurchases ,
152547    +   NumWebPurchases ,
152548    +   NumWebVisitsMonth ,
152549    +   Recency ,
152550    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
152551    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
152552    +
152553    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
152554    +END;
MPRINT(EM_DIAGRAM):   END;
152555    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
152556    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
152557    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
152558    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
152559    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
152560    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
152561    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
152562    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
152563    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
152564    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
152565    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
152566    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
152567    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
152568    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
152569    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
152570    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
152571    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
152572    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
152573    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
152574    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
152575    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
152576    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
152577    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
152578    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
152579    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
152580    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
152581    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
152582    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
152583    +END;
MPRINT(EM_DIAGRAM):   END;
152584    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
152585    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
152586    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
152587    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
152588    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
152589    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
152590    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
152591    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
152592    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
152593    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
152594    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
152595    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
152596    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
152597    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
152598    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
152599    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
152600    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
152601    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
152602    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
152603    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
152604    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
152605    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
152606    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
152607    +   ELSE S_NumCatalogPurchases
152608    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
152609    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
152610    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
152611    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
152612    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
152613    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
152614    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
152615    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
152616    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
152617    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
152618    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
152619    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
152620    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
152621    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
152622    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
152623    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
152624    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
152625    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
152626    +END;
MPRINT(EM_DIAGRAM):   END;
152627    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
152628    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
152629    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
152630    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
152631    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
152632    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
152633    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
152634    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
152635    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
152636    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
152637    +   H11  =     1.40261108800308 * S_Income  +     -0.8062097507842 * S_Kidhome
152638    +          +    -0.12974862644982 * S_MntFishProducts
152639    +          +     0.08065642800368 * S_MntFruits  +    -0.12102130003972 *
152640    +        S_MntGoldProds  +     0.19226249622126 * S_MntMeatProducts
152641    +          +    -0.12290326901613 * S_MntSweetProducts
152642    +          +     0.07790241176978 * S_MntWines  +     0.36123042724896 *
152643    +        S_NumCatalogPurchases  +    -0.01034406765754 * S_NumDealsPurchases
152644    +          +     0.09738032540137 * S_NumStorePurchases
152645    +          +     0.44459515215205 * S_NumWebPurchases
152646    +          +      0.8471075994578 * S_NumWebVisitsMonth
152647    +          +    -1.10667985160899 * S_Recency  +    -0.88509832868515 *
152648    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 1.40261108800308 * S_Income + -0.8062097507842 * S_Kidhome +
-0.12974862644982 * S_MntFishProducts + 0.08065642800368 * S_MntFruits + -0.12102130003972 *
S_MntGoldProds + 0.19226249622126 * S_MntMeatProducts + -0.12290326901613 * S_MntSweetProducts
+ 0.07790241176978 * S_MntWines + 0.36123042724896 * S_NumCatalogPurchases + -0.01034406765754
* S_NumDealsPurchases + 0.09738032540137 * S_NumStorePurchases + 0.44459515215205 *
S_NumWebPurchases + 0.8471075994578 * S_NumWebVisitsMonth + -1.10667985160899 * S_Recency +
-0.88509832868515 * S_Teenhome ;
152649    +   H12  =     0.51266936686642 * S_Income  +     0.26909433357851 * S_Kidhome
152650    +          +     0.02406077596811 * S_MntFishProducts
152651    +          +    -0.57443793453522 * S_MntFruits  +     0.36824731232149 *
152652    +        S_MntGoldProds  +     0.40177289143061 * S_MntMeatProducts
152653    +          +     -0.1147507059349 * S_MntSweetProducts
152654    +          +    -0.66379351187459 * S_MntWines  +     1.33407347415468 *
152655    +        S_NumCatalogPurchases  +     1.00633891197299 * S_NumDealsPurchases
152656    +          +    -0.23920969262322 * S_NumStorePurchases
152657    +          +     -0.6008837862932 * S_NumWebPurchases
152658    +          +     0.26759743722885 * S_NumWebVisitsMonth
152659    +          +    -0.42755419464125 * S_Recency  +    -0.14471776361394 *
152660    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.51266936686642 * S_Income + 0.26909433357851 * S_Kidhome +
0.02406077596811 * S_MntFishProducts + -0.57443793453522 * S_MntFruits + 0.36824731232149 *
S_MntGoldProds + 0.40177289143061 * S_MntMeatProducts + -0.1147507059349 * S_MntSweetProducts
+ -0.66379351187459 * S_MntWines + 1.33407347415468 * S_NumCatalogPurchases + 1.00633891197299
* S_NumDealsPurchases + -0.23920969262322 * S_NumStorePurchases + -0.6008837862932 *
S_NumWebPurchases + 0.26759743722885 * S_NumWebVisitsMonth + -0.42755419464125 * S_Recency +
-0.14471776361394 * S_Teenhome ;
152661    +   H13  =    -0.19807308698832 * S_Income  +     0.25934675474849 * S_Kidhome
152662    +          +     0.04398331533724 * S_MntFishProducts
152663    +          +    -0.00090357598988 * S_MntFruits  +     0.05139545341773 *
152664    +        S_MntGoldProds  +    -0.74617114336019 * S_MntMeatProducts
152665    +          +     0.00552488718744 * S_MntSweetProducts
152666    +          +     0.47194407197012 * S_MntWines  +    -0.35149551848487 *
152667    +        S_NumCatalogPurchases  +    -0.30232522133093 * S_NumDealsPurchases
152668    +          +     0.60058189155105 * S_NumStorePurchases
152669    +          +     0.51423374855856 * S_NumWebPurchases
152670    +          +     -0.9075304423321 * S_NumWebVisitsMonth
152671    +          +     0.83597739226791 * S_Recency  +     0.15783202762709 *
152672    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.19807308698832 * S_Income + 0.25934675474849 * S_Kidhome +
0.04398331533724 * S_MntFishProducts + -0.00090357598988 * S_MntFruits + 0.05139545341773 *
S_MntGoldProds + -0.74617114336019 * S_MntMeatProducts + 0.00552488718744 * S_MntSweetProducts
+ 0.47194407197012 * S_MntWines + -0.35149551848487 * S_NumCatalogPurchases +
-0.30232522133093 * S_NumDealsPurchases + 0.60058189155105 * S_NumStorePurchases +
0.51423374855856 * S_NumWebPurchases + -0.9075304423321 * S_NumWebVisitsMonth +
0.83597739226791 * S_Recency + 0.15783202762709 * S_Teenhome ;
152673    +   H11  = H11  +    -0.26274045665457 * AcceptedCmp10
152674    +          +    -0.86105702939371 * AcceptedCmp20  +    -0.50476270558977 *
152675    +        AcceptedCmp30  +    -0.84284126473343 * AcceptedCmp40
152676    +          +     0.19764907691314 * AcceptedCmp50  +    -0.29305577412263 *
152677    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.26274045665457 * AcceptedCmp10 + -0.86105702939371 *
AcceptedCmp20 + -0.50476270558977 * AcceptedCmp30 + -0.84284126473343 * AcceptedCmp40 +
0.19764907691314 * AcceptedCmp50 + -0.29305577412263 * Complain0 ;
152678    +   H12  = H12  +    -0.27394139847883 * AcceptedCmp10
152679    +          +    -0.14688750266104 * AcceptedCmp20  +    -0.27982299242327 *
152680    +        AcceptedCmp30  +    -0.10465140408787 * AcceptedCmp40
152681    +          +    -0.81681330244218 * AcceptedCmp50  +    -0.28152730217644 *
152682    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.27394139847883 * AcceptedCmp10 + -0.14688750266104 *
AcceptedCmp20 + -0.27982299242327 * AcceptedCmp30 + -0.10465140408787 * AcceptedCmp40 +
-0.81681330244218 * AcceptedCmp50 + -0.28152730217644 * Complain0 ;
152683    +   H13  = H13  +     0.42310780831005 * AcceptedCmp10
152684    +          +     0.41337614261155 * AcceptedCmp20  +     0.41436520641821 *
152685    +        AcceptedCmp30  +     0.08914989208239 * AcceptedCmp40
152686    +          +     0.54013759697695 * AcceptedCmp50  +    -0.19478210268955 *
152687    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.42310780831005 * AcceptedCmp10 + 0.41337614261155 *
AcceptedCmp20 + 0.41436520641821 * AcceptedCmp30 + 0.08914989208239 * AcceptedCmp40 +
0.54013759697695 * AcceptedCmp50 + -0.19478210268955 * Complain0 ;
152688    +   H11  = H11  +     0.40331200702699 * Education2n_Cycle
152689    +          +     0.17202421641945 * EducationBasic  +    -0.29654161092174 *
152690    +        EducationGraduation  +     -0.4835104183635 * EducationMaster
152691    +          +     0.52129580188513 * Marital_StatusDivorced
152692    +          +     -1.5224490339553 * Marital_StatusMarried
152693    +          +     1.05062906057771 * Marital_StatusSingle
152694    +          +    -1.16420887937635 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.40331200702699 * Education2n_Cycle + 0.17202421641945 *
EducationBasic + -0.29654161092174 * EducationGraduation + -0.4835104183635 * EducationMaster
+ 0.52129580188513 * Marital_StatusDivorced + -1.5224490339553 * Marital_StatusMarried +
1.05062906057771 * Marital_StatusSingle + -1.16420887937635 * Marital_StatusTogether ;
152695    +   H12  = H12  +     -0.3488928858263 * Education2n_Cycle
152696    +          +     0.38279680594423 * EducationBasic  +     0.20376044836519 *
152697    +        EducationGraduation  +     0.20697694670185 * EducationMaster
152698    +          +    -0.14428158063317 * Marital_StatusDivorced
152699    +          +     0.22396926143356 * Marital_StatusMarried
152700    +          +    -0.12980854818876 * Marital_StatusSingle
152701    +          +     0.32607015627906 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.3488928858263 * Education2n_Cycle + 0.38279680594423 *
EducationBasic + 0.20376044836519 * EducationGraduation + 0.20697694670185 * EducationMaster +
-0.14428158063317 * Marital_StatusDivorced + 0.22396926143356 * Marital_StatusMarried +
-0.12980854818876 * Marital_StatusSingle + 0.32607015627906 * Marital_StatusTogether ;
152702    +   H13  = H13  +    -0.18351418824199 * Education2n_Cycle
152703    +          +     0.53417952447263 * EducationBasic  +    -0.14333929289628 *
152704    +        EducationGraduation  +     0.04513004774082 * EducationMaster
152705    +          +    -0.25615797303064 * Marital_StatusDivorced
152706    +          +     0.18825506199046 * Marital_StatusMarried
152707    +          +    -0.24607556819871 * Marital_StatusSingle
152708    +          +     0.29531673844201 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.18351418824199 * Education2n_Cycle + 0.53417952447263 *
EducationBasic + -0.14333929289628 * EducationGraduation + 0.04513004774082 * EducationMaster
+ -0.25615797303064 * Marital_StatusDivorced + 0.18825506199046 * Marital_StatusMarried +
-0.24607556819871 * Marital_StatusSingle + 0.29531673844201 * Marital_StatusTogether ;
152709    +   H11  =    -1.29289362679377 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.29289362679377 + H11 ;
152710    +   H12  =     0.88724419151235 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.88724419151235 + H12 ;
152711    +   H13  =    -0.51194544699467 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.51194544699467 + H13 ;
152712    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
152713    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
152714    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
152715    +END;
MPRINT(EM_DIAGRAM):   END;
152716    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
152717    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
152718    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
152719    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
152720    +END;
MPRINT(EM_DIAGRAM):   END;
152721    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
152722    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
152723    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
152724    +
152725    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
152726    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
152727    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
152728    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
152729    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
152730    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
152731    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
152732    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
152733    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
152734    +end;
MPRINT(EM_DIAGRAM):   end;
152735    +else do;
MPRINT(EM_DIAGRAM):   else do;
152736    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
152737    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
152738    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
152739    +   end;
MPRINT(EM_DIAGRAM):   end;
152740    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
152741    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
152742    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
152743    +   end;
MPRINT(EM_DIAGRAM):   end;
152744    +   else do;
MPRINT(EM_DIAGRAM):   else do;
152745    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
152746    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
152747    +   end;
MPRINT(EM_DIAGRAM):   end;
152748    +end;
MPRINT(EM_DIAGRAM):   end;
152749    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
152750    +   P_DepVar1  =     4.44251020865882 * H11  +     2.67139161773156 * H12
152751    +          +    -4.73549395111184 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.44251020865882 * H11 + 2.67139161773156 * H12 +
-4.73549395111184 * H13 ;
152752    +   P_DepVar1  =     0.45492690116644 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.45492690116644 + P_DepVar1 ;
152753    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
152754    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
152755    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
152756    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
152757    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
152758    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
152759    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
152760    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
152761    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
152762    +END;
MPRINT(EM_DIAGRAM):   END;
152763    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
152764    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
152765    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
152766    +END;
MPRINT(EM_DIAGRAM):   END;
152767    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
152768    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
152769    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
152770    +END;
MPRINT(EM_DIAGRAM):   END;
152771    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
152772    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
152773    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
152774    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
152775    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
152776    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
152777    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
152778    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
152779    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
152780    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
152781    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
152782    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
152783    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
152784    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
152785    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
152786    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
152787    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
152788    +END;
MPRINT(EM_DIAGRAM):   END;
152789    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
152790    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
152791    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
152792    +drop
152793    +H11
152794    +H12
152795    +H13
152796    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
152797    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
152798    +* Renaming variables for Neural32;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural32;
152799    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
152800    +* Renaming Posterior variables for Neural32;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural32;
152801    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
152802    +drop Neural32_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural32_P_DepVar1;
152803    +Neural32_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural32_P_DepVar1 = P_DepVar1;
152804    +drop Neural32_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural32_P_DepVar0;
152805    +Neural32_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural32_P_DepVar0 = P_DepVar0;
152806    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
152807    +* Renaming _WARN_ variable for Neural32;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural32;
152808    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
152809    +length Neural32_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural32_WARN_ $4;
152810    +drop Neural32_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural32_WARN_;
152811    +Neural32_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural32_WARN_ = _WARN_;
152812    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
152813    +* Ensmbl22: Average Posteriors of 7 models;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Average Posteriors of 7 models;
152814    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
152815    +P_DepVar1 = (
152816    +Neural34_P_DepVar1 +
152817    +AutoNeural46_P_DepVar1 +
152818    +AutoNeural42_P_DepVar1 +
152819    +AutoNeural47_P_DepVar1 +
152820    +Neural30_P_DepVar1 +
152821    +Neural35_P_DepVar1 +
152822    +Neural32_P_DepVar1
152823    +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( Neural34_P_DepVar1 + AutoNeural46_P_DepVar1 +
AutoNeural42_P_DepVar1 + AutoNeural47_P_DepVar1 + Neural30_P_DepVar1 + Neural35_P_DepVar1 +
Neural32_P_DepVar1 )/7;
152824    +P_DepVar0 = (
152825    +Neural34_P_DepVar0 +
152826    +AutoNeural46_P_DepVar0 +
152827    +AutoNeural42_P_DepVar0 +
152828    +AutoNeural47_P_DepVar0 +
152829    +Neural30_P_DepVar0 +
152830    +Neural35_P_DepVar0 +
152831    +Neural32_P_DepVar0
152832    +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( Neural34_P_DepVar0 + AutoNeural46_P_DepVar0 +
AutoNeural42_P_DepVar0 + AutoNeural47_P_DepVar0 + Neural30_P_DepVar0 + Neural35_P_DepVar0 +
Neural32_P_DepVar0 )/7;
152833    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
152834    +* Ensmbl22: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Computing Classification Vars;
152835    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
152836    +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
152837    +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
152838    +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
152839    +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
152840    +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
152841    +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
152842    +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
152843    +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
152844    +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
152845    +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
152846    +end;
MPRINT(EM_DIAGRAM):   end;
152847    +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
152848    +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
152849    +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
152850    +end;
MPRINT(EM_DIAGRAM):   end;
152851    +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
152852    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
152853    +* Ensmbl22: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Producing Unformatted variable;
152854    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
152855    +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
152856    +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
152857    +else
152858    +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
152859    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
152860    +* Ensmbl22: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Computing _WARN_ Variable;
152861    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
152862    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
152863    +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
152864    +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
152865    +if index(NEURAL34_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
152865   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL34_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
152866    +if index(NEURAL34_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
152866   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL34_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
152867    +if index(NEURAL34_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
152867   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL34_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
152868    +if index(NEURAL34_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
152868   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL34_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
152869    +if index(AUTONEURAL46_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
152869   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL46_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
152870    +if index(AUTONEURAL46_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
152870   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL46_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
152871    +if index(AUTONEURAL46_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
152871   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL46_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
152872    +if index(AUTONEURAL46_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
152872   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL46_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
152873    +if index(AUTONEURAL42_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
152873   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL42_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
152874    +if index(AUTONEURAL42_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
152874   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL42_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
152875    +if index(AUTONEURAL42_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
152875   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL42_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
152876    +if index(AUTONEURAL42_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
152876   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL42_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
152877    +if index(AUTONEURAL47_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
152877   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL47_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
152878    +if index(AUTONEURAL47_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
152878   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL47_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
152879    +if index(AUTONEURAL47_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
152879   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL47_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
152880    +if index(AUTONEURAL47_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
152880   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL47_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
152881    +if index(NEURAL30_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
152881   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL30_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
152882    +if index(NEURAL30_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
152882   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL30_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
152883    +if index(NEURAL30_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
152883   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL30_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
152884    +if index(NEURAL30_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
152884   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL30_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
152885    +if index(NEURAL35_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
152885   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL35_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
152886    +if index(NEURAL35_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
152886   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL35_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
152887    +if index(NEURAL35_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
152887   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL35_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
152888    +if index(NEURAL35_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
152888   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL35_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
152889    +if index(NEURAL32_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
152889   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL32_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
152890    +if index(NEURAL32_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
152890   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL32_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
152891    +if index(NEURAL32_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
152891   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL32_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
152892    +if index(NEURAL32_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
152892   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL32_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
152893    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
152894    +* Ensmbl22: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Computing Residual Vars;
152895    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
152896    +if
152897    +F_DepVar NE '1'
152898    +AND F_DepVar NE '0'
152899    +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
152900    +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
152901    +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
152902    +end;
MPRINT(EM_DIAGRAM):   end;
152903    +else do;
MPRINT(EM_DIAGRAM):   else do;
152904    +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
152905    +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
152906    +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
152907    +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
152908    +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
152909    +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
152910    +END;
MPRINT(EM_DIAGRAM):   END;
152911    +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
152912     run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL22_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.NEURAL34_VALIDATE.VIEW used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
152913     quit;
152914     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl22_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error"
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_=
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train:
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl22_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl22_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error"
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_=
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid:
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl22_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl22_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
152974     filename _pref
152974   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural34\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural34\EMPUBLISHSCORE.sas";
152975     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
152976     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural34\EMPUBLISHSCORE.sas.
152977    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
152978    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
152979    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
152980    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
152981    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
152982    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
152983    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
152984    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
152985    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
152986    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
152987    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
152988    +LENGTH _WARN_ $4
152989    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
152990    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
152991    +
152992    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
152993    +
152994    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
152995    +
152996    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
152997    +
152998    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
152999    +
153000    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
153001    +
153002    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
153003    +
153004    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
153005    +
153006    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
153007    +
153008    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
153009    +
153010    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
153011    +
153012    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
153013    +
153014    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
153015    +
153016    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
153017    +
153018    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
153019    +
153020    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
153021    +
153022    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
153023    +
153024    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
153025    +
153026    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
153027    +
153028    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
153029    +
153030    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
153031    +
153032    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
153033    +
153034    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
153035    +
153036    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
153037    +
153038    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
153039    +
153040    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
153041    +
153042    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
153043    +
153044    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
153045    +
153046    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
153047    +
153048    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
153049    +
153050    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
153051    +
153052    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
153053    +
153054    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
153055    +
153056    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
153057    +
153058    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
153059    +
153060    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
153061    +
153062    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
153063    +
153064    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
153065    +
153066    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
153067    +
153068    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
153069    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
153070    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
153071    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
153072    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
153073    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
153074    +end;
MPRINT(EM_DIAGRAM):   end;
153075    +else do;
MPRINT(EM_DIAGRAM):   else do;
153076    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
153077    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
153078    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
153079    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
153080    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
153081    +   end;
MPRINT(EM_DIAGRAM):   end;
153082    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
153083    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
153084    +   end;
MPRINT(EM_DIAGRAM):   end;
153085    +   else do;
MPRINT(EM_DIAGRAM):   else do;
153086    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
153087    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
153088    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
153089    +   end;
MPRINT(EM_DIAGRAM):   end;
153090    +end;
MPRINT(EM_DIAGRAM):   end;
153091    +
153092    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
153093    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
153094    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
153095    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
153096    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
153097    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
153098    +end;
MPRINT(EM_DIAGRAM):   end;
153099    +else do;
MPRINT(EM_DIAGRAM):   else do;
153100    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
153101    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
153102    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
153103    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
153104    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
153105    +   end;
MPRINT(EM_DIAGRAM):   end;
153106    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
153107    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
153108    +   end;
MPRINT(EM_DIAGRAM):   end;
153109    +   else do;
MPRINT(EM_DIAGRAM):   else do;
153110    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
153111    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
153112    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
153113    +   end;
MPRINT(EM_DIAGRAM):   end;
153114    +end;
MPRINT(EM_DIAGRAM):   end;
153115    +
153116    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
153117    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
153118    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
153119    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
153120    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
153121    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
153122    +end;
MPRINT(EM_DIAGRAM):   end;
153123    +else do;
MPRINT(EM_DIAGRAM):   else do;
153124    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
153125    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
153126    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
153127    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
153128    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
153129    +   end;
MPRINT(EM_DIAGRAM):   end;
153130    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
153131    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
153132    +   end;
MPRINT(EM_DIAGRAM):   end;
153133    +   else do;
MPRINT(EM_DIAGRAM):   else do;
153134    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
153135    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
153136    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
153137    +   end;
MPRINT(EM_DIAGRAM):   end;
153138    +end;
MPRINT(EM_DIAGRAM):   end;
153139    +
153140    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
153141    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
153142    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
153143    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
153144    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
153145    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
153146    +end;
MPRINT(EM_DIAGRAM):   end;
153147    +else do;
MPRINT(EM_DIAGRAM):   else do;
153148    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
153149    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
153150    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
153151    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
153152    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
153153    +   end;
MPRINT(EM_DIAGRAM):   end;
153154    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
153155    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
153156    +   end;
MPRINT(EM_DIAGRAM):   end;
153157    +   else do;
MPRINT(EM_DIAGRAM):   else do;
153158    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
153159    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
153160    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
153161    +   end;
MPRINT(EM_DIAGRAM):   end;
153162    +end;
MPRINT(EM_DIAGRAM):   end;
153163    +
153164    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
153165    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
153166    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
153167    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
153168    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
153169    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
153170    +end;
MPRINT(EM_DIAGRAM):   end;
153171    +else do;
MPRINT(EM_DIAGRAM):   else do;
153172    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
153173    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
153174    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
153175    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
153176    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
153177    +   end;
MPRINT(EM_DIAGRAM):   end;
153178    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
153179    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
153180    +   end;
MPRINT(EM_DIAGRAM):   end;
153181    +   else do;
MPRINT(EM_DIAGRAM):   else do;
153182    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
153183    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
153184    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
153185    +   end;
MPRINT(EM_DIAGRAM):   end;
153186    +end;
MPRINT(EM_DIAGRAM):   end;
153187    +
153188    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
153189    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
153190    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
153191    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
153192    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
153193    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
153194    +end;
MPRINT(EM_DIAGRAM):   end;
153195    +else do;
MPRINT(EM_DIAGRAM):   else do;
153196    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
153197    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
153198    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
153199    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
153200    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
153201    +   end;
MPRINT(EM_DIAGRAM):   end;
153202    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
153203    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
153204    +   end;
MPRINT(EM_DIAGRAM):   end;
153205    +   else do;
MPRINT(EM_DIAGRAM):   else do;
153206    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
153207    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
153208    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
153209    +   end;
MPRINT(EM_DIAGRAM):   end;
153210    +end;
MPRINT(EM_DIAGRAM):   end;
153211    +
153212    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
153213    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
153214    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
153215    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
153216    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
153217    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
153218    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
153219    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
153220    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
153221    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
153222    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
153223    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
153224    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
153225    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
153226    +end;
MPRINT(EM_DIAGRAM):   end;
153227    +else do;
MPRINT(EM_DIAGRAM):   else do;
153228    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
153229    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
153230    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
153231    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
153232    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
153233    +   end;
MPRINT(EM_DIAGRAM):   end;
153234    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
153235    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
153236    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
153237    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
153238    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
153239    +   end;
MPRINT(EM_DIAGRAM):   end;
153240    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
153241    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
153242    +   end;
MPRINT(EM_DIAGRAM):   end;
153243    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
153244    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
153245    +   end;
MPRINT(EM_DIAGRAM):   end;
153246    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
153247    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
153248    +   end;
MPRINT(EM_DIAGRAM):   end;
153249    +   else do;
MPRINT(EM_DIAGRAM):   else do;
153250    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
153251    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
153252    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
153253    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
153254    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
153255    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
153256    +   end;
MPRINT(EM_DIAGRAM):   end;
153257    +end;
MPRINT(EM_DIAGRAM):   end;
153258    +
153259    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
153260    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
153261    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
153262    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
153263    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
153264    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
153265    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
153266    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
153267    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
153268    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
153269    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
153270    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
153271    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
153272    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
153273    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
153274    +end;
MPRINT(EM_DIAGRAM):   end;
153275    +else do;
MPRINT(EM_DIAGRAM):   else do;
153276    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
153277    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
153278    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
153279    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
153280    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
153281    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
153282    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
153283    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
153284    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
153285    +         end;
MPRINT(EM_DIAGRAM):   end;
153286    +         else do;
MPRINT(EM_DIAGRAM):   else do;
153287    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
153288    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
153289    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
153290    +            end;
MPRINT(EM_DIAGRAM):   end;
153291    +         end;
MPRINT(EM_DIAGRAM):   end;
153292    +      end;
MPRINT(EM_DIAGRAM):   end;
153293    +      else do;
MPRINT(EM_DIAGRAM):   else do;
153294    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
153295    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
153296    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
153297    +         end;
MPRINT(EM_DIAGRAM):   end;
153298    +      end;
MPRINT(EM_DIAGRAM):   end;
153299    +   end;
MPRINT(EM_DIAGRAM):   end;
153300    +   else do;
MPRINT(EM_DIAGRAM):   else do;
153301    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
153302    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
153303    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
153304    +      end;
MPRINT(EM_DIAGRAM):   end;
153305    +      else do;
MPRINT(EM_DIAGRAM):   else do;
153306    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
153307    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
153308    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
153309    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
153310    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
153311    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
153312    +         end;
MPRINT(EM_DIAGRAM):   end;
153313    +      end;
MPRINT(EM_DIAGRAM):   end;
153314    +   end;
MPRINT(EM_DIAGRAM):   end;
153315    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
153316    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
153317    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
153318    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
153319    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
153320    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
153321    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
153322    +   end;
MPRINT(EM_DIAGRAM):   end;
153323    +end;
MPRINT(EM_DIAGRAM):   end;
153324    +
153325    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
153326    +*** Checking missing input Interval
153327    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
153328    +
153329    +IF NMISS(
153330    +   Income ,
153331    +   Kidhome ,
153332    +   MntFishProducts ,
153333    +   MntFruits ,
153334    +   MntGoldProds ,
153335    +   MntMeatProducts ,
153336    +   MntSweetProducts ,
153337    +   MntWines ,
153338    +   NumCatalogPurchases ,
153339    +   NumDealsPurchases ,
153340    +   NumStorePurchases ,
153341    +   NumWebPurchases ,
153342    +   NumWebVisitsMonth ,
153343    +   Recency ,
153344    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
153345    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
153346    +
153347    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
153348    +END;
MPRINT(EM_DIAGRAM):   END;
153349    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
153350    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
153351    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
153352    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
153353    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
153354    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
153355    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
153356    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
153357    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
153358    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
153359    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
153360    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
153361    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
153362    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
153363    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
153364    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
153365    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
153366    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
153367    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
153368    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
153369    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
153370    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
153371    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
153372    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
153373    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
153374    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
153375    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
153376    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
153377    +END;
MPRINT(EM_DIAGRAM):   END;
153378    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
153379    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
153380    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
153381    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
153382    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
153383    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
153384    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
153385    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
153386    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
153387    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
153388    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
153389    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
153390    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
153391    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
153392    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
153393    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
153394    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
153395    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
153396    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
153397    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
153398    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
153399    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
153400    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
153401    +   ELSE S_NumCatalogPurchases
153402    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
153403    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
153404    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
153405    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
153406    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
153407    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
153408    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
153409    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
153410    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
153411    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
153412    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
153413    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
153414    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
153415    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
153416    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
153417    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
153418    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
153419    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
153420    +END;
MPRINT(EM_DIAGRAM):   END;
153421    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
153422    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
153423    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
153424    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
153425    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
153426    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
153427    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
153428    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
153429    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
153430    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
153431    +   H11  =    -0.81572379016921 * S_Income  +    -0.07670946585348 * S_Kidhome
153432    +          +     0.24367603598167 * S_MntFishProducts
153433    +          +     0.19692980127348 * S_MntFruits  +    -0.03926738185333 *
153434    +        S_MntGoldProds  +    -0.20900804333353 * S_MntMeatProducts
153435    +          +     0.34054806441484 * S_MntSweetProducts
153436    +          +     0.65956211369383 * S_MntWines  +    -0.95375334578522 *
153437    +        S_NumCatalogPurchases  +    -0.73124740368567 * S_NumDealsPurchases
153438    +          +     0.98942946974575 * S_NumStorePurchases
153439    +          +     0.89701206630103 * S_NumWebPurchases
153440    +          +    -1.22878611472154 * S_NumWebVisitsMonth
153441    +          +     1.44981870978354 * S_Recency  +     0.47533125686411 *
153442    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.81572379016921 * S_Income + -0.07670946585348 * S_Kidhome +
0.24367603598167 * S_MntFishProducts + 0.19692980127348 * S_MntFruits + -0.03926738185333 *
S_MntGoldProds + -0.20900804333353 * S_MntMeatProducts + 0.34054806441484 * S_MntSweetProducts
+ 0.65956211369383 * S_MntWines + -0.95375334578522 * S_NumCatalogPurchases +
-0.73124740368567 * S_NumDealsPurchases + 0.98942946974575 * S_NumStorePurchases +
0.89701206630103 * S_NumWebPurchases + -1.22878611472154 * S_NumWebVisitsMonth +
1.44981870978354 * S_Recency + 0.47533125686411 * S_Teenhome ;
153443    +   H12  =    -0.18875145195495 * S_Income  +     0.42230998482453 * S_Kidhome
153444    +          +     0.16683404689723 * S_MntFishProducts
153445    +          +     0.32072658929401 * S_MntFruits  +    -0.12341748032201 *
153446    +        S_MntGoldProds  +    -1.56478754527255 * S_MntMeatProducts
153447    +          +     0.20389084548968 * S_MntSweetProducts
153448    +          +     0.95592931625509 * S_MntWines  +    -0.69996817353755 *
153449    +        S_NumCatalogPurchases  +    -0.92709806328697 * S_NumDealsPurchases
153450    +          +     1.27164659640366 * S_NumStorePurchases
153451    +          +     1.02122194207802 * S_NumWebPurchases
153452    +          +     -1.5111033436803 * S_NumWebVisitsMonth
153453    +          +     1.63712814901544 * S_Recency  +     0.14205116840572 *
153454    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.18875145195495 * S_Income + 0.42230998482453 * S_Kidhome +
0.16683404689723 * S_MntFishProducts + 0.32072658929401 * S_MntFruits + -0.12341748032201 *
S_MntGoldProds + -1.56478754527255 * S_MntMeatProducts + 0.20389084548968 * S_MntSweetProducts
+ 0.95592931625509 * S_MntWines + -0.69996817353755 * S_NumCatalogPurchases +
-0.92709806328697 * S_NumDealsPurchases + 1.27164659640366 * S_NumStorePurchases +
1.02122194207802 * S_NumWebPurchases + -1.5111033436803 * S_NumWebVisitsMonth +
1.63712814901544 * S_Recency + 0.14205116840572 * S_Teenhome ;
153455    +   H13  =     1.02798705354163 * S_Income  +    -0.94411708781921 * S_Kidhome
153456    +          +    -0.03345077166544 * S_MntFishProducts
153457    +          +     0.00038440809349 * S_MntFruits  +    -0.05068379715712 *
153458    +        S_MntGoldProds  +     1.00464705307582 * S_MntMeatProducts
153459    +          +    -0.11948662500951 * S_MntSweetProducts
153460    +          +    -0.52438819731252 * S_MntWines  +     0.98586904866769 *
153461    +        S_NumCatalogPurchases  +     0.09015295226839 * S_NumDealsPurchases
153462    +          +     0.22401914357376 * S_NumStorePurchases
153463    +          +     0.04219877865976 * S_NumWebPurchases
153464    +          +     1.21753334166036 * S_NumWebVisitsMonth
153465    +          +    -1.33712212110081 * S_Recency  +    -0.47582856683655 *
153466    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 1.02798705354163 * S_Income + -0.94411708781921 * S_Kidhome +
-0.03345077166544 * S_MntFishProducts + 0.00038440809349 * S_MntFruits + -0.05068379715712 *
S_MntGoldProds + 1.00464705307582 * S_MntMeatProducts + -0.11948662500951 * S_MntSweetProducts
+ -0.52438819731252 * S_MntWines + 0.98586904866769 * S_NumCatalogPurchases + 0.09015295226839
* S_NumDealsPurchases + 0.22401914357376 * S_NumStorePurchases + 0.04219877865976 *
S_NumWebPurchases + 1.21753334166036 * S_NumWebVisitsMonth + -1.33712212110081 * S_Recency +
-0.47582856683655 * S_Teenhome ;
153467    +   H14  =     0.91431429848834 * S_Income  +    -1.16289676557574 * S_Kidhome
153468    +          +     0.31175257038578 * S_MntFishProducts
153469    +          +     0.08080436076271 * S_MntFruits  +     0.15252288175851 *
153470    +        S_MntGoldProds  +     0.21603546207654 * S_MntMeatProducts
153471    +          +      0.0927253053382 * S_MntSweetProducts
153472    +          +     0.05865323888304 * S_MntWines  +    -0.23426953728277 *
153473    +        S_NumCatalogPurchases  +    -0.46451908614085 * S_NumDealsPurchases
153474    +          +    -0.12667606349662 * S_NumStorePurchases
153475    +          +     0.30148374518724 * S_NumWebPurchases
153476    +          +     0.48934229701658 * S_NumWebVisitsMonth
153477    +          +    -0.83754390793251 * S_Recency  +     -0.4576645462819 *
153478    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.91431429848834 * S_Income + -1.16289676557574 * S_Kidhome +
0.31175257038578 * S_MntFishProducts + 0.08080436076271 * S_MntFruits + 0.15252288175851 *
S_MntGoldProds + 0.21603546207654 * S_MntMeatProducts + 0.0927253053382 * S_MntSweetProducts +
0.05865323888304 * S_MntWines + -0.23426953728277 * S_NumCatalogPurchases + -0.46451908614085
* S_NumDealsPurchases + -0.12667606349662 * S_NumStorePurchases + 0.30148374518724 *
S_NumWebPurchases + 0.48934229701658 * S_NumWebVisitsMonth + -0.83754390793251 * S_Recency +
-0.4576645462819 * S_Teenhome ;
153479    +   H15  =    -0.58161501095664 * S_Income  +     -1.0333658128614 * S_Kidhome
153480    +          +     0.42646725119177 * S_MntFishProducts
153481    +          +     -0.3264621401658 * S_MntFruits  +    -0.74616728524532 *
153482    +        S_MntGoldProds  +    -0.97572068716712 * S_MntMeatProducts
153483    +          +    -0.01493605582616 * S_MntSweetProducts
153484    +          +      0.0311636632685 * S_MntWines  +    -1.68599903767191 *
153485    +        S_NumCatalogPurchases  +    -1.25052648798307 * S_NumDealsPurchases
153486    +          +     0.54256744091258 * S_NumStorePurchases
153487    +          +     0.43065931458468 * S_NumWebPurchases
153488    +          +      0.5935561420466 * S_NumWebVisitsMonth
153489    +          +    -0.45183418369624 * S_Recency  +     0.19260512629844 *
153490    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.58161501095664 * S_Income + -1.0333658128614 * S_Kidhome +
0.42646725119177 * S_MntFishProducts + -0.3264621401658 * S_MntFruits + -0.74616728524532 *
S_MntGoldProds + -0.97572068716712 * S_MntMeatProducts + -0.01493605582616 *
S_MntSweetProducts + 0.0311636632685 * S_MntWines + -1.68599903767191 * S_NumCatalogPurchases
+ -1.25052648798307 * S_NumDealsPurchases + 0.54256744091258 * S_NumStorePurchases +
0.43065931458468 * S_NumWebPurchases + 0.5935561420466 * S_NumWebVisitsMonth +
-0.45183418369624 * S_Recency + 0.19260512629844 * S_Teenhome ;
153491    +   H11  = H11  +     0.61503950219838 * AcceptedCmp10
153492    +          +     0.02945207091619 * AcceptedCmp20  +     0.99151950769472 *
153493    +        AcceptedCmp30  +     1.08987060401718 * AcceptedCmp40
153494    +          +     0.45427753773024 * AcceptedCmp50  +    -1.03533951966815 *
153495    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.61503950219838 * AcceptedCmp10 + 0.02945207091619 *
AcceptedCmp20 + 0.99151950769472 * AcceptedCmp30 + 1.08987060401718 * AcceptedCmp40 +
0.45427753773024 * AcceptedCmp50 + -1.03533951966815 * Complain0 ;
153496    +   H12  = H12  +     0.83823476190401 * AcceptedCmp10
153497    +          +      1.0793719601418 * AcceptedCmp20  +     0.68538854946581 *
153498    +        AcceptedCmp30  +     1.00297565893339 * AcceptedCmp40
153499    +          +     0.24586379991786 * AcceptedCmp50  +     0.15471251255301 *
153500    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.83823476190401 * AcceptedCmp10 + 1.0793719601418 *
AcceptedCmp20 + 0.68538854946581 * AcceptedCmp30 + 1.00297565893339 * AcceptedCmp40 +
0.24586379991786 * AcceptedCmp50 + 0.15471251255301 * Complain0 ;
153501    +   H13  = H13  +    -0.41486094438907 * AcceptedCmp10
153502    +          +    -0.76586628449839 * AcceptedCmp20  +    -0.59695459523693 *
153503    +        AcceptedCmp30  +    -0.30262159911837 * AcceptedCmp40
153504    +          +    -0.61141171124182 * AcceptedCmp50  +    -0.01086235188835 *
153505    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.41486094438907 * AcceptedCmp10 + -0.76586628449839 *
AcceptedCmp20 + -0.59695459523693 * AcceptedCmp30 + -0.30262159911837 * AcceptedCmp40 +
-0.61141171124182 * AcceptedCmp50 + -0.01086235188835 * Complain0 ;
153506    +   H14  = H14  +    -0.09662858884082 * AcceptedCmp10
153507    +          +    -0.48515652524171 * AcceptedCmp20  +    -0.37421451374399 *
153508    +        AcceptedCmp30  +    -0.52889523891817 * AcceptedCmp40
153509    +          +    -0.73518448275357 * AcceptedCmp50  +    -0.36065830718672 *
153510    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.09662858884082 * AcceptedCmp10 + -0.48515652524171 *
AcceptedCmp20 + -0.37421451374399 * AcceptedCmp30 + -0.52889523891817 * AcceptedCmp40 +
-0.73518448275357 * AcceptedCmp50 + -0.36065830718672 * Complain0 ;
153511    +   H15  = H15  +      0.2985143092641 * AcceptedCmp10
153512    +          +    -0.06881934778393 * AcceptedCmp20  +    -0.02609197044604 *
153513    +        AcceptedCmp30  +    -0.79105657447885 * AcceptedCmp40
153514    +          +    -0.02286855144948 * AcceptedCmp50  +     0.02884650192784 *
153515    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.2985143092641 * AcceptedCmp10 + -0.06881934778393 *
AcceptedCmp20 + -0.02609197044604 * AcceptedCmp30 + -0.79105657447885 * AcceptedCmp40 +
-0.02286855144948 * AcceptedCmp50 + 0.02884650192784 * Complain0 ;
153516    +   H11  = H11  +    -0.41169946146301 * Education2n_Cycle
153517    +          +      0.8448273504441 * EducationBasic  +    -1.02497956377347 *
153518    +        EducationGraduation  +     0.43998321745211 * EducationMaster
153519    +          +    -0.85912688909911 * Marital_StatusDivorced
153520    +          +     0.81561401465875 * Marital_StatusMarried
153521    +          +    -0.58324403081542 * Marital_StatusSingle
153522    +          +      0.9348017085106 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.41169946146301 * Education2n_Cycle + 0.8448273504441 *
EducationBasic + -1.02497956377347 * EducationGraduation + 0.43998321745211 * EducationMaster
+ -0.85912688909911 * Marital_StatusDivorced + 0.81561401465875 * Marital_StatusMarried +
-0.58324403081542 * Marital_StatusSingle + 0.9348017085106 * Marital_StatusTogether ;
153523    +   H12  = H12  +     0.22828129841893 * Education2n_Cycle
153524    +          +     0.47579227804033 * EducationBasic  +    -0.18165301263195 *
153525    +        EducationGraduation  +    -0.16143431016405 * EducationMaster
153526    +          +    -0.34784695867287 * Marital_StatusDivorced
153527    +          +    -0.18194022182247 * Marital_StatusMarried
153528    +          +    -0.10633185904164 * Marital_StatusSingle
153529    +          +     0.13136125361628 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.22828129841893 * Education2n_Cycle + 0.47579227804033 *
EducationBasic + -0.18165301263195 * EducationGraduation + -0.16143431016405 * EducationMaster
+ -0.34784695867287 * Marital_StatusDivorced + -0.18194022182247 * Marital_StatusMarried +
-0.10633185904164 * Marital_StatusSingle + 0.13136125361628 * Marital_StatusTogether ;
153530    +   H13  = H13  +     0.38705901043652 * Education2n_Cycle
153531    +          +     0.19703188370189 * EducationBasic  +    -0.48062640599976 *
153532    +        EducationGraduation  +     -0.3646621736273 * EducationMaster
153533    +          +     0.61058752124466 * Marital_StatusDivorced
153534    +          +    -1.38793808025141 * Marital_StatusMarried
153535    +          +     1.10060737810944 * Marital_StatusSingle
153536    +          +    -1.21250219018366 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.38705901043652 * Education2n_Cycle + 0.19703188370189 *
EducationBasic + -0.48062640599976 * EducationGraduation + -0.3646621736273 * EducationMaster
+ 0.61058752124466 * Marital_StatusDivorced + -1.38793808025141 * Marital_StatusMarried +
1.10060737810944 * Marital_StatusSingle + -1.21250219018366 * Marital_StatusTogether ;
153537    +   H14  = H14  +    -0.20576658115662 * Education2n_Cycle
153538    +          +    -0.09185472034614 * EducationBasic  +    -0.43674210064447 *
153539    +        EducationGraduation  +    -0.18154054746298 * EducationMaster
153540    +          +     0.11973800573581 * Marital_StatusDivorced
153541    +          +      -0.294635257911 * Marital_StatusMarried
153542    +          +    -0.05399659601172 * Marital_StatusSingle
153543    +          +     0.34207780606239 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.20576658115662 * Education2n_Cycle + -0.09185472034614 *
EducationBasic + -0.43674210064447 * EducationGraduation + -0.18154054746298 * EducationMaster
+ 0.11973800573581 * Marital_StatusDivorced + -0.294635257911 * Marital_StatusMarried +
-0.05399659601172 * Marital_StatusSingle + 0.34207780606239 * Marital_StatusTogether ;
153544    +   H15  = H15  +    -0.05553093684862 * Education2n_Cycle
153545    +          +    -0.12898006732329 * EducationBasic  +    -0.16064118923518 *
153546    +        EducationGraduation  +     -0.6431539624694 * EducationMaster
153547    +          +     0.42838191659864 * Marital_StatusDivorced
153548    +          +    -0.09150349181363 * Marital_StatusMarried
153549    +          +    -0.33520164145276 * Marital_StatusSingle
153550    +          +    -0.15253738713197 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.05553093684862 * Education2n_Cycle + -0.12898006732329 *
EducationBasic + -0.16064118923518 * EducationGraduation + -0.6431539624694 * EducationMaster
+ 0.42838191659864 * Marital_StatusDivorced + -0.09150349181363 * Marital_StatusMarried +
-0.33520164145276 * Marital_StatusSingle + -0.15253738713197 * Marital_StatusTogether ;
153551    +   H11  =     -1.5079478405973 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.5079478405973 + H11 ;
153552    +   H12  =     0.03014958331993 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.03014958331993 + H12 ;
153553    +   H13  =    -1.78098671165572 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.78098671165572 + H13 ;
153554    +   H14  =     0.22179429743277 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.22179429743277 + H14 ;
153555    +   H15  =    -2.06602107857898 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -2.06602107857898 + H15 ;
153556    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
153557    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
153558    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
153559    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
153560    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
153561    +END;
MPRINT(EM_DIAGRAM):   END;
153562    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
153563    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
153564    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
153565    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
153566    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
153567    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
153568    +END;
MPRINT(EM_DIAGRAM):   END;
153569    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
153570    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
153571    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
153572    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
153573    +   P_DepVar1  =    -4.55666337815854 * H11  +    -4.04792544554995 * H12
153574    +          +     4.56148127429284 * H13  +     2.36841344452371 * H14
153575    +          +    -3.07371010011749 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.55666337815854 * H11 + -4.04792544554995 * H12 +
4.56148127429284 * H13 + 2.36841344452371 * H14 + -3.07371010011749 * H15 ;
153576    +   P_DepVar1  =    -0.83283406236136 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.83283406236136 + P_DepVar1 ;
153577    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
153578    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
153579    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
153580    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
153581    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
153582    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
153583    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
153584    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
153585    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
153586    +END;
MPRINT(EM_DIAGRAM):   END;
153587    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
153588    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
153589    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
153590    +END;
MPRINT(EM_DIAGRAM):   END;
153591    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
153592    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
153593    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
153594    +END;
MPRINT(EM_DIAGRAM):   END;
153595    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
153596    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
153597    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
153598    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
153599    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
153600    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
153601    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
153602    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
153603    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
153604    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
153605    +END;
MPRINT(EM_DIAGRAM):   END;
153606    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
153607    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
153608    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
153609    +drop
153610    +H11
153611    +H12
153612    +H13
153613    +H14
153614    +H15
153615    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
153616    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
153617     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
153618     quit;
153619     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
153620     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
153621     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
153622     retain ID 2 Node "Neural34";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural34";
153623     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
153624     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1878 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1878 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
153625     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
153626     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
153627     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1878 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1878 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
153628     proc sort data=EMWS8.Neural34_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural34_variableset out=_temp2(keep=NAME CREATOR);
153629     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
153630     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.NEURAL34_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
153631     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
153632     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
153633     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
153634     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
153635     proc contents data=EMWS8.Neural34_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural34_train out=_meta(keep=NAME) noprint;
153636     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
153637     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
153638     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
153639     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
153640     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
153641     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
153642     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
153643     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
153644     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
153645     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
153645   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 924 rows and 5 columns.
 
153646     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
153647     proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
153648     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 924 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 924 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
153649     filename _pref
153649   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
153650     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
153651     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
153652    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
153653    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
153654    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
153655    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
153656    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
153657    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
153658     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
153659     quit;
153660     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
153661     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
153662     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
153663     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
153664     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
153665     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
153666     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
153667     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
153668     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
153669     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
153670     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
153671     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
153672     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
153673     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
153674     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
153675     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
153676     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
153677     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
153678     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
153679     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
153680     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
153681     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
153682     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
153683     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
153684     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
153685     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
153686     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
153686   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
153687     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
153688     proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
153689     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 928 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
153690     filename _pref
153690   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
153691     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
153692     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
153693    +
153694    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
153695    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
153695   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
153696    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
153697    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
153698    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
153699    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
153700    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
153701     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
153702     quit;
153703     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
153704     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
153705     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
153706     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
153707     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
153708     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
153709     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
153710     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
153711     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
153712     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
153713     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
153714     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
153715     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
153716     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
153717     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
153718     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
153719     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
153720     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
153721     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
153722     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
153723     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
153724     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
153725     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
153726     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
153727     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
153728     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
153729     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
153729   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
153730     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
153731     proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
153732     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 967 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
153733     filename _pref
153733   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
153734     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
153735     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
153736    +
153737    +
153738    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
153739    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
153740    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
153741    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
153742    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
153743    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
153744    +
153745    +
153746    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
153747    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
153748    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
153749    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
153750    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
153751    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
153752    +
153753    +
153754    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
153755    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
153756    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
153757    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
153758    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
153759    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
153760    +
153761    +
153762    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
153763    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
153764    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
153765    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
153766    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
153767    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
153768    +
153769    +
153770    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
153771    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
153772    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
153773    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
153774    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
153775    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
153776    +
153777    +
153778    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
153779    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
153780    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
153781    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
153782    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
153783    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
153784    +
153785    +
153786    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
153787    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
153788    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
153789    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
153790    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
153791    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
153792    +
153793    +
153794    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
153795    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
153796    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
153797    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
153798    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
153799    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
153800    +if
153801    +_FILTERNORM1 not in ( '.')
153802    + and
153803    +_FILTERNORM2 not in ( '.')
153804    + and
153805    +_FILTERNORM3 not in ( '.')
153806    + and
153807    +_FILTERNORM4 not in ( '.')
153808    + and
153809    +_FILTERNORM5 not in ( '.')
153810    + and
153811    +_FILTERNORM6 not in ( '.')
153812    + and
153813    +_FILTERNORM7 not in ( ' ')
153814    + and
153815    +_FILTERNORM8 not in ( ' ')
153816    +and
153817    +( Dt_Customer ne .)
153818    +and ( Income ne . and (Income<=107000))
153819    +and ( Kidhome ne .)
153820    +and ( MntFishProducts ne .)
153821    +and ( MntFruits ne .)
153822    +and ( MntGoldProds ne .)
153823    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
153824    +and ( MntSweetProducts ne .)
153825    +and ( MntWines ne .)
153826    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
153827    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
153828    +and ( NumStorePurchases ne .)
153829    +and ( NumWebPurchases ne .)
153830    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
153831    +and ( Recency ne .)
153832    +and ( Teenhome ne .)
153833    +and ( Year_Birth ne .)
153834    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
153835    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
153836    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
153837    +end;
MPRINT(EM_DIAGRAM):   end;
153838    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
153839    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
153840     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
153841     quit;
153842     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
153843     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
153844     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
153845     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
153846     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
153847     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
153848     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
153849     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
153850     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
153851     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
153852     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
153853     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
153854     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
153855     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
153856     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
153857     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
153858     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
153859     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
153860     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
153861     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
153862     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
153863     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
153864     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
153865     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
153866     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
153867     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
153868     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
153868   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
153869     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
153870     proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
153871     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 1033 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
153872     %macro varDept(fcmpdata=,id=);
153873     %global nobs&id scoreFlag&id;
153874     %let scoreFlag&id = 0;
153875     %if &id=1 or ^&fcmpStart %then %do;
153876     proc sort data=&fcmpdata out=_temp&id nodupkey;
153877     by NAME;
153878     where id=&id and LHS in( %let j=1;
153879     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
153880     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
153881     "&var" %let j = %eval(&j+1);
153882     %end;
153883     );
153884     run;
153885     %let dsid = %sysfunc(open(_temp&id));
153886     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
153887     %let dsid = %sysfunc(close(&dsid));
153888     %if &&nobs&id %then %do;
153889     %let scoreFlag&id = 1;
153890     %let fcmpStart = 1;
153891     %end;
153892     %else %let fcmpStart = 0;
153893     %end;
153894     %else %do;
153895     proc sort data=&fcmpdata out=_tempid;
153896     where id=&id;
153897     by LHS;
153898     run;
153899     %let dsid = %sysfunc(open(_tempid));
153900     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
153901     %let dsid = %sysfunc(close(&dsid));
153902     %if ^&&nobs&id %then %do;
153903     proc datasets lib=work nolist;
153904     delete _tempid;
153905     run;
153906     quit;
153907     %end;
153908     %else %do;
153909     data _tempAll;
153910     set %let j=%eval(&id-1);
153911     %do x=1 %to &j;
153912     %if &&nobs&x %then %do;
153913     _temp&x %end;
153914     %end;
153915     ;
153916     run;
153917     proc sql;
153918     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
153918   ! work._tempid p2 where p.name=p2.lhs;
153919     quit;
153920     data _temp&id;
153921     set _temp&id;
153922     where LHS ne '' and NAME ne '' and Node ne '';
153923     run;
153924     proc datasets lib=work nolist;
153925     delete _tempAll;
153926     run;
153927     %let dsid = %sysfunc(open(_temp&id));
153928     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
153929     %let dsid = %sysfunc(close(&dsid));
153930     %if ^&&nobs&id %then %do;
153931     proc datasets lib=work nolist;
153932     delete _temp&id;
153933     run;
153934     quit;
153935     %end;
153936     %else %do;
153937     %let scoreFlag&id = 1;
153938     data _temp&id;
153939     set _temp&id;
153940     where LHS ne NAME and node ne '';
153941     run;
153942     %let dsid = %sysfunc(open(_temp&id));
153943     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
153944     %let dsid = %sysfunc(close(&dsid));
153945     %if ^&&nobs&id %then %do;
153946     proc datasets lib=work nolist;
153947     delete _temp&id;
153948     run;
153949     quit;
153950     %end;
153951     %else %do;
153952     proc sort data=_temp&id nodupkey;
153953     by LHS NAME;
153954     run;
153955     %end;
153956     %end;
153957     %end;
153958     %end;
153959     %mend varDept;
153960     %macro optCode(outdata=fcmpdata);
153961     %global fcmpStart;
153962     %let fcmpStart = 0;
153963     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
153964     %let NumNodes=9;
153965     %do k=1 %to &NumNodes;
153966     %vardept(fcmpdata=&outdata, id=&k);
153967     %end;
153968     %mend optCode;
153969     %optcode(outData=EMWS8.Ensmbl22_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 98 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 73 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 25 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp6;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP6 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
153970     filename _pref
153970   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural46\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural46\EMPUBLISHSCORE.sas";
153971     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
153972     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural46\EMPUBLISHSCORE.sas.
153973    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
153974    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
153975    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
153976    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
153977    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
153978    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
153979    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
153980    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
153981    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
153982    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
153983    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
153984    +LENGTH _WARN_ $4
153985    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
153986    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
153987    +
153988    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
153989    +
153990    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
153991    +
153992    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
153993    +
153994    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
153995    +
153996    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
153997    +
153998    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
153999    +
154000    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
154001    +
154002    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
154003    +
154004    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
154005    +
154006    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
154007    +
154008    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
154009    +
154010    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
154011    +
154012    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
154013    +
154014    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
154015    +
154016    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
154017    +
154018    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
154019    +
154020    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
154021    +
154022    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
154023    +
154024    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
154025    +
154026    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
154027    +
154028    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
154029    +
154030    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
154031    +
154032    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
154033    +
154034    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
154035    +
154036    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
154037    +
154038    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
154039    +
154040    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
154041    +
154042    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
154043    +
154044    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
154045    +
154046    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
154047    +
154048    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
154049    +
154050    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
154051    +
154052    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
154053    +
154054    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
154055    +
154056    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
154057    +
154058    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
154059    +
154060    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
154061    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
154062    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
154063    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
154064    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
154065    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
154066    +end;
MPRINT(EM_DIAGRAM):   end;
154067    +else do;
MPRINT(EM_DIAGRAM):   else do;
154068    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
154069    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
154070    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
154071    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
154072    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
154073    +   end;
MPRINT(EM_DIAGRAM):   end;
154074    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
154075    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
154076    +   end;
MPRINT(EM_DIAGRAM):   end;
154077    +   else do;
MPRINT(EM_DIAGRAM):   else do;
154078    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
154079    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
154080    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
154081    +   end;
MPRINT(EM_DIAGRAM):   end;
154082    +end;
MPRINT(EM_DIAGRAM):   end;
154083    +
154084    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
154085    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
154086    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
154087    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
154088    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
154089    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
154090    +end;
MPRINT(EM_DIAGRAM):   end;
154091    +else do;
MPRINT(EM_DIAGRAM):   else do;
154092    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
154093    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
154094    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
154095    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
154096    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
154097    +   end;
MPRINT(EM_DIAGRAM):   end;
154098    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
154099    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
154100    +   end;
MPRINT(EM_DIAGRAM):   end;
154101    +   else do;
MPRINT(EM_DIAGRAM):   else do;
154102    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
154103    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
154104    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
154105    +   end;
MPRINT(EM_DIAGRAM):   end;
154106    +end;
MPRINT(EM_DIAGRAM):   end;
154107    +
154108    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
154109    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
154110    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
154111    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
154112    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
154113    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
154114    +end;
MPRINT(EM_DIAGRAM):   end;
154115    +else do;
MPRINT(EM_DIAGRAM):   else do;
154116    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
154117    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
154118    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
154119    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
154120    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
154121    +   end;
MPRINT(EM_DIAGRAM):   end;
154122    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
154123    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
154124    +   end;
MPRINT(EM_DIAGRAM):   end;
154125    +   else do;
MPRINT(EM_DIAGRAM):   else do;
154126    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
154127    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
154128    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
154129    +   end;
MPRINT(EM_DIAGRAM):   end;
154130    +end;
MPRINT(EM_DIAGRAM):   end;
154131    +
154132    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
154133    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
154134    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
154135    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
154136    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
154137    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
154138    +end;
MPRINT(EM_DIAGRAM):   end;
154139    +else do;
MPRINT(EM_DIAGRAM):   else do;
154140    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
154141    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
154142    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
154143    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
154144    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
154145    +   end;
MPRINT(EM_DIAGRAM):   end;
154146    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
154147    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
154148    +   end;
MPRINT(EM_DIAGRAM):   end;
154149    +   else do;
MPRINT(EM_DIAGRAM):   else do;
154150    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
154151    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
154152    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
154153    +   end;
MPRINT(EM_DIAGRAM):   end;
154154    +end;
MPRINT(EM_DIAGRAM):   end;
154155    +
154156    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
154157    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
154158    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
154159    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
154160    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
154161    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
154162    +end;
MPRINT(EM_DIAGRAM):   end;
154163    +else do;
MPRINT(EM_DIAGRAM):   else do;
154164    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
154165    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
154166    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
154167    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
154168    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
154169    +   end;
MPRINT(EM_DIAGRAM):   end;
154170    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
154171    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
154172    +   end;
MPRINT(EM_DIAGRAM):   end;
154173    +   else do;
MPRINT(EM_DIAGRAM):   else do;
154174    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
154175    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
154176    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
154177    +   end;
MPRINT(EM_DIAGRAM):   end;
154178    +end;
MPRINT(EM_DIAGRAM):   end;
154179    +
154180    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
154181    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
154182    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
154183    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
154184    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
154185    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
154186    +end;
MPRINT(EM_DIAGRAM):   end;
154187    +else do;
MPRINT(EM_DIAGRAM):   else do;
154188    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
154189    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
154190    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
154191    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
154192    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
154193    +   end;
MPRINT(EM_DIAGRAM):   end;
154194    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
154195    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
154196    +   end;
MPRINT(EM_DIAGRAM):   end;
154197    +   else do;
MPRINT(EM_DIAGRAM):   else do;
154198    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
154199    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
154200    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
154201    +   end;
MPRINT(EM_DIAGRAM):   end;
154202    +end;
MPRINT(EM_DIAGRAM):   end;
154203    +
154204    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
154205    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
154206    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
154207    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
154208    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
154209    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
154210    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
154211    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
154212    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
154213    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
154214    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
154215    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
154216    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
154217    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
154218    +end;
MPRINT(EM_DIAGRAM):   end;
154219    +else do;
MPRINT(EM_DIAGRAM):   else do;
154220    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
154221    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
154222    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
154223    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
154224    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
154225    +   end;
MPRINT(EM_DIAGRAM):   end;
154226    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
154227    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
154228    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
154229    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
154230    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
154231    +   end;
MPRINT(EM_DIAGRAM):   end;
154232    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
154233    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
154234    +   end;
MPRINT(EM_DIAGRAM):   end;
154235    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
154236    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
154237    +   end;
MPRINT(EM_DIAGRAM):   end;
154238    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
154239    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
154240    +   end;
MPRINT(EM_DIAGRAM):   end;
154241    +   else do;
MPRINT(EM_DIAGRAM):   else do;
154242    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
154243    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
154244    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
154245    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
154246    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
154247    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
154248    +   end;
MPRINT(EM_DIAGRAM):   end;
154249    +end;
MPRINT(EM_DIAGRAM):   end;
154250    +
154251    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
154252    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
154253    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
154254    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
154255    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
154256    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
154257    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
154258    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
154259    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
154260    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
154261    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
154262    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
154263    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
154264    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
154265    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
154266    +end;
MPRINT(EM_DIAGRAM):   end;
154267    +else do;
MPRINT(EM_DIAGRAM):   else do;
154268    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
154269    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
154270    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
154271    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
154272    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
154273    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
154274    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
154275    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
154276    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
154277    +         end;
MPRINT(EM_DIAGRAM):   end;
154278    +         else do;
MPRINT(EM_DIAGRAM):   else do;
154279    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
154280    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
154281    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
154282    +            end;
MPRINT(EM_DIAGRAM):   end;
154283    +         end;
MPRINT(EM_DIAGRAM):   end;
154284    +      end;
MPRINT(EM_DIAGRAM):   end;
154285    +      else do;
MPRINT(EM_DIAGRAM):   else do;
154286    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
154287    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
154288    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
154289    +         end;
MPRINT(EM_DIAGRAM):   end;
154290    +      end;
MPRINT(EM_DIAGRAM):   end;
154291    +   end;
MPRINT(EM_DIAGRAM):   end;
154292    +   else do;
MPRINT(EM_DIAGRAM):   else do;
154293    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
154294    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
154295    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
154296    +      end;
MPRINT(EM_DIAGRAM):   end;
154297    +      else do;
MPRINT(EM_DIAGRAM):   else do;
154298    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
154299    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
154300    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
154301    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
154302    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
154303    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
154304    +         end;
MPRINT(EM_DIAGRAM):   end;
154305    +      end;
MPRINT(EM_DIAGRAM):   end;
154306    +   end;
MPRINT(EM_DIAGRAM):   end;
154307    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
154308    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
154309    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
154310    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
154311    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
154312    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
154313    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
154314    +   end;
MPRINT(EM_DIAGRAM):   end;
154315    +end;
MPRINT(EM_DIAGRAM):   end;
154316    +
154317    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
154318    +*** Checking missing input Interval
154319    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
154320    +
154321    +IF NMISS(
154322    +   Income ,
154323    +   Kidhome ,
154324    +   MntFishProducts ,
154325    +   MntFruits ,
154326    +   MntGoldProds ,
154327    +   MntMeatProducts ,
154328    +   MntSweetProducts ,
154329    +   MntWines ,
154330    +   NumCatalogPurchases ,
154331    +   NumDealsPurchases ,
154332    +   NumStorePurchases ,
154333    +   NumWebPurchases ,
154334    +   NumWebVisitsMonth ,
154335    +   Recency ,
154336    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
154337    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
154338    +
154339    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
154340    +END;
MPRINT(EM_DIAGRAM):   END;
154341    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
154342    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
154343    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
154344    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
154345    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
154346    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
154347    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
154348    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
154349    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
154350    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
154351    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
154352    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
154353    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
154354    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
154355    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
154356    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
154357    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
154358    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
154359    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
154360    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
154361    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
154362    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
154363    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
154364    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
154365    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
154366    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
154367    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
154368    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
154369    +END;
MPRINT(EM_DIAGRAM):   END;
154370    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
154371    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
154372    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
154373    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
154374    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
154375    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
154376    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
154377    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
154378    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
154379    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
154380    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
154381    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
154382    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
154383    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
154384    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
154385    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
154386    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
154387    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
154388    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
154389    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
154390    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
154391    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
154392    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
154393    +   ELSE S_NumCatalogPurchases
154394    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
154395    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
154396    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
154397    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
154398    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
154399    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
154400    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
154401    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
154402    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
154403    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
154404    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
154405    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
154406    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
154407    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
154408    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
154409    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
154410    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
154411    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
154412    +END;
MPRINT(EM_DIAGRAM):   END;
154413    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
154414    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
154415    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
154416    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
154417    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
154418    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
154419    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
154420    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
154421    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
154422    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
154423    +   H1x1_1  =    -0.14779241211238 * S_Income  +     0.12406923960108 *
154424    +        S_Kidhome  +     0.07566108150758 * S_MntFishProducts
154425    +          +     0.04223936357442 * S_MntFruits  +    -0.01414396912246 *
154426    +        S_MntGoldProds  +    -0.43631543928923 * S_MntMeatProducts
154427    +          +      0.0311909552218 * S_MntSweetProducts
154428    +          +      0.1593908004139 * S_MntWines  +    -0.16331402526215 *
154429    +        S_NumCatalogPurchases  +    -0.08123579404919 * S_NumDealsPurchases
154430    +          +     0.12294876865087 * S_NumStorePurchases
154431    +          +     0.11602382379314 * S_NumWebPurchases
154432    +          +    -0.23519567542635 * S_NumWebVisitsMonth
154433    +          +     0.27617232496223 * S_Recency  +     0.06912944740739 *
154434    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.14779241211238 * S_Income + 0.12406923960108 * S_Kidhome +
0.07566108150758 * S_MntFishProducts + 0.04223936357442 * S_MntFruits + -0.01414396912246 *
S_MntGoldProds + -0.43631543928923 * S_MntMeatProducts + 0.0311909552218 * S_MntSweetProducts
+ 0.1593908004139 * S_MntWines + -0.16331402526215 * S_NumCatalogPurchases + -0.08123579404919
* S_NumDealsPurchases + 0.12294876865087 * S_NumStorePurchases + 0.11602382379314 *
S_NumWebPurchases + -0.23519567542635 * S_NumWebVisitsMonth + 0.27617232496223 * S_Recency +
0.06912944740739 * S_Teenhome ;
154435    +   H1x1_2  =    -0.13491153011654 * S_Income  +     0.14656938917448 *
154436    +        S_Kidhome  +     0.04457005191996 * S_MntFishProducts
154437    +          +     0.00771761834647 * S_MntFruits  +    -0.11830651019438 *
154438    +        S_MntGoldProds  +     0.06464771115751 * S_MntMeatProducts
154439    +          +     0.00133400054994 * S_MntSweetProducts
154440    +          +    -0.63837598558931 * S_MntWines  +     0.09668222160749 *
154441    +        S_NumCatalogPurchases  +     0.23530173987642 * S_NumDealsPurchases
154442    +          +    -0.49595472235036 * S_NumStorePurchases
154443    +          +    -0.24747548015204 * S_NumWebPurchases
154444    +          +     0.12326047694811 * S_NumWebVisitsMonth
154445    +          +    -0.04929000435218 * S_Recency  +     0.00568113597531 *
154446    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.13491153011654 * S_Income + 0.14656938917448 * S_Kidhome +
0.04457005191996 * S_MntFishProducts + 0.00771761834647 * S_MntFruits + -0.11830651019438 *
S_MntGoldProds + 0.06464771115751 * S_MntMeatProducts + 0.00133400054994 * S_MntSweetProducts
+ -0.63837598558931 * S_MntWines + 0.09668222160749 * S_NumCatalogPurchases + 0.23530173987642
* S_NumDealsPurchases + -0.49595472235036 * S_NumStorePurchases + -0.24747548015204 *
S_NumWebPurchases + 0.12326047694811 * S_NumWebVisitsMonth + -0.04929000435218 * S_Recency +
0.00568113597531 * S_Teenhome ;
154447    +   H1x1_3  =     0.13062973754666 * S_Income  +    -0.15311279667585 *
154448    +        S_Kidhome  +      0.0854652628099 * S_MntFishProducts
154449    +          +     0.02260695043189 * S_MntFruits  +    -0.06427354034325 *
154450    +        S_MntGoldProds  +    -0.51556004816788 * S_MntMeatProducts
154451    +          +    -0.03908755288099 * S_MntSweetProducts
154452    +          +    -0.24983513168561 * S_MntWines  +     0.11583370343483 *
154453    +        S_NumCatalogPurchases  +     0.05060583856766 * S_NumDealsPurchases
154454    +          +    -0.20634630081435 * S_NumStorePurchases
154455    +          +    -0.06734935798888 * S_NumWebPurchases
154456    +          +     0.32288250215418 * S_NumWebVisitsMonth
154457    +          +    -0.32978147839937 * S_Recency  +    -0.07420334428475 *
154458    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.13062973754666 * S_Income + -0.15311279667585 * S_Kidhome +
0.0854652628099 * S_MntFishProducts + 0.02260695043189 * S_MntFruits + -0.06427354034325 *
S_MntGoldProds + -0.51556004816788 * S_MntMeatProducts + -0.03908755288099 *
S_MntSweetProducts + -0.24983513168561 * S_MntWines + 0.11583370343483 * S_NumCatalogPurchases
+ 0.05060583856766 * S_NumDealsPurchases + -0.20634630081435 * S_NumStorePurchases +
-0.06734935798888 * S_NumWebPurchases + 0.32288250215418 * S_NumWebVisitsMonth +
-0.32978147839937 * S_Recency + -0.07420334428475 * S_Teenhome ;
154459    +   H1x1_1  = H1x1_1  +     0.14311220987159 * AcceptedCmp10
154460    +          +     0.25596748420576 * AcceptedCmp20  +     0.13199169114019 *
154461    +        AcceptedCmp30  +     0.14111066281846 * AcceptedCmp40
154462    +          +     0.16136804502708 * AcceptedCmp50  +     0.06340055511955 *
154463    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.14311220987159 * AcceptedCmp10 + 0.25596748420576 *
AcceptedCmp20 + 0.13199169114019 * AcceptedCmp30 + 0.14111066281846 * AcceptedCmp40 +
0.16136804502708 * AcceptedCmp50 + 0.06340055511955 * Complain0 ;
154464    +   H1x1_2  = H1x1_2  +     0.07692946904386 * AcceptedCmp10
154465    +          +     0.10129736414747 * AcceptedCmp20  +    -0.08526063108983 *
154466    +        AcceptedCmp30  +     0.00391518443243 * AcceptedCmp40
154467    +          +    -0.11013908503956 * AcceptedCmp50  +     0.03814032229209 *
154468    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.07692946904386 * AcceptedCmp10 + 0.10129736414747 *
AcceptedCmp20 + -0.08526063108983 * AcceptedCmp30 + 0.00391518443243 * AcceptedCmp40 +
-0.11013908503956 * AcceptedCmp50 + 0.03814032229209 * Complain0 ;
154469    +   H1x1_3  = H1x1_3  +    -0.02206432573422 * AcceptedCmp10
154470    +          +     0.22410311196864 * AcceptedCmp20  +    -0.19387020375313 *
154471    +        AcceptedCmp30  +    -0.12058647992586 * AcceptedCmp40
154472    +          +    -0.09809197464918 * AcceptedCmp50  +    -0.09604584189983 *
154473    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.02206432573422 * AcceptedCmp10 + 0.22410311196864 *
AcceptedCmp20 + -0.19387020375313 * AcceptedCmp30 + -0.12058647992586 * AcceptedCmp40 +
-0.09809197464918 * AcceptedCmp50 + -0.09604584189983 * Complain0 ;
154474    +   H1x1_1  = H1x1_1  +    -0.00017476927899 * Education2n_Cycle
154475    +          +    -0.15306731287208 * EducationBasic  +     0.04951359729631 *
154476    +        EducationGraduation  +     0.07475697967073 * EducationMaster
154477    +          +    -0.04265434587882 * Marital_StatusDivorced
154478    +          +     0.17114014094758 * Marital_StatusMarried
154479    +          +     -0.1537035921296 * Marital_StatusSingle
154480    +          +     0.15023718360478 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.00017476927899 * Education2n_Cycle +
-0.15306731287208 * EducationBasic + 0.04951359729631 * EducationGraduation + 0.07475697967073
* EducationMaster + -0.04265434587882 * Marital_StatusDivorced + 0.17114014094758 *
Marital_StatusMarried + -0.1537035921296 * Marital_StatusSingle + 0.15023718360478 *
Marital_StatusTogether ;
154481    +   H1x1_2  = H1x1_2  +     0.10391719023548 * Education2n_Cycle
154482    +          +    -0.71597921887555 * EducationBasic  +     0.38732833028427 *
154483    +        EducationGraduation  +     0.04507684017588 * EducationMaster
154484    +          +     0.25534272809394 * Marital_StatusDivorced
154485    +          +     0.20034903346804 * Marital_StatusMarried
154486    +          +    -0.38348393943797 * Marital_StatusSingle
154487    +          +     0.15254304652439 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.10391719023548 * Education2n_Cycle +
-0.71597921887555 * EducationBasic + 0.38732833028427 * EducationGraduation + 0.04507684017588
* EducationMaster + 0.25534272809394 * Marital_StatusDivorced + 0.20034903346804 *
Marital_StatusMarried + -0.38348393943797 * Marital_StatusSingle + 0.15254304652439 *
Marital_StatusTogether ;
154488    +   H1x1_3  = H1x1_3  +     0.06104667656786 * Education2n_Cycle
154489    +          +     -0.0935234366994 * EducationBasic  +     0.09446977823229 *
154490    +        EducationGraduation  +    -0.11683780234266 * EducationMaster
154491    +          +      0.1988416043876 * Marital_StatusDivorced
154492    +          +    -0.21663959478684 * Marital_StatusMarried
154493    +          +     0.06591480171547 * Marital_StatusSingle
154494    +          +    -0.17108581516048 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.06104667656786 * Education2n_Cycle +
-0.0935234366994 * EducationBasic + 0.09446977823229 * EducationGraduation + -0.11683780234266
* EducationMaster + 0.1988416043876 * Marital_StatusDivorced + -0.21663959478684 *
Marital_StatusMarried + 0.06591480171547 * Marital_StatusSingle + -0.17108581516048 *
Marital_StatusTogether ;
154495    +   H1x1_1  =     0.12085771569539 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.12085771569539 + H1x1_1 ;
154496    +   H1x1_2  =     1.88026862462696 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.88026862462696 + H1x1_2 ;
154497    +   H1x1_3  =    -1.66768306479405 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.66768306479405 + H1x1_3 ;
154498    +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
154499    +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
154500    +   H1x1_3  = SIN(H1x1_3 );
MPRINT(EM_DIAGRAM):   H1x1_3 = SIN(H1x1_3 );
154501    +END;
MPRINT(EM_DIAGRAM):   END;
154502    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
154503    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
154504    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
154505    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
154506    +END;
MPRINT(EM_DIAGRAM):   END;
154507    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
154508    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
154509    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
154510    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
154511    +   P_DepVar1  =    -105.465737701328 * H1x1_1  +    -25.9919910307682 * H1x1_2
154512    +          +    -60.7557666068018 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -105.465737701328 * H1x1_1 + -25.9919910307682 * H1x1_2 +
-60.7557666068018 * H1x1_3 ;
154513    +   P_DepVar1  =     17.0796398396243 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 17.0796398396243 + P_DepVar1 ;
154514    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
154515    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
154516    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
154517    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
154518    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
154519    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
154520    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
154521    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
154522    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
154523    +END;
MPRINT(EM_DIAGRAM):   END;
154524    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
154525    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
154526    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
154527    +END;
MPRINT(EM_DIAGRAM):   END;
154528    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
154529    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
154530    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
154531    +END;
MPRINT(EM_DIAGRAM):   END;
154532    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
154533    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
154534    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
154535    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
154536    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
154537    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
154538    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
154539    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
154540    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
154541    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
154542    +END;
MPRINT(EM_DIAGRAM):   END;
154543    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
154544    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
154545    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
154546    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
154547     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
154548     quit;
154549     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
154550     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
154551     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
154552     retain ID 2 Node "AutoNeural46";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural46";
154553     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
154554     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1602 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1602 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
154555     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
154556     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
154557     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1602 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1602 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
154558     proc sort data=EMWS8.AutoNeural46_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural46_variableset out=_temp2(keep=NAME
CREATOR);
154559     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
154560     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL46_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
154561     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
154562     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
154563     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
154564     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
154565     proc contents data=EMWS8.AutoNeural46_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural46_train out=_meta(keep=NAME) noprint;
154566     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 56 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
154567     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
154568     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
154569     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 56 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 56 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
154570     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
154571     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
154572     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
154573     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 56 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 56 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
154574     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
154575     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
154575   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 868 rows and 5 columns.
 
154576     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
154577     proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
154578     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 868 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 868 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
154579     filename _pref
154579   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
154580     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
154581     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
154582    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
154583    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
154584    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
154585    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
154586    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
154587    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
154588     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
154589     quit;
154590     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
154591     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
154592     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
154593     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
154594     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
154595     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
154596     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
154597     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
154598     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
154599     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
154600     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
154601     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
154602     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
154603     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
154604     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
154605     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
154606     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
154607     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
154608     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
154609     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
154610     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
154611     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
154612     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
154613     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
154614     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
154615     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
154616     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
154616   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
154617     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
154618     proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
154619     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 872 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
154620     filename _pref
154620   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
154621     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
154622     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
154623    +
154624    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
154625    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
154625   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
154626    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
154627    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
154628    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
154629    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
154630    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
154631     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
154632     quit;
154633     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
154634     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
154635     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
154636     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
154637     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
154638     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
154639     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
154640     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
154641     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
154642     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
154643     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
154644     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
154645     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
154646     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
154647     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
154648     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
154649     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
154650     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
154651     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
154652     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
154653     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
154654     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
154655     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
154656     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
154657     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
154658     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
154659     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
154659   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
154660     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
154661     proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
154662     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 911 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
154663     filename _pref
154663   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
154664     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
154665     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
154666    +
154667    +
154668    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
154669    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
154670    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
154671    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
154672    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
154673    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
154674    +
154675    +
154676    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
154677    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
154678    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
154679    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
154680    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
154681    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
154682    +
154683    +
154684    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
154685    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
154686    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
154687    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
154688    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
154689    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
154690    +
154691    +
154692    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
154693    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
154694    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
154695    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
154696    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
154697    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
154698    +
154699    +
154700    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
154701    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
154702    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
154703    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
154704    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
154705    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
154706    +
154707    +
154708    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
154709    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
154710    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
154711    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
154712    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
154713    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
154714    +
154715    +
154716    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
154717    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
154718    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
154719    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
154720    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
154721    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
154722    +
154723    +
154724    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
154725    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
154726    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
154727    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
154728    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
154729    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
154730    +if
154731    +_FILTERNORM1 not in ( '.')
154732    + and
154733    +_FILTERNORM2 not in ( '.')
154734    + and
154735    +_FILTERNORM3 not in ( '.')
154736    + and
154737    +_FILTERNORM4 not in ( '.')
154738    + and
154739    +_FILTERNORM5 not in ( '.')
154740    + and
154741    +_FILTERNORM6 not in ( '.')
154742    + and
154743    +_FILTERNORM7 not in ( ' ')
154744    + and
154745    +_FILTERNORM8 not in ( ' ')
154746    +and
154747    +( Dt_Customer ne .)
154748    +and ( Income ne . and (Income<=107000))
154749    +and ( Kidhome ne .)
154750    +and ( MntFishProducts ne .)
154751    +and ( MntFruits ne .)
154752    +and ( MntGoldProds ne .)
154753    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
154754    +and ( MntSweetProducts ne .)
154755    +and ( MntWines ne .)
154756    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
154757    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
154758    +and ( NumStorePurchases ne .)
154759    +and ( NumWebPurchases ne .)
154760    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
154761    +and ( Recency ne .)
154762    +and ( Teenhome ne .)
154763    +and ( Year_Birth ne .)
154764    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
154765    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
154766    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
154767    +end;
MPRINT(EM_DIAGRAM):   end;
154768    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
154769    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
154770     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
154771     quit;
154772     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
154773     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
154774     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
154775     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
154776     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
154777     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
154778     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
154779     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
154780     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
154781     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
154782     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
154783     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
154784     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
154785     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
154786     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
154787     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
154788     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
154789     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
154790     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
154791     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
154792     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
154793     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
154794     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
154795     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
154796     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
154797     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
154798     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
154798   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
154799     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
154800     proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
154801     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 977 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
154802     %macro varDept(fcmpdata=,id=);
154803     %global nobs&id scoreFlag&id;
154804     %let scoreFlag&id = 0;
154805     %if &id=1 or ^&fcmpStart %then %do;
154806     proc sort data=&fcmpdata out=_temp&id nodupkey;
154807     by NAME;
154808     where id=&id and LHS in( %let j=1;
154809     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
154810     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
154811     "&var" %let j = %eval(&j+1);
154812     %end;
154813     );
154814     run;
154815     %let dsid = %sysfunc(open(_temp&id));
154816     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
154817     %let dsid = %sysfunc(close(&dsid));
154818     %if &&nobs&id %then %do;
154819     %let scoreFlag&id = 1;
154820     %let fcmpStart = 1;
154821     %end;
154822     %else %let fcmpStart = 0;
154823     %end;
154824     %else %do;
154825     proc sort data=&fcmpdata out=_tempid;
154826     where id=&id;
154827     by LHS;
154828     run;
154829     %let dsid = %sysfunc(open(_tempid));
154830     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
154831     %let dsid = %sysfunc(close(&dsid));
154832     %if ^&&nobs&id %then %do;
154833     proc datasets lib=work nolist;
154834     delete _tempid;
154835     run;
154836     quit;
154837     %end;
154838     %else %do;
154839     data _tempAll;
154840     set %let j=%eval(&id-1);
154841     %do x=1 %to &j;
154842     %if &&nobs&x %then %do;
154843     _temp&x %end;
154844     %end;
154845     ;
154846     run;
154847     proc sql;
154848     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
154848   ! work._tempid p2 where p.name=p2.lhs;
154849     quit;
154850     data _temp&id;
154851     set _temp&id;
154852     where LHS ne '' and NAME ne '' and Node ne '';
154853     run;
154854     proc datasets lib=work nolist;
154855     delete _tempAll;
154856     run;
154857     %let dsid = %sysfunc(open(_temp&id));
154858     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
154859     %let dsid = %sysfunc(close(&dsid));
154860     %if ^&&nobs&id %then %do;
154861     proc datasets lib=work nolist;
154862     delete _temp&id;
154863     run;
154864     quit;
154865     %end;
154866     %else %do;
154867     %let scoreFlag&id = 1;
154868     data _temp&id;
154869     set _temp&id;
154870     where LHS ne NAME and node ne '';
154871     run;
154872     %let dsid = %sysfunc(open(_temp&id));
154873     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
154874     %let dsid = %sysfunc(close(&dsid));
154875     %if ^&&nobs&id %then %do;
154876     proc datasets lib=work nolist;
154877     delete _temp&id;
154878     run;
154879     quit;
154880     %end;
154881     %else %do;
154882     proc sort data=_temp&id nodupkey;
154883     by LHS NAME;
154884     run;
154885     %end;
154886     %end;
154887     %end;
154888     %end;
154889     %mend varDept;
154890     %macro optCode(outdata=fcmpdata);
154891     %global fcmpStart;
154892     %let fcmpStart = 0;
154893     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
154894     %let NumNodes=9;
154895     %do k=1 %to &NumNodes;
154896     %vardept(fcmpdata=&outdata, id=&k);
154897     %end;
154898     %mend optCode;
154899     %optcode(outData=EMWS8.Ensmbl22_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 107 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 79 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 28 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 28 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 28 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 28 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 28 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp6;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP6 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 28 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 28 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
154900     filename _pref
154900   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural42\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural42\EMPUBLISHSCORE.sas";
154901     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
154902     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural42\EMPUBLISHSCORE.sas.
154903    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
154904    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
154905    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
154906    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
154907    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
154908    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
154909    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
154910    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
154911    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
154912    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
154913    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
154914    +LENGTH _WARN_ $4
154915    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
154916    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
154917    +
154918    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
154919    +
154920    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
154921    +
154922    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
154923    +
154924    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
154925    +
154926    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
154927    +
154928    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
154929    +
154930    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
154931    +
154932    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
154933    +
154934    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
154935    +
154936    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
154937    +
154938    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
154939    +
154940    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
154941    +
154942    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
154943    +
154944    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
154945    +
154946    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
154947    +
154948    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
154949    +
154950    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
154951    +
154952    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
154953    +
154954    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
154955    +
154956    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
154957    +
154958    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
154959    +
154960    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
154961    +
154962    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
154963    +
154964    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
154965    +
154966    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
154967    +
154968    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
154969    +
154970    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
154971    +
154972    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
154973    +
154974    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
154975    +
154976    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
154977    +
154978    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
154979    +
154980    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
154981    +
154982    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
154983    +
154984    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
154985    +
154986    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
154987    +
154988    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
154989    +
154990    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
154991    +
154992    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
154993    +
154994    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
154995    +
154996    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
154997    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
154998    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
154999    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
155000    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
155001    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
155002    +end;
MPRINT(EM_DIAGRAM):   end;
155003    +else do;
MPRINT(EM_DIAGRAM):   else do;
155004    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
155005    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
155006    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
155007    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
155008    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
155009    +   end;
MPRINT(EM_DIAGRAM):   end;
155010    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
155011    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
155012    +   end;
MPRINT(EM_DIAGRAM):   end;
155013    +   else do;
MPRINT(EM_DIAGRAM):   else do;
155014    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
155015    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
155016    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
155017    +   end;
MPRINT(EM_DIAGRAM):   end;
155018    +end;
MPRINT(EM_DIAGRAM):   end;
155019    +
155020    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
155021    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
155022    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
155023    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
155024    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
155025    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
155026    +end;
MPRINT(EM_DIAGRAM):   end;
155027    +else do;
MPRINT(EM_DIAGRAM):   else do;
155028    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
155029    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
155030    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
155031    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
155032    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
155033    +   end;
MPRINT(EM_DIAGRAM):   end;
155034    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
155035    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
155036    +   end;
MPRINT(EM_DIAGRAM):   end;
155037    +   else do;
MPRINT(EM_DIAGRAM):   else do;
155038    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
155039    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
155040    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
155041    +   end;
MPRINT(EM_DIAGRAM):   end;
155042    +end;
MPRINT(EM_DIAGRAM):   end;
155043    +
155044    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
155045    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
155046    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
155047    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
155048    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
155049    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
155050    +end;
MPRINT(EM_DIAGRAM):   end;
155051    +else do;
MPRINT(EM_DIAGRAM):   else do;
155052    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
155053    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
155054    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
155055    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
155056    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
155057    +   end;
MPRINT(EM_DIAGRAM):   end;
155058    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
155059    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
155060    +   end;
MPRINT(EM_DIAGRAM):   end;
155061    +   else do;
MPRINT(EM_DIAGRAM):   else do;
155062    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
155063    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
155064    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
155065    +   end;
MPRINT(EM_DIAGRAM):   end;
155066    +end;
MPRINT(EM_DIAGRAM):   end;
155067    +
155068    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
155069    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
155070    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
155071    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
155072    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
155073    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
155074    +end;
MPRINT(EM_DIAGRAM):   end;
155075    +else do;
MPRINT(EM_DIAGRAM):   else do;
155076    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
155077    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
155078    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
155079    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
155080    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
155081    +   end;
MPRINT(EM_DIAGRAM):   end;
155082    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
155083    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
155084    +   end;
MPRINT(EM_DIAGRAM):   end;
155085    +   else do;
MPRINT(EM_DIAGRAM):   else do;
155086    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
155087    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
155088    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
155089    +   end;
MPRINT(EM_DIAGRAM):   end;
155090    +end;
MPRINT(EM_DIAGRAM):   end;
155091    +
155092    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
155093    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
155094    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
155095    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
155096    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
155097    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
155098    +end;
MPRINT(EM_DIAGRAM):   end;
155099    +else do;
MPRINT(EM_DIAGRAM):   else do;
155100    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
155101    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
155102    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
155103    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
155104    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
155105    +   end;
MPRINT(EM_DIAGRAM):   end;
155106    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
155107    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
155108    +   end;
MPRINT(EM_DIAGRAM):   end;
155109    +   else do;
MPRINT(EM_DIAGRAM):   else do;
155110    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
155111    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
155112    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
155113    +   end;
MPRINT(EM_DIAGRAM):   end;
155114    +end;
MPRINT(EM_DIAGRAM):   end;
155115    +
155116    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
155117    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
155118    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
155119    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
155120    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
155121    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
155122    +end;
MPRINT(EM_DIAGRAM):   end;
155123    +else do;
MPRINT(EM_DIAGRAM):   else do;
155124    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
155125    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
155126    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
155127    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
155128    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
155129    +   end;
MPRINT(EM_DIAGRAM):   end;
155130    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
155131    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
155132    +   end;
MPRINT(EM_DIAGRAM):   end;
155133    +   else do;
MPRINT(EM_DIAGRAM):   else do;
155134    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
155135    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
155136    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
155137    +   end;
MPRINT(EM_DIAGRAM):   end;
155138    +end;
MPRINT(EM_DIAGRAM):   end;
155139    +
155140    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
155141    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
155142    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
155143    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
155144    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
155145    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
155146    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
155147    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
155148    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
155149    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
155150    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
155151    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
155152    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
155153    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
155154    +end;
MPRINT(EM_DIAGRAM):   end;
155155    +else do;
MPRINT(EM_DIAGRAM):   else do;
155156    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
155157    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
155158    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
155159    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
155160    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
155161    +   end;
MPRINT(EM_DIAGRAM):   end;
155162    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
155163    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
155164    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
155165    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
155166    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
155167    +   end;
MPRINT(EM_DIAGRAM):   end;
155168    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
155169    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
155170    +   end;
MPRINT(EM_DIAGRAM):   end;
155171    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
155172    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
155173    +   end;
MPRINT(EM_DIAGRAM):   end;
155174    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
155175    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
155176    +   end;
MPRINT(EM_DIAGRAM):   end;
155177    +   else do;
MPRINT(EM_DIAGRAM):   else do;
155178    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
155179    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
155180    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
155181    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
155182    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
155183    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
155184    +   end;
MPRINT(EM_DIAGRAM):   end;
155185    +end;
MPRINT(EM_DIAGRAM):   end;
155186    +
155187    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
155188    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
155189    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
155190    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
155191    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
155192    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
155193    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
155194    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
155195    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
155196    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
155197    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
155198    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
155199    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
155200    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
155201    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
155202    +end;
MPRINT(EM_DIAGRAM):   end;
155203    +else do;
MPRINT(EM_DIAGRAM):   else do;
155204    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
155205    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
155206    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
155207    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
155208    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
155209    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
155210    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
155211    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
155212    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
155213    +         end;
MPRINT(EM_DIAGRAM):   end;
155214    +         else do;
MPRINT(EM_DIAGRAM):   else do;
155215    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
155216    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
155217    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
155218    +            end;
MPRINT(EM_DIAGRAM):   end;
155219    +         end;
MPRINT(EM_DIAGRAM):   end;
155220    +      end;
MPRINT(EM_DIAGRAM):   end;
155221    +      else do;
MPRINT(EM_DIAGRAM):   else do;
155222    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
155223    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
155224    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
155225    +         end;
MPRINT(EM_DIAGRAM):   end;
155226    +      end;
MPRINT(EM_DIAGRAM):   end;
155227    +   end;
MPRINT(EM_DIAGRAM):   end;
155228    +   else do;
MPRINT(EM_DIAGRAM):   else do;
155229    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
155230    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
155231    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
155232    +      end;
MPRINT(EM_DIAGRAM):   end;
155233    +      else do;
MPRINT(EM_DIAGRAM):   else do;
155234    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
155235    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
155236    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
155237    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
155238    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
155239    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
155240    +         end;
MPRINT(EM_DIAGRAM):   end;
155241    +      end;
MPRINT(EM_DIAGRAM):   end;
155242    +   end;
MPRINT(EM_DIAGRAM):   end;
155243    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
155244    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
155245    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
155246    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
155247    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
155248    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
155249    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
155250    +   end;
MPRINT(EM_DIAGRAM):   end;
155251    +end;
MPRINT(EM_DIAGRAM):   end;
155252    +
155253    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
155254    +*** Checking missing input Interval
155255    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
155256    +
155257    +IF NMISS(
155258    +   Income ,
155259    +   Kidhome ,
155260    +   MntFishProducts ,
155261    +   MntFruits ,
155262    +   MntGoldProds ,
155263    +   MntMeatProducts ,
155264    +   MntSweetProducts ,
155265    +   MntWines ,
155266    +   NumCatalogPurchases ,
155267    +   NumDealsPurchases ,
155268    +   NumStorePurchases ,
155269    +   NumWebPurchases ,
155270    +   NumWebVisitsMonth ,
155271    +   Recency ,
155272    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
155273    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
155274    +
155275    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
155276    +END;
MPRINT(EM_DIAGRAM):   END;
155277    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
155278    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
155279    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
155280    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
155281    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
155282    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
155283    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
155284    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
155285    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
155286    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
155287    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
155288    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
155289    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
155290    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
155291    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
155292    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
155293    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
155294    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
155295    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
155296    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
155297    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
155298    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
155299    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
155300    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
155301    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
155302    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
155303    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
155304    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
155305    +END;
MPRINT(EM_DIAGRAM):   END;
155306    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
155307    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
155308    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
155309    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
155310    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
155311    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
155312    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
155313    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
155314    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
155315    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
155316    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
155317    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
155318    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
155319    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
155320    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
155321    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
155322    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
155323    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
155324    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
155325    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
155326    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
155327    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
155328    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
155329    +   ELSE S_NumCatalogPurchases
155330    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
155331    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
155332    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
155333    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
155334    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
155335    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
155336    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
155337    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
155338    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
155339    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
155340    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
155341    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
155342    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
155343    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
155344    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
155345    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
155346    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
155347    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
155348    +END;
MPRINT(EM_DIAGRAM):   END;
155349    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
155350    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
155351    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
155352    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
155353    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
155354    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
155355    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
155356    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
155357    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
155358    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
155359    +   H1x1_1  =    -0.61752831165943 * S_Income  +    -0.31903138173339 *
155360    +        S_Kidhome  +     1.07644564135555 * S_MntFishProducts
155361    +          +     0.65454839379318 * S_MntFruits  +    -0.14959507038031 *
155362    +        S_MntGoldProds  +    -5.93493457217182 * S_MntMeatProducts
155363    +          +     0.13203247258141 * S_MntSweetProducts
155364    +          +     2.56195281130506 * S_MntWines  +    -1.36884424558249 *
155365    +        S_NumCatalogPurchases  +    -0.86876556455629 * S_NumDealsPurchases
155366    +          +     1.48881174203434 * S_NumStorePurchases
155367    +          +     2.06403591844726 * S_NumWebPurchases
155368    +          +    -0.09535558759694 * S_NumWebVisitsMonth
155369    +          +    -0.05978552253526 * S_Recency  +     0.15007435747359 *
155370    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.61752831165943 * S_Income + -0.31903138173339 * S_Kidhome +
1.07644564135555 * S_MntFishProducts + 0.65454839379318 * S_MntFruits + -0.14959507038031 *
S_MntGoldProds + -5.93493457217182 * S_MntMeatProducts + 0.13203247258141 * S_MntSweetProducts
+ 2.56195281130506 * S_MntWines + -1.36884424558249 * S_NumCatalogPurchases +
-0.86876556455629 * S_NumDealsPurchases + 1.48881174203434 * S_NumStorePurchases +
2.06403591844726 * S_NumWebPurchases + -0.09535558759694 * S_NumWebVisitsMonth +
-0.05978552253526 * S_Recency + 0.15007435747359 * S_Teenhome ;
155371    +   H1x1_2  =     0.26608479656795 * S_Income  +    -1.19991366958494 *
155372    +        S_Kidhome  +    -0.06930701896636 * S_MntFishProducts
155373    +          +    -0.24491476793503 * S_MntFruits  +     0.61341878614078 *
155374    +        S_MntGoldProds  +     1.20573081926043 * S_MntMeatProducts
155375    +          +      0.3852767951223 * S_MntSweetProducts
155376    +          +     1.08228250264945 * S_MntWines  +     0.60642303652873 *
155377    +        S_NumCatalogPurchases  +     0.15318179926318 * S_NumDealsPurchases
155378    +          +     0.87686526091024 * S_NumStorePurchases
155379    +          +     0.48807967312664 * S_NumWebPurchases
155380    +          +     2.42770807785792 * S_NumWebVisitsMonth
155381    +          +      -2.239057176324 * S_Recency  +    -0.38694456406673 *
155382    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.26608479656795 * S_Income + -1.19991366958494 * S_Kidhome +
-0.06930701896636 * S_MntFishProducts + -0.24491476793503 * S_MntFruits + 0.61341878614078 *
S_MntGoldProds + 1.20573081926043 * S_MntMeatProducts + 0.3852767951223 * S_MntSweetProducts +
1.08228250264945 * S_MntWines + 0.60642303652873 * S_NumCatalogPurchases + 0.15318179926318 *
S_NumDealsPurchases + 0.87686526091024 * S_NumStorePurchases + 0.48807967312664 *
S_NumWebPurchases + 2.42770807785792 * S_NumWebVisitsMonth + -2.239057176324 * S_Recency +
-0.38694456406673 * S_Teenhome ;
155383    +   H1x1_3  =     2.14026785899485 * S_Income  +     0.71085813088393 *
155384    +        S_Kidhome  +    -0.12119457643873 * S_MntFishProducts
155385    +          +     0.52522197349122 * S_MntFruits  +     0.44706934196977 *
155386    +        S_MntGoldProds  +     1.26484530402043 * S_MntMeatProducts
155387    +          +      0.4461192743946 * S_MntSweetProducts
155388    +          +     0.68849791421776 * S_MntWines  +     0.73332275156447 *
155389    +        S_NumCatalogPurchases  +     0.25950906585502 * S_NumDealsPurchases
155390    +          +     1.26831094932108 * S_NumStorePurchases
155391    +          +     0.50819627174451 * S_NumWebPurchases
155392    +          +      0.5463426309003 * S_NumWebVisitsMonth
155393    +          +    -1.45156203280121 * S_Recency  +    -0.99155600458731 *
155394    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.14026785899485 * S_Income + 0.71085813088393 * S_Kidhome +
-0.12119457643873 * S_MntFishProducts + 0.52522197349122 * S_MntFruits + 0.44706934196977 *
S_MntGoldProds + 1.26484530402043 * S_MntMeatProducts + 0.4461192743946 * S_MntSweetProducts +
0.68849791421776 * S_MntWines + 0.73332275156447 * S_NumCatalogPurchases + 0.25950906585502 *
S_NumDealsPurchases + 1.26831094932108 * S_NumStorePurchases + 0.50819627174451 *
S_NumWebPurchases + 0.5463426309003 * S_NumWebVisitsMonth + -1.45156203280121 * S_Recency +
-0.99155600458731 * S_Teenhome ;
155395    +   H1x1_4  =     0.28134858392415 * S_Income  +     1.57838616473011 *
155396    +        S_Kidhome  +     0.01685933792865 * S_MntFishProducts
155397    +          +     0.64818795957189 * S_MntFruits  +     0.44053765721056 *
155398    +        S_MntGoldProds  +     -0.0350414210023 * S_MntMeatProducts
155399    +          +     0.73630834236265 * S_MntSweetProducts
155400    +          +     2.20164313777354 * S_MntWines  +    -0.71244138939707 *
155401    +        S_NumCatalogPurchases  +    -0.05218003711946 * S_NumDealsPurchases
155402    +          +     2.08815797619397 * S_NumStorePurchases
155403    +          +     1.47250122683369 * S_NumWebPurchases
155404    +          +    -1.95745344341946 * S_NumWebVisitsMonth
155405    +          +     1.52461902721397 * S_Recency  +     0.07114080397665 *
155406    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.28134858392415 * S_Income + 1.57838616473011 * S_Kidhome +
0.01685933792865 * S_MntFishProducts + 0.64818795957189 * S_MntFruits + 0.44053765721056 *
S_MntGoldProds + -0.0350414210023 * S_MntMeatProducts + 0.73630834236265 * S_MntSweetProducts
+ 2.20164313777354 * S_MntWines + -0.71244138939707 * S_NumCatalogPurchases +
-0.05218003711946 * S_NumDealsPurchases + 2.08815797619397 * S_NumStorePurchases +
1.47250122683369 * S_NumWebPurchases + -1.95745344341946 * S_NumWebVisitsMonth +
1.52461902721397 * S_Recency + 0.07114080397665 * S_Teenhome ;
155407    +   H1x1_5  =     0.06299419029838 * S_Income  +    -0.25263043424438 *
155408    +        S_Kidhome  +    -0.72407836360298 * S_MntFishProducts
155409    +          +     0.46240377706589 * S_MntFruits  +    -0.31168917499552 *
155410    +        S_MntGoldProds  +     3.17795585534164 * S_MntMeatProducts
155411    +          +    -0.23438993753342 * S_MntSweetProducts
155412    +          +     -2.0392497753494 * S_MntWines  +      1.0094456692298 *
155413    +        S_NumCatalogPurchases  +     1.21992922429388 * S_NumDealsPurchases
155414    +          +    -0.49697408067153 * S_NumStorePurchases
155415    +          +     0.41091736049576 * S_NumWebPurchases
155416    +          +     1.61180593172142 * S_NumWebVisitsMonth
155417    +          +    -2.15417652342106 * S_Recency  +    -0.30863432234672 *
155418    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.06299419029838 * S_Income + -0.25263043424438 * S_Kidhome +
-0.72407836360298 * S_MntFishProducts + 0.46240377706589 * S_MntFruits + -0.31168917499552 *
S_MntGoldProds + 3.17795585534164 * S_MntMeatProducts + -0.23438993753342 * S_MntSweetProducts
+ -2.0392497753494 * S_MntWines + 1.0094456692298 * S_NumCatalogPurchases + 1.21992922429388 *
S_NumDealsPurchases + -0.49697408067153 * S_NumStorePurchases + 0.41091736049576 *
S_NumWebPurchases + 1.61180593172142 * S_NumWebVisitsMonth + -2.15417652342106 * S_Recency +
-0.30863432234672 * S_Teenhome ;
155419    +   H1x1_1  = H1x1_1  +     1.15191639869453 * AcceptedCmp10
155420    +          +      0.0367982148477 * AcceptedCmp20  +      0.3258650789605 *
155421    +        AcceptedCmp30  +      0.2580514232707 * AcceptedCmp40
155422    +          +     0.63958723501202 * AcceptedCmp50  +    -0.32640656229888 *
155423    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.15191639869453 * AcceptedCmp10 + 0.0367982148477 *
AcceptedCmp20 + 0.3258650789605 * AcceptedCmp30 + 0.2580514232707 * AcceptedCmp40 +
0.63958723501202 * AcceptedCmp50 + -0.32640656229888 * Complain0 ;
155424    +   H1x1_2  = H1x1_2  +    -1.74950558446111 * AcceptedCmp10
155425    +          +    -0.90356166498734 * AcceptedCmp20  +    -1.23130580993933 *
155426    +        AcceptedCmp30  +     -1.4169795699816 * AcceptedCmp40
155427    +          +    -1.78889837976364 * AcceptedCmp50  +      1.4788954382262 *
155428    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.74950558446111 * AcceptedCmp10 + -0.90356166498734
* AcceptedCmp20 + -1.23130580993933 * AcceptedCmp30 + -1.4169795699816 * AcceptedCmp40 +
-1.78889837976364 * AcceptedCmp50 + 1.4788954382262 * Complain0 ;
155429    +   H1x1_3  = H1x1_3  +     0.19640584758608 * AcceptedCmp10
155430    +          +    -0.02812292141076 * AcceptedCmp20  +     0.18411950002405 *
155431    +        AcceptedCmp30  +     0.14654389018041 * AcceptedCmp40
155432    +          +    -0.73289230090736 * AcceptedCmp50  +    -0.18955862978745 *
155433    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.19640584758608 * AcceptedCmp10 + -0.02812292141076 *
AcceptedCmp20 + 0.18411950002405 * AcceptedCmp30 + 0.14654389018041 * AcceptedCmp40 +
-0.73289230090736 * AcceptedCmp50 + -0.18955862978745 * Complain0 ;
155434    +   H1x1_4  = H1x1_4  +     0.60930619563149 * AcceptedCmp10
155435    +          +     0.56372104821368 * AcceptedCmp20  +     1.23124531565034 *
155436    +        AcceptedCmp30  +     1.16511385622377 * AcceptedCmp40
155437    +          +     0.83299036807857 * AcceptedCmp50  +    -0.87889366207671 *
155438    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.60930619563149 * AcceptedCmp10 + 0.56372104821368 *
AcceptedCmp20 + 1.23124531565034 * AcceptedCmp30 + 1.16511385622377 * AcceptedCmp40 +
0.83299036807857 * AcceptedCmp50 + -0.87889366207671 * Complain0 ;
155439    +   H1x1_5  = H1x1_5  +    -1.02627214772402 * AcceptedCmp10
155440    +          +    -0.35326081554996 * AcceptedCmp20  +    -0.45229632523083 *
155441    +        AcceptedCmp30  +    -0.88576020203346 * AcceptedCmp40
155442    +          +    -0.25524770878943 * AcceptedCmp50  +    -0.58775156249673 *
155443    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -1.02627214772402 * AcceptedCmp10 + -0.35326081554996
* AcceptedCmp20 + -0.45229632523083 * AcceptedCmp30 + -0.88576020203346 * AcceptedCmp40 +
-0.25524770878943 * AcceptedCmp50 + -0.58775156249673 * Complain0 ;
155444    +   H1x1_1  = H1x1_1  +    -0.20048115002767 * Education2n_Cycle
155445    +          +     0.10477823552379 * EducationBasic  +    -0.09122776507376 *
155446    +        EducationGraduation  +    -0.01483389086199 * EducationMaster
155447    +          +    -0.14951932081311 * Marital_StatusDivorced
155448    +          +     0.08343648358981 * Marital_StatusMarried
155449    +          +    -0.52143432598374 * Marital_StatusSingle
155450    +          +    -0.17799942229122 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.20048115002767 * Education2n_Cycle +
0.10477823552379 * EducationBasic + -0.09122776507376 * EducationGraduation +
-0.01483389086199 * EducationMaster + -0.14951932081311 * Marital_StatusDivorced +
0.08343648358981 * Marital_StatusMarried + -0.52143432598374 * Marital_StatusSingle +
-0.17799942229122 * Marital_StatusTogether ;
155451    +   H1x1_2  = H1x1_2  +    -0.06492224317117 * Education2n_Cycle
155452    +          +     0.50630082280639 * EducationBasic  +    -0.32521089553297 *
155453    +        EducationGraduation  +    -0.38968023972702 * EducationMaster
155454    +          +    -0.34495973695408 * Marital_StatusDivorced
155455    +          +    -0.30910829853532 * Marital_StatusMarried
155456    +          +     0.14431404541055 * Marital_StatusSingle
155457    +          +    -0.62673029935295 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.06492224317117 * Education2n_Cycle +
0.50630082280639 * EducationBasic + -0.32521089553297 * EducationGraduation +
-0.38968023972702 * EducationMaster + -0.34495973695408 * Marital_StatusDivorced +
-0.30910829853532 * Marital_StatusMarried + 0.14431404541055 * Marital_StatusSingle +
-0.62673029935295 * Marital_StatusTogether ;
155458    +   H1x1_3  = H1x1_3  +     0.41266521248037 * Education2n_Cycle
155459    +          +    -0.11192325989817 * EducationBasic  +    -0.96742524784448 *
155460    +        EducationGraduation  +     0.05582780345024 * EducationMaster
155461    +          +     0.81191732290197 * Marital_StatusDivorced
155462    +          +    -2.53108753227171 * Marital_StatusMarried
155463    +          +     2.21769123178832 * Marital_StatusSingle
155464    +          +    -0.90613443546426 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.41266521248037 * Education2n_Cycle +
-0.11192325989817 * EducationBasic + -0.96742524784448 * EducationGraduation +
0.05582780345024 * EducationMaster + 0.81191732290197 * Marital_StatusDivorced +
-2.53108753227171 * Marital_StatusMarried + 2.21769123178832 * Marital_StatusSingle +
-0.90613443546426 * Marital_StatusTogether ;
155465    +   H1x1_4  = H1x1_4  +    -0.08882031994616 * Education2n_Cycle
155466    +          +     0.59640481500702 * EducationBasic  +    -0.75285942189639 *
155467    +        EducationGraduation  +     0.52527957409681 * EducationMaster
155468    +          +    -1.26246836163545 * Marital_StatusDivorced
155469    +          +     0.73147045162506 * Marital_StatusMarried
155470    +          +     0.04252836823306 * Marital_StatusSingle
155471    +          +     1.44915119635375 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.08882031994616 * Education2n_Cycle +
0.59640481500702 * EducationBasic + -0.75285942189639 * EducationGraduation + 0.52527957409681
* EducationMaster + -1.26246836163545 * Marital_StatusDivorced + 0.73147045162506 *
Marital_StatusMarried + 0.04252836823306 * Marital_StatusSingle + 1.44915119635375 *
Marital_StatusTogether ;
155472    +   H1x1_5  = H1x1_5  +    -0.24370046099656 * Education2n_Cycle
155473    +          +     0.03233873053213 * EducationBasic  +      0.1375198926931 *
155474    +        EducationGraduation  +      0.0979905405754 * EducationMaster
155475    +          +    -0.25571808514992 * Marital_StatusDivorced
155476    +          +     0.20684027342845 * Marital_StatusMarried
155477    +          +    -0.36983627747986 * Marital_StatusSingle
155478    +          +    -0.08239173696723 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.24370046099656 * Education2n_Cycle +
0.03233873053213 * EducationBasic + 0.1375198926931 * EducationGraduation + 0.0979905405754 *
EducationMaster + -0.25571808514992 * Marital_StatusDivorced + 0.20684027342845 *
Marital_StatusMarried + -0.36983627747986 * Marital_StatusSingle + -0.08239173696723 *
Marital_StatusTogether ;
155479    +   H1x1_1  =    -0.01788649837565 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.01788649837565 + H1x1_1 ;
155480    +   H1x1_2  =     1.77562113267961 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.77562113267961 + H1x1_2 ;
155481    +   H1x1_3  =    -1.36483909507433 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.36483909507433 + H1x1_3 ;
155482    +   H1x1_4  =    -0.17103473926556 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.17103473926556 + H1x1_4 ;
155483    +   H1x1_5  =     0.17065963901812 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.17065963901812 + H1x1_5 ;
155484    +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
155485    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
155486    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
155487    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
155488    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
155489    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
155490    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
155491    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
155492    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
155493    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
155494    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
155495    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
155496    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
155497    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
155498    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
155499    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
155500    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
155501    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
155502    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
155503    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
155504    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
155505    +END;
MPRINT(EM_DIAGRAM):   END;
155506    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
155507    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
155508    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
155509    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
155510    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
155511    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
155512    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
155513    +END;
MPRINT(EM_DIAGRAM):   END;
155514    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
155515    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
155516    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
155517    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
155518    +   P_DepVar1  =    -12.4855028874976 * H1x1_1  +     8.50519000347347 * H1x1_2
155519    +          +     3.84994997572101 * H1x1_3  +    -12.5610415895663 * H1x1_4
155520    +          +     17.4993211655408 * H1x1_5  +     0.14986282100716 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -12.4855028874976 * H1x1_1 + 8.50519000347347 * H1x1_2 +
3.84994997572101 * H1x1_3 + -12.5610415895663 * H1x1_4 + 17.4993211655408 * H1x1_5 +
0.14986282100716 * H1x1_6 ;
155521    +   P_DepVar1  =     3.23272740278636 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.23272740278636 + P_DepVar1 ;
155522    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
155523    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
155524    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
155525    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
155526    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
155527    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
155528    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
155529    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
155530    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
155531    +END;
MPRINT(EM_DIAGRAM):   END;
155532    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
155533    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
155534    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
155535    +END;
MPRINT(EM_DIAGRAM):   END;
155536    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
155537    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
155538    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
155539    +END;
MPRINT(EM_DIAGRAM):   END;
155540    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
155541    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
155542    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
155543    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
155544    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
155545    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
155546    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
155547    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
155548    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
155549    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
155550    +END;
MPRINT(EM_DIAGRAM):   END;
155551    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
155552    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
155553    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
155554    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
155555     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
155556     quit;
155557     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
155558     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
155559     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
155560     retain ID 2 Node "AutoNeural42";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural42";
155561     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
155562     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2220 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2220 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
155563     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
155564     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
155565     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2220 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2220 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
155566     proc sort data=EMWS8.AutoNeural42_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural42_variableset out=_temp2(keep=NAME
CREATOR);
155567     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
155568     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL42_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
155569     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
155570     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
155571     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
155572     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
155573     proc contents data=EMWS8.AutoNeural42_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural42_train out=_meta(keep=NAME) noprint;
155574     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
155575     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
155576     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
155577     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
155578     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
155579     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
155580     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
155581     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
155582     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
155583     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
155583   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1126 rows and 5 columns.
 
155584     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
155585     proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
155586     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1126 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 1126 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
155587     filename _pref
155587   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
155588     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
155589     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
155590    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
155591    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
155592    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
155593    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
155594    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
155595    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
155596     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
155597     quit;
155598     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
155599     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
155600     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
155601     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
155602     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
155603     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
155604     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
155605     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
155606     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
The SAS System
 
      cpu time            0.00 seconds
 
 
155607     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
155608     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
155609     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
155610     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
155611     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
155612     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
155613     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
155614     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
155615     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
155616     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
155617     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
155618     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
155619     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
155620     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
155621     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
155622     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
155623     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
155624     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
155624   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
155625     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
155626     proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
155627     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 1130 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
155628     filename _pref
155628   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
155629     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
155630     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
155631    +
155632    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
155633    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
155633   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
155634    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
155635    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
155636    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
155637    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
155638    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
155639     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
155640     quit;
155641     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
155642     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
155643     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
155644     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
155645     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
155646     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
155647     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
155648     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
155649     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
155650     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
155651     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
155652     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
155653     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
155654     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
155655     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
155656     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
155657     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
155658     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
155659     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
155660     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
155661     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
155662     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
155663     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
155664     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
155665     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
155666     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
155667     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
155667   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
155668     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
155669     proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
155670     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 1169 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
155671     filename _pref
155671   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
155672     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
155673     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
155674    +
155675    +
155676    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
155677    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
155678    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
155679    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
155680    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
155681    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
155682    +
155683    +
155684    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
155685    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
155686    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
155687    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
155688    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
155689    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
155690    +
155691    +
155692    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
155693    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
155694    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
155695    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
155696    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
155697    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
155698    +
155699    +
155700    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
155701    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
155702    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
155703    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
155704    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
155705    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
155706    +
155707    +
155708    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
155709    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
155710    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
155711    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
155712    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
155713    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
155714    +
155715    +
155716    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
155717    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
155718    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
155719    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
155720    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
155721    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
155722    +
155723    +
155724    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
155725    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
155726    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
155727    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
155728    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
155729    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
155730    +
155731    +
155732    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
155733    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
155734    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
155735    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
155736    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
155737    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
155738    +if
155739    +_FILTERNORM1 not in ( '.')
155740    + and
155741    +_FILTERNORM2 not in ( '.')
155742    + and
155743    +_FILTERNORM3 not in ( '.')
155744    + and
155745    +_FILTERNORM4 not in ( '.')
155746    + and
155747    +_FILTERNORM5 not in ( '.')
155748    + and
155749    +_FILTERNORM6 not in ( '.')
155750    + and
155751    +_FILTERNORM7 not in ( ' ')
155752    + and
155753    +_FILTERNORM8 not in ( ' ')
155754    +and
155755    +( Dt_Customer ne .)
155756    +and ( Income ne . and (Income<=107000))
155757    +and ( Kidhome ne .)
155758    +and ( MntFishProducts ne .)
155759    +and ( MntFruits ne .)
155760    +and ( MntGoldProds ne .)
155761    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
155762    +and ( MntSweetProducts ne .)
155763    +and ( MntWines ne .)
155764    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
155765    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
155766    +and ( NumStorePurchases ne .)
155767    +and ( NumWebPurchases ne .)
155768    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
155769    +and ( Recency ne .)
155770    +and ( Teenhome ne .)
155771    +and ( Year_Birth ne .)
155772    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
155773    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
155774    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
155775    +end;
MPRINT(EM_DIAGRAM):   end;
155776    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
155777    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
155778     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
155779     quit;
155780     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
155781     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
155782     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
155783     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
155784     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
155785     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
155786     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
155787     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
155788     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
155789     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
155790     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
155791     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
155792     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
155793     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
155794     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
155795     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
155796     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
155797     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
155798     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
155799     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
155800     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
155801     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
155802     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
155803     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
155804     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
155805     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
155806     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
155806   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
155807     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
155808     proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
155809     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 1235 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
155810     %macro varDept(fcmpdata=,id=);
155811     %global nobs&id scoreFlag&id;
155812     %let scoreFlag&id = 0;
155813     %if &id=1 or ^&fcmpStart %then %do;
155814     proc sort data=&fcmpdata out=_temp&id nodupkey;
155815     by NAME;
155816     where id=&id and LHS in( %let j=1;
155817     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
155818     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
155819     "&var" %let j = %eval(&j+1);
155820     %end;
155821     );
155822     run;
155823     %let dsid = %sysfunc(open(_temp&id));
155824     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
155825     %let dsid = %sysfunc(close(&dsid));
155826     %if &&nobs&id %then %do;
155827     %let scoreFlag&id = 1;
155828     %let fcmpStart = 1;
155829     %end;
155830     %else %let fcmpStart = 0;
155831     %end;
155832     %else %do;
155833     proc sort data=&fcmpdata out=_tempid;
155834     where id=&id;
155835     by LHS;
155836     run;
155837     %let dsid = %sysfunc(open(_tempid));
155838     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
155839     %let dsid = %sysfunc(close(&dsid));
155840     %if ^&&nobs&id %then %do;
155841     proc datasets lib=work nolist;
155842     delete _tempid;
155843     run;
155844     quit;
155845     %end;
155846     %else %do;
155847     data _tempAll;
155848     set %let j=%eval(&id-1);
155849     %do x=1 %to &j;
155850     %if &&nobs&x %then %do;
155851     _temp&x %end;
155852     %end;
155853     ;
155854     run;
155855     proc sql;
155856     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
155856   ! work._tempid p2 where p.name=p2.lhs;
155857     quit;
155858     data _temp&id;
155859     set _temp&id;
155860     where LHS ne '' and NAME ne '' and Node ne '';
155861     run;
155862     proc datasets lib=work nolist;
155863     delete _tempAll;
155864     run;
155865     %let dsid = %sysfunc(open(_temp&id));
155866     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
155867     %let dsid = %sysfunc(close(&dsid));
155868     %if ^&&nobs&id %then %do;
155869     proc datasets lib=work nolist;
155870     delete _temp&id;
155871     run;
155872     quit;
155873     %end;
155874     %else %do;
155875     %let scoreFlag&id = 1;
155876     data _temp&id;
155877     set _temp&id;
155878     where LHS ne NAME and node ne '';
155879     run;
155880     %let dsid = %sysfunc(open(_temp&id));
155881     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
155882     %let dsid = %sysfunc(close(&dsid));
155883     %if ^&&nobs&id %then %do;
155884     proc datasets lib=work nolist;
155885     delete _temp&id;
155886     run;
155887     quit;
155888     %end;
155889     %else %do;
155890     proc sort data=_temp&id nodupkey;
155891     by LHS NAME;
155892     run;
155893     %end;
155894     %end;
155895     %end;
155896     %end;
155897     %mend varDept;
155898     %macro optCode(outdata=fcmpdata);
155899     %global fcmpStart;
155900     %let fcmpStart = 0;
155901     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
155902     %let NumNodes=9;
155903     %do k=1 %to &NumNodes;
155904     %vardept(fcmpdata=&outdata, id=&k);
155905     %end;
155906     %mend optCode;
155907     %optcode(outData=EMWS8.Ensmbl22_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 116 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 85 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 31 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 31 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 31 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp6;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP6 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 31 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
155908     filename _pref
155908   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural47\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural47\EMPUBLISHSCORE.sas";
155909     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
155910     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural47\EMPUBLISHSCORE.sas.
155911    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
155912    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
155913    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
155914    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
155915    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
155916    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
155917    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
155918    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
155919    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
155920    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
155921    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
155922    +LENGTH _WARN_ $4
155923    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
155924    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
155925    +
155926    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
155927    +
155928    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
155929    +
155930    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
155931    +
155932    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
155933    +
155934    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
155935    +
155936    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
155937    +
155938    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
155939    +
155940    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
155941    +
155942    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
155943    +
155944    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
155945    +
155946    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
155947    +
155948    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
155949    +
155950    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
155951    +
155952    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
155953    +
155954    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
155955    +
155956    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
155957    +
155958    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
155959    +
155960    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
155961    +
155962    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
155963    +
155964    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
155965    +
155966    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
155967    +
155968    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
155969    +
155970    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
155971    +
155972    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
155973    +
155974    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
155975    +
155976    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
155977    +
155978    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
155979    +
155980    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
155981    +
155982    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
155983    +
155984    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
155985    +
155986    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
155987    +
155988    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
155989    +
155990    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
155991    +
155992    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
155993    +
155994    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
155995    +
155996    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
155997    +
155998    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
155999    +
156000    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
156001    +
156002    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
156003    +
156004    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
156005    +
156006    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
156007    +
156008    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
156009    +
156010    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
156011    +
156012    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
156013    +
156014    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
156015    +
156016    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
156017    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
156018    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
156019    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
156020    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
156021    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
156022    +end;
MPRINT(EM_DIAGRAM):   end;
156023    +else do;
MPRINT(EM_DIAGRAM):   else do;
156024    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
156025    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
156026    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
156027    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
156028    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
156029    +   end;
MPRINT(EM_DIAGRAM):   end;
156030    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
156031    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
156032    +   end;
MPRINT(EM_DIAGRAM):   end;
156033    +   else do;
MPRINT(EM_DIAGRAM):   else do;
156034    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
156035    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
156036    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
156037    +   end;
MPRINT(EM_DIAGRAM):   end;
156038    +end;
MPRINT(EM_DIAGRAM):   end;
156039    +
156040    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
156041    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
156042    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
156043    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
156044    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
156045    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
156046    +end;
MPRINT(EM_DIAGRAM):   end;
156047    +else do;
MPRINT(EM_DIAGRAM):   else do;
156048    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
156049    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
156050    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
156051    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
156052    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
156053    +   end;
MPRINT(EM_DIAGRAM):   end;
156054    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
156055    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
156056    +   end;
MPRINT(EM_DIAGRAM):   end;
156057    +   else do;
MPRINT(EM_DIAGRAM):   else do;
156058    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
156059    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
156060    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
156061    +   end;
MPRINT(EM_DIAGRAM):   end;
156062    +end;
MPRINT(EM_DIAGRAM):   end;
156063    +
156064    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
156065    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
156066    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
156067    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
156068    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
156069    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
156070    +end;
MPRINT(EM_DIAGRAM):   end;
156071    +else do;
MPRINT(EM_DIAGRAM):   else do;
156072    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
156073    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
156074    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
156075    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
156076    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
156077    +   end;
MPRINT(EM_DIAGRAM):   end;
156078    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
156079    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
156080    +   end;
MPRINT(EM_DIAGRAM):   end;
156081    +   else do;
MPRINT(EM_DIAGRAM):   else do;
156082    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
156083    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
156084    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
156085    +   end;
MPRINT(EM_DIAGRAM):   end;
156086    +end;
MPRINT(EM_DIAGRAM):   end;
156087    +
156088    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
156089    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
156090    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
156091    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
156092    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
156093    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
156094    +end;
MPRINT(EM_DIAGRAM):   end;
156095    +else do;
MPRINT(EM_DIAGRAM):   else do;
156096    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
156097    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
156098    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
156099    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
156100    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
156101    +   end;
MPRINT(EM_DIAGRAM):   end;
156102    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
156103    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
156104    +   end;
MPRINT(EM_DIAGRAM):   end;
156105    +   else do;
MPRINT(EM_DIAGRAM):   else do;
156106    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
156107    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
156108    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
156109    +   end;
MPRINT(EM_DIAGRAM):   end;
156110    +end;
MPRINT(EM_DIAGRAM):   end;
156111    +
156112    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
156113    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
156114    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
156115    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
156116    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
156117    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
156118    +end;
MPRINT(EM_DIAGRAM):   end;
156119    +else do;
MPRINT(EM_DIAGRAM):   else do;
156120    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
156121    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
156122    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
156123    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
156124    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
156125    +   end;
MPRINT(EM_DIAGRAM):   end;
156126    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
156127    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
156128    +   end;
MPRINT(EM_DIAGRAM):   end;
156129    +   else do;
MPRINT(EM_DIAGRAM):   else do;
156130    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
156131    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
156132    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
156133    +   end;
MPRINT(EM_DIAGRAM):   end;
156134    +end;
MPRINT(EM_DIAGRAM):   end;
156135    +
156136    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
156137    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
156138    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
156139    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
156140    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
156141    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
156142    +end;
MPRINT(EM_DIAGRAM):   end;
156143    +else do;
MPRINT(EM_DIAGRAM):   else do;
156144    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
156145    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
156146    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
156147    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
156148    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
156149    +   end;
MPRINT(EM_DIAGRAM):   end;
156150    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
156151    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
156152    +   end;
MPRINT(EM_DIAGRAM):   end;
156153    +   else do;
MPRINT(EM_DIAGRAM):   else do;
156154    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
156155    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
156156    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
156157    +   end;
MPRINT(EM_DIAGRAM):   end;
156158    +end;
MPRINT(EM_DIAGRAM):   end;
156159    +
156160    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
156161    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
156162    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
156163    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
156164    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
156165    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
156166    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
156167    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
156168    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
156169    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
156170    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
156171    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
156172    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
156173    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
156174    +end;
MPRINT(EM_DIAGRAM):   end;
156175    +else do;
MPRINT(EM_DIAGRAM):   else do;
156176    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
156177    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
156178    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
156179    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
156180    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
156181    +   end;
MPRINT(EM_DIAGRAM):   end;
156182    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
156183    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
156184    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
156185    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
156186    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
156187    +   end;
MPRINT(EM_DIAGRAM):   end;
156188    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
156189    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
156190    +   end;
MPRINT(EM_DIAGRAM):   end;
156191    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
156192    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
156193    +   end;
MPRINT(EM_DIAGRAM):   end;
156194    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
156195    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
156196    +   end;
MPRINT(EM_DIAGRAM):   end;
156197    +   else do;
MPRINT(EM_DIAGRAM):   else do;
156198    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
156199    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
156200    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
156201    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
156202    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
156203    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
156204    +   end;
MPRINT(EM_DIAGRAM):   end;
156205    +end;
MPRINT(EM_DIAGRAM):   end;
156206    +
156207    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
156208    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
156209    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
156210    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
156211    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
156212    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
156213    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
156214    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
156215    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
156216    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
156217    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
156218    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
156219    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
156220    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
156221    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
156222    +end;
MPRINT(EM_DIAGRAM):   end;
156223    +else do;
MPRINT(EM_DIAGRAM):   else do;
156224    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
156225    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
156226    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
156227    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
156228    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
156229    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
156230    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
156231    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
156232    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
156233    +         end;
MPRINT(EM_DIAGRAM):   end;
156234    +         else do;
MPRINT(EM_DIAGRAM):   else do;
156235    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
156236    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
156237    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
156238    +            end;
MPRINT(EM_DIAGRAM):   end;
156239    +         end;
MPRINT(EM_DIAGRAM):   end;
156240    +      end;
MPRINT(EM_DIAGRAM):   end;
156241    +      else do;
MPRINT(EM_DIAGRAM):   else do;
156242    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
156243    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
156244    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
156245    +         end;
MPRINT(EM_DIAGRAM):   end;
156246    +      end;
MPRINT(EM_DIAGRAM):   end;
156247    +   end;
MPRINT(EM_DIAGRAM):   end;
156248    +   else do;
MPRINT(EM_DIAGRAM):   else do;
156249    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
156250    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
156251    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
156252    +      end;
MPRINT(EM_DIAGRAM):   end;
156253    +      else do;
MPRINT(EM_DIAGRAM):   else do;
156254    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
156255    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
156256    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
156257    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
156258    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
156259    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
156260    +         end;
MPRINT(EM_DIAGRAM):   end;
156261    +      end;
MPRINT(EM_DIAGRAM):   end;
156262    +   end;
MPRINT(EM_DIAGRAM):   end;
156263    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
156264    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
156265    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
156266    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
156267    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
156268    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
156269    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
156270    +   end;
MPRINT(EM_DIAGRAM):   end;
156271    +end;
MPRINT(EM_DIAGRAM):   end;
156272    +
156273    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
156274    +*** Checking missing input Interval
156275    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
156276    +
156277    +IF NMISS(
156278    +   Income ,
156279    +   Kidhome ,
156280    +   MntFishProducts ,
156281    +   MntFruits ,
156282    +   MntGoldProds ,
156283    +   MntMeatProducts ,
156284    +   MntSweetProducts ,
156285    +   MntWines ,
156286    +   NumCatalogPurchases ,
156287    +   NumDealsPurchases ,
156288    +   NumStorePurchases ,
156289    +   NumWebPurchases ,
156290    +   NumWebVisitsMonth ,
156291    +   Recency ,
156292    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
156293    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
156294    +
156295    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
156296    +END;
MPRINT(EM_DIAGRAM):   END;
156297    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
156298    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
156299    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
156300    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
156301    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
156302    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
156303    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
156304    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
156305    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
156306    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
156307    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
156308    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
156309    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
156310    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
156311    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
156312    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
156313    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
156314    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
156315    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
156316    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
156317    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
156318    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
156319    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
156320    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
156321    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
156322    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
156323    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
156324    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
156325    +END;
MPRINT(EM_DIAGRAM):   END;
156326    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
156327    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
156328    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
156329    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
156330    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
156331    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
156332    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
156333    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
156334    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
156335    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
156336    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
156337    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
156338    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
156339    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
156340    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
156341    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
156342    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
156343    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
156344    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
156345    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
156346    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
156347    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
156348    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
156349    +   ELSE S_NumCatalogPurchases
156350    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
156351    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
156352    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
156353    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
156354    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
156355    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
156356    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
156357    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
156358    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
156359    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
156360    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
156361    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
156362    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
156363    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
156364    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
156365    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
156366    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
156367    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
156368    +END;
MPRINT(EM_DIAGRAM):   END;
156369    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
156370    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
156371    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
156372    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
156373    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
156374    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
156375    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
156376    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
156377    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
156378    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
156379    +   H1x1_1  =     -0.6712927499227 * S_Income  +     0.52481056075303 *
156380    +        S_Kidhome  +     -2.3662268017216 * S_MntFishProducts
156381    +          +    -1.70194161526543 * S_MntFruits  +    -0.12195276696714 *
156382    +        S_MntGoldProds  +     5.02051235731232 * S_MntMeatProducts
156383    +          +    -2.37073629008864 * S_MntSweetProducts
156384    +          +    -7.49792253647533 * S_MntWines  +     1.93063890722455 *
156385    +        S_NumCatalogPurchases  +     1.44821336448113 * S_NumDealsPurchases
156386    +          +    -1.29021742502316 * S_NumStorePurchases
156387    +          +    -0.00949168969466 * S_NumWebPurchases
156388    +          +    -0.32248137192321 * S_NumWebVisitsMonth
156389    +          +    -0.55879173873733 * S_Recency  +    -0.22439654268554 *
156390    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.6712927499227 * S_Income + 0.52481056075303 * S_Kidhome +
-2.3662268017216 * S_MntFishProducts + -1.70194161526543 * S_MntFruits + -0.12195276696714 *
S_MntGoldProds + 5.02051235731232 * S_MntMeatProducts + -2.37073629008864 * S_MntSweetProducts
+ -7.49792253647533 * S_MntWines + 1.93063890722455 * S_NumCatalogPurchases + 1.44821336448113
* S_NumDealsPurchases + -1.29021742502316 * S_NumStorePurchases + -0.00949168969466 *
S_NumWebPurchases + -0.32248137192321 * S_NumWebVisitsMonth + -0.55879173873733 * S_Recency +
-0.22439654268554 * S_Teenhome ;
156391    +   H1x1_2  =    -1.63837717417638 * S_Income  +     1.01712005677207 *
156392    +        S_Kidhome  +    -0.11452425716086 * S_MntFishProducts
156393    +          +    -0.08273769039219 * S_MntFruits  +    -0.47045422182093 *
156394    +        S_MntGoldProds  +    -0.64593629987888 * S_MntMeatProducts
156395    +          +     0.41126087093412 * S_MntSweetProducts
156396    +          +    -0.00653581981542 * S_MntWines  +    -1.62534004647483 *
156397    +        S_NumCatalogPurchases  +    -0.74740978232431 * S_NumDealsPurchases
156398    +          +      0.2319226227964 * S_NumStorePurchases
156399    +          +     0.31190969795517 * S_NumWebPurchases
156400    +          +      -1.987305550542 * S_NumWebVisitsMonth
156401    +          +     2.46312593342153 * S_Recency  +     1.89469486725188 *
156402    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.63837717417638 * S_Income + 1.01712005677207 * S_Kidhome +
-0.11452425716086 * S_MntFishProducts + -0.08273769039219 * S_MntFruits + -0.47045422182093 *
S_MntGoldProds + -0.64593629987888 * S_MntMeatProducts + 0.41126087093412 * S_MntSweetProducts
+ -0.00653581981542 * S_MntWines + -1.62534004647483 * S_NumCatalogPurchases +
-0.74740978232431 * S_NumDealsPurchases + 0.2319226227964 * S_NumStorePurchases +
0.31190969795517 * S_NumWebPurchases + -1.987305550542 * S_NumWebVisitsMonth +
2.46312593342153 * S_Recency + 1.89469486725188 * S_Teenhome ;
156403    +   H1x1_3  =    -0.78523773312865 * S_Income  +    -1.40266608040579 *
156404    +        S_Kidhome  +     0.01206304735425 * S_MntFishProducts
156405    +          +    -0.50371384095637 * S_MntFruits  +    -0.93176870066879 *
156406    +        S_MntGoldProds  +    -0.53990224542491 * S_MntMeatProducts
156407    +          +    -0.73991431726966 * S_MntSweetProducts
156408    +          +    -0.21227505043037 * S_MntWines  +     0.42667885020643 *
156409    +        S_NumCatalogPurchases  +    -0.34821401096287 * S_NumDealsPurchases
156410    +          +    -2.50826402419251 * S_NumStorePurchases
156411    +          +    -0.30764477738015 * S_NumWebPurchases
156412    +          +     1.21240794582671 * S_NumWebVisitsMonth
156413    +          +    -2.22374004865256 * S_Recency  +    -0.07389156638234 *
156414    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.78523773312865 * S_Income + -1.40266608040579 * S_Kidhome +
0.01206304735425 * S_MntFishProducts + -0.50371384095637 * S_MntFruits + -0.93176870066879 *
S_MntGoldProds + -0.53990224542491 * S_MntMeatProducts + -0.73991431726966 *
S_MntSweetProducts + -0.21227505043037 * S_MntWines + 0.42667885020643 * S_NumCatalogPurchases
+ -0.34821401096287 * S_NumDealsPurchases + -2.50826402419251 * S_NumStorePurchases +
-0.30764477738015 * S_NumWebPurchases + 1.21240794582671 * S_NumWebVisitsMonth +
-2.22374004865256 * S_Recency + -0.07389156638234 * S_Teenhome ;
156415    +   H1x1_4  =     1.52339017953874 * S_Income  +     -0.0800472387091 *
156416    +        S_Kidhome  +    -0.81466158613596 * S_MntFishProducts
156417    +          +    -1.56740792821078 * S_MntFruits  +    -0.44251282056636 *
156418    +        S_MntGoldProds  +     4.21345569180051 * S_MntMeatProducts
156419    +          +     1.07674028011002 * S_MntSweetProducts
156420    +          +    -4.16668334099034 * S_MntWines  +     2.33183855256347 *
156421    +        S_NumCatalogPurchases  +     1.55678471765653 * S_NumDealsPurchases
156422    +          +    -0.47776935727231 * S_NumStorePurchases
156423    +          +     -0.5890810666834 * S_NumWebPurchases
156424    +          +      1.3845716796855 * S_NumWebVisitsMonth
156425    +          +    -0.37826249433224 * S_Recency  +    -0.32813220931783 *
156426    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.52339017953874 * S_Income + -0.0800472387091 * S_Kidhome +
-0.81466158613596 * S_MntFishProducts + -1.56740792821078 * S_MntFruits + -0.44251282056636 *
S_MntGoldProds + 4.21345569180051 * S_MntMeatProducts + 1.07674028011002 * S_MntSweetProducts
+ -4.16668334099034 * S_MntWines + 2.33183855256347 * S_NumCatalogPurchases + 1.55678471765653
* S_NumDealsPurchases + -0.47776935727231 * S_NumStorePurchases + -0.5890810666834 *
S_NumWebPurchases + 1.3845716796855 * S_NumWebVisitsMonth + -0.37826249433224 * S_Recency +
-0.32813220931783 * S_Teenhome ;
156427    +   H1x1_1  = H1x1_1  +     -1.8652801761626 * AcceptedCmp10
156428    +          +    -2.15838385124109 * AcceptedCmp20  +    -0.32281263106473 *
156429    +        AcceptedCmp30  +    -0.52751972284584 * AcceptedCmp40
156430    +          +    -0.16576520159698 * AcceptedCmp50  +      0.0798586391257 *
156431    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.8652801761626 * AcceptedCmp10 + -2.15838385124109 *
AcceptedCmp20 + -0.32281263106473 * AcceptedCmp30 + -0.52751972284584 * AcceptedCmp40 +
-0.16576520159698 * AcceptedCmp50 + 0.0798586391257 * Complain0 ;
156432    +   H1x1_2  = H1x1_2  +     1.18847829749899 * AcceptedCmp10
156433    +          +     2.28872916962314 * AcceptedCmp20  +      0.7666362501062 *
156434    +        AcceptedCmp30  +     0.63272382969915 * AcceptedCmp40
156435    +          +     1.03410667663543 * AcceptedCmp50  +    -0.44709535985633 *
156436    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.18847829749899 * AcceptedCmp10 + 2.28872916962314 *
AcceptedCmp20 + 0.7666362501062 * AcceptedCmp30 + 0.63272382969915 * AcceptedCmp40 +
1.03410667663543 * AcceptedCmp50 + -0.44709535985633 * Complain0 ;
156437    +   H1x1_3  = H1x1_3  +    -0.30260316693677 * AcceptedCmp10
156438    +          +     1.37858034146365 * AcceptedCmp20  +    -1.95638038137808 *
156439    +        AcceptedCmp30  +     -2.1581101738114 * AcceptedCmp40
156440    +          +    -1.72040670376675 * AcceptedCmp50  +     2.82913230380101 *
156441    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.30260316693677 * AcceptedCmp10 + 1.37858034146365 *
AcceptedCmp20 + -1.95638038137808 * AcceptedCmp30 + -2.1581101738114 * AcceptedCmp40 +
-1.72040670376675 * AcceptedCmp50 + 2.82913230380101 * Complain0 ;
156442    +   H1x1_4  = H1x1_4  +     0.37463576870294 * AcceptedCmp10
156443    +          +     -1.1935629973001 * AcceptedCmp20  +     -0.0357513820165 *
156444    +        AcceptedCmp30  +    -0.34228453024248 * AcceptedCmp40
156445    +          +     0.08692364147086 * AcceptedCmp50  +     0.01804293030366 *
156446    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.37463576870294 * AcceptedCmp10 + -1.1935629973001 *
AcceptedCmp20 + -0.0357513820165 * AcceptedCmp30 + -0.34228453024248 * AcceptedCmp40 +
0.08692364147086 * AcceptedCmp50 + 0.01804293030366 * Complain0 ;
156447    +   H1x1_1  = H1x1_1  +     0.10559298643668 * Education2n_Cycle
156448    +          +     -0.5051689695544 * EducationBasic  +     0.07434632730326 *
156449    +        EducationGraduation  +     0.68592368666749 * EducationMaster
156450    +          +     0.38999748028122 * Marital_StatusDivorced
156451    +          +     0.44180844463279 * Marital_StatusMarried
156452    +          +     0.63824884669155 * Marital_StatusSingle
156453    +          +    -0.26198648898013 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.10559298643668 * Education2n_Cycle +
-0.5051689695544 * EducationBasic + 0.07434632730326 * EducationGraduation + 0.68592368666749
* EducationMaster + 0.38999748028122 * Marital_StatusDivorced + 0.44180844463279 *
Marital_StatusMarried + 0.63824884669155 * Marital_StatusSingle + -0.26198648898013 *
Marital_StatusTogether ;
156454    +   H1x1_2  = H1x1_2  +     0.38077564253123 * Education2n_Cycle
156455    +          +    -1.71516234680597 * EducationBasic  +      0.9305914926408 *
156456    +        EducationGraduation  +    -0.48500520310542 * EducationMaster
156457    +          +    -0.95537871859519 * Marital_StatusDivorced
156458    +          +     2.55061153921286 * Marital_StatusMarried
156459    +          +    -1.78007154396711 * Marital_StatusSingle
156460    +          +     1.47779717106964 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.38077564253123 * Education2n_Cycle +
-1.71516234680597 * EducationBasic + 0.9305914926408 * EducationGraduation + -0.48500520310542
* EducationMaster + -0.95537871859519 * Marital_StatusDivorced + 2.55061153921286 *
Marital_StatusMarried + -1.78007154396711 * Marital_StatusSingle + 1.47779717106964 *
Marital_StatusTogether ;
156461    +   H1x1_3  = H1x1_3  +    -0.26877104077313 * Education2n_Cycle
156462    +          +    -1.51047207681049 * EducationBasic  +     1.00818590807055 *
156463    +        EducationGraduation  +    -2.08836171183474 * EducationMaster
156464    +          +     1.29930912124343 * Marital_StatusDivorced
156465    +          +    -1.63037830924789 * Marital_StatusMarried
156466    +          +     0.19040732776086 * Marital_StatusSingle
156467    +          +     -3.9038060950259 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.26877104077313 * Education2n_Cycle +
-1.51047207681049 * EducationBasic + 1.00818590807055 * EducationGraduation +
-2.08836171183474 * EducationMaster + 1.29930912124343 * Marital_StatusDivorced +
-1.63037830924789 * Marital_StatusMarried + 0.19040732776086 * Marital_StatusSingle +
-3.9038060950259 * Marital_StatusTogether ;
156468    +   H1x1_4  = H1x1_4  +     0.59574708300703 * Education2n_Cycle
156469    +          +    -0.19936070861543 * EducationBasic  +     0.82683145042233 *
156470    +        EducationGraduation  +    -0.24015931152788 * EducationMaster
156471    +          +     -0.3129003025095 * Marital_StatusDivorced
156472    +          +     0.00843550425239 * Marital_StatusMarried
156473    +          +    -0.20416436114776 * Marital_StatusSingle
156474    +          +     1.08624823622502 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.59574708300703 * Education2n_Cycle +
-0.19936070861543 * EducationBasic + 0.82683145042233 * EducationGraduation +
-0.24015931152788 * EducationMaster + -0.3129003025095 * Marital_StatusDivorced +
0.00843550425239 * Marital_StatusMarried + -0.20416436114776 * Marital_StatusSingle +
1.08624823622502 * Marital_StatusTogether ;
156475    +   H1x1_1  =    -2.66745806568988 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.66745806568988 + H1x1_1 ;
156476    +   H1x1_2  =     1.39870734752375 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.39870734752375 + H1x1_2 ;
156477    +   H1x1_3  =     3.90802178606462 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 3.90802178606462 + H1x1_3 ;
156478    +   H1x1_4  =    -1.61490323089776 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.61490323089776 + H1x1_4 ;
156479    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
156480    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
156481    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
156482    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
156483    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
156484    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
156485    +END;
MPRINT(EM_DIAGRAM):   END;
156486    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
156487    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
156488    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
156489    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
156490    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
156491    +END;
MPRINT(EM_DIAGRAM):   END;
156492    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
156493    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
156494    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
156495    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
156496    +   H1x2_1  =     0.40035517192793 * S_Income  +     1.50961149935512 *
156497    +        S_Kidhome  +    -0.71749794576247 * S_MntFishProducts
156498    +          +    -0.80539813415293 * S_MntFruits  +    -0.11190500470397 *
156499    +        S_MntGoldProds  +    -1.00287277559415 * S_MntMeatProducts
156500    +          +    -0.90866858123806 * S_MntSweetProducts
156501    +          +     0.48761861591898 * S_MntWines  +    -0.00278053699018 *
156502    +        S_NumCatalogPurchases  +     1.76527380505645 * S_NumDealsPurchases
156503    +          +     1.45805686107789 * S_NumStorePurchases
156504    +          +     1.48794767642409 * S_NumWebPurchases
156505    +          +    -1.24357395997191 * S_NumWebVisitsMonth
156506    +          +     2.73747730751211 * S_Recency  +    -0.74105180435611 *
156507    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.40035517192793 * S_Income + 1.50961149935512 * S_Kidhome +
-0.71749794576247 * S_MntFishProducts + -0.80539813415293 * S_MntFruits + -0.11190500470397 *
S_MntGoldProds + -1.00287277559415 * S_MntMeatProducts + -0.90866858123806 *
S_MntSweetProducts + 0.48761861591898 * S_MntWines + -0.00278053699018 * S_NumCatalogPurchases
+ 1.76527380505645 * S_NumDealsPurchases + 1.45805686107789 * S_NumStorePurchases +
1.48794767642409 * S_NumWebPurchases + -1.24357395997191 * S_NumWebVisitsMonth +
2.73747730751211 * S_Recency + -0.74105180435611 * S_Teenhome ;
156508    +   H1x2_2  =    -2.30368761501045 * S_Income  +     0.82837234680306 *
156509    +        S_Kidhome  +    -0.57801225504203 * S_MntFishProducts
156510    +          +    -0.53882153761332 * S_MntFruits  +    -0.06305202172404 *
156511    +        S_MntGoldProds  +    -0.83741138145577 * S_MntMeatProducts
156512    +          +     1.05010358762976 * S_MntSweetProducts
156513    +          +     -0.8308916879344 * S_MntWines  +     0.00135039846616 *
156514    +        S_NumCatalogPurchases  +     -0.1426130520252 * S_NumDealsPurchases
156515    +          +    -2.04318529474165 * S_NumStorePurchases
156516    +          +     1.64478964728594 * S_NumWebPurchases
156517    +          +    -0.74790322980646 * S_NumWebVisitsMonth
156518    +          +     0.44846346006135 * S_Recency  +    -1.17558204887145 *
156519    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.30368761501045 * S_Income + 0.82837234680306 * S_Kidhome +
-0.57801225504203 * S_MntFishProducts + -0.53882153761332 * S_MntFruits + -0.06305202172404 *
S_MntGoldProds + -0.83741138145577 * S_MntMeatProducts + 1.05010358762976 * S_MntSweetProducts
+ -0.8308916879344 * S_MntWines + 0.00135039846616 * S_NumCatalogPurchases + -0.1426130520252
* S_NumDealsPurchases + -2.04318529474165 * S_NumStorePurchases + 1.64478964728594 *
S_NumWebPurchases + -0.74790322980646 * S_NumWebVisitsMonth + 0.44846346006135 * S_Recency +
-1.17558204887145 * S_Teenhome ;
156520    +   H1x2_3  =     1.07803134847301 * S_Income  +     1.10001550023539 *
156521    +        S_Kidhome  +      2.1312863754193 * S_MntFishProducts
156522    +          +    -0.41841353908141 * S_MntFruits  +    -0.28009599678539 *
156523    +        S_MntGoldProds  +    -0.57516542648625 * S_MntMeatProducts
156524    +          +     0.39974532423377 * S_MntSweetProducts
156525    +          +    -1.03786923973351 * S_MntWines  +    -0.21873654141419 *
156526    +        S_NumCatalogPurchases  +    -0.12545360575656 * S_NumDealsPurchases
156527    +          +     0.70805557348415 * S_NumStorePurchases
156528    +          +     2.40362900277228 * S_NumWebPurchases
156529    +          +    -0.84521247676043 * S_NumWebVisitsMonth
156530    +          +     4.38953216910793 * S_Recency  +     1.39159599477449 *
156531    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.07803134847301 * S_Income + 1.10001550023539 * S_Kidhome +
2.1312863754193 * S_MntFishProducts + -0.41841353908141 * S_MntFruits + -0.28009599678539 *
S_MntGoldProds + -0.57516542648625 * S_MntMeatProducts + 0.39974532423377 * S_MntSweetProducts
+ -1.03786923973351 * S_MntWines + -0.21873654141419 * S_NumCatalogPurchases +
-0.12545360575656 * S_NumDealsPurchases + 0.70805557348415 * S_NumStorePurchases +
2.40362900277228 * S_NumWebPurchases + -0.84521247676043 * S_NumWebVisitsMonth +
4.38953216910793 * S_Recency + 1.39159599477449 * S_Teenhome ;
156532    +   H1x2_4  =      1.5904518722284 * S_Income  +     0.14957259343911 *
156533    +        S_Kidhome  +     1.71856101884761 * S_MntFishProducts
156534    +          +     0.97544338421034 * S_MntFruits  +     1.16387775609385 *
156535    +        S_MntGoldProds  +    -0.43463910907731 * S_MntMeatProducts
156536    +          +     1.67907268159197 * S_MntSweetProducts
156537    +          +    -0.67372438764914 * S_MntWines  +     0.34705529867224 *
156538    +        S_NumCatalogPurchases  +     1.55570260456887 * S_NumDealsPurchases
156539    +          +      0.0818178054474 * S_NumStorePurchases
156540    +          +     0.21533198164279 * S_NumWebPurchases
156541    +          +     2.13590425604302 * S_NumWebVisitsMonth
156542    +          +    -2.07481510631659 * S_Recency  +    -0.82288425478762 *
156543    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.5904518722284 * S_Income + 0.14957259343911 * S_Kidhome +
1.71856101884761 * S_MntFishProducts + 0.97544338421034 * S_MntFruits + 1.16387775609385 *
S_MntGoldProds + -0.43463910907731 * S_MntMeatProducts + 1.67907268159197 * S_MntSweetProducts
+ -0.67372438764914 * S_MntWines + 0.34705529867224 * S_NumCatalogPurchases + 1.55570260456887
* S_NumDealsPurchases + 0.0818178054474 * S_NumStorePurchases + 0.21533198164279 *
S_NumWebPurchases + 2.13590425604302 * S_NumWebVisitsMonth + -2.07481510631659 * S_Recency +
-0.82288425478762 * S_Teenhome ;
156544    +   H1x2_1  = H1x2_1  +    -1.62231361085618 * AcceptedCmp10
156545    +          +     0.93841494775887 * AcceptedCmp20  +      0.1734706863831 *
156546    +        AcceptedCmp30  +     0.16475784850175 * AcceptedCmp40
156547    +          +     0.65486951368163 * AcceptedCmp50  +      1.6226382489877 *
156548    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.62231361085618 * AcceptedCmp10 + 0.93841494775887 *
AcceptedCmp20 + 0.1734706863831 * AcceptedCmp30 + 0.16475784850175 * AcceptedCmp40 +
0.65486951368163 * AcceptedCmp50 + 1.6226382489877 * Complain0 ;
156549    +   H1x2_2  = H1x2_2  +     0.93875540013493 * AcceptedCmp10
156550    +          +     2.69754413059384 * AcceptedCmp20  +    -0.30913025234768 *
156551    +        AcceptedCmp30  +    -0.00924007964301 * AcceptedCmp40
156552    +          +     -0.7359545134435 * AcceptedCmp50  +    -0.44748157506074 *
156553    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.93875540013493 * AcceptedCmp10 + 2.69754413059384 *
AcceptedCmp20 + -0.30913025234768 * AcceptedCmp30 + -0.00924007964301 * AcceptedCmp40 +
-0.7359545134435 * AcceptedCmp50 + -0.44748157506074 * Complain0 ;
156554    +   H1x2_3  = H1x2_3  +      0.4023712256607 * AcceptedCmp10
156555    +          +    -0.46100225887196 * AcceptedCmp20  +    -0.11545325868036 *
156556    +        AcceptedCmp30  +     1.81326302523772 * AcceptedCmp40
156557    +          +     1.57642234573579 * AcceptedCmp50  +    -0.52645724664984 *
156558    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.4023712256607 * AcceptedCmp10 + -0.46100225887196 *
AcceptedCmp20 + -0.11545325868036 * AcceptedCmp30 + 1.81326302523772 * AcceptedCmp40 +
1.57642234573579 * AcceptedCmp50 + -0.52645724664984 * Complain0 ;
156559    +   H1x2_4  = H1x2_4  +    -1.08307715440234 * AcceptedCmp10
156560    +          +     0.10309372709877 * AcceptedCmp20  +    -1.18814330876811 *
156561    +        AcceptedCmp30  +    -1.69102202926075 * AcceptedCmp40
156562    +          +     0.10465943889984 * AcceptedCmp50  +    -0.96523771648083 *
156563    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.08307715440234 * AcceptedCmp10 + 0.10309372709877 *
AcceptedCmp20 + -1.18814330876811 * AcceptedCmp30 + -1.69102202926075 * AcceptedCmp40 +
0.10465943889984 * AcceptedCmp50 + -0.96523771648083 * Complain0 ;
156564    +   H1x2_1  = H1x2_1  +     0.57966380694999 * Education2n_Cycle
156565    +          +     1.09807543038463 * EducationBasic  +     0.56896005764417 *
156566    +        EducationGraduation  +     0.78238700450794 * EducationMaster
156567    +          +     0.09735596304222 * Marital_StatusDivorced
156568    +          +    -0.41892050812825 * Marital_StatusMarried
156569    +          +    -1.42753782654911 * Marital_StatusSingle
156570    +          +     2.12640980869845 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.57966380694999 * Education2n_Cycle +
1.09807543038463 * EducationBasic + 0.56896005764417 * EducationGraduation + 0.78238700450794
* EducationMaster + 0.09735596304222 * Marital_StatusDivorced + -0.41892050812825 *
Marital_StatusMarried + -1.42753782654911 * Marital_StatusSingle + 2.12640980869845 *
Marital_StatusTogether ;
156571    +   H1x2_2  = H1x2_2  +     1.23142964464278 * Education2n_Cycle
156572    +          +    -0.57685007681361 * EducationBasic  +     0.95565027871272 *
156573    +        EducationGraduation  +     1.03407121736627 * EducationMaster
156574    +          +    -0.32415267410507 * Marital_StatusDivorced
156575    +          +     0.49045578856782 * Marital_StatusMarried
156576    +          +    -1.95612005933176 * Marital_StatusSingle
156577    +          +    -0.09380239900044 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.23142964464278 * Education2n_Cycle +
-0.57685007681361 * EducationBasic + 0.95565027871272 * EducationGraduation + 1.03407121736627
* EducationMaster + -0.32415267410507 * Marital_StatusDivorced + 0.49045578856782 *
Marital_StatusMarried + -1.95612005933176 * Marital_StatusSingle + -0.09380239900044 *
Marital_StatusTogether ;
156578    +   H1x2_3  = H1x2_3  +    -0.59991828858437 * Education2n_Cycle
156579    +          +     0.16738017494874 * EducationBasic  +     1.11954020630495 *
156580    +        EducationGraduation  +    -1.26111004544108 * EducationMaster
156581    +          +    -1.25715350788627 * Marital_StatusDivorced
156582    +          +     0.74269511935299 * Marital_StatusMarried
156583    +          +    -0.27394822792771 * Marital_StatusSingle
156584    +          +     0.32120400150108 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.59991828858437 * Education2n_Cycle +
0.16738017494874 * EducationBasic + 1.11954020630495 * EducationGraduation + -1.26111004544108
* EducationMaster + -1.25715350788627 * Marital_StatusDivorced + 0.74269511935299 *
Marital_StatusMarried + -0.27394822792771 * Marital_StatusSingle + 0.32120400150108 *
Marital_StatusTogether ;
156585    +   H1x2_4  = H1x2_4  +     0.73858886461182 * Education2n_Cycle
156586    +          +     1.18482398810163 * EducationBasic  +     0.31912715416105 *
156587    +        EducationGraduation  +     -0.7403940659871 * EducationMaster
156588    +          +    -1.42754006114782 * Marital_StatusDivorced
156589    +          +    -0.13979120103654 * Marital_StatusMarried
156590    +          +    -1.66244370644258 * Marital_StatusSingle
156591    +          +     1.29295770867497 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.73858886461182 * Education2n_Cycle +
1.18482398810163 * EducationBasic + 0.31912715416105 * EducationGraduation + -0.7403940659871
* EducationMaster + -1.42754006114782 * Marital_StatusDivorced + -0.13979120103654 *
Marital_StatusMarried + -1.66244370644258 * Marital_StatusSingle + 1.29295770867497 *
Marital_StatusTogether ;
156592    +   H1x2_1  =     0.02486753071365 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.02486753071365 + H1x2_1 ;
156593    +   H1x2_2  =     1.30157602008517 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.30157602008517 + H1x2_2 ;
156594    +   H1x2_3  =    -0.71765289173772 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.71765289173772 + H1x2_3 ;
156595    +   H1x2_4  =    -0.28206267191961 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.28206267191961 + H1x2_4 ;
156596    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
156597    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
156598    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
156599    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
156600    +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
156601    +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
156602    +END;
MPRINT(EM_DIAGRAM):   END;
156603    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
156604    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
156605    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
156606    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
156607    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
156608    +END;
MPRINT(EM_DIAGRAM):   END;
156609    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
156610    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
156611    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
156612    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
156613    +   H2x1_1  =    -1.34021567967914 * H1x1_1  +    -0.82210150819056 * H1x1_2
156614    +          +      0.2051584088577 * H1x1_3  +    -0.14877251454609 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.34021567967914 * H1x1_1 + -0.82210150819056 * H1x1_2 +
0.2051584088577 * H1x1_3 + -0.14877251454609 * H1x1_4 ;
156615    +   H2x1_2  =     5.90283136076368 * H1x1_1  +    -7.93891997601848 * H1x1_2
156616    +          +     6.88352608350263 * H1x1_3  +     4.96968417177752 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 5.90283136076368 * H1x1_1 + -7.93891997601848 * H1x1_2 +
6.88352608350263 * H1x1_3 + 4.96968417177752 * H1x1_4 ;
156617    +   H2x1_3  =    -0.35820258372371 * H1x1_1  +      3.0004195561827 * H1x1_2
156618    +          +    -2.45737828305901 * H1x1_3  +     -3.3701635035096 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.35820258372371 * H1x1_1 + 3.0004195561827 * H1x1_2 +
-2.45737828305901 * H1x1_3 + -3.3701635035096 * H1x1_4 ;
156619    +   H2x1_4  =    -2.21298094667436 * H1x1_1  +     0.26414252140039 * H1x1_2
156620    +          +     1.09094365218549 * H1x1_3  +     1.52196888791164 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -2.21298094667436 * H1x1_1 + 0.26414252140039 * H1x1_2 +
1.09094365218549 * H1x1_3 + 1.52196888791164 * H1x1_4 ;
156621    +   H2x1_1  = H2x1_1  +    -0.84246838752596 * H1x2_1
156622    +          +     0.53874594317309 * H1x2_2  +     0.47956597308168 * H1x2_3
156623    +          +    -0.93255463077914 * H1x2_4 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.84246838752596 * H1x2_1 + 0.53874594317309 * H1x2_2
+ 0.47956597308168 * H1x2_3 + -0.93255463077914 * H1x2_4 ;
156624    +   H2x1_2  = H2x1_2  +     -1.9223116287684 * H1x2_1
156625    +          +    -2.37377206970433 * H1x2_2  +    -0.73887953722708 * H1x2_3
156626    +          +     2.71044044080254 * H1x2_4 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.9223116287684 * H1x2_1 + -2.37377206970433 * H1x2_2
+ -0.73887953722708 * H1x2_3 + 2.71044044080254 * H1x2_4 ;
156627    +   H2x1_3  = H2x1_3  +     0.53173546674544 * H1x2_1
156628    +          +     1.48831638926533 * H1x2_2  +     2.89231339277069 * H1x2_3
156629    +          +    -2.75774116509863 * H1x2_4 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.53173546674544 * H1x2_1 + 1.48831638926533 * H1x2_2
+ 2.89231339277069 * H1x2_3 + -2.75774116509863 * H1x2_4 ;
156630    +   H2x1_4  = H2x1_4  +     1.42086435786687 * H1x2_1
156631    +          +     0.41116169758796 * H1x2_2  +    -1.89087404607062 * H1x2_3
156632    +          +     1.62153254823704 * H1x2_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.42086435786687 * H1x2_1 + 0.41116169758796 * H1x2_2
+ -1.89087404607062 * H1x2_3 + 1.62153254823704 * H1x2_4 ;
156633    +   H2x1_1  =    -1.75788455741829 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.75788455741829 + H2x1_1 ;
156634    +   H2x1_2  =    -1.23949015246826 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.23949015246826 + H2x1_2 ;
156635    +   H2x1_3  =     0.22552341308337 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.22552341308337 + H2x1_3 ;
156636    +   H2x1_4  =    -0.29261642916715 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.29261642916715 + H2x1_4 ;
156637    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
156638    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
156639    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
156640    +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
156641    +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
156642    +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
156643    +END;
MPRINT(EM_DIAGRAM):   END;
156644    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
156645    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
156646    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
156647    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
156648    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
156649    +END;
MPRINT(EM_DIAGRAM):   END;
156650    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
156651    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
156652    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
156653    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
156654    +   P_DepVar1  =    -0.01128614443737 * H2x1_1  +     20.5485882709782 * H2x1_2
156655    +          +    -12.1833710389136 * H2x1_3  +     -2.9534639226061 * H2x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.01128614443737 * H2x1_1 + 20.5485882709782 * H2x1_2 +
-12.1833710389136 * H2x1_3 + -2.9534639226061 * H2x1_4 ;
156656    +   P_DepVar1  =     1.18328906065521 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.18328906065521 + P_DepVar1 ;
156657    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
156658    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
156659    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
156660    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
156661    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
156662    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
156663    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
156664    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
156665    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
156666    +END;
MPRINT(EM_DIAGRAM):   END;
156667    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
156668    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
156669    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
156670    +END;
MPRINT(EM_DIAGRAM):   END;
156671    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
156672    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
156673    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
156674    +END;
MPRINT(EM_DIAGRAM):   END;
156675    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
156676    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
156677    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
156678    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
156679    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
156680    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
156681    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
156682    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
156683    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
156684    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
156685    +END;
MPRINT(EM_DIAGRAM):   END;
156686    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
156687    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
156688    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
156689    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
156690     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
156691     quit;
156692     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
156693     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
156694     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
156695     retain ID 2 Node "AutoNeural47";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural47";
156696     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
156697     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3034 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3034 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
156698     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
156699     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
156700     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3034 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3034 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
156701     proc sort data=EMWS8.AutoNeural47_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural47_variableset out=_temp2(keep=NAME
CREATOR);
156702     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
156703     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL47_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
156704     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
156705     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
156706     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
156707     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
156708     proc contents data=EMWS8.AutoNeural47_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural47_train out=_meta(keep=NAME) noprint;
156709     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 65 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
156710     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
156711     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
156712     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 65 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 65 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
156713     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
156714     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
156715     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
156716     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 65 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 65 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
156717     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
156718     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
156718   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1477 rows and 5 columns.
 
156719     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
156720     proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
156721     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1477 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 1477 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
156722     filename _pref
156722   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
156723     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
156724     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
156725    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
156726    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
156727    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
156728    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
156729    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
156730    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
156731     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
156732     quit;
156733     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
156734     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
156735     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
156736     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
156737     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
156738     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
156739     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
156740     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
156741     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
156742     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
156743     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
156744     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
156745     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
156746     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
156747     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
156748     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
156749     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
156750     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
156751     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
156752     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
156753     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
156754     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
156755     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
156756     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
156757     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
156758     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
156759     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
156759   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
156760     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.21 seconds
      cpu time            0.00 seconds
 
 
156761     proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
156762     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 1481 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
156763     filename _pref
156763   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
156764     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
156765     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
156766    +
156767    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
156768    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
156768   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
156769    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
156770    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
156771    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
156772    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
156773    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
156774     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
156775     quit;
156776     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
156777     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
156778     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
156779     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
156780     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
156781     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
156782     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
156783     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
156784     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
156785     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
156786     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
156787     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
156788     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
156789     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
156790     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
156791     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
156792     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
156793     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
156794     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
156795     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
156796     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
156797     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
156798     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
156799     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
156800     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
156801     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
156802     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
156802   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
156803     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
156804     proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
156805     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 1520 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
156806     filename _pref
156806   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
156807     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
156808     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
156809    +
156810    +
156811    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
156812    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
156813    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
156814    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
156815    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
156816    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
156817    +
156818    +
156819    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
156820    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
156821    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
156822    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
156823    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
156824    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
156825    +
156826    +
156827    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
156828    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
156829    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
156830    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
156831    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
156832    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
156833    +
156834    +
156835    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
156836    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
156837    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
156838    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
156839    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
156840    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
156841    +
156842    +
156843    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
156844    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
156845    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
156846    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
156847    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
156848    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
156849    +
156850    +
156851    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
156852    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
156853    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
156854    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
156855    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
156856    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
156857    +
156858    +
156859    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
156860    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
156861    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
156862    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
156863    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
156864    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
156865    +
156866    +
156867    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
156868    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
156869    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
156870    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
156871    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
156872    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
156873    +if
156874    +_FILTERNORM1 not in ( '.')
156875    + and
156876    +_FILTERNORM2 not in ( '.')
156877    + and
156878    +_FILTERNORM3 not in ( '.')
156879    + and
156880    +_FILTERNORM4 not in ( '.')
156881    + and
156882    +_FILTERNORM5 not in ( '.')
156883    + and
156884    +_FILTERNORM6 not in ( '.')
156885    + and
156886    +_FILTERNORM7 not in ( ' ')
156887    + and
156888    +_FILTERNORM8 not in ( ' ')
156889    +and
156890    +( Dt_Customer ne .)
156891    +and ( Income ne . and (Income<=107000))
156892    +and ( Kidhome ne .)
156893    +and ( MntFishProducts ne .)
156894    +and ( MntFruits ne .)
156895    +and ( MntGoldProds ne .)
156896    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
156897    +and ( MntSweetProducts ne .)
156898    +and ( MntWines ne .)
156899    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
156900    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
156901    +and ( NumStorePurchases ne .)
156902    +and ( NumWebPurchases ne .)
156903    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
156904    +and ( Recency ne .)
156905    +and ( Teenhome ne .)
156906    +and ( Year_Birth ne .)
156907    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
156908    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
156909    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
156910    +end;
MPRINT(EM_DIAGRAM):   end;
156911    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
156912    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
156913     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
156914     quit;
156915     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
156916     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
156917     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
156918     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
156919     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
156920     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
156921     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
156922     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
156923     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
156924     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
156925     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
156926     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
156927     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
156928     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
156929     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
156930     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
156931     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
156932     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
156933     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
156934     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
156935     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
156936     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
156937     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
156938     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
156939     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
156940     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
156941     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
156941   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
156942     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
156943     proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
156944     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 1586 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
156945     %macro varDept(fcmpdata=,id=);
156946     %global nobs&id scoreFlag&id;
156947     %let scoreFlag&id = 0;
156948     %if &id=1 or ^&fcmpStart %then %do;
156949     proc sort data=&fcmpdata out=_temp&id nodupkey;
156950     by NAME;
156951     where id=&id and LHS in( %let j=1;
156952     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
156953     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
156954     "&var" %let j = %eval(&j+1);
156955     %end;
156956     );
156957     run;
156958     %let dsid = %sysfunc(open(_temp&id));
156959     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
156960     %let dsid = %sysfunc(close(&dsid));
156961     %if &&nobs&id %then %do;
156962     %let scoreFlag&id = 1;
156963     %let fcmpStart = 1;
156964     %end;
156965     %else %let fcmpStart = 0;
156966     %end;
156967     %else %do;
156968     proc sort data=&fcmpdata out=_tempid;
156969     where id=&id;
156970     by LHS;
156971     run;
156972     %let dsid = %sysfunc(open(_tempid));
156973     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
156974     %let dsid = %sysfunc(close(&dsid));
156975     %if ^&&nobs&id %then %do;
156976     proc datasets lib=work nolist;
156977     delete _tempid;
156978     run;
156979     quit;
156980     %end;
156981     %else %do;
156982     data _tempAll;
156983     set %let j=%eval(&id-1);
156984     %do x=1 %to &j;
156985     %if &&nobs&x %then %do;
156986     _temp&x %end;
156987     %end;
156988     ;
156989     run;
156990     proc sql;
156991     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
156991   ! work._tempid p2 where p.name=p2.lhs;
156992     quit;
156993     data _temp&id;
156994     set _temp&id;
156995     where LHS ne '' and NAME ne '' and Node ne '';
156996     run;
156997     proc datasets lib=work nolist;
156998     delete _tempAll;
156999     run;
157000     %let dsid = %sysfunc(open(_temp&id));
157001     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
157002     %let dsid = %sysfunc(close(&dsid));
157003     %if ^&&nobs&id %then %do;
157004     proc datasets lib=work nolist;
157005     delete _temp&id;
157006     run;
157007     quit;
157008     %end;
157009     %else %do;
157010     %let scoreFlag&id = 1;
157011     data _temp&id;
157012     set _temp&id;
157013     where LHS ne NAME and node ne '';
157014     run;
157015     %let dsid = %sysfunc(open(_temp&id));
157016     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
157017     %let dsid = %sysfunc(close(&dsid));
157018     %if ^&&nobs&id %then %do;
157019     proc datasets lib=work nolist;
157020     delete _temp&id;
157021     run;
157022     quit;
157023     %end;
157024     %else %do;
157025     proc sort data=_temp&id nodupkey;
157026     by LHS NAME;
157027     run;
157028     %end;
157029     %end;
157030     %end;
157031     %end;
157032     %mend varDept;
157033     %macro optCode(outdata=fcmpdata);
157034     %global fcmpStart;
157035     %let fcmpStart = 0;
157036     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
157037     %let NumNodes=9;
157038     %do k=1 %to &NumNodes;
157039     %vardept(fcmpdata=&outdata, id=&k);
157040     %end;
157041     %mend optCode;
157042     %optcode(outData=EMWS8.Ensmbl22_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 134 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 97 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 37 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 37 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 37 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 37 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 37 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp6;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP6 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 37 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 37 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
157043     filename _pref
157043   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural30\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural30\EMPUBLISHSCORE.sas";
157044     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
157045     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural30\EMPUBLISHSCORE.sas.
157046    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
157047    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
157048    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
157049    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
157050    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
157051    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
157052    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
157053    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
157054    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
157055    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
157056    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
157057    +LENGTH _WARN_ $4
157058    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
157059    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
157060    +
157061    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
157062    +
157063    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
157064    +
157065    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
157066    +
157067    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
157068    +
157069    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
157070    +
157071    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
157072    +
157073    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
157074    +
157075    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
157076    +
157077    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
157078    +
157079    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
157080    +
157081    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
157082    +
157083    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
157084    +
157085    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
157086    +
157087    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
157088    +
157089    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
157090    +
157091    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
157092    +
157093    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
157094    +
157095    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
157096    +
157097    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
157098    +
157099    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
157100    +
157101    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
157102    +
157103    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
157104    +
157105    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
157106    +
157107    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
157108    +
157109    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
157110    +
157111    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
157112    +
157113    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
157114    +
157115    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
157116    +
157117    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
157118    +
157119    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
157120    +
157121    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
157122    +
157123    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
157124    +
157125    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
157126    +
157127    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
157128    +
157129    +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
157130    +
157131    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
157132    +
157133    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
157134    +
157135    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
157136    +
157137    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
157138    +
157139    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
157140    +
157141    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
157142    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
157143    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
157144    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
157145    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
157146    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
157147    +end;
MPRINT(EM_DIAGRAM):   end;
157148    +else do;
MPRINT(EM_DIAGRAM):   else do;
157149    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
157150    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
157151    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
157152    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
157153    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
157154    +   end;
MPRINT(EM_DIAGRAM):   end;
157155    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
157156    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
157157    +   end;
MPRINT(EM_DIAGRAM):   end;
157158    +   else do;
MPRINT(EM_DIAGRAM):   else do;
157159    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
157160    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
157161    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
157162    +   end;
MPRINT(EM_DIAGRAM):   end;
157163    +end;
MPRINT(EM_DIAGRAM):   end;
157164    +
157165    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
157166    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
157167    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
157168    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
157169    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
157170    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
157171    +end;
MPRINT(EM_DIAGRAM):   end;
157172    +else do;
MPRINT(EM_DIAGRAM):   else do;
157173    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
157174    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
157175    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
157176    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
157177    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
157178    +   end;
MPRINT(EM_DIAGRAM):   end;
157179    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
157180    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
157181    +   end;
MPRINT(EM_DIAGRAM):   end;
157182    +   else do;
MPRINT(EM_DIAGRAM):   else do;
157183    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
157184    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
157185    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
157186    +   end;
MPRINT(EM_DIAGRAM):   end;
157187    +end;
MPRINT(EM_DIAGRAM):   end;
157188    +
157189    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
157190    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
157191    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
157192    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
157193    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
157194    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
157195    +end;
MPRINT(EM_DIAGRAM):   end;
157196    +else do;
MPRINT(EM_DIAGRAM):   else do;
157197    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
157198    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
157199    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
157200    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
157201    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
157202    +   end;
MPRINT(EM_DIAGRAM):   end;
157203    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
157204    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
157205    +   end;
MPRINT(EM_DIAGRAM):   end;
157206    +   else do;
MPRINT(EM_DIAGRAM):   else do;
157207    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
157208    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
157209    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
157210    +   end;
MPRINT(EM_DIAGRAM):   end;
157211    +end;
MPRINT(EM_DIAGRAM):   end;
157212    +
157213    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
157214    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
157215    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
157216    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
157217    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
157218    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
157219    +end;
MPRINT(EM_DIAGRAM):   end;
157220    +else do;
MPRINT(EM_DIAGRAM):   else do;
157221    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
157222    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
157223    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
157224    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
157225    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
157226    +   end;
MPRINT(EM_DIAGRAM):   end;
157227    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
157228    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
157229    +   end;
MPRINT(EM_DIAGRAM):   end;
157230    +   else do;
MPRINT(EM_DIAGRAM):   else do;
157231    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
157232    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
157233    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
157234    +   end;
MPRINT(EM_DIAGRAM):   end;
157235    +end;
MPRINT(EM_DIAGRAM):   end;
157236    +
157237    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
157238    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
157239    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
157240    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
157241    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
157242    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
157243    +end;
MPRINT(EM_DIAGRAM):   end;
157244    +else do;
MPRINT(EM_DIAGRAM):   else do;
157245    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
157246    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
157247    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
157248    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
157249    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
157250    +   end;
MPRINT(EM_DIAGRAM):   end;
157251    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
157252    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
157253    +   end;
MPRINT(EM_DIAGRAM):   end;
157254    +   else do;
MPRINT(EM_DIAGRAM):   else do;
157255    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
157256    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
157257    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
157258    +   end;
MPRINT(EM_DIAGRAM):   end;
157259    +end;
MPRINT(EM_DIAGRAM):   end;
157260    +
157261    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
157262    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
157263    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
157264    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
157265    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
157266    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
157267    +end;
MPRINT(EM_DIAGRAM):   end;
157268    +else do;
MPRINT(EM_DIAGRAM):   else do;
157269    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
157270    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
157271    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
157272    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
157273    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
157274    +   end;
MPRINT(EM_DIAGRAM):   end;
157275    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
157276    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
157277    +   end;
MPRINT(EM_DIAGRAM):   end;
157278    +   else do;
MPRINT(EM_DIAGRAM):   else do;
157279    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
157280    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
157281    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
157282    +   end;
MPRINT(EM_DIAGRAM):   end;
157283    +end;
MPRINT(EM_DIAGRAM):   end;
157284    +
157285    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
157286    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
157287    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
157288    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
157289    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
157290    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
157291    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
157292    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
157293    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
157294    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
157295    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
157296    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
157297    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
157298    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
157299    +end;
MPRINT(EM_DIAGRAM):   end;
157300    +else do;
MPRINT(EM_DIAGRAM):   else do;
157301    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
157302    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
157303    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
157304    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
157305    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
157306    +   end;
MPRINT(EM_DIAGRAM):   end;
157307    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
157308    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
157309    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
157310    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
157311    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
157312    +   end;
MPRINT(EM_DIAGRAM):   end;
157313    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
157314    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
157315    +   end;
MPRINT(EM_DIAGRAM):   end;
157316    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
157317    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
157318    +   end;
MPRINT(EM_DIAGRAM):   end;
157319    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
157320    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
157321    +   end;
MPRINT(EM_DIAGRAM):   end;
157322    +   else do;
MPRINT(EM_DIAGRAM):   else do;
157323    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
157324    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
157325    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
157326    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
157327    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
157328    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
157329    +   end;
MPRINT(EM_DIAGRAM):   end;
157330    +end;
MPRINT(EM_DIAGRAM):   end;
157331    +
157332    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
157333    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
157334    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
157335    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
157336    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
157337    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
157338    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
157339    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
157340    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
157341    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
157342    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
157343    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
157344    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
157345    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
157346    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
157347    +end;
MPRINT(EM_DIAGRAM):   end;
157348    +else do;
MPRINT(EM_DIAGRAM):   else do;
157349    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
157350    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
157351    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
157352    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
157353    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
157354    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
157355    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
157356    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
157357    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
157358    +         end;
MPRINT(EM_DIAGRAM):   end;
157359    +         else do;
MPRINT(EM_DIAGRAM):   else do;
157360    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
157361    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
157362    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
157363    +            end;
MPRINT(EM_DIAGRAM):   end;
157364    +         end;
MPRINT(EM_DIAGRAM):   end;
157365    +      end;
MPRINT(EM_DIAGRAM):   end;
157366    +      else do;
MPRINT(EM_DIAGRAM):   else do;
157367    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
157368    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
157369    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
157370    +         end;
MPRINT(EM_DIAGRAM):   end;
157371    +      end;
MPRINT(EM_DIAGRAM):   end;
157372    +   end;
MPRINT(EM_DIAGRAM):   end;
157373    +   else do;
MPRINT(EM_DIAGRAM):   else do;
157374    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
157375    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
157376    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
157377    +      end;
MPRINT(EM_DIAGRAM):   end;
157378    +      else do;
MPRINT(EM_DIAGRAM):   else do;
157379    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
157380    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
157381    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
157382    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
157383    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
157384    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
157385    +         end;
MPRINT(EM_DIAGRAM):   end;
157386    +      end;
MPRINT(EM_DIAGRAM):   end;
157387    +   end;
MPRINT(EM_DIAGRAM):   end;
157388    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
157389    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
157390    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
157391    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
157392    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
157393    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
157394    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
157395    +   end;
MPRINT(EM_DIAGRAM):   end;
157396    +end;
MPRINT(EM_DIAGRAM):   end;
157397    +
157398    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
157399    +*** Checking missing input Interval
157400    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
157401    +
157402    +IF NMISS(
157403    +   Income ,
157404    +   Kidhome ,
157405    +   MntFishProducts ,
157406    +   MntFruits ,
157407    +   MntGoldProds ,
157408    +   MntMeatProducts ,
157409    +   MntSweetProducts ,
157410    +   MntWines ,
157411    +   NumCatalogPurchases ,
157412    +   NumDealsPurchases ,
157413    +   NumStorePurchases ,
157414    +   NumWebPurchases ,
157415    +   NumWebVisitsMonth ,
157416    +   Recency ,
157417    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
157418    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
157419    +
157420    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
157421    +END;
MPRINT(EM_DIAGRAM):   END;
157422    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
157423    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
157424    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
157425    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
157426    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
157427    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
157428    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
157429    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
157430    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
157431    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
157432    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
157433    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
157434    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
157435    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
157436    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
157437    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
157438    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
157439    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
157440    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
157441    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
157442    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
157443    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
157444    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
157445    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
157446    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
157447    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
157448    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
157449    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
157450    +END;
MPRINT(EM_DIAGRAM):   END;
157451    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
157452    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
157453    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
157454    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
157455    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
157456    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
157457    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
157458    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
157459    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
157460    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
157461    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
157462    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
157463    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
157464    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
157465    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
157466    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
157467    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
157468    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
157469    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
157470    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
157471    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
157472    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
157473    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
157474    +   ELSE S_NumCatalogPurchases
157475    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
157476    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
157477    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
157478    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
157479    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
157480    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
157481    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
157482    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
157483    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
157484    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
157485    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
157486    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
157487    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
157488    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
157489    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
157490    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
157491    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
157492    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
157493    +END;
MPRINT(EM_DIAGRAM):   END;
157494    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
157495    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
157496    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
157497    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
157498    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
157499    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
157500    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
157501    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
157502    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
157503    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
157504    +   H11  =    -0.59781928082243 * S_Income  +     0.49830142312288 * S_Kidhome
157505    +          +    -0.00045024466632 * S_MntFishProducts
157506    +          +    -0.22421712710333 * S_MntFruits  +    -0.19010144853469 *
157507    +        S_MntGoldProds  +    -0.53373773623953 * S_MntMeatProducts
157508    +          +     0.17506402203495 * S_MntSweetProducts
157509    +          +    -0.28551398649672 * S_MntWines  +       0.019870944777 *
157510    +        S_NumCatalogPurchases  +     0.03537776181533 * S_NumDealsPurchases
157511    +          +     0.05580468715403 * S_NumStorePurchases
157512    +          +    -0.29131611132704 * S_NumWebPurchases
157513    +          +    -0.40690084025802 * S_NumWebVisitsMonth
157514    +          +     0.48640195058901 * S_Recency  +     0.31820890239661 *
157515    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.59781928082243 * S_Income + 0.49830142312288 * S_Kidhome +
-0.00045024466632 * S_MntFishProducts + -0.22421712710333 * S_MntFruits + -0.19010144853469 *
S_MntGoldProds + -0.53373773623953 * S_MntMeatProducts + 0.17506402203495 * S_MntSweetProducts
+ -0.28551398649672 * S_MntWines + 0.019870944777 * S_NumCatalogPurchases + 0.03537776181533 *
S_NumDealsPurchases + 0.05580468715403 * S_NumStorePurchases + -0.29131611132704 *
S_NumWebPurchases + -0.40690084025802 * S_NumWebVisitsMonth + 0.48640195058901 * S_Recency +
0.31820890239661 * S_Teenhome ;
157516    +   H12  =    -0.41871753512335 * S_Income  +      0.6025072461821 * S_Kidhome
157517    +          +    -0.03132724937716 * S_MntFishProducts
157518    +          +     0.19114182835046 * S_MntFruits  +     0.13483463809539 *
157519    +        S_MntGoldProds  +    -0.63593603749443 * S_MntMeatProducts
157520    +          +    -0.07569302401223 * S_MntSweetProducts
157521    +          +     0.67050112032753 * S_MntWines  +    -0.23159243932208 *
157522    +        S_NumCatalogPurchases  +    -0.07183698407409 * S_NumDealsPurchases
157523    +          +     0.54619681114623 * S_NumStorePurchases
157524    +          +     0.44325129671249 * S_NumWebPurchases
157525    +          +    -1.25054401670605 * S_NumWebVisitsMonth
157526    +          +      1.2376290916151 * S_Recency  +     0.43747371517287 *
157527    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.41871753512335 * S_Income + 0.6025072461821 * S_Kidhome +
-0.03132724937716 * S_MntFishProducts + 0.19114182835046 * S_MntFruits + 0.13483463809539 *
S_MntGoldProds + -0.63593603749443 * S_MntMeatProducts + -0.07569302401223 *
S_MntSweetProducts + 0.67050112032753 * S_MntWines + -0.23159243932208 * S_NumCatalogPurchases
+ -0.07183698407409 * S_NumDealsPurchases + 0.54619681114623 * S_NumStorePurchases +
0.44325129671249 * S_NumWebPurchases + -1.25054401670605 * S_NumWebVisitsMonth +
1.2376290916151 * S_Recency + 0.43747371517287 * S_Teenhome ;
157528    +   H13  =      0.0713579189325 * S_Income  +    -0.05759612462349 * S_Kidhome
157529    +          +     0.07631777381832 * S_MntFishProducts
157530    +          +    -0.00387785552441 * S_MntFruits  +    -0.21868916314192 *
157531    +        S_MntGoldProds  +       0.072623883197 * S_MntMeatProducts
157532    +          +     0.12637946833766 * S_MntSweetProducts
157533    +          +    -0.37981663841124 * S_MntWines  +    -0.89958525403162 *
157534    +        S_NumCatalogPurchases  +    -0.17471885937598 * S_NumDealsPurchases
157535    +          +     0.15845618359126 * S_NumStorePurchases
157536    +          +    -0.33296932705082 * S_NumWebPurchases
157537    +          +      0.0260072296349 * S_NumWebVisitsMonth
157538    +          +     0.02544749712977 * S_Recency  +    -0.17381561661022 *
157539    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.0713579189325 * S_Income + -0.05759612462349 * S_Kidhome +
0.07631777381832 * S_MntFishProducts + -0.00387785552441 * S_MntFruits + -0.21868916314192 *
S_MntGoldProds + 0.072623883197 * S_MntMeatProducts + 0.12637946833766 * S_MntSweetProducts +
-0.37981663841124 * S_MntWines + -0.89958525403162 * S_NumCatalogPurchases + -0.17471885937598
* S_NumDealsPurchases + 0.15845618359126 * S_NumStorePurchases + -0.33296932705082 *
S_NumWebPurchases + 0.0260072296349 * S_NumWebVisitsMonth + 0.02544749712977 * S_Recency +
-0.17381561661022 * S_Teenhome ;
157540    +   H14  =    -0.47498613710851 * S_Income  +     0.09339198401437 * S_Kidhome
157541    +          +    -0.13642352619174 * S_MntFishProducts
157542    +          +     0.27167245582117 * S_MntFruits  +    -0.00579747559996 *
157543    +        S_MntGoldProds  +     0.31591387319577 * S_MntMeatProducts
157544    +          +     0.14125815807238 * S_MntSweetProducts
157545    +          +     0.07862916790983 * S_MntWines  +    -0.58905358997534 *
157546    +        S_NumCatalogPurchases  +     -0.5574069633995 * S_NumDealsPurchases
157547    +          +     0.19718828261526 * S_NumStorePurchases
157548    +          +    -0.24156925391919 * S_NumWebPurchases
157549    +          +    -0.25711078938749 * S_NumWebVisitsMonth
157550    +          +     0.38883063223812 * S_Recency  +     -0.2396731334184 *
157551    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.47498613710851 * S_Income + 0.09339198401437 * S_Kidhome +
-0.13642352619174 * S_MntFishProducts + 0.27167245582117 * S_MntFruits + -0.00579747559996 *
S_MntGoldProds + 0.31591387319577 * S_MntMeatProducts + 0.14125815807238 * S_MntSweetProducts
+ 0.07862916790983 * S_MntWines + -0.58905358997534 * S_NumCatalogPurchases + -0.5574069633995
* S_NumDealsPurchases + 0.19718828261526 * S_NumStorePurchases + -0.24156925391919 *
S_NumWebPurchases + -0.25711078938749 * S_NumWebVisitsMonth + 0.38883063223812 * S_Recency +
-0.2396731334184 * S_Teenhome ;
157552    +   H15  =     0.24624924979609 * S_Income  +    -0.37052106312109 * S_Kidhome
157553    +          +     0.13579628643404 * S_MntFishProducts
157554    +          +    -0.05263868911164 * S_MntFruits  +    -0.01504675049991 *
157555    +        S_MntGoldProds  +     -0.4202277804998 * S_MntMeatProducts
157556    +          +    -0.01039299374426 * S_MntSweetProducts
157557    +          +     0.71197420459135 * S_MntWines  +    -0.35973505575029 *
157558    +        S_NumCatalogPurchases  +     -0.4415445481482 * S_NumDealsPurchases
157559    +          +     0.58897740652611 * S_NumStorePurchases
157560    +          +     0.24564485851062 * S_NumWebPurchases
157561    +          +    -0.13976320243555 * S_NumWebVisitsMonth
157562    +          +      0.1199367613063 * S_Recency  +    -0.15283161418313 *
157563    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.24624924979609 * S_Income + -0.37052106312109 * S_Kidhome +
0.13579628643404 * S_MntFishProducts + -0.05263868911164 * S_MntFruits + -0.01504675049991 *
S_MntGoldProds + -0.4202277804998 * S_MntMeatProducts + -0.01039299374426 * S_MntSweetProducts
+ 0.71197420459135 * S_MntWines + -0.35973505575029 * S_NumCatalogPurchases + -0.4415445481482
* S_NumDealsPurchases + 0.58897740652611 * S_NumStorePurchases + 0.24564485851062 *
S_NumWebPurchases + -0.13976320243555 * S_NumWebVisitsMonth + 0.1199367613063 * S_Recency +
-0.15283161418313 * S_Teenhome ;
157564    +   H16  =     0.23493799758749 * S_Income  +     0.07038278079069 * S_Kidhome
157565    +          +    -0.45448768538367 * S_MntFishProducts
157566    +          +     0.02622380709004 * S_MntFruits  +     0.14726698184115 *
157567    +        S_MntGoldProds  +     0.65760183569767 * S_MntMeatProducts
157568    +          +    -0.16936256277023 * S_MntSweetProducts
157569    +          +    -0.40647066866305 * S_MntWines  +     0.99645493491726 *
157570    +        S_NumCatalogPurchases  +     0.65587239961358 * S_NumDealsPurchases
157571    +          +    -0.22309716855774 * S_NumStorePurchases
157572    +          +    -0.61204529910842 * S_NumWebPurchases
157573    +          +     0.43742228867615 * S_NumWebVisitsMonth
157574    +          +    -0.56099034256092 * S_Recency  +     -0.2445351671148 *
157575    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = 0.23493799758749 * S_Income + 0.07038278079069 * S_Kidhome +
-0.45448768538367 * S_MntFishProducts + 0.02622380709004 * S_MntFruits + 0.14726698184115 *
S_MntGoldProds + 0.65760183569767 * S_MntMeatProducts + -0.16936256277023 * S_MntSweetProducts
+ -0.40647066866305 * S_MntWines + 0.99645493491726 * S_NumCatalogPurchases + 0.65587239961358
* S_NumDealsPurchases + -0.22309716855774 * S_NumStorePurchases + -0.61204529910842 *
S_NumWebPurchases + 0.43742228867615 * S_NumWebVisitsMonth + -0.56099034256092 * S_Recency +
-0.2445351671148 * S_Teenhome ;
157576    +   H17  =    -0.00107702057163 * S_Income  +     0.25116135719972 * S_Kidhome
157577    +          +    -0.04540308470858 * S_MntFishProducts
157578    +          +        0.21487241577 * S_MntFruits  +    -0.12914913547414 *
157579    +        S_MntGoldProds  +    -0.04149021191395 * S_MntMeatProducts
157580    +          +     0.02853521979141 * S_MntSweetProducts
157581    +          +     -0.2435805887418 * S_MntWines  +    -0.04509621661407 *
157582    +        S_NumCatalogPurchases  +    -0.26492036720429 * S_NumDealsPurchases
157583    +          +     -0.3299561248944 * S_NumStorePurchases
157584    +          +    -0.09806597448224 * S_NumWebPurchases
157585    +          +      0.0427056351245 * S_NumWebVisitsMonth
157586    +          +     0.03953235628202 * S_Recency  +    -0.11317308767713 *
157587    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = -0.00107702057163 * S_Income + 0.25116135719972 * S_Kidhome +
-0.04540308470858 * S_MntFishProducts + 0.21487241577 * S_MntFruits + -0.12914913547414 *
S_MntGoldProds + -0.04149021191395 * S_MntMeatProducts + 0.02853521979141 * S_MntSweetProducts
+ -0.2435805887418 * S_MntWines + -0.04509621661407 * S_NumCatalogPurchases +
-0.26492036720429 * S_NumDealsPurchases + -0.3299561248944 * S_NumStorePurchases +
-0.09806597448224 * S_NumWebPurchases + 0.0427056351245 * S_NumWebVisitsMonth +
0.03953235628202 * S_Recency + -0.11317308767713 * S_Teenhome ;
157588    +   H11  = H11  +     0.50033674561531 * AcceptedCmp10
157589    +          +    -0.02275693117286 * AcceptedCmp20  +     0.31338891533156 *
157590    +        AcceptedCmp30  +      0.3901248845706 * AcceptedCmp40
157591    +          +     0.44314358358111 * AcceptedCmp50  +    -0.20444060864498 *
157592    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.50033674561531 * AcceptedCmp10 + -0.02275693117286 *
AcceptedCmp20 + 0.31338891533156 * AcceptedCmp30 + 0.3901248845706 * AcceptedCmp40 +
0.44314358358111 * AcceptedCmp50 + -0.20444060864498 * Complain0 ;
157593    +   H12  = H12  +     0.30103938822692 * AcceptedCmp10
157594    +          +     0.54298746723422 * AcceptedCmp20  +     0.50401040035525 *
157595    +        AcceptedCmp30  +     0.43447710825306 * AcceptedCmp40
157596    +          +     0.60794421030027 * AcceptedCmp50  +    -0.28114274461319 *
157597    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.30103938822692 * AcceptedCmp10 + 0.54298746723422 *
AcceptedCmp20 + 0.50401040035525 * AcceptedCmp30 + 0.43447710825306 * AcceptedCmp40 +
0.60794421030027 * AcceptedCmp50 + -0.28114274461319 * Complain0 ;
157598    +   H13  = H13  +     -0.1890212967757 * AcceptedCmp10
157599    +          +    -0.11487406996391 * AcceptedCmp20  +    -0.22740618754863 *
157600    +        AcceptedCmp30  +      0.2354510231918 * AcceptedCmp40
157601    +          +    -0.14327434649067 * AcceptedCmp50  +    -0.17839080850556 *
157602    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.1890212967757 * AcceptedCmp10 + -0.11487406996391 *
AcceptedCmp20 + -0.22740618754863 * AcceptedCmp30 + 0.2354510231918 * AcceptedCmp40 +
-0.14327434649067 * AcceptedCmp50 + -0.17839080850556 * Complain0 ;
157603    +   H14  = H14  +    -0.28194187416219 * AcceptedCmp10
157604    +          +     0.11732089254624 * AcceptedCmp20  +     0.34964075536156 *
157605    +        AcceptedCmp30  +     0.05772396286169 * AcceptedCmp40
157606    +          +    -0.08671748651826 * AcceptedCmp50  +      0.0629540108407 *
157607    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.28194187416219 * AcceptedCmp10 + 0.11732089254624 *
AcceptedCmp20 + 0.34964075536156 * AcceptedCmp30 + 0.05772396286169 * AcceptedCmp40 +
-0.08671748651826 * AcceptedCmp50 + 0.0629540108407 * Complain0 ;
157608    +   H15  = H15  +    -0.01058257322803 * AcceptedCmp10
157609    +          +     0.26755355732587 * AcceptedCmp20  +     0.40856661734724 *
157610    +        AcceptedCmp30  +     0.02977117354989 * AcceptedCmp40
157611    +          +       0.073655049734 * AcceptedCmp50  +     0.25562048226555 *
157612    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.01058257322803 * AcceptedCmp10 + 0.26755355732587 *
AcceptedCmp20 + 0.40856661734724 * AcceptedCmp30 + 0.02977117354989 * AcceptedCmp40 +
0.073655049734 * AcceptedCmp50 + 0.25562048226555 * Complain0 ;
157613    +   H16  = H16  +    -0.65590117532084 * AcceptedCmp10
157614    +          +    -0.31314161223579 * AcceptedCmp20  +    -0.18863165264573 *
157615    +        AcceptedCmp30  +    -0.18832338914237 * AcceptedCmp40
157616    +          +    -0.53765749471786 * AcceptedCmp50  +     0.17409401877513 *
157617    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.65590117532084 * AcceptedCmp10 + -0.31314161223579 *
AcceptedCmp20 + -0.18863165264573 * AcceptedCmp30 + -0.18832338914237 * AcceptedCmp40 +
-0.53765749471786 * AcceptedCmp50 + 0.17409401877513 * Complain0 ;
157618    +   H17  = H17  +    -0.42253231673718 * AcceptedCmp10
157619    +          +    -0.40954345229557 * AcceptedCmp20  +    -0.30577523080786 *
157620    +        AcceptedCmp30  +    -0.22396670899437 * AcceptedCmp40
157621    +          +     0.05757251451004 * AcceptedCmp50  +     0.07813950542487 *
157622    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.42253231673718 * AcceptedCmp10 + -0.40954345229557 *
AcceptedCmp20 + -0.30577523080786 * AcceptedCmp30 + -0.22396670899437 * AcceptedCmp40 +
0.05757251451004 * AcceptedCmp50 + 0.07813950542487 * Complain0 ;
157623    +   H11  = H11  +    -0.14483542022901 * Education2n_Cycle
157624    +          +     0.32176647745332 * EducationBasic  +     0.00900796305072 *
157625    +        EducationGraduation  +    -0.00243484910123 * EducationMaster
157626    +          +    -0.22074132229211 * Marital_StatusDivorced
157627    +          +     0.70282742634901 * Marital_StatusMarried
157628    +          +     -0.5926244797961 * Marital_StatusSingle
157629    +          +     0.21342221410999 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.14483542022901 * Education2n_Cycle + 0.32176647745332 *
EducationBasic + 0.00900796305072 * EducationGraduation + -0.00243484910123 * EducationMaster
+ -0.22074132229211 * Marital_StatusDivorced + 0.70282742634901 * Marital_StatusMarried +
-0.5926244797961 * Marital_StatusSingle + 0.21342221410999 * Marital_StatusTogether ;
157630    +   H12  = H12  +    -0.10242932200247 * Education2n_Cycle
157631    +          +     0.34937926721317 * EducationBasic  +    -0.20395479511872 *
157632    +        EducationGraduation  +     0.31210327899339 * EducationMaster
157633    +          +    -0.46376392175295 * Marital_StatusDivorced
157634    +          +       0.589453579718 * Marital_StatusMarried
157635    +          +    -0.45342174978481 * Marital_StatusSingle
157636    +          +     0.70517120763557 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.10242932200247 * Education2n_Cycle + 0.34937926721317 *
EducationBasic + -0.20395479511872 * EducationGraduation + 0.31210327899339 * EducationMaster
+ -0.46376392175295 * Marital_StatusDivorced + 0.589453579718 * Marital_StatusMarried +
-0.45342174978481 * Marital_StatusSingle + 0.70517120763557 * Marital_StatusTogether ;
157637    +   H13  = H13  +     0.24858755570324 * Education2n_Cycle
157638    +          +     0.07360039359386 * EducationBasic  +    -0.42563056620078 *
157639    +        EducationGraduation  +    -0.25970840250323 * EducationMaster
157640    +          +     0.26981972015482 * Marital_StatusDivorced
157641    +          +    -0.01707364864139 * Marital_StatusMarried
157642    +          +     0.38646060840009 * Marital_StatusSingle
157643    +          +     0.19694047086013 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.24858755570324 * Education2n_Cycle + 0.07360039359386 *
EducationBasic + -0.42563056620078 * EducationGraduation + -0.25970840250323 * EducationMaster
+ 0.26981972015482 * Marital_StatusDivorced + -0.01707364864139 * Marital_StatusMarried +
0.38646060840009 * Marital_StatusSingle + 0.19694047086013 * Marital_StatusTogether ;
157644    +   H14  = H14  +     0.22577522124265 * Education2n_Cycle
157645    +          +     0.04183136697557 * EducationBasic  +    -0.27725331198825 *
157646    +        EducationGraduation  +     0.15709188532123 * EducationMaster
157647    +          +    -0.01933675094701 * Marital_StatusDivorced
157648    +          +     0.52969577969434 * Marital_StatusMarried
157649    +          +      -0.348697714569 * Marital_StatusSingle
157650    +          +      0.5020342481888 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.22577522124265 * Education2n_Cycle + 0.04183136697557 *
EducationBasic + -0.27725331198825 * EducationGraduation + 0.15709188532123 * EducationMaster
+ -0.01933675094701 * Marital_StatusDivorced + 0.52969577969434 * Marital_StatusMarried +
-0.348697714569 * Marital_StatusSingle + 0.5020342481888 * Marital_StatusTogether ;
157651    +   H15  = H15  +     0.04488332711225 * Education2n_Cycle
157652    +          +     0.01911097443907 * EducationBasic  +    -0.11699443624996 *
157653    +        EducationGraduation  +    -0.07291393566738 * EducationMaster
157654    +          +    -0.04665146013984 * Marital_StatusDivorced
157655    +          +      -0.586219175167 * Marital_StatusMarried
157656    +          +     0.55713543417712 * Marital_StatusSingle
157657    +          +    -0.42208959885332 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.04488332711225 * Education2n_Cycle + 0.01911097443907 *
EducationBasic + -0.11699443624996 * EducationGraduation + -0.07291393566738 * EducationMaster
+ -0.04665146013984 * Marital_StatusDivorced + -0.586219175167 * Marital_StatusMarried +
0.55713543417712 * Marital_StatusSingle + -0.42208959885332 * Marital_StatusTogether ;
157658    +   H16  = H16  +     0.09174117861154 * Education2n_Cycle
157659    +          +     -0.1378945860659 * EducationBasic  +     -0.0728635369665 *
157660    +        EducationGraduation  +     0.29860714824438 * EducationMaster
157661    +          +    -0.05632171154347 * Marital_StatusDivorced
157662    +          +     0.03215547861665 * Marital_StatusMarried
157663    +          +     0.16870781172538 * Marital_StatusSingle
157664    +          +    -0.04883314322676 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.09174117861154 * Education2n_Cycle + -0.1378945860659 *
EducationBasic + -0.0728635369665 * EducationGraduation + 0.29860714824438 * EducationMaster +
-0.05632171154347 * Marital_StatusDivorced + 0.03215547861665 * Marital_StatusMarried +
0.16870781172538 * Marital_StatusSingle + -0.04883314322676 * Marital_StatusTogether ;
157665    +   H17  = H17  +    -0.00343694558117 * Education2n_Cycle
157666    +          +     0.32636427598227 * EducationBasic  +     0.16259654486833 *
157667    +        EducationGraduation  +    -0.00424229454859 * EducationMaster
157668    +          +    -0.21765415159355 * Marital_StatusDivorced
157669    +          +     -0.0542857922075 * Marital_StatusMarried
157670    +          +     0.20679907454933 * Marital_StatusSingle
157671    +          +     0.14976519710725 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.00343694558117 * Education2n_Cycle + 0.32636427598227 *
EducationBasic + 0.16259654486833 * EducationGraduation + -0.00424229454859 * EducationMaster
+ -0.21765415159355 * Marital_StatusDivorced + -0.0542857922075 * Marital_StatusMarried +
0.20679907454933 * Marital_StatusSingle + 0.14976519710725 * Marital_StatusTogether ;
157672    +   H11  =     0.92977078759503 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.92977078759503 + H11 ;
157673    +   H12  =    -0.97970409253156 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.97970409253156 + H12 ;
157674    +   H13  =     -0.5001144792196 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.5001144792196 + H13 ;
157675    +   H14  =    -0.90715840862541 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.90715840862541 + H14 ;
157676    +   H15  =     0.87046153389036 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.87046153389036 + H15 ;
157677    +   H16  =     0.49066122767086 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 0.49066122767086 + H16 ;
157678    +   H17  =    -1.05949763460293 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.05949763460293 + H17 ;
157679    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
157680    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
157681    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
157682    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
157683    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
157684    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
157685    +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
157686    +END;
MPRINT(EM_DIAGRAM):   END;
157687    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
157688    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
157689    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
157690    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
157691    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
157692    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
157693    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
157694    +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
157695    +END;
MPRINT(EM_DIAGRAM):   END;
157696    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
157697    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
157698    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
157699    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
157700    +   P_DepVar1  =    -2.32998401250848 * H11  +     -3.2074078511991 * H12
157701    +          +    -0.69549988605443 * H13  +    -1.74950789108762 * H14
157702    +          +    -1.74013772071344 * H15  +     2.65306089869015 * H16
157703    +          +     0.03700459000906 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.32998401250848 * H11 + -3.2074078511991 * H12 +
-0.69549988605443 * H13 + -1.74950789108762 * H14 + -1.74013772071344 * H15 + 2.65306089869015
* H16 + 0.03700459000906 * H17 ;
157704    +   P_DepVar1  =    -1.51229898726716 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.51229898726716 + P_DepVar1 ;
157705    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
157706    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
157707    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
157708    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
157709    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
157710    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
157711    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
157712    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
157713    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
157714    +END;
MPRINT(EM_DIAGRAM):   END;
157715    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
157716    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
157717    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
157718    +END;
MPRINT(EM_DIAGRAM):   END;
157719    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
157720    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
157721    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
157722    +END;
MPRINT(EM_DIAGRAM):   END;
157723    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
157724    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
157725    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
157726    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
157727    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
157728    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
157729    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
157730    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
157731    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
157732    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
157733    +END;
MPRINT(EM_DIAGRAM):   END;
157734    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
157735    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
157736    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
157737    +drop
157738    +H11
157739    +H12
157740    +H13
157741    +H14
157742    +H15
157743    +H16
157744    +H17
157745    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
157746    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
157747     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
157748     quit;
157749     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
157750     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
157751     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
157752     retain ID 2 Node "Neural30";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural30";
157753     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
157754     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2154 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2154 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
157755     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
157756     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
157757     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2154 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2154 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
157758     proc sort data=EMWS8.Neural30_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural30_variableset out=_temp2(keep=NAME CREATOR);
157759     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
157760     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.NEURAL30_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
157761     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
157762     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
157763     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
157764     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
157765     proc contents data=EMWS8.Neural30_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural30_train out=_meta(keep=NAME) noprint;
157766     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
157767     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
157768     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
157769     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
157770     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
157771     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
157772     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
157773     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
157774     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
157775     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
157775   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1016 rows and 5 columns.
 
157776     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
157777     proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
157778     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1016 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 1016 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
157779     filename _pref
157779   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
157780     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
157781     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
157782    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
157783    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
157784    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
157785    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
157786    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
157787    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
157788     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
157789     quit;
157790     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
157791     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
157792     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
157793     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
157794     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
157795     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
157796     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
157797     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
157798     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
157799     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
157800     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
157801     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
157802     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
157803     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
157804     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
157805     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
157806     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
157807     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
157808     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
157809     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
157810     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
157811     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
157812     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
157813     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
157814     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
157815     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
157816     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
157816   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
157817     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
157818     proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
157819     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 1020 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
157820     filename _pref
157820   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
157821     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
157822     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
157823    +
157824    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
157825    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
157825   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
157826    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
157827    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
157828    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
157829    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
157830    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
157831     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
157832     quit;
157833     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
157834     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
157835     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
157836     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
157837     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
157838     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
157839     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
157840     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
157841     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
157842     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
157843     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
157844     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
157845     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
157846     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
157847     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
157848     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
157849     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
157850     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
157851     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
157852     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
157853     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
157854     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
157855     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
157856     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
157857     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
157858     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
157859     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
157859   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
157860     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
157861     proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
157862     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 1059 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
157863     filename _pref
157863   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
157864     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
157865     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
157866    +
157867    +
157868    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
157869    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
157870    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
157871    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
157872    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
157873    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
157874    +
157875    +
157876    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
157877    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
157878    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
157879    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
157880    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
157881    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
157882    +
157883    +
157884    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
157885    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
157886    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
157887    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
157888    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
157889    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
157890    +
157891    +
157892    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
157893    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
157894    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
157895    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
157896    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
157897    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
157898    +
157899    +
157900    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
157901    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
157902    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
157903    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
157904    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
157905    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
157906    +
157907    +
157908    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
157909    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
157910    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
157911    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
157912    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
157913    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
157914    +
157915    +
157916    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
157917    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
157918    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
157919    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
157920    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
157921    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
157922    +
157923    +
157924    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
157925    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
157926    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
157927    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
157928    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
157929    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
157930    +if
157931    +_FILTERNORM1 not in ( '.')
157932    + and
157933    +_FILTERNORM2 not in ( '.')
157934    + and
157935    +_FILTERNORM3 not in ( '.')
157936    + and
157937    +_FILTERNORM4 not in ( '.')
157938    + and
157939    +_FILTERNORM5 not in ( '.')
157940    + and
157941    +_FILTERNORM6 not in ( '.')
157942    + and
157943    +_FILTERNORM7 not in ( ' ')
157944    + and
157945    +_FILTERNORM8 not in ( ' ')
157946    +and
157947    +( Dt_Customer ne .)
157948    +and ( Income ne . and (Income<=107000))
157949    +and ( Kidhome ne .)
157950    +and ( MntFishProducts ne .)
157951    +and ( MntFruits ne .)
157952    +and ( MntGoldProds ne .)
157953    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
157954    +and ( MntSweetProducts ne .)
157955    +and ( MntWines ne .)
157956    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
157957    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
157958    +and ( NumStorePurchases ne .)
157959    +and ( NumWebPurchases ne .)
157960    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
157961    +and ( Recency ne .)
157962    +and ( Teenhome ne .)
157963    +and ( Year_Birth ne .)
157964    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
157965    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
157966    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
157967    +end;
MPRINT(EM_DIAGRAM):   end;
157968    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
157969    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
157970     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
157971     quit;
157972     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
157973     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
157974     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
157975     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
157976     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
157977     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
157978     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
157979     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
157980     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
157981     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
157982     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
157983     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
157984     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
157985     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
157986     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
157987     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
157988     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
157989     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
157990     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
157991     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
157992     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
157993     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
157994     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
157995     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
157996     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
157997     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
157998     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
157998   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
157999     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
158000     proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
158001     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 1125 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
158002     %macro varDept(fcmpdata=,id=);
158003     %global nobs&id scoreFlag&id;
158004     %let scoreFlag&id = 0;
158005     %if &id=1 or ^&fcmpStart %then %do;
158006     proc sort data=&fcmpdata out=_temp&id nodupkey;
158007     by NAME;
158008     where id=&id and LHS in( %let j=1;
158009     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
158010     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
158011     "&var" %let j = %eval(&j+1);
158012     %end;
158013     );
158014     run;
158015     %let dsid = %sysfunc(open(_temp&id));
158016     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
158017     %let dsid = %sysfunc(close(&dsid));
158018     %if &&nobs&id %then %do;
158019     %let scoreFlag&id = 1;
158020     %let fcmpStart = 1;
158021     %end;
158022     %else %let fcmpStart = 0;
158023     %end;
158024     %else %do;
158025     proc sort data=&fcmpdata out=_tempid;
158026     where id=&id;
158027     by LHS;
158028     run;
158029     %let dsid = %sysfunc(open(_tempid));
158030     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
158031     %let dsid = %sysfunc(close(&dsid));
158032     %if ^&&nobs&id %then %do;
158033     proc datasets lib=work nolist;
158034     delete _tempid;
158035     run;
158036     quit;
158037     %end;
158038     %else %do;
158039     data _tempAll;
158040     set %let j=%eval(&id-1);
158041     %do x=1 %to &j;
158042     %if &&nobs&x %then %do;
158043     _temp&x %end;
158044     %end;
158045     ;
158046     run;
158047     proc sql;
158048     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
158048   ! work._tempid p2 where p.name=p2.lhs;
158049     quit;
158050     data _temp&id;
158051     set _temp&id;
158052     where LHS ne '' and NAME ne '' and Node ne '';
158053     run;
158054     proc datasets lib=work nolist;
158055     delete _tempAll;
158056     run;
158057     %let dsid = %sysfunc(open(_temp&id));
158058     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
158059     %let dsid = %sysfunc(close(&dsid));
158060     %if ^&&nobs&id %then %do;
158061     proc datasets lib=work nolist;
158062     delete _temp&id;
158063     run;
158064     quit;
158065     %end;
158066     %else %do;
158067     %let scoreFlag&id = 1;
158068     data _temp&id;
158069     set _temp&id;
158070     where LHS ne NAME and node ne '';
158071     run;
158072     %let dsid = %sysfunc(open(_temp&id));
158073     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
158074     %let dsid = %sysfunc(close(&dsid));
158075     %if ^&&nobs&id %then %do;
158076     proc datasets lib=work nolist;
158077     delete _temp&id;
158078     run;
158079     quit;
158080     %end;
158081     %else %do;
158082     proc sort data=_temp&id nodupkey;
158083     by LHS NAME;
158084     run;
158085     %end;
158086     %end;
158087     %end;
158088     %end;
158089     %mend varDept;
158090     %macro optCode(outdata=fcmpdata);
158091     %global fcmpStart;
158092     %let fcmpStart = 0;
158093     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
158094     %let NumNodes=9;
158095     %do k=1 %to &NumNodes;
158096     %vardept(fcmpdata=&outdata, id=&k);
158097     %end;
158098     %mend optCode;
158099     %optcode(outData=EMWS8.Ensmbl22_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 98 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 73 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 25 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp6;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP6 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
158100     filename _pref
158100   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural35\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural35\EMPUBLISHSCORE.sas";
158101     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
158102     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural35\EMPUBLISHSCORE.sas.
158103    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
158104    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
158105    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
158106    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
158107    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
158108    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
158109    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
158110    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
158111    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
158112    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
158113    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
158114    +LENGTH _WARN_ $4
158115    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
158116    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
158117    +
158118    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
158119    +
158120    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
158121    +
158122    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
158123    +
158124    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
158125    +
158126    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
158127    +
158128    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
158129    +
158130    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
158131    +
158132    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
158133    +
158134    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
158135    +
158136    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
158137    +
158138    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
158139    +
158140    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
158141    +
158142    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
158143    +
158144    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
158145    +
158146    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
158147    +
158148    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
158149    +
158150    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
158151    +
158152    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
158153    +
158154    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
158155    +
158156    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
158157    +
158158    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
158159    +
158160    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
158161    +
158162    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
158163    +
158164    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
158165    +
158166    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
158167    +
158168    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
158169    +
158170    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
158171    +
158172    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
158173    +
158174    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
158175    +
158176    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
158177    +
158178    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
158179    +
158180    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
158181    +
158182    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
158183    +
158184    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
158185    +
158186    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
158187    +
158188    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
158189    +
158190    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
158191    +
158192    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
158193    +
158194    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
158195    +
158196    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
158197    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
158198    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
158199    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
158200    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
158201    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
158202    +end;
MPRINT(EM_DIAGRAM):   end;
158203    +else do;
MPRINT(EM_DIAGRAM):   else do;
158204    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
158205    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
158206    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
158207    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
158208    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
158209    +   end;
MPRINT(EM_DIAGRAM):   end;
158210    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
158211    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
158212    +   end;
MPRINT(EM_DIAGRAM):   end;
158213    +   else do;
MPRINT(EM_DIAGRAM):   else do;
158214    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
158215    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
158216    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
158217    +   end;
MPRINT(EM_DIAGRAM):   end;
158218    +end;
MPRINT(EM_DIAGRAM):   end;
158219    +
158220    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
158221    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
158222    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
158223    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
158224    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
158225    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
158226    +end;
MPRINT(EM_DIAGRAM):   end;
158227    +else do;
MPRINT(EM_DIAGRAM):   else do;
158228    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
158229    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
158230    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
158231    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
158232    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
158233    +   end;
MPRINT(EM_DIAGRAM):   end;
158234    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
158235    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
158236    +   end;
MPRINT(EM_DIAGRAM):   end;
158237    +   else do;
MPRINT(EM_DIAGRAM):   else do;
158238    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
158239    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
158240    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
158241    +   end;
MPRINT(EM_DIAGRAM):   end;
158242    +end;
MPRINT(EM_DIAGRAM):   end;
158243    +
158244    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
158245    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
158246    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
158247    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
158248    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
158249    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
158250    +end;
MPRINT(EM_DIAGRAM):   end;
158251    +else do;
MPRINT(EM_DIAGRAM):   else do;
158252    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
158253    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
158254    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
158255    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
158256    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
158257    +   end;
MPRINT(EM_DIAGRAM):   end;
158258    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
158259    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
158260    +   end;
MPRINT(EM_DIAGRAM):   end;
158261    +   else do;
MPRINT(EM_DIAGRAM):   else do;
158262    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
158263    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
158264    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
158265    +   end;
MPRINT(EM_DIAGRAM):   end;
158266    +end;
MPRINT(EM_DIAGRAM):   end;
158267    +
158268    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
158269    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
158270    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
158271    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
158272    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
158273    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
158274    +end;
MPRINT(EM_DIAGRAM):   end;
158275    +else do;
MPRINT(EM_DIAGRAM):   else do;
158276    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
158277    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
158278    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
158279    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
158280    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
158281    +   end;
MPRINT(EM_DIAGRAM):   end;
158282    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
158283    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
158284    +   end;
MPRINT(EM_DIAGRAM):   end;
158285    +   else do;
MPRINT(EM_DIAGRAM):   else do;
158286    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
158287    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
158288    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
158289    +   end;
MPRINT(EM_DIAGRAM):   end;
158290    +end;
MPRINT(EM_DIAGRAM):   end;
158291    +
158292    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
158293    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
158294    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
158295    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
158296    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
158297    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
158298    +end;
MPRINT(EM_DIAGRAM):   end;
158299    +else do;
MPRINT(EM_DIAGRAM):   else do;
158300    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
158301    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
158302    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
158303    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
158304    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
158305    +   end;
MPRINT(EM_DIAGRAM):   end;
158306    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
158307    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
158308    +   end;
MPRINT(EM_DIAGRAM):   end;
158309    +   else do;
MPRINT(EM_DIAGRAM):   else do;
158310    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
158311    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
158312    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
158313    +   end;
MPRINT(EM_DIAGRAM):   end;
158314    +end;
MPRINT(EM_DIAGRAM):   end;
158315    +
158316    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
158317    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
158318    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
158319    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
158320    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
158321    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
158322    +end;
MPRINT(EM_DIAGRAM):   end;
158323    +else do;
MPRINT(EM_DIAGRAM):   else do;
158324    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
158325    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
158326    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
158327    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
158328    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
158329    +   end;
MPRINT(EM_DIAGRAM):   end;
158330    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
158331    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
158332    +   end;
MPRINT(EM_DIAGRAM):   end;
158333    +   else do;
MPRINT(EM_DIAGRAM):   else do;
158334    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
158335    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
158336    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
158337    +   end;
MPRINT(EM_DIAGRAM):   end;
158338    +end;
MPRINT(EM_DIAGRAM):   end;
158339    +
158340    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
158341    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
158342    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
158343    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
158344    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
158345    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
158346    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
158347    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
158348    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
158349    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
158350    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
158351    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
158352    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
158353    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
158354    +end;
MPRINT(EM_DIAGRAM):   end;
158355    +else do;
MPRINT(EM_DIAGRAM):   else do;
158356    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
158357    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
158358    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
158359    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
158360    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
158361    +   end;
MPRINT(EM_DIAGRAM):   end;
158362    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
158363    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
158364    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
158365    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
158366    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
158367    +   end;
MPRINT(EM_DIAGRAM):   end;
158368    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
158369    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
158370    +   end;
MPRINT(EM_DIAGRAM):   end;
158371    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
158372    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
158373    +   end;
MPRINT(EM_DIAGRAM):   end;
158374    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
158375    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
158376    +   end;
MPRINT(EM_DIAGRAM):   end;
158377    +   else do;
MPRINT(EM_DIAGRAM):   else do;
158378    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
158379    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
158380    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
158381    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
158382    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
158383    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
158384    +   end;
MPRINT(EM_DIAGRAM):   end;
158385    +end;
MPRINT(EM_DIAGRAM):   end;
158386    +
158387    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
158388    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
158389    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
158390    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
158391    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
158392    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
158393    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
158394    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
158395    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
158396    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
158397    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
158398    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
158399    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
158400    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
158401    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
158402    +end;
MPRINT(EM_DIAGRAM):   end;
158403    +else do;
MPRINT(EM_DIAGRAM):   else do;
158404    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
158405    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
158406    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
158407    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
158408    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
158409    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
158410    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
158411    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
158412    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
158413    +         end;
MPRINT(EM_DIAGRAM):   end;
158414    +         else do;
MPRINT(EM_DIAGRAM):   else do;
158415    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
158416    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
158417    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
158418    +            end;
MPRINT(EM_DIAGRAM):   end;
158419    +         end;
MPRINT(EM_DIAGRAM):   end;
158420    +      end;
MPRINT(EM_DIAGRAM):   end;
158421    +      else do;
MPRINT(EM_DIAGRAM):   else do;
158422    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
158423    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
158424    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
158425    +         end;
MPRINT(EM_DIAGRAM):   end;
158426    +      end;
MPRINT(EM_DIAGRAM):   end;
158427    +   end;
MPRINT(EM_DIAGRAM):   end;
158428    +   else do;
MPRINT(EM_DIAGRAM):   else do;
158429    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
158430    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
158431    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
158432    +      end;
MPRINT(EM_DIAGRAM):   end;
158433    +      else do;
MPRINT(EM_DIAGRAM):   else do;
158434    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
158435    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
158436    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
158437    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
158438    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
158439    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
158440    +         end;
MPRINT(EM_DIAGRAM):   end;
158441    +      end;
MPRINT(EM_DIAGRAM):   end;
158442    +   end;
MPRINT(EM_DIAGRAM):   end;
158443    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
158444    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
158445    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
158446    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
158447    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
158448    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
158449    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
158450    +   end;
MPRINT(EM_DIAGRAM):   end;
158451    +end;
MPRINT(EM_DIAGRAM):   end;
158452    +
158453    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
158454    +*** Checking missing input Interval
158455    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
158456    +
158457    +IF NMISS(
158458    +   Income ,
158459    +   Kidhome ,
158460    +   MntFishProducts ,
158461    +   MntFruits ,
158462    +   MntGoldProds ,
158463    +   MntMeatProducts ,
158464    +   MntSweetProducts ,
158465    +   MntWines ,
158466    +   NumCatalogPurchases ,
158467    +   NumDealsPurchases ,
158468    +   NumStorePurchases ,
158469    +   NumWebPurchases ,
158470    +   NumWebVisitsMonth ,
158471    +   Recency ,
158472    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
158473    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
158474    +
158475    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
158476    +END;
MPRINT(EM_DIAGRAM):   END;
158477    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
158478    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
158479    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
158480    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
158481    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
158482    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
158483    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
158484    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
158485    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
158486    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
158487    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
158488    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
158489    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
158490    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
158491    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
158492    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
158493    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
158494    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
158495    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
158496    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
158497    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
158498    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
158499    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
158500    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
158501    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
158502    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
158503    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
158504    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
158505    +END;
MPRINT(EM_DIAGRAM):   END;
158506    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
158507    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
158508    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
158509    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
158510    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
158511    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
158512    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
158513    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
158514    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
158515    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
158516    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
158517    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
158518    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
158519    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
158520    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
158521    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
158522    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
158523    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
158524    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
158525    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
158526    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
158527    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
158528    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
158529    +   ELSE S_NumCatalogPurchases
158530    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
158531    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
158532    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
158533    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
158534    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
158535    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
158536    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
158537    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
158538    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
158539    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
158540    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
158541    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
158542    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
158543    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
158544    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
158545    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
158546    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
158547    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
158548    +END;
MPRINT(EM_DIAGRAM):   END;
158549    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
158550    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
158551    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
158552    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
158553    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
158554    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
158555    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
158556    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
158557    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
158558    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
158559    +   H11  =     0.87660114046125 * S_Income  +     -0.7994451897827 * S_Kidhome
158560    +          +    -0.08967295716195 * S_MntFishProducts
158561    +          +     0.03184635437516 * S_MntFruits  +    -0.13860895575438 *
158562    +        S_MntGoldProds  +     0.55790460748169 * S_MntMeatProducts
158563    +          +    -0.02806094557115 * S_MntSweetProducts
158564    +          +    -0.14537763592724 * S_MntWines  +     0.76891266523847 *
158565    +        S_NumCatalogPurchases  +     0.16842007461305 * S_NumDealsPurchases
158566    +          +     0.25137876058262 * S_NumStorePurchases
158567    +          +    -0.07865442401292 * S_NumWebPurchases
158568    +          +     1.03197398967259 * S_NumWebVisitsMonth
158569    +          +    -1.26907156503759 * S_Recency  +    -0.76016893316351 *
158570    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.87660114046125 * S_Income + -0.7994451897827 * S_Kidhome +
-0.08967295716195 * S_MntFishProducts + 0.03184635437516 * S_MntFruits + -0.13860895575438 *
S_MntGoldProds + 0.55790460748169 * S_MntMeatProducts + -0.02806094557115 * S_MntSweetProducts
+ -0.14537763592724 * S_MntWines + 0.76891266523847 * S_NumCatalogPurchases + 0.16842007461305
* S_NumDealsPurchases + 0.25137876058262 * S_NumStorePurchases + -0.07865442401292 *
S_NumWebPurchases + 1.03197398967259 * S_NumWebVisitsMonth + -1.26907156503759 * S_Recency +
-0.76016893316351 * S_Teenhome ;
158571    +   H12  =     0.37295000114468 * S_Income  +    -0.12834211496575 * S_Kidhome
158572    +          +     0.19312392388912 * S_MntFishProducts
158573    +          +      0.1561688289137 * S_MntFruits  +     0.04004810938796 *
158574    +        S_MntGoldProds  +     0.32599201739588 * S_MntMeatProducts
158575    +          +       0.204174263605 * S_MntSweetProducts
158576    +          +    -0.11560784817014 * S_MntWines  +     0.12255073568725 *
158577    +        S_NumCatalogPurchases  +    -0.05543734180218 * S_NumDealsPurchases
158578    +          +     0.07747830335769 * S_NumStorePurchases
158579    +          +     0.07960837555191 * S_NumWebPurchases
158580    +          +     0.02351602389122 * S_NumWebVisitsMonth
158581    +          +     -0.2840853952427 * S_Recency  +    -0.47421627761687 *
158582    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.37295000114468 * S_Income + -0.12834211496575 * S_Kidhome +
0.19312392388912 * S_MntFishProducts + 0.1561688289137 * S_MntFruits + 0.04004810938796 *
S_MntGoldProds + 0.32599201739588 * S_MntMeatProducts + 0.204174263605 * S_MntSweetProducts +
-0.11560784817014 * S_MntWines + 0.12255073568725 * S_NumCatalogPurchases + -0.05543734180218
* S_NumDealsPurchases + 0.07747830335769 * S_NumStorePurchases + 0.07960837555191 *
S_NumWebPurchases + 0.02351602389122 * S_NumWebVisitsMonth + -0.2840853952427 * S_Recency +
-0.47421627761687 * S_Teenhome ;
158583    +   H13  =    -0.33428925248315 * S_Income  +    -0.03845622730742 * S_Kidhome
158584    +          +     0.18733919794636 * S_MntFishProducts
158585    +          +     0.45907982190052 * S_MntFruits  +    -0.48776616433719 *
158586    +        S_MntGoldProds  +    -0.41340481007204 * S_MntMeatProducts
158587    +          +     0.42514606159239 * S_MntSweetProducts
158588    +          +     0.20038001368787 * S_MntWines  +    -1.21708501803782 *
158589    +        S_NumCatalogPurchases  +    -1.06820061274533 * S_NumDealsPurchases
158590    +          +     0.36582106462789 * S_NumStorePurchases
158591    +          +     0.04244777020435 * S_NumWebPurchases
158592    +          +    -0.24296342902503 * S_NumWebVisitsMonth
158593    +          +     0.27451716762947 * S_Recency  +     0.13110477325277 *
158594    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.33428925248315 * S_Income + -0.03845622730742 * S_Kidhome +
0.18733919794636 * S_MntFishProducts + 0.45907982190052 * S_MntFruits + -0.48776616433719 *
S_MntGoldProds + -0.41340481007204 * S_MntMeatProducts + 0.42514606159239 * S_MntSweetProducts
+ 0.20038001368787 * S_MntWines + -1.21708501803782 * S_NumCatalogPurchases +
-1.06820061274533 * S_NumDealsPurchases + 0.36582106462789 * S_NumStorePurchases +
0.04244777020435 * S_NumWebPurchases + -0.24296342902503 * S_NumWebVisitsMonth +
0.27451716762947 * S_Recency + 0.13110477325277 * S_Teenhome ;
158595    +   H14  =    -0.70493412542585 * S_Income  +     0.41202796606799 * S_Kidhome
158596    +          +     0.05986489897572 * S_MntFishProducts
158597    +          +    -0.05040531715469 * S_MntFruits  +       0.051068387592 *
158598    +        S_MntGoldProds  +    -0.13581881662481 * S_MntMeatProducts
158599    +          +    -0.05513370461072 * S_MntSweetProducts
158600    +          +     0.77472084468819 * S_MntWines  +    -0.03211788969126 *
158601    +        S_NumCatalogPurchases  +    -0.24097486430988 * S_NumDealsPurchases
158602    +          +     0.64364674828841 * S_NumStorePurchases
158603    +          +     0.15084748708424 * S_NumWebPurchases
158604    +          +    -0.94144998356377 * S_NumWebVisitsMonth
158605    +          +     1.16778338364599 * S_Recency  +     0.32089861635238 *
158606    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.70493412542585 * S_Income + 0.41202796606799 * S_Kidhome +
0.05986489897572 * S_MntFishProducts + -0.05040531715469 * S_MntFruits + 0.051068387592 *
S_MntGoldProds + -0.13581881662481 * S_MntMeatProducts + -0.05513370461072 *
S_MntSweetProducts + 0.77472084468819 * S_MntWines + -0.03211788969126 * S_NumCatalogPurchases
+ -0.24097486430988 * S_NumDealsPurchases + 0.64364674828841 * S_NumStorePurchases +
0.15084748708424 * S_NumWebPurchases + -0.94144998356377 * S_NumWebVisitsMonth +
1.16778338364599 * S_Recency + 0.32089861635238 * S_Teenhome ;
158607    +   H15  =    -0.15703510827879 * S_Income  +    -0.30977841002562 * S_Kidhome
158608    +          +    -0.14543196273578 * S_MntFishProducts
158609    +          +     0.32223695896711 * S_MntFruits  +    -0.31846203211698 *
158610    +        S_MntGoldProds  +     -1.4125160823105 * S_MntMeatProducts
158611    +          +     0.49374793444169 * S_MntSweetProducts
158612    +          +     0.39699716010219 * S_MntWines  +    -0.88140331687645 *
158613    +        S_NumCatalogPurchases  +    -0.87657222813687 * S_NumDealsPurchases
158614    +          +     1.23754786782746 * S_NumStorePurchases
158615    +          +     1.11316667348511 * S_NumWebPurchases
158616    +          +    -1.08592446439781 * S_NumWebVisitsMonth
158617    +          +     0.66958517589542 * S_Recency  +     0.06799032788481 *
158618    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.15703510827879 * S_Income + -0.30977841002562 * S_Kidhome +
-0.14543196273578 * S_MntFishProducts + 0.32223695896711 * S_MntFruits + -0.31846203211698 *
S_MntGoldProds + -1.4125160823105 * S_MntMeatProducts + 0.49374793444169 * S_MntSweetProducts
+ 0.39699716010219 * S_MntWines + -0.88140331687645 * S_NumCatalogPurchases +
-0.87657222813687 * S_NumDealsPurchases + 1.23754786782746 * S_NumStorePurchases +
1.11316667348511 * S_NumWebPurchases + -1.08592446439781 * S_NumWebVisitsMonth +
0.66958517589542 * S_Recency + 0.06799032788481 * S_Teenhome ;
158619    +   H16  =    -0.10360901553583 * S_Income  +     0.39257497240865 * S_Kidhome
158620    +          +     0.29549884005341 * S_MntFishProducts
158621    +          +     0.04922491353914 * S_MntFruits  +     -0.1412659458221 *
158622    +        S_MntGoldProds  +    -0.12361454534126 * S_MntMeatProducts
158623    +          +    -0.11909215986981 * S_MntSweetProducts
158624    +          +     0.11430484977092 * S_MntWines  +    -0.66235553839539 *
158625    +        S_NumCatalogPurchases  +     0.17261763180198 * S_NumDealsPurchases
158626    +          +     0.30109334594548 * S_NumStorePurchases
158627    +          +     0.01985762767489 * S_NumWebPurchases
158628    +          +     0.44965133281333 * S_NumWebVisitsMonth
158629    +          +     0.32338634259192 * S_Recency  +    -0.04032956941805 *
158630    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.10360901553583 * S_Income + 0.39257497240865 * S_Kidhome +
0.29549884005341 * S_MntFishProducts + 0.04922491353914 * S_MntFruits + -0.1412659458221 *
S_MntGoldProds + -0.12361454534126 * S_MntMeatProducts + -0.11909215986981 *
S_MntSweetProducts + 0.11430484977092 * S_MntWines + -0.66235553839539 * S_NumCatalogPurchases
+ 0.17261763180198 * S_NumDealsPurchases + 0.30109334594548 * S_NumStorePurchases +
0.01985762767489 * S_NumWebPurchases + 0.44965133281333 * S_NumWebVisitsMonth +
0.32338634259192 * S_Recency + -0.04032956941805 * S_Teenhome ;
158631    +   H11  = H11  +    -0.23026310289024 * AcceptedCmp10
158632    +          +    -0.82550012364234 * AcceptedCmp20  +    -0.67764228269441 *
158633    +        AcceptedCmp30  +    -0.51547666117685 * AcceptedCmp40
158634    +          +    -0.36424958084824 * AcceptedCmp50  +       0.119862855783 *
158635    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.23026310289024 * AcceptedCmp10 + -0.82550012364234 *
AcceptedCmp20 + -0.67764228269441 * AcceptedCmp30 + -0.51547666117685 * AcceptedCmp40 +
-0.36424958084824 * AcceptedCmp50 + 0.119862855783 * Complain0 ;
158636    +   H12  = H12  +     0.02722288857426 * AcceptedCmp10
158637    +          +      0.1236576068539 * AcceptedCmp20  +    -0.31265425960737 *
158638    +        AcceptedCmp30  +    -0.25076565034266 * AcceptedCmp40
158639    +          +    -0.20158659730872 * AcceptedCmp50  +    -0.43687103612629 *
158640    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.02722288857426 * AcceptedCmp10 + 0.1236576068539 *
AcceptedCmp20 + -0.31265425960737 * AcceptedCmp30 + -0.25076565034266 * AcceptedCmp40 +
-0.20158659730872 * AcceptedCmp50 + -0.43687103612629 * Complain0 ;
158641    +   H13  = H13  +     0.21852176280571 * AcceptedCmp10
158642    +          +     0.01727991436107 * AcceptedCmp20  +     0.19303261094625 *
158643    +        AcceptedCmp30  +    -0.65492191560509 * AcceptedCmp40
158644    +          +    -0.09636750660684 * AcceptedCmp50  +     0.07579128571046 *
158645    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.21852176280571 * AcceptedCmp10 + 0.01727991436107 *
AcceptedCmp20 + 0.19303261094625 * AcceptedCmp30 + -0.65492191560509 * AcceptedCmp40 +
-0.09636750660684 * AcceptedCmp50 + 0.07579128571046 * Complain0 ;
158646    +   H14  = H14  +     0.20819294353855 * AcceptedCmp10
158647    +          +      0.5159102831901 * AcceptedCmp20  +     0.55295587458643 *
158648    +        AcceptedCmp30  +     0.80682431419623 * AcceptedCmp40
158649    +          +     0.74007057798158 * AcceptedCmp50  +     -0.4573052390807 *
158650    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.20819294353855 * AcceptedCmp10 + 0.5159102831901 *
AcceptedCmp20 + 0.55295587458643 * AcceptedCmp30 + 0.80682431419623 * AcceptedCmp40 +
0.74007057798158 * AcceptedCmp50 + -0.4573052390807 * Complain0 ;
158651    +   H15  = H15  +     1.26330939420524 * AcceptedCmp10
158652    +          +     0.29494505935793 * AcceptedCmp20  +     0.25561322032419 *
158653    +        AcceptedCmp30  +     0.50102236777897 * AcceptedCmp40
158654    +          +     0.20696267245027 * AcceptedCmp50  +    -0.00849145233901 *
158655    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 1.26330939420524 * AcceptedCmp10 + 0.29494505935793 *
AcceptedCmp20 + 0.25561322032419 * AcceptedCmp30 + 0.50102236777897 * AcceptedCmp40 +
0.20696267245027 * AcceptedCmp50 + -0.00849145233901 * Complain0 ;
158656    +   H16  = H16  +     0.03638428330381 * AcceptedCmp10
158657    +          +     0.27994215452657 * AcceptedCmp20  +    -0.03861840445025 *
158658    +        AcceptedCmp30  +      0.3398057347433 * AcceptedCmp40
158659    +          +    -0.00738335957724 * AcceptedCmp50  +      0.0447804375799 *
158660    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.03638428330381 * AcceptedCmp10 + 0.27994215452657 *
AcceptedCmp20 + -0.03861840445025 * AcceptedCmp30 + 0.3398057347433 * AcceptedCmp40 +
-0.00738335957724 * AcceptedCmp50 + 0.0447804375799 * Complain0 ;
158661    +   H11  = H11  +     0.27482405283962 * Education2n_Cycle
158662    +          +     0.11084012456612 * EducationBasic  +    -0.23835071987159 *
158663    +        EducationGraduation  +    -0.10167082180552 * EducationMaster
158664    +          +     0.51015833145636 * Marital_StatusDivorced
158665    +          +     -1.1653662063616 * Marital_StatusMarried
158666    +          +     1.19396547750441 * Marital_StatusSingle
158667    +          +    -0.99605751789992 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.27482405283962 * Education2n_Cycle + 0.11084012456612 *
EducationBasic + -0.23835071987159 * EducationGraduation + -0.10167082180552 * EducationMaster
+ 0.51015833145636 * Marital_StatusDivorced + -1.1653662063616 * Marital_StatusMarried +
1.19396547750441 * Marital_StatusSingle + -0.99605751789992 * Marital_StatusTogether ;
158668    +   H12  = H12  +    -0.05268347704739 * Education2n_Cycle
158669    +          +     0.19362065968028 * EducationBasic  +    -0.26784257195414 *
158670    +        EducationGraduation  +     0.16650577465959 * EducationMaster
158671    +          +     0.09154288513995 * Marital_StatusDivorced
158672    +          +     0.06725684628382 * Marital_StatusMarried
158673    +          +     0.11327659191494 * Marital_StatusSingle
158674    +          +     0.01793778876811 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.05268347704739 * Education2n_Cycle + 0.19362065968028 *
EducationBasic + -0.26784257195414 * EducationGraduation + 0.16650577465959 * EducationMaster
+ 0.09154288513995 * Marital_StatusDivorced + 0.06725684628382 * Marital_StatusMarried +
0.11327659191494 * Marital_StatusSingle + 0.01793778876811 * Marital_StatusTogether ;
158675    +   H13  = H13  +     -0.1027084329077 * Education2n_Cycle
158676    +          +    -0.01342449140757 * EducationBasic  +    -0.35627920427273 *
158677    +        EducationGraduation  +    -0.05554656531793 * EducationMaster
158678    +          +     0.37591653615852 * Marital_StatusDivorced
158679    +          +    -0.05024236790132 * Marital_StatusMarried
158680    +          +    -0.28317154997144 * Marital_StatusSingle
158681    +          +    -0.19247490223101 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.1027084329077 * Education2n_Cycle + -0.01342449140757 *
EducationBasic + -0.35627920427273 * EducationGraduation + -0.05554656531793 * EducationMaster
+ 0.37591653615852 * Marital_StatusDivorced + -0.05024236790132 * Marital_StatusMarried +
-0.28317154997144 * Marital_StatusSingle + -0.19247490223101 * Marital_StatusTogether ;
158682    +   H14  = H14  +     -0.4162491480577 * Education2n_Cycle
158683    +          +     0.38075572764074 * EducationBasic  +    -0.28169469529121 *
158684    +        EducationGraduation  +       0.638986138084 * EducationMaster
158685    +          +    -0.44885292450558 * Marital_StatusDivorced
158686    +          +     0.78958791519299 * Marital_StatusMarried
158687    +          +    -0.09688714431356 * Marital_StatusSingle
158688    +          +     0.84239030196202 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.4162491480577 * Education2n_Cycle + 0.38075572764074 *
EducationBasic + -0.28169469529121 * EducationGraduation + 0.638986138084 * EducationMaster +
-0.44885292450558 * Marital_StatusDivorced + 0.78958791519299 * Marital_StatusMarried +
-0.09688714431356 * Marital_StatusSingle + 0.84239030196202 * Marital_StatusTogether ;
158689    +   H15  = H15  +     0.33126657974568 * Education2n_Cycle
158690    +          +     0.44539039262703 * EducationBasic  +    -0.09154902903865 *
158691    +        EducationGraduation  +    -0.26400363440725 * EducationMaster
158692    +          +    -0.30801073895989 * Marital_StatusDivorced
158693    +          +     -0.1285150749223 * Marital_StatusMarried
158694    +          +     0.06775542164414 * Marital_StatusSingle
158695    +          +    -0.13032366945766 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.33126657974568 * Education2n_Cycle + 0.44539039262703 *
EducationBasic + -0.09154902903865 * EducationGraduation + -0.26400363440725 * EducationMaster
+ -0.30801073895989 * Marital_StatusDivorced + -0.1285150749223 * Marital_StatusMarried +
0.06775542164414 * Marital_StatusSingle + -0.13032366945766 * Marital_StatusTogether ;
158696    +   H16  = H16  +     0.02030175222681 * Education2n_Cycle
158697    +          +    -0.19579401096879 * EducationBasic  +      0.2070703930869 *
158698    +        EducationGraduation  +    -0.40706983167068 * EducationMaster
158699    +          +     0.22193599090368 * Marital_StatusDivorced
158700    +          +    -0.54544672042168 * Marital_StatusMarried
158701    +          +    -0.02237436019864 * Marital_StatusSingle
158702    +          +    -0.21979468164854 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.02030175222681 * Education2n_Cycle + -0.19579401096879 *
EducationBasic + 0.2070703930869 * EducationGraduation + -0.40706983167068 * EducationMaster +
0.22193599090368 * Marital_StatusDivorced + -0.54544672042168 * Marital_StatusMarried +
-0.02237436019864 * Marital_StatusSingle + -0.21979468164854 * Marital_StatusTogether ;
158703    +   H11  =    -1.24550293901788 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.24550293901788 + H11 ;
158704    +   H12  =     0.36762263942809 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.36762263942809 + H12 ;
158705    +   H13  =     0.07010867577103 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.07010867577103 + H13 ;
158706    +   H14  =    -1.94014549272156 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -1.94014549272156 + H14 ;
158707    +   H15  =     0.17666656180153 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.17666656180153 + H15 ;
158708    +   H16  =    -1.64626406576709 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.64626406576709 + H16 ;
158709    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
158710    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
158711    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
158712    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
158713    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
158714    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
158715    +END;
MPRINT(EM_DIAGRAM):   END;
158716    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
158717    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
158718    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
158719    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
158720    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
158721    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
158722    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
158723    +END;
MPRINT(EM_DIAGRAM):   END;
158724    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
158725    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
158726    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
158727    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
158728    +   P_DepVar1  =     4.21126046696691 * H11  +      0.6565061288056 * H12
158729    +          +    -1.92484011508628 * H13  +    -3.74020722142387 * H14
158730    +          +    -3.27353026762143 * H15  +     -1.2596922869974 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.21126046696691 * H11 + 0.6565061288056 * H12 +
-1.92484011508628 * H13 + -3.74020722142387 * H14 + -3.27353026762143 * H15 + -1.2596922869974
* H16 ;
158731    +   P_DepVar1  =    -1.36806658950323 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.36806658950323 + P_DepVar1 ;
158732    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
158733    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
158734    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
158735    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
158736    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
158737    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
158738    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
158739    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
158740    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
158741    +END;
MPRINT(EM_DIAGRAM):   END;
158742    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
158743    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
158744    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
158745    +END;
MPRINT(EM_DIAGRAM):   END;
158746    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
158747    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
158748    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
158749    +END;
MPRINT(EM_DIAGRAM):   END;
158750    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
158751    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
158752    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
158753    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
158754    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
158755    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
158756    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
158757    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
158758    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
158759    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
158760    +END;
MPRINT(EM_DIAGRAM):   END;
158761    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
158762    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
158763    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
158764    +drop
158765    +H11
158766    +H12
158767    +H13
158768    +H14
158769    +H15
158770    +H16
158771    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
158772    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
158773     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
158774     quit;
158775     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
158776     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
158777     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
158778     retain ID 2 Node "Neural35";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural35";
158779     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
158780     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2016 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2016 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
158781     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
158782     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
158783     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2016 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2016 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
158784     proc sort data=EMWS8.Neural35_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural35_variableset out=_temp2(keep=NAME CREATOR);
158785     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
158786     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.NEURAL35_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
158787     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
158788     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
158789     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
158790     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
158791     proc contents data=EMWS8.Neural35_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural35_train out=_meta(keep=NAME) noprint;
158792     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
158793     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
158794     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
158795     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
158796     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
158797     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
158798     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
158799     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
158800     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
158801     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
158801   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 970 rows and 5 columns.
 
158802     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
158803     proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
158804     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 970 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 970 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
158805     filename _pref
158805   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
158806     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
158807     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
158808    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
158809    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
158810    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
158811    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
158812    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
158813    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
158814     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
158815     quit;
158816     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
158817     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
158818     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
158819     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
158820     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
158821     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
158822     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
158823     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
158824     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
158825     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
158826     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
158827     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
158828     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
158829     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
158830     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
158831     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
158832     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
158833     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
158834     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
158835     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
158836     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
158837     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
158838     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
158839     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
158840     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
158841     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
158842     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
158842   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
158843     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
158844     proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
158845     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 974 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
158846     filename _pref
158846   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
158847     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
158848     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
158849    +
158850    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
158851    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
158851   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
158852    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
158853    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
158854    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
158855    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
158856    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
158857     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
158858     quit;
158859     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
158860     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
158861     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
158862     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
158863     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
158864     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
158865     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
158866     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
158867     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
158868     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
158869     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
158870     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
158871     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
158872     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
158873     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
158874     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
158875     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
158876     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
158877     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
158878     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
158879     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
158880     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
158881     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
158882     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
158883     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
158884     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
158885     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
158885   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
158886     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
158887     proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
158888     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 1013 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
158889     filename _pref
158889   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
158890     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
158891     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
158892    +
158893    +
158894    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
158895    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
158896    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
158897    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
158898    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
158899    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
158900    +
158901    +
158902    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
158903    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
158904    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
158905    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
158906    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
158907    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
158908    +
158909    +
158910    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
158911    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
158912    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
158913    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
158914    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
158915    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
158916    +
158917    +
158918    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
158919    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
158920    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
158921    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
158922    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
158923    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
158924    +
158925    +
158926    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
158927    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
158928    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
158929    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
158930    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
158931    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
158932    +
158933    +
158934    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
158935    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
158936    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
158937    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
158938    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
158939    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
158940    +
158941    +
158942    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
158943    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
158944    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
158945    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
158946    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
158947    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
158948    +
158949    +
158950    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
158951    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
158952    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
158953    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
158954    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
158955    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
158956    +if
158957    +_FILTERNORM1 not in ( '.')
158958    + and
158959    +_FILTERNORM2 not in ( '.')
158960    + and
158961    +_FILTERNORM3 not in ( '.')
158962    + and
158963    +_FILTERNORM4 not in ( '.')
158964    + and
158965    +_FILTERNORM5 not in ( '.')
158966    + and
158967    +_FILTERNORM6 not in ( '.')
158968    + and
158969    +_FILTERNORM7 not in ( ' ')
158970    + and
158971    +_FILTERNORM8 not in ( ' ')
158972    +and
158973    +( Dt_Customer ne .)
158974    +and ( Income ne . and (Income<=107000))
158975    +and ( Kidhome ne .)
158976    +and ( MntFishProducts ne .)
158977    +and ( MntFruits ne .)
158978    +and ( MntGoldProds ne .)
158979    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
158980    +and ( MntSweetProducts ne .)
158981    +and ( MntWines ne .)
158982    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
158983    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
158984    +and ( NumStorePurchases ne .)
158985    +and ( NumWebPurchases ne .)
158986    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
158987    +and ( Recency ne .)
158988    +and ( Teenhome ne .)
158989    +and ( Year_Birth ne .)
158990    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
158991    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
158992    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
158993    +end;
MPRINT(EM_DIAGRAM):   end;
158994    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
158995    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
158996     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
158997     quit;
158998     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
158999     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
159000     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
159001     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
159002     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
159003     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
159004     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
159005     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
159006     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
159007     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
159008     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
159009     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
159010     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
159011     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
159012     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
159013     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
159014     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
159015     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
159016     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
159017     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
159018     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
159019     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
159020     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
159021     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
159022     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
159023     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
159024     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
159024   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
159025     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
159026     proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
159027     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 1079 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
159028     %macro varDept(fcmpdata=,id=);
159029     %global nobs&id scoreFlag&id;
159030     %let scoreFlag&id = 0;
159031     %if &id=1 or ^&fcmpStart %then %do;
159032     proc sort data=&fcmpdata out=_temp&id nodupkey;
159033     by NAME;
159034     where id=&id and LHS in( %let j=1;
159035     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
159036     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
159037     "&var" %let j = %eval(&j+1);
159038     %end;
159039     );
159040     run;
159041     %let dsid = %sysfunc(open(_temp&id));
159042     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
159043     %let dsid = %sysfunc(close(&dsid));
159044     %if &&nobs&id %then %do;
159045     %let scoreFlag&id = 1;
159046     %let fcmpStart = 1;
159047     %end;
159048     %else %let fcmpStart = 0;
159049     %end;
159050     %else %do;
159051     proc sort data=&fcmpdata out=_tempid;
159052     where id=&id;
159053     by LHS;
159054     run;
159055     %let dsid = %sysfunc(open(_tempid));
159056     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
159057     %let dsid = %sysfunc(close(&dsid));
159058     %if ^&&nobs&id %then %do;
159059     proc datasets lib=work nolist;
159060     delete _tempid;
159061     run;
159062     quit;
159063     %end;
159064     %else %do;
159065     data _tempAll;
159066     set %let j=%eval(&id-1);
159067     %do x=1 %to &j;
159068     %if &&nobs&x %then %do;
159069     _temp&x %end;
159070     %end;
159071     ;
159072     run;
159073     proc sql;
159074     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
159074   ! work._tempid p2 where p.name=p2.lhs;
159075     quit;
159076     data _temp&id;
159077     set _temp&id;
159078     where LHS ne '' and NAME ne '' and Node ne '';
159079     run;
159080     proc datasets lib=work nolist;
159081     delete _tempAll;
159082     run;
159083     %let dsid = %sysfunc(open(_temp&id));
159084     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
159085     %let dsid = %sysfunc(close(&dsid));
159086     %if ^&&nobs&id %then %do;
159087     proc datasets lib=work nolist;
159088     delete _temp&id;
159089     run;
159090     quit;
159091     %end;
159092     %else %do;
159093     %let scoreFlag&id = 1;
159094     data _temp&id;
159095     set _temp&id;
159096     where LHS ne NAME and node ne '';
159097     run;
159098     %let dsid = %sysfunc(open(_temp&id));
159099     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
159100     %let dsid = %sysfunc(close(&dsid));
159101     %if ^&&nobs&id %then %do;
159102     proc datasets lib=work nolist;
159103     delete _temp&id;
159104     run;
159105     quit;
159106     %end;
159107     %else %do;
159108     proc sort data=_temp&id nodupkey;
159109     by LHS NAME;
159110     run;
159111     %end;
159112     %end;
159113     %end;
159114     %end;
159115     %mend varDept;
159116     %macro optCode(outdata=fcmpdata);
159117     %global fcmpStart;
159118     %let fcmpStart = 0;
159119     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
159120     %let NumNodes=9;
159121     %do k=1 %to &NumNodes;
159122     %vardept(fcmpdata=&outdata, id=&k);
159123     %end;
159124     %mend optCode;
159125     %optcode(outData=EMWS8.Ensmbl22_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 98 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 73 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 25 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp6;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP6 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
159126     filename _pref
159126   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural32\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural32\EMPUBLISHSCORE.sas";
159127     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
159128     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural32\EMPUBLISHSCORE.sas.
159129    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
159130    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
159131    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
159132    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
159133    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
159134    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
159135    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
159136    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
159137    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
159138    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
159139    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
159140    +LENGTH _WARN_ $4
159141    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
159142    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
159143    +
159144    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
159145    +
159146    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
159147    +
159148    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
159149    +
159150    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
159151    +
159152    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
159153    +
159154    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
159155    +
159156    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
159157    +
159158    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
159159    +
159160    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
159161    +
159162    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
159163    +
159164    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
159165    +
159166    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
159167    +
159168    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
159169    +
159170    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
159171    +
159172    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
159173    +
159174    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
159175    +
159176    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
159177    +
159178    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
159179    +
159180    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
159181    +
159182    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
159183    +
159184    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
159185    +
159186    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
159187    +
159188    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
159189    +
159190    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
159191    +
159192    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
159193    +
159194    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
159195    +
159196    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
159197    +
159198    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
159199    +
159200    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
159201    +
159202    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
159203    +
159204    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
159205    +
159206    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
159207    +
159208    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
159209    +
159210    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
159211    +
159212    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
159213    +
159214    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
159215    +
159216    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
159217    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
159218    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
159219    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
159220    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
159221    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
159222    +end;
MPRINT(EM_DIAGRAM):   end;
159223    +else do;
MPRINT(EM_DIAGRAM):   else do;
159224    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
159225    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
159226    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
159227    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
159228    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
159229    +   end;
MPRINT(EM_DIAGRAM):   end;
159230    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
159231    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
159232    +   end;
MPRINT(EM_DIAGRAM):   end;
159233    +   else do;
MPRINT(EM_DIAGRAM):   else do;
159234    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
159235    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
159236    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
159237    +   end;
MPRINT(EM_DIAGRAM):   end;
159238    +end;
MPRINT(EM_DIAGRAM):   end;
159239    +
159240    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
159241    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
159242    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
159243    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
159244    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
159245    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
159246    +end;
MPRINT(EM_DIAGRAM):   end;
159247    +else do;
MPRINT(EM_DIAGRAM):   else do;
159248    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
159249    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
159250    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
159251    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
159252    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
159253    +   end;
MPRINT(EM_DIAGRAM):   end;
159254    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
159255    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
159256    +   end;
MPRINT(EM_DIAGRAM):   end;
159257    +   else do;
MPRINT(EM_DIAGRAM):   else do;
159258    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
159259    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
159260    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
159261    +   end;
MPRINT(EM_DIAGRAM):   end;
159262    +end;
MPRINT(EM_DIAGRAM):   end;
159263    +
159264    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
159265    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
159266    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
159267    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
159268    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
159269    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
159270    +end;
MPRINT(EM_DIAGRAM):   end;
159271    +else do;
MPRINT(EM_DIAGRAM):   else do;
159272    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
159273    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
159274    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
159275    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
159276    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
159277    +   end;
MPRINT(EM_DIAGRAM):   end;
159278    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
159279    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
159280    +   end;
MPRINT(EM_DIAGRAM):   end;
159281    +   else do;
MPRINT(EM_DIAGRAM):   else do;
159282    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
159283    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
159284    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
159285    +   end;
MPRINT(EM_DIAGRAM):   end;
159286    +end;
MPRINT(EM_DIAGRAM):   end;
159287    +
159288    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
159289    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
159290    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
159291    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
159292    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
159293    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
159294    +end;
MPRINT(EM_DIAGRAM):   end;
159295    +else do;
MPRINT(EM_DIAGRAM):   else do;
159296    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
159297    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
159298    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
159299    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
159300    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
159301    +   end;
MPRINT(EM_DIAGRAM):   end;
159302    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
159303    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
159304    +   end;
MPRINT(EM_DIAGRAM):   end;
159305    +   else do;
MPRINT(EM_DIAGRAM):   else do;
159306    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
159307    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
159308    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
159309    +   end;
MPRINT(EM_DIAGRAM):   end;
159310    +end;
MPRINT(EM_DIAGRAM):   end;
159311    +
159312    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
159313    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
159314    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
159315    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
159316    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
159317    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
159318    +end;
MPRINT(EM_DIAGRAM):   end;
159319    +else do;
MPRINT(EM_DIAGRAM):   else do;
159320    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
159321    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
159322    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
159323    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
159324    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
159325    +   end;
MPRINT(EM_DIAGRAM):   end;
159326    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
159327    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
159328    +   end;
MPRINT(EM_DIAGRAM):   end;
159329    +   else do;
MPRINT(EM_DIAGRAM):   else do;
159330    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
159331    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
159332    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
159333    +   end;
MPRINT(EM_DIAGRAM):   end;
159334    +end;
MPRINT(EM_DIAGRAM):   end;
159335    +
159336    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
159337    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
159338    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
159339    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
159340    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
159341    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
159342    +end;
MPRINT(EM_DIAGRAM):   end;
159343    +else do;
MPRINT(EM_DIAGRAM):   else do;
159344    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
159345    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
159346    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
159347    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
159348    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
159349    +   end;
MPRINT(EM_DIAGRAM):   end;
159350    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
159351    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
159352    +   end;
MPRINT(EM_DIAGRAM):   end;
159353    +   else do;
MPRINT(EM_DIAGRAM):   else do;
159354    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
159355    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
159356    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
159357    +   end;
MPRINT(EM_DIAGRAM):   end;
159358    +end;
MPRINT(EM_DIAGRAM):   end;
159359    +
159360    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
159361    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
159362    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
159363    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
159364    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
159365    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
159366    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
159367    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
159368    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
159369    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
159370    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
159371    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
159372    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
159373    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
159374    +end;
MPRINT(EM_DIAGRAM):   end;
159375    +else do;
MPRINT(EM_DIAGRAM):   else do;
159376    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
159377    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
159378    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
159379    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
159380    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
159381    +   end;
MPRINT(EM_DIAGRAM):   end;
159382    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
159383    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
159384    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
159385    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
159386    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
159387    +   end;
MPRINT(EM_DIAGRAM):   end;
159388    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
159389    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
159390    +   end;
MPRINT(EM_DIAGRAM):   end;
159391    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
159392    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
159393    +   end;
MPRINT(EM_DIAGRAM):   end;
159394    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
159395    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
159396    +   end;
MPRINT(EM_DIAGRAM):   end;
159397    +   else do;
MPRINT(EM_DIAGRAM):   else do;
159398    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
159399    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
159400    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
159401    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
159402    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
159403    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
159404    +   end;
MPRINT(EM_DIAGRAM):   end;
159405    +end;
MPRINT(EM_DIAGRAM):   end;
159406    +
159407    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
159408    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
159409    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
159410    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
159411    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
159412    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
159413    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
159414    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
159415    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
159416    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
159417    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
159418    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
159419    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
159420    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
159421    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
159422    +end;
MPRINT(EM_DIAGRAM):   end;
159423    +else do;
MPRINT(EM_DIAGRAM):   else do;
159424    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
159425    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
159426    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
159427    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
159428    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
159429    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
159430    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
159431    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
159432    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
159433    +         end;
MPRINT(EM_DIAGRAM):   end;
159434    +         else do;
MPRINT(EM_DIAGRAM):   else do;
159435    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
159436    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
159437    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
159438    +            end;
MPRINT(EM_DIAGRAM):   end;
159439    +         end;
MPRINT(EM_DIAGRAM):   end;
159440    +      end;
MPRINT(EM_DIAGRAM):   end;
159441    +      else do;
MPRINT(EM_DIAGRAM):   else do;
159442    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
159443    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
159444    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
159445    +         end;
MPRINT(EM_DIAGRAM):   end;
159446    +      end;
MPRINT(EM_DIAGRAM):   end;
159447    +   end;
MPRINT(EM_DIAGRAM):   end;
159448    +   else do;
MPRINT(EM_DIAGRAM):   else do;
159449    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
159450    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
159451    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
159452    +      end;
MPRINT(EM_DIAGRAM):   end;
159453    +      else do;
MPRINT(EM_DIAGRAM):   else do;
159454    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
159455    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
159456    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
159457    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
159458    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
159459    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
159460    +         end;
MPRINT(EM_DIAGRAM):   end;
159461    +      end;
MPRINT(EM_DIAGRAM):   end;
159462    +   end;
MPRINT(EM_DIAGRAM):   end;
159463    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
159464    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
159465    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
159466    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
159467    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
159468    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
159469    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
159470    +   end;
MPRINT(EM_DIAGRAM):   end;
159471    +end;
MPRINT(EM_DIAGRAM):   end;
159472    +
159473    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
159474    +*** Checking missing input Interval
159475    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
159476    +
159477    +IF NMISS(
159478    +   Income ,
159479    +   Kidhome ,
159480    +   MntFishProducts ,
159481    +   MntFruits ,
159482    +   MntGoldProds ,
159483    +   MntMeatProducts ,
159484    +   MntSweetProducts ,
159485    +   MntWines ,
159486    +   NumCatalogPurchases ,
159487    +   NumDealsPurchases ,
159488    +   NumStorePurchases ,
159489    +   NumWebPurchases ,
159490    +   NumWebVisitsMonth ,
159491    +   Recency ,
159492    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
159493    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
159494    +
159495    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
159496    +END;
MPRINT(EM_DIAGRAM):   END;
159497    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
159498    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
159499    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
159500    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
159501    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
159502    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
159503    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
159504    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
159505    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
159506    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
159507    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
159508    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
159509    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
159510    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
159511    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
159512    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
159513    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
159514    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
159515    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
159516    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
159517    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
159518    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
159519    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
159520    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
159521    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
159522    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
159523    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
159524    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
159525    +END;
MPRINT(EM_DIAGRAM):   END;
159526    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
159527    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
159528    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
159529    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
159530    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
159531    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
159532    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
159533    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
159534    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
159535    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
159536    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
159537    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
159538    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
159539    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
159540    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
159541    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
159542    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
159543    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
159544    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
159545    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
159546    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
159547    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
159548    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
159549    +   ELSE S_NumCatalogPurchases
159550    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
159551    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
159552    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
159553    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
159554    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
159555    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
159556    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
159557    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
159558    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
159559    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
159560    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
159561    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
159562    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
159563    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
159564    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
159565    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
159566    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
159567    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
159568    +END;
MPRINT(EM_DIAGRAM):   END;
159569    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
159570    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
159571    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
159572    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
159573    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
159574    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
159575    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
159576    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
159577    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
159578    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
159579    +   H11  =     1.40261108800308 * S_Income  +     -0.8062097507842 * S_Kidhome
159580    +          +    -0.12974862644982 * S_MntFishProducts
159581    +          +     0.08065642800368 * S_MntFruits  +    -0.12102130003972 *
159582    +        S_MntGoldProds  +     0.19226249622126 * S_MntMeatProducts
159583    +          +    -0.12290326901613 * S_MntSweetProducts
159584    +          +     0.07790241176978 * S_MntWines  +     0.36123042724896 *
159585    +        S_NumCatalogPurchases  +    -0.01034406765754 * S_NumDealsPurchases
159586    +          +     0.09738032540137 * S_NumStorePurchases
159587    +          +     0.44459515215205 * S_NumWebPurchases
159588    +          +      0.8471075994578 * S_NumWebVisitsMonth
159589    +          +    -1.10667985160899 * S_Recency  +    -0.88509832868515 *
159590    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 1.40261108800308 * S_Income + -0.8062097507842 * S_Kidhome +
-0.12974862644982 * S_MntFishProducts + 0.08065642800368 * S_MntFruits + -0.12102130003972 *
S_MntGoldProds + 0.19226249622126 * S_MntMeatProducts + -0.12290326901613 * S_MntSweetProducts
+ 0.07790241176978 * S_MntWines + 0.36123042724896 * S_NumCatalogPurchases + -0.01034406765754
* S_NumDealsPurchases + 0.09738032540137 * S_NumStorePurchases + 0.44459515215205 *
S_NumWebPurchases + 0.8471075994578 * S_NumWebVisitsMonth + -1.10667985160899 * S_Recency +
-0.88509832868515 * S_Teenhome ;
159591    +   H12  =     0.51266936686642 * S_Income  +     0.26909433357851 * S_Kidhome
159592    +          +     0.02406077596811 * S_MntFishProducts
159593    +          +    -0.57443793453522 * S_MntFruits  +     0.36824731232149 *
159594    +        S_MntGoldProds  +     0.40177289143061 * S_MntMeatProducts
159595    +          +     -0.1147507059349 * S_MntSweetProducts
159596    +          +    -0.66379351187459 * S_MntWines  +     1.33407347415468 *
159597    +        S_NumCatalogPurchases  +     1.00633891197299 * S_NumDealsPurchases
159598    +          +    -0.23920969262322 * S_NumStorePurchases
159599    +          +     -0.6008837862932 * S_NumWebPurchases
159600    +          +     0.26759743722885 * S_NumWebVisitsMonth
159601    +          +    -0.42755419464125 * S_Recency  +    -0.14471776361394 *
159602    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.51266936686642 * S_Income + 0.26909433357851 * S_Kidhome +
0.02406077596811 * S_MntFishProducts + -0.57443793453522 * S_MntFruits + 0.36824731232149 *
S_MntGoldProds + 0.40177289143061 * S_MntMeatProducts + -0.1147507059349 * S_MntSweetProducts
+ -0.66379351187459 * S_MntWines + 1.33407347415468 * S_NumCatalogPurchases + 1.00633891197299
* S_NumDealsPurchases + -0.23920969262322 * S_NumStorePurchases + -0.6008837862932 *
S_NumWebPurchases + 0.26759743722885 * S_NumWebVisitsMonth + -0.42755419464125 * S_Recency +
-0.14471776361394 * S_Teenhome ;
159603    +   H13  =    -0.19807308698832 * S_Income  +     0.25934675474849 * S_Kidhome
159604    +          +     0.04398331533724 * S_MntFishProducts
159605    +          +    -0.00090357598988 * S_MntFruits  +     0.05139545341773 *
159606    +        S_MntGoldProds  +    -0.74617114336019 * S_MntMeatProducts
159607    +          +     0.00552488718744 * S_MntSweetProducts
159608    +          +     0.47194407197012 * S_MntWines  +    -0.35149551848487 *
159609    +        S_NumCatalogPurchases  +    -0.30232522133093 * S_NumDealsPurchases
159610    +          +     0.60058189155105 * S_NumStorePurchases
159611    +          +     0.51423374855856 * S_NumWebPurchases
159612    +          +     -0.9075304423321 * S_NumWebVisitsMonth
159613    +          +     0.83597739226791 * S_Recency  +     0.15783202762709 *
159614    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.19807308698832 * S_Income + 0.25934675474849 * S_Kidhome +
0.04398331533724 * S_MntFishProducts + -0.00090357598988 * S_MntFruits + 0.05139545341773 *
S_MntGoldProds + -0.74617114336019 * S_MntMeatProducts + 0.00552488718744 * S_MntSweetProducts
+ 0.47194407197012 * S_MntWines + -0.35149551848487 * S_NumCatalogPurchases +
-0.30232522133093 * S_NumDealsPurchases + 0.60058189155105 * S_NumStorePurchases +
0.51423374855856 * S_NumWebPurchases + -0.9075304423321 * S_NumWebVisitsMonth +
0.83597739226791 * S_Recency + 0.15783202762709 * S_Teenhome ;
159615    +   H11  = H11  +    -0.26274045665457 * AcceptedCmp10
159616    +          +    -0.86105702939371 * AcceptedCmp20  +    -0.50476270558977 *
159617    +        AcceptedCmp30  +    -0.84284126473343 * AcceptedCmp40
159618    +          +     0.19764907691314 * AcceptedCmp50  +    -0.29305577412263 *
159619    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.26274045665457 * AcceptedCmp10 + -0.86105702939371 *
AcceptedCmp20 + -0.50476270558977 * AcceptedCmp30 + -0.84284126473343 * AcceptedCmp40 +
0.19764907691314 * AcceptedCmp50 + -0.29305577412263 * Complain0 ;
159620    +   H12  = H12  +    -0.27394139847883 * AcceptedCmp10
159621    +          +    -0.14688750266104 * AcceptedCmp20  +    -0.27982299242327 *
159622    +        AcceptedCmp30  +    -0.10465140408787 * AcceptedCmp40
159623    +          +    -0.81681330244218 * AcceptedCmp50  +    -0.28152730217644 *
159624    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.27394139847883 * AcceptedCmp10 + -0.14688750266104 *
AcceptedCmp20 + -0.27982299242327 * AcceptedCmp30 + -0.10465140408787 * AcceptedCmp40 +
-0.81681330244218 * AcceptedCmp50 + -0.28152730217644 * Complain0 ;
159625    +   H13  = H13  +     0.42310780831005 * AcceptedCmp10
159626    +          +     0.41337614261155 * AcceptedCmp20  +     0.41436520641821 *
159627    +        AcceptedCmp30  +     0.08914989208239 * AcceptedCmp40
159628    +          +     0.54013759697695 * AcceptedCmp50  +    -0.19478210268955 *
159629    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.42310780831005 * AcceptedCmp10 + 0.41337614261155 *
AcceptedCmp20 + 0.41436520641821 * AcceptedCmp30 + 0.08914989208239 * AcceptedCmp40 +
0.54013759697695 * AcceptedCmp50 + -0.19478210268955 * Complain0 ;
159630    +   H11  = H11  +     0.40331200702699 * Education2n_Cycle
159631    +          +     0.17202421641945 * EducationBasic  +    -0.29654161092174 *
159632    +        EducationGraduation  +     -0.4835104183635 * EducationMaster
159633    +          +     0.52129580188513 * Marital_StatusDivorced
159634    +          +     -1.5224490339553 * Marital_StatusMarried
159635    +          +     1.05062906057771 * Marital_StatusSingle
159636    +          +    -1.16420887937635 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.40331200702699 * Education2n_Cycle + 0.17202421641945 *
EducationBasic + -0.29654161092174 * EducationGraduation + -0.4835104183635 * EducationMaster
+ 0.52129580188513 * Marital_StatusDivorced + -1.5224490339553 * Marital_StatusMarried +
1.05062906057771 * Marital_StatusSingle + -1.16420887937635 * Marital_StatusTogether ;
159637    +   H12  = H12  +     -0.3488928858263 * Education2n_Cycle
159638    +          +     0.38279680594423 * EducationBasic  +     0.20376044836519 *
159639    +        EducationGraduation  +     0.20697694670185 * EducationMaster
159640    +          +    -0.14428158063317 * Marital_StatusDivorced
159641    +          +     0.22396926143356 * Marital_StatusMarried
159642    +          +    -0.12980854818876 * Marital_StatusSingle
159643    +          +     0.32607015627906 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.3488928858263 * Education2n_Cycle + 0.38279680594423 *
EducationBasic + 0.20376044836519 * EducationGraduation + 0.20697694670185 * EducationMaster +
-0.14428158063317 * Marital_StatusDivorced + 0.22396926143356 * Marital_StatusMarried +
-0.12980854818876 * Marital_StatusSingle + 0.32607015627906 * Marital_StatusTogether ;
159644    +   H13  = H13  +    -0.18351418824199 * Education2n_Cycle
159645    +          +     0.53417952447263 * EducationBasic  +    -0.14333929289628 *
159646    +        EducationGraduation  +     0.04513004774082 * EducationMaster
159647    +          +    -0.25615797303064 * Marital_StatusDivorced
159648    +          +     0.18825506199046 * Marital_StatusMarried
159649    +          +    -0.24607556819871 * Marital_StatusSingle
159650    +          +     0.29531673844201 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.18351418824199 * Education2n_Cycle + 0.53417952447263 *
EducationBasic + -0.14333929289628 * EducationGraduation + 0.04513004774082 * EducationMaster
+ -0.25615797303064 * Marital_StatusDivorced + 0.18825506199046 * Marital_StatusMarried +
-0.24607556819871 * Marital_StatusSingle + 0.29531673844201 * Marital_StatusTogether ;
159651    +   H11  =    -1.29289362679377 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.29289362679377 + H11 ;
159652    +   H12  =     0.88724419151235 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.88724419151235 + H12 ;
159653    +   H13  =    -0.51194544699467 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.51194544699467 + H13 ;
159654    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
159655    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
159656    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
159657    +END;
MPRINT(EM_DIAGRAM):   END;
159658    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
159659    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
159660    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
159661    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
159662    +END;
MPRINT(EM_DIAGRAM):   END;
159663    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
159664    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
159665    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
159666    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
159667    +   P_DepVar1  =     4.44251020865882 * H11  +     2.67139161773156 * H12
159668    +          +    -4.73549395111184 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.44251020865882 * H11 + 2.67139161773156 * H12 +
-4.73549395111184 * H13 ;
The SAS System
 
159669    +   P_DepVar1  =     0.45492690116644 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.45492690116644 + P_DepVar1 ;
159670    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
159671    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
159672    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
159673    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
159674    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
159675    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
159676    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
159677    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
159678    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
159679    +END;
MPRINT(EM_DIAGRAM):   END;
159680    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
159681    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
159682    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
159683    +END;
MPRINT(EM_DIAGRAM):   END;
159684    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
159685    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
159686    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
159687    +END;
MPRINT(EM_DIAGRAM):   END;
159688    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
159689    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
159690    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
159691    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
159692    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
159693    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
159694    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
159695    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
159696    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
159697    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
159698    +END;
MPRINT(EM_DIAGRAM):   END;
159699    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
159700    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
159701    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
159702    +drop
159703    +H11
159704    +H12
159705    +H13
159706    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
159707    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
159708     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
159709     quit;
159710     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
159711     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
159712     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
159713     retain ID 2 Node "Neural32";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural32";
159714     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
159715     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1602 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1602 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
159716     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
159717     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
159718     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1602 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1602 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
159719     proc sort data=EMWS8.Neural32_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural32_variableset out=_temp2(keep=NAME CREATOR);
159720     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
159721     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.NEURAL32_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
159722     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
159723     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
159724     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
159725     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
159726     proc contents data=EMWS8.Neural32_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural32_train out=_meta(keep=NAME) noprint;
159727     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
159728     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
159729     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
159730     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
159731     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
159732     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
159733     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
159734     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
159735     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
159736     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
159736   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 832 rows and 5 columns.
 
159737     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
159738     proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
159739     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 832 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 832 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
159740     filename _pref
159740   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
159741     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
159742     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
159743    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
159744    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
159745    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
159746    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
159747    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
159748    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
159749     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
159750     quit;
159751     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
159752     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
159753     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
159754     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
159755     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
159756     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
159757     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
159758     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
159759     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
159760     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
159761     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
159762     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
159763     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
159764     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
159765     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
159766     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
159767     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
159768     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
159769     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
159770     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
159771     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
159772     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
159773     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
159774     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
159775     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
159776     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
159777     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
159777   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
159778     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
159779     proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
159780     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 836 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
159781     filename _pref
159781   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
159782     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
159783     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
159784    +
159785    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
159786    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
159786   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
159787    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
159788    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
159789    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
159790    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
159791    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
159792     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
159793     quit;
159794     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
159795     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
159796     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
159797     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
159798     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
159799     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
159800     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
159801     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
159802     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
159803     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
159804     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
159805     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
159806     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
159807     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
159808     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
159809     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
159810     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
159811     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
159812     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
159813     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
159814     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
159815     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
159816     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
159817     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
159818     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
159819     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
159820     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
159820   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
159821     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
159822     proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
159823     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 875 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
159824     filename _pref
159824   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
159825     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
159826     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
159827    +
159828    +
159829    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
159830    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
159831    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
159832    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
159833    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
159834    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
159835    +
159836    +
159837    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
159838    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
159839    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
159840    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
159841    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
159842    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
159843    +
159844    +
159845    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
159846    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
159847    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
159848    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
159849    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
159850    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
159851    +
159852    +
159853    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
159854    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
159855    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
159856    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
159857    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
159858    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
159859    +
159860    +
159861    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
159862    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
159863    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
159864    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
159865    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
159866    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
159867    +
159868    +
159869    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
159870    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
159871    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
159872    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
159873    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
159874    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
159875    +
159876    +
159877    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
159878    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
159879    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
159880    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
159881    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
159882    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
159883    +
159884    +
159885    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
159886    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
159887    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
159888    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
159889    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
159890    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
159891    +if
159892    +_FILTERNORM1 not in ( '.')
159893    + and
159894    +_FILTERNORM2 not in ( '.')
159895    + and
159896    +_FILTERNORM3 not in ( '.')
159897    + and
159898    +_FILTERNORM4 not in ( '.')
159899    + and
159900    +_FILTERNORM5 not in ( '.')
159901    + and
159902    +_FILTERNORM6 not in ( '.')
159903    + and
159904    +_FILTERNORM7 not in ( ' ')
159905    + and
159906    +_FILTERNORM8 not in ( ' ')
159907    +and
159908    +( Dt_Customer ne .)
159909    +and ( Income ne . and (Income<=107000))
159910    +and ( Kidhome ne .)
159911    +and ( MntFishProducts ne .)
159912    +and ( MntFruits ne .)
159913    +and ( MntGoldProds ne .)
159914    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
159915    +and ( MntSweetProducts ne .)
159916    +and ( MntWines ne .)
159917    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
159918    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
159919    +and ( NumStorePurchases ne .)
159920    +and ( NumWebPurchases ne .)
159921    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
159922    +and ( Recency ne .)
159923    +and ( Teenhome ne .)
159924    +and ( Year_Birth ne .)
159925    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
159926    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
159927    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
159928    +end;
MPRINT(EM_DIAGRAM):   end;
159929    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
159930    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
159931     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
159932     quit;
159933     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
159934     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
159935     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
159936     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
159937     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
159938     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
159939     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
159940     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
159941     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
159942     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
159943     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
159944     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
159945     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
159946     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
159947     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
159948     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
159949     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
159950     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
159951     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
159952     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
159953     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
159954     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
159955     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
159956     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
159957     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
159958     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
159959     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
159959   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
159960     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
159961     proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl22_FCMP data=_tempx;
159962     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL22_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL22_FCMP has 941 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
159963     %macro varDept(fcmpdata=,id=);
159964     %global nobs&id scoreFlag&id;
159965     %let scoreFlag&id = 0;
159966     %if &id=1 or ^&fcmpStart %then %do;
159967     proc sort data=&fcmpdata out=_temp&id nodupkey;
159968     by NAME;
159969     where id=&id and LHS in( %let j=1;
159970     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
159971     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
159972     "&var" %let j = %eval(&j+1);
159973     %end;
159974     );
159975     run;
159976     %let dsid = %sysfunc(open(_temp&id));
159977     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
159978     %let dsid = %sysfunc(close(&dsid));
159979     %if &&nobs&id %then %do;
159980     %let scoreFlag&id = 1;
159981     %let fcmpStart = 1;
159982     %end;
159983     %else %let fcmpStart = 0;
159984     %end;
159985     %else %do;
159986     proc sort data=&fcmpdata out=_tempid;
159987     where id=&id;
159988     by LHS;
159989     run;
159990     %let dsid = %sysfunc(open(_tempid));
159991     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
159992     %let dsid = %sysfunc(close(&dsid));
159993     %if ^&&nobs&id %then %do;
159994     proc datasets lib=work nolist;
159995     delete _tempid;
159996     run;
159997     quit;
159998     %end;
159999     %else %do;
160000     data _tempAll;
160001     set %let j=%eval(&id-1);
160002     %do x=1 %to &j;
160003     %if &&nobs&x %then %do;
160004     _temp&x %end;
160005     %end;
160006     ;
160007     run;
160008     proc sql;
160009     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
160009   ! work._tempid p2 where p.name=p2.lhs;
160010     quit;
160011     data _temp&id;
160012     set _temp&id;
160013     where LHS ne '' and NAME ne '' and Node ne '';
160014     run;
160015     proc datasets lib=work nolist;
160016     delete _tempAll;
160017     run;
160018     %let dsid = %sysfunc(open(_temp&id));
160019     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
160020     %let dsid = %sysfunc(close(&dsid));
160021     %if ^&&nobs&id %then %do;
160022     proc datasets lib=work nolist;
160023     delete _temp&id;
160024     run;
160025     quit;
160026     %end;
160027     %else %do;
160028     %let scoreFlag&id = 1;
160029     data _temp&id;
160030     set _temp&id;
160031     where LHS ne NAME and node ne '';
160032     run;
160033     %let dsid = %sysfunc(open(_temp&id));
160034     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
160035     %let dsid = %sysfunc(close(&dsid));
160036     %if ^&&nobs&id %then %do;
160037     proc datasets lib=work nolist;
160038     delete _temp&id;
160039     run;
160040     quit;
160041     %end;
160042     %else %do;
160043     proc sort data=_temp&id nodupkey;
160044     by LHS NAME;
160045     run;
160046     %end;
160047     %end;
160048     %end;
160049     %end;
160050     %mend varDept;
160051     %macro optCode(outdata=fcmpdata);
160052     %global fcmpStart;
160053     %let fcmpStart = 0;
160054     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
160055     %let NumNodes=9;
160056     %do k=1 %to &NumNodes;
160057     %vardept(fcmpdata=&outdata, id=&k);
160058     %end;
160059     %mend optCode;
160060     %optcode(outData=EMWS8.Ensmbl22_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 98 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 73 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 25 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp6;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP6 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl22_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
160061     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
160062     * Ensmbl22: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Computing metadata for TRAIN data;
160063     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS8.ENSMBL22_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl22\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl22_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl22_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl22_TRAIN out=WORK.M3J3SQ3T noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3J3SQ3T;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M3J3SQ3T(keep=name type length label format formatl
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl,
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd,
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat =
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3J3SQ3T;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M3J3SQ3T;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2O8V58F NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2O8V58F;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M2O8V58F;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M249D0HQ(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M2O8V58F;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2O8V58F;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M2O8V58F;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN"
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO"
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON"
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD"
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" ))
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype =
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" ))
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT"
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB"
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType =
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA',
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W',
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL',
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT',
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2O8V58F;
MPRINT(EMADVISECOLUMNS):   set WORK.M2O8V58F;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL=
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY=
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT=
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL=
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural34_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural34_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl22_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl22";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl22";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl22";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl22";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl22";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl22";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl22";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl22";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl22";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl22";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl22: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1"
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl22";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
160383     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
160384     set EMWS8.Ensmbl22_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl22_EMINFO;
160385     where DATA='Ensmbl22' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl22' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE',
'MODEL');
160386     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL22_EMINFO.
      WHERE (DATA='Ensmbl22') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
160387     data EMWS8.Ensmbl22_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl22_EMINFO;
160388     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
160389     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
160390     cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS8.ENSMBL22_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
160394     run;
160395     data EMWS8.Ensmbl22_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl22_EMINFO;
160396     set EMWS8.Ensmbl22_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl22_EMINFO WORK.MODELTEMP_INFO;
160397     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL22_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL22_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
160398     proc sort data = EMWS8.Ensmbl22_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl22_EMINFO NOTHREADS;
160399     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
160400     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL22_EMINFO.
NOTE: The data set EMWS8.ENSMBL22_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
160401     proc sort data = EMWS8.Neural34_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural34_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
160402     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
160403     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.NEURAL34_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
160404     proc sort data = EMWS8.Ensmbl22_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl22_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
160405     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
160406     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL22_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
160407     data EMWS8.Ensmbl22_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl22_EMINFO;
160408     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
160409     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
160410     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL22_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
160411     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
160412     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
160413     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
160414     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
NOTE: View EMWS8.ENSMBL22_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
NOTE: View EMWS8.ENSMBL22_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13.33 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                28. April 2016
Time:                13.33 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0Y2LMDQ
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl22\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0Y2LMDQ new;
MPRINT(EM_DIAGRAM):   run;
160438     data EMWS8.Ensmbl22_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl22_EMOUTFIT;
160439     set EMWS8.Ensmbl22_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl22_EMOUTFIT;
160440     length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
160441     label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel,
160441   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
160442     if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
160443     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL22_EMOUTFIT.
NOTE: The data set EMWS8.ENSMBL22_EMOUTFIT has 1 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
160444     proc sort data=EMWS8.Ensmbl22_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl22_EMREPORTFIT nothreads;
160445     by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
160446     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL22_EMREPORTFIT.
NOTE: The data set EMWS8.ENSMBL22_EMREPORTFIT has 9 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
160447     %let _EMwarndup = 0;
160448     %let _EMtargetdup =;
160449     %let _EMASEtargetdup =;
160450     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
160451     set EMWS8.Ensmbl22_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl22_EMOUTFIT;
160452     if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
160453     call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
160454     call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
160455     call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
160456     end;
MPRINT(EM_DIAGRAM):   end;
160457     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL22_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
160458     proc sort data=EMWS8.Neural32_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Neural32_CMeta_TRAIN out=WORK.SUBSETINMETA;
160459     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
160460     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set EMWS8.NEURAL32_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 44 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
160461     proc sort data=EMWS8.Ensmbl22_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Ensmbl22_VariableSet
out=WORK.SUBSETVARSET(keep=NAME REPORT);
160462     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
160463     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.ENSMBL22_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
160464     data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
160465     merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
160466     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
160467     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 34 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 44 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
160468     data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
160469     set EMWS8.Ensmbl22_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl22_CMeta_TRAIN;
160470     where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
160470   ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
160471     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL22_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
160472     data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
160473     set EMWS8.Ensmbl22_TRAIN(keep=
160474     F_DepVar
160475     I_DepVar
160476     P_DepVar0
160477     P_DepVar1
160478     R_DepVar0
160479     R_DepVar1
160480     U_DepVar
160481     _WARN_
160482     DepVar
160483     );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl22_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
160484     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.META2_TRAIN.
NOTE: View EMWS8.ENSMBL22_TRAIN.VIEW used (Total process time):
      real time           0.16 seconds
      cpu time            0.15 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.NEURAL34_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.ENSMBL22_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2374 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl22_2N7JAH9 nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl22_2N7JAH9;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl22_2N7JAH9(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl22_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl22_2N7JAH9;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl22_2N7JAH9;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl22_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl22_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural32_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.151221567 _NEVENTS 359
_NNONEVENTS 2015 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2374));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0000154852 OVLMAX 0.9999107292 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2374 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2374)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl22_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl22_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
164750     data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
164751     set EMWS8.Ensmbl22_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl22_CMeta_TRAIN;
164752     where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
164752   ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
164753     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL22_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
164754     data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
164755     set EMWS8.Ensmbl22_VALIDATE(keep=
164756     F_DepVar
164757     I_DepVar
164758     P_DepVar0
164759     P_DepVar1
164760     R_DepVar0
164761     R_DepVar1
164762     U_DepVar
164763     _WARN_
164764     DepVar
164765     );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl22_VALIDATE(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
164766     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.META2_VALIDATE.
NOTE: View EMWS8.ENSMBL22_VALIDATE.VIEW used (Total process time):
      real time           0.13 seconds
      cpu time            0.15 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.NEURAL34_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.ENSMBL22_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 1018 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.14 seconds
      cpu time            0.15 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl22_00U7XZY nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl22_00U7XZY;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl22_00U7XZY(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "VALIDATE" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl22_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl22_EMCLASSIFICATION WORK.Ensmbl22_00U7XZY;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl22_00U7XZY;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl22_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl22_EMEVENTREPORT WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl22_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural32_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.152259332 _NEVENTS 155
_NNONEVENTS 863 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 1018));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "VALIDATE" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0000156142 OVLMAX 0.9998686084 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 1018 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 1018)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl22_EMRANK;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl22_EMRANK WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl22_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   length P_LABEL $9;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl22_EMSCOREDIST WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
169041     %let _cn = %sysfunc(getoption(CENTER));
169042     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
169043     proc print data=EMWS8.Ensmbl22_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl22_EMREPORTFIT noobs label;
169044     var STAT LABEL TRAIN
169045     VALIDATE
169046     ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN VALIDATE ;
169047     by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
169048     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
169049     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
169050     run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL22_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 41.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
169051     title10;
MPRINT(EM_DIAGRAM):   title10;
169052     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
169053     proc sort data=EMWS8.Ensmbl22_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl22_EMCLASSIFICATION nothreads;
169054     by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
169055     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL22_EMCLASSIFICATION.
NOTE: The data set EMWS8.ENSMBL22_EMCLASSIFICATION has 8 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
169056     %let _cn = %sysfunc(getoption(CENTER));
169057     options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
169058     proc print data=EMWS8.Ensmbl22_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl22_EMCLASSIFICATION noobs label;
169059     var from into pct_row pct_col count percent
169060     ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
169061     by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
169062     label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
169063     label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
169064     label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
169065     label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
169066     label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
169067     label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
169068     where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
169069     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
169070     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
169071     run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL22_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 42.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
169072     title9;
MPRINT(EM_DIAGRAM):   title9;
169073     title10;
MPRINT(EM_DIAGRAM):   title10;
169074     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
169075     %let _cn = %sysfunc(getoption(CENTER));
169076     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
169077     data EMWS8.Ensmbl22_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl22_EMEVENTREPORT;
169078     length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
169078   ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT
FALSEEVENT TRUEEVENT 8;
169079     label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
169079   !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
169079   ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
169079   ! FALSEEVENT
169080     = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
169080   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
169080   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
169081        "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True
Positive" TRUENEVENT = "True Negative";
169082     FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
169083     FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
169084     TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
169085     TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
169086     set EMWS8.Ensmbl22_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl22_EMEVENTREPORT;
169087     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL22_EMEVENTREPORT.
NOTE: The data set EMWS8.ENSMBL22_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
169088     proc print data=EMWS8.Ensmbl22_EMEVENTREPORT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl22_EMEVENTREPORT noobs label;
169089     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
169090     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
169091     by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
169092     run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL22_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 43.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
169093     title10;
MPRINT(EM_DIAGRAM):   title10;
169094     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
169095     proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
169096     modify Ensmbl22_EMRANK;
MPRINT(EM_DIAGRAM):   modify Ensmbl22_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
169097     label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
169098     label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
169098   ! ;
MPRINT(EM_DIAGRAM):   run;
169099     run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL22_EMRANK.DATA.
169100     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.33 seconds
      cpu time            0.20 seconds
 
 
169101     %let _cn = %sysfunc(getoption(CENTER));
169102     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
169103     proc print data=EMWS8.Ensmbl22_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl22_EMRANK label noobs;
169104     var
169105     decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
169106     by
169107     notsorted DATAROLE
169108     notsorted TARGET
169109     notsorted TARGETLABEL
169110     ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
169111     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
169112     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
169113     run;
 
NOTE: There were 40 observations read from the data set EMWS8.ENSMBL22_EMRANK.
NOTE: The PROCEDURE PRINT printed page 44.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
169114     title10;
MPRINT(EM_DIAGRAM):   title10;
169115     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
169116     proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
169117     modify Ensmbl22_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify Ensmbl22_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
169118     label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
169118   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
169119     label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
169119   ! ;
MPRINT(EM_DIAGRAM):   run;
169120     run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL22_EMSCOREDIST.DATA.
169121     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
 
 
MPRINT(EM_DIAGRAM):    options nocenter;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl22_EMSCOREDIST label noobs;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
MPRINT(EM_DIAGRAM):   title9 ' ';
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   options NOCENTER;
MPRINT(EM_DIAGRAM):   proc printto;
MPRINT(EM_DIAGRAM):   run;
