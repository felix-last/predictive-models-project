MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "12.36 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                19. April 2016
Time:                12.36 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O368HG_D 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl8\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O368HG_D new;
MPRINT(EM_DIAGRAM):   run;
1589787    filename emflow
1589787  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl8\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl8\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl8: Scoring NEURAL26_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1589788    *------------------------------------------------------------*;
1589789    * Ensmbl8: Scoring NEURAL26_TRAIN data;
1589790    *------------------------------------------------------------*;
1589791    data EMWS8.Ensmbl8_TRAIN
1589792    / view=EMWS8.Ensmbl8_TRAIN
1589793    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl8_TRAIN / view=EMWS8.Ensmbl8_TRAIN ;
1589794    set EMWS8.Neural26_TRAIN
1589795    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural26_TRAIN ;
1589796    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl8\EMFLOWSCORE.sas.
1589797   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1589798   +* Ensmbl8: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl8: Combine model for DepVar;
1589799   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1589800   +* Ensmbl8: Scoring Code of model 1 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl8: Scoring Code of model 1 of 3;
1589801   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1589802   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1589803   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1589804   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1589805   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
1589806   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1589807   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1589808   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
1589809   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1589810   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
1589811   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1589812   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1589813   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
1589814   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1589815   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
1589816   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1589817   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1589818   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
1589819   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1589820   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
1589821   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1589822   +
1589823   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1589824   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1589824  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1589825   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1589826   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1589827   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1589828   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1589829   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
1589830   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1589831   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
1589832   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1589833   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
1589834   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1589835   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1589836   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1589837   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1589838   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1589839   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1589840   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
1589841   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1589842   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
1589843   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1589844   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
1589845   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1589846   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1589847   +* TOOL: Variable selection Class;
MPRINT(EM_DIAGRAM):   * TOOL: Variable selection Class;
1589848   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1589849   +* NODE: Varsel;
MPRINT(EM_DIAGRAM):   * NODE: Varsel;
1589850   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1589851   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1589852   +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
1589853   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1589854   +
1589855   +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
1589856   +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1589857   +
1589858   +
1589859   +/*----G_Marital_Status begin----*/
1589860   +length _NORM8 $ 8;
MPRINT(EM_DIAGRAM):   length _NORM8 $ 8;
1589861   +_NORM8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _NORM8 = put( Marital_Status , $8. );
1589862   +%DMNORMIP( _NORM8 )
MPRINT(DMNORMIP):   call dmnorm(_NORM8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1589863   +drop _NORM8;
MPRINT(EM_DIAGRAM):   drop _NORM8;
1589864   +select(_NORM8);
MPRINT(EM_DIAGRAM):   select(_NORM8);
1589865   +  when("DIVORCED" ) G_Marital_Status = 1;
MPRINT(EM_DIAGRAM):   when("DIVORCED" ) G_Marital_Status = 1;
1589866   +  when("MARRIED " ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("MARRIED " ) G_Marital_Status = 2;
1589867   +  when("SINGLE  " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("SINGLE  " ) G_Marital_Status = 0;
1589868   +  when("TOGETHER" ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("TOGETHER" ) G_Marital_Status = 2;
1589869   +  when("WIDOW   " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("WIDOW   " ) G_Marital_Status = 0;
1589870   +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
1589871   +end;
MPRINT(EM_DIAGRAM):   end;
1589872   +label G_Marital_Status="Grouped Levels for Marital_Status";
MPRINT(EM_DIAGRAM):   label G_Marital_Status= "Grouped Levels for Marital_Status";
1589873   +/*----G_Marital_Status end----*/
1589874   +
1589875   +
1589876   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
1589877   +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
1589878   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
1589879   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1589880   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1589881   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1589882   +* NODE: Neural26;
MPRINT(EM_DIAGRAM):   * NODE: Neural26;
1589883   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1589884   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1589885   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1589886   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1589887   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1589888   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1589889   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1589890   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1589891   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1589892   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1589893   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1589894   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1589895   +LENGTH _WARN_ $4
1589896   +      F_DepVar  $ 12
1589897   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1589898   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1589899   +
1589900   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1589901   +
1589902   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1589903   +
1589904   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1589905   +
1589906   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1589907   +
1589908   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1589909   +
1589910   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1589911   +
1589912   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1589913   +
1589914   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1589915   +
1589916   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1589917   +
1589918   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1589919   +
1589920   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1589921   +
1589922   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1589923   +
1589924   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1589925   +
1589926   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1589927   +
1589928   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1589929   +
1589930   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1589931   +
1589932   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1589933   +
1589934   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1589935   +
1589936   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1589937   +
1589938   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1589939   +
1589940   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1589941   +
1589942   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1589943   +
1589944   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1589945   +
1589946   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1589947   +
1589948   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1589949   +
1589950   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1589951   +
1589952   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1589953   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1589954   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1589955   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1589956   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1589957   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1589958   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1589959   +end;
MPRINT(EM_DIAGRAM):   end;
1589960   +else do;
MPRINT(EM_DIAGRAM):   else do;
1589961   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1589962   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1589963   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1589964   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1589965   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1589966   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1589967   +   end;
MPRINT(EM_DIAGRAM):   end;
1589968   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1589969   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1589970   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1589971   +   end;
MPRINT(EM_DIAGRAM):   end;
1589972   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1589973   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1589974   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1589975   +   end;
MPRINT(EM_DIAGRAM):   end;
1589976   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1589977   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1589978   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1589979   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1589980   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1589981   +   end;
MPRINT(EM_DIAGRAM):   end;
1589982   +end;
MPRINT(EM_DIAGRAM):   end;
1589983   +
1589984   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1589985   +*** Checking missing input Interval
1589986   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1589987   +
1589988   +IF NMISS(
1589989   +   AcceptedCmpTotal ,
1589990   +   Frq ,
1589991   +   Income ,
1589992   +   Mnt ,
1589993   +   MntFruits ,
1589994   +   MntGoldProds ,
1589995   +   MntMeatProducts ,
1589996   +   MntSweetProducts ,
1589997   +   NumCatalogPurchases ,
1589998   +   NumWebPurchases ,
1589999   +   RFMstat ,
1590000   +   RMntFrq ,
1590001   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntFruits , 
MntGoldProds , MntMeatProducts , MntSweetProducts , NumCatalogPurchases , NumWebPurchases , 
RFMstat , RMntFrq , Recency ) THEN DO;
1590002   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1590003   +
1590004   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1590005   +END;
MPRINT(EM_DIAGRAM):   END;
1590006   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1590007   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1590008   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1590009   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1590010   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1590011   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1590012   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1590013   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1590014   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1590015   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1590016   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1590017   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1590018   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1590019   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1590020   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1590021   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1590022   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1590023   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1590024   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1590025   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1590026   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1590027   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1590028   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1590029   +END;
MPRINT(EM_DIAGRAM):   END;
1590030   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1590031   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1590032   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1590033   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1590034   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1590035   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1590036   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1590037   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1590038   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1590039   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1590040   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1590041   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1590042   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1590043   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1590044   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1590045   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1590046   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1590047   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1590048   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1590049   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1590050   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1590051   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1590052   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1590053   +   ELSE S_NumCatalogPurchases
1590054   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1590055   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1590056   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1590057   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1590058   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1590059   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1590060   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1590061   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1590062   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1590063   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1590064   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1590065   +END;
MPRINT(EM_DIAGRAM):   END;
1590066   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1590067   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1590068   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1590069   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1590070   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1590071   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1590072   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1590073   +   H11  =    -1.12938466101576 * S_AcceptedCmpTotal  +     0.61534183742192 *
1590074   +        S_Frq  +     0.21605471415782 * S_Income  +     1.00718645972599 *
1590075   +        S_Mnt  +    -0.04712823237951 * S_MntFruits  +    -0.07929121432621 *
1590076   +        S_MntGoldProds  +    -0.41982161110641 * S_MntMeatProducts
1590077   +          +     0.30688676656325 * S_MntSweetProducts
1590078   +          +    -0.31936466951531 * S_NumCatalogPurchases
1590079   +          +    -0.40503981142414 * S_NumWebPurchases
1590080   +          +    -0.00368867286865 * S_RFMstat  +     0.37807775340916 *
1590081   +        S_RMntFrq  +     0.94794577395963 * S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = -1.12938466101576 * S_AcceptedCmpTotal + 0.61534183742192 * S_Frq 
+ 0.21605471415782 * S_Income + 1.00718645972599 * S_Mnt + -0.04712823237951 * S_MntFruits + 
-0.07929121432621 * S_MntGoldProds + -0.41982161110641 * S_MntMeatProducts + 0.30688676656325 
* S_MntSweetProducts + -0.31936466951531 * S_NumCatalogPurchases + -0.40503981142414 * 
S_NumWebPurchases + -0.00368867286865 * S_RFMstat + 0.37807775340916 * S_RMntFrq + 
0.94794577395963 * S_Recency ;
1590082   +   H12  =    -0.12113443728514 * S_AcceptedCmpTotal  +     0.93537745252849 *
1590083   +        S_Frq  +    -0.09891671631341 * S_Income  +     1.99038480756089 *
1590084   +        S_Mnt  +     0.17709370706747 * S_MntFruits  +    -0.26193027989873 *
1590085   +        S_MntGoldProds  +    -1.32538448369411 * S_MntMeatProducts
1590086   +          +    -0.57511617685848 * S_MntSweetProducts
1590087   +          +    -0.80584166120088 * S_NumCatalogPurchases
1590088   +          +    -0.46226595005401 * S_NumWebPurchases
1590089   +          +     0.10198567130706 * S_RFMstat  +     0.21276308472657 *
1590090   +        S_RMntFrq  +     0.20830913301712 * S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = -0.12113443728514 * S_AcceptedCmpTotal + 0.93537745252849 * S_Frq 
+ -0.09891671631341 * S_Income + 1.99038480756089 * S_Mnt + 0.17709370706747 * S_MntFruits + 
-0.26193027989873 * S_MntGoldProds + -1.32538448369411 * S_MntMeatProducts + -0.57511617685848 
* S_MntSweetProducts + -0.80584166120088 * S_NumCatalogPurchases + -0.46226595005401 * 
S_NumWebPurchases + 0.10198567130706 * S_RFMstat + 0.21276308472657 * S_RMntFrq + 
0.20830913301712 * S_Recency ;
1590091   +   H13  =    -0.26642267115951 * S_AcceptedCmpTotal  +    -0.93821950754639 *
1590092   +        S_Frq  +     0.01733680104129 * S_Income  +    -0.34674569831914 *
1590093   +        S_Mnt  +    -0.13141804104196 * S_MntFruits  +    -0.08208570095055 *
1590094   +        S_MntGoldProds  +     0.33076491610846 * S_MntMeatProducts
1590095   +          +     0.13151485846279 * S_MntSweetProducts
1590096   +          +    -0.12544664418198 * S_NumCatalogPurchases
1590097   +          +     0.31794108898576 * S_NumWebPurchases
1590098   +          +    -0.09733881043326 * S_RFMstat  +    -0.55416616488207 *
1590099   +        S_RMntFrq  +      0.6850072112056 * S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = -0.26642267115951 * S_AcceptedCmpTotal + -0.93821950754639 * S_Frq 
+ 0.01733680104129 * S_Income + -0.34674569831914 * S_Mnt + -0.13141804104196 * S_MntFruits + 
-0.08208570095055 * S_MntGoldProds + 0.33076491610846 * S_MntMeatProducts + 0.13151485846279 * 
S_MntSweetProducts + -0.12544664418198 * S_NumCatalogPurchases + 0.31794108898576 * 
S_NumWebPurchases + -0.09733881043326 * S_RFMstat + -0.55416616488207 * S_RMntFrq + 
0.6850072112056 * S_Recency ;
1590100   +   H14  =    -0.26331970415451 * S_AcceptedCmpTotal  +     0.91045762420144 *
1590101   +        S_Frq  +     0.47866760167028 * S_Income  +     1.96822454637646 *
1590102   +        S_Mnt  +     0.37467695392633 * S_MntFruits  +     0.35024846355131 *
1590103   +        S_MntGoldProds  +    -1.12912963812687 * S_MntMeatProducts
1590104   +          +     0.55003060492603 * S_MntSweetProducts
1590105   +          +    -0.81895769875154 * S_NumCatalogPurchases
1590106   +          +    -0.73905791041531 * S_NumWebPurchases
1590107   +          +    -0.05892830686928 * S_RFMstat  +    -2.20288127458579 *
1590108   +        S_RMntFrq  +     0.31097790354738 * S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = -0.26331970415451 * S_AcceptedCmpTotal + 0.91045762420144 * S_Frq 
+ 0.47866760167028 * S_Income + 1.96822454637646 * S_Mnt + 0.37467695392633 * S_MntFruits + 
0.35024846355131 * S_MntGoldProds + -1.12912963812687 * S_MntMeatProducts + 0.55003060492603 * 
S_MntSweetProducts + -0.81895769875154 * S_NumCatalogPurchases + -0.73905791041531 * 
S_NumWebPurchases + -0.05892830686928 * S_RFMstat + -2.20288127458579 * S_RMntFrq + 
0.31097790354738 * S_Recency ;
1590109   +   H11  = H11  +    -0.15769833524163 * G_Marital_Status0
1590110   +          +    -0.63616832118402 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.15769833524163 * G_Marital_Status0 + -0.63616832118402 * 
G_Marital_Status1 ;
1590111   +   H12  = H12  +    -0.02031957824974 * G_Marital_Status0
1590112   +          +    -0.05261414754191 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.02031957824974 * G_Marital_Status0 + -0.05261414754191 * 
G_Marital_Status1 ;
1590113   +   H13  = H13  +    -0.66558713728702 * G_Marital_Status0
1590114   +          +    -0.01155707859856 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.66558713728702 * G_Marital_Status0 + -0.01155707859856 * 
G_Marital_Status1 ;
1590115   +   H14  = H14  +     0.12565386008933 * G_Marital_Status0
1590116   +          +     0.07125401506996 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.12565386008933 * G_Marital_Status0 + 0.07125401506996 * 
G_Marital_Status1 ;
1590117   +   H11  =    -0.47940901026517 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.47940901026517 + H11 ;
1590118   +   H12  =     0.72706446657517 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.72706446657517 + H12 ;
1590119   +   H13  =     2.64976292189629 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 2.64976292189629 + H13 ;
1590120   +   H14  =     0.18030319416595 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.18030319416595 + H14 ;
1590121   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1590122   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1590123   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1590124   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1590125   +END;
MPRINT(EM_DIAGRAM):   END;
1590126   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1590127   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1590128   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1590129   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1590130   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1590131   +END;
MPRINT(EM_DIAGRAM):   END;
1590132   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1590133   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1590134   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1590135   +
1590136   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1590137   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1590138   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1590139   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1590140   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1590141   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1590142   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1590143   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1590144   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1590145   +end;
MPRINT(EM_DIAGRAM):   end;
1590146   +else do;
MPRINT(EM_DIAGRAM):   else do;
1590147   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1590148   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1590149   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1590150   +   end;
MPRINT(EM_DIAGRAM):   end;
1590151   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1590152   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1590153   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1590154   +   end;
MPRINT(EM_DIAGRAM):   end;
1590155   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1590156   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1590157   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1590158   +   end;
MPRINT(EM_DIAGRAM):   end;
1590159   +end;
MPRINT(EM_DIAGRAM):   end;
1590160   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1590161   +   P_DepVar1  =    -2.16840231556862 * H11  +    -2.67201260012597 * H12
1590162   +          +    -4.82460682607153 * H13  +    -2.93480893396507 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.16840231556862 * H11 + -2.67201260012597 * H12 + 
-4.82460682607153 * H13 + -2.93480893396507 * H14 ;
1590163   +   P_DepVar1  =     1.13227729187339 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.13227729187339 + P_DepVar1 ;
1590164   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1590165   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1590166   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1590167   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1590168   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1590169   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1590170   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1590171   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1590172   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1590173   +END;
MPRINT(EM_DIAGRAM):   END;
1590174   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1590175   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1590176   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1590177   +END;
MPRINT(EM_DIAGRAM):   END;
1590178   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1590179   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1590180   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1590181   +END;
MPRINT(EM_DIAGRAM):   END;
1590182   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1590183   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1590184   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1590185   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1590186   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1590187   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1590188   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1590189   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1590190   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1590191   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1590192   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1590193   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1590194   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1590195   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1590196   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1590197   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1590198   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1590199   +END;
MPRINT(EM_DIAGRAM):   END;
1590200   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1590201   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1590202   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1590203   +drop
1590204   +H11
1590205   +H12
1590206   +H13
1590207   +H14
1590208   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1590209   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1590210   +* Renaming variables for Neural26;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural26;
1590211   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1590212   +* Renaming Posterior variables for Neural26;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural26;
1590213   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1590214   +drop Neural26_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural26_P_DepVar1;
1590215   +Neural26_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural26_P_DepVar1 = P_DepVar1;
1590216   +drop Neural26_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural26_P_DepVar0;
1590217   +Neural26_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural26_P_DepVar0 = P_DepVar0;
1590218   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1590219   +* Renaming _WARN_ variable for Neural26;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural26;
1590220   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1590221   +length Neural26_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural26_WARN_ $4;
1590222   +drop Neural26_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural26_WARN_;
1590223   +Neural26_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural26_WARN_ = _WARN_;
1590224   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1590225   +* Ensmbl8: Scoring Code of model 2 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl8: Scoring Code of model 2 of 3;
1590226   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1590227   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1590228   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1590229   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1590230   +* NODE: Neural28;
MPRINT(EM_DIAGRAM):   * NODE: Neural28;
1590231   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1590232   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1590233   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1590234   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1590235   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1590236   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1590237   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1590238   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1590239   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1590240   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1590241   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1590242   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1590243   +LENGTH _WARN_ $4
1590244   +      F_DepVar  $ 12
1590245   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1590246   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1590247   +
1590248   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1590249   +
1590250   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1590251   +
1590252   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1590253   +
1590254   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1590255   +
1590256   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1590257   +
1590258   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1590259   +
1590260   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1590261   +
1590262   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1590263   +
1590264   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1590265   +
1590266   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1590267   +
1590268   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1590269   +
1590270   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1590271   +
1590272   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1590273   +
1590274   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1590275   +
1590276   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1590277   +
1590278   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1590279   +
1590280   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1590281   +
1590282   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1590283   +
1590284   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1590285   +
1590286   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1590287   +
1590288   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1590289   +
1590290   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1590291   +
1590292   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1590293   +
1590294   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1590295   +
1590296   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1590297   +
1590298   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1590299   +
1590300   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1590301   +
1590302   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1590303   +
1590304   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1590305   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1590306   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1590307   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1590308   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1590309   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1590310   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1590311   +end;
MPRINT(EM_DIAGRAM):   end;
1590312   +else do;
MPRINT(EM_DIAGRAM):   else do;
1590313   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1590314   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1590315   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1590316   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1590317   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1590318   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1590319   +   end;
MPRINT(EM_DIAGRAM):   end;
1590320   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1590321   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1590322   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1590323   +   end;
MPRINT(EM_DIAGRAM):   end;
1590324   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1590325   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1590326   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1590327   +   end;
MPRINT(EM_DIAGRAM):   end;
1590328   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1590329   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1590330   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1590331   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1590332   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1590333   +   end;
MPRINT(EM_DIAGRAM):   end;
1590334   +end;
MPRINT(EM_DIAGRAM):   end;
1590335   +
1590336   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1590337   +*** Checking missing input Interval
1590338   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1590339   +
1590340   +IF NMISS(
1590341   +   AcceptedCmpTotal ,
1590342   +   Frq ,
1590343   +   Income ,
1590344   +   Mnt ,
1590345   +   MntFruits ,
1590346   +   MntGoldProds ,
1590347   +   MntMeatProducts ,
1590348   +   MntSweetProducts ,
1590349   +   NumCatalogPurchases ,
1590350   +   NumWebPurchases ,
1590351   +   RFMstat ,
1590352   +   RMntFrq ,
1590353   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntFruits , 
MntGoldProds , MntMeatProducts , MntSweetProducts , NumCatalogPurchases , NumWebPurchases , 
RFMstat , RMntFrq , Recency ) THEN DO;
1590354   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1590355   +
1590356   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1590357   +END;
MPRINT(EM_DIAGRAM):   END;
1590358   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1590359   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1590360   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1590361   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1590362   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1590363   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1590364   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1590365   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1590366   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1590367   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1590368   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1590369   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1590370   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1590371   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1590372   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1590373   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1590374   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1590375   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1590376   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1590377   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1590378   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1590379   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1590380   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1590381   +END;
MPRINT(EM_DIAGRAM):   END;
1590382   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1590383   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1590384   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1590385   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1590386   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1590387   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1590388   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1590389   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1590390   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1590391   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1590392   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1590393   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1590394   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1590395   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1590396   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1590397   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1590398   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1590399   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1590400   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1590401   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1590402   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1590403   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1590404   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1590405   +   ELSE S_NumCatalogPurchases
1590406   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1590407   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1590408   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1590409   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1590410   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1590411   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1590412   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1590413   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1590414   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1590415   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1590416   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1590417   +END;
MPRINT(EM_DIAGRAM):   END;
1590418   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1590419   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1590420   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1590421   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1590422   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1590423   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1590424   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1590425   +   H11  =     0.82631693872377 * S_AcceptedCmpTotal  +    -0.72798667283699 *
1590426   +        S_Frq  +     0.15911649036122 * S_Income  +    -0.60456350734571 *
1590427   +        S_Mnt  +    -0.74377544096034 * S_MntFruits  +    -0.12263914971644 *
1590428   +        S_MntGoldProds  +     0.17677796203072 * S_MntMeatProducts
1590429   +          +    -0.50748691839629 * S_MntSweetProducts
1590430   +          +     0.64296516693494 * S_NumCatalogPurchases
1590431   +          +     1.28350004565407 * S_NumWebPurchases
1590432   +          +     0.21030868312225 * S_RFMstat  +    -0.39695828920844 *
1590433   +        S_RMntFrq  +    -0.89895080438896 * S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = 0.82631693872377 * S_AcceptedCmpTotal + -0.72798667283699 * S_Frq 
+ 0.15911649036122 * S_Income + -0.60456350734571 * S_Mnt + -0.74377544096034 * S_MntFruits + 
-0.12263914971644 * S_MntGoldProds + 0.17677796203072 * S_MntMeatProducts + -0.50748691839629 
* S_MntSweetProducts + 0.64296516693494 * S_NumCatalogPurchases + 1.28350004565407 * 
S_NumWebPurchases + 0.21030868312225 * S_RFMstat + -0.39695828920844 * S_RMntFrq + 
-0.89895080438896 * S_Recency ;
1590434   +   H12  =     0.11667862669372 * S_AcceptedCmpTotal  +    -1.01106011934145 *
1590435   +        S_Frq  +    -0.17716076384549 * S_Income  +    -0.24293226300477 *
1590436   +        S_Mnt  +     -0.0787175302374 * S_MntFruits  +     0.00532047873906 *
1590437   +        S_MntGoldProds  +     1.29466535738179 * S_MntMeatProducts
1590438   +          +     0.17384010941361 * S_MntSweetProducts
1590439   +          +     0.92948439877935 * S_NumCatalogPurchases
1590440   +          +     0.22516927332959 * S_NumWebPurchases
1590441   +          +     0.05028067999269 * S_RFMstat  +     0.78999743446302 *
1590442   +        S_RMntFrq  +    -0.20939117765596 * S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = 0.11667862669372 * S_AcceptedCmpTotal + -1.01106011934145 * S_Frq 
+ -0.17716076384549 * S_Income + -0.24293226300477 * S_Mnt + -0.0787175302374 * S_MntFruits + 
0.00532047873906 * S_MntGoldProds + 1.29466535738179 * S_MntMeatProducts + 0.17384010941361 * 
S_MntSweetProducts + 0.92948439877935 * S_NumCatalogPurchases + 0.22516927332959 * 
S_NumWebPurchases + 0.05028067999269 * S_RFMstat + 0.78999743446302 * S_RMntFrq + 
-0.20939117765596 * S_Recency ;
1590443   +   H13  =     0.04357769443186 * S_AcceptedCmpTotal  +     0.15406703269953 *
1590444   +        S_Frq  +     0.30195133876726 * S_Income  +     0.28819360890276 *
1590445   +        S_Mnt  +     0.09892781576641 * S_MntFruits  +     0.49225212949739 *
1590446   +        S_MntGoldProds  +     0.29770764897396 * S_MntMeatProducts
1590447   +          +     -0.2000873376449 * S_MntSweetProducts
1590448   +          +     0.12566784354514 * S_NumCatalogPurchases
1590449   +          +     0.02104112723179 * S_NumWebPurchases
1590450   +          +    -0.43415514019088 * S_RFMstat  +    -0.17022294749993 *
1590451   +        S_RMntFrq  +     0.30357171575981 * S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = 0.04357769443186 * S_AcceptedCmpTotal + 0.15406703269953 * S_Frq + 
0.30195133876726 * S_Income + 0.28819360890276 * S_Mnt + 0.09892781576641 * S_MntFruits + 
0.49225212949739 * S_MntGoldProds + 0.29770764897396 * S_MntMeatProducts + -0.2000873376449 * 
S_MntSweetProducts + 0.12566784354514 * S_NumCatalogPurchases + 0.02104112723179 * 
S_NumWebPurchases + -0.43415514019088 * S_RFMstat + -0.17022294749993 * S_RMntFrq + 
0.30357171575981 * S_Recency ;
1590452   +   H14  =     0.89017550554492 * S_AcceptedCmpTotal  +    -1.24866436391906 *
1590453   +        S_Frq  +    -0.83458596455814 * S_Income  +    -0.66942952173326 *
1590454   +        S_Mnt  +    -0.22543485387319 * S_MntFruits  +    -0.10688181972933 *
1590455   +        S_MntGoldProds  +     0.85050982143614 * S_MntMeatProducts
1590456   +          +     0.12117759215087 * S_MntSweetProducts
1590457   +          +     0.80203773582494 * S_NumCatalogPurchases
1590458   +          +     0.17374160185958 * S_NumWebPurchases
1590459   +          +    -0.12855081884938 * S_RFMstat  +     0.45921570261849 *
1590460   +        S_RMntFrq  +    -1.09092321008268 * S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = 0.89017550554492 * S_AcceptedCmpTotal + -1.24866436391906 * S_Frq 
+ -0.83458596455814 * S_Income + -0.66942952173326 * S_Mnt + -0.22543485387319 * S_MntFruits + 
-0.10688181972933 * S_MntGoldProds + 0.85050982143614 * S_MntMeatProducts + 0.12117759215087 * 
S_MntSweetProducts + 0.80203773582494 * S_NumCatalogPurchases + 0.17374160185958 * 
S_NumWebPurchases + -0.12855081884938 * S_RFMstat + 0.45921570261849 * S_RMntFrq + 
-1.09092321008268 * S_Recency ;
1590461   +   H15  =    -0.68386094226468 * S_AcceptedCmpTotal  +    -0.44368664779237 *
1590462   +        S_Frq  +    -0.63118593216016 * S_Income  +     -0.8549673235883 *
1590463   +        S_Mnt  +     -0.4174049500068 * S_MntFruits  +    -0.02221537411568 *
1590464   +        S_MntGoldProds  +      0.0634004340553 * S_MntMeatProducts
1590465   +          +      0.2989820991785 * S_MntSweetProducts
1590466   +          +     0.04398783976739 * S_NumCatalogPurchases
1590467   +          +     0.40368640676572 * S_NumWebPurchases
1590468   +          +    -0.50987577368598 * S_RFMstat  +    -0.24616064467414 *
1590469   +        S_RMntFrq  +    -0.01932947962302 * S_Recency ;
MPRINT(EM_DIAGRAM):   H15 = -0.68386094226468 * S_AcceptedCmpTotal + -0.44368664779237 * S_Frq 
+ -0.63118593216016 * S_Income + -0.8549673235883 * S_Mnt + -0.4174049500068 * S_MntFruits + 
-0.02221537411568 * S_MntGoldProds + 0.0634004340553 * S_MntMeatProducts + 0.2989820991785 * 
S_MntSweetProducts + 0.04398783976739 * S_NumCatalogPurchases + 0.40368640676572 * 
S_NumWebPurchases + -0.50987577368598 * S_RFMstat + -0.24616064467414 * S_RMntFrq + 
-0.01932947962302 * S_Recency ;
1590470   +   H16  =    -0.69633356297868 * S_AcceptedCmpTotal  +     0.25580106272723 *
1590471   +        S_Frq  +    -0.15941056497212 * S_Income  +     1.01091236070049 *
1590472   +        S_Mnt  +    -0.16421220259024 * S_MntFruits  +    -0.28158219367628 *
1590473   +        S_MntGoldProds  +    -0.80473865500071 * S_MntMeatProducts
1590474   +          +     0.10950268819222 * S_MntSweetProducts
1590475   +          +    -0.59025524598908 * S_NumCatalogPurchases
1590476   +          +    -0.02069421817896 * S_NumWebPurchases
1590477   +          +     -0.3615429826151 * S_RFMstat  +    -0.41611769964424 *
1590478   +        S_RMntFrq  +     0.96940490611968 * S_Recency ;
MPRINT(EM_DIAGRAM):   H16 = -0.69633356297868 * S_AcceptedCmpTotal + 0.25580106272723 * S_Frq 
+ -0.15941056497212 * S_Income + 1.01091236070049 * S_Mnt + -0.16421220259024 * S_MntFruits + 
-0.28158219367628 * S_MntGoldProds + -0.80473865500071 * S_MntMeatProducts + 0.10950268819222 
* S_MntSweetProducts + -0.59025524598908 * S_NumCatalogPurchases + -0.02069421817896 * 
S_NumWebPurchases + -0.3615429826151 * S_RFMstat + -0.41611769964424 * S_RMntFrq + 
0.96940490611968 * S_Recency ;
1590479   +   H11  = H11  +        0.45545922927 * G_Marital_Status0
1590480   +          +     0.12818067118838 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.45545922927 * G_Marital_Status0 + 0.12818067118838 * 
G_Marital_Status1 ;
1590481   +   H12  = H12  +    -0.20371081343188 * G_Marital_Status0
1590482   +          +      0.0869800653918 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.20371081343188 * G_Marital_Status0 + 0.0869800653918 * 
G_Marital_Status1 ;
1590483   +   H13  = H13  +    -0.33845151454936 * G_Marital_Status0
1590484   +          +    -0.43733288680739 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.33845151454936 * G_Marital_Status0 + -0.43733288680739 * 
G_Marital_Status1 ;
1590485   +   H14  = H14  +     0.11759980770855 * G_Marital_Status0
1590486   +          +    -0.01680808105992 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.11759980770855 * G_Marital_Status0 + -0.01680808105992 * 
G_Marital_Status1 ;
1590487   +   H15  = H15  +    -0.20605143700963 * G_Marital_Status0
1590488   +          +     0.04987739539035 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.20605143700963 * G_Marital_Status0 + 0.04987739539035 * 
G_Marital_Status1 ;
1590489   +   H16  = H16  +    -0.99478088512585 * G_Marital_Status0
1590490   +          +    -0.35983290751115 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.99478088512585 * G_Marital_Status0 + -0.35983290751115 * 
G_Marital_Status1 ;
1590491   +   H11  =    -0.72044866217862 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.72044866217862 + H11 ;
1590492   +   H12  =     0.73797915336977 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.73797915336977 + H12 ;
1590493   +   H13  =     0.82989235994379 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.82989235994379 + H13 ;
1590494   +   H14  =    -0.48103007102008 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.48103007102008 + H14 ;
1590495   +   H15  =     -0.4352791778041 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.4352791778041 + H15 ;
1590496   +   H16  =      2.7027355184778 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 2.7027355184778 + H16 ;
1590497   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1590498   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1590499   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1590500   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1590501   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1590502   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1590503   +END;
MPRINT(EM_DIAGRAM):   END;
1590504   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1590505   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1590506   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1590507   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1590508   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1590509   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1590510   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1590511   +END;
MPRINT(EM_DIAGRAM):   END;
1590512   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1590513   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1590514   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1590515   +
1590516   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1590517   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1590518   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1590519   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1590520   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1590521   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1590522   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1590523   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1590524   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1590525   +end;
MPRINT(EM_DIAGRAM):   end;
1590526   +else do;
MPRINT(EM_DIAGRAM):   else do;
1590527   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1590528   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1590529   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1590530   +   end;
MPRINT(EM_DIAGRAM):   end;
1590531   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1590532   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1590533   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1590534   +   end;
MPRINT(EM_DIAGRAM):   end;
1590535   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1590536   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1590537   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1590538   +   end;
MPRINT(EM_DIAGRAM):   end;
1590539   +end;
MPRINT(EM_DIAGRAM):   end;
1590540   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1590541   +   P_DepVar1  =     1.53646139060035 * H11  +     1.98227889313385 * H12
1590542   +          +     0.69366657666187 * H13  +      1.4458071195477 * H14
1590543   +          +     0.81229467076169 * H15  +     -2.4762533950508 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.53646139060035 * H11 + 1.98227889313385 * H12 + 
0.69366657666187 * H13 + 1.4458071195477 * H14 + 0.81229467076169 * H15 + -2.4762533950508 * 
H16 ;
1590544   +   P_DepVar1  =    -0.95559108382775 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.95559108382775 + P_DepVar1 ;
1590545   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1590546   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1590547   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1590548   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1590549   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1590550   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1590551   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1590552   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1590553   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1590554   +END;
MPRINT(EM_DIAGRAM):   END;
1590555   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1590556   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1590557   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1590558   +END;
MPRINT(EM_DIAGRAM):   END;
1590559   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1590560   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1590561   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1590562   +END;
MPRINT(EM_DIAGRAM):   END;
1590563   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1590564   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1590565   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1590566   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1590567   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1590568   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1590569   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1590570   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1590571   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1590572   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1590573   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1590574   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1590575   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1590576   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1590577   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1590578   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1590579   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1590580   +END;
MPRINT(EM_DIAGRAM):   END;
1590581   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1590582   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1590583   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1590584   +drop
1590585   +H11
1590586   +H12
1590587   +H13
1590588   +H14
1590589   +H15
1590590   +H16
1590591   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1590592   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1590593   +* Renaming variables for Neural28;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural28;
1590594   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1590595   +* Renaming Posterior variables for Neural28;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural28;
1590596   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1590597   +drop Neural28_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural28_P_DepVar1;
1590598   +Neural28_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural28_P_DepVar1 = P_DepVar1;
1590599   +drop Neural28_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural28_P_DepVar0;
1590600   +Neural28_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural28_P_DepVar0 = P_DepVar0;
1590601   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1590602   +* Renaming _WARN_ variable for Neural28;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural28;
1590603   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1590604   +length Neural28_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural28_WARN_ $4;
1590605   +drop Neural28_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural28_WARN_;
1590606   +Neural28_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural28_WARN_ = _WARN_;
1590607   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1590608   +* Ensmbl8: Scoring Code of model 3 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl8: Scoring Code of model 3 of 3;
1590609   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1590610   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1590611   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1590612   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1590613   +* NODE: Neural8;
MPRINT(EM_DIAGRAM):   * NODE: Neural8;
1590614   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1590615   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1590616   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1590617   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1590618   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1590619   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1590620   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1590621   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1590622   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1590623   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1590624   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1590625   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1590626   +LENGTH _WARN_ $4
1590627   +      F_DepVar  $ 12
1590628   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1590629   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1590630   +
1590631   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1590632   +
1590633   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1590634   +
1590635   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1590636   +
1590637   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1590638   +
1590639   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1590640   +
1590641   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1590642   +
1590643   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1590644   +
1590645   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1590646   +
1590647   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1590648   +
1590649   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1590650   +
1590651   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1590652   +
1590653   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1590654   +
1590655   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1590656   +
1590657   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1590658   +
1590659   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1590660   +
1590661   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1590662   +
1590663   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1590664   +
1590665   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1590666   +
1590667   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1590668   +
1590669   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1590670   +
1590671   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
1590672   +
1590673   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1590674   +
1590675   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1590676   +
1590677   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1590678   +
1590679   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1590680   +
1590681   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1590682   +
1590683   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1590684   +
1590685   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1590686   +
1590687   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1590688   +
1590689   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1590690   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1590691   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1590692   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1590693   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1590694   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1590695   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1590696   +end;
MPRINT(EM_DIAGRAM):   end;
1590697   +else do;
MPRINT(EM_DIAGRAM):   else do;
1590698   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1590699   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1590700   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1590701   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1590702   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1590703   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1590704   +   end;
MPRINT(EM_DIAGRAM):   end;
1590705   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1590706   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1590707   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1590708   +   end;
MPRINT(EM_DIAGRAM):   end;
1590709   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1590710   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1590711   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1590712   +   end;
MPRINT(EM_DIAGRAM):   end;
1590713   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1590714   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1590715   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1590716   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1590717   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1590718   +   end;
MPRINT(EM_DIAGRAM):   end;
1590719   +end;
MPRINT(EM_DIAGRAM):   end;
1590720   +
1590721   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1590722   +*** Checking missing input Interval
1590723   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1590724   +
1590725   +IF NMISS(
1590726   +   AcceptedCmpTotal ,
1590727   +   Frq ,
1590728   +   Income ,
1590729   +   Mnt ,
1590730   +   MntFruits ,
1590731   +   MntGoldProds ,
1590732   +   MntMeatProducts ,
1590733   +   MntSweetProducts ,
1590734   +   NumCatalogPurchases ,
1590735   +   NumWebPurchases ,
1590736   +   RFMstat ,
1590737   +   RMntFrq ,
1590738   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntFruits , 
MntGoldProds , MntMeatProducts , MntSweetProducts , NumCatalogPurchases , NumWebPurchases , 
RFMstat , RMntFrq , Recency ) THEN DO;
1590739   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1590740   +
1590741   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1590742   +END;
MPRINT(EM_DIAGRAM):   END;
1590743   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1590744   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1590745   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1590746   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1590747   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1590748   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1590749   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1590750   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1590751   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1590752   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1590753   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1590754   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1590755   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1590756   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1590757   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1590758   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1590759   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1590760   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1590761   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1590762   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1590763   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1590764   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1590765   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1590766   +END;
MPRINT(EM_DIAGRAM):   END;
1590767   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1590768   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1590769   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1590770   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1590771   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1590772   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1590773   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1590774   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1590775   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1590776   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1590777   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1590778   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1590779   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1590780   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1590781   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1590782   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1590783   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1590784   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1590785   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1590786   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1590787   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1590788   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1590789   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1590790   +   ELSE S_NumCatalogPurchases
1590791   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1590792   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1590793   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1590794   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1590795   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1590796   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1590797   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1590798   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1590799   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1590800   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1590801   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1590802   +END;
MPRINT(EM_DIAGRAM):   END;
1590803   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1590804   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1590805   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1590806   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1590807   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1590808   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1590809   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1590810   +   H11  =     0.00179298802892 * S_AcceptedCmpTotal  +     0.01784009275608 *
1590811   +        S_Frq  +     0.69409617936033 * S_Income  +    -0.28641816886809 *
1590812   +        S_Mnt  +     0.21745721720131 * S_MntFruits  +    -0.38924339437831 *
1590813   +        S_MntGoldProds  +     0.48302006424722 * S_MntMeatProducts
1590814   +          +     0.32217287817742 * S_MntSweetProducts
1590815   +          +     0.37317765763795 * S_NumCatalogPurchases
1590816   +          +     0.31712152035565 * S_NumWebPurchases
1590817   +          +    -0.00101711956377 * S_RFMstat  +    -0.50814709993968 *
1590818   +        S_RMntFrq  +     -0.2674878177058 * S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = 0.00179298802892 * S_AcceptedCmpTotal + 0.01784009275608 * S_Frq + 
0.69409617936033 * S_Income + -0.28641816886809 * S_Mnt + 0.21745721720131 * S_MntFruits + 
-0.38924339437831 * S_MntGoldProds + 0.48302006424722 * S_MntMeatProducts + 0.32217287817742 * 
S_MntSweetProducts + 0.37317765763795 * S_NumCatalogPurchases + 0.31712152035565 * 
S_NumWebPurchases + -0.00101711956377 * S_RFMstat + -0.50814709993968 * S_RMntFrq + 
-0.2674878177058 * S_Recency ;
1590819   +   H12  =    -0.13522102699695 * S_AcceptedCmpTotal  +     0.62468738576113 *
1590820   +        S_Frq  +     0.33525631913577 * S_Income  +     0.49596519260867 *
1590821   +        S_Mnt  +    -0.07840703709606 * S_MntFruits  +    -0.13407863606593 *
1590822   +        S_MntGoldProds  +     0.07892036440987 * S_MntMeatProducts
1590823   +          +    -0.19345300638771 * S_MntSweetProducts
1590824   +          +     0.37926806634405 * S_NumCatalogPurchases
1590825   +          +     0.17926711405358 * S_NumWebPurchases
1590826   +          +    -0.56247478537915 * S_RFMstat  +    -0.83222377723575 *
1590827   +        S_RMntFrq  +     0.06152905340066 * S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = -0.13522102699695 * S_AcceptedCmpTotal + 0.62468738576113 * S_Frq 
+ 0.33525631913577 * S_Income + 0.49596519260867 * S_Mnt + -0.07840703709606 * S_MntFruits + 
-0.13407863606593 * S_MntGoldProds + 0.07892036440987 * S_MntMeatProducts + -0.19345300638771 
* S_MntSweetProducts + 0.37926806634405 * S_NumCatalogPurchases + 0.17926711405358 * 
S_NumWebPurchases + -0.56247478537915 * S_RFMstat + -0.83222377723575 * S_RMntFrq + 
0.06152905340066 * S_Recency ;
1590828   +   H13  =     0.52085707566671 * S_AcceptedCmpTotal  +    -0.43119445779869 *
1590829   +        S_Frq  +    -0.38451776725994 * S_Income  +    -0.43893571865073 *
1590830   +        S_Mnt  +    -0.18147736658896 * S_MntFruits  +    -0.02759924916073 *
1590831   +        S_MntGoldProds  +     0.41710329802839 * S_MntMeatProducts
1590832   +          +    -0.11238728777733 * S_MntSweetProducts
1590833   +          +     0.39955878063516 * S_NumCatalogPurchases
1590834   +          +     0.37701883017309 * S_NumWebPurchases
1590835   +          +    -0.03011513977353 * S_RFMstat  +     0.05558894855861 *
1590836   +        S_RMntFrq  +    -0.53097904952065 * S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = 0.52085707566671 * S_AcceptedCmpTotal + -0.43119445779869 * S_Frq 
+ -0.38451776725994 * S_Income + -0.43893571865073 * S_Mnt + -0.18147736658896 * S_MntFruits + 
-0.02759924916073 * S_MntGoldProds + 0.41710329802839 * S_MntMeatProducts + -0.11238728777733 
* S_MntSweetProducts + 0.39955878063516 * S_NumCatalogPurchases + 0.37701883017309 * 
S_NumWebPurchases + -0.03011513977353 * S_RFMstat + 0.05558894855861 * S_RMntFrq + 
-0.53097904952065 * S_Recency ;
1590837   +   H14  =     0.01011198652387 * S_AcceptedCmpTotal  +     0.50914419302954 *
1590838   +        S_Frq  +     0.36935051571942 * S_Income  +    -0.14541266632981 *
1590839   +        S_Mnt  +     0.70809835135242 * S_MntFruits  +     0.17636828127553 *
1590840   +        S_MntGoldProds  +    -0.39065133922684 * S_MntMeatProducts
1590841   +          +      0.2693109494597 * S_MntSweetProducts
1590842   +          +      0.1081864929712 * S_NumCatalogPurchases
1590843   +          +     0.04463189601793 * S_NumWebPurchases
1590844   +          +     0.17598396305598 * S_RFMstat  +    -0.26428585222285 *
1590845   +        S_RMntFrq  +    -0.35066600356743 * S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = 0.01011198652387 * S_AcceptedCmpTotal + 0.50914419302954 * S_Frq + 
0.36935051571942 * S_Income + -0.14541266632981 * S_Mnt + 0.70809835135242 * S_MntFruits + 
0.17636828127553 * S_MntGoldProds + -0.39065133922684 * S_MntMeatProducts + 0.2693109494597 * 
S_MntSweetProducts + 0.1081864929712 * S_NumCatalogPurchases + 0.04463189601793 * 
S_NumWebPurchases + 0.17598396305598 * S_RFMstat + -0.26428585222285 * S_RMntFrq + 
-0.35066600356743 * S_Recency ;
1590846   +   H15  =     0.25974646459449 * S_AcceptedCmpTotal  +    -0.01084764302849 *
1590847   +        S_Frq  +    -0.25453296848623 * S_Income  +    -0.24485320547361 *
1590848   +        S_Mnt  +      0.3523119885561 * S_MntFruits  +    -0.23948230282173 *
1590849   +        S_MntGoldProds  +    -0.61077291955379 * S_MntMeatProducts
1590850   +          +     0.69250340520766 * S_MntSweetProducts
1590851   +          +    -0.92476508978686 * S_NumCatalogPurchases
1590852   +          +    -0.85062812213631 * S_NumWebPurchases
1590853   +          +    -0.13668170504261 * S_RFMstat  +    -0.39159958659757 *
1590854   +        S_RMntFrq  +     0.31541831647045 * S_Recency ;
MPRINT(EM_DIAGRAM):   H15 = 0.25974646459449 * S_AcceptedCmpTotal + -0.01084764302849 * S_Frq 
+ -0.25453296848623 * S_Income + -0.24485320547361 * S_Mnt + 0.3523119885561 * S_MntFruits + 
-0.23948230282173 * S_MntGoldProds + -0.61077291955379 * S_MntMeatProducts + 0.69250340520766 
* S_MntSweetProducts + -0.92476508978686 * S_NumCatalogPurchases + -0.85062812213631 * 
S_NumWebPurchases + -0.13668170504261 * S_RFMstat + -0.39159958659757 * S_RMntFrq + 
0.31541831647045 * S_Recency ;
1590855   +   H16  =     0.30881424897223 * S_AcceptedCmpTotal  +      0.2794364053658 *
1590856   +        S_Frq  +    -0.13255692208785 * S_Income  +      0.1084623497397 *
1590857   +        S_Mnt  +    -0.21377822064675 * S_MntFruits  +     0.66167304100171 *
1590858   +        S_MntGoldProds  +    -0.18059030828344 * S_MntMeatProducts
1590859   +          +      0.1342841887454 * S_MntSweetProducts
1590860   +          +    -0.35353451726224 * S_NumCatalogPurchases
1590861   +          +     0.19726071632213 * S_NumWebPurchases
1590862   +          +    -0.67773182477521 * S_RFMstat  +    -0.05559124023026 *
1590863   +        S_RMntFrq  +     0.29135046009186 * S_Recency ;
MPRINT(EM_DIAGRAM):   H16 = 0.30881424897223 * S_AcceptedCmpTotal + 0.2794364053658 * S_Frq + 
-0.13255692208785 * S_Income + 0.1084623497397 * S_Mnt + -0.21377822064675 * S_MntFruits + 
0.66167304100171 * S_MntGoldProds + -0.18059030828344 * S_MntMeatProducts + 0.1342841887454 * 
S_MntSweetProducts + -0.35353451726224 * S_NumCatalogPurchases + 0.19726071632213 * 
S_NumWebPurchases + -0.67773182477521 * S_RFMstat + -0.05559124023026 * S_RMntFrq + 
0.29135046009186 * S_Recency ;
1590864   +   H17  =    -0.56474657283939 * S_AcceptedCmpTotal  +     0.49714469636668 *
1590865   +        S_Frq  +     0.38873911121939 * S_Income  +     0.18672296356038 *
1590866   +        S_Mnt  +    -0.12290033905766 * S_MntFruits  +    -0.55117454621073 *
1590867   +        S_MntGoldProds  +    -0.34157249684624 * S_MntMeatProducts
1590868   +          +    -0.03878223698579 * S_MntSweetProducts
1590869   +          +    -0.44318159654535 * S_NumCatalogPurchases
1590870   +          +     0.28629379958053 * S_NumWebPurchases
1590871   +          +    -0.33628587814816 * S_RFMstat  +     0.01539005969109 *
1590872   +        S_RMntFrq  +      0.4669281349511 * S_Recency ;
MPRINT(EM_DIAGRAM):   H17 = -0.56474657283939 * S_AcceptedCmpTotal + 0.49714469636668 * S_Frq 
+ 0.38873911121939 * S_Income + 0.18672296356038 * S_Mnt + -0.12290033905766 * S_MntFruits + 
-0.55117454621073 * S_MntGoldProds + -0.34157249684624 * S_MntMeatProducts + -0.03878223698579 
* S_MntSweetProducts + -0.44318159654535 * S_NumCatalogPurchases + 0.28629379958053 * 
S_NumWebPurchases + -0.33628587814816 * S_RFMstat + 0.01539005969109 * S_RMntFrq + 
0.4669281349511 * S_Recency ;
1590873   +   H11  = H11  +     0.54366812821853 * G_Marital_Status0
1590874   +          +    -0.24270884269566 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.54366812821853 * G_Marital_Status0 + -0.24270884269566 * 
G_Marital_Status1 ;
1590875   +   H12  = H12  +     0.12201873252315 * G_Marital_Status0
1590876   +          +      0.2708540168877 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.12201873252315 * G_Marital_Status0 + 0.2708540168877 * 
G_Marital_Status1 ;
1590877   +   H13  = H13  +     0.21773390953206 * G_Marital_Status0
1590878   +          +      0.1849184915243 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.21773390953206 * G_Marital_Status0 + 0.1849184915243 * 
G_Marital_Status1 ;
1590879   +   H14  = H14  +     0.42359989920789 * G_Marital_Status0
1590880   +          +     -0.0427682060318 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.42359989920789 * G_Marital_Status0 + -0.0427682060318 * 
G_Marital_Status1 ;
1590881   +   H15  = H15  +     0.39852794737212 * G_Marital_Status0
1590882   +          +      0.4834959104522 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.39852794737212 * G_Marital_Status0 + 0.4834959104522 * 
G_Marital_Status1 ;
1590883   +   H16  = H16  +     0.34117172602716 * G_Marital_Status0
1590884   +          +     0.01719507366738 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.34117172602716 * G_Marital_Status0 + 0.01719507366738 * 
G_Marital_Status1 ;
1590885   +   H17  = H17  +    -0.48271020073977 * G_Marital_Status0
1590886   +          +    -0.38643265086902 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.48271020073977 * G_Marital_Status0 + -0.38643265086902 * 
G_Marital_Status1 ;
1590887   +   H11  =    -1.92887755316705 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.92887755316705 + H11 ;
1590888   +   H12  =     1.10580453552439 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.10580453552439 + H12 ;
1590889   +   H13  =     -0.0396459221076 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.0396459221076 + H13 ;
1590890   +   H14  =    -0.24030684440152 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.24030684440152 + H14 ;
1590891   +   H15  =    -1.57024900687106 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -1.57024900687106 + H15 ;
1590892   +   H16  =    -0.33224481657704 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.33224481657704 + H16 ;
1590893   +   H17  =     1.22710614099789 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = 1.22710614099789 + H17 ;
1590894   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1590895   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1590896   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1590897   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1590898   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1590899   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1590900   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
1590901   +END;
MPRINT(EM_DIAGRAM):   END;
1590902   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1590903   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1590904   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1590905   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1590906   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1590907   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1590908   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1590909   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
1590910   +END;
MPRINT(EM_DIAGRAM):   END;
1590911   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1590912   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1590913   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1590914   +
1590915   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1590916   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1590917   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1590918   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1590919   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1590920   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1590921   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1590922   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1590923   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1590924   +end;
MPRINT(EM_DIAGRAM):   end;
1590925   +else do;
MPRINT(EM_DIAGRAM):   else do;
1590926   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1590927   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1590928   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1590929   +   end;
MPRINT(EM_DIAGRAM):   end;
1590930   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1590931   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1590932   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1590933   +   end;
MPRINT(EM_DIAGRAM):   end;
1590934   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1590935   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1590936   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1590937   +   end;
MPRINT(EM_DIAGRAM):   end;
1590938   +end;
MPRINT(EM_DIAGRAM):   end;
1590939   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1590940   +   P_DepVar1  =     1.21462455419854 * H11  +    -0.32480789724651 * H12
1590941   +          +     2.96475008226038 * H13  +     -0.7919726093423 * H14
1590942   +          +    -2.29353966226595 * H15  +     -0.7223088500433 * H16
1590943   +          +    -2.44182031584859 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.21462455419854 * H11 + -0.32480789724651 * H12 + 
2.96475008226038 * H13 + -0.7919726093423 * H14 + -2.29353966226595 * H15 + -0.7223088500433 * 
H16 + -2.44182031584859 * H17 ;
1590944   +   P_DepVar1  =    -1.63832895249218 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.63832895249218 + P_DepVar1 ;
1590945   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1590946   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1590947   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1590948   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1590949   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1590950   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1590951   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1590952   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1590953   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1590954   +END;
MPRINT(EM_DIAGRAM):   END;
1590955   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1590956   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1590957   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1590958   +END;
MPRINT(EM_DIAGRAM):   END;
1590959   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1590960   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1590961   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1590962   +END;
MPRINT(EM_DIAGRAM):   END;
1590963   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1590964   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1590965   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1590966   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1590967   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1590968   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1590969   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1590970   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1590971   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1590972   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1590973   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1590974   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1590975   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1590976   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1590977   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1590978   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1590979   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1590980   +END;
MPRINT(EM_DIAGRAM):   END;
1590981   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1590982   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1590983   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1590984   +drop
1590985   +H11
1590986   +H12
1590987   +H13
1590988   +H14
1590989   +H15
1590990   +H16
1590991   +H17
1590992   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
1590993   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1590994   +* Renaming variables for Neural8;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural8;
1590995   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1590996   +* Renaming Posterior variables for Neural8;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural8;
1590997   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1590998   +drop Neural8_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural8_P_DepVar1;
1590999   +Neural8_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural8_P_DepVar1 = P_DepVar1;
1591000   +drop Neural8_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural8_P_DepVar0;
1591001   +Neural8_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural8_P_DepVar0 = P_DepVar0;
1591002   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1591003   +* Renaming _WARN_ variable for Neural8;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural8;
1591004   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1591005   +length Neural8_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural8_WARN_ $4;
1591006   +drop Neural8_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural8_WARN_;
1591007   +Neural8_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural8_WARN_ = _WARN_;
1591008   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1591009   +* Ensmbl8: Average Posteriors of 3 models;
MPRINT(EM_DIAGRAM):   * Ensmbl8: Average Posteriors of 3 models;
1591010   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1591011   +P_DepVar1 = (
1591012   +Neural26_P_DepVar1 +
1591013   +Neural28_P_DepVar1 +
1591014   +Neural8_P_DepVar1
1591015   +)/3;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( Neural26_P_DepVar1 + Neural28_P_DepVar1 + 
Neural8_P_DepVar1 )/3;
1591016   +P_DepVar0 = (
1591017   +Neural26_P_DepVar0 +
1591018   +Neural28_P_DepVar0 +
1591019   +Neural8_P_DepVar0
1591020   +)/3;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( Neural26_P_DepVar0 + Neural28_P_DepVar0 + 
Neural8_P_DepVar0 )/3;
1591021   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1591022   +* Ensmbl8: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl8: Computing Classification Vars;
1591023   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1591024   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
1591025   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
1591026   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
1591027   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
1591028   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
1591029   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
1591030   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
1591031   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
1591032   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
1591033   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
1591034   +end;
MPRINT(EM_DIAGRAM):   end;
1591035   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
1591036   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
1591037   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
1591038   +end;
MPRINT(EM_DIAGRAM):   end;
1591039   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1591040   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1591041   +* Ensmbl8: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl8: Producing Unformatted variable;
1591042   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1591043   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1591044   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1591045   +else
1591046   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1591047   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1591048   +* Ensmbl8: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl8: Computing _WARN_ Variable;
1591049   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1591050   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1591051   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1591052   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1591053   +if index(NEURAL26_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1591053  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL26_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1591054   +if index(NEURAL26_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1591054  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL26_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1591055   +if index(NEURAL26_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1591055  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL26_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1591056   +if index(NEURAL26_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1591056  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL26_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1591057   +if index(NEURAL28_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1591057  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL28_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1591058   +if index(NEURAL28_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1591058  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL28_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1591059   +if index(NEURAL28_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1591059  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL28_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1591060   +if index(NEURAL28_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1591060  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL28_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1591061   +if index(NEURAL8_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL8_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1591062   +if index(NEURAL8_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL8_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1591063   +if index(NEURAL8_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL8_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1591064   +if index(NEURAL8_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL8_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1591065   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1591066   +* Ensmbl8: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl8: Computing Residual Vars;
1591067   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1591068   +if
1591069   +F_DepVar NE '1'
1591070   +AND F_DepVar NE '0'
1591071   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
1591072   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1591073   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1591074   +end;
MPRINT(EM_DIAGRAM):   end;
1591075   +else do;
MPRINT(EM_DIAGRAM):   else do;
1591076   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
1591077   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
1591078   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
1591079   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
1591080   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
1591081   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
1591082   +END;
MPRINT(EM_DIAGRAM):   END;
1591083   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1591084    run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL8_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.NEURAL26_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1591085    quit;
1591086    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1591087    filename emflow
1591087  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl8\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl8\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl8: Scoring NEURAL26_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1591088    *------------------------------------------------------------*;
1591089    * Ensmbl8: Scoring NEURAL26_VALIDATE data;
1591090    *------------------------------------------------------------*;
1591091    data EMWS8.Ensmbl8_VALIDATE
1591092    / view=EMWS8.Ensmbl8_VALIDATE
1591093    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl8_VALIDATE / view=EMWS8.Ensmbl8_VALIDATE ;
1591094    set EMWS8.Neural26_VALIDATE
1591095    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural26_VALIDATE ;
1591096    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl8\EMFLOWSCORE.sas.
1591097   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1591098   +* Ensmbl8: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl8: Combine model for DepVar;
1591099   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1591100   +* Ensmbl8: Scoring Code of model 1 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl8: Scoring Code of model 1 of 3;
1591101   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1591102   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1591103   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1591104   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1591105   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
1591106   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1591107   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1591108   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
1591109   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1591110   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
1591111   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1591112   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1591113   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
1591114   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1591115   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
1591116   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1591117   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1591118   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
1591119   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1591120   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
1591121   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1591122   +
1591123   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1591124   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1591124  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1591125   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1591126   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1591127   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1591128   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1591129   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
1591130   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1591131   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
1591132   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1591133   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
1591134   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1591135   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1591136   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1591137   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1591138   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1591139   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1591140   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
1591141   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1591142   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
1591143   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1591144   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
1591145   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1591146   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1591147   +* TOOL: Variable selection Class;
MPRINT(EM_DIAGRAM):   * TOOL: Variable selection Class;
1591148   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1591149   +* NODE: Varsel;
MPRINT(EM_DIAGRAM):   * NODE: Varsel;
1591150   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1591151   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1591152   +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
1591153   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1591154   +
1591155   +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
1591156   +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1591157   +
1591158   +
1591159   +/*----G_Marital_Status begin----*/
1591160   +length _NORM8 $ 8;
MPRINT(EM_DIAGRAM):   length _NORM8 $ 8;
1591161   +_NORM8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _NORM8 = put( Marital_Status , $8. );
1591162   +%DMNORMIP( _NORM8 )
MPRINT(DMNORMIP):   call dmnorm(_NORM8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1591163   +drop _NORM8;
MPRINT(EM_DIAGRAM):   drop _NORM8;
1591164   +select(_NORM8);
MPRINT(EM_DIAGRAM):   select(_NORM8);
1591165   +  when("DIVORCED" ) G_Marital_Status = 1;
MPRINT(EM_DIAGRAM):   when("DIVORCED" ) G_Marital_Status = 1;
1591166   +  when("MARRIED " ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("MARRIED " ) G_Marital_Status = 2;
1591167   +  when("SINGLE  " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("SINGLE  " ) G_Marital_Status = 0;
1591168   +  when("TOGETHER" ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("TOGETHER" ) G_Marital_Status = 2;
1591169   +  when("WIDOW   " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("WIDOW   " ) G_Marital_Status = 0;
1591170   +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
1591171   +end;
MPRINT(EM_DIAGRAM):   end;
1591172   +label G_Marital_Status="Grouped Levels for Marital_Status";
MPRINT(EM_DIAGRAM):   label G_Marital_Status= "Grouped Levels for Marital_Status";
1591173   +/*----G_Marital_Status end----*/
1591174   +
1591175   +
1591176   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
1591177   +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
1591178   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
1591179   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1591180   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1591181   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1591182   +* NODE: Neural26;
MPRINT(EM_DIAGRAM):   * NODE: Neural26;
1591183   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1591184   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1591185   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1591186   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1591187   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1591188   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1591189   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1591190   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1591191   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1591192   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1591193   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1591194   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1591195   +LENGTH _WARN_ $4
1591196   +      F_DepVar  $ 12
1591197   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1591198   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1591199   +
1591200   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1591201   +
1591202   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1591203   +
1591204   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1591205   +
1591206   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1591207   +
1591208   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1591209   +
1591210   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1591211   +
1591212   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1591213   +
1591214   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1591215   +
1591216   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1591217   +
1591218   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1591219   +
1591220   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1591221   +
1591222   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1591223   +
1591224   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1591225   +
1591226   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1591227   +
1591228   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1591229   +
1591230   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1591231   +
1591232   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1591233   +
1591234   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1591235   +
1591236   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1591237   +
1591238   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1591239   +
1591240   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1591241   +
1591242   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1591243   +
1591244   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1591245   +
1591246   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1591247   +
1591248   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1591249   +
1591250   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1591251   +
1591252   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1591253   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1591254   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1591255   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1591256   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1591257   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1591258   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1591259   +end;
MPRINT(EM_DIAGRAM):   end;
1591260   +else do;
MPRINT(EM_DIAGRAM):   else do;
1591261   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1591262   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1591263   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1591264   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1591265   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1591266   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1591267   +   end;
MPRINT(EM_DIAGRAM):   end;
1591268   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1591269   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1591270   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1591271   +   end;
MPRINT(EM_DIAGRAM):   end;
1591272   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1591273   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1591274   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1591275   +   end;
MPRINT(EM_DIAGRAM):   end;
1591276   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1591277   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1591278   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1591279   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1591280   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1591281   +   end;
MPRINT(EM_DIAGRAM):   end;
1591282   +end;
MPRINT(EM_DIAGRAM):   end;
1591283   +
1591284   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1591285   +*** Checking missing input Interval
1591286   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1591287   +
1591288   +IF NMISS(
1591289   +   AcceptedCmpTotal ,
1591290   +   Frq ,
1591291   +   Income ,
1591292   +   Mnt ,
1591293   +   MntFruits ,
1591294   +   MntGoldProds ,
1591295   +   MntMeatProducts ,
1591296   +   MntSweetProducts ,
1591297   +   NumCatalogPurchases ,
1591298   +   NumWebPurchases ,
1591299   +   RFMstat ,
1591300   +   RMntFrq ,
1591301   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntFruits , 
MntGoldProds , MntMeatProducts , MntSweetProducts , NumCatalogPurchases , NumWebPurchases , 
RFMstat , RMntFrq , Recency ) THEN DO;
1591302   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1591303   +
1591304   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1591305   +END;
MPRINT(EM_DIAGRAM):   END;
1591306   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1591307   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1591308   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1591309   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1591310   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1591311   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1591312   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1591313   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1591314   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1591315   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1591316   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1591317   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1591318   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1591319   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1591320   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1591321   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1591322   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1591323   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1591324   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1591325   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1591326   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1591327   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1591328   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1591329   +END;
MPRINT(EM_DIAGRAM):   END;
1591330   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1591331   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1591332   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1591333   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1591334   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1591335   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1591336   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1591337   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1591338   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1591339   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1591340   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1591341   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1591342   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1591343   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1591344   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1591345   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1591346   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1591347   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1591348   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1591349   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1591350   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1591351   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1591352   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1591353   +   ELSE S_NumCatalogPurchases
1591354   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1591355   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1591356   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1591357   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1591358   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1591359   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1591360   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1591361   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1591362   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1591363   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1591364   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1591365   +END;
MPRINT(EM_DIAGRAM):   END;
1591366   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1591367   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1591368   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1591369   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1591370   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1591371   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1591372   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1591373   +   H11  =    -1.12938466101576 * S_AcceptedCmpTotal  +     0.61534183742192 *
1591374   +        S_Frq  +     0.21605471415782 * S_Income  +     1.00718645972599 *
1591375   +        S_Mnt  +    -0.04712823237951 * S_MntFruits  +    -0.07929121432621 *
1591376   +        S_MntGoldProds  +    -0.41982161110641 * S_MntMeatProducts
1591377   +          +     0.30688676656325 * S_MntSweetProducts
1591378   +          +    -0.31936466951531 * S_NumCatalogPurchases
1591379   +          +    -0.40503981142414 * S_NumWebPurchases
1591380   +          +    -0.00368867286865 * S_RFMstat  +     0.37807775340916 *
1591381   +        S_RMntFrq  +     0.94794577395963 * S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = -1.12938466101576 * S_AcceptedCmpTotal + 0.61534183742192 * S_Frq 
+ 0.21605471415782 * S_Income + 1.00718645972599 * S_Mnt + -0.04712823237951 * S_MntFruits + 
-0.07929121432621 * S_MntGoldProds + -0.41982161110641 * S_MntMeatProducts + 0.30688676656325 
* S_MntSweetProducts + -0.31936466951531 * S_NumCatalogPurchases + -0.40503981142414 * 
S_NumWebPurchases + -0.00368867286865 * S_RFMstat + 0.37807775340916 * S_RMntFrq + 
0.94794577395963 * S_Recency ;
1591382   +   H12  =    -0.12113443728514 * S_AcceptedCmpTotal  +     0.93537745252849 *
1591383   +        S_Frq  +    -0.09891671631341 * S_Income  +     1.99038480756089 *
1591384   +        S_Mnt  +     0.17709370706747 * S_MntFruits  +    -0.26193027989873 *
1591385   +        S_MntGoldProds  +    -1.32538448369411 * S_MntMeatProducts
1591386   +          +    -0.57511617685848 * S_MntSweetProducts
1591387   +          +    -0.80584166120088 * S_NumCatalogPurchases
1591388   +          +    -0.46226595005401 * S_NumWebPurchases
1591389   +          +     0.10198567130706 * S_RFMstat  +     0.21276308472657 *
1591390   +        S_RMntFrq  +     0.20830913301712 * S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = -0.12113443728514 * S_AcceptedCmpTotal + 0.93537745252849 * S_Frq 
+ -0.09891671631341 * S_Income + 1.99038480756089 * S_Mnt + 0.17709370706747 * S_MntFruits + 
-0.26193027989873 * S_MntGoldProds + -1.32538448369411 * S_MntMeatProducts + -0.57511617685848 
* S_MntSweetProducts + -0.80584166120088 * S_NumCatalogPurchases + -0.46226595005401 * 
S_NumWebPurchases + 0.10198567130706 * S_RFMstat + 0.21276308472657 * S_RMntFrq + 
0.20830913301712 * S_Recency ;
1591391   +   H13  =    -0.26642267115951 * S_AcceptedCmpTotal  +    -0.93821950754639 *
1591392   +        S_Frq  +     0.01733680104129 * S_Income  +    -0.34674569831914 *
1591393   +        S_Mnt  +    -0.13141804104196 * S_MntFruits  +    -0.08208570095055 *
1591394   +        S_MntGoldProds  +     0.33076491610846 * S_MntMeatProducts
1591395   +          +     0.13151485846279 * S_MntSweetProducts
1591396   +          +    -0.12544664418198 * S_NumCatalogPurchases
1591397   +          +     0.31794108898576 * S_NumWebPurchases
1591398   +          +    -0.09733881043326 * S_RFMstat  +    -0.55416616488207 *
1591399   +        S_RMntFrq  +      0.6850072112056 * S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = -0.26642267115951 * S_AcceptedCmpTotal + -0.93821950754639 * S_Frq 
+ 0.01733680104129 * S_Income + -0.34674569831914 * S_Mnt + -0.13141804104196 * S_MntFruits + 
-0.08208570095055 * S_MntGoldProds + 0.33076491610846 * S_MntMeatProducts + 0.13151485846279 * 
S_MntSweetProducts + -0.12544664418198 * S_NumCatalogPurchases + 0.31794108898576 * 
S_NumWebPurchases + -0.09733881043326 * S_RFMstat + -0.55416616488207 * S_RMntFrq + 
0.6850072112056 * S_Recency ;
1591400   +   H14  =    -0.26331970415451 * S_AcceptedCmpTotal  +     0.91045762420144 *
1591401   +        S_Frq  +     0.47866760167028 * S_Income  +     1.96822454637646 *
1591402   +        S_Mnt  +     0.37467695392633 * S_MntFruits  +     0.35024846355131 *
1591403   +        S_MntGoldProds  +    -1.12912963812687 * S_MntMeatProducts
1591404   +          +     0.55003060492603 * S_MntSweetProducts
1591405   +          +    -0.81895769875154 * S_NumCatalogPurchases
1591406   +          +    -0.73905791041531 * S_NumWebPurchases
1591407   +          +    -0.05892830686928 * S_RFMstat  +    -2.20288127458579 *
1591408   +        S_RMntFrq  +     0.31097790354738 * S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = -0.26331970415451 * S_AcceptedCmpTotal + 0.91045762420144 * S_Frq 
+ 0.47866760167028 * S_Income + 1.96822454637646 * S_Mnt + 0.37467695392633 * S_MntFruits + 
0.35024846355131 * S_MntGoldProds + -1.12912963812687 * S_MntMeatProducts + 0.55003060492603 * 
S_MntSweetProducts + -0.81895769875154 * S_NumCatalogPurchases + -0.73905791041531 * 
S_NumWebPurchases + -0.05892830686928 * S_RFMstat + -2.20288127458579 * S_RMntFrq + 
0.31097790354738 * S_Recency ;
1591409   +   H11  = H11  +    -0.15769833524163 * G_Marital_Status0
1591410   +          +    -0.63616832118402 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.15769833524163 * G_Marital_Status0 + -0.63616832118402 * 
G_Marital_Status1 ;
1591411   +   H12  = H12  +    -0.02031957824974 * G_Marital_Status0
1591412   +          +    -0.05261414754191 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.02031957824974 * G_Marital_Status0 + -0.05261414754191 * 
G_Marital_Status1 ;
1591413   +   H13  = H13  +    -0.66558713728702 * G_Marital_Status0
1591414   +          +    -0.01155707859856 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.66558713728702 * G_Marital_Status0 + -0.01155707859856 * 
G_Marital_Status1 ;
1591415   +   H14  = H14  +     0.12565386008933 * G_Marital_Status0
1591416   +          +     0.07125401506996 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.12565386008933 * G_Marital_Status0 + 0.07125401506996 * 
G_Marital_Status1 ;
1591417   +   H11  =    -0.47940901026517 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.47940901026517 + H11 ;
1591418   +   H12  =     0.72706446657517 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.72706446657517 + H12 ;
1591419   +   H13  =     2.64976292189629 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 2.64976292189629 + H13 ;
1591420   +   H14  =     0.18030319416595 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.18030319416595 + H14 ;
1591421   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1591422   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1591423   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1591424   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1591425   +END;
MPRINT(EM_DIAGRAM):   END;
1591426   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1591427   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1591428   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1591429   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1591430   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1591431   +END;
MPRINT(EM_DIAGRAM):   END;
1591432   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1591433   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1591434   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1591435   +
1591436   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1591437   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1591438   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1591439   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1591440   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1591441   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1591442   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1591443   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1591444   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1591445   +end;
MPRINT(EM_DIAGRAM):   end;
1591446   +else do;
MPRINT(EM_DIAGRAM):   else do;
1591447   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1591448   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1591449   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1591450   +   end;
MPRINT(EM_DIAGRAM):   end;
1591451   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1591452   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1591453   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1591454   +   end;
MPRINT(EM_DIAGRAM):   end;
1591455   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1591456   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1591457   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1591458   +   end;
MPRINT(EM_DIAGRAM):   end;
1591459   +end;
MPRINT(EM_DIAGRAM):   end;
1591460   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1591461   +   P_DepVar1  =    -2.16840231556862 * H11  +    -2.67201260012597 * H12
1591462   +          +    -4.82460682607153 * H13  +    -2.93480893396507 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.16840231556862 * H11 + -2.67201260012597 * H12 + 
-4.82460682607153 * H13 + -2.93480893396507 * H14 ;
1591463   +   P_DepVar1  =     1.13227729187339 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.13227729187339 + P_DepVar1 ;
1591464   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1591465   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1591466   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1591467   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1591468   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1591469   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1591470   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1591471   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1591472   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1591473   +END;
MPRINT(EM_DIAGRAM):   END;
1591474   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1591475   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1591476   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1591477   +END;
MPRINT(EM_DIAGRAM):   END;
1591478   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1591479   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1591480   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1591481   +END;
MPRINT(EM_DIAGRAM):   END;
1591482   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1591483   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1591484   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1591485   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1591486   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1591487   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1591488   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1591489   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1591490   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1591491   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1591492   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1591493   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1591494   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1591495   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1591496   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1591497   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1591498   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1591499   +END;
MPRINT(EM_DIAGRAM):   END;
1591500   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1591501   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1591502   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1591503   +drop
1591504   +H11
1591505   +H12
1591506   +H13
1591507   +H14
1591508   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1591509   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1591510   +* Renaming variables for Neural26;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural26;
1591511   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1591512   +* Renaming Posterior variables for Neural26;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural26;
1591513   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1591514   +drop Neural26_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural26_P_DepVar1;
1591515   +Neural26_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural26_P_DepVar1 = P_DepVar1;
1591516   +drop Neural26_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural26_P_DepVar0;
1591517   +Neural26_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural26_P_DepVar0 = P_DepVar0;
1591518   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1591519   +* Renaming _WARN_ variable for Neural26;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural26;
1591520   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1591521   +length Neural26_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural26_WARN_ $4;
1591522   +drop Neural26_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural26_WARN_;
1591523   +Neural26_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural26_WARN_ = _WARN_;
1591524   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1591525   +* Ensmbl8: Scoring Code of model 2 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl8: Scoring Code of model 2 of 3;
1591526   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1591527   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1591528   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1591529   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1591530   +* NODE: Neural28;
MPRINT(EM_DIAGRAM):   * NODE: Neural28;
1591531   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1591532   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1591533   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1591534   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1591535   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1591536   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1591537   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1591538   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1591539   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1591540   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1591541   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1591542   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1591543   +LENGTH _WARN_ $4
1591544   +      F_DepVar  $ 12
1591545   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1591546   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1591547   +
1591548   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1591549   +
1591550   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1591551   +
1591552   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1591553   +
1591554   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1591555   +
1591556   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1591557   +
1591558   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1591559   +
1591560   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1591561   +
1591562   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1591563   +
1591564   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1591565   +
1591566   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1591567   +
1591568   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1591569   +
1591570   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1591571   +
1591572   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1591573   +
1591574   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1591575   +
1591576   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1591577   +
1591578   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1591579   +
1591580   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1591581   +
1591582   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1591583   +
1591584   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1591585   +
1591586   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1591587   +
1591588   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1591589   +
1591590   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1591591   +
1591592   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1591593   +
1591594   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1591595   +
1591596   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1591597   +
1591598   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1591599   +
1591600   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1591601   +
1591602   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1591603   +
1591604   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1591605   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1591606   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1591607   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1591608   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1591609   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1591610   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1591611   +end;
MPRINT(EM_DIAGRAM):   end;
1591612   +else do;
MPRINT(EM_DIAGRAM):   else do;
1591613   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1591614   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1591615   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1591616   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1591617   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1591618   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1591619   +   end;
MPRINT(EM_DIAGRAM):   end;
1591620   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1591621   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1591622   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1591623   +   end;
MPRINT(EM_DIAGRAM):   end;
1591624   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1591625   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1591626   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1591627   +   end;
MPRINT(EM_DIAGRAM):   end;
1591628   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1591629   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1591630   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1591631   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1591632   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1591633   +   end;
MPRINT(EM_DIAGRAM):   end;
1591634   +end;
MPRINT(EM_DIAGRAM):   end;
1591635   +
1591636   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1591637   +*** Checking missing input Interval
1591638   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1591639   +
1591640   +IF NMISS(
1591641   +   AcceptedCmpTotal ,
1591642   +   Frq ,
1591643   +   Income ,
1591644   +   Mnt ,
1591645   +   MntFruits ,
1591646   +   MntGoldProds ,
1591647   +   MntMeatProducts ,
1591648   +   MntSweetProducts ,
1591649   +   NumCatalogPurchases ,
1591650   +   NumWebPurchases ,
1591651   +   RFMstat ,
1591652   +   RMntFrq ,
1591653   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntFruits , 
MntGoldProds , MntMeatProducts , MntSweetProducts , NumCatalogPurchases , NumWebPurchases , 
RFMstat , RMntFrq , Recency ) THEN DO;
1591654   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1591655   +
1591656   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1591657   +END;
MPRINT(EM_DIAGRAM):   END;
1591658   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1591659   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1591660   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1591661   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1591662   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1591663   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1591664   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1591665   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1591666   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1591667   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1591668   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1591669   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1591670   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1591671   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1591672   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1591673   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1591674   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1591675   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1591676   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1591677   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1591678   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1591679   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1591680   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1591681   +END;
MPRINT(EM_DIAGRAM):   END;
1591682   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1591683   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1591684   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1591685   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1591686   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1591687   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1591688   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1591689   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1591690   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1591691   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1591692   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1591693   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1591694   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1591695   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1591696   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1591697   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1591698   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1591699   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1591700   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1591701   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1591702   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1591703   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1591704   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1591705   +   ELSE S_NumCatalogPurchases
1591706   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1591707   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1591708   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1591709   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1591710   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1591711   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1591712   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1591713   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1591714   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1591715   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1591716   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1591717   +END;
MPRINT(EM_DIAGRAM):   END;
1591718   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1591719   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1591720   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1591721   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1591722   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1591723   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1591724   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1591725   +   H11  =     0.82631693872377 * S_AcceptedCmpTotal  +    -0.72798667283699 *
1591726   +        S_Frq  +     0.15911649036122 * S_Income  +    -0.60456350734571 *
1591727   +        S_Mnt  +    -0.74377544096034 * S_MntFruits  +    -0.12263914971644 *
1591728   +        S_MntGoldProds  +     0.17677796203072 * S_MntMeatProducts
1591729   +          +    -0.50748691839629 * S_MntSweetProducts
1591730   +          +     0.64296516693494 * S_NumCatalogPurchases
1591731   +          +     1.28350004565407 * S_NumWebPurchases
1591732   +          +     0.21030868312225 * S_RFMstat  +    -0.39695828920844 *
1591733   +        S_RMntFrq  +    -0.89895080438896 * S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = 0.82631693872377 * S_AcceptedCmpTotal + -0.72798667283699 * S_Frq 
+ 0.15911649036122 * S_Income + -0.60456350734571 * S_Mnt + -0.74377544096034 * S_MntFruits + 
-0.12263914971644 * S_MntGoldProds + 0.17677796203072 * S_MntMeatProducts + -0.50748691839629 
* S_MntSweetProducts + 0.64296516693494 * S_NumCatalogPurchases + 1.28350004565407 * 
S_NumWebPurchases + 0.21030868312225 * S_RFMstat + -0.39695828920844 * S_RMntFrq + 
-0.89895080438896 * S_Recency ;
1591734   +   H12  =     0.11667862669372 * S_AcceptedCmpTotal  +    -1.01106011934145 *
1591735   +        S_Frq  +    -0.17716076384549 * S_Income  +    -0.24293226300477 *
1591736   +        S_Mnt  +     -0.0787175302374 * S_MntFruits  +     0.00532047873906 *
1591737   +        S_MntGoldProds  +     1.29466535738179 * S_MntMeatProducts
1591738   +          +     0.17384010941361 * S_MntSweetProducts
1591739   +          +     0.92948439877935 * S_NumCatalogPurchases
1591740   +          +     0.22516927332959 * S_NumWebPurchases
1591741   +          +     0.05028067999269 * S_RFMstat  +     0.78999743446302 *
1591742   +        S_RMntFrq  +    -0.20939117765596 * S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = 0.11667862669372 * S_AcceptedCmpTotal + -1.01106011934145 * S_Frq 
+ -0.17716076384549 * S_Income + -0.24293226300477 * S_Mnt + -0.0787175302374 * S_MntFruits + 
0.00532047873906 * S_MntGoldProds + 1.29466535738179 * S_MntMeatProducts + 0.17384010941361 * 
S_MntSweetProducts + 0.92948439877935 * S_NumCatalogPurchases + 0.22516927332959 * 
S_NumWebPurchases + 0.05028067999269 * S_RFMstat + 0.78999743446302 * S_RMntFrq + 
-0.20939117765596 * S_Recency ;
1591743   +   H13  =     0.04357769443186 * S_AcceptedCmpTotal  +     0.15406703269953 *
1591744   +        S_Frq  +     0.30195133876726 * S_Income  +     0.28819360890276 *
1591745   +        S_Mnt  +     0.09892781576641 * S_MntFruits  +     0.49225212949739 *
1591746   +        S_MntGoldProds  +     0.29770764897396 * S_MntMeatProducts
1591747   +          +     -0.2000873376449 * S_MntSweetProducts
1591748   +          +     0.12566784354514 * S_NumCatalogPurchases
1591749   +          +     0.02104112723179 * S_NumWebPurchases
1591750   +          +    -0.43415514019088 * S_RFMstat  +    -0.17022294749993 *
1591751   +        S_RMntFrq  +     0.30357171575981 * S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = 0.04357769443186 * S_AcceptedCmpTotal + 0.15406703269953 * S_Frq + 
0.30195133876726 * S_Income + 0.28819360890276 * S_Mnt + 0.09892781576641 * S_MntFruits + 
0.49225212949739 * S_MntGoldProds + 0.29770764897396 * S_MntMeatProducts + -0.2000873376449 * 
S_MntSweetProducts + 0.12566784354514 * S_NumCatalogPurchases + 0.02104112723179 * 
S_NumWebPurchases + -0.43415514019088 * S_RFMstat + -0.17022294749993 * S_RMntFrq + 
0.30357171575981 * S_Recency ;
1591752   +   H14  =     0.89017550554492 * S_AcceptedCmpTotal  +    -1.24866436391906 *
1591753   +        S_Frq  +    -0.83458596455814 * S_Income  +    -0.66942952173326 *
1591754   +        S_Mnt  +    -0.22543485387319 * S_MntFruits  +    -0.10688181972933 *
1591755   +        S_MntGoldProds  +     0.85050982143614 * S_MntMeatProducts
1591756   +          +     0.12117759215087 * S_MntSweetProducts
1591757   +          +     0.80203773582494 * S_NumCatalogPurchases
1591758   +          +     0.17374160185958 * S_NumWebPurchases
1591759   +          +    -0.12855081884938 * S_RFMstat  +     0.45921570261849 *
1591760   +        S_RMntFrq  +    -1.09092321008268 * S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = 0.89017550554492 * S_AcceptedCmpTotal + -1.24866436391906 * S_Frq 
+ -0.83458596455814 * S_Income + -0.66942952173326 * S_Mnt + -0.22543485387319 * S_MntFruits + 
-0.10688181972933 * S_MntGoldProds + 0.85050982143614 * S_MntMeatProducts + 0.12117759215087 * 
S_MntSweetProducts + 0.80203773582494 * S_NumCatalogPurchases + 0.17374160185958 * 
S_NumWebPurchases + -0.12855081884938 * S_RFMstat + 0.45921570261849 * S_RMntFrq + 
-1.09092321008268 * S_Recency ;
1591761   +   H15  =    -0.68386094226468 * S_AcceptedCmpTotal  +    -0.44368664779237 *
1591762   +        S_Frq  +    -0.63118593216016 * S_Income  +     -0.8549673235883 *
1591763   +        S_Mnt  +     -0.4174049500068 * S_MntFruits  +    -0.02221537411568 *
1591764   +        S_MntGoldProds  +      0.0634004340553 * S_MntMeatProducts
1591765   +          +      0.2989820991785 * S_MntSweetProducts
1591766   +          +     0.04398783976739 * S_NumCatalogPurchases
1591767   +          +     0.40368640676572 * S_NumWebPurchases
1591768   +          +    -0.50987577368598 * S_RFMstat  +    -0.24616064467414 *
1591769   +        S_RMntFrq  +    -0.01932947962302 * S_Recency ;
MPRINT(EM_DIAGRAM):   H15 = -0.68386094226468 * S_AcceptedCmpTotal + -0.44368664779237 * S_Frq 
+ -0.63118593216016 * S_Income + -0.8549673235883 * S_Mnt + -0.4174049500068 * S_MntFruits + 
-0.02221537411568 * S_MntGoldProds + 0.0634004340553 * S_MntMeatProducts + 0.2989820991785 * 
S_MntSweetProducts + 0.04398783976739 * S_NumCatalogPurchases + 0.40368640676572 * 
S_NumWebPurchases + -0.50987577368598 * S_RFMstat + -0.24616064467414 * S_RMntFrq + 
-0.01932947962302 * S_Recency ;
1591770   +   H16  =    -0.69633356297868 * S_AcceptedCmpTotal  +     0.25580106272723 *
1591771   +        S_Frq  +    -0.15941056497212 * S_Income  +     1.01091236070049 *
1591772   +        S_Mnt  +    -0.16421220259024 * S_MntFruits  +    -0.28158219367628 *
1591773   +        S_MntGoldProds  +    -0.80473865500071 * S_MntMeatProducts
1591774   +          +     0.10950268819222 * S_MntSweetProducts
1591775   +          +    -0.59025524598908 * S_NumCatalogPurchases
1591776   +          +    -0.02069421817896 * S_NumWebPurchases
1591777   +          +     -0.3615429826151 * S_RFMstat  +    -0.41611769964424 *
1591778   +        S_RMntFrq  +     0.96940490611968 * S_Recency ;
MPRINT(EM_DIAGRAM):   H16 = -0.69633356297868 * S_AcceptedCmpTotal + 0.25580106272723 * S_Frq 
+ -0.15941056497212 * S_Income + 1.01091236070049 * S_Mnt + -0.16421220259024 * S_MntFruits + 
-0.28158219367628 * S_MntGoldProds + -0.80473865500071 * S_MntMeatProducts + 0.10950268819222 
* S_MntSweetProducts + -0.59025524598908 * S_NumCatalogPurchases + -0.02069421817896 * 
S_NumWebPurchases + -0.3615429826151 * S_RFMstat + -0.41611769964424 * S_RMntFrq + 
0.96940490611968 * S_Recency ;
1591779   +   H11  = H11  +        0.45545922927 * G_Marital_Status0
1591780   +          +     0.12818067118838 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.45545922927 * G_Marital_Status0 + 0.12818067118838 * 
G_Marital_Status1 ;
1591781   +   H12  = H12  +    -0.20371081343188 * G_Marital_Status0
1591782   +          +      0.0869800653918 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.20371081343188 * G_Marital_Status0 + 0.0869800653918 * 
G_Marital_Status1 ;
1591783   +   H13  = H13  +    -0.33845151454936 * G_Marital_Status0
1591784   +          +    -0.43733288680739 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.33845151454936 * G_Marital_Status0 + -0.43733288680739 * 
G_Marital_Status1 ;
1591785   +   H14  = H14  +     0.11759980770855 * G_Marital_Status0
1591786   +          +    -0.01680808105992 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.11759980770855 * G_Marital_Status0 + -0.01680808105992 * 
G_Marital_Status1 ;
1591787   +   H15  = H15  +    -0.20605143700963 * G_Marital_Status0
1591788   +          +     0.04987739539035 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.20605143700963 * G_Marital_Status0 + 0.04987739539035 * 
G_Marital_Status1 ;
1591789   +   H16  = H16  +    -0.99478088512585 * G_Marital_Status0
1591790   +          +    -0.35983290751115 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.99478088512585 * G_Marital_Status0 + -0.35983290751115 * 
G_Marital_Status1 ;
1591791   +   H11  =    -0.72044866217862 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.72044866217862 + H11 ;
1591792   +   H12  =     0.73797915336977 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.73797915336977 + H12 ;
1591793   +   H13  =     0.82989235994379 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.82989235994379 + H13 ;
1591794   +   H14  =    -0.48103007102008 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.48103007102008 + H14 ;
1591795   +   H15  =     -0.4352791778041 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.4352791778041 + H15 ;
1591796   +   H16  =      2.7027355184778 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 2.7027355184778 + H16 ;
1591797   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1591798   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1591799   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1591800   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1591801   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1591802   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1591803   +END;
MPRINT(EM_DIAGRAM):   END;
1591804   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1591805   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1591806   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1591807   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1591808   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1591809   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1591810   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1591811   +END;
MPRINT(EM_DIAGRAM):   END;
1591812   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1591813   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1591814   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1591815   +
1591816   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1591817   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1591818   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1591819   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1591820   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1591821   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1591822   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1591823   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1591824   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1591825   +end;
MPRINT(EM_DIAGRAM):   end;
1591826   +else do;
MPRINT(EM_DIAGRAM):   else do;
1591827   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1591828   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1591829   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1591830   +   end;
MPRINT(EM_DIAGRAM):   end;
1591831   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1591832   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1591833   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1591834   +   end;
MPRINT(EM_DIAGRAM):   end;
1591835   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1591836   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1591837   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1591838   +   end;
MPRINT(EM_DIAGRAM):   end;
1591839   +end;
MPRINT(EM_DIAGRAM):   end;
1591840   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1591841   +   P_DepVar1  =     1.53646139060035 * H11  +     1.98227889313385 * H12
1591842   +          +     0.69366657666187 * H13  +      1.4458071195477 * H14
1591843   +          +     0.81229467076169 * H15  +     -2.4762533950508 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.53646139060035 * H11 + 1.98227889313385 * H12 + 
0.69366657666187 * H13 + 1.4458071195477 * H14 + 0.81229467076169 * H15 + -2.4762533950508 * 
H16 ;
1591844   +   P_DepVar1  =    -0.95559108382775 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.95559108382775 + P_DepVar1 ;
1591845   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1591846   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1591847   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1591848   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1591849   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1591850   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1591851   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1591852   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1591853   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1591854   +END;
MPRINT(EM_DIAGRAM):   END;
1591855   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1591856   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1591857   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1591858   +END;
MPRINT(EM_DIAGRAM):   END;
1591859   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1591860   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1591861   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1591862   +END;
MPRINT(EM_DIAGRAM):   END;
1591863   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1591864   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1591865   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1591866   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1591867   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1591868   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1591869   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1591870   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1591871   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1591872   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1591873   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1591874   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1591875   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1591876   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1591877   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1591878   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1591879   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1591880   +END;
MPRINT(EM_DIAGRAM):   END;
1591881   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1591882   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1591883   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1591884   +drop
1591885   +H11
1591886   +H12
1591887   +H13
1591888   +H14
1591889   +H15
1591890   +H16
1591891   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1591892   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1591893   +* Renaming variables for Neural28;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural28;
1591894   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1591895   +* Renaming Posterior variables for Neural28;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural28;
1591896   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1591897   +drop Neural28_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural28_P_DepVar1;
1591898   +Neural28_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural28_P_DepVar1 = P_DepVar1;
1591899   +drop Neural28_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural28_P_DepVar0;
1591900   +Neural28_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural28_P_DepVar0 = P_DepVar0;
1591901   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1591902   +* Renaming _WARN_ variable for Neural28;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural28;
1591903   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1591904   +length Neural28_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural28_WARN_ $4;
1591905   +drop Neural28_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural28_WARN_;
1591906   +Neural28_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural28_WARN_ = _WARN_;
1591907   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1591908   +* Ensmbl8: Scoring Code of model 3 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl8: Scoring Code of model 3 of 3;
1591909   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1591910   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1591911   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1591912   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1591913   +* NODE: Neural8;
MPRINT(EM_DIAGRAM):   * NODE: Neural8;
1591914   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1591915   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1591916   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1591917   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1591918   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1591919   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1591920   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1591921   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1591922   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1591923   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1591924   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1591925   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1591926   +LENGTH _WARN_ $4
1591927   +      F_DepVar  $ 12
1591928   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1591929   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1591930   +
1591931   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1591932   +
1591933   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1591934   +
1591935   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1591936   +
1591937   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1591938   +
1591939   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1591940   +
1591941   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1591942   +
1591943   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1591944   +
1591945   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1591946   +
1591947   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1591948   +
1591949   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1591950   +
1591951   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1591952   +
1591953   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1591954   +
1591955   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1591956   +
1591957   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1591958   +
1591959   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1591960   +
1591961   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1591962   +
1591963   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1591964   +
1591965   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1591966   +
1591967   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1591968   +
1591969   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1591970   +
1591971   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
1591972   +
1591973   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1591974   +
1591975   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1591976   +
1591977   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1591978   +
1591979   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1591980   +
1591981   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1591982   +
1591983   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1591984   +
1591985   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1591986   +
1591987   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1591988   +
1591989   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1591990   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1591991   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1591992   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1591993   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1591994   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1591995   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1591996   +end;
MPRINT(EM_DIAGRAM):   end;
1591997   +else do;
MPRINT(EM_DIAGRAM):   else do;
1591998   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1591999   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1592000   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1592001   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1592002   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1592003   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1592004   +   end;
MPRINT(EM_DIAGRAM):   end;
1592005   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1592006   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1592007   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1592008   +   end;
MPRINT(EM_DIAGRAM):   end;
1592009   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1592010   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1592011   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1592012   +   end;
MPRINT(EM_DIAGRAM):   end;
1592013   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1592014   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1592015   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1592016   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1592017   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1592018   +   end;
MPRINT(EM_DIAGRAM):   end;
1592019   +end;
MPRINT(EM_DIAGRAM):   end;
1592020   +
1592021   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1592022   +*** Checking missing input Interval
1592023   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1592024   +
1592025   +IF NMISS(
1592026   +   AcceptedCmpTotal ,
1592027   +   Frq ,
1592028   +   Income ,
1592029   +   Mnt ,
1592030   +   MntFruits ,
1592031   +   MntGoldProds ,
1592032   +   MntMeatProducts ,
1592033   +   MntSweetProducts ,
1592034   +   NumCatalogPurchases ,
1592035   +   NumWebPurchases ,
1592036   +   RFMstat ,
1592037   +   RMntFrq ,
1592038   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntFruits , 
MntGoldProds , MntMeatProducts , MntSweetProducts , NumCatalogPurchases , NumWebPurchases , 
RFMstat , RMntFrq , Recency ) THEN DO;
1592039   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1592040   +
1592041   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1592042   +END;
MPRINT(EM_DIAGRAM):   END;
1592043   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1592044   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1592045   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1592046   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1592047   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1592048   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1592049   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1592050   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1592051   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1592052   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1592053   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1592054   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1592055   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1592056   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1592057   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1592058   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1592059   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1592060   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1592061   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1592062   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1592063   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1592064   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1592065   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1592066   +END;
MPRINT(EM_DIAGRAM):   END;
1592067   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1592068   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1592069   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1592070   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1592071   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1592072   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1592073   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1592074   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1592075   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1592076   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1592077   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1592078   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1592079   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1592080   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1592081   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1592082   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1592083   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1592084   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1592085   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1592086   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1592087   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1592088   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1592089   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1592090   +   ELSE S_NumCatalogPurchases
1592091   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1592092   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1592093   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1592094   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1592095   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1592096   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1592097   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1592098   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1592099   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1592100   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1592101   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1592102   +END;
MPRINT(EM_DIAGRAM):   END;
1592103   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1592104   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1592105   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1592106   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1592107   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1592108   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1592109   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1592110   +   H11  =     0.00179298802892 * S_AcceptedCmpTotal  +     0.01784009275608 *
1592111   +        S_Frq  +     0.69409617936033 * S_Income  +    -0.28641816886809 *
1592112   +        S_Mnt  +     0.21745721720131 * S_MntFruits  +    -0.38924339437831 *
1592113   +        S_MntGoldProds  +     0.48302006424722 * S_MntMeatProducts
1592114   +          +     0.32217287817742 * S_MntSweetProducts
1592115   +          +     0.37317765763795 * S_NumCatalogPurchases
1592116   +          +     0.31712152035565 * S_NumWebPurchases
1592117   +          +    -0.00101711956377 * S_RFMstat  +    -0.50814709993968 *
1592118   +        S_RMntFrq  +     -0.2674878177058 * S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = 0.00179298802892 * S_AcceptedCmpTotal + 0.01784009275608 * S_Frq + 
0.69409617936033 * S_Income + -0.28641816886809 * S_Mnt + 0.21745721720131 * S_MntFruits + 
-0.38924339437831 * S_MntGoldProds + 0.48302006424722 * S_MntMeatProducts + 0.32217287817742 * 
S_MntSweetProducts + 0.37317765763795 * S_NumCatalogPurchases + 0.31712152035565 * 
S_NumWebPurchases + -0.00101711956377 * S_RFMstat + -0.50814709993968 * S_RMntFrq + 
-0.2674878177058 * S_Recency ;
1592119   +   H12  =    -0.13522102699695 * S_AcceptedCmpTotal  +     0.62468738576113 *
1592120   +        S_Frq  +     0.33525631913577 * S_Income  +     0.49596519260867 *
1592121   +        S_Mnt  +    -0.07840703709606 * S_MntFruits  +    -0.13407863606593 *
1592122   +        S_MntGoldProds  +     0.07892036440987 * S_MntMeatProducts
1592123   +          +    -0.19345300638771 * S_MntSweetProducts
1592124   +          +     0.37926806634405 * S_NumCatalogPurchases
1592125   +          +     0.17926711405358 * S_NumWebPurchases
1592126   +          +    -0.56247478537915 * S_RFMstat  +    -0.83222377723575 *
1592127   +        S_RMntFrq  +     0.06152905340066 * S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = -0.13522102699695 * S_AcceptedCmpTotal + 0.62468738576113 * S_Frq 
+ 0.33525631913577 * S_Income + 0.49596519260867 * S_Mnt + -0.07840703709606 * S_MntFruits + 
-0.13407863606593 * S_MntGoldProds + 0.07892036440987 * S_MntMeatProducts + -0.19345300638771 
* S_MntSweetProducts + 0.37926806634405 * S_NumCatalogPurchases + 0.17926711405358 * 
S_NumWebPurchases + -0.56247478537915 * S_RFMstat + -0.83222377723575 * S_RMntFrq + 
0.06152905340066 * S_Recency ;
1592128   +   H13  =     0.52085707566671 * S_AcceptedCmpTotal  +    -0.43119445779869 *
1592129   +        S_Frq  +    -0.38451776725994 * S_Income  +    -0.43893571865073 *
1592130   +        S_Mnt  +    -0.18147736658896 * S_MntFruits  +    -0.02759924916073 *
1592131   +        S_MntGoldProds  +     0.41710329802839 * S_MntMeatProducts
1592132   +          +    -0.11238728777733 * S_MntSweetProducts
1592133   +          +     0.39955878063516 * S_NumCatalogPurchases
1592134   +          +     0.37701883017309 * S_NumWebPurchases
1592135   +          +    -0.03011513977353 * S_RFMstat  +     0.05558894855861 *
1592136   +        S_RMntFrq  +    -0.53097904952065 * S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = 0.52085707566671 * S_AcceptedCmpTotal + -0.43119445779869 * S_Frq 
+ -0.38451776725994 * S_Income + -0.43893571865073 * S_Mnt + -0.18147736658896 * S_MntFruits + 
-0.02759924916073 * S_MntGoldProds + 0.41710329802839 * S_MntMeatProducts + -0.11238728777733 
* S_MntSweetProducts + 0.39955878063516 * S_NumCatalogPurchases + 0.37701883017309 * 
S_NumWebPurchases + -0.03011513977353 * S_RFMstat + 0.05558894855861 * S_RMntFrq + 
-0.53097904952065 * S_Recency ;
1592137   +   H14  =     0.01011198652387 * S_AcceptedCmpTotal  +     0.50914419302954 *
1592138   +        S_Frq  +     0.36935051571942 * S_Income  +    -0.14541266632981 *
1592139   +        S_Mnt  +     0.70809835135242 * S_MntFruits  +     0.17636828127553 *
1592140   +        S_MntGoldProds  +    -0.39065133922684 * S_MntMeatProducts
1592141   +          +      0.2693109494597 * S_MntSweetProducts
1592142   +          +      0.1081864929712 * S_NumCatalogPurchases
1592143   +          +     0.04463189601793 * S_NumWebPurchases
1592144   +          +     0.17598396305598 * S_RFMstat  +    -0.26428585222285 *
1592145   +        S_RMntFrq  +    -0.35066600356743 * S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = 0.01011198652387 * S_AcceptedCmpTotal + 0.50914419302954 * S_Frq + 
0.36935051571942 * S_Income + -0.14541266632981 * S_Mnt + 0.70809835135242 * S_MntFruits + 
0.17636828127553 * S_MntGoldProds + -0.39065133922684 * S_MntMeatProducts + 0.2693109494597 * 
S_MntSweetProducts + 0.1081864929712 * S_NumCatalogPurchases + 0.04463189601793 * 
S_NumWebPurchases + 0.17598396305598 * S_RFMstat + -0.26428585222285 * S_RMntFrq + 
-0.35066600356743 * S_Recency ;
1592146   +   H15  =     0.25974646459449 * S_AcceptedCmpTotal  +    -0.01084764302849 *
1592147   +        S_Frq  +    -0.25453296848623 * S_Income  +    -0.24485320547361 *
1592148   +        S_Mnt  +      0.3523119885561 * S_MntFruits  +    -0.23948230282173 *
1592149   +        S_MntGoldProds  +    -0.61077291955379 * S_MntMeatProducts
1592150   +          +     0.69250340520766 * S_MntSweetProducts
1592151   +          +    -0.92476508978686 * S_NumCatalogPurchases
1592152   +          +    -0.85062812213631 * S_NumWebPurchases
1592153   +          +    -0.13668170504261 * S_RFMstat  +    -0.39159958659757 *
1592154   +        S_RMntFrq  +     0.31541831647045 * S_Recency ;
MPRINT(EM_DIAGRAM):   H15 = 0.25974646459449 * S_AcceptedCmpTotal + -0.01084764302849 * S_Frq 
+ -0.25453296848623 * S_Income + -0.24485320547361 * S_Mnt + 0.3523119885561 * S_MntFruits + 
-0.23948230282173 * S_MntGoldProds + -0.61077291955379 * S_MntMeatProducts + 0.69250340520766 
* S_MntSweetProducts + -0.92476508978686 * S_NumCatalogPurchases + -0.85062812213631 * 
S_NumWebPurchases + -0.13668170504261 * S_RFMstat + -0.39159958659757 * S_RMntFrq + 
0.31541831647045 * S_Recency ;
1592155   +   H16  =     0.30881424897223 * S_AcceptedCmpTotal  +      0.2794364053658 *
1592156   +        S_Frq  +    -0.13255692208785 * S_Income  +      0.1084623497397 *
1592157   +        S_Mnt  +    -0.21377822064675 * S_MntFruits  +     0.66167304100171 *
1592158   +        S_MntGoldProds  +    -0.18059030828344 * S_MntMeatProducts
1592159   +          +      0.1342841887454 * S_MntSweetProducts
1592160   +          +    -0.35353451726224 * S_NumCatalogPurchases
1592161   +          +     0.19726071632213 * S_NumWebPurchases
1592162   +          +    -0.67773182477521 * S_RFMstat  +    -0.05559124023026 *
1592163   +        S_RMntFrq  +     0.29135046009186 * S_Recency ;
MPRINT(EM_DIAGRAM):   H16 = 0.30881424897223 * S_AcceptedCmpTotal + 0.2794364053658 * S_Frq + 
-0.13255692208785 * S_Income + 0.1084623497397 * S_Mnt + -0.21377822064675 * S_MntFruits + 
0.66167304100171 * S_MntGoldProds + -0.18059030828344 * S_MntMeatProducts + 0.1342841887454 * 
S_MntSweetProducts + -0.35353451726224 * S_NumCatalogPurchases + 0.19726071632213 * 
S_NumWebPurchases + -0.67773182477521 * S_RFMstat + -0.05559124023026 * S_RMntFrq + 
0.29135046009186 * S_Recency ;
1592164   +   H17  =    -0.56474657283939 * S_AcceptedCmpTotal  +     0.49714469636668 *
1592165   +        S_Frq  +     0.38873911121939 * S_Income  +     0.18672296356038 *
1592166   +        S_Mnt  +    -0.12290033905766 * S_MntFruits  +    -0.55117454621073 *
1592167   +        S_MntGoldProds  +    -0.34157249684624 * S_MntMeatProducts
1592168   +          +    -0.03878223698579 * S_MntSweetProducts
1592169   +          +    -0.44318159654535 * S_NumCatalogPurchases
1592170   +          +     0.28629379958053 * S_NumWebPurchases
1592171   +          +    -0.33628587814816 * S_RFMstat  +     0.01539005969109 *
1592172   +        S_RMntFrq  +      0.4669281349511 * S_Recency ;
MPRINT(EM_DIAGRAM):   H17 = -0.56474657283939 * S_AcceptedCmpTotal + 0.49714469636668 * S_Frq 
+ 0.38873911121939 * S_Income + 0.18672296356038 * S_Mnt + -0.12290033905766 * S_MntFruits + 
-0.55117454621073 * S_MntGoldProds + -0.34157249684624 * S_MntMeatProducts + -0.03878223698579 
* S_MntSweetProducts + -0.44318159654535 * S_NumCatalogPurchases + 0.28629379958053 * 
S_NumWebPurchases + -0.33628587814816 * S_RFMstat + 0.01539005969109 * S_RMntFrq + 
0.4669281349511 * S_Recency ;
1592173   +   H11  = H11  +     0.54366812821853 * G_Marital_Status0
1592174   +          +    -0.24270884269566 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.54366812821853 * G_Marital_Status0 + -0.24270884269566 * 
G_Marital_Status1 ;
1592175   +   H12  = H12  +     0.12201873252315 * G_Marital_Status0
1592176   +          +      0.2708540168877 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.12201873252315 * G_Marital_Status0 + 0.2708540168877 * 
G_Marital_Status1 ;
1592177   +   H13  = H13  +     0.21773390953206 * G_Marital_Status0
1592178   +          +      0.1849184915243 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.21773390953206 * G_Marital_Status0 + 0.1849184915243 * 
G_Marital_Status1 ;
1592179   +   H14  = H14  +     0.42359989920789 * G_Marital_Status0
1592180   +          +     -0.0427682060318 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.42359989920789 * G_Marital_Status0 + -0.0427682060318 * 
G_Marital_Status1 ;
1592181   +   H15  = H15  +     0.39852794737212 * G_Marital_Status0
1592182   +          +      0.4834959104522 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.39852794737212 * G_Marital_Status0 + 0.4834959104522 * 
G_Marital_Status1 ;
1592183   +   H16  = H16  +     0.34117172602716 * G_Marital_Status0
1592184   +          +     0.01719507366738 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.34117172602716 * G_Marital_Status0 + 0.01719507366738 * 
G_Marital_Status1 ;
1592185   +   H17  = H17  +    -0.48271020073977 * G_Marital_Status0
1592186   +          +    -0.38643265086902 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.48271020073977 * G_Marital_Status0 + -0.38643265086902 * 
G_Marital_Status1 ;
1592187   +   H11  =    -1.92887755316705 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.92887755316705 + H11 ;
1592188   +   H12  =     1.10580453552439 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.10580453552439 + H12 ;
1592189   +   H13  =     -0.0396459221076 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.0396459221076 + H13 ;
1592190   +   H14  =    -0.24030684440152 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.24030684440152 + H14 ;
1592191   +   H15  =    -1.57024900687106 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -1.57024900687106 + H15 ;
1592192   +   H16  =    -0.33224481657704 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.33224481657704 + H16 ;
1592193   +   H17  =     1.22710614099789 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = 1.22710614099789 + H17 ;
1592194   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1592195   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1592196   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1592197   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1592198   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1592199   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1592200   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
1592201   +END;
MPRINT(EM_DIAGRAM):   END;
1592202   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1592203   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1592204   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1592205   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1592206   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1592207   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1592208   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1592209   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
1592210   +END;
MPRINT(EM_DIAGRAM):   END;
1592211   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1592212   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1592213   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1592214   +
1592215   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1592216   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1592217   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1592218   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1592219   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1592220   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1592221   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1592222   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1592223   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1592224   +end;
MPRINT(EM_DIAGRAM):   end;
1592225   +else do;
MPRINT(EM_DIAGRAM):   else do;
1592226   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1592227   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1592228   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1592229   +   end;
MPRINT(EM_DIAGRAM):   end;
1592230   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1592231   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1592232   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1592233   +   end;
MPRINT(EM_DIAGRAM):   end;
1592234   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1592235   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1592236   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1592237   +   end;
MPRINT(EM_DIAGRAM):   end;
1592238   +end;
MPRINT(EM_DIAGRAM):   end;
1592239   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1592240   +   P_DepVar1  =     1.21462455419854 * H11  +    -0.32480789724651 * H12
1592241   +          +     2.96475008226038 * H13  +     -0.7919726093423 * H14
1592242   +          +    -2.29353966226595 * H15  +     -0.7223088500433 * H16
1592243   +          +    -2.44182031584859 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.21462455419854 * H11 + -0.32480789724651 * H12 + 
2.96475008226038 * H13 + -0.7919726093423 * H14 + -2.29353966226595 * H15 + -0.7223088500433 * 
H16 + -2.44182031584859 * H17 ;
1592244   +   P_DepVar1  =    -1.63832895249218 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.63832895249218 + P_DepVar1 ;
1592245   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1592246   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1592247   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1592248   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1592249   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1592250   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1592251   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1592252   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1592253   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1592254   +END;
MPRINT(EM_DIAGRAM):   END;
1592255   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1592256   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1592257   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1592258   +END;
MPRINT(EM_DIAGRAM):   END;
1592259   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1592260   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1592261   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1592262   +END;
MPRINT(EM_DIAGRAM):   END;
1592263   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1592264   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1592265   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1592266   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1592267   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1592268   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1592269   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1592270   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1592271   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1592272   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1592273   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1592274   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1592275   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1592276   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1592277   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1592278   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1592279   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1592280   +END;
MPRINT(EM_DIAGRAM):   END;
1592281   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1592282   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1592283   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1592284   +drop
1592285   +H11
1592286   +H12
1592287   +H13
1592288   +H14
1592289   +H15
1592290   +H16
1592291   +H17
1592292   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
1592293   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1592294   +* Renaming variables for Neural8;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural8;
1592295   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1592296   +* Renaming Posterior variables for Neural8;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural8;
1592297   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1592298   +drop Neural8_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural8_P_DepVar1;
1592299   +Neural8_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural8_P_DepVar1 = P_DepVar1;
1592300   +drop Neural8_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural8_P_DepVar0;
1592301   +Neural8_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural8_P_DepVar0 = P_DepVar0;
1592302   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1592303   +* Renaming _WARN_ variable for Neural8;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural8;
1592304   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1592305   +length Neural8_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural8_WARN_ $4;
1592306   +drop Neural8_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural8_WARN_;
1592307   +Neural8_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural8_WARN_ = _WARN_;
1592308   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1592309   +* Ensmbl8: Average Posteriors of 3 models;
MPRINT(EM_DIAGRAM):   * Ensmbl8: Average Posteriors of 3 models;
1592310   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1592311   +P_DepVar1 = (
1592312   +Neural26_P_DepVar1 +
1592313   +Neural28_P_DepVar1 +
1592314   +Neural8_P_DepVar1
1592315   +)/3;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( Neural26_P_DepVar1 + Neural28_P_DepVar1 + 
Neural8_P_DepVar1 )/3;
1592316   +P_DepVar0 = (
1592317   +Neural26_P_DepVar0 +
1592318   +Neural28_P_DepVar0 +
1592319   +Neural8_P_DepVar0
1592320   +)/3;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( Neural26_P_DepVar0 + Neural28_P_DepVar0 + 
Neural8_P_DepVar0 )/3;
1592321   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1592322   +* Ensmbl8: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl8: Computing Classification Vars;
1592323   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1592324   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
1592325   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
1592326   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
1592327   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
1592328   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
1592329   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
1592330   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
1592331   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
1592332   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
1592333   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
1592334   +end;
MPRINT(EM_DIAGRAM):   end;
1592335   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
1592336   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
1592337   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
1592338   +end;
MPRINT(EM_DIAGRAM):   end;
1592339   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1592340   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1592341   +* Ensmbl8: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl8: Producing Unformatted variable;
1592342   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1592343   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1592344   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1592345   +else
1592346   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1592347   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1592348   +* Ensmbl8: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl8: Computing _WARN_ Variable;
1592349   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1592350   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1592351   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1592352   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1592353   +if index(NEURAL26_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1592353  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL26_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1592354   +if index(NEURAL26_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1592354  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL26_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1592355   +if index(NEURAL26_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1592355  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL26_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1592356   +if index(NEURAL26_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1592356  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL26_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1592357   +if index(NEURAL28_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1592357  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL28_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1592358   +if index(NEURAL28_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1592358  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL28_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1592359   +if index(NEURAL28_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1592359  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL28_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1592360   +if index(NEURAL28_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1592360  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL28_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1592361   +if index(NEURAL8_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL8_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1592362   +if index(NEURAL8_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL8_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1592363   +if index(NEURAL8_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL8_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1592364   +if index(NEURAL8_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL8_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1592365   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1592366   +* Ensmbl8: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl8: Computing Residual Vars;
1592367   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1592368   +if
1592369   +F_DepVar NE '1'
1592370   +AND F_DepVar NE '0'
1592371   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
1592372   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1592373   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1592374   +end;
MPRINT(EM_DIAGRAM):   end;
1592375   +else do;
MPRINT(EM_DIAGRAM):   else do;
1592376   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
1592377   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
1592378   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
1592379   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
1592380   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
1592381   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
1592382   +END;
MPRINT(EM_DIAGRAM):   END;
1592383   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1592384    run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL8_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.NEURAL26_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1592385    quit;
1592386    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl8_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of 
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error" 
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_= 
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train: 
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl8_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl8_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of 
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error" 
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_= 
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid: 
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl8_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl8_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
1592446    filename _pref
1592446  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural26\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural26\EMPUBLISHSCORE.sas";
1592447    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1592448    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural26\EMPUBLISHSCORE.sas.
1592449   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1592450   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1592451   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1592452   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1592453   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1592454   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1592455   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1592456   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1592457   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1592458   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1592459   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1592460   +LENGTH _WARN_ $4
1592461   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1592462   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1592463   +
1592464   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1592465   +
1592466   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1592467   +
1592468   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1592469   +
1592470   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1592471   +
1592472   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1592473   +
1592474   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1592475   +
1592476   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1592477   +
1592478   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1592479   +
1592480   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1592481   +
1592482   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1592483   +
1592484   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1592485   +
1592486   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1592487   +
1592488   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1592489   +
1592490   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1592491   +
1592492   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1592493   +
1592494   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1592495   +
1592496   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1592497   +
1592498   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1592499   +
1592500   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1592501   +
1592502   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1592503   +
1592504   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1592505   +
1592506   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1592507   +
1592508   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1592509   +
1592510   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1592511   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1592512   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1592513   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1592514   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1592515   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1592516   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1592517   +end;
MPRINT(EM_DIAGRAM):   end;
1592518   +else do;
MPRINT(EM_DIAGRAM):   else do;
1592519   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1592520   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1592521   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1592522   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1592523   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1592524   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1592525   +   end;
MPRINT(EM_DIAGRAM):   end;
1592526   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1592527   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1592528   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1592529   +   end;
MPRINT(EM_DIAGRAM):   end;
1592530   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1592531   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1592532   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1592533   +   end;
MPRINT(EM_DIAGRAM):   end;
1592534   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1592535   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1592536   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1592537   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1592538   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1592539   +   end;
MPRINT(EM_DIAGRAM):   end;
1592540   +end;
MPRINT(EM_DIAGRAM):   end;
1592541   +
1592542   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1592543   +*** Checking missing input Interval
1592544   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1592545   +
1592546   +IF NMISS(
1592547   +   AcceptedCmpTotal ,
1592548   +   Frq ,
1592549   +   Income ,
1592550   +   Mnt ,
1592551   +   MntFruits ,
1592552   +   MntGoldProds ,
1592553   +   MntMeatProducts ,
1592554   +   MntSweetProducts ,
1592555   +   NumCatalogPurchases ,
1592556   +   NumWebPurchases ,
1592557   +   RFMstat ,
1592558   +   RMntFrq ,
1592559   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntFruits , 
MntGoldProds , MntMeatProducts , MntSweetProducts , NumCatalogPurchases , NumWebPurchases , 
RFMstat , RMntFrq , Recency ) THEN DO;
1592560   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1592561   +
1592562   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1592563   +END;
MPRINT(EM_DIAGRAM):   END;
1592564   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1592565   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1592566   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1592567   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1592568   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1592569   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1592570   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1592571   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1592572   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1592573   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1592574   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1592575   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1592576   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1592577   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1592578   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1592579   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1592580   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1592581   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1592582   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1592583   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1592584   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1592585   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1592586   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1592587   +END;
MPRINT(EM_DIAGRAM):   END;
1592588   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1592589   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1592590   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1592591   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1592592   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1592593   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1592594   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1592595   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1592596   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1592597   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1592598   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1592599   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1592600   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1592601   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1592602   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1592603   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1592604   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1592605   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1592606   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1592607   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1592608   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1592609   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1592610   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1592611   +   ELSE S_NumCatalogPurchases
1592612   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1592613   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1592614   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1592615   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1592616   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1592617   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1592618   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1592619   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1592620   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1592621   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1592622   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1592623   +END;
MPRINT(EM_DIAGRAM):   END;
1592624   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1592625   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1592626   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1592627   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1592628   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1592629   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1592630   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1592631   +   H11  =    -1.12938466101576 * S_AcceptedCmpTotal  +     0.61534183742192 *
1592632   +        S_Frq  +     0.21605471415782 * S_Income  +     1.00718645972599 *
1592633   +        S_Mnt  +    -0.04712823237951 * S_MntFruits  +    -0.07929121432621 *
1592634   +        S_MntGoldProds  +    -0.41982161110641 * S_MntMeatProducts
1592635   +          +     0.30688676656325 * S_MntSweetProducts
1592636   +          +    -0.31936466951531 * S_NumCatalogPurchases
1592637   +          +    -0.40503981142414 * S_NumWebPurchases
1592638   +          +    -0.00368867286865 * S_RFMstat  +     0.37807775340916 *
1592639   +        S_RMntFrq  +     0.94794577395963 * S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = -1.12938466101576 * S_AcceptedCmpTotal + 0.61534183742192 * S_Frq 
+ 0.21605471415782 * S_Income + 1.00718645972599 * S_Mnt + -0.04712823237951 * S_MntFruits + 
-0.07929121432621 * S_MntGoldProds + -0.41982161110641 * S_MntMeatProducts + 0.30688676656325 
* S_MntSweetProducts + -0.31936466951531 * S_NumCatalogPurchases + -0.40503981142414 * 
S_NumWebPurchases + -0.00368867286865 * S_RFMstat + 0.37807775340916 * S_RMntFrq + 
0.94794577395963 * S_Recency ;
1592640   +   H12  =    -0.12113443728514 * S_AcceptedCmpTotal  +     0.93537745252849 *
1592641   +        S_Frq  +    -0.09891671631341 * S_Income  +     1.99038480756089 *
1592642   +        S_Mnt  +     0.17709370706747 * S_MntFruits  +    -0.26193027989873 *
1592643   +        S_MntGoldProds  +    -1.32538448369411 * S_MntMeatProducts
1592644   +          +    -0.57511617685848 * S_MntSweetProducts
1592645   +          +    -0.80584166120088 * S_NumCatalogPurchases
1592646   +          +    -0.46226595005401 * S_NumWebPurchases
1592647   +          +     0.10198567130706 * S_RFMstat  +     0.21276308472657 *
1592648   +        S_RMntFrq  +     0.20830913301712 * S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = -0.12113443728514 * S_AcceptedCmpTotal + 0.93537745252849 * S_Frq 
+ -0.09891671631341 * S_Income + 1.99038480756089 * S_Mnt + 0.17709370706747 * S_MntFruits + 
-0.26193027989873 * S_MntGoldProds + -1.32538448369411 * S_MntMeatProducts + -0.57511617685848 
* S_MntSweetProducts + -0.80584166120088 * S_NumCatalogPurchases + -0.46226595005401 * 
S_NumWebPurchases + 0.10198567130706 * S_RFMstat + 0.21276308472657 * S_RMntFrq + 
0.20830913301712 * S_Recency ;
1592649   +   H13  =    -0.26642267115951 * S_AcceptedCmpTotal  +    -0.93821950754639 *
1592650   +        S_Frq  +     0.01733680104129 * S_Income  +    -0.34674569831914 *
1592651   +        S_Mnt  +    -0.13141804104196 * S_MntFruits  +    -0.08208570095055 *
1592652   +        S_MntGoldProds  +     0.33076491610846 * S_MntMeatProducts
1592653   +          +     0.13151485846279 * S_MntSweetProducts
1592654   +          +    -0.12544664418198 * S_NumCatalogPurchases
1592655   +          +     0.31794108898576 * S_NumWebPurchases
1592656   +          +    -0.09733881043326 * S_RFMstat  +    -0.55416616488207 *
1592657   +        S_RMntFrq  +      0.6850072112056 * S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = -0.26642267115951 * S_AcceptedCmpTotal + -0.93821950754639 * S_Frq 
+ 0.01733680104129 * S_Income + -0.34674569831914 * S_Mnt + -0.13141804104196 * S_MntFruits + 
-0.08208570095055 * S_MntGoldProds + 0.33076491610846 * S_MntMeatProducts + 0.13151485846279 * 
S_MntSweetProducts + -0.12544664418198 * S_NumCatalogPurchases + 0.31794108898576 * 
S_NumWebPurchases + -0.09733881043326 * S_RFMstat + -0.55416616488207 * S_RMntFrq + 
0.6850072112056 * S_Recency ;
1592658   +   H14  =    -0.26331970415451 * S_AcceptedCmpTotal  +     0.91045762420144 *
1592659   +        S_Frq  +     0.47866760167028 * S_Income  +     1.96822454637646 *
1592660   +        S_Mnt  +     0.37467695392633 * S_MntFruits  +     0.35024846355131 *
1592661   +        S_MntGoldProds  +    -1.12912963812687 * S_MntMeatProducts
1592662   +          +     0.55003060492603 * S_MntSweetProducts
1592663   +          +    -0.81895769875154 * S_NumCatalogPurchases
1592664   +          +    -0.73905791041531 * S_NumWebPurchases
1592665   +          +    -0.05892830686928 * S_RFMstat  +    -2.20288127458579 *
1592666   +        S_RMntFrq  +     0.31097790354738 * S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = -0.26331970415451 * S_AcceptedCmpTotal + 0.91045762420144 * S_Frq 
+ 0.47866760167028 * S_Income + 1.96822454637646 * S_Mnt + 0.37467695392633 * S_MntFruits + 
0.35024846355131 * S_MntGoldProds + -1.12912963812687 * S_MntMeatProducts + 0.55003060492603 * 
S_MntSweetProducts + -0.81895769875154 * S_NumCatalogPurchases + -0.73905791041531 * 
S_NumWebPurchases + -0.05892830686928 * S_RFMstat + -2.20288127458579 * S_RMntFrq + 
0.31097790354738 * S_Recency ;
1592667   +   H11  = H11  +    -0.15769833524163 * G_Marital_Status0
1592668   +          +    -0.63616832118402 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.15769833524163 * G_Marital_Status0 + -0.63616832118402 * 
G_Marital_Status1 ;
1592669   +   H12  = H12  +    -0.02031957824974 * G_Marital_Status0
1592670   +          +    -0.05261414754191 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.02031957824974 * G_Marital_Status0 + -0.05261414754191 * 
G_Marital_Status1 ;
1592671   +   H13  = H13  +    -0.66558713728702 * G_Marital_Status0
1592672   +          +    -0.01155707859856 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.66558713728702 * G_Marital_Status0 + -0.01155707859856 * 
G_Marital_Status1 ;
1592673   +   H14  = H14  +     0.12565386008933 * G_Marital_Status0
1592674   +          +     0.07125401506996 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.12565386008933 * G_Marital_Status0 + 0.07125401506996 * 
G_Marital_Status1 ;
1592675   +   H11  =    -0.47940901026517 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.47940901026517 + H11 ;
1592676   +   H12  =     0.72706446657517 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.72706446657517 + H12 ;
1592677   +   H13  =     2.64976292189629 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 2.64976292189629 + H13 ;
1592678   +   H14  =     0.18030319416595 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.18030319416595 + H14 ;
1592679   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1592680   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1592681   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1592682   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1592683   +END;
MPRINT(EM_DIAGRAM):   END;
1592684   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1592685   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1592686   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1592687   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1592688   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1592689   +END;
MPRINT(EM_DIAGRAM):   END;
1592690   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1592691   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1592692   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1592693   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1592694   +   P_DepVar1  =    -2.16840231556862 * H11  +    -2.67201260012597 * H12
1592695   +          +    -4.82460682607153 * H13  +    -2.93480893396507 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.16840231556862 * H11 + -2.67201260012597 * H12 + 
-4.82460682607153 * H13 + -2.93480893396507 * H14 ;
1592696   +   P_DepVar1  =     1.13227729187339 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.13227729187339 + P_DepVar1 ;
1592697   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1592698   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1592699   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1592700   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1592701   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1592702   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1592703   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1592704   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1592705   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1592706   +END;
MPRINT(EM_DIAGRAM):   END;
1592707   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1592708   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1592709   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1592710   +END;
MPRINT(EM_DIAGRAM):   END;
1592711   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1592712   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1592713   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1592714   +END;
MPRINT(EM_DIAGRAM):   END;
1592715   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1592716   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1592717   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1592718   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1592719   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1592720   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1592721   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1592722   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1592723   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1592724   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1592725   +END;
MPRINT(EM_DIAGRAM):   END;
1592726   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1592727   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1592728   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1592729   +drop
1592730   +H11
1592731   +H12
1592732   +H13
1592733   +H14
1592734   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1592735   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1592736    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1592737    quit;
1592738    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1592739    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1592740    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1592741    retain ID 2 Node "Neural26";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural26";
1592742    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1592743    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 969 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 969 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1592744    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1592745    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1592746    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 969 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 969 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1592747    proc sort data=EMWS8.Neural26_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural26_variableset out=_temp2(keep=NAME CREATOR);
1592748    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1592749    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 15 observations read from the data set EMWS8.NEURAL26_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 15 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1592750    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1592751    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1592752    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1592753    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 15 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 15 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1592754    proc contents data=EMWS8.Neural26_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural26_train out=_meta(keep=NAME) noprint;
1592755    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 54 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1592756    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1592757    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1592758    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 54 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 54 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1592759    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1592760    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1592761    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1592762    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 54 observations read from the data set WORK._META.
NOTE: There were 15 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 54 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1592763    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1592764    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1592764  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 485 rows and 5 columns.

1592765    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1592766    proc append base=EMWS8.Ensmbl8_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl8_FCMP data=_tempx;
1592767    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL8_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 485 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL8_FCMP has 485 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1592768    filename _pref
1592768  ! "C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
1592769    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1592770    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas.
1592771   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1592772   +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
1592773   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1592774   +
1592775   +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
1592776   +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1592777   +
1592778   +
1592779   +/*----G_Marital_Status begin----*/
1592780   +length _NORM8 $ 8;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status begin----*/ length _NORM8 $ 8;
1592781   +_NORM8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _NORM8 = put( Marital_Status , $8. );
1592782   +%DMNORMIP( _NORM8 )
MPRINT(DMNORMIP):   call dmnorm(_NORM8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1592783   +drop _NORM8;
MPRINT(EM_DIAGRAM):   drop _NORM8;
1592784   +select(_NORM8);
MPRINT(EM_DIAGRAM):   select(_NORM8);
1592785   +  when("DIVORCED" ) G_Marital_Status = 1;
MPRINT(EM_DIAGRAM):   when("DIVORCED" ) G_Marital_Status = 1;
1592786   +  when("MARRIED " ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("MARRIED " ) G_Marital_Status = 2;
1592787   +  when("SINGLE  " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("SINGLE  " ) G_Marital_Status = 0;
1592788   +  when("TOGETHER" ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("TOGETHER" ) G_Marital_Status = 2;
1592789   +  when("WIDOW   " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("WIDOW   " ) G_Marital_Status = 0;
1592790   +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
1592791   +end;
MPRINT(EM_DIAGRAM):   end;
1592792   +label G_Marital_Status="Grouped Levels for Marital_Status";
MPRINT(EM_DIAGRAM):   label G_Marital_Status="Grouped Levels for Marital_Status";
1592793   +/*----G_Marital_Status end----*/
1592794   +
1592795   +
1592796   +****************************************;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status end----*/ 
****************************************;
1592797   +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
1592798   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1592799    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1592800    quit;
1592801    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1592802    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1592803    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1592804    retain ID 3 Node "Varsel";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "Varsel";
1592805    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1592806    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1592807    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1592808    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1592809    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1592810    proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
1592811    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1592812    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.VARSEL_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1592813    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1592814    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1592815    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1592816    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1592817    proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
1592818    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1592819    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1592820    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1592821    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 47 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1592822    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1592823    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1592824    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1592825    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 47 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 47 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1592826    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1592827    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1592827  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3 rows and 5 columns.

1592828    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1592829    proc append base=EMWS8.Ensmbl8_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl8_FCMP data=_tempx;
1592830    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL8_FCMP.
NOTE: There were 3 observations read from the data set WORK._TEMPX.
NOTE: 3 observations added.
NOTE: The data set EMWS8.ENSMBL8_FCMP has 488 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1592831    filename _pref
1592831  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1592832    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1592833    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1592834   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1592835   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1592836   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1592837   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1592838   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1592839   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1592840    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1592841    quit;
1592842    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1592843    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1592844    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1592845    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1592846    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1592847    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1592848    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1592849    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1592850    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1592851    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1592852    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1592853    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1592854    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1592855    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1592856    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1592857    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1592858    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1592859    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1592860    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1592861    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1592862    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1592863    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1592864    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1592865    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1592866    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1592867    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1592868    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1592868  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1592869    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1592870    proc append base=EMWS8.Ensmbl8_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl8_FCMP data=_tempx;
1592871    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL8_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL8_FCMP has 492 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1592872    filename _pref
1592872  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1592873    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1592874    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1592875   +
1592876   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1592877   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1592877  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1592878   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1592879   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1592880   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1592881   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1592882   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1592883    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1592884    quit;
1592885    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1592886    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1592887    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1592888    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1592889    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1592890    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1592891    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1592892    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1592893    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1592894    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1592895    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1592896    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1592897    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1592898    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1592899    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1592900    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1592901    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1592902    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1592903    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1592904    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1592905    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1592906    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1592907    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1592908    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1592909    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1592910    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1592911    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1592911  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1592912    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1592913    proc append base=EMWS8.Ensmbl8_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl8_FCMP data=_tempx;
1592914    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL8_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL8_FCMP has 531 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1592915    filename _pref
1592915  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1592916    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1592917    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1592918   +
1592919   +
1592920   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1592921   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1592922   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1592923   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1592924   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1592925   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1592926   +
1592927   +
1592928   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1592929   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1592930   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1592931   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1592932   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1592933   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1592934   +
1592935   +
1592936   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1592937   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1592938   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1592939   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1592940   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1592941   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1592942   +
1592943   +
1592944   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1592945   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1592946   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1592947   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1592948   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1592949   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1592950   +
1592951   +
1592952   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1592953   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1592954   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1592955   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1592956   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1592957   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1592958   +
1592959   +
1592960   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1592961   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1592962   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1592963   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1592964   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1592965   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1592966   +
1592967   +
1592968   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1592969   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1592970   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1592971   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
The SAS System

1592972   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1592973   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1592974   +
1592975   +
1592976   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1592977   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1592978   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1592979   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1592980   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1592981   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1592982   +if
1592983   +_FILTERNORM1 not in ( '.')
1592984   + and
1592985   +_FILTERNORM2 not in ( '.')
1592986   + and
1592987   +_FILTERNORM3 not in ( '.')
1592988   + and
1592989   +_FILTERNORM4 not in ( '.')
1592990   + and
1592991   +_FILTERNORM5 not in ( '.')
1592992   + and
1592993   +_FILTERNORM6 not in ( '.')
1592994   + and
1592995   +_FILTERNORM7 not in ( ' ')
1592996   + and
1592997   +_FILTERNORM8 not in ( ' ')
1592998   +and
1592999   +( Dt_Customer ne .)
1593000   +and ( Income ne . and (Income<=107000))
1593001   +and ( Kidhome ne .)
1593002   +and ( MntFishProducts ne .)
1593003   +and ( MntFruits ne .)
1593004   +and ( MntGoldProds ne .)
1593005   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1593006   +and ( MntSweetProducts ne .)
1593007   +and ( MntWines ne .)
1593008   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1593009   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1593010   +and ( NumStorePurchases ne .)
1593011   +and ( NumWebPurchases ne .)
1593012   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1593013   +and ( Recency ne .)
1593014   +and ( Teenhome ne .)
1593015   +and ( Year_Birth ne .)
1593016   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1593017   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1593018   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1593019   +end;
MPRINT(EM_DIAGRAM):   end;
1593020   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1593021   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1593022    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1593023    quit;
1593024    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1593025    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1593026    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1593027    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1593028    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1593029    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1593030    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1593031    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1593032    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1593033    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1593034    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1593035    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1593036    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1593037    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1593038    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1593039    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1593040    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1593041    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1593042    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1593043    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1593044    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1593045    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1593046    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1593047    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1593048    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1593049    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1593050    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1593050  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1593051    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1593052    proc append base=EMWS8.Ensmbl8_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl8_FCMP data=_tempx;
1593053    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL8_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL8_FCMP has 597 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1593054    %macro varDept(fcmpdata=,id=);
1593055    %global nobs&id scoreFlag&id;
1593056    %let scoreFlag&id = 0;
1593057    %if &id=1 or ^&fcmpStart %then %do;
1593058    proc sort data=&fcmpdata out=_temp&id nodupkey;
1593059    by NAME;
1593060    where id=&id and LHS in( %let j=1;
1593061    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1593062    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1593063    "&var" %let j = %eval(&j+1);
1593064    %end;
1593065    );
1593066    run;
1593067    %let dsid = %sysfunc(open(_temp&id));
1593068    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1593069    %let dsid = %sysfunc(close(&dsid));
1593070    %if &&nobs&id %then %do;
1593071    %let scoreFlag&id = 1;
1593072    %let fcmpStart = 1;
1593073    %end;
1593074    %else %let fcmpStart = 0;
1593075    %end;
1593076    %else %do;
1593077    proc sort data=&fcmpdata out=_tempid;
1593078    where id=&id;
1593079    by LHS;
1593080    run;
1593081    %let dsid = %sysfunc(open(_tempid));
1593082    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1593083    %let dsid = %sysfunc(close(&dsid));
1593084    %if ^&&nobs&id %then %do;
1593085    proc datasets lib=work nolist;
1593086    delete _tempid;
1593087    run;
1593088    quit;
1593089    %end;
1593090    %else %do;
1593091    data _tempAll;
1593092    set %let j=%eval(&id-1);
1593093    %do x=1 %to &j;
1593094    %if &&nobs&x %then %do;
1593095    _temp&x %end;
1593096    %end;
1593097    ;
1593098    run;
1593099    proc sql;
1593100    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1593100  ! work._tempid p2 where p.name=p2.lhs;
1593101    quit;
1593102    data _temp&id;
1593103    set _temp&id;
1593104    where LHS ne '' and NAME ne '' and Node ne '';
1593105    run;
1593106    proc datasets lib=work nolist;
1593107    delete _tempAll;
1593108    run;
1593109    %let dsid = %sysfunc(open(_temp&id));
1593110    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1593111    %let dsid = %sysfunc(close(&dsid));
1593112    %if ^&&nobs&id %then %do;
1593113    proc datasets lib=work nolist;
1593114    delete _temp&id;
1593115    run;
1593116    quit;
1593117    %end;
1593118    %else %do;
1593119    %let scoreFlag&id = 1;
1593120    data _temp&id;
1593121    set _temp&id;
1593122    where LHS ne NAME and node ne '';
1593123    run;
1593124    %let dsid = %sysfunc(open(_temp&id));
1593125    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1593126    %let dsid = %sysfunc(close(&dsid));
1593127    %if ^&&nobs&id %then %do;
1593128    proc datasets lib=work nolist;
1593129    delete _temp&id;
1593130    run;
1593131    quit;
1593132    %end;
1593133    %else %do;
1593134    proc sort data=_temp&id nodupkey;
1593135    by LHS NAME;
1593136    run;
1593137    %end;
1593138    %end;
1593139    %end;
1593140    %end;
1593141    %mend varDept;
1593142    %macro optCode(outdata=fcmpdata);
1593143    %global fcmpStart;
1593144    %let fcmpStart = 0;
1593145    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1593146    %let NumNodes=9;
1593147    %do k=1 %to &NumNodes;
1593148    %vardept(fcmpdata=&outdata, id=&k);
1593149    %end;
1593150    %mend optCode;
1593151    %optcode(outData=EMWS8.Ensmbl8_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl8_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL8_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl8_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 62 observations read from the data set EMWS8.ENSMBL8_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 46 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 16 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl8_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL8_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 3 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 16 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 1 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl8_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL8_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl8_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL8_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 17 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl8_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL8_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 17 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 37 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl8_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL8_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 54 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl8_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL8_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl8_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL8_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1593152    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1593153    set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
1593154    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1593155    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1593156    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1593157    set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
1593158    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1593159    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1593160    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1593161    create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
1593161  ! EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 
p, EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 1 rows and 3 columns.

1593162    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1593163    data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
1593164    set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
1593165    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 1 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1593166    filename _pref
1593166  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural28\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural28\EMPUBLISHSCORE.sas";
1593167    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1593168    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural28\EMPUBLISHSCORE.sas.
1593169   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1593170   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1593171   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1593172   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1593173   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1593174   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1593175   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1593176   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1593177   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1593178   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1593179   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1593180   +LENGTH _WARN_ $4
1593181   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1593182   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1593183   +
1593184   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1593185   +
1593186   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1593187   +
1593188   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1593189   +
1593190   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1593191   +
1593192   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1593193   +
1593194   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1593195   +
1593196   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1593197   +
1593198   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1593199   +
1593200   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1593201   +
1593202   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1593203   +
1593204   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1593205   +
1593206   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1593207   +
1593208   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1593209   +
1593210   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1593211   +
1593212   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1593213   +
1593214   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1593215   +
1593216   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1593217   +
1593218   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1593219   +
1593220   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1593221   +
1593222   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1593223   +
1593224   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1593225   +
1593226   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1593227   +
1593228   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1593229   +
1593230   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1593231   +
1593232   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1593233   +
1593234   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1593235   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1593236   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1593237   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1593238   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1593239   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1593240   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1593241   +end;
MPRINT(EM_DIAGRAM):   end;
1593242   +else do;
MPRINT(EM_DIAGRAM):   else do;
1593243   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1593244   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1593245   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1593246   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1593247   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1593248   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1593249   +   end;
MPRINT(EM_DIAGRAM):   end;
1593250   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1593251   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1593252   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1593253   +   end;
MPRINT(EM_DIAGRAM):   end;
1593254   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1593255   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1593256   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1593257   +   end;
MPRINT(EM_DIAGRAM):   end;
1593258   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1593259   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1593260   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1593261   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1593262   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1593263   +   end;
MPRINT(EM_DIAGRAM):   end;
1593264   +end;
MPRINT(EM_DIAGRAM):   end;
1593265   +
1593266   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1593267   +*** Checking missing input Interval
1593268   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1593269   +
1593270   +IF NMISS(
1593271   +   AcceptedCmpTotal ,
1593272   +   Frq ,
1593273   +   Income ,
1593274   +   Mnt ,
1593275   +   MntFruits ,
1593276   +   MntGoldProds ,
1593277   +   MntMeatProducts ,
1593278   +   MntSweetProducts ,
1593279   +   NumCatalogPurchases ,
1593280   +   NumWebPurchases ,
1593281   +   RFMstat ,
1593282   +   RMntFrq ,
1593283   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntFruits , 
MntGoldProds , MntMeatProducts , MntSweetProducts , NumCatalogPurchases , NumWebPurchases , 
RFMstat , RMntFrq , Recency ) THEN DO;
1593284   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1593285   +
1593286   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1593287   +END;
MPRINT(EM_DIAGRAM):   END;
1593288   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1593289   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1593290   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1593291   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1593292   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1593293   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1593294   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1593295   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1593296   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1593297   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1593298   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1593299   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1593300   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1593301   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1593302   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1593303   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1593304   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1593305   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1593306   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1593307   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1593308   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1593309   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1593310   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1593311   +END;
MPRINT(EM_DIAGRAM):   END;
1593312   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1593313   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1593314   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1593315   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1593316   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1593317   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1593318   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1593319   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1593320   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1593321   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1593322   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1593323   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1593324   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1593325   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1593326   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1593327   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1593328   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1593329   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1593330   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1593331   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1593332   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1593333   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1593334   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1593335   +   ELSE S_NumCatalogPurchases
1593336   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1593337   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1593338   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1593339   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1593340   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1593341   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1593342   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1593343   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1593344   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1593345   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1593346   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1593347   +END;
MPRINT(EM_DIAGRAM):   END;
1593348   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1593349   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1593350   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1593351   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1593352   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1593353   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1593354   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1593355   +   H11  =     0.82631693872377 * S_AcceptedCmpTotal  +    -0.72798667283699 *
1593356   +        S_Frq  +     0.15911649036122 * S_Income  +    -0.60456350734571 *
1593357   +        S_Mnt  +    -0.74377544096034 * S_MntFruits  +    -0.12263914971644 *
1593358   +        S_MntGoldProds  +     0.17677796203072 * S_MntMeatProducts
1593359   +          +    -0.50748691839629 * S_MntSweetProducts
1593360   +          +     0.64296516693494 * S_NumCatalogPurchases
1593361   +          +     1.28350004565407 * S_NumWebPurchases
1593362   +          +     0.21030868312225 * S_RFMstat  +    -0.39695828920844 *
1593363   +        S_RMntFrq  +    -0.89895080438896 * S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = 0.82631693872377 * S_AcceptedCmpTotal + -0.72798667283699 * S_Frq 
+ 0.15911649036122 * S_Income + -0.60456350734571 * S_Mnt + -0.74377544096034 * S_MntFruits + 
-0.12263914971644 * S_MntGoldProds + 0.17677796203072 * S_MntMeatProducts + -0.50748691839629 
* S_MntSweetProducts + 0.64296516693494 * S_NumCatalogPurchases + 1.28350004565407 * 
S_NumWebPurchases + 0.21030868312225 * S_RFMstat + -0.39695828920844 * S_RMntFrq + 
-0.89895080438896 * S_Recency ;
1593364   +   H12  =     0.11667862669372 * S_AcceptedCmpTotal  +    -1.01106011934145 *
1593365   +        S_Frq  +    -0.17716076384549 * S_Income  +    -0.24293226300477 *
1593366   +        S_Mnt  +     -0.0787175302374 * S_MntFruits  +     0.00532047873906 *
1593367   +        S_MntGoldProds  +     1.29466535738179 * S_MntMeatProducts
1593368   +          +     0.17384010941361 * S_MntSweetProducts
1593369   +          +     0.92948439877935 * S_NumCatalogPurchases
1593370   +          +     0.22516927332959 * S_NumWebPurchases
1593371   +          +     0.05028067999269 * S_RFMstat  +     0.78999743446302 *
1593372   +        S_RMntFrq  +    -0.20939117765596 * S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = 0.11667862669372 * S_AcceptedCmpTotal + -1.01106011934145 * S_Frq 
+ -0.17716076384549 * S_Income + -0.24293226300477 * S_Mnt + -0.0787175302374 * S_MntFruits + 
0.00532047873906 * S_MntGoldProds + 1.29466535738179 * S_MntMeatProducts + 0.17384010941361 * 
S_MntSweetProducts + 0.92948439877935 * S_NumCatalogPurchases + 0.22516927332959 * 
S_NumWebPurchases + 0.05028067999269 * S_RFMstat + 0.78999743446302 * S_RMntFrq + 
-0.20939117765596 * S_Recency ;
1593373   +   H13  =     0.04357769443186 * S_AcceptedCmpTotal  +     0.15406703269953 *
1593374   +        S_Frq  +     0.30195133876726 * S_Income  +     0.28819360890276 *
1593375   +        S_Mnt  +     0.09892781576641 * S_MntFruits  +     0.49225212949739 *
1593376   +        S_MntGoldProds  +     0.29770764897396 * S_MntMeatProducts
1593377   +          +     -0.2000873376449 * S_MntSweetProducts
1593378   +          +     0.12566784354514 * S_NumCatalogPurchases
1593379   +          +     0.02104112723179 * S_NumWebPurchases
1593380   +          +    -0.43415514019088 * S_RFMstat  +    -0.17022294749993 *
1593381   +        S_RMntFrq  +     0.30357171575981 * S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = 0.04357769443186 * S_AcceptedCmpTotal + 0.15406703269953 * S_Frq + 
0.30195133876726 * S_Income + 0.28819360890276 * S_Mnt + 0.09892781576641 * S_MntFruits + 
0.49225212949739 * S_MntGoldProds + 0.29770764897396 * S_MntMeatProducts + -0.2000873376449 * 
S_MntSweetProducts + 0.12566784354514 * S_NumCatalogPurchases + 0.02104112723179 * 
S_NumWebPurchases + -0.43415514019088 * S_RFMstat + -0.17022294749993 * S_RMntFrq + 
0.30357171575981 * S_Recency ;
1593382   +   H14  =     0.89017550554492 * S_AcceptedCmpTotal  +    -1.24866436391906 *
1593383   +        S_Frq  +    -0.83458596455814 * S_Income  +    -0.66942952173326 *
1593384   +        S_Mnt  +    -0.22543485387319 * S_MntFruits  +    -0.10688181972933 *
1593385   +        S_MntGoldProds  +     0.85050982143614 * S_MntMeatProducts
1593386   +          +     0.12117759215087 * S_MntSweetProducts
1593387   +          +     0.80203773582494 * S_NumCatalogPurchases
1593388   +          +     0.17374160185958 * S_NumWebPurchases
1593389   +          +    -0.12855081884938 * S_RFMstat  +     0.45921570261849 *
1593390   +        S_RMntFrq  +    -1.09092321008268 * S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = 0.89017550554492 * S_AcceptedCmpTotal + -1.24866436391906 * S_Frq 
+ -0.83458596455814 * S_Income + -0.66942952173326 * S_Mnt + -0.22543485387319 * S_MntFruits + 
-0.10688181972933 * S_MntGoldProds + 0.85050982143614 * S_MntMeatProducts + 0.12117759215087 * 
S_MntSweetProducts + 0.80203773582494 * S_NumCatalogPurchases + 0.17374160185958 * 
S_NumWebPurchases + -0.12855081884938 * S_RFMstat + 0.45921570261849 * S_RMntFrq + 
-1.09092321008268 * S_Recency ;
1593391   +   H15  =    -0.68386094226468 * S_AcceptedCmpTotal  +    -0.44368664779237 *
1593392   +        S_Frq  +    -0.63118593216016 * S_Income  +     -0.8549673235883 *
1593393   +        S_Mnt  +     -0.4174049500068 * S_MntFruits  +    -0.02221537411568 *
1593394   +        S_MntGoldProds  +      0.0634004340553 * S_MntMeatProducts
1593395   +          +      0.2989820991785 * S_MntSweetProducts
1593396   +          +     0.04398783976739 * S_NumCatalogPurchases
1593397   +          +     0.40368640676572 * S_NumWebPurchases
1593398   +          +    -0.50987577368598 * S_RFMstat  +    -0.24616064467414 *
1593399   +        S_RMntFrq  +    -0.01932947962302 * S_Recency ;
MPRINT(EM_DIAGRAM):   H15 = -0.68386094226468 * S_AcceptedCmpTotal + -0.44368664779237 * S_Frq 
+ -0.63118593216016 * S_Income + -0.8549673235883 * S_Mnt + -0.4174049500068 * S_MntFruits + 
-0.02221537411568 * S_MntGoldProds + 0.0634004340553 * S_MntMeatProducts + 0.2989820991785 * 
S_MntSweetProducts + 0.04398783976739 * S_NumCatalogPurchases + 0.40368640676572 * 
S_NumWebPurchases + -0.50987577368598 * S_RFMstat + -0.24616064467414 * S_RMntFrq + 
-0.01932947962302 * S_Recency ;
1593400   +   H16  =    -0.69633356297868 * S_AcceptedCmpTotal  +     0.25580106272723 *
1593401   +        S_Frq  +    -0.15941056497212 * S_Income  +     1.01091236070049 *
1593402   +        S_Mnt  +    -0.16421220259024 * S_MntFruits  +    -0.28158219367628 *
1593403   +        S_MntGoldProds  +    -0.80473865500071 * S_MntMeatProducts
1593404   +          +     0.10950268819222 * S_MntSweetProducts
1593405   +          +    -0.59025524598908 * S_NumCatalogPurchases
1593406   +          +    -0.02069421817896 * S_NumWebPurchases
1593407   +          +     -0.3615429826151 * S_RFMstat  +    -0.41611769964424 *
1593408   +        S_RMntFrq  +     0.96940490611968 * S_Recency ;
MPRINT(EM_DIAGRAM):   H16 = -0.69633356297868 * S_AcceptedCmpTotal + 0.25580106272723 * S_Frq 
+ -0.15941056497212 * S_Income + 1.01091236070049 * S_Mnt + -0.16421220259024 * S_MntFruits + 
-0.28158219367628 * S_MntGoldProds + -0.80473865500071 * S_MntMeatProducts + 0.10950268819222 
* S_MntSweetProducts + -0.59025524598908 * S_NumCatalogPurchases + -0.02069421817896 * 
S_NumWebPurchases + -0.3615429826151 * S_RFMstat + -0.41611769964424 * S_RMntFrq + 
0.96940490611968 * S_Recency ;
1593409   +   H11  = H11  +        0.45545922927 * G_Marital_Status0
1593410   +          +     0.12818067118838 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.45545922927 * G_Marital_Status0 + 0.12818067118838 * 
G_Marital_Status1 ;
1593411   +   H12  = H12  +    -0.20371081343188 * G_Marital_Status0
1593412   +          +      0.0869800653918 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.20371081343188 * G_Marital_Status0 + 0.0869800653918 * 
G_Marital_Status1 ;
1593413   +   H13  = H13  +    -0.33845151454936 * G_Marital_Status0
1593414   +          +    -0.43733288680739 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.33845151454936 * G_Marital_Status0 + -0.43733288680739 * 
G_Marital_Status1 ;
1593415   +   H14  = H14  +     0.11759980770855 * G_Marital_Status0
1593416   +          +    -0.01680808105992 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.11759980770855 * G_Marital_Status0 + -0.01680808105992 * 
G_Marital_Status1 ;
1593417   +   H15  = H15  +    -0.20605143700963 * G_Marital_Status0
1593418   +          +     0.04987739539035 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.20605143700963 * G_Marital_Status0 + 0.04987739539035 * 
G_Marital_Status1 ;
1593419   +   H16  = H16  +    -0.99478088512585 * G_Marital_Status0
1593420   +          +    -0.35983290751115 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.99478088512585 * G_Marital_Status0 + -0.35983290751115 * 
G_Marital_Status1 ;
1593421   +   H11  =    -0.72044866217862 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.72044866217862 + H11 ;
1593422   +   H12  =     0.73797915336977 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.73797915336977 + H12 ;
1593423   +   H13  =     0.82989235994379 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.82989235994379 + H13 ;
1593424   +   H14  =    -0.48103007102008 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.48103007102008 + H14 ;
1593425   +   H15  =     -0.4352791778041 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.4352791778041 + H15 ;
1593426   +   H16  =      2.7027355184778 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 2.7027355184778 + H16 ;
1593427   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1593428   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1593429   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1593430   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1593431   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1593432   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1593433   +END;
MPRINT(EM_DIAGRAM):   END;
1593434   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1593435   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1593436   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1593437   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1593438   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1593439   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1593440   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1593441   +END;
MPRINT(EM_DIAGRAM):   END;
1593442   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1593443   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1593444   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1593445   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1593446   +   P_DepVar1  =     1.53646139060035 * H11  +     1.98227889313385 * H12
1593447   +          +     0.69366657666187 * H13  +      1.4458071195477 * H14
1593448   +          +     0.81229467076169 * H15  +     -2.4762533950508 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.53646139060035 * H11 + 1.98227889313385 * H12 + 
0.69366657666187 * H13 + 1.4458071195477 * H14 + 0.81229467076169 * H15 + -2.4762533950508 * 
H16 ;
1593449   +   P_DepVar1  =    -0.95559108382775 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.95559108382775 + P_DepVar1 ;
1593450   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1593451   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1593452   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1593453   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1593454   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1593455   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1593456   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1593457   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1593458   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1593459   +END;
MPRINT(EM_DIAGRAM):   END;
1593460   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1593461   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1593462   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1593463   +END;
MPRINT(EM_DIAGRAM):   END;
1593464   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1593465   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1593466   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1593467   +END;
MPRINT(EM_DIAGRAM):   END;
1593468   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1593469   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1593470   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1593471   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1593472   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1593473   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1593474   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1593475   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1593476   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1593477   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1593478   +END;
MPRINT(EM_DIAGRAM):   END;
1593479   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1593480   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1593481   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1593482   +drop
1593483   +H11
1593484   +H12
1593485   +H13
1593486   +H14
1593487   +H15
1593488   +H16
1593489   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1593490   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1593491    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1593492    quit;
1593493    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1593494    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1593495    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1593496    retain ID 2 Node "Neural28";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural28";
1593497    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1593498    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1141 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1141 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1593499    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1593500    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1593501    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1141 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1141 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1593502    proc sort data=EMWS8.Neural28_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural28_variableset out=_temp2(keep=NAME CREATOR);
1593503    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1593504    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 15 observations read from the data set EMWS8.NEURAL28_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 15 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1593505    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1593506    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1593507    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1593508    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 15 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 15 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1593509    proc contents data=EMWS8.Neural28_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural28_train out=_meta(keep=NAME) noprint;
1593510    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 54 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1593511    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1593512    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1593513    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 54 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 54 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1593514    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1593515    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1593516    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1593517    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 54 observations read from the data set WORK._META.
NOTE: There were 15 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 54 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1593518    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1593519    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1593519  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 541 rows and 5 columns.

1593520    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1593521    proc append base=EMWS8.Ensmbl8_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl8_FCMP data=_tempx;
1593522    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL8_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 541 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL8_FCMP has 541 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1593523    filename _pref
1593523  ! "C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
1593524    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1593525    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas.
1593526   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1593527   +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
1593528   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1593529   +
1593530   +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
1593531   +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1593532   +
1593533   +
1593534   +/*----G_Marital_Status begin----*/
1593535   +length _NORM8 $ 8;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status begin----*/ length _NORM8 $ 8;
1593536   +_NORM8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _NORM8 = put( Marital_Status , $8. );
1593537   +%DMNORMIP( _NORM8 )
MPRINT(DMNORMIP):   call dmnorm(_NORM8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1593538   +drop _NORM8;
MPRINT(EM_DIAGRAM):   drop _NORM8;
1593539   +select(_NORM8);
MPRINT(EM_DIAGRAM):   select(_NORM8);
1593540   +  when("DIVORCED" ) G_Marital_Status = 1;
MPRINT(EM_DIAGRAM):   when("DIVORCED" ) G_Marital_Status = 1;
1593541   +  when("MARRIED " ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("MARRIED " ) G_Marital_Status = 2;
1593542   +  when("SINGLE  " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("SINGLE  " ) G_Marital_Status = 0;
1593543   +  when("TOGETHER" ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("TOGETHER" ) G_Marital_Status = 2;
1593544   +  when("WIDOW   " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("WIDOW   " ) G_Marital_Status = 0;
1593545   +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
1593546   +end;
MPRINT(EM_DIAGRAM):   end;
1593547   +label G_Marital_Status="Grouped Levels for Marital_Status";
MPRINT(EM_DIAGRAM):   label G_Marital_Status="Grouped Levels for Marital_Status";
1593548   +/*----G_Marital_Status end----*/
1593549   +
1593550   +
1593551   +****************************************;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status end----*/ 
****************************************;
1593552   +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
1593553   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1593554    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1593555    quit;
1593556    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1593557    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1593558    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1593559    retain ID 3 Node "Varsel";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "Varsel";
1593560    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1593561    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1593562    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1593563    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1593564    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1593565    proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
1593566    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1593567    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.VARSEL_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1593568    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1593569    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1593570    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1593571    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1593572    proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
1593573    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1593574    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1593575    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1593576    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 47 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1593577    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1593578    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1593579    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1593580    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 47 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 47 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1593581    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1593582    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1593582  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3 rows and 5 columns.

1593583    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1593584    proc append base=EMWS8.Ensmbl8_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl8_FCMP data=_tempx;
1593585    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL8_FCMP.
NOTE: There were 3 observations read from the data set WORK._TEMPX.
NOTE: 3 observations added.
NOTE: The data set EMWS8.ENSMBL8_FCMP has 544 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1593586    filename _pref
1593586  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1593587    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1593588    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1593589   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1593590   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1593591   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1593592   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1593593   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1593594   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1593595    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1593596    quit;
1593597    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1593598    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1593599    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1593600    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1593601    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1593602    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1593603    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1593604    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1593605    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1593606    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1593607    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1593608    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1593609    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1593610    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1593611    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1593612    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1593613    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1593614    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1593615    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1593616    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1593617    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1593618    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1593619    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1593620    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1593621    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1593622    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1593623    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1593623  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1593624    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1593625    proc append base=EMWS8.Ensmbl8_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl8_FCMP data=_tempx;
1593626    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL8_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL8_FCMP has 548 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1593627    filename _pref
1593627  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1593628    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1593629    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1593630   +
1593631   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1593632   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1593632  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1593633   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1593634   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1593635   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1593636   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1593637   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1593638    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1593639    quit;
1593640    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1593641    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1593642    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1593643    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1593644    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1593645    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1593646    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1593647    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1593648    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1593649    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1593650    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1593651    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1593652    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1593653    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1593654    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1593655    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1593656    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1593657    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1593658    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1593659    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1593660    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1593661    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1593662    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1593663    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1593664    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1593665    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1593666    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1593666  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1593667    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1593668    proc append base=EMWS8.Ensmbl8_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl8_FCMP data=_tempx;
1593669    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL8_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL8_FCMP has 587 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1593670    filename _pref
1593670  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1593671    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1593672    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1593673   +
1593674   +
1593675   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1593676   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1593677   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1593678   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1593679   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1593680   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1593681   +
1593682   +
1593683   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1593684   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1593685   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1593686   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1593687   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1593688   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1593689   +
1593690   +
1593691   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1593692   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1593693   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1593694   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1593695   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1593696   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1593697   +
1593698   +
1593699   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1593700   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1593701   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1593702   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1593703   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1593704   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1593705   +
1593706   +
1593707   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1593708   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1593709   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1593710   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1593711   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1593712   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1593713   +
1593714   +
1593715   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1593716   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1593717   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1593718   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1593719   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1593720   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1593721   +
1593722   +
1593723   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1593724   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1593725   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1593726   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1593727   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1593728   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1593729   +
1593730   +
1593731   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1593732   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1593733   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1593734   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1593735   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1593736   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1593737   +if
1593738   +_FILTERNORM1 not in ( '.')
1593739   + and
1593740   +_FILTERNORM2 not in ( '.')
1593741   + and
1593742   +_FILTERNORM3 not in ( '.')
1593743   + and
1593744   +_FILTERNORM4 not in ( '.')
1593745   + and
1593746   +_FILTERNORM5 not in ( '.')
1593747   + and
1593748   +_FILTERNORM6 not in ( '.')
1593749   + and
1593750   +_FILTERNORM7 not in ( ' ')
1593751   + and
1593752   +_FILTERNORM8 not in ( ' ')
1593753   +and
1593754   +( Dt_Customer ne .)
1593755   +and ( Income ne . and (Income<=107000))
1593756   +and ( Kidhome ne .)
1593757   +and ( MntFishProducts ne .)
1593758   +and ( MntFruits ne .)
1593759   +and ( MntGoldProds ne .)
1593760   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1593761   +and ( MntSweetProducts ne .)
1593762   +and ( MntWines ne .)
1593763   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1593764   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1593765   +and ( NumStorePurchases ne .)
1593766   +and ( NumWebPurchases ne .)
1593767   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1593768   +and ( Recency ne .)
1593769   +and ( Teenhome ne .)
1593770   +and ( Year_Birth ne .)
1593771   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1593772   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1593773   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1593774   +end;
MPRINT(EM_DIAGRAM):   end;
1593775   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1593776   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1593777    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1593778    quit;
1593779    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1593780    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1593781    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1593782    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1593783    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1593784    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1593785    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1593786    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1593787    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1593788    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1593789    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1593790    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1593791    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1593792    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1593793    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1593794    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1593795    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1593796    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1593797    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1593798    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1593799    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1593800    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1593801    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1593802    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1593803    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1593804    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1593805    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1593805  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1593806    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1593807    proc append base=EMWS8.Ensmbl8_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl8_FCMP data=_tempx;
1593808    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL8_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL8_FCMP has 653 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1593809    %macro varDept(fcmpdata=,id=);
1593810    %global nobs&id scoreFlag&id;
1593811    %let scoreFlag&id = 0;
1593812    %if &id=1 or ^&fcmpStart %then %do;
1593813    proc sort data=&fcmpdata out=_temp&id nodupkey;
1593814    by NAME;
1593815    where id=&id and LHS in( %let j=1;
1593816    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1593817    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1593818    "&var" %let j = %eval(&j+1);
1593819    %end;
1593820    );
1593821    run;
1593822    %let dsid = %sysfunc(open(_temp&id));
1593823    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1593824    %let dsid = %sysfunc(close(&dsid));
1593825    %if &&nobs&id %then %do;
1593826    %let scoreFlag&id = 1;
1593827    %let fcmpStart = 1;
1593828    %end;
1593829    %else %let fcmpStart = 0;
1593830    %end;
1593831    %else %do;
1593832    proc sort data=&fcmpdata out=_tempid;
1593833    where id=&id;
1593834    by LHS;
1593835    run;
1593836    %let dsid = %sysfunc(open(_tempid));
1593837    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1593838    %let dsid = %sysfunc(close(&dsid));
1593839    %if ^&&nobs&id %then %do;
1593840    proc datasets lib=work nolist;
1593841    delete _tempid;
1593842    run;
1593843    quit;
1593844    %end;
1593845    %else %do;
1593846    data _tempAll;
1593847    set %let j=%eval(&id-1);
1593848    %do x=1 %to &j;
1593849    %if &&nobs&x %then %do;
1593850    _temp&x %end;
1593851    %end;
1593852    ;
1593853    run;
1593854    proc sql;
1593855    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1593855  ! work._tempid p2 where p.name=p2.lhs;
1593856    quit;
1593857    data _temp&id;
1593858    set _temp&id;
1593859    where LHS ne '' and NAME ne '' and Node ne '';
1593860    run;
1593861    proc datasets lib=work nolist;
1593862    delete _tempAll;
1593863    run;
1593864    %let dsid = %sysfunc(open(_temp&id));
1593865    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1593866    %let dsid = %sysfunc(close(&dsid));
1593867    %if ^&&nobs&id %then %do;
1593868    proc datasets lib=work nolist;
1593869    delete _temp&id;
1593870    run;
1593871    quit;
1593872    %end;
1593873    %else %do;
1593874    %let scoreFlag&id = 1;
1593875    data _temp&id;
1593876    set _temp&id;
1593877    where LHS ne NAME and node ne '';
1593878    run;
1593879    %let dsid = %sysfunc(open(_temp&id));
1593880    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1593881    %let dsid = %sysfunc(close(&dsid));
1593882    %if ^&&nobs&id %then %do;
1593883    proc datasets lib=work nolist;
1593884    delete _temp&id;
1593885    run;
1593886    quit;
1593887    %end;
1593888    %else %do;
1593889    proc sort data=_temp&id nodupkey;
1593890    by LHS NAME;
1593891    run;
1593892    %end;
1593893    %end;
1593894    %end;
1593895    %end;
1593896    %mend varDept;
1593897    %macro optCode(outdata=fcmpdata);
1593898    %global fcmpStart;
1593899    %let fcmpStart = 0;
1593900    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1593901    %let NumNodes=9;
1593902    %do k=1 %to &NumNodes;
1593903    %vardept(fcmpdata=&outdata, id=&k);
1593904    %end;
1593905    %mend optCode;
1593906    %optcode(outData=EMWS8.Ensmbl8_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl8_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL8_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl8_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 62 observations read from the data set EMWS8.ENSMBL8_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 46 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 16 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl8_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL8_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 3 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 16 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 1 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl8_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL8_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl8_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL8_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 17 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl8_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL8_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 17 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 37 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl8_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL8_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 54 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.17 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl8_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL8_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl8_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL8_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1593907    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1593908    set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
1593909    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1593910    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1593911    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1593912    set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
1593913    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1593914    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1593915    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1593916    create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
1593916  ! EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 
p, EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 1 rows and 3 columns.

1593917    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1593918    data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
1593919    set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
1593920    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 1 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1593921    filename _pref
1593921  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural8\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural8\EMPUBLISHSCORE.sas";
1593922    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1593923    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural8\EMPUBLISHSCORE.sas.
1593924   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1593925   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1593926   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1593927   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1593928   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1593929   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1593930   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1593931   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1593932   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1593933   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1593934   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1593935   +LENGTH _WARN_ $4
1593936   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1593937   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1593938   +
1593939   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1593940   +
1593941   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1593942   +
1593943   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1593944   +
1593945   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1593946   +
1593947   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1593948   +
1593949   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1593950   +
1593951   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1593952   +
1593953   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1593954   +
1593955   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1593956   +
1593957   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1593958   +
1593959   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1593960   +
1593961   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1593962   +
1593963   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1593964   +
1593965   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1593966   +
1593967   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1593968   +
1593969   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1593970   +
1593971   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1593972   +
1593973   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1593974   +
1593975   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1593976   +
1593977   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1593978   +
1593979   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
1593980   +
1593981   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1593982   +
1593983   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1593984   +
1593985   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1593986   +
1593987   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1593988   +
1593989   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1593990   +
1593991   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1593992   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1593993   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1593994   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1593995   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1593996   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1593997   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1593998   +end;
MPRINT(EM_DIAGRAM):   end;
1593999   +else do;
MPRINT(EM_DIAGRAM):   else do;
1594000   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1594001   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1594002   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1594003   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1594004   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1594005   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1594006   +   end;
MPRINT(EM_DIAGRAM):   end;
1594007   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1594008   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1594009   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1594010   +   end;
MPRINT(EM_DIAGRAM):   end;
1594011   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1594012   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1594013   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1594014   +   end;
MPRINT(EM_DIAGRAM):   end;
1594015   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1594016   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1594017   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1594018   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1594019   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1594020   +   end;
MPRINT(EM_DIAGRAM):   end;
1594021   +end;
MPRINT(EM_DIAGRAM):   end;
1594022   +
1594023   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1594024   +*** Checking missing input Interval
1594025   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1594026   +
1594027   +IF NMISS(
1594028   +   AcceptedCmpTotal ,
1594029   +   Frq ,
1594030   +   Income ,
1594031   +   Mnt ,
1594032   +   MntFruits ,
1594033   +   MntGoldProds ,
1594034   +   MntMeatProducts ,
1594035   +   MntSweetProducts ,
1594036   +   NumCatalogPurchases ,
1594037   +   NumWebPurchases ,
1594038   +   RFMstat ,
1594039   +   RMntFrq ,
1594040   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntFruits , 
MntGoldProds , MntMeatProducts , MntSweetProducts , NumCatalogPurchases , NumWebPurchases , 
RFMstat , RMntFrq , Recency ) THEN DO;
1594041   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1594042   +
1594043   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1594044   +END;
MPRINT(EM_DIAGRAM):   END;
1594045   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1594046   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1594047   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1594048   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1594049   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1594050   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1594051   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1594052   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1594053   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1594054   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1594055   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1594056   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1594057   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1594058   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1594059   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1594060   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1594061   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1594062   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1594063   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1594064   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1594065   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1594066   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1594067   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1594068   +END;
MPRINT(EM_DIAGRAM):   END;
1594069   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1594070   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1594071   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1594072   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1594073   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1594074   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1594075   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1594076   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1594077   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1594078   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1594079   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1594080   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1594081   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1594082   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1594083   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1594084   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1594085   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1594086   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1594087   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1594088   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1594089   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1594090   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1594091   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1594092   +   ELSE S_NumCatalogPurchases
1594093   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1594094   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1594095   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1594096   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1594097   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1594098   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1594099   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1594100   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1594101   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1594102   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1594103   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1594104   +END;
MPRINT(EM_DIAGRAM):   END;
1594105   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1594106   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1594107   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1594108   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1594109   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1594110   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1594111   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1594112   +   H11  =     0.00179298802892 * S_AcceptedCmpTotal  +     0.01784009275608 *
1594113   +        S_Frq  +     0.69409617936033 * S_Income  +    -0.28641816886809 *
1594114   +        S_Mnt  +     0.21745721720131 * S_MntFruits  +    -0.38924339437831 *
1594115   +        S_MntGoldProds  +     0.48302006424722 * S_MntMeatProducts
1594116   +          +     0.32217287817742 * S_MntSweetProducts
1594117   +          +     0.37317765763795 * S_NumCatalogPurchases
1594118   +          +     0.31712152035565 * S_NumWebPurchases
1594119   +          +    -0.00101711956377 * S_RFMstat  +    -0.50814709993968 *
1594120   +        S_RMntFrq  +     -0.2674878177058 * S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = 0.00179298802892 * S_AcceptedCmpTotal + 0.01784009275608 * S_Frq + 
0.69409617936033 * S_Income + -0.28641816886809 * S_Mnt + 0.21745721720131 * S_MntFruits + 
-0.38924339437831 * S_MntGoldProds + 0.48302006424722 * S_MntMeatProducts + 0.32217287817742 * 
S_MntSweetProducts + 0.37317765763795 * S_NumCatalogPurchases + 0.31712152035565 * 
S_NumWebPurchases + -0.00101711956377 * S_RFMstat + -0.50814709993968 * S_RMntFrq + 
-0.2674878177058 * S_Recency ;
1594121   +   H12  =    -0.13522102699695 * S_AcceptedCmpTotal  +     0.62468738576113 *
1594122   +        S_Frq  +     0.33525631913577 * S_Income  +     0.49596519260867 *
1594123   +        S_Mnt  +    -0.07840703709606 * S_MntFruits  +    -0.13407863606593 *
1594124   +        S_MntGoldProds  +     0.07892036440987 * S_MntMeatProducts
1594125   +          +    -0.19345300638771 * S_MntSweetProducts
1594126   +          +     0.37926806634405 * S_NumCatalogPurchases
1594127   +          +     0.17926711405358 * S_NumWebPurchases
1594128   +          +    -0.56247478537915 * S_RFMstat  +    -0.83222377723575 *
1594129   +        S_RMntFrq  +     0.06152905340066 * S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = -0.13522102699695 * S_AcceptedCmpTotal + 0.62468738576113 * S_Frq 
+ 0.33525631913577 * S_Income + 0.49596519260867 * S_Mnt + -0.07840703709606 * S_MntFruits + 
-0.13407863606593 * S_MntGoldProds + 0.07892036440987 * S_MntMeatProducts + -0.19345300638771 
* S_MntSweetProducts + 0.37926806634405 * S_NumCatalogPurchases + 0.17926711405358 * 
S_NumWebPurchases + -0.56247478537915 * S_RFMstat + -0.83222377723575 * S_RMntFrq + 
0.06152905340066 * S_Recency ;
1594130   +   H13  =     0.52085707566671 * S_AcceptedCmpTotal  +    -0.43119445779869 *
1594131   +        S_Frq  +    -0.38451776725994 * S_Income  +    -0.43893571865073 *
1594132   +        S_Mnt  +    -0.18147736658896 * S_MntFruits  +    -0.02759924916073 *
1594133   +        S_MntGoldProds  +     0.41710329802839 * S_MntMeatProducts
1594134   +          +    -0.11238728777733 * S_MntSweetProducts
1594135   +          +     0.39955878063516 * S_NumCatalogPurchases
1594136   +          +     0.37701883017309 * S_NumWebPurchases
1594137   +          +    -0.03011513977353 * S_RFMstat  +     0.05558894855861 *
1594138   +        S_RMntFrq  +    -0.53097904952065 * S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = 0.52085707566671 * S_AcceptedCmpTotal + -0.43119445779869 * S_Frq 
+ -0.38451776725994 * S_Income + -0.43893571865073 * S_Mnt + -0.18147736658896 * S_MntFruits + 
-0.02759924916073 * S_MntGoldProds + 0.41710329802839 * S_MntMeatProducts + -0.11238728777733 
* S_MntSweetProducts + 0.39955878063516 * S_NumCatalogPurchases + 0.37701883017309 * 
S_NumWebPurchases + -0.03011513977353 * S_RFMstat + 0.05558894855861 * S_RMntFrq + 
-0.53097904952065 * S_Recency ;
1594139   +   H14  =     0.01011198652387 * S_AcceptedCmpTotal  +     0.50914419302954 *
1594140   +        S_Frq  +     0.36935051571942 * S_Income  +    -0.14541266632981 *
1594141   +        S_Mnt  +     0.70809835135242 * S_MntFruits  +     0.17636828127553 *
1594142   +        S_MntGoldProds  +    -0.39065133922684 * S_MntMeatProducts
1594143   +          +      0.2693109494597 * S_MntSweetProducts
1594144   +          +      0.1081864929712 * S_NumCatalogPurchases
1594145   +          +     0.04463189601793 * S_NumWebPurchases
1594146   +          +     0.17598396305598 * S_RFMstat  +    -0.26428585222285 *
1594147   +        S_RMntFrq  +    -0.35066600356743 * S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = 0.01011198652387 * S_AcceptedCmpTotal + 0.50914419302954 * S_Frq + 
0.36935051571942 * S_Income + -0.14541266632981 * S_Mnt + 0.70809835135242 * S_MntFruits + 
0.17636828127553 * S_MntGoldProds + -0.39065133922684 * S_MntMeatProducts + 0.2693109494597 * 
S_MntSweetProducts + 0.1081864929712 * S_NumCatalogPurchases + 0.04463189601793 * 
S_NumWebPurchases + 0.17598396305598 * S_RFMstat + -0.26428585222285 * S_RMntFrq + 
-0.35066600356743 * S_Recency ;
1594148   +   H15  =     0.25974646459449 * S_AcceptedCmpTotal  +    -0.01084764302849 *
1594149   +        S_Frq  +    -0.25453296848623 * S_Income  +    -0.24485320547361 *
1594150   +        S_Mnt  +      0.3523119885561 * S_MntFruits  +    -0.23948230282173 *
1594151   +        S_MntGoldProds  +    -0.61077291955379 * S_MntMeatProducts
1594152   +          +     0.69250340520766 * S_MntSweetProducts
1594153   +          +    -0.92476508978686 * S_NumCatalogPurchases
1594154   +          +    -0.85062812213631 * S_NumWebPurchases
1594155   +          +    -0.13668170504261 * S_RFMstat  +    -0.39159958659757 *
1594156   +        S_RMntFrq  +     0.31541831647045 * S_Recency ;
MPRINT(EM_DIAGRAM):   H15 = 0.25974646459449 * S_AcceptedCmpTotal + -0.01084764302849 * S_Frq 
+ -0.25453296848623 * S_Income + -0.24485320547361 * S_Mnt + 0.3523119885561 * S_MntFruits + 
-0.23948230282173 * S_MntGoldProds + -0.61077291955379 * S_MntMeatProducts + 0.69250340520766 
* S_MntSweetProducts + -0.92476508978686 * S_NumCatalogPurchases + -0.85062812213631 * 
S_NumWebPurchases + -0.13668170504261 * S_RFMstat + -0.39159958659757 * S_RMntFrq + 
0.31541831647045 * S_Recency ;
1594157   +   H16  =     0.30881424897223 * S_AcceptedCmpTotal  +      0.2794364053658 *
1594158   +        S_Frq  +    -0.13255692208785 * S_Income  +      0.1084623497397 *
1594159   +        S_Mnt  +    -0.21377822064675 * S_MntFruits  +     0.66167304100171 *
1594160   +        S_MntGoldProds  +    -0.18059030828344 * S_MntMeatProducts
1594161   +          +      0.1342841887454 * S_MntSweetProducts
1594162   +          +    -0.35353451726224 * S_NumCatalogPurchases
1594163   +          +     0.19726071632213 * S_NumWebPurchases
1594164   +          +    -0.67773182477521 * S_RFMstat  +    -0.05559124023026 *
1594165   +        S_RMntFrq  +     0.29135046009186 * S_Recency ;
MPRINT(EM_DIAGRAM):   H16 = 0.30881424897223 * S_AcceptedCmpTotal + 0.2794364053658 * S_Frq + 
-0.13255692208785 * S_Income + 0.1084623497397 * S_Mnt + -0.21377822064675 * S_MntFruits + 
0.66167304100171 * S_MntGoldProds + -0.18059030828344 * S_MntMeatProducts + 0.1342841887454 * 
S_MntSweetProducts + -0.35353451726224 * S_NumCatalogPurchases + 0.19726071632213 * 
S_NumWebPurchases + -0.67773182477521 * S_RFMstat + -0.05559124023026 * S_RMntFrq + 
0.29135046009186 * S_Recency ;
1594166   +   H17  =    -0.56474657283939 * S_AcceptedCmpTotal  +     0.49714469636668 *
1594167   +        S_Frq  +     0.38873911121939 * S_Income  +     0.18672296356038 *
1594168   +        S_Mnt  +    -0.12290033905766 * S_MntFruits  +    -0.55117454621073 *
1594169   +        S_MntGoldProds  +    -0.34157249684624 * S_MntMeatProducts
1594170   +          +    -0.03878223698579 * S_MntSweetProducts
1594171   +          +    -0.44318159654535 * S_NumCatalogPurchases
1594172   +          +     0.28629379958053 * S_NumWebPurchases
1594173   +          +    -0.33628587814816 * S_RFMstat  +     0.01539005969109 *
1594174   +        S_RMntFrq  +      0.4669281349511 * S_Recency ;
MPRINT(EM_DIAGRAM):   H17 = -0.56474657283939 * S_AcceptedCmpTotal + 0.49714469636668 * S_Frq 
+ 0.38873911121939 * S_Income + 0.18672296356038 * S_Mnt + -0.12290033905766 * S_MntFruits + 
-0.55117454621073 * S_MntGoldProds + -0.34157249684624 * S_MntMeatProducts + -0.03878223698579 
* S_MntSweetProducts + -0.44318159654535 * S_NumCatalogPurchases + 0.28629379958053 * 
S_NumWebPurchases + -0.33628587814816 * S_RFMstat + 0.01539005969109 * S_RMntFrq + 
0.4669281349511 * S_Recency ;
1594175   +   H11  = H11  +     0.54366812821853 * G_Marital_Status0
1594176   +          +    -0.24270884269566 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.54366812821853 * G_Marital_Status0 + -0.24270884269566 * 
G_Marital_Status1 ;
1594177   +   H12  = H12  +     0.12201873252315 * G_Marital_Status0
1594178   +          +      0.2708540168877 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.12201873252315 * G_Marital_Status0 + 0.2708540168877 * 
G_Marital_Status1 ;
1594179   +   H13  = H13  +     0.21773390953206 * G_Marital_Status0
1594180   +          +      0.1849184915243 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.21773390953206 * G_Marital_Status0 + 0.1849184915243 * 
G_Marital_Status1 ;
1594181   +   H14  = H14  +     0.42359989920789 * G_Marital_Status0
1594182   +          +     -0.0427682060318 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.42359989920789 * G_Marital_Status0 + -0.0427682060318 * 
G_Marital_Status1 ;
1594183   +   H15  = H15  +     0.39852794737212 * G_Marital_Status0
1594184   +          +      0.4834959104522 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.39852794737212 * G_Marital_Status0 + 0.4834959104522 * 
G_Marital_Status1 ;
1594185   +   H16  = H16  +     0.34117172602716 * G_Marital_Status0
1594186   +          +     0.01719507366738 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.34117172602716 * G_Marital_Status0 + 0.01719507366738 * 
G_Marital_Status1 ;
1594187   +   H17  = H17  +    -0.48271020073977 * G_Marital_Status0
1594188   +          +    -0.38643265086902 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.48271020073977 * G_Marital_Status0 + -0.38643265086902 * 
G_Marital_Status1 ;
1594189   +   H11  =    -1.92887755316705 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.92887755316705 + H11 ;
1594190   +   H12  =     1.10580453552439 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.10580453552439 + H12 ;
1594191   +   H13  =     -0.0396459221076 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.0396459221076 + H13 ;
1594192   +   H14  =    -0.24030684440152 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.24030684440152 + H14 ;
1594193   +   H15  =    -1.57024900687106 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -1.57024900687106 + H15 ;
1594194   +   H16  =    -0.33224481657704 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.33224481657704 + H16 ;
1594195   +   H17  =     1.22710614099789 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = 1.22710614099789 + H17 ;
1594196   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1594197   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1594198   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1594199   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1594200   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1594201   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1594202   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
1594203   +END;
MPRINT(EM_DIAGRAM):   END;
1594204   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1594205   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1594206   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1594207   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1594208   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1594209   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1594210   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1594211   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
1594212   +END;
MPRINT(EM_DIAGRAM):   END;
1594213   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1594214   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1594215   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1594216   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1594217   +   P_DepVar1  =     1.21462455419854 * H11  +    -0.32480789724651 * H12
1594218   +          +     2.96475008226038 * H13  +     -0.7919726093423 * H14
1594219   +          +    -2.29353966226595 * H15  +     -0.7223088500433 * H16
1594220   +          +    -2.44182031584859 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.21462455419854 * H11 + -0.32480789724651 * H12 + 
2.96475008226038 * H13 + -0.7919726093423 * H14 + -2.29353966226595 * H15 + -0.7223088500433 * 
H16 + -2.44182031584859 * H17 ;
1594221   +   P_DepVar1  =    -1.63832895249218 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.63832895249218 + P_DepVar1 ;
1594222   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1594223   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1594224   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1594225   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1594226   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1594227   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1594228   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1594229   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1594230   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1594231   +END;
MPRINT(EM_DIAGRAM):   END;
1594232   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1594233   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1594234   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1594235   +END;
MPRINT(EM_DIAGRAM):   END;
1594236   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1594237   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1594238   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1594239   +END;
MPRINT(EM_DIAGRAM):   END;
1594240   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1594241   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1594242   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1594243   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1594244   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1594245   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1594246   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1594247   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1594248   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1594249   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1594250   +END;
MPRINT(EM_DIAGRAM):   END;
1594251   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1594252   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1594253   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1594254   +drop
1594255   +H11
1594256   +H12
1594257   +H13
1594258   +H14
1594259   +H15
1594260   +H16
1594261   +H17
1594262   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
1594263   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1594264    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1594265    quit;
1594266    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1594267    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1594268    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1594269    retain ID 2 Node "Neural8";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural8";
1594270    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1594271    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1227 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1227 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1594272    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1594273    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1594274    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1227 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1227 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1594275    proc sort data=EMWS8.Neural8_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural8_variableset out=_temp2(keep=NAME CREATOR);
1594276    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1594277    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 15 observations read from the data set EMWS8.NEURAL8_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 15 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1594278    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1594279    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1594280    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1594281    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 15 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 15 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1594282    proc contents data=EMWS8.Neural8_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural8_train out=_meta(keep=NAME) noprint;
1594283    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 54 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1594284    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1594285    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1594286    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 54 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 54 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1594287    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1594288    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1594289    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1594290    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 54 observations read from the data set WORK._META.
NOTE: There were 15 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 54 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1594291    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1594292    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1594292  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 569 rows and 5 columns.

1594293    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1594294    proc append base=EMWS8.Ensmbl8_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl8_FCMP data=_tempx;
1594295    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL8_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 569 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL8_FCMP has 569 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1594296    filename _pref
1594296  ! "C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
1594297    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1594298    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas.
1594299   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1594300   +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
1594301   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1594302   +
1594303   +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
1594304   +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1594305   +
1594306   +
1594307   +/*----G_Marital_Status begin----*/
1594308   +length _NORM8 $ 8;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status begin----*/ length _NORM8 $ 8;
1594309   +_NORM8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _NORM8 = put( Marital_Status , $8. );
1594310   +%DMNORMIP( _NORM8 )
MPRINT(DMNORMIP):   call dmnorm(_NORM8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1594311   +drop _NORM8;
MPRINT(EM_DIAGRAM):   drop _NORM8;
1594312   +select(_NORM8);
MPRINT(EM_DIAGRAM):   select(_NORM8);
1594313   +  when("DIVORCED" ) G_Marital_Status = 1;
MPRINT(EM_DIAGRAM):   when("DIVORCED" ) G_Marital_Status = 1;
1594314   +  when("MARRIED " ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("MARRIED " ) G_Marital_Status = 2;
1594315   +  when("SINGLE  " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("SINGLE  " ) G_Marital_Status = 0;
1594316   +  when("TOGETHER" ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("TOGETHER" ) G_Marital_Status = 2;
1594317   +  when("WIDOW   " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("WIDOW   " ) G_Marital_Status = 0;
1594318   +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
1594319   +end;
MPRINT(EM_DIAGRAM):   end;
1594320   +label G_Marital_Status="Grouped Levels for Marital_Status";
MPRINT(EM_DIAGRAM):   label G_Marital_Status="Grouped Levels for Marital_Status";
1594321   +/*----G_Marital_Status end----*/
1594322   +
1594323   +
1594324   +****************************************;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status end----*/ 
****************************************;
1594325   +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
1594326   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1594327    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1594328    quit;
1594329    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1594330    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1594331    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1594332    retain ID 3 Node "Varsel";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "Varsel";
1594333    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1594334    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1594335    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1594336    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1594337    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1594338    proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
1594339    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1594340    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.VARSEL_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1594341    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1594342    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1594343    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1594344    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1594345    proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
1594346    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1594347    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1594348    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1594349    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 47 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1594350    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1594351    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1594352    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1594353    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 47 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 47 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1594354    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1594355    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1594355  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3 rows and 5 columns.

1594356    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1594357    proc append base=EMWS8.Ensmbl8_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl8_FCMP data=_tempx;
1594358    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL8_FCMP.
NOTE: There were 3 observations read from the data set WORK._TEMPX.
NOTE: 3 observations added.
NOTE: The data set EMWS8.ENSMBL8_FCMP has 572 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1594359    filename _pref
1594359  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1594360    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1594361    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1594362   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1594363   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1594364   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1594365   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1594366   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1594367   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1594368    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1594369    quit;
1594370    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1594371    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1594372    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1594373    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1594374    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1594375    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1594376    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1594377    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1594378    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1594379    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1594380    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1594381    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1594382    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1594383    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1594384    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1594385    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1594386    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1594387    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1594388    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1594389    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1594390    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1594391    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1594392    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1594393    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1594394    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1594395    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1594396    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1594396  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1594397    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1594398    proc append base=EMWS8.Ensmbl8_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl8_FCMP data=_tempx;
1594399    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL8_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL8_FCMP has 576 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1594400    filename _pref
1594400  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1594401    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1594402    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1594403   +
1594404   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1594405   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1594405  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1594406   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1594407   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1594408   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1594409   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1594410   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1594411    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1594412    quit;
1594413    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1594414    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1594415    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1594416    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1594417    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1594418    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1594419    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1594420    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1594421    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1594422    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1594423    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1594424    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1594425    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1594426    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1594427    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1594428    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1594429    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1594430    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1594431    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1594432    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1594433    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1594434    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1594435    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1594436    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1594437    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1594438    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1594439    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1594439  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1594440    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1594441    proc append base=EMWS8.Ensmbl8_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl8_FCMP data=_tempx;
1594442    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL8_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL8_FCMP has 615 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1594443    filename _pref
1594443  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1594444    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1594445    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1594446   +
1594447   +
1594448   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1594449   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1594450   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1594451   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1594452   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1594453   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1594454   +
1594455   +
1594456   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1594457   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1594458   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1594459   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1594460   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1594461   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1594462   +
1594463   +
1594464   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1594465   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1594466   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1594467   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1594468   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1594469   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1594470   +
1594471   +
1594472   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1594473   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1594474   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1594475   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1594476   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1594477   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1594478   +
1594479   +
1594480   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1594481   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1594482   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1594483   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1594484   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1594485   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1594486   +
1594487   +
1594488   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1594489   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1594490   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1594491   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1594492   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1594493   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1594494   +
1594495   +
1594496   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1594497   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1594498   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1594499   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1594500   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1594501   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1594502   +
1594503   +
1594504   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1594505   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1594506   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1594507   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1594508   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1594509   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1594510   +if
1594511   +_FILTERNORM1 not in ( '.')
1594512   + and
1594513   +_FILTERNORM2 not in ( '.')
1594514   + and
1594515   +_FILTERNORM3 not in ( '.')
1594516   + and
1594517   +_FILTERNORM4 not in ( '.')
1594518   + and
1594519   +_FILTERNORM5 not in ( '.')
1594520   + and
1594521   +_FILTERNORM6 not in ( '.')
1594522   + and
1594523   +_FILTERNORM7 not in ( ' ')
1594524   + and
1594525   +_FILTERNORM8 not in ( ' ')
1594526   +and
1594527   +( Dt_Customer ne .)
1594528   +and ( Income ne . and (Income<=107000))
1594529   +and ( Kidhome ne .)
1594530   +and ( MntFishProducts ne .)
1594531   +and ( MntFruits ne .)
1594532   +and ( MntGoldProds ne .)
1594533   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1594534   +and ( MntSweetProducts ne .)
1594535   +and ( MntWines ne .)
1594536   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1594537   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1594538   +and ( NumStorePurchases ne .)
1594539   +and ( NumWebPurchases ne .)
1594540   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1594541   +and ( Recency ne .)
1594542   +and ( Teenhome ne .)
1594543   +and ( Year_Birth ne .)
1594544   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1594545   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1594546   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1594547   +end;
MPRINT(EM_DIAGRAM):   end;
1594548   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1594549   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1594550    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1594551    quit;
1594552    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1594553    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1594554    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1594555    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1594556    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1594557    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1594558    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1594559    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1594560    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1594561    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1594562    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1594563    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1594564    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1594565    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1594566    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1594567    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1594568    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1594569    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1594570    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1594571    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1594572    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1594573    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1594574    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1594575    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1594576    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1594577    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1594578    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1594578  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1594579    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1594580    proc append base=EMWS8.Ensmbl8_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl8_FCMP data=_tempx;
1594581    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL8_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL8_FCMP has 681 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1594582    %macro varDept(fcmpdata=,id=);
1594583    %global nobs&id scoreFlag&id;
1594584    %let scoreFlag&id = 0;
1594585    %if &id=1 or ^&fcmpStart %then %do;
1594586    proc sort data=&fcmpdata out=_temp&id nodupkey;
1594587    by NAME;
1594588    where id=&id and LHS in( %let j=1;
1594589    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1594590    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1594591    "&var" %let j = %eval(&j+1);
1594592    %end;
1594593    );
1594594    run;
1594595    %let dsid = %sysfunc(open(_temp&id));
1594596    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1594597    %let dsid = %sysfunc(close(&dsid));
1594598    %if &&nobs&id %then %do;
1594599    %let scoreFlag&id = 1;
1594600    %let fcmpStart = 1;
1594601    %end;
1594602    %else %let fcmpStart = 0;
1594603    %end;
1594604    %else %do;
1594605    proc sort data=&fcmpdata out=_tempid;
1594606    where id=&id;
1594607    by LHS;
1594608    run;
1594609    %let dsid = %sysfunc(open(_tempid));
1594610    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1594611    %let dsid = %sysfunc(close(&dsid));
1594612    %if ^&&nobs&id %then %do;
1594613    proc datasets lib=work nolist;
1594614    delete _tempid;
1594615    run;
1594616    quit;
1594617    %end;
1594618    %else %do;
1594619    data _tempAll;
1594620    set %let j=%eval(&id-1);
1594621    %do x=1 %to &j;
1594622    %if &&nobs&x %then %do;
1594623    _temp&x %end;
1594624    %end;
1594625    ;
1594626    run;
1594627    proc sql;
1594628    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1594628  ! work._tempid p2 where p.name=p2.lhs;
1594629    quit;
1594630    data _temp&id;
1594631    set _temp&id;
1594632    where LHS ne '' and NAME ne '' and Node ne '';
1594633    run;
1594634    proc datasets lib=work nolist;
1594635    delete _tempAll;
1594636    run;
1594637    %let dsid = %sysfunc(open(_temp&id));
1594638    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1594639    %let dsid = %sysfunc(close(&dsid));
1594640    %if ^&&nobs&id %then %do;
1594641    proc datasets lib=work nolist;
1594642    delete _temp&id;
1594643    run;
1594644    quit;
1594645    %end;
1594646    %else %do;
1594647    %let scoreFlag&id = 1;
1594648    data _temp&id;
1594649    set _temp&id;
1594650    where LHS ne NAME and node ne '';
1594651    run;
1594652    %let dsid = %sysfunc(open(_temp&id));
1594653    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1594654    %let dsid = %sysfunc(close(&dsid));
1594655    %if ^&&nobs&id %then %do;
1594656    proc datasets lib=work nolist;
1594657    delete _temp&id;
1594658    run;
1594659    quit;
1594660    %end;
1594661    %else %do;
1594662    proc sort data=_temp&id nodupkey;
1594663    by LHS NAME;
1594664    run;
1594665    %end;
1594666    %end;
1594667    %end;
1594668    %end;
1594669    %mend varDept;
1594670    %macro optCode(outdata=fcmpdata);
1594671    %global fcmpStart;
1594672    %let fcmpStart = 0;
1594673    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1594674    %let NumNodes=9;
1594675    %do k=1 %to &NumNodes;
1594676    %vardept(fcmpdata=&outdata, id=&k);
1594677    %end;
1594678    %mend optCode;
1594679    %optcode(outData=EMWS8.Ensmbl8_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl8_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL8_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl8_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 62 observations read from the data set EMWS8.ENSMBL8_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 46 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 16 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl8_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL8_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 3 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 16 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 1 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl8_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL8_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl8_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL8_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 17 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl8_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL8_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 17 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 37 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl8_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL8_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 54 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl8_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL8_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl8_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL8_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1594680    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1594681    set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
1594682    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1594683    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1594684    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1594685    set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
1594686    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1594687    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1594688    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1594689    create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
1594689  ! EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 
p, EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 1 rows and 3 columns.

1594690    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1594691    data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
1594692    set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
1594693    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 1 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1594694    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1594695    * Ensmbl8: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl8: Computing metadata for TRAIN data;
1594696    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.ENSMBL8_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl8\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl8_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl8_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl8_TRAIN out=WORK.M2FQYEQ7 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2FQYEQ7;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M2FQYEQ7(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2FQYEQ7;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M2FQYEQ7;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M3QU7P5Y NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3QU7P5Y;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M3QU7P5Y;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M00_L90X(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M3QU7P5Y;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3QU7P5Y;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M3QU7P5Y;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3QU7P5Y;
MPRINT(EMADVISECOLUMNS):   set WORK.M3QU7P5Y;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural26_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural26_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl8_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl8";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl8";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl8";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl8";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl8";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl8";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl8";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl8";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl8";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl8";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl8: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1" 
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl8";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
1595016    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
1595017    set EMWS8.Ensmbl8_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl8_EMINFO;
1595018    where DATA='Ensmbl8' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl8' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
1595019    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.ENSMBL8_EMINFO.
      WHERE (DATA='Ensmbl8') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1595020    data EMWS8.Ensmbl8_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl8_EMINFO;
1595021    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
1595022    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
1595023    cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.ENSMBL8_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
1595027    run;
1595028    data EMWS8.Ensmbl8_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl8_EMINFO;
1595029    set EMWS8.Ensmbl8_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl8_EMINFO WORK.MODELTEMP_INFO;
1595030    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL8_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL8_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1595031    proc sort data = EMWS8.Ensmbl8_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl8_EMINFO NOTHREADS;
1595032    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1595033    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL8_EMINFO.
NOTE: The data set EMWS8.ENSMBL8_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1595034    proc sort data = EMWS8.Neural26_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural26_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
1595035    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1595036    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS8.NEURAL26_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1595037    proc sort data = EMWS8.Ensmbl8_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl8_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
1595038    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1595039    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL8_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1595040    data EMWS8.Ensmbl8_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl8_EMINFO;
1595041    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
1595042    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1595043    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL8_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1595044    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1595045    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
1595046    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
1595047    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

NOTE: View EMWS8.ENSMBL8_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      
NOTE: View EMWS8.ENSMBL8_VALIDATE.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
