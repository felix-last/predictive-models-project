MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "21. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "18.57 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                21. April 2016
Time:                18.57 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1O_UFF7 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1O_UFF7 new;
MPRINT(EM_DIAGRAM):   run;
1321640    filename emflow
1321640  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl: Scoring REG5_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1321641    *------------------------------------------------------------*;
1321642    * Ensmbl: Scoring REG5_TRAIN data;
1321643    *------------------------------------------------------------*;
1321644    data EMWS8.Ensmbl_TRAIN
1321645    / view=EMWS8.Ensmbl_TRAIN
1321646    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl_TRAIN / view=EMWS8.Ensmbl_TRAIN ;
1321647    set EMWS8.Reg5_TRAIN
1321648    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg5_TRAIN ;
1321649    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl\EMFLOWSCORE.sas.
1321650   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1321651   +* Ensmbl: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl: Combine model for DepVar;
1321652   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1321653   +* Ensmbl: Scoring Code of model 1 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl: Scoring Code of model 1 of 10;
1321654   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1321655   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1321656   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1321657   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1321658   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
1321659   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1321660   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1321661   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
1321662   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1321663   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
1321664   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1321665   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1321666   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
1321667   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1321668   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
1321669   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1321670   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1321671   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
1321672   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1321673   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
1321674   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1321675   +
1321676   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1321677   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1321677  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1321678   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1321679   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1321680   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1321681   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1321682   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
1321683   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1321684   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
1321685   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1321686   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
1321687   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1321688   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1321689   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1321690   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1321691   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1321692   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1321693   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
1321694   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1321695   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
1321696   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1321697   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
1321698   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1321699   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1321700   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
1321701   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1321702   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
1321703   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1321704   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1321705   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
1321706   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1321707   +* NODE: Reg5;
MPRINT(EM_DIAGRAM):   * NODE: Reg5;
1321708   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1321709   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1321710   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1321711   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1321712   +
1321713   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1321714   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1321715   +
1321716   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1321717   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1321718   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1321719   +array REG5DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG5DRF [2] $12 _temporary_ ('1' '0' );
1321720   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1321721   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1321722   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1321723   +ARRAY REG5DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG5DRU[2] _TEMPORARY_ (1 0);
1321724   +
1321725   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1321726   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
1321727   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1321728   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1321729   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1321730   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1321731   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1321732   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1321733   +end;
MPRINT(EM_DIAGRAM):   end;
1321734   +else do;
MPRINT(EM_DIAGRAM):   else do;
1321735   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1321736   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
1321737   +   end;
MPRINT(EM_DIAGRAM):   end;
1321738   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1321739   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
1321740   +   end;
MPRINT(EM_DIAGRAM):   end;
1321741   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1321742   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1321743   +   end;
MPRINT(EM_DIAGRAM):   end;
1321744   +end;
MPRINT(EM_DIAGRAM):   end;
1321745   +
1321746   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1321747   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1321748   +
1321749   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1321750   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1321751   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1321752   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1321753   +end;
MPRINT(EM_DIAGRAM):   end;
1321754   +
1321755   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1321756   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1321757   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1321758   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1321759   +end;
MPRINT(EM_DIAGRAM):   end;
1321760   +
1321761   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1321762   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1321763   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1321764   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1321765   +end;
MPRINT(EM_DIAGRAM):   end;
1321766   +
1321767   +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
1321768   +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
1321769   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1321770   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1321771   +end;
MPRINT(EM_DIAGRAM):   end;
1321772   +
1321773   +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
1321774   +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
1321775   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1321776   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1321777   +end;
MPRINT(EM_DIAGRAM):   end;
1321778   +
1321779   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1321780   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1321781   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1321782   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1321783   +end;
MPRINT(EM_DIAGRAM):   end;
1321784   +
1321785   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
1321786   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
1321787   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1321788   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1321789   +end;
MPRINT(EM_DIAGRAM):   end;
1321790   +
1321791   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1321792   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1321793   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1321794   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1321795   +end;
MPRINT(EM_DIAGRAM):   end;
1321796   +
1321797   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1321798   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1321799   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1321800   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1321801   +end;
MPRINT(EM_DIAGRAM):   end;
1321802   +
1321803   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1321804   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1321805   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1321806   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1321807   +end;
MPRINT(EM_DIAGRAM):   end;
1321808   +
1321809   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1321810   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1321811   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1321812   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1321813   +end;
MPRINT(EM_DIAGRAM):   end;
1321814   +
1321815   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1321816   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1321817   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1321818   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1321819   +end;
MPRINT(EM_DIAGRAM):   end;
1321820   +
1321821   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1321822   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
1321823   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1321824   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1321825   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1321826   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
1321827   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
1321828   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1321829   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1321830   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1321831   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1321832   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1321833   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1321834   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1321835   +end;
MPRINT(EM_DIAGRAM):   end;
1321836   +else do;
MPRINT(EM_DIAGRAM):   else do;
1321837   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1321838   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1321839   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1321840   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1321841   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1321842   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1321843   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1321844   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1321845   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1321846   +         end;
MPRINT(EM_DIAGRAM):   end;
1321847   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1321848   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1321849   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1321850   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1321851   +            end;
MPRINT(EM_DIAGRAM):   end;
1321852   +         end;
MPRINT(EM_DIAGRAM):   end;
1321853   +      end;
MPRINT(EM_DIAGRAM):   end;
1321854   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1321855   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1321856   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
1321857   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1321858   +         end;
MPRINT(EM_DIAGRAM):   end;
1321859   +      end;
MPRINT(EM_DIAGRAM):   end;
1321860   +   end;
MPRINT(EM_DIAGRAM):   end;
1321861   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1321862   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1321863   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
1321864   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1321865   +      end;
MPRINT(EM_DIAGRAM):   end;
1321866   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1321867   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1321868   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1321869   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1321870   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
1321871   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
1321872   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1321873   +         end;
MPRINT(EM_DIAGRAM):   end;
1321874   +      end;
MPRINT(EM_DIAGRAM):   end;
1321875   +   end;
MPRINT(EM_DIAGRAM):   end;
1321876   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1321877   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1321878   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1321879   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1321880   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1321881   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1321882   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1321883   +   end;
MPRINT(EM_DIAGRAM):   end;
1321884   +end;
MPRINT(EM_DIAGRAM):   end;
1321885   +
1321886   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1321887   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1321888   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1321889   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1321890   +   goto REG5DR1;
MPRINT(EM_DIAGRAM):   goto REG5DR1;
1321891   +end;
MPRINT(EM_DIAGRAM):   end;
1321892   +
1321893   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1321894   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1321895   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1321896   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1321897   +
1321898   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1321899   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1321900   +_LP0 = _LP0 + (    1.62720428342499 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.62720428342499 * _TEMP);
1321901   +
1321902   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1321903   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1321904   +_LP0 = _LP0 + (   -0.22971333675933 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.22971333675933 * _TEMP);
1321905   +
1321906   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1321907   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1321908   +_LP0 = _LP0 + (    0.00003533282438 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00003533282438 * _TEMP);
1321909   +
1321910   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1321911   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1321912   +_LP0 = _LP0 + (    0.08642160195218) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.08642160195218) * _TEMP * _9_0;
1321913   +_LP0 = _LP0 + (   -0.51421240544522) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.51421240544522) * _TEMP * _9_1;
1321914   +_LP0 = _LP0 + (    0.43839945966755) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.43839945966755) * _TEMP * _9_2;
1321915   +_LP0 = _LP0 + (   -0.51854020296844) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.51854020296844) * _TEMP * _9_3;
1321916   +
1321917   +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
1321918   +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
1321919   +_LP0 = _LP0 + (   -0.00223385655154 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00223385655154 * _TEMP);
1321920   +
1321921   +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
1321922   +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
1321923   +_LP0 = _LP0 + (    0.00401106095636 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00401106095636 * _TEMP);
1321924   +
1321925   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1321926   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1321927   +_LP0 = _LP0 + (    0.00703004991808 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00703004991808 * _TEMP);
1321928   +
1321929   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
1321930   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
1321931   +_LP0 = _LP0 + (    0.62141049405048 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.62141049405048 * _TEMP);
1321932   +
1321933   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1321934   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1321935   +_LP0 = _LP0 + (    0.39538473396078 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.39538473396078 * _TEMP);
1321936   +
1321937   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1321938   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1321939   +_LP0 = _LP0 + (    0.54283993308937 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.54283993308937 * _TEMP);
1321940   +
1321941   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1321942   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1321943   +_LP0 = _LP0 + (    0.00014928266997 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00014928266997 * _TEMP);
1321944   +
1321945   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1321946   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1321947   +_LP0 = _LP0 + (   -0.05097670253272 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05097670253272 * _TEMP);
1321948   +
1321949   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1321950   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1321951   +_LP0 = _LP0 + (   -0.68537073085327 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.68537073085327 * _TEMP);
1321952   +
1321953   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1321954   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1321955   +_P0 = probnorm((   -4.59636694921951) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -4.59636694921951) + _LP0);
1321956   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1321957   +
1321958   +REG5DR1:
1321959   +
1321960   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG5DR1: *** Residuals;
1321961   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
1321962   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1321963   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1321964   +end;
MPRINT(EM_DIAGRAM):   end;
1321965   +else do;
MPRINT(EM_DIAGRAM):   else do;
1321966   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1321967   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1321968   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
1321969   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
1321970   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
1321971   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
1321972   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
1321973   +   end;
MPRINT(EM_DIAGRAM):   end;
1321974   +end;
MPRINT(EM_DIAGRAM):   end;
1321975   +
1321976   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
1321977   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1321978   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1321979   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1321980   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1321981   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1321982   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1321983   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1321984   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1321985   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1321986   +end;
MPRINT(EM_DIAGRAM):   end;
1321987   +I_DepVar = REG5DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG5DRF[_IY];
1321988   +U_DepVar = REG5DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG5DRU[_IY];
1321989   +
1321990   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1321991   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1321992   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1321993   +* Renaming variables for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg5;
1321994   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1321995   +* Renaming Posterior variables for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg5;
1321996   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1321997   +drop Reg5_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg5_P_DepVar1;
1321998   +Reg5_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg5_P_DepVar1 = P_DepVar1;
1321999   +drop Reg5_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg5_P_DepVar0;
1322000   +Reg5_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg5_P_DepVar0 = P_DepVar0;
1322001   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1322002   +* Renaming _WARN_ variable for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg5;
1322003   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1322004   +length Reg5_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg5_WARN_ $4;
1322005   +drop Reg5_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg5_WARN_;
1322006   +Reg5_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg5_WARN_ = _WARN_;
1322007   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1322008   +* Ensmbl: Scoring Code of model 2 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl: Scoring Code of model 2 of 10;
1322009   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1322010   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1322011   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
1322012   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1322013   +* NODE: Reg;
MPRINT(EM_DIAGRAM):   * NODE: Reg;
1322014   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1322015   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1322016   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1322017   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1322018   +
1322019   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1322020   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1322021   +
1322022   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1322023   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1322024   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1322025   +array REGDRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REGDRF [2] $12 _temporary_ ('1' '0' );
1322026   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1322027   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1322028   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1322029   +ARRAY REGDRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REGDRU[2] _TEMPORARY_ (1 0);
1322030   +
1322031   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1322032   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
1322033   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1322034   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1322035   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1322036   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1322037   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1322038   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1322039   +end;
MPRINT(EM_DIAGRAM):   end;
1322040   +else do;
MPRINT(EM_DIAGRAM):   else do;
1322041   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1322042   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
1322043   +   end;
MPRINT(EM_DIAGRAM):   end;
1322044   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1322045   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
1322046   +   end;
MPRINT(EM_DIAGRAM):   end;
1322047   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1322048   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1322049   +   end;
MPRINT(EM_DIAGRAM):   end;
1322050   +end;
MPRINT(EM_DIAGRAM):   end;
1322051   +
1322052   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1322053   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1322054   +
1322055   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1322056   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1322057   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1322058   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1322059   +end;
MPRINT(EM_DIAGRAM):   end;
1322060   +
1322061   +*** Check Age for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Age for missing values ;
1322062   +if missing( Age ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age ) then do;
1322063   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1322064   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1322065   +end;
MPRINT(EM_DIAGRAM):   end;
1322066   +
1322067   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1322068   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1322069   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1322070   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1322071   +end;
MPRINT(EM_DIAGRAM):   end;
1322072   +
1322073   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1322074   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1322075   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1322076   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1322077   +end;
MPRINT(EM_DIAGRAM):   end;
1322078   +
1322079   +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
1322080   +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
1322081   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1322082   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1322083   +end;
MPRINT(EM_DIAGRAM):   end;
1322084   +
1322085   +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
1322086   +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
1322087   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1322088   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1322089   +end;
MPRINT(EM_DIAGRAM):   end;
1322090   +
1322091   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1322092   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1322093   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1322094   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1322095   +end;
MPRINT(EM_DIAGRAM):   end;
1322096   +
1322097   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
1322098   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
1322099   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1322100   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1322101   +end;
MPRINT(EM_DIAGRAM):   end;
1322102   +
1322103   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1322104   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1322105   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1322106   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1322107   +end;
MPRINT(EM_DIAGRAM):   end;
1322108   +
1322109   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1322110   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1322111   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1322112   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1322113   +end;
MPRINT(EM_DIAGRAM):   end;
1322114   +
1322115   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1322116   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1322117   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1322118   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1322119   +end;
MPRINT(EM_DIAGRAM):   end;
1322120   +
1322121   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1322122   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1322123   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1322124   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1322125   +end;
MPRINT(EM_DIAGRAM):   end;
1322126   +
1322127   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1322128   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1322129   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1322130   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1322131   +end;
MPRINT(EM_DIAGRAM):   end;
1322132   +
1322133   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1322134   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
1322135   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1322136   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1322137   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1322138   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
1322139   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
1322140   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1322141   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1322142   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1322143   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1322144   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1322145   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1322146   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1322147   +end;
MPRINT(EM_DIAGRAM):   end;
1322148   +else do;
MPRINT(EM_DIAGRAM):   else do;
1322149   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1322150   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1322151   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1322152   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1322153   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1322154   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1322155   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1322156   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1322157   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1322158   +         end;
MPRINT(EM_DIAGRAM):   end;
1322159   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1322160   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1322161   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1322162   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1322163   +            end;
MPRINT(EM_DIAGRAM):   end;
1322164   +         end;
MPRINT(EM_DIAGRAM):   end;
1322165   +      end;
MPRINT(EM_DIAGRAM):   end;
1322166   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1322167   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1322168   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
1322169   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1322170   +         end;
MPRINT(EM_DIAGRAM):   end;
1322171   +      end;
MPRINT(EM_DIAGRAM):   end;
1322172   +   end;
MPRINT(EM_DIAGRAM):   end;
1322173   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1322174   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1322175   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
1322176   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1322177   +      end;
MPRINT(EM_DIAGRAM):   end;
1322178   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1322179   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1322180   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1322181   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1322182   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
1322183   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
1322184   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1322185   +         end;
MPRINT(EM_DIAGRAM):   end;
1322186   +      end;
MPRINT(EM_DIAGRAM):   end;
1322187   +   end;
MPRINT(EM_DIAGRAM):   end;
1322188   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1322189   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1322190   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1322191   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1322192   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1322193   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1322194   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1322195   +   end;
MPRINT(EM_DIAGRAM):   end;
1322196   +end;
MPRINT(EM_DIAGRAM):   end;
1322197   +
1322198   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1322199   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1322200   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1322201   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1322202   +   goto REGDR1;
MPRINT(EM_DIAGRAM):   goto REGDR1;
1322203   +end;
MPRINT(EM_DIAGRAM):   end;
1322204   +
1322205   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1322206   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1322207   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1322208   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1322209   +
1322210   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1322211   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1322212   +_LP0 = _LP0 + (    2.95660035656229 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.95660035656229 * _TEMP);
1322213   +
1322214   +***  Effect: Age ;
MPRINT(EM_DIAGRAM):   *** Effect: Age ;
1322215   +_TEMP = Age ;
MPRINT(EM_DIAGRAM):   _TEMP = Age ;
1322216   +_LP0 = _LP0 + (   -0.01941875166212 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.01941875166212 * _TEMP);
1322217   +
1322218   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1322219   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1322220   +_LP0 = _LP0 + (   -0.41047634158755 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.41047634158755 * _TEMP);
1322221   +
1322222   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1322223   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1322224   +_LP0 = _LP0 + (    0.00006532180674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00006532180674 * _TEMP);
1322225   +
1322226   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1322227   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1322228   +_LP0 = _LP0 + (    0.17791594529968) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.17791594529968) * _TEMP * _9_0;
1322229   +_LP0 = _LP0 + (   -1.00641962019516) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.00641962019516) * _TEMP * _9_1;
1322230   +_LP0 = _LP0 + (    0.74716428311041) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.74716428311041) * _TEMP * _9_2;
1322231   +_LP0 = _LP0 + (    -1.0069846290756) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.0069846290756) * _TEMP * _9_3;
1322232   +
1322233   +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
1322234   +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
1322235   +_LP0 = _LP0 + (   -0.00385241964842 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00385241964842 * _TEMP);
1322236   +
1322237   +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
1322238   +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
1322239   +_LP0 = _LP0 + (    0.00669490355232 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00669490355232 * _TEMP);
1322240   +
1322241   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1322242   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1322243   +_LP0 = _LP0 + (     0.0125330231858 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0125330231858 * _TEMP);
1322244   +
1322245   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
1322246   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
1322247   +_LP0 = _LP0 + (     1.1253806716991 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.1253806716991 * _TEMP);
1322248   +
1322249   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1322250   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1322251   +_LP0 = _LP0 + (    0.71729818686875 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.71729818686875 * _TEMP);
1322252   +
1322253   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1322254   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1322255   +_LP0 = _LP0 + (    0.99094794685674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.99094794685674 * _TEMP);
1322256   +
1322257   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1322258   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1322259   +_LP0 = _LP0 + (    0.00024460251782 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00024460251782 * _TEMP);
1322260   +
1322261   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1322262   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1322263   +_LP0 = _LP0 + (   -0.09585871705652 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.09585871705652 * _TEMP);
1322264   +
1322265   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1322266   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1322267   +_LP0 = _LP0 + (   -1.10694522398045 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.10694522398045 * _TEMP);
1322268   +
1322269   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1322270   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1322271   +_TEMP =    -7.58770818124898 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -7.58770818124898 + _LP0;
1322272   +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
1322273   +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
1322274   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
1322275   +end;
MPRINT(EM_DIAGRAM):   end;
1322276   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
1322277   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1322278   +
1322279   +REGDR1:
1322280   +
1322281   +*** Residuals;
MPRINT(EM_DIAGRAM):   REGDR1: *** Residuals;
1322282   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
1322283   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1322284   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1322285   +end;
MPRINT(EM_DIAGRAM):   end;
1322286   +else do;
MPRINT(EM_DIAGRAM):   else do;
1322287   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1322288   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1322289   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
1322290   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
1322291   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
1322292   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
1322293   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
1322294   +   end;
MPRINT(EM_DIAGRAM):   end;
1322295   +end;
MPRINT(EM_DIAGRAM):   end;
1322296   +
1322297   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
1322298   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1322299   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1322300   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1322301   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1322302   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1322303   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1322304   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1322305   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1322306   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1322307   +end;
MPRINT(EM_DIAGRAM):   end;
1322308   +I_DepVar = REGDRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REGDRF[_IY];
1322309   +U_DepVar = REGDRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REGDRU[_IY];
1322310   +
1322311   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1322312   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1322313   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1322314   +* Renaming variables for Reg;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg;
1322315   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1322316   +* Renaming Posterior variables for Reg;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg;
1322317   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1322318   +drop Reg_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg_P_DepVar1;
1322319   +Reg_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg_P_DepVar1 = P_DepVar1;
1322320   +drop Reg_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg_P_DepVar0;
1322321   +Reg_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg_P_DepVar0 = P_DepVar0;
1322322   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1322323   +* Renaming _WARN_ variable for Reg;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg;
1322324   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1322325   +length Reg_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg_WARN_ $4;
1322326   +drop Reg_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg_WARN_;
1322327   +Reg_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg_WARN_ = _WARN_;
1322328   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1322329   +* Ensmbl: Scoring Code of model 3 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl: Scoring Code of model 3 of 10;
1322330   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1322331   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1322332   +* TOOL: Decision Tree;
MPRINT(EM_DIAGRAM):   * TOOL: Decision Tree;
1322333   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1322334   +* NODE: Tree;
MPRINT(EM_DIAGRAM):   * NODE: Tree;
1322335   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1322336   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1322337   +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
1322338   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1322339   +
1322340   +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
1322341   +LENGTH F_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH F_DepVar $ 12;
1322342   +LENGTH I_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH I_DepVar $ 12;
1322343   +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
1322344   +
1322345   +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
1322346   +LABEL _NODE_  = 'Node' ;
MPRINT(EM_DIAGRAM):   LABEL _NODE_ = 'Node' ;
1322347   +LABEL _LEAF_  = 'Leaf' ;
MPRINT(EM_DIAGRAM):   LABEL _LEAF_ = 'Leaf' ;
1322348   +LABEL P_DepVar0  = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar0 = 'Predicted: DepVar=0' ;
1322349   +LABEL P_DepVar1  = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar1 = 'Predicted: DepVar=1' ;
1322350   +LABEL Q_DepVar0  = 'Unadjusted P: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
1322351   +LABEL Q_DepVar1  = 'Unadjusted P: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
1322352   +LABEL V_DepVar0  = 'Validated: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar0 = 'Validated: DepVar=0' ;
1322353   +LABEL V_DepVar1  = 'Validated: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar1 = 'Validated: DepVar=1' ;
1322354   +LABEL R_DepVar0  = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL R_DepVar0 = 'Residual: DepVar=0' ;
1322355   +LABEL R_DepVar1  = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL R_DepVar1 = 'Residual: DepVar=1' ;
1322356   +LABEL F_DepVar  = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL F_DepVar = 'From: DepVar' ;
1322357   +LABEL I_DepVar  = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL I_DepVar = 'Into: DepVar' ;
1322358   +LABEL U_DepVar  = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL U_DepVar = 'Unnormalized Into: DepVar' ;
1322359   +LABEL _WARN_  = 'Warnings' ;
MPRINT(EM_DIAGRAM):   LABEL _WARN_ = 'Warnings' ;
1322360   +
1322361   +
1322362   +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
1322363   +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
1322364   +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
1322365   +LENGTH _ARBFMT_8 $      8; DROP _ARBFMT_8;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_8 $ 8;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_8;
1322366   +_ARBFMT_8 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_8 = ' ';
1322367   +
1322368   +
1322369   +_ARBFMT_12 = PUT( DepVar , BEST.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( DepVar , BEST.);
1322370   + %DMNORMCP( _ARBFMT_12, F_DepVar );
MPRINT(DMNORMCP):   F_DepVar=dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1322371   +
1322372   +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
1322373   +IF  NOT MISSING(AcceptedCmpTotal ) AND
1322374   +                   0.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 0.5 <= AcceptedCmpTotal THEN DO;
1322375   +  IF  NOT MISSING(Recency ) AND
1322376   +    Recency  <                 38.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Recency ) AND Recency < 38.5 THEN DO;
1322377   +    IF  NOT MISSING(AcceptedCmpTotal ) AND
1322378   +                       1.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 1.5 <= AcceptedCmpTotal THEN DO;
1322379   +      _NODE_  =                   13;
MPRINT(EM_DIAGRAM):   _NODE_ = 13;
1322380   +      _LEAF_  =                   14;
MPRINT(EM_DIAGRAM):   _LEAF_ = 14;
1322381   +      P_DepVar0  =     0.05263157894736;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.05263157894736;
1322382   +      P_DepVar1  =     0.94736842105263;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.94736842105263;
1322383   +      Q_DepVar0  =     0.05263157894736;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.05263157894736;
1322384   +      Q_DepVar1  =     0.94736842105263;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.94736842105263;
1322385   +      V_DepVar0  =                    0;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0;
1322386   +      V_DepVar1  =                    1;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 1;
1322387   +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1322388   +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1322389   +      END;
MPRINT(EM_DIAGRAM):   END;
1322390   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1322391   +      _ARBFMT_8 = PUT( Marital_Status , $8.);
MPRINT(EM_DIAGRAM):   _ARBFMT_8 = PUT( Marital_Status , $8.);
1322392   +       %DMNORMIP( _ARBFMT_8);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1322393   +      IF _ARBFMT_8 IN ('WIDOW' ,'DIVORCED' ,'SINGLE' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_8 IN ('WIDOW' ,'DIVORCED' ,'SINGLE' ) THEN DO;
1322394   +        _NODE_  =                   23;
MPRINT(EM_DIAGRAM):   _NODE_ = 23;
1322395   +        _LEAF_  =                   13;
MPRINT(EM_DIAGRAM):   _LEAF_ = 13;
1322396   +        P_DepVar0  =      0.2258064516129;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.2258064516129;
1322397   +        P_DepVar1  =     0.77419354838709;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.77419354838709;
1322398   +        Q_DepVar0  =      0.2258064516129;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.2258064516129;
1322399   +        Q_DepVar1  =     0.77419354838709;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.77419354838709;
1322400   +        V_DepVar0  =     0.41935483870967;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.41935483870967;
1322401   +        V_DepVar1  =     0.58064516129032;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.58064516129032;
1322402   +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1322403   +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1322404   +        END;
MPRINT(EM_DIAGRAM):   END;
1322405   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1322406   +        IF  NOT MISSING(NumStorePurchases ) AND
1322407   +          NumStorePurchases  <                  6.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumStorePurchases ) AND NumStorePurchases < 6.5 THEN DO;
1322408   +          IF  NOT MISSING(NumWebVisitsMonth ) AND
1322409   +            NumWebVisitsMonth  <                  5.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumWebVisitsMonth ) AND NumWebVisitsMonth < 5.5 THEN DO;
1322410   +            _NODE_  =                   56;
MPRINT(EM_DIAGRAM):   _NODE_ = 56;
1322411   +            _LEAF_  =                   10;
MPRINT(EM_DIAGRAM):   _LEAF_ = 10;
1322412   +            P_DepVar0  =     0.61111111111111;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.61111111111111;
1322413   +            P_DepVar1  =     0.38888888888888;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.38888888888888;
1322414   +            Q_DepVar0  =     0.61111111111111;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.61111111111111;
1322415   +            Q_DepVar1  =     0.38888888888888;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.38888888888888;
1322416   +            V_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.66666666666666;
1322417   +            V_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.33333333333333;
1322418   +            I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1322419   +            U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1322420   +            END;
MPRINT(EM_DIAGRAM):   END;
1322421   +          ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1322422   +            _NODE_  =                   57;
MPRINT(EM_DIAGRAM):   _NODE_ = 57;
1322423   +            _LEAF_  =                   11;
MPRINT(EM_DIAGRAM):   _LEAF_ = 11;
1322424   +            P_DepVar0  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.14285714285714;
1322425   +            P_DepVar1  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.85714285714285;
1322426   +            Q_DepVar0  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.14285714285714;
1322427   +            Q_DepVar1  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.85714285714285;
1322428   +            V_DepVar0  =      0.3076923076923;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.3076923076923;
1322429   +            V_DepVar1  =     0.69230769230769;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.69230769230769;
1322430   +            I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1322431   +            U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1322432   +            END;
MPRINT(EM_DIAGRAM):   END;
1322433   +          END;
MPRINT(EM_DIAGRAM):   END;
1322434   +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1322435   +          _NODE_  =                   41;
MPRINT(EM_DIAGRAM):   _NODE_ = 41;
1322436   +          _LEAF_  =                   12;
MPRINT(EM_DIAGRAM):   _LEAF_ = 12;
1322437   +          P_DepVar0  =     0.74545454545454;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.74545454545454;
1322438   +          P_DepVar1  =     0.25454545454545;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.25454545454545;
1322439   +          Q_DepVar0  =     0.74545454545454;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.74545454545454;
1322440   +          Q_DepVar1  =     0.25454545454545;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.25454545454545;
1322441   +          V_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.66666666666666;
1322442   +          V_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.33333333333333;
1322443   +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1322444   +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1322445   +          END;
MPRINT(EM_DIAGRAM):   END;
1322446   +        END;
MPRINT(EM_DIAGRAM):   END;
1322447   +      END;
MPRINT(EM_DIAGRAM):   END;
1322448   +    END;
MPRINT(EM_DIAGRAM):   END;
1322449   +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1322450   +    IF  NOT MISSING(AcceptedCmpTotal ) AND
1322451   +                       2.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 2.5 <= AcceptedCmpTotal THEN DO;
1322452   +      _NODE_  =                   15;
MPRINT(EM_DIAGRAM):   _NODE_ = 15;
1322453   +      _LEAF_  =                   16;
MPRINT(EM_DIAGRAM):   _LEAF_ = 16;
1322454   +      P_DepVar0  =      0.3103448275862;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.3103448275862;
1322455   +      P_DepVar1  =     0.68965517241379;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.68965517241379;
1322456   +      Q_DepVar0  =      0.3103448275862;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.3103448275862;
1322457   +      Q_DepVar1  =     0.68965517241379;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.68965517241379;
1322458   +      V_DepVar0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.33333333333333;
1322459   +      V_DepVar1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.66666666666666;
1322460   +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1322461   +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1322462   +      END;
MPRINT(EM_DIAGRAM):   END;
1322463   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1322464   +      _NODE_  =                   14;
MPRINT(EM_DIAGRAM):   _NODE_ = 14;
1322465   +      _LEAF_  =                   15;
MPRINT(EM_DIAGRAM):   _LEAF_ = 15;
1322466   +      P_DepVar0  =     0.82562277580071;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.82562277580071;
1322467   +      P_DepVar1  =     0.17437722419928;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.17437722419928;
1322468   +      Q_DepVar0  =     0.82562277580071;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.82562277580071;
1322469   +      Q_DepVar1  =     0.17437722419928;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.17437722419928;
1322470   +      V_DepVar0  =     0.81818181818181;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.81818181818181;
1322471   +      V_DepVar1  =     0.18181818181818;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.18181818181818;
1322472   +      I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1322473   +      U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1322474   +      END;
MPRINT(EM_DIAGRAM):   END;
1322475   +    END;
MPRINT(EM_DIAGRAM):   END;
1322476   +  END;
MPRINT(EM_DIAGRAM):   END;
1322477   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1322478   +  IF  NOT MISSING(Recency ) AND
1322479   +    Recency  <                 32.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Recency ) AND Recency < 32.5 THEN DO;
1322480   +    IF  NOT MISSING(NumCatalogPurchases ) AND
1322481   +                       5.5 <= NumCatalogPurchases  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumCatalogPurchases ) AND 5.5 <= NumCatalogPurchases THEN 
DO;
1322482   +      IF  NOT MISSING(NumStorePurchases ) AND
1322483   +                         7.5 <= NumStorePurchases  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumStorePurchases ) AND 7.5 <= NumStorePurchases THEN DO;
1322484   +        IF  NOT MISSING(RFMstat ) AND
1322485   +              1964.32692307692 <= RFMstat  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RFMstat ) AND 1964.32692307692 <= RFMstat THEN DO;
1322486   +          _NODE_  =                   37;
MPRINT(EM_DIAGRAM):   _NODE_ = 37;
1322487   +          _LEAF_  =                    8;
MPRINT(EM_DIAGRAM):   _LEAF_ = 8;
1322488   +          P_DepVar0  =     0.42857142857142;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.42857142857142;
1322489   +          P_DepVar1  =     0.57142857142857;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.57142857142857;
1322490   +          Q_DepVar0  =     0.42857142857142;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.42857142857142;
1322491   +          Q_DepVar1  =     0.57142857142857;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.57142857142857;
1322492   +          V_DepVar0  =     0.44444444444444;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.44444444444444;
The SAS System

1322493   +          V_DepVar1  =     0.55555555555555;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.55555555555555;
1322494   +          I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1322495   +          U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1322496   +          END;
MPRINT(EM_DIAGRAM):   END;
1322497   +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1322498   +          _NODE_  =                   36;
MPRINT(EM_DIAGRAM):   _NODE_ = 36;
1322499   +          _LEAF_  =                    7;
MPRINT(EM_DIAGRAM):   _LEAF_ = 7;
1322500   +          P_DepVar0  =                    1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 1;
1322501   +          P_DepVar1  =                    0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0;
1322502   +          Q_DepVar0  =                    1;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 1;
1322503   +          Q_DepVar1  =                    0;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0;
1322504   +          V_DepVar0  =     0.69230769230769;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.69230769230769;
1322505   +          V_DepVar1  =      0.3076923076923;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.3076923076923;
1322506   +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1322507   +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1322508   +          END;
MPRINT(EM_DIAGRAM):   END;
1322509   +        END;
MPRINT(EM_DIAGRAM):   END;
1322510   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1322511   +        IF  NOT MISSING(MntFishProducts ) AND
1322512   +          MntFishProducts  <                   26 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntFishProducts ) AND MntFishProducts < 26 THEN DO;
1322513   +          _NODE_  =                   34;
MPRINT(EM_DIAGRAM):   _NODE_ = 34;
1322514   +          _LEAF_  =                    5;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
1322515   +          P_DepVar0  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.71428571428571;
1322516   +          P_DepVar1  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.28571428571428;
1322517   +          Q_DepVar0  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.71428571428571;
1322518   +          Q_DepVar1  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.28571428571428;
1322519   +          V_DepVar0  =                  0.8;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.8;
1322520   +          V_DepVar1  =                  0.2;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.2;
1322521   +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1322522   +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1322523   +          END;
MPRINT(EM_DIAGRAM):   END;
1322524   +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1322525   +          _NODE_  =                   35;
MPRINT(EM_DIAGRAM):   _NODE_ = 35;
1322526   +          _LEAF_  =                    6;
MPRINT(EM_DIAGRAM):   _LEAF_ = 6;
1322527   +          P_DepVar0  =     0.13793103448275;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.13793103448275;
1322528   +          P_DepVar1  =     0.86206896551724;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.86206896551724;
1322529   +          Q_DepVar0  =     0.13793103448275;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.13793103448275;
1322530   +          Q_DepVar1  =     0.86206896551724;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.86206896551724;
1322531   +          V_DepVar0  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.14285714285714;
1322532   +          V_DepVar1  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.85714285714285;
1322533   +          I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1322534   +          U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1322535   +          END;
MPRINT(EM_DIAGRAM):   END;
1322536   +        END;
MPRINT(EM_DIAGRAM):   END;
1322537   +      END;
MPRINT(EM_DIAGRAM):   END;
1322538   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1322539   +      IF  NOT MISSING(NumWebVisitsMonth ) AND
1322540   +                         7.5 <= NumWebVisitsMonth  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumWebVisitsMonth ) AND 7.5 <= NumWebVisitsMonth THEN DO;
1322541   +        IF  NOT MISSING(NumCatalogPurchases ) AND
1322542   +                           0.5 <= NumCatalogPurchases  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumCatalogPurchases ) AND 0.5 <= NumCatalogPurchases THEN 
DO;
1322543   +          IF  NOT MISSING(Kidhome ) AND
1322544   +            Kidhome  <                  0.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Kidhome ) AND Kidhome < 0.5 THEN DO;
1322545   +            _NODE_  =                   52;
MPRINT(EM_DIAGRAM):   _NODE_ = 52;
1322546   +            _LEAF_  =                    3;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
1322547   +            P_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.66666666666666;
1322548   +            P_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.33333333333333;
1322549   +            Q_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.66666666666666;
1322550   +            Q_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.33333333333333;
1322551   +            V_DepVar0  =                  0.6;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.6;
1322552   +            V_DepVar1  =                  0.4;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.4;
1322553   +            I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1322554   +            U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1322555   +            END;
MPRINT(EM_DIAGRAM):   END;
1322556   +          ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1322557   +            _NODE_  =                   53;
MPRINT(EM_DIAGRAM):   _NODE_ = 53;
1322558   +            _LEAF_  =                    4;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
1322559   +            P_DepVar0  =     0.26470588235294;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.26470588235294;
1322560   +            P_DepVar1  =     0.73529411764705;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.73529411764705;
1322561   +            Q_DepVar0  =     0.26470588235294;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.26470588235294;
1322562   +            Q_DepVar1  =     0.73529411764705;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.73529411764705;
1322563   +            V_DepVar0  =     0.21428571428571;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.21428571428571;
1322564   +            V_DepVar1  =     0.78571428571428;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.78571428571428;
1322565   +            I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1322566   +            U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1322567   +            END;
MPRINT(EM_DIAGRAM):   END;
1322568   +          END;
MPRINT(EM_DIAGRAM):   END;
1322569   +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1322570   +          _NODE_  =                   32;
MPRINT(EM_DIAGRAM):   _NODE_ = 32;
1322571   +          _LEAF_  =                    2;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
1322572   +          P_DepVar0  =     0.81428571428571;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.81428571428571;
1322573   +          P_DepVar1  =     0.18571428571428;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.18571428571428;
1322574   +          Q_DepVar0  =     0.81428571428571;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.81428571428571;
1322575   +          Q_DepVar1  =     0.18571428571428;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.18571428571428;
1322576   +          V_DepVar0  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.71428571428571;
1322577   +          V_DepVar1  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.28571428571428;
1322578   +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1322579   +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1322580   +          END;
MPRINT(EM_DIAGRAM):   END;
1322581   +        END;
MPRINT(EM_DIAGRAM):   END;
1322582   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1322583   +        _NODE_  =                   16;
MPRINT(EM_DIAGRAM):   _NODE_ = 16;
1322584   +        _LEAF_  =                    1;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
1322585   +        P_DepVar0  =     0.90114942528735;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.90114942528735;
1322586   +        P_DepVar1  =     0.09885057471264;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.09885057471264;
1322587   +        Q_DepVar0  =     0.90114942528735;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.90114942528735;
1322588   +        Q_DepVar1  =     0.09885057471264;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.09885057471264;
1322589   +        V_DepVar0  =      0.8848167539267;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.8848167539267;
1322590   +        V_DepVar1  =     0.11518324607329;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.11518324607329;
1322591   +        I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1322592   +        U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1322593   +        END;
MPRINT(EM_DIAGRAM):   END;
1322594   +      END;
MPRINT(EM_DIAGRAM):   END;
1322595   +    END;
MPRINT(EM_DIAGRAM):   END;
1322596   +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1322597   +    _NODE_  =                    5;
MPRINT(EM_DIAGRAM):   _NODE_ = 5;
1322598   +    _LEAF_  =                    9;
MPRINT(EM_DIAGRAM):   _LEAF_ = 9;
1322599   +    P_DepVar0  =     0.98042414355628;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.98042414355628;
1322600   +    P_DepVar1  =     0.01957585644371;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.01957585644371;
1322601   +    Q_DepVar0  =     0.98042414355628;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.98042414355628;
1322602   +    Q_DepVar1  =     0.01957585644371;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.01957585644371;
1322603   +    V_DepVar0  =     0.98795180722891;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.98795180722891;
1322604   +    V_DepVar1  =     0.01204819277108;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.01204819277108;
1322605   +    I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1322606   +    U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1322607   +    END;
MPRINT(EM_DIAGRAM):   END;
1322608   +  END;
MPRINT(EM_DIAGRAM):   END;
1322609   +
1322610   +*****  RESIDUALS R_ *************;
MPRINT(EM_DIAGRAM):   ***** RESIDUALS R_ *************;
1322611   +IF  F_DepVar  NE '0'
1322612   +AND F_DepVar  NE '1'  THEN DO;
MPRINT(EM_DIAGRAM):   IF F_DepVar NE '0' AND F_DepVar NE '1' THEN DO;
1322613   +        R_DepVar0  = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1322614   +        R_DepVar1  = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1322615   + END;
MPRINT(EM_DIAGRAM):   END;
1322616   + ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1322617   +       R_DepVar0  =  -P_DepVar0 ;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0 ;
1322618   +       R_DepVar1  =  -P_DepVar1 ;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1 ;
1322619   +       SELECT( F_DepVar  );
MPRINT(EM_DIAGRAM):   SELECT( F_DepVar );
1322620   +          WHEN( '0'  ) R_DepVar0  = R_DepVar0  +1;
MPRINT(EM_DIAGRAM):   WHEN( '0' ) R_DepVar0 = R_DepVar0 +1;
1322621   +          WHEN( '1'  ) R_DepVar1  = R_DepVar1  +1;
MPRINT(EM_DIAGRAM):   WHEN( '1' ) R_DepVar1 = R_DepVar1 +1;
1322622   +       END;
MPRINT(EM_DIAGRAM):   END;
1322623   + END;
MPRINT(EM_DIAGRAM):   END;
1322624   +
1322625   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1322626   +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
1322627   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1322628   +drop _LEAF_;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
1322629   +* Renaming variables for Tree;
MPRINT(EM_DIAGRAM):   * Renaming variables for Tree;
1322630   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1322631   +* Renaming Posterior variables for Tree;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Tree;
1322632   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1322633   +drop Tree_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Tree_P_DepVar1;
1322634   +Tree_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Tree_P_DepVar1 = P_DepVar1;
1322635   +drop Tree_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Tree_P_DepVar0;
1322636   +Tree_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Tree_P_DepVar0 = P_DepVar0;
1322637   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1322638   +* Renaming _WARN_ variable for Tree;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Tree;
1322639   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1322640   +length Tree_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Tree_WARN_ $4;
1322641   +drop Tree_WARN_;
MPRINT(EM_DIAGRAM):   drop Tree_WARN_;
1322642   +Tree_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Tree_WARN_ = _WARN_;
1322643   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1322644   +* Ensmbl: Scoring Code of model 4 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl: Scoring Code of model 4 of 10;
1322645   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1322646   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1322647   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1322648   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1322649   +* NODE: Neural4;
MPRINT(EM_DIAGRAM):   * NODE: Neural4;
1322650   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1322651   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1322652   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1322653   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1322654   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1322655   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1322656   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1322657   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1322658   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1322659   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1322660   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1322661   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1322662   +LENGTH _WARN_ $4
1322663   +      F_DepVar  $ 12
1322664   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1322665   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1322666   +
1322667   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1322668   +
1322669   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1322670   +
1322671   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1322672   +
1322673   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1322674   +
1322675   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1322676   +
1322677   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1322678   +
1322679   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1322680   +
1322681   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1322682   +
1322683   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1322684   +
1322685   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1322686   +
1322687   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1322688   +
1322689   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1322690   +
1322691   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1322692   +
1322693   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1322694   +
1322695   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1322696   +
1322697   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1322698   +
1322699   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1322700   +
1322701   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1322702   +
1322703   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1322704   +
1322705   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1322706   +
1322707   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1322708   +
1322709   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1322710   +
1322711   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1322712   +
1322713   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1322714   +
1322715   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1322716   +
1322717   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1322718   +
1322719   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1322720   +
1322721   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1322722   +
1322723   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1322724   +
1322725   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1322726   +
1322727   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1322728   +
1322729   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1322730   +
1322731   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1322732   +
1322733   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1322734   +
1322735   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1322736   +
1322737   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1322738   +
1322739   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1322740   +
1322741   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1322742   +
1322743   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1322744   +
1322745   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1322746   +
1322747   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1322748   +
1322749   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1322750   +
1322751   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1322752   +
1322753   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1322754   +
1322755   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1322756   +
1322757   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1322758   +
1322759   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1322760   +
1322761   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1322762   +
1322763   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1322764   +
1322765   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1322766   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1322767   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1322768   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1322769   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1322770   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1322771   +end;
MPRINT(EM_DIAGRAM):   end;
1322772   +else do;
MPRINT(EM_DIAGRAM):   else do;
1322773   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1322774   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1322775   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1322776   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1322777   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1322778   +   end;
MPRINT(EM_DIAGRAM):   end;
1322779   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1322780   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1322781   +   end;
MPRINT(EM_DIAGRAM):   end;
1322782   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1322783   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1322784   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1322785   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1322786   +   end;
MPRINT(EM_DIAGRAM):   end;
1322787   +end;
MPRINT(EM_DIAGRAM):   end;
1322788   +
1322789   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1322790   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1322791   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1322792   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1322793   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1322794   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1322795   +end;
MPRINT(EM_DIAGRAM):   end;
1322796   +else do;
MPRINT(EM_DIAGRAM):   else do;
1322797   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1322798   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1322799   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1322800   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1322801   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1322802   +   end;
MPRINT(EM_DIAGRAM):   end;
1322803   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1322804   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1322805   +   end;
MPRINT(EM_DIAGRAM):   end;
1322806   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1322807   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1322808   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1322809   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1322810   +   end;
MPRINT(EM_DIAGRAM):   end;
1322811   +end;
MPRINT(EM_DIAGRAM):   end;
1322812   +
1322813   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1322814   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1322815   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1322816   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1322817   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1322818   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1322819   +end;
MPRINT(EM_DIAGRAM):   end;
1322820   +else do;
MPRINT(EM_DIAGRAM):   else do;
1322821   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1322822   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1322823   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1322824   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1322825   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1322826   +   end;
MPRINT(EM_DIAGRAM):   end;
1322827   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1322828   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1322829   +   end;
MPRINT(EM_DIAGRAM):   end;
1322830   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1322831   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1322832   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1322833   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1322834   +   end;
MPRINT(EM_DIAGRAM):   end;
1322835   +end;
MPRINT(EM_DIAGRAM):   end;
1322836   +
1322837   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1322838   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1322839   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1322840   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1322841   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1322842   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1322843   +end;
MPRINT(EM_DIAGRAM):   end;
1322844   +else do;
MPRINT(EM_DIAGRAM):   else do;
1322845   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1322846   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1322847   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1322848   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1322849   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1322850   +   end;
MPRINT(EM_DIAGRAM):   end;
1322851   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1322852   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1322853   +   end;
MPRINT(EM_DIAGRAM):   end;
1322854   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1322855   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1322856   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1322857   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1322858   +   end;
MPRINT(EM_DIAGRAM):   end;
1322859   +end;
MPRINT(EM_DIAGRAM):   end;
1322860   +
1322861   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1322862   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1322863   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1322864   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1322865   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1322866   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1322867   +end;
MPRINT(EM_DIAGRAM):   end;
1322868   +else do;
MPRINT(EM_DIAGRAM):   else do;
1322869   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1322870   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1322871   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1322872   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1322873   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1322874   +   end;
MPRINT(EM_DIAGRAM):   end;
1322875   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1322876   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1322877   +   end;
MPRINT(EM_DIAGRAM):   end;
1322878   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1322879   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1322880   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1322881   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1322882   +   end;
MPRINT(EM_DIAGRAM):   end;
1322883   +end;
MPRINT(EM_DIAGRAM):   end;
1322884   +
1322885   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1322886   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1322887   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1322888   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1322889   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1322890   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1322891   +end;
MPRINT(EM_DIAGRAM):   end;
1322892   +else do;
MPRINT(EM_DIAGRAM):   else do;
1322893   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1322894   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1322895   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1322896   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1322897   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1322898   +   end;
MPRINT(EM_DIAGRAM):   end;
1322899   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1322900   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1322901   +   end;
MPRINT(EM_DIAGRAM):   end;
1322902   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1322903   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1322904   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1322905   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1322906   +   end;
MPRINT(EM_DIAGRAM):   end;
1322907   +end;
MPRINT(EM_DIAGRAM):   end;
1322908   +
1322909   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1322910   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1322911   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1322912   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1322913   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1322914   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1322915   +end;
MPRINT(EM_DIAGRAM):   end;
1322916   +else do;
MPRINT(EM_DIAGRAM):   else do;
1322917   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1322918   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1322919   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1322920   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1322921   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1322922   +   end;
MPRINT(EM_DIAGRAM):   end;
1322923   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1322924   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1322925   +   end;
MPRINT(EM_DIAGRAM):   end;
1322926   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1322927   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1322928   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1322929   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1322930   +   end;
MPRINT(EM_DIAGRAM):   end;
1322931   +end;
MPRINT(EM_DIAGRAM):   end;
1322932   +
1322933   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1322934   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1322935   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1322936   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1322937   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1322938   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1322939   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1322940   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1322941   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1322942   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1322943   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1322944   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1322945   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1322946   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1322947   +end;
MPRINT(EM_DIAGRAM):   end;
1322948   +else do;
MPRINT(EM_DIAGRAM):   else do;
1322949   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1322950   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1322951   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1322952   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1322953   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1322954   +   end;
MPRINT(EM_DIAGRAM):   end;
1322955   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1322956   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1322957   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1322958   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1322959   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1322960   +   end;
MPRINT(EM_DIAGRAM):   end;
1322961   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1322962   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1322963   +   end;
MPRINT(EM_DIAGRAM):   end;
1322964   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1322965   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1322966   +   end;
MPRINT(EM_DIAGRAM):   end;
1322967   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1322968   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1322969   +   end;
MPRINT(EM_DIAGRAM):   end;
1322970   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1322971   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1322972   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1322973   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1322974   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1322975   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1322976   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1322977   +   end;
MPRINT(EM_DIAGRAM):   end;
1322978   +end;
MPRINT(EM_DIAGRAM):   end;
1322979   +
1322980   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1322981   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1322982   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1322983   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1322984   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1322985   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1322986   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1322987   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1322988   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1322989   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1322990   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1322991   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1322992   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1322993   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1322994   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1322995   +end;
MPRINT(EM_DIAGRAM):   end;
1322996   +else do;
MPRINT(EM_DIAGRAM):   else do;
1322997   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1322998   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1322999   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1323000   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1323001   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1323002   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1323003   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1323004   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1323005   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1323006   +         end;
MPRINT(EM_DIAGRAM):   end;
1323007   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1323008   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1323009   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1323010   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1323011   +            end;
MPRINT(EM_DIAGRAM):   end;
1323012   +         end;
MPRINT(EM_DIAGRAM):   end;
1323013   +      end;
MPRINT(EM_DIAGRAM):   end;
1323014   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1323015   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1323016   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1323017   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1323018   +         end;
MPRINT(EM_DIAGRAM):   end;
1323019   +      end;
MPRINT(EM_DIAGRAM):   end;
1323020   +   end;
MPRINT(EM_DIAGRAM):   end;
1323021   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1323022   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1323023   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1323024   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1323025   +      end;
MPRINT(EM_DIAGRAM):   end;
1323026   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1323027   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1323028   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1323029   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1323030   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1323031   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1323032   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1323033   +         end;
MPRINT(EM_DIAGRAM):   end;
1323034   +      end;
MPRINT(EM_DIAGRAM):   end;
1323035   +   end;
MPRINT(EM_DIAGRAM):   end;
1323036   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1323037   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1323038   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1323039   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1323040   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1323041   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1323042   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1323043   +   end;
MPRINT(EM_DIAGRAM):   end;
1323044   +end;
MPRINT(EM_DIAGRAM):   end;
1323045   +
1323046   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1323047   +*** Checking missing input Interval
1323048   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1323049   +
1323050   +IF NMISS(
1323051   +   AcceptedCmpTotal ,
1323052   +   Age ,
1323053   +   Frq ,
1323054   +   Income ,
1323055   +   Kidhome ,
1323056   +   Mnt ,
1323057   +   MntFishProducts ,
1323058   +   MntFruits ,
1323059   +   MntGoldProds ,
1323060   +   MntMeatProducts ,
1323061   +   MntSweetProducts ,
1323062   +   MntWines ,
1323063   +   MonthsAsCustomer ,
1323064   +   NumCatalogPurchases ,
1323065   +   NumDealsPurchases ,
1323066   +   NumDistPurchases ,
1323067   +   NumStorePurchases ,
1323068   +   NumWebPurchases ,
1323069   +   NumWebVisitsMonth ,
1323070   +   RFMstat ,
1323071   +   RMntFrq ,
1323072   +   Recency ,
1323073   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1323074   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1323075   +
1323076   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1323077   +END;
MPRINT(EM_DIAGRAM):   END;
1323078   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1323079   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1323080   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1323081   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1323082   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1323083   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1323084   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1323085   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1323086   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1323087   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1323088   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1323089   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1323090   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1323091   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1323092   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1323093   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1323094   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1323095   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1323096   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1323097   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1323098   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1323099   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1323100   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1323101   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1323102   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1323103   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1323104   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1323105   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1323106   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1323107   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1323108   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1323109   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1323110   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1323111   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1323112   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1323113   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1323114   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1323115   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1323116   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1323117   +END;
MPRINT(EM_DIAGRAM):   END;
1323118   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1323119   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1323120   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1323121   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1323122   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1323123   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1323124   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1323125   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1323126   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1323127   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1323128   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1323129   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1323130   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1323131   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1323132   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1323133   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1323134   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1323135   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1323136   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1323137   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1323138   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1323139   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1323140   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1323141   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1323142   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1323143   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1323144   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1323145   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1323146   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1323147   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1323148   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1323149   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1323150   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1323151   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1323152   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1323153   +   ELSE S_NumCatalogPurchases
1323154   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1323155   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1323156   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1323157   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1323158   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1323159   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1323160   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1323161   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1323162   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1323163   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1323164   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1323165   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1323166   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1323167   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1323168   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1323169   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1323170   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1323171   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1323172   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1323173   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1323174   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1323175   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1323176   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1323177   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1323178   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1323179   +END;
MPRINT(EM_DIAGRAM):   END;
1323180   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1323181   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1323182   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1323183   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1323184   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1323185   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1323186   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1323187   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1323188   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1323189   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1323190   +   H11  =    -0.84299355418982 * S_AcceptedCmpTotal  +     0.01354424462165 *
1323191   +        S_Age  +     0.26356367995208 * S_Frq  +    -0.22651244750456 *
1323192   +        S_Income  +    -0.23050240180524 * S_Kidhome
1323193   +          +    -1.06664092571354 * S_Mnt  +     0.46271649725684 *
1323194   +        S_MntFishProducts  +     0.29675940813656 * S_MntFruits
1323195   +          +     0.11295035964093 * S_MntGoldProds  +    -4.93303695297431 *
1323196   +        S_MntMeatProducts  +    -0.54183850324086 * S_MntSweetProducts
1323197   +          +     1.44837072773075 * S_MntWines  +     0.02861081928648 *
1323198   +        S_MonthsAsCustomer  +    -1.87075238979838 * S_NumCatalogPurchases
1323199   +          +    -1.32257303635072 * S_NumDealsPurchases
1323200   +          +    -0.54480870554989 * S_NumDistPurchases
1323201   +          +     1.24793709956495 * S_NumStorePurchases
1323202   +          +      1.7974198103915 * S_NumWebPurchases
1323203   +          +    -0.94706410495328 * S_NumWebVisitsMonth
1323204   +          +    -0.08194447980826 * S_RFMstat  +     0.59486634525204 *
1323205   +        S_RMntFrq  +     0.75191254776333 * S_Recency
1323206   +          +     0.13719529324408 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.84299355418982 * S_AcceptedCmpTotal + 0.01354424462165 * S_Age 
+ 0.26356367995208 * S_Frq + -0.22651244750456 * S_Income + -0.23050240180524 * S_Kidhome + 
-1.06664092571354 * S_Mnt + 0.46271649725684 * S_MntFishProducts + 0.29675940813656 * 
S_MntFruits + 0.11295035964093 * S_MntGoldProds + -4.93303695297431 * S_MntMeatProducts + 
-0.54183850324086 * S_MntSweetProducts + 1.44837072773075 * S_MntWines + 0.02861081928648 * 
S_MonthsAsCustomer + -1.87075238979838 * S_NumCatalogPurchases + -1.32257303635072 * 
S_NumDealsPurchases + -0.54480870554989 * S_NumDistPurchases + 1.24793709956495 * 
S_NumStorePurchases + 1.7974198103915 * S_NumWebPurchases + -0.94706410495328 * 
S_NumWebVisitsMonth + -0.08194447980826 * S_RFMstat + 0.59486634525204 * S_RMntFrq + 
0.75191254776333 * S_Recency + 0.13719529324408 * S_Teenhome ;
1323207   +   H12  =     0.19794895997964 * S_AcceptedCmpTotal  +    -0.04275283557766 *
1323208   +        S_Age  +    -0.56824925508231 * S_Frq  +     0.77692983182219 *
1323209   +        S_Income  +    -0.78793784980656 * S_Kidhome
1323210   +          +     0.04472047240299 * S_Mnt  +    -0.04688509126909 *
1323211   +        S_MntFishProducts  +    -0.00374619740046 * S_MntFruits
1323212   +          +     0.04963586007888 * S_MntGoldProds  +      1.0706121357066 *
1323213   +        S_MntMeatProducts  +     -0.1297171300067 * S_MntSweetProducts
1323214   +          +    -0.13703855748888 * S_MntWines  +     0.12672829255314 *
1323215   +        S_MonthsAsCustomer  +     0.72932641344764 * S_NumCatalogPurchases
1323216   +          +     0.70535680060775 * S_NumDealsPurchases
1323217   +          +    -0.15561838359391 * S_NumDistPurchases
1323218   +          +    -0.86545647977011 * S_NumStorePurchases
1323219   +          +    -0.78435825863867 * S_NumWebPurchases
1323220   +          +     1.76113949975149 * S_NumWebVisitsMonth
1323221   +          +     0.12430819021552 * S_RFMstat  +    -1.23324881442206 *
1323222   +        S_RMntFrq  +    -1.54576826012241 * S_Recency
1323223   +          +     -0.4369755549417 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.19794895997964 * S_AcceptedCmpTotal + -0.04275283557766 * S_Age 
+ -0.56824925508231 * S_Frq + 0.77692983182219 * S_Income + -0.78793784980656 * S_Kidhome + 
0.04472047240299 * S_Mnt + -0.04688509126909 * S_MntFishProducts + -0.00374619740046 * 
S_MntFruits + 0.04963586007888 * S_MntGoldProds + 1.0706121357066 * S_MntMeatProducts + 
-0.1297171300067 * S_MntSweetProducts + -0.13703855748888 * S_MntWines + 0.12672829255314 * 
S_MonthsAsCustomer + 0.72932641344764 * S_NumCatalogPurchases + 0.70535680060775 * 
S_NumDealsPurchases + -0.15561838359391 * S_NumDistPurchases + -0.86545647977011 * 
S_NumStorePurchases + -0.78435825863867 * S_NumWebPurchases + 1.76113949975149 * 
S_NumWebVisitsMonth + 0.12430819021552 * S_RFMstat + -1.23324881442206 * S_RMntFrq + 
-1.54576826012241 * S_Recency + -0.4369755549417 * S_Teenhome ;
1323224   +   H13  =     1.17645971046641 * S_AcceptedCmpTotal  +     0.30922319488674 *
1323225   +        S_Age  +     0.05428662439399 * S_Frq  +     1.21807403747713 *
1323226   +        S_Income  +    -0.59349067735666 * S_Kidhome
1323227   +          +     0.48252305689599 * S_Mnt  +    -0.37595381735402 *
1323228   +        S_MntFishProducts  +    -0.13011704623919 * S_MntFruits
1323229   +          +     0.89281681720037 * S_MntGoldProds  +     2.21463961986297 *
1323230   +        S_MntMeatProducts  +    -0.13844613393182 * S_MntSweetProducts
1323231   +          +    -0.93052774237188 * S_MntWines  +    -0.15329145148081 *
1323232   +        S_MonthsAsCustomer  +    -0.35464993634392 * S_NumCatalogPurchases
1323233   +          +     0.21510592309387 * S_NumDealsPurchases
1323234   +          +    -0.05401897321491 * S_NumDistPurchases
1323235   +          +     0.14945584086188 * S_NumStorePurchases
1323236   +          +    -0.09993898051701 * S_NumWebPurchases
1323237   +          +     1.40189771606069 * S_NumWebVisitsMonth
1323238   +          +    -0.37624880818184 * S_RFMstat  +     1.08211585195417 *
1323239   +        S_RMntFrq  +    -1.39818267754244 * S_Recency
1323240   +          +    -1.40352649738739 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 1.17645971046641 * S_AcceptedCmpTotal + 0.30922319488674 * S_Age + 
0.05428662439399 * S_Frq + 1.21807403747713 * S_Income + -0.59349067735666 * S_Kidhome + 
0.48252305689599 * S_Mnt + -0.37595381735402 * S_MntFishProducts + -0.13011704623919 * 
S_MntFruits + 0.89281681720037 * S_MntGoldProds + 2.21463961986297 * S_MntMeatProducts + 
-0.13844613393182 * S_MntSweetProducts + -0.93052774237188 * S_MntWines + -0.15329145148081 * 
S_MonthsAsCustomer + -0.35464993634392 * S_NumCatalogPurchases + 0.21510592309387 * 
S_NumDealsPurchases + -0.05401897321491 * S_NumDistPurchases + 0.14945584086188 * 
S_NumStorePurchases + -0.09993898051701 * S_NumWebPurchases + 1.40189771606069 * 
S_NumWebVisitsMonth + -0.37624880818184 * S_RFMstat + 1.08211585195417 * S_RMntFrq + 
-1.39818267754244 * S_Recency + -1.40352649738739 * S_Teenhome ;
1323241   +   H14  =     1.27893467893779 * S_AcceptedCmpTotal  +     0.01880979187764 *
1323242   +        S_Age  +    -0.70756405701277 * S_Frq  +     1.53745885395395 *
1323243   +        S_Income  +    -0.61129984920194 * S_Kidhome
1323244   +          +    -0.41376232228418 * S_Mnt  +      0.0693214270226 *
1323245   +        S_MntFishProducts  +    -0.38136390810525 * S_MntFruits
1323246   +          +    -0.00750645920769 * S_MntGoldProds  +     0.87695145656238 *
1323247   +        S_MntMeatProducts  +    -0.04977219570302 * S_MntSweetProducts
1323248   +          +     -0.6549812298966 * S_MntWines  +    -1.30809571041702 *
1323249   +        S_MonthsAsCustomer  +     1.09130957811982 * S_NumCatalogPurchases
1323250   +          +     0.81353732439473 * S_NumDealsPurchases
1323251   +          +     0.32933472931941 * S_NumDistPurchases
1323252   +          +    -1.28188012143595 * S_NumStorePurchases
1323253   +          +    -0.81914782214243 * S_NumWebPurchases
1323254   +          +     1.20332282902342 * S_NumWebVisitsMonth
1323255   +          +     0.64952098333126 * S_RFMstat  +     -0.9542946440546 *
1323256   +        S_RMntFrq  +    -2.33912996419146 * S_Recency
1323257   +          +    -0.87409399936848 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 1.27893467893779 * S_AcceptedCmpTotal + 0.01880979187764 * S_Age + 
-0.70756405701277 * S_Frq + 1.53745885395395 * S_Income + -0.61129984920194 * S_Kidhome + 
-0.41376232228418 * S_Mnt + 0.0693214270226 * S_MntFishProducts + -0.38136390810525 * 
S_MntFruits + -0.00750645920769 * S_MntGoldProds + 0.87695145656238 * S_MntMeatProducts + 
-0.04977219570302 * S_MntSweetProducts + -0.6549812298966 * S_MntWines + -1.30809571041702 * 
S_MonthsAsCustomer + 1.09130957811982 * S_NumCatalogPurchases + 0.81353732439473 * 
S_NumDealsPurchases + 0.32933472931941 * S_NumDistPurchases + -1.28188012143595 * 
S_NumStorePurchases + -0.81914782214243 * S_NumWebPurchases + 1.20332282902342 * 
S_NumWebVisitsMonth + 0.64952098333126 * S_RFMstat + -0.9542946440546 * S_RMntFrq + 
-2.33912996419146 * S_Recency + -0.87409399936848 * S_Teenhome ;
1323258   +   H11  = H11  +     0.59375673291979 * AcceptedCmp10
1323259   +          +     0.02203755618618 * AcceptedCmp20  +    -0.21181019584832 *
1323260   +        AcceptedCmp30  +     0.23268323109228 * AcceptedCmp40
1323261   +          +     0.90104209081514 * AcceptedCmp50  +     0.38697558270231 *
1323262   +        Complain0  +     0.35031878791853 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.59375673291979 * AcceptedCmp10 + 0.02203755618618 * 
AcceptedCmp20 + -0.21181019584832 * AcceptedCmp30 + 0.23268323109228 * AcceptedCmp40 + 
0.90104209081514 * AcceptedCmp50 + 0.38697558270231 * Complain0 + 0.35031878791853 * 
HigherEducationBinary0 ;
1323263   +   H12  = H12  +     -0.5730983744808 * AcceptedCmp10
1323264   +          +    -0.34424275081615 * AcceptedCmp20  +    -0.44620106374863 *
1323265   +        AcceptedCmp30  +    -0.49481575237203 * AcceptedCmp40
1323266   +          +    -0.69117141341081 * AcceptedCmp50  +     0.51229650850652 *
1323267   +        Complain0  +    -0.11735442134022 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.5730983744808 * AcceptedCmp10 + -0.34424275081615 * 
AcceptedCmp20 + -0.44620106374863 * AcceptedCmp30 + -0.49481575237203 * AcceptedCmp40 + 
-0.69117141341081 * AcceptedCmp50 + 0.51229650850652 * Complain0 + -0.11735442134022 * 
HigherEducationBinary0 ;
1323268   +   H13  = H13  +    -1.12949380623281 * AcceptedCmp10
1323269   +          +    -0.52986298901299 * AcceptedCmp20  +    -0.35665685041759 *
1323270   +        AcceptedCmp30  +    -0.03028806067484 * AcceptedCmp40
1323271   +          +    -0.17063695271842 * AcceptedCmp50  +    -1.10439852571034 *
1323272   +        Complain0  +      0.4574039172898 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -1.12949380623281 * AcceptedCmp10 + -0.52986298901299 * 
AcceptedCmp20 + -0.35665685041759 * AcceptedCmp30 + -0.03028806067484 * AcceptedCmp40 + 
-0.17063695271842 * AcceptedCmp50 + -1.10439852571034 * Complain0 + 0.4574039172898 * 
HigherEducationBinary0 ;
1323273   +   H14  = H14  +     0.90425496220772 * AcceptedCmp10
1323274   +          +     0.02606316440589 * AcceptedCmp20  +     0.05631172953758 *
1323275   +        AcceptedCmp30  +    -0.45861962742584 * AcceptedCmp40
1323276   +          +    -0.52730223640646 * AcceptedCmp50  +      1.1577500782814 *
1323277   +        Complain0  +    -0.02439051385945 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.90425496220772 * AcceptedCmp10 + 0.02606316440589 * 
AcceptedCmp20 + 0.05631172953758 * AcceptedCmp30 + -0.45861962742584 * AcceptedCmp40 + 
-0.52730223640646 * AcceptedCmp50 + 1.1577500782814 * Complain0 + -0.02439051385945 * 
HigherEducationBinary0 ;
1323278   +   H11  = H11  +    -0.36857478578596 * Education2n_Cycle
1323279   +          +     0.19898218105822 * EducationBasic  +     0.02724838036933 *
1323280   +        EducationGraduation  +    -0.18265777565193 * EducationMaster
1323281   +          +     0.38068062371853 * Marital_StatusDivorced
1323282   +          +    -0.09269938603625 * Marital_StatusMarried
1323283   +          +    -0.17904543311137 * Marital_StatusSingle
1323284   +          +    -0.13128093417312 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.36857478578596 * Education2n_Cycle + 0.19898218105822 * 
EducationBasic + 0.02724838036933 * EducationGraduation + -0.18265777565193 * EducationMaster 
+ 0.38068062371853 * Marital_StatusDivorced + -0.09269938603625 * Marital_StatusMarried + 
-0.17904543311137 * Marital_StatusSingle + -0.13128093417312 * Marital_StatusTogether ;
1323285   +   H12  = H12  +     0.57160337074566 * Education2n_Cycle
1323286   +          +    -0.43780721536745 * EducationBasic  +     0.14323913032441 *
1323287   +        EducationGraduation  +      -0.555680629921 * EducationMaster
1323288   +          +     0.46191454760643 * Marital_StatusDivorced
1323289   +          +    -1.36520525874032 * Marital_StatusMarried
1323290   +          +     1.36669525533789 * Marital_StatusSingle
1323291   +          +    -1.54396080382919 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.57160337074566 * Education2n_Cycle + -0.43780721536745 * 
EducationBasic + 0.14323913032441 * EducationGraduation + -0.555680629921 * EducationMaster + 
0.46191454760643 * Marital_StatusDivorced + -1.36520525874032 * Marital_StatusMarried + 
1.36669525533789 * Marital_StatusSingle + -1.54396080382919 * Marital_StatusTogether ;
1323292   +   H13  = H13  +    -0.69472324326666 * Education2n_Cycle
1323293   +          +     1.16589091191624 * EducationBasic  +     -0.2092156588512 *
1323294   +        EducationGraduation  +    -0.01875362530677 * EducationMaster
1323295   +          +     0.18693560360309 * Marital_StatusDivorced
1323296   +          +    -0.56475988428608 * Marital_StatusMarried
1323297   +          +     0.79263891340625 * Marital_StatusSingle
1323298   +          +    -0.06098632630716 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.69472324326666 * Education2n_Cycle + 1.16589091191624 * 
EducationBasic + -0.2092156588512 * EducationGraduation + -0.01875362530677 * EducationMaster 
+ 0.18693560360309 * Marital_StatusDivorced + -0.56475988428608 * Marital_StatusMarried + 
0.79263891340625 * Marital_StatusSingle + -0.06098632630716 * Marital_StatusTogether ;
1323299   +   H14  = H14  +     0.06911242671078 * Education2n_Cycle
1323300   +          +    -0.01750231496702 * EducationBasic  +    -0.32110835963458 *
1323301   +        EducationGraduation  +     0.38698693412081 * EducationMaster
1323302   +          +     1.14025450669394 * Marital_StatusDivorced
1323303   +          +     0.78122963298728 * Marital_StatusMarried
1323304   +          +    -1.37860768059913 * Marital_StatusSingle
1323305   +          +     0.04814874553216 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.06911242671078 * Education2n_Cycle + -0.01750231496702 * 
EducationBasic + -0.32110835963458 * EducationGraduation + 0.38698693412081 * EducationMaster 
+ 1.14025450669394 * Marital_StatusDivorced + 0.78122963298728 * Marital_StatusMarried + 
-1.37860768059913 * Marital_StatusSingle + 0.04814874553216 * Marital_StatusTogether ;
1323306   +   H11  =    -1.84343242480594 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.84343242480594 + H11 ;
1323307   +   H12  =     1.29327809357238 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.29327809357238 + H12 ;
1323308   +   H13  =    -0.37221770912681 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.37221770912681 + H13 ;
1323309   +   H14  =    -0.62919123351659 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.62919123351659 + H14 ;
1323310   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1323311   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1323312   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1323313   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1323314   +END;
MPRINT(EM_DIAGRAM):   END;
1323315   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1323316   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1323317   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1323318   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1323319   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1323320   +END;
MPRINT(EM_DIAGRAM):   END;
1323321   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1323322   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1323323   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1323324   +
1323325   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1323326   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1323327   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1323328   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1323329   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1323330   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1323331   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1323332   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1323333   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1323334   +end;
MPRINT(EM_DIAGRAM):   end;
1323335   +else do;
MPRINT(EM_DIAGRAM):   else do;
1323336   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1323337   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1323338   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1323339   +   end;
MPRINT(EM_DIAGRAM):   end;
1323340   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1323341   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1323342   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1323343   +   end;
MPRINT(EM_DIAGRAM):   end;
1323344   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1323345   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1323346   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1323347   +   end;
MPRINT(EM_DIAGRAM):   end;
1323348   +end;
MPRINT(EM_DIAGRAM):   end;
1323349   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1323350   +   P_DepVar1  =    -3.75170032730169 * H11  +     5.71110229580931 * H12
1323351   +          +     2.78452207249475 * H13  +     3.19333794612831 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.75170032730169 * H11 + 5.71110229580931 * H12 + 
2.78452207249475 * H13 + 3.19333794612831 * H14 ;
1323352   +   P_DepVar1  =    -6.67752417555263 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.67752417555263 + P_DepVar1 ;
1323353   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1323354   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1323355   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1323356   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1323357   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1323358   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1323359   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1323360   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1323361   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1323362   +END;
MPRINT(EM_DIAGRAM):   END;
1323363   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1323364   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1323365   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1323366   +END;
MPRINT(EM_DIAGRAM):   END;
1323367   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1323368   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1323369   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1323370   +END;
MPRINT(EM_DIAGRAM):   END;
1323371   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1323372   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1323373   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1323374   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1323375   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1323376   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1323377   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1323378   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1323379   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1323380   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1323381   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1323382   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1323383   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1323384   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1323385   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1323386   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1323387   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1323388   +END;
MPRINT(EM_DIAGRAM):   END;
1323389   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1323390   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1323391   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1323392   +drop
1323393   +H11
1323394   +H12
1323395   +H13
1323396   +H14
1323397   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1323398   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1323399   +* Renaming variables for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural4;
1323400   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1323401   +* Renaming Posterior variables for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural4;
1323402   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1323403   +drop Neural4_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural4_P_DepVar1;
1323404   +Neural4_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural4_P_DepVar1 = P_DepVar1;
1323405   +drop Neural4_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural4_P_DepVar0;
1323406   +Neural4_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural4_P_DepVar0 = P_DepVar0;
1323407   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1323408   +* Renaming _WARN_ variable for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural4;
1323409   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1323410   +length Neural4_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural4_WARN_ $4;
1323411   +drop Neural4_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural4_WARN_;
1323412   +Neural4_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural4_WARN_ = _WARN_;
1323413   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1323414   +* Ensmbl: Scoring Code of model 5 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl: Scoring Code of model 5 of 10;
1323415   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1323416   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1323417   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1323418   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1323419   +* NODE: Neural;
MPRINT(EM_DIAGRAM):   * NODE: Neural;
1323420   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1323421   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1323422   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1323423   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1323424   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1323425   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1323426   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1323427   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1323428   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1323429   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1323430   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1323431   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1323432   +LENGTH _WARN_ $4
1323433   +      F_DepVar  $ 12
1323434   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1323435   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1323436   +
1323437   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1323438   +
1323439   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1323440   +
1323441   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1323442   +
1323443   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1323444   +
1323445   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1323446   +
1323447   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1323448   +
1323449   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1323450   +
1323451   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1323452   +
1323453   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1323454   +
1323455   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1323456   +
1323457   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1323458   +
1323459   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1323460   +
1323461   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1323462   +
1323463   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1323464   +
1323465   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1323466   +
1323467   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1323468   +
1323469   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1323470   +
1323471   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1323472   +
1323473   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1323474   +
1323475   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1323476   +
1323477   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1323478   +
1323479   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1323480   +
1323481   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1323482   +
1323483   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1323484   +
1323485   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1323486   +
1323487   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1323488   +
1323489   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1323490   +
1323491   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1323492   +
1323493   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1323494   +
1323495   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1323496   +
1323497   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1323498   +
1323499   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1323500   +
1323501   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1323502   +
1323503   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1323504   +
1323505   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1323506   +
1323507   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1323508   +
1323509   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1323510   +
1323511   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1323512   +
1323513   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1323514   +
1323515   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1323516   +
1323517   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1323518   +
1323519   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1323520   +
1323521   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1323522   +
1323523   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1323524   +
1323525   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1323526   +
1323527   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1323528   +
1323529   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1323530   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1323531   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1323532   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1323533   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1323534   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1323535   +end;
MPRINT(EM_DIAGRAM):   end;
1323536   +else do;
MPRINT(EM_DIAGRAM):   else do;
1323537   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1323538   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1323539   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1323540   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1323541   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1323542   +   end;
MPRINT(EM_DIAGRAM):   end;
1323543   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1323544   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1323545   +   end;
MPRINT(EM_DIAGRAM):   end;
1323546   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1323547   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1323548   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1323549   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1323550   +   end;
MPRINT(EM_DIAGRAM):   end;
1323551   +end;
MPRINT(EM_DIAGRAM):   end;
1323552   +
1323553   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1323554   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1323555   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1323556   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1323557   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1323558   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1323559   +end;
MPRINT(EM_DIAGRAM):   end;
1323560   +else do;
MPRINT(EM_DIAGRAM):   else do;
1323561   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1323562   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1323563   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1323564   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1323565   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1323566   +   end;
MPRINT(EM_DIAGRAM):   end;
1323567   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1323568   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1323569   +   end;
MPRINT(EM_DIAGRAM):   end;
1323570   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1323571   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1323572   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1323573   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1323574   +   end;
MPRINT(EM_DIAGRAM):   end;
1323575   +end;
MPRINT(EM_DIAGRAM):   end;
1323576   +
1323577   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1323578   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1323579   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1323580   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1323581   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1323582   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1323583   +end;
MPRINT(EM_DIAGRAM):   end;
1323584   +else do;
MPRINT(EM_DIAGRAM):   else do;
1323585   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1323586   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1323587   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1323588   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1323589   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1323590   +   end;
MPRINT(EM_DIAGRAM):   end;
1323591   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1323592   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1323593   +   end;
MPRINT(EM_DIAGRAM):   end;
1323594   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1323595   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1323596   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1323597   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1323598   +   end;
MPRINT(EM_DIAGRAM):   end;
1323599   +end;
MPRINT(EM_DIAGRAM):   end;
1323600   +
1323601   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1323602   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1323603   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1323604   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1323605   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1323606   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1323607   +end;
MPRINT(EM_DIAGRAM):   end;
1323608   +else do;
MPRINT(EM_DIAGRAM):   else do;
1323609   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1323610   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1323611   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1323612   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1323613   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1323614   +   end;
MPRINT(EM_DIAGRAM):   end;
1323615   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1323616   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1323617   +   end;
MPRINT(EM_DIAGRAM):   end;
1323618   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1323619   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1323620   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1323621   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1323622   +   end;
MPRINT(EM_DIAGRAM):   end;
1323623   +end;
MPRINT(EM_DIAGRAM):   end;
1323624   +
1323625   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1323626   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1323627   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1323628   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1323629   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1323630   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1323631   +end;
MPRINT(EM_DIAGRAM):   end;
1323632   +else do;
MPRINT(EM_DIAGRAM):   else do;
1323633   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1323634   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1323635   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1323636   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1323637   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1323638   +   end;
MPRINT(EM_DIAGRAM):   end;
1323639   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1323640   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1323641   +   end;
MPRINT(EM_DIAGRAM):   end;
1323642   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1323643   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1323644   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1323645   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1323646   +   end;
MPRINT(EM_DIAGRAM):   end;
1323647   +end;
MPRINT(EM_DIAGRAM):   end;
1323648   +
1323649   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1323650   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1323651   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1323652   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1323653   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1323654   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1323655   +end;
MPRINT(EM_DIAGRAM):   end;
1323656   +else do;
MPRINT(EM_DIAGRAM):   else do;
1323657   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1323658   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1323659   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1323660   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1323661   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1323662   +   end;
MPRINT(EM_DIAGRAM):   end;
1323663   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1323664   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1323665   +   end;
MPRINT(EM_DIAGRAM):   end;
1323666   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1323667   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1323668   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1323669   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1323670   +   end;
MPRINT(EM_DIAGRAM):   end;
1323671   +end;
MPRINT(EM_DIAGRAM):   end;
1323672   +
1323673   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1323674   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1323675   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1323676   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1323677   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1323678   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1323679   +end;
MPRINT(EM_DIAGRAM):   end;
1323680   +else do;
MPRINT(EM_DIAGRAM):   else do;
1323681   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1323682   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1323683   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1323684   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1323685   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1323686   +   end;
MPRINT(EM_DIAGRAM):   end;
1323687   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1323688   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1323689   +   end;
MPRINT(EM_DIAGRAM):   end;
1323690   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1323691   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1323692   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1323693   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1323694   +   end;
MPRINT(EM_DIAGRAM):   end;
1323695   +end;
MPRINT(EM_DIAGRAM):   end;
1323696   +
1323697   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1323698   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1323699   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1323700   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1323701   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1323702   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1323703   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1323704   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1323705   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1323706   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1323707   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1323708   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1323709   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1323710   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1323711   +end;
MPRINT(EM_DIAGRAM):   end;
1323712   +else do;
MPRINT(EM_DIAGRAM):   else do;
1323713   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1323714   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1323715   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1323716   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1323717   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1323718   +   end;
MPRINT(EM_DIAGRAM):   end;
1323719   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1323720   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1323721   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1323722   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1323723   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1323724   +   end;
MPRINT(EM_DIAGRAM):   end;
1323725   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1323726   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1323727   +   end;
MPRINT(EM_DIAGRAM):   end;
1323728   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1323729   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1323730   +   end;
MPRINT(EM_DIAGRAM):   end;
1323731   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1323732   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1323733   +   end;
MPRINT(EM_DIAGRAM):   end;
1323734   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1323735   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1323736   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1323737   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1323738   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1323739   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1323740   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1323741   +   end;
MPRINT(EM_DIAGRAM):   end;
1323742   +end;
MPRINT(EM_DIAGRAM):   end;
1323743   +
1323744   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1323745   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1323746   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1323747   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1323748   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1323749   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1323750   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1323751   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1323752   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1323753   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1323754   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1323755   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1323756   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1323757   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1323758   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1323759   +end;
MPRINT(EM_DIAGRAM):   end;
1323760   +else do;
MPRINT(EM_DIAGRAM):   else do;
1323761   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1323762   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1323763   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1323764   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1323765   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1323766   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1323767   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1323768   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1323769   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1323770   +         end;
MPRINT(EM_DIAGRAM):   end;
1323771   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1323772   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1323773   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1323774   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1323775   +            end;
MPRINT(EM_DIAGRAM):   end;
1323776   +         end;
MPRINT(EM_DIAGRAM):   end;
1323777   +      end;
MPRINT(EM_DIAGRAM):   end;
1323778   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1323779   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1323780   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1323781   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1323782   +         end;
MPRINT(EM_DIAGRAM):   end;
1323783   +      end;
MPRINT(EM_DIAGRAM):   end;
1323784   +   end;
MPRINT(EM_DIAGRAM):   end;
1323785   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1323786   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1323787   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1323788   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1323789   +      end;
MPRINT(EM_DIAGRAM):   end;
1323790   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1323791   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1323792   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1323793   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1323794   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1323795   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1323796   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1323797   +         end;
MPRINT(EM_DIAGRAM):   end;
1323798   +      end;
MPRINT(EM_DIAGRAM):   end;
1323799   +   end;
MPRINT(EM_DIAGRAM):   end;
1323800   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1323801   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1323802   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1323803   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1323804   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1323805   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1323806   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1323807   +   end;
MPRINT(EM_DIAGRAM):   end;
1323808   +end;
MPRINT(EM_DIAGRAM):   end;
1323809   +
1323810   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1323811   +*** Checking missing input Interval
1323812   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1323813   +
1323814   +IF NMISS(
1323815   +   AcceptedCmpTotal ,
1323816   +   Age ,
1323817   +   Frq ,
1323818   +   Income ,
1323819   +   Kidhome ,
1323820   +   Mnt ,
1323821   +   MntFishProducts ,
1323822   +   MntFruits ,
1323823   +   MntGoldProds ,
1323824   +   MntMeatProducts ,
1323825   +   MntSweetProducts ,
1323826   +   MntWines ,
1323827   +   MonthsAsCustomer ,
1323828   +   NumCatalogPurchases ,
1323829   +   NumDealsPurchases ,
1323830   +   NumDistPurchases ,
1323831   +   NumStorePurchases ,
1323832   +   NumWebPurchases ,
1323833   +   NumWebVisitsMonth ,
1323834   +   RFMstat ,
1323835   +   RMntFrq ,
1323836   +   Recency ,
1323837   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1323838   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1323839   +
1323840   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1323841   +END;
MPRINT(EM_DIAGRAM):   END;
1323842   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1323843   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1323844   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1323845   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1323846   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1323847   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1323848   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1323849   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1323850   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1323851   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1323852   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1323853   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1323854   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1323855   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1323856   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1323857   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1323858   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1323859   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1323860   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1323861   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1323862   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1323863   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1323864   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1323865   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1323866   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1323867   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1323868   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1323869   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1323870   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1323871   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1323872   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1323873   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1323874   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1323875   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1323876   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1323877   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1323878   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1323879   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1323880   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1323881   +END;
MPRINT(EM_DIAGRAM):   END;
1323882   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1323883   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1323884   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1323885   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1323886   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1323887   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1323888   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1323889   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1323890   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1323891   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1323892   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1323893   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1323894   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1323895   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1323896   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1323897   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1323898   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1323899   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1323900   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1323901   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1323902   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1323903   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1323904   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1323905   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1323906   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1323907   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1323908   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1323909   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1323910   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1323911   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1323912   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1323913   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1323914   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1323915   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1323916   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1323917   +   ELSE S_NumCatalogPurchases
1323918   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1323919   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1323920   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1323921   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1323922   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1323923   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1323924   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1323925   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1323926   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1323927   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1323928   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1323929   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1323930   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1323931   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1323932   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1323933   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1323934   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1323935   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1323936   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1323937   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1323938   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1323939   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1323940   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1323941   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1323942   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1323943   +END;
MPRINT(EM_DIAGRAM):   END;
1323944   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1323945   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1323946   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1323947   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1323948   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1323949   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1323950   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1323951   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1323952   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1323953   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1323954   +   H11  =     0.21197486042877 * S_AcceptedCmpTotal  +    -0.02949522070573 *
1323955   +        S_Age  +    -0.16919312615037 * S_Frq  +     0.14522255331039 *
1323956   +        S_Income  +     -0.0266473959975 * S_Kidhome
1323957   +          +     0.00778892787353 * S_Mnt  +    -0.04773629470954 *
1323958   +        S_MntFishProducts  +    -0.04230043327825 * S_MntFruits
1323959   +          +     0.00794218138067 * S_MntGoldProds  +      0.2107009197796 *
1323960   +        S_MntMeatProducts  +    -0.02357514913511 * S_MntSweetProducts
1323961   +          +    -0.19324648510173 * S_MntWines  +    -0.01985289349376 *
1323962   +        S_MonthsAsCustomer  +     0.28120382833347 * S_NumCatalogPurchases
1323963   +          +     0.15204082764648 * S_NumDealsPurchases
1323964   +          +     0.06913395421701 * S_NumDistPurchases
1323965   +          +    -0.06320045391889 * S_NumStorePurchases
1323966   +          +    -0.10763219134397 * S_NumWebPurchases
1323967   +          +     0.30129325870073 * S_NumWebVisitsMonth
1323968   +          +      0.0486741214698 * S_RFMstat  +     0.05669529576559 *
1323969   +        S_RMntFrq  +    -0.33977590725175 * S_Recency
1323970   +          +    -0.07911174205052 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.21197486042877 * S_AcceptedCmpTotal + -0.02949522070573 * S_Age 
+ -0.16919312615037 * S_Frq + 0.14522255331039 * S_Income + -0.0266473959975 * S_Kidhome + 
0.00778892787353 * S_Mnt + -0.04773629470954 * S_MntFishProducts + -0.04230043327825 * 
S_MntFruits + 0.00794218138067 * S_MntGoldProds + 0.2107009197796 * S_MntMeatProducts + 
-0.02357514913511 * S_MntSweetProducts + -0.19324648510173 * S_MntWines + -0.01985289349376 * 
S_MonthsAsCustomer + 0.28120382833347 * S_NumCatalogPurchases + 0.15204082764648 * 
S_NumDealsPurchases + 0.06913395421701 * S_NumDistPurchases + -0.06320045391889 * 
S_NumStorePurchases + -0.10763219134397 * S_NumWebPurchases + 0.30129325870073 * 
S_NumWebVisitsMonth + 0.0486741214698 * S_RFMstat + 0.05669529576559 * S_RMntFrq + 
-0.33977590725175 * S_Recency + -0.07911174205052 * S_Teenhome ;
1323971   +   H11  = H11  +    -0.00076888633638 * AcceptedCmp10
1323972   +          +     0.00331144478287 * AcceptedCmp20  +    -0.01959880328373 *
1323973   +        AcceptedCmp30  +     0.01506573257273 * AcceptedCmp40
1323974   +          +     -0.0677799414781 * AcceptedCmp50  +     0.04559602713799 *
1323975   +        Complain0  +    -0.02207878651679 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.00076888633638 * AcceptedCmp10 + 0.00331144478287 * 
AcceptedCmp20 + -0.01959880328373 * AcceptedCmp30 + 0.01506573257273 * AcceptedCmp40 + 
-0.0677799414781 * AcceptedCmp50 + 0.04559602713799 * Complain0 + -0.02207878651679 * 
HigherEducationBinary0 ;
1323976   +   H11  = H11  +     0.02201277166891 * Education2n_Cycle
1323977   +          +    -0.04148038680327 * EducationBasic  +     0.02074941779593 *
1323978   +        EducationGraduation  +    -0.00113068890412 * EducationMaster
1323979   +          +     0.03231190657829 * Marital_StatusDivorced
1323980   +          +    -0.11915392851312 * Marital_StatusMarried
1323981   +          +     0.09075278174727 * Marital_StatusSingle
1323982   +          +    -0.12491280689858 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.02201277166891 * Education2n_Cycle + -0.04148038680327 * 
EducationBasic + 0.02074941779593 * EducationGraduation + -0.00113068890412 * EducationMaster 
+ 0.03231190657829 * Marital_StatusDivorced + -0.11915392851312 * Marital_StatusMarried + 
0.09075278174727 * Marital_StatusSingle + -0.12491280689858 * Marital_StatusTogether ;
1323983   +   H11  =    -0.51532097089609 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.51532097089609 + H11 ;
1323984   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1323985   +END;
MPRINT(EM_DIAGRAM):   END;
1323986   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1323987   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1323988   +END;
MPRINT(EM_DIAGRAM):   END;
1323989   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1323990   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1323991   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1323992   +
1323993   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1323994   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1323995   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1323996   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1323997   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1323998   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1323999   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1324000   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1324001   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1324002   +end;
MPRINT(EM_DIAGRAM):   end;
1324003   +else do;
MPRINT(EM_DIAGRAM):   else do;
1324004   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1324005   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1324006   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1324007   +   end;
MPRINT(EM_DIAGRAM):   end;
1324008   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1324009   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1324010   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1324011   +   end;
MPRINT(EM_DIAGRAM):   end;
1324012   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1324013   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1324014   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1324015   +   end;
MPRINT(EM_DIAGRAM):   end;
1324016   +end;
MPRINT(EM_DIAGRAM):   end;
1324017   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1324018   +   P_DepVar1  =     8.82153759949468 * H11 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 8.82153759949468 * H11 ;
1324019   +   P_DepVar1  =    -0.58718093717937 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.58718093717937 + P_DepVar1 ;
1324020   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1324021   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1324022   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1324023   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1324024   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1324025   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1324026   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1324027   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1324028   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1324029   +END;
MPRINT(EM_DIAGRAM):   END;
1324030   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1324031   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1324032   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1324033   +END;
MPRINT(EM_DIAGRAM):   END;
1324034   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1324035   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1324036   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1324037   +END;
MPRINT(EM_DIAGRAM):   END;
1324038   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1324039   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1324040   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1324041   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1324042   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1324043   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1324044   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1324045   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1324046   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1324047   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1324048   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1324049   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1324050   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1324051   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1324052   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1324053   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1324054   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1324055   +END;
MPRINT(EM_DIAGRAM):   END;
1324056   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1324057   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1324058   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1324059   +drop
1324060   +H11
1324061   +;
MPRINT(EM_DIAGRAM):   drop H11 ;
1324062   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1324063   +* Renaming variables for Neural;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural;
1324064   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1324065   +* Renaming Posterior variables for Neural;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural;
1324066   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1324067   +drop Neural_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural_P_DepVar1;
1324068   +Neural_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural_P_DepVar1 = P_DepVar1;
1324069   +drop Neural_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural_P_DepVar0;
1324070   +Neural_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural_P_DepVar0 = P_DepVar0;
1324071   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1324072   +* Renaming _WARN_ variable for Neural;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural;
1324073   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1324074   +length Neural_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural_WARN_ $4;
1324075   +drop Neural_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural_WARN_;
1324076   +Neural_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural_WARN_ = _WARN_;
1324077   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1324078   +* Ensmbl: Scoring Code of model 6 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl: Scoring Code of model 6 of 10;
1324079   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1324080   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1324081   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1324082   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1324083   +* NODE: Neural2;
MPRINT(EM_DIAGRAM):   * NODE: Neural2;
1324084   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1324085   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1324086   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1324087   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1324088   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1324089   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1324090   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1324091   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1324092   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1324093   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1324094   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1324095   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1324096   +LENGTH _WARN_ $4
1324097   +      F_DepVar  $ 12
1324098   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1324099   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1324100   +
1324101   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1324102   +
1324103   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1324104   +
1324105   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1324106   +
1324107   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1324108   +
1324109   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1324110   +
1324111   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1324112   +
1324113   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1324114   +
1324115   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1324116   +
1324117   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1324118   +
1324119   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1324120   +
1324121   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1324122   +
1324123   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1324124   +
1324125   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1324126   +
1324127   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1324128   +
1324129   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1324130   +
1324131   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1324132   +
1324133   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1324134   +
1324135   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1324136   +
1324137   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1324138   +
1324139   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1324140   +
1324141   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1324142   +
1324143   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1324144   +
1324145   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1324146   +
1324147   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1324148   +
1324149   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1324150   +
1324151   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1324152   +
1324153   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1324154   +
1324155   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1324156   +
1324157   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1324158   +
1324159   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1324160   +
1324161   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1324162   +
1324163   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1324164   +
1324165   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1324166   +
1324167   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1324168   +
1324169   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1324170   +
1324171   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1324172   +
1324173   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1324174   +
1324175   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1324176   +
1324177   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1324178   +
1324179   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1324180   +
1324181   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1324182   +
1324183   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1324184   +
1324185   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1324186   +
1324187   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1324188   +
1324189   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1324190   +
1324191   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1324192   +
1324193   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1324194   +
1324195   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1324196   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1324197   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1324198   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1324199   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1324200   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1324201   +end;
MPRINT(EM_DIAGRAM):   end;
1324202   +else do;
MPRINT(EM_DIAGRAM):   else do;
1324203   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1324204   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1324205   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1324206   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1324207   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1324208   +   end;
MPRINT(EM_DIAGRAM):   end;
1324209   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1324210   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1324211   +   end;
MPRINT(EM_DIAGRAM):   end;
1324212   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1324213   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1324214   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1324215   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1324216   +   end;
MPRINT(EM_DIAGRAM):   end;
1324217   +end;
MPRINT(EM_DIAGRAM):   end;
1324218   +
1324219   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1324220   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1324221   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1324222   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1324223   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1324224   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1324225   +end;
MPRINT(EM_DIAGRAM):   end;
1324226   +else do;
MPRINT(EM_DIAGRAM):   else do;
1324227   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1324228   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1324229   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1324230   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1324231   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1324232   +   end;
MPRINT(EM_DIAGRAM):   end;
1324233   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1324234   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1324235   +   end;
MPRINT(EM_DIAGRAM):   end;
1324236   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1324237   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1324238   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1324239   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1324240   +   end;
MPRINT(EM_DIAGRAM):   end;
1324241   +end;
MPRINT(EM_DIAGRAM):   end;
1324242   +
1324243   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1324244   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1324245   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1324246   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1324247   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1324248   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1324249   +end;
MPRINT(EM_DIAGRAM):   end;
1324250   +else do;
MPRINT(EM_DIAGRAM):   else do;
1324251   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1324252   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1324253   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1324254   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1324255   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1324256   +   end;
MPRINT(EM_DIAGRAM):   end;
1324257   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1324258   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1324259   +   end;
MPRINT(EM_DIAGRAM):   end;
1324260   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1324261   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1324262   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1324263   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1324264   +   end;
MPRINT(EM_DIAGRAM):   end;
1324265   +end;
MPRINT(EM_DIAGRAM):   end;
1324266   +
1324267   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1324268   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1324269   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1324270   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1324271   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1324272   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1324273   +end;
MPRINT(EM_DIAGRAM):   end;
1324274   +else do;
MPRINT(EM_DIAGRAM):   else do;
1324275   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1324276   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1324277   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1324278   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1324279   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1324280   +   end;
MPRINT(EM_DIAGRAM):   end;
1324281   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1324282   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1324283   +   end;
MPRINT(EM_DIAGRAM):   end;
1324284   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1324285   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1324286   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1324287   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1324288   +   end;
MPRINT(EM_DIAGRAM):   end;
1324289   +end;
MPRINT(EM_DIAGRAM):   end;
1324290   +
1324291   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1324292   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1324293   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1324294   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1324295   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1324296   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1324297   +end;
MPRINT(EM_DIAGRAM):   end;
1324298   +else do;
MPRINT(EM_DIAGRAM):   else do;
1324299   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1324300   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1324301   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1324302   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1324303   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1324304   +   end;
MPRINT(EM_DIAGRAM):   end;
1324305   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1324306   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1324307   +   end;
MPRINT(EM_DIAGRAM):   end;
1324308   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1324309   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1324310   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1324311   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1324312   +   end;
MPRINT(EM_DIAGRAM):   end;
1324313   +end;
MPRINT(EM_DIAGRAM):   end;
1324314   +
1324315   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1324316   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1324317   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1324318   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1324319   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1324320   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1324321   +end;
MPRINT(EM_DIAGRAM):   end;
1324322   +else do;
MPRINT(EM_DIAGRAM):   else do;
1324323   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1324324   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1324325   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1324326   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1324327   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1324328   +   end;
MPRINT(EM_DIAGRAM):   end;
1324329   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1324330   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1324331   +   end;
MPRINT(EM_DIAGRAM):   end;
1324332   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1324333   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1324334   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1324335   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1324336   +   end;
MPRINT(EM_DIAGRAM):   end;
1324337   +end;
MPRINT(EM_DIAGRAM):   end;
1324338   +
1324339   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1324340   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1324341   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1324342   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1324343   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1324344   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1324345   +end;
MPRINT(EM_DIAGRAM):   end;
1324346   +else do;
MPRINT(EM_DIAGRAM):   else do;
1324347   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1324348   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1324349   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1324350   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1324351   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1324352   +   end;
MPRINT(EM_DIAGRAM):   end;
1324353   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1324354   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1324355   +   end;
MPRINT(EM_DIAGRAM):   end;
1324356   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1324357   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1324358   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1324359   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1324360   +   end;
MPRINT(EM_DIAGRAM):   end;
1324361   +end;
MPRINT(EM_DIAGRAM):   end;
1324362   +
1324363   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1324364   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1324365   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1324366   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1324367   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1324368   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1324369   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1324370   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1324371   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1324372   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1324373   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1324374   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1324375   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1324376   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1324377   +end;
MPRINT(EM_DIAGRAM):   end;
1324378   +else do;
MPRINT(EM_DIAGRAM):   else do;
1324379   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1324380   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1324381   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1324382   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1324383   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1324384   +   end;
MPRINT(EM_DIAGRAM):   end;
1324385   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1324386   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1324387   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1324388   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1324389   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1324390   +   end;
MPRINT(EM_DIAGRAM):   end;
1324391   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1324392   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1324393   +   end;
MPRINT(EM_DIAGRAM):   end;
1324394   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1324395   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1324396   +   end;
MPRINT(EM_DIAGRAM):   end;
1324397   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1324398   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1324399   +   end;
MPRINT(EM_DIAGRAM):   end;
1324400   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1324401   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1324402   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1324403   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1324404   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1324405   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1324406   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1324407   +   end;
MPRINT(EM_DIAGRAM):   end;
1324408   +end;
MPRINT(EM_DIAGRAM):   end;
1324409   +
1324410   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1324411   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1324412   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1324413   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1324414   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1324415   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1324416   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1324417   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1324418   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1324419   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1324420   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1324421   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1324422   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1324423   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1324424   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1324425   +end;
MPRINT(EM_DIAGRAM):   end;
1324426   +else do;
MPRINT(EM_DIAGRAM):   else do;
1324427   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1324428   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1324429   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1324430   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1324431   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1324432   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1324433   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1324434   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1324435   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1324436   +         end;
MPRINT(EM_DIAGRAM):   end;
1324437   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1324438   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1324439   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1324440   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1324441   +            end;
MPRINT(EM_DIAGRAM):   end;
1324442   +         end;
MPRINT(EM_DIAGRAM):   end;
1324443   +      end;
MPRINT(EM_DIAGRAM):   end;
1324444   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1324445   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1324446   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1324447   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1324448   +         end;
MPRINT(EM_DIAGRAM):   end;
1324449   +      end;
MPRINT(EM_DIAGRAM):   end;
1324450   +   end;
MPRINT(EM_DIAGRAM):   end;
1324451   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1324452   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1324453   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1324454   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1324455   +      end;
MPRINT(EM_DIAGRAM):   end;
1324456   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1324457   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1324458   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1324459   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1324460   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1324461   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1324462   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1324463   +         end;
MPRINT(EM_DIAGRAM):   end;
1324464   +      end;
MPRINT(EM_DIAGRAM):   end;
1324465   +   end;
MPRINT(EM_DIAGRAM):   end;
1324466   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1324467   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1324468   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1324469   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1324470   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1324471   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1324472   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1324473   +   end;
MPRINT(EM_DIAGRAM):   end;
1324474   +end;
MPRINT(EM_DIAGRAM):   end;
1324475   +
1324476   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1324477   +*** Checking missing input Interval
1324478   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1324479   +
1324480   +IF NMISS(
1324481   +   AcceptedCmpTotal ,
1324482   +   Age ,
1324483   +   Frq ,
1324484   +   Income ,
1324485   +   Kidhome ,
1324486   +   Mnt ,
1324487   +   MntFishProducts ,
1324488   +   MntFruits ,
1324489   +   MntGoldProds ,
1324490   +   MntMeatProducts ,
1324491   +   MntSweetProducts ,
1324492   +   MntWines ,
1324493   +   MonthsAsCustomer ,
1324494   +   NumCatalogPurchases ,
1324495   +   NumDealsPurchases ,
1324496   +   NumDistPurchases ,
1324497   +   NumStorePurchases ,
1324498   +   NumWebPurchases ,
1324499   +   NumWebVisitsMonth ,
1324500   +   RFMstat ,
1324501   +   RMntFrq ,
1324502   +   Recency ,
1324503   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1324504   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1324505   +
1324506   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1324507   +END;
MPRINT(EM_DIAGRAM):   END;
1324508   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1324509   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1324510   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1324511   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1324512   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1324513   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1324514   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1324515   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1324516   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1324517   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1324518   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1324519   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1324520   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1324521   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1324522   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1324523   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1324524   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1324525   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1324526   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1324527   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1324528   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1324529   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1324530   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1324531   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1324532   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1324533   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1324534   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1324535   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1324536   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1324537   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1324538   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1324539   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1324540   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1324541   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1324542   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1324543   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1324544   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1324545   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1324546   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1324547   +END;
MPRINT(EM_DIAGRAM):   END;
1324548   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1324549   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1324550   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1324551   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1324552   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1324553   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1324554   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1324555   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1324556   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1324557   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1324558   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1324559   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1324560   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1324561   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1324562   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1324563   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1324564   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1324565   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1324566   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1324567   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1324568   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1324569   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1324570   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1324571   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1324572   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1324573   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1324574   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1324575   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1324576   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1324577   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1324578   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1324579   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1324580   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1324581   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1324582   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1324583   +   ELSE S_NumCatalogPurchases
1324584   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1324585   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1324586   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1324587   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1324588   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1324589   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1324590   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1324591   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1324592   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1324593   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1324594   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1324595   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1324596   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1324597   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1324598   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1324599   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1324600   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1324601   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1324602   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1324603   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1324604   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1324605   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1324606   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1324607   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1324608   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1324609   +END;
MPRINT(EM_DIAGRAM):   END;
1324610   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1324611   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1324612   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1324613   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1324614   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1324615   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1324616   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1324617   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1324618   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1324619   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1324620   +   H11  =     0.29712286997834 * S_AcceptedCmpTotal  +     0.15682927566787 *
1324621   +        S_Age  +     0.23365791685845 * S_Frq  +     1.19070222818862 *
1324622   +        S_Income  +    -1.07652572934003 * S_Kidhome
1324623   +          +    -0.33332653884544 * S_Mnt  +     -0.1196291817134 *
1324624   +        S_MntFishProducts  +    -0.05693834390907 * S_MntFruits
1324625   +          +    -0.04894091348569 * S_MntGoldProds  +     0.36709988209272 *
1324626   +        S_MntMeatProducts  +    -0.21921869790385 * S_MntSweetProducts
1324627   +          +    -0.60642239904043 * S_MntWines  +     0.00269864537349 *
1324628   +        S_MonthsAsCustomer  +     0.54303346499176 * S_NumCatalogPurchases
1324629   +          +     0.34217069579861 * S_NumDealsPurchases
1324630   +          +      0.7126550962469 * S_NumDistPurchases
1324631   +          +     0.05810128676346 * S_NumStorePurchases
1324632   +          +     -0.1974592461824 * S_NumWebPurchases
1324633   +          +     1.33855646568468 * S_NumWebVisitsMonth
1324634   +          +    -0.00867312774072 * S_RFMstat  +     1.16131106250766 *
1324635   +        S_RMntFrq  +      -1.575765175986 * S_Recency
1324636   +          +    -0.86597551041595 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.29712286997834 * S_AcceptedCmpTotal + 0.15682927566787 * S_Age + 
0.23365791685845 * S_Frq + 1.19070222818862 * S_Income + -1.07652572934003 * S_Kidhome + 
-0.33332653884544 * S_Mnt + -0.1196291817134 * S_MntFishProducts + -0.05693834390907 * 
S_MntFruits + -0.04894091348569 * S_MntGoldProds + 0.36709988209272 * S_MntMeatProducts + 
-0.21921869790385 * S_MntSweetProducts + -0.60642239904043 * S_MntWines + 0.00269864537349 * 
S_MonthsAsCustomer + 0.54303346499176 * S_NumCatalogPurchases + 0.34217069579861 * 
S_NumDealsPurchases + 0.7126550962469 * S_NumDistPurchases + 0.05810128676346 * 
S_NumStorePurchases + -0.1974592461824 * S_NumWebPurchases + 1.33855646568468 * 
S_NumWebVisitsMonth + -0.00867312774072 * S_RFMstat + 1.16131106250766 * S_RMntFrq + 
-1.575765175986 * S_Recency + -0.86597551041595 * S_Teenhome ;
1324637   +   H12  =     0.31665243267047 * S_AcceptedCmpTotal  +    -0.09124940821631 *
1324638   +        S_Age  +    -0.16072737746014 * S_Frq  +      0.1038384650026 *
1324639   +        S_Income  +    -0.00280376715329 * S_Kidhome
1324640   +          +    -0.62213528239612 * S_Mnt  +    -0.04305309942503 *
1324641   +        S_MntFishProducts  +    -0.24959132224402 * S_MntFruits
1324642   +          +    -0.01371148610726 * S_MntGoldProds  +     0.62558247205775 *
1324643   +        S_MntMeatProducts  +    -0.10439524833374 * S_MntSweetProducts
1324644   +          +     -1.1377432724423 * S_MntWines  +    -0.04956864038898 *
1324645   +        S_MonthsAsCustomer  +     0.66989184148268 * S_NumCatalogPurchases
1324646   +          +     0.45694604326279 * S_NumDealsPurchases
1324647   +          +      0.1555582457419 * S_NumDistPurchases
1324648   +          +     -0.3340268446813 * S_NumStorePurchases
1324649   +          +    -0.39316217683753 * S_NumWebPurchases
1324650   +          +     0.52431656748667 * S_NumWebVisitsMonth
1324651   +          +     0.20727402314383 * S_RFMstat  +     0.70433803286711 *
1324652   +        S_RMntFrq  +    -0.55909695066219 * S_Recency
1324653   +          +    -0.02589465113799 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.31665243267047 * S_AcceptedCmpTotal + -0.09124940821631 * S_Age 
+ -0.16072737746014 * S_Frq + 0.1038384650026 * S_Income + -0.00280376715329 * S_Kidhome + 
-0.62213528239612 * S_Mnt + -0.04305309942503 * S_MntFishProducts + -0.24959132224402 * 
S_MntFruits + -0.01371148610726 * S_MntGoldProds + 0.62558247205775 * S_MntMeatProducts + 
-0.10439524833374 * S_MntSweetProducts + -1.1377432724423 * S_MntWines + -0.04956864038898 * 
S_MonthsAsCustomer + 0.66989184148268 * S_NumCatalogPurchases + 0.45694604326279 * 
S_NumDealsPurchases + 0.1555582457419 * S_NumDistPurchases + -0.3340268446813 * 
S_NumStorePurchases + -0.39316217683753 * S_NumWebPurchases + 0.52431656748667 * 
S_NumWebVisitsMonth + 0.20727402314383 * S_RFMstat + 0.70433803286711 * S_RMntFrq + 
-0.55909695066219 * S_Recency + -0.02589465113799 * S_Teenhome ;
1324654   +   H11  = H11  +     -0.2601649080458 * AcceptedCmp10
1324655   +          +    -0.69535266799466 * AcceptedCmp20  +    -0.58039838698106 *
1324656   +        AcceptedCmp30  +    -0.51789867388634 * AcceptedCmp40
1324657   +          +    -0.28577801943332 * AcceptedCmp50  +    -0.24224458808871 *
1324658   +        Complain0  +     0.22760495991556 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.2601649080458 * AcceptedCmp10 + -0.69535266799466 * 
AcceptedCmp20 + -0.58039838698106 * AcceptedCmp30 + -0.51789867388634 * AcceptedCmp40 + 
-0.28577801943332 * AcceptedCmp50 + -0.24224458808871 * Complain0 + 0.22760495991556 * 
HigherEducationBinary0 ;
1324659   +   H12  = H12  +     -0.3622176384122 * AcceptedCmp10
1324660   +          +    -0.33944386002412 * AcceptedCmp20  +    -0.02687563797332 *
1324661   +        AcceptedCmp30  +     0.00421902079715 * AcceptedCmp40
1324662   +          +    -0.12328105393668 * AcceptedCmp50  +    -0.06053338147955 *
1324663   +        Complain0  +    -0.17559776257445 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.3622176384122 * AcceptedCmp10 + -0.33944386002412 * 
AcceptedCmp20 + -0.02687563797332 * AcceptedCmp30 + 0.00421902079715 * AcceptedCmp40 + 
-0.12328105393668 * AcceptedCmp50 + -0.06053338147955 * Complain0 + -0.17559776257445 * 
HigherEducationBinary0 ;
1324664   +   H11  = H11  +     0.04102597460729 * Education2n_Cycle
1324665   +          +     0.10315751459359 * EducationBasic  +    -0.09694950452171 *
1324666   +        EducationGraduation  +    -0.33205513178262 * EducationMaster
1324667   +          +     0.46676686502466 * Marital_StatusDivorced
1324668   +          +    -1.27760562209616 * Marital_StatusMarried
1324669   +          +     1.31419230639567 * Marital_StatusSingle
1324670   +          +    -0.94615367007608 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04102597460729 * Education2n_Cycle + 0.10315751459359 * 
EducationBasic + -0.09694950452171 * EducationGraduation + -0.33205513178262 * EducationMaster 
+ 0.46676686502466 * Marital_StatusDivorced + -1.27760562209616 * Marital_StatusMarried + 
1.31419230639567 * Marital_StatusSingle + -0.94615367007608 * Marital_StatusTogether ;
1324671   +   H12  = H12  +     0.04140711456188 * Education2n_Cycle
1324672   +          +     0.00023669301751 * EducationBasic  +      0.0217486986892 *
1324673   +        EducationGraduation  +     0.00743064542151 * EducationMaster
1324674   +          +     0.07434297903639 * Marital_StatusDivorced
1324675   +          +     0.00294493836325 * Marital_StatusMarried
1324676   +          +    -0.00745595849422 * Marital_StatusSingle
1324677   +          +    -0.02426182934399 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04140711456188 * Education2n_Cycle + 0.00023669301751 * 
EducationBasic + 0.0217486986892 * EducationGraduation + 0.00743064542151 * EducationMaster + 
0.07434297903639 * Marital_StatusDivorced + 0.00294493836325 * Marital_StatusMarried + 
-0.00745595849422 * Marital_StatusSingle + -0.02426182934399 * Marital_StatusTogether ;
1324678   +   H11  =    -2.08476947519933 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.08476947519933 + H11 ;
1324679   +   H12  =    -0.67000030345457 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.67000030345457 + H12 ;
1324680   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1324681   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1324682   +END;
MPRINT(EM_DIAGRAM):   END;
1324683   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1324684   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1324685   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1324686   +END;
MPRINT(EM_DIAGRAM):   END;
1324687   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1324688   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1324689   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1324690   +
1324691   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1324692   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1324693   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1324694   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1324695   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1324696   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1324697   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1324698   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1324699   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1324700   +end;
MPRINT(EM_DIAGRAM):   end;
1324701   +else do;
MPRINT(EM_DIAGRAM):   else do;
1324702   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1324703   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1324704   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1324705   +   end;
MPRINT(EM_DIAGRAM):   end;
1324706   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1324707   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1324708   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1324709   +   end;
MPRINT(EM_DIAGRAM):   end;
1324710   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1324711   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1324712   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1324713   +   end;
MPRINT(EM_DIAGRAM):   end;
1324714   +end;
MPRINT(EM_DIAGRAM):   end;
1324715   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1324716   +   P_DepVar1  =     5.63200889678434 * H11  +     6.13502549580323 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.63200889678434 * H11 + 6.13502549580323 * H12 ;
1324717   +   P_DepVar1  =     3.20850695873198 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.20850695873198 + P_DepVar1 ;
1324718   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1324719   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1324720   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1324721   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1324722   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1324723   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1324724   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1324725   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1324726   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1324727   +END;
MPRINT(EM_DIAGRAM):   END;
1324728   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1324729   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1324730   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1324731   +END;
MPRINT(EM_DIAGRAM):   END;
1324732   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1324733   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1324734   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1324735   +END;
MPRINT(EM_DIAGRAM):   END;
1324736   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1324737   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1324738   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1324739   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1324740   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1324741   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1324742   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1324743   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1324744   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1324745   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1324746   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1324747   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1324748   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1324749   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1324750   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1324751   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1324752   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1324753   +END;
MPRINT(EM_DIAGRAM):   END;
1324754   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1324755   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1324756   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1324757   +drop
1324758   +H11
1324759   +H12
1324760   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
1324761   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1324762   +* Renaming variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural2;
1324763   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1324764   +* Renaming Posterior variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural2;
1324765   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1324766   +drop Neural2_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar1;
1324767   +Neural2_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar1 = P_DepVar1;
1324768   +drop Neural2_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar0;
1324769   +Neural2_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar0 = P_DepVar0;
1324770   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1324771   +* Renaming _WARN_ variable for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural2;
1324772   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1324773   +length Neural2_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural2_WARN_ $4;
1324774   +drop Neural2_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural2_WARN_;
1324775   +Neural2_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural2_WARN_ = _WARN_;
1324776   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1324777   +* Ensmbl: Scoring Code of model 7 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl: Scoring Code of model 7 of 10;
1324778   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1324779   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1324780   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1324781   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1324782   +* NODE: Neural3;
MPRINT(EM_DIAGRAM):   * NODE: Neural3;
1324783   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1324784   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1324785   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1324786   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1324787   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1324788   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1324789   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1324790   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1324791   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1324792   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1324793   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1324794   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1324795   +LENGTH _WARN_ $4
1324796   +      F_DepVar  $ 12
1324797   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1324798   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1324799   +
1324800   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1324801   +
1324802   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1324803   +
1324804   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1324805   +
1324806   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1324807   +
1324808   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1324809   +
1324810   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1324811   +
1324812   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1324813   +
1324814   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1324815   +
1324816   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1324817   +
1324818   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1324819   +
1324820   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1324821   +
1324822   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1324823   +
1324824   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1324825   +
1324826   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1324827   +
1324828   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1324829   +
1324830   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1324831   +
1324832   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1324833   +
1324834   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1324835   +
1324836   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1324837   +
1324838   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1324839   +
1324840   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1324841   +
1324842   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1324843   +
1324844   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1324845   +
1324846   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1324847   +
1324848   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1324849   +
1324850   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1324851   +
1324852   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1324853   +
1324854   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1324855   +
1324856   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1324857   +
1324858   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1324859   +
1324860   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1324861   +
1324862   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1324863   +
1324864   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1324865   +
1324866   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1324867   +
1324868   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1324869   +
1324870   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1324871   +
1324872   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1324873   +
1324874   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1324875   +
1324876   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1324877   +
1324878   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1324879   +
1324880   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1324881   +
1324882   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1324883   +
1324884   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1324885   +
1324886   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1324887   +
1324888   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1324889   +
1324890   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1324891   +
1324892   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1324893   +
1324894   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1324895   +
1324896   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1324897   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1324898   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1324899   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1324900   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1324901   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1324902   +end;
MPRINT(EM_DIAGRAM):   end;
1324903   +else do;
MPRINT(EM_DIAGRAM):   else do;
1324904   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1324905   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1324906   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1324907   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1324908   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1324909   +   end;
MPRINT(EM_DIAGRAM):   end;
1324910   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1324911   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1324912   +   end;
MPRINT(EM_DIAGRAM):   end;
1324913   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1324914   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1324915   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1324916   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1324917   +   end;
MPRINT(EM_DIAGRAM):   end;
1324918   +end;
MPRINT(EM_DIAGRAM):   end;
1324919   +
1324920   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1324921   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1324922   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1324923   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1324924   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1324925   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1324926   +end;
MPRINT(EM_DIAGRAM):   end;
1324927   +else do;
MPRINT(EM_DIAGRAM):   else do;
1324928   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1324929   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1324930   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1324931   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1324932   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1324933   +   end;
MPRINT(EM_DIAGRAM):   end;
1324934   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1324935   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1324936   +   end;
MPRINT(EM_DIAGRAM):   end;
1324937   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1324938   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1324939   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1324940   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1324941   +   end;
MPRINT(EM_DIAGRAM):   end;
1324942   +end;
MPRINT(EM_DIAGRAM):   end;
1324943   +
1324944   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1324945   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1324946   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1324947   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1324948   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1324949   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1324950   +end;
MPRINT(EM_DIAGRAM):   end;
1324951   +else do;
MPRINT(EM_DIAGRAM):   else do;
1324952   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1324953   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1324954   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1324955   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1324956   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1324957   +   end;
MPRINT(EM_DIAGRAM):   end;
1324958   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1324959   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1324960   +   end;
MPRINT(EM_DIAGRAM):   end;
1324961   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1324962   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1324963   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1324964   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1324965   +   end;
MPRINT(EM_DIAGRAM):   end;
1324966   +end;
MPRINT(EM_DIAGRAM):   end;
1324967   +
1324968   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1324969   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1324970   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1324971   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1324972   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1324973   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1324974   +end;
MPRINT(EM_DIAGRAM):   end;
1324975   +else do;
MPRINT(EM_DIAGRAM):   else do;
1324976   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1324977   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1324978   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1324979   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1324980   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1324981   +   end;
MPRINT(EM_DIAGRAM):   end;
1324982   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1324983   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1324984   +   end;
MPRINT(EM_DIAGRAM):   end;
1324985   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1324986   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1324987   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1324988   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1324989   +   end;
MPRINT(EM_DIAGRAM):   end;
1324990   +end;
MPRINT(EM_DIAGRAM):   end;
1324991   +
1324992   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1324993   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1324994   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1324995   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1324996   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1324997   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1324998   +end;
MPRINT(EM_DIAGRAM):   end;
1324999   +else do;
MPRINT(EM_DIAGRAM):   else do;
1325000   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1325001   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1325002   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1325003   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1325004   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1325005   +   end;
MPRINT(EM_DIAGRAM):   end;
1325006   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1325007   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1325008   +   end;
MPRINT(EM_DIAGRAM):   end;
1325009   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1325010   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1325011   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1325012   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1325013   +   end;
MPRINT(EM_DIAGRAM):   end;
1325014   +end;
MPRINT(EM_DIAGRAM):   end;
1325015   +
1325016   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1325017   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1325018   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1325019   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1325020   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1325021   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1325022   +end;
MPRINT(EM_DIAGRAM):   end;
1325023   +else do;
MPRINT(EM_DIAGRAM):   else do;
1325024   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1325025   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1325026   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1325027   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1325028   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1325029   +   end;
MPRINT(EM_DIAGRAM):   end;
1325030   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1325031   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1325032   +   end;
MPRINT(EM_DIAGRAM):   end;
1325033   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1325034   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1325035   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1325036   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1325037   +   end;
MPRINT(EM_DIAGRAM):   end;
1325038   +end;
MPRINT(EM_DIAGRAM):   end;
1325039   +
1325040   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1325041   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1325042   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1325043   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1325044   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1325045   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1325046   +end;
MPRINT(EM_DIAGRAM):   end;
1325047   +else do;
MPRINT(EM_DIAGRAM):   else do;
1325048   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1325049   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1325050   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1325051   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1325052   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1325053   +   end;
MPRINT(EM_DIAGRAM):   end;
1325054   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1325055   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1325056   +   end;
MPRINT(EM_DIAGRAM):   end;
1325057   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1325058   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1325059   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1325060   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1325061   +   end;
MPRINT(EM_DIAGRAM):   end;
1325062   +end;
MPRINT(EM_DIAGRAM):   end;
1325063   +
1325064   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1325065   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1325066   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1325067   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1325068   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1325069   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1325070   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1325071   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1325072   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1325073   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1325074   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1325075   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1325076   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1325077   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1325078   +end;
MPRINT(EM_DIAGRAM):   end;
1325079   +else do;
MPRINT(EM_DIAGRAM):   else do;
1325080   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1325081   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1325082   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1325083   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1325084   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1325085   +   end;
MPRINT(EM_DIAGRAM):   end;
1325086   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1325087   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1325088   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1325089   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1325090   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1325091   +   end;
MPRINT(EM_DIAGRAM):   end;
1325092   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1325093   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1325094   +   end;
MPRINT(EM_DIAGRAM):   end;
1325095   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1325096   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1325097   +   end;
MPRINT(EM_DIAGRAM):   end;
1325098   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1325099   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1325100   +   end;
MPRINT(EM_DIAGRAM):   end;
1325101   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1325102   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1325103   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1325104   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1325105   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1325106   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1325107   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1325108   +   end;
MPRINT(EM_DIAGRAM):   end;
1325109   +end;
MPRINT(EM_DIAGRAM):   end;
1325110   +
1325111   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1325112   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1325113   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1325114   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1325115   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1325116   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1325117   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1325118   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1325119   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1325120   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1325121   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1325122   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1325123   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1325124   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1325125   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1325126   +end;
MPRINT(EM_DIAGRAM):   end;
1325127   +else do;
MPRINT(EM_DIAGRAM):   else do;
1325128   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1325129   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1325130   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1325131   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1325132   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1325133   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1325134   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1325135   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1325136   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1325137   +         end;
MPRINT(EM_DIAGRAM):   end;
1325138   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1325139   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1325140   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1325141   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1325142   +            end;
MPRINT(EM_DIAGRAM):   end;
1325143   +         end;
MPRINT(EM_DIAGRAM):   end;
1325144   +      end;
MPRINT(EM_DIAGRAM):   end;
1325145   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1325146   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1325147   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1325148   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1325149   +         end;
MPRINT(EM_DIAGRAM):   end;
1325150   +      end;
MPRINT(EM_DIAGRAM):   end;
1325151   +   end;
MPRINT(EM_DIAGRAM):   end;
1325152   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1325153   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1325154   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1325155   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1325156   +      end;
MPRINT(EM_DIAGRAM):   end;
1325157   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1325158   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1325159   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1325160   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1325161   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1325162   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1325163   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1325164   +         end;
MPRINT(EM_DIAGRAM):   end;
1325165   +      end;
MPRINT(EM_DIAGRAM):   end;
1325166   +   end;
MPRINT(EM_DIAGRAM):   end;
1325167   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1325168   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1325169   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1325170   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1325171   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1325172   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1325173   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1325174   +   end;
MPRINT(EM_DIAGRAM):   end;
1325175   +end;
MPRINT(EM_DIAGRAM):   end;
1325176   +
1325177   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1325178   +*** Checking missing input Interval
1325179   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1325180   +
1325181   +IF NMISS(
1325182   +   AcceptedCmpTotal ,
1325183   +   Age ,
1325184   +   Frq ,
1325185   +   Income ,
1325186   +   Kidhome ,
1325187   +   Mnt ,
1325188   +   MntFishProducts ,
1325189   +   MntFruits ,
1325190   +   MntGoldProds ,
1325191   +   MntMeatProducts ,
1325192   +   MntSweetProducts ,
1325193   +   MntWines ,
1325194   +   MonthsAsCustomer ,
1325195   +   NumCatalogPurchases ,
1325196   +   NumDealsPurchases ,
1325197   +   NumDistPurchases ,
1325198   +   NumStorePurchases ,
1325199   +   NumWebPurchases ,
1325200   +   NumWebVisitsMonth ,
1325201   +   RFMstat ,
1325202   +   RMntFrq ,
1325203   +   Recency ,
1325204   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1325205   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1325206   +
1325207   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1325208   +END;
MPRINT(EM_DIAGRAM):   END;
1325209   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1325210   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1325211   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1325212   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1325213   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1325214   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1325215   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1325216   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1325217   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1325218   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1325219   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1325220   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1325221   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1325222   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1325223   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1325224   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1325225   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1325226   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1325227   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1325228   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1325229   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1325230   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1325231   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1325232   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1325233   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1325234   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1325235   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1325236   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1325237   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1325238   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1325239   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1325240   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1325241   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1325242   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1325243   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1325244   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1325245   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1325246   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1325247   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1325248   +END;
MPRINT(EM_DIAGRAM):   END;
1325249   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1325250   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1325251   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1325252   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1325253   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1325254   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1325255   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1325256   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1325257   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1325258   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1325259   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1325260   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1325261   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1325262   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1325263   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1325264   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1325265   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1325266   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1325267   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1325268   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1325269   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1325270   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1325271   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1325272   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1325273   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1325274   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1325275   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1325276   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1325277   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1325278   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1325279   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1325280   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1325281   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1325282   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1325283   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1325284   +   ELSE S_NumCatalogPurchases
1325285   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1325286   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1325287   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1325288   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1325289   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1325290   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1325291   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1325292   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1325293   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1325294   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1325295   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1325296   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1325297   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1325298   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1325299   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1325300   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1325301   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1325302   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1325303   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1325304   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1325305   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1325306   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1325307   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1325308   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1325309   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1325310   +END;
MPRINT(EM_DIAGRAM):   END;
1325311   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1325312   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1325313   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1325314   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1325315   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1325316   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1325317   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1325318   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1325319   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1325320   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1325321   +   H11  =     0.80580599758828 * S_AcceptedCmpTotal  +    -0.20439898580437 *
1325322   +        S_Age  +     0.05865035632173 * S_Frq  +     0.35752372652995 *
1325323   +        S_Income  +     0.48614351216065 * S_Kidhome
1325324   +          +     -0.1747641480344 * S_Mnt  +     0.01575775403439 *
1325325   +        S_MntFishProducts  +    -0.38201490870585 * S_MntFruits
1325326   +          +    -0.05580975774246 * S_MntGoldProds  +     1.09721567184869 *
1325327   +        S_MntMeatProducts  +    -0.13227791819319 * S_MntSweetProducts
1325328   +          +    -1.10701810096598 * S_MntWines  +     0.20854938667936 *
1325329   +        S_MonthsAsCustomer  +     1.07538229088114 * S_NumCatalogPurchases
1325330   +          +     1.38069708066212 * S_NumDealsPurchases
1325331   +          +     0.18758966496994 * S_NumDistPurchases
1325332   +          +    -0.65306017966122 * S_NumStorePurchases
1325333   +          +    -0.65780154318734 * S_NumWebPurchases
1325334   +          +     1.42347048260615 * S_NumWebVisitsMonth
1325335   +          +      0.7433518928188 * S_RFMstat  +     0.14860840574393 *
1325336   +        S_RMntFrq  +    -0.94596110554056 * S_Recency
1325337   +          +     0.06338271932444 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.80580599758828 * S_AcceptedCmpTotal + -0.20439898580437 * S_Age 
+ 0.05865035632173 * S_Frq + 0.35752372652995 * S_Income + 0.48614351216065 * S_Kidhome + 
-0.1747641480344 * S_Mnt + 0.01575775403439 * S_MntFishProducts + -0.38201490870585 * 
S_MntFruits + -0.05580975774246 * S_MntGoldProds + 1.09721567184869 * S_MntMeatProducts + 
-0.13227791819319 * S_MntSweetProducts + -1.10701810096598 * S_MntWines + 0.20854938667936 * 
S_MonthsAsCustomer + 1.07538229088114 * S_NumCatalogPurchases + 1.38069708066212 * 
S_NumDealsPurchases + 0.18758966496994 * S_NumDistPurchases + -0.65306017966122 * 
S_NumStorePurchases + -0.65780154318734 * S_NumWebPurchases + 1.42347048260615 * 
S_NumWebVisitsMonth + 0.7433518928188 * S_RFMstat + 0.14860840574393 * S_RMntFrq + 
-0.94596110554056 * S_Recency + 0.06338271932444 * S_Teenhome ;
1325338   +   H12  =    -0.95250648389067 * S_AcceptedCmpTotal  +     0.00781145364918 *
1325339   +        S_Age  +     0.27693667522426 * S_Frq  +    -0.44422940279858 *
1325340   +        S_Income  +     0.50072567449363 * S_Kidhome
1325341   +          +     0.16426609438465 * S_Mnt  +     0.90735360020692 *
1325342   +        S_MntFishProducts  +    -0.10280436633296 * S_MntFruits
1325343   +          +      -0.172427737402 * S_MntGoldProds  +    -1.57830143431967 *
1325344   +        S_MntMeatProducts  +    -0.49111039017578 * S_MntSweetProducts
1325345   +          +     0.60032626047049 * S_MntWines  +      0.2471946896739 *
1325346   +        S_MonthsAsCustomer  +    -0.89033290398106 * S_NumCatalogPurchases
1325347   +          +    -0.75291043162386 * S_NumDealsPurchases
1325348   +          +    -0.06780631818187 * S_NumDistPurchases
1325349   +          +     1.03453599373919 * S_NumStorePurchases
1325350   +          +     1.02348906006707 * S_NumWebPurchases
1325351   +          +    -1.28963718583136 * S_NumWebVisitsMonth
1325352   +          +    -0.28437040883974 * S_RFMstat  +     0.13305006522815 *
1325353   +        S_RMntFrq  +     1.57678875777412 * S_Recency
1325354   +          +     0.37259077233644 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.95250648389067 * S_AcceptedCmpTotal + 0.00781145364918 * S_Age 
+ 0.27693667522426 * S_Frq + -0.44422940279858 * S_Income + 0.50072567449363 * S_Kidhome + 
0.16426609438465 * S_Mnt + 0.90735360020692 * S_MntFishProducts + -0.10280436633296 * 
S_MntFruits + -0.172427737402 * S_MntGoldProds + -1.57830143431967 * S_MntMeatProducts + 
-0.49111039017578 * S_MntSweetProducts + 0.60032626047049 * S_MntWines + 0.2471946896739 * 
S_MonthsAsCustomer + -0.89033290398106 * S_NumCatalogPurchases + -0.75291043162386 * 
S_NumDealsPurchases + -0.06780631818187 * S_NumDistPurchases + 1.03453599373919 * 
S_NumStorePurchases + 1.02348906006707 * S_NumWebPurchases + -1.28963718583136 * 
S_NumWebVisitsMonth + -0.28437040883974 * S_RFMstat + 0.13305006522815 * S_RMntFrq + 
1.57678875777412 * S_Recency + 0.37259077233644 * S_Teenhome ;
1325355   +   H13  =    -0.15934537040899 * S_AcceptedCmpTotal  +    -0.18908743508071 *
1325356   +        S_Age  +    -0.21049405570619 * S_Frq  +    -1.13478522535816 *
1325357   +        S_Income  +     0.57496607656903 * S_Kidhome
1325358   +          +     0.24039633053683 * S_Mnt  +    -0.12111845985793 *
1325359   +        S_MntFishProducts  +     0.18932758935406 * S_MntFruits
1325360   +          +      0.0282001773792 * S_MntGoldProds  +    -0.34135136526975 *
1325361   +        S_MntMeatProducts  +      0.3048511351264 * S_MntSweetProducts
1325362   +          +     0.34934932685263 * S_MntWines  +     -0.2282334455458 *
1325363   +        S_MonthsAsCustomer  +    -0.61139042080723 * S_NumCatalogPurchases
1325364   +          +     0.13431497076806 * S_NumDealsPurchases
1325365   +          +     -0.4516722514278 * S_NumDistPurchases
1325366   +          +     0.08636745161008 * S_NumStorePurchases
1325367   +          +    -0.01091843489919 * S_NumWebPurchases
1325368   +          +    -0.67680105332226 * S_NumWebVisitsMonth
1325369   +          +     0.06960881208574 * S_RFMstat  +    -0.40844599827715 *
1325370   +        S_RMntFrq  +     1.43664973786717 * S_Recency
1325371   +          +     0.89586482279711 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.15934537040899 * S_AcceptedCmpTotal + -0.18908743508071 * S_Age 
+ -0.21049405570619 * S_Frq + -1.13478522535816 * S_Income + 0.57496607656903 * S_Kidhome + 
0.24039633053683 * S_Mnt + -0.12111845985793 * S_MntFishProducts + 0.18932758935406 * 
S_MntFruits + 0.0282001773792 * S_MntGoldProds + -0.34135136526975 * S_MntMeatProducts + 
0.3048511351264 * S_MntSweetProducts + 0.34934932685263 * S_MntWines + -0.2282334455458 * 
S_MonthsAsCustomer + -0.61139042080723 * S_NumCatalogPurchases + 0.13431497076806 * 
S_NumDealsPurchases + -0.4516722514278 * S_NumDistPurchases + 0.08636745161008 * 
S_NumStorePurchases + -0.01091843489919 * S_NumWebPurchases + -0.67680105332226 * 
S_NumWebVisitsMonth + 0.06960881208574 * S_RFMstat + -0.40844599827715 * S_RMntFrq + 
1.43664973786717 * S_Recency + 0.89586482279711 * S_Teenhome ;
1325372   +   H11  = H11  +     -0.6416671004655 * AcceptedCmp10
1325373   +          +     0.01492041108634 * AcceptedCmp20  +    -0.91114347887192 *
1325374   +        AcceptedCmp30  +    -0.20710365118058 * AcceptedCmp40
1325375   +          +    -0.11794134499267 * AcceptedCmp50  +     0.09288714621262 *
1325376   +        Complain0  +    -0.52243814822483 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.6416671004655 * AcceptedCmp10 + 0.01492041108634 * 
AcceptedCmp20 + -0.91114347887192 * AcceptedCmp30 + -0.20710365118058 * AcceptedCmp40 + 
-0.11794134499267 * AcceptedCmp50 + 0.09288714621262 * Complain0 + -0.52243814822483 * 
HigherEducationBinary0 ;
1325377   +   H12  = H12  +     0.24751093651686 * AcceptedCmp10
1325378   +          +     0.07782559575868 * AcceptedCmp20  +    -0.31714859220477 *
1325379   +        AcceptedCmp30  +    -0.04651262852266 * AcceptedCmp40
1325380   +          +     1.12079204972473 * AcceptedCmp50  +     0.01995812214945 *
1325381   +        Complain0  +    -0.10554781512031 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.24751093651686 * AcceptedCmp10 + 0.07782559575868 * 
AcceptedCmp20 + -0.31714859220477 * AcceptedCmp30 + -0.04651262852266 * AcceptedCmp40 + 
1.12079204972473 * AcceptedCmp50 + 0.01995812214945 * Complain0 + -0.10554781512031 * 
HigherEducationBinary0 ;
1325382   +   H13  = H13  +     0.24429915728404 * AcceptedCmp10
1325383   +          +     0.61295080768552 * AcceptedCmp20  +     0.44102169319186 *
1325384   +        AcceptedCmp30  +     0.47980251068529 * AcceptedCmp40
1325385   +          +     0.10988021992419 * AcceptedCmp50  +     0.28313602324535 *
1325386   +        Complain0  +    -0.23261190302425 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.24429915728404 * AcceptedCmp10 + 0.61295080768552 * 
AcceptedCmp20 + 0.44102169319186 * AcceptedCmp30 + 0.47980251068529 * AcceptedCmp40 + 
0.10988021992419 * AcceptedCmp50 + 0.28313602324535 * Complain0 + -0.23261190302425 * 
HigherEducationBinary0 ;
1325387   +   H11  = H11  +     0.01626472365517 * Education2n_Cycle
1325388   +          +     0.14365936599314 * EducationBasic  +      0.3318092181003 *
1325389   +        EducationGraduation  +    -0.04307117865412 * EducationMaster
1325390   +          +     0.09616912826117 * Marital_StatusDivorced
1325391   +          +     0.15377557778014 * Marital_StatusMarried
1325392   +          +    -0.20686296055741 * Marital_StatusSingle
1325393   +          +    -0.02512911479575 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.01626472365517 * Education2n_Cycle + 0.14365936599314 * 
EducationBasic + 0.3318092181003 * EducationGraduation + -0.04307117865412 * EducationMaster + 
0.09616912826117 * Marital_StatusDivorced + 0.15377557778014 * Marital_StatusMarried + 
-0.20686296055741 * Marital_StatusSingle + -0.02512911479575 * Marital_StatusTogether ;
1325394   +   H12  = H12  +    -0.23609122137422 * Education2n_Cycle
1325395   +          +     0.32804834977485 * EducationBasic  +    -0.02696870760206 *
1325396   +        EducationGraduation  +     0.07379681316678 * EducationMaster
1325397   +          +    -0.18362421441913 * Marital_StatusDivorced
1325398   +          +     0.14861660317702 * Marital_StatusMarried
1325399   +          +    -0.51051982152027 * Marital_StatusSingle
1325400   +          +     0.13742493760562 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.23609122137422 * Education2n_Cycle + 0.32804834977485 * 
EducationBasic + -0.02696870760206 * EducationGraduation + 0.07379681316678 * EducationMaster 
+ -0.18362421441913 * Marital_StatusDivorced + 0.14861660317702 * Marital_StatusMarried + 
-0.51051982152027 * Marital_StatusSingle + 0.13742493760562 * Marital_StatusTogether ;
1325401   +   H13  = H13  +     0.13227832845665 * Education2n_Cycle
1325402   +          +     -0.1369481832857 * EducationBasic  +      0.1472139603427 *
1325403   +        EducationGraduation  +     0.27596372441804 * EducationMaster
1325404   +          +    -0.65088528624708 * Marital_StatusDivorced
1325405   +          +     1.85383531288095 * Marital_StatusMarried
1325406   +          +    -1.45031245605509 * Marital_StatusSingle
1325407   +          +     1.19623402360662 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.13227832845665 * Education2n_Cycle + -0.1369481832857 * 
EducationBasic + 0.1472139603427 * EducationGraduation + 0.27596372441804 * EducationMaster + 
-0.65088528624708 * Marital_StatusDivorced + 1.85383531288095 * Marital_StatusMarried + 
-1.45031245605509 * Marital_StatusSingle + 1.19623402360662 * Marital_StatusTogether ;
1325408   +   H11  =    -1.19945523281267 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.19945523281267 + H11 ;
1325409   +   H12  =     0.40473145844756 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.40473145844756 + H12 ;
1325410   +   H13  =     1.86025159730213 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.86025159730213 + H13 ;
1325411   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1325412   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1325413   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1325414   +END;
MPRINT(EM_DIAGRAM):   END;
1325415   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1325416   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1325417   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1325418   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1325419   +END;
MPRINT(EM_DIAGRAM):   END;
1325420   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1325421   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1325422   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1325423   +
1325424   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1325425   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1325426   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1325427   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1325428   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1325429   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1325430   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1325431   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1325432   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1325433   +end;
MPRINT(EM_DIAGRAM):   end;
1325434   +else do;
MPRINT(EM_DIAGRAM):   else do;
1325435   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1325436   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1325437   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1325438   +   end;
MPRINT(EM_DIAGRAM):   end;
1325439   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1325440   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1325441   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1325442   +   end;
MPRINT(EM_DIAGRAM):   end;
1325443   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1325444   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1325445   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1325446   +   end;
MPRINT(EM_DIAGRAM):   end;
1325447   +end;
MPRINT(EM_DIAGRAM):   end;
1325448   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1325449   +   P_DepVar1  =     2.59495030782086 * H11  +    -2.95318868021515 * H12
1325450   +          +    -3.46108195946376 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.59495030782086 * H11 + -2.95318868021515 * H12 + 
-3.46108195946376 * H13 ;
1325451   +   P_DepVar1  =    -0.18846734589192 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.18846734589192 + P_DepVar1 ;
1325452   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1325453   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1325454   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1325455   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1325456   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1325457   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1325458   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1325459   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1325460   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1325461   +END;
MPRINT(EM_DIAGRAM):   END;
1325462   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1325463   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1325464   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1325465   +END;
MPRINT(EM_DIAGRAM):   END;
1325466   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1325467   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1325468   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1325469   +END;
MPRINT(EM_DIAGRAM):   END;
1325470   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1325471   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1325472   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1325473   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1325474   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1325475   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1325476   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1325477   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1325478   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1325479   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1325480   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1325481   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1325482   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1325483   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1325484   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1325485   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1325486   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1325487   +END;
MPRINT(EM_DIAGRAM):   END;
1325488   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1325489   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1325490   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1325491   +drop
1325492   +H11
1325493   +H12
1325494   +H13
1325495   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1325496   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1325497   +* Renaming variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural3;
1325498   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1325499   +* Renaming Posterior variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural3;
1325500   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1325501   +drop Neural3_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar1;
1325502   +Neural3_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar1 = P_DepVar1;
1325503   +drop Neural3_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar0;
1325504   +Neural3_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar0 = P_DepVar0;
1325505   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1325506   +* Renaming _WARN_ variable for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural3;
1325507   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1325508   +length Neural3_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural3_WARN_ $4;
1325509   +drop Neural3_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural3_WARN_;
1325510   +Neural3_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural3_WARN_ = _WARN_;
1325511   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1325512   +* Ensmbl: Scoring Code of model 8 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl: Scoring Code of model 8 of 10;
1325513   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1325514   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1325515   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1325516   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1325517   +* NODE: Neural7;
MPRINT(EM_DIAGRAM):   * NODE: Neural7;
1325518   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1325519   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1325520   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1325521   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1325522   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1325523   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1325524   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1325525   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1325526   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1325527   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1325528   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1325529   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1325530   +LENGTH _WARN_ $4
1325531   +      F_DepVar  $ 12
1325532   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1325533   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1325534   +
1325535   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1325536   +
1325537   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1325538   +
1325539   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1325540   +
1325541   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1325542   +
1325543   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1325544   +
1325545   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1325546   +
1325547   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1325548   +
1325549   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1325550   +
1325551   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1325552   +
1325553   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1325554   +
1325555   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1325556   +
1325557   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1325558   +
1325559   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1325560   +
1325561   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1325562   +
1325563   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1325564   +
1325565   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1325566   +
1325567   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1325568   +
1325569   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1325570   +
1325571   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1325572   +
1325573   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1325574   +
1325575   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1325576   +
1325577   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1325578   +
1325579   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1325580   +
1325581   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1325582   +
1325583   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1325584   +
1325585   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1325586   +
1325587   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1325588   +
1325589   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1325590   +
1325591   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1325592   +
1325593   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1325594   +
1325595   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1325596   +
1325597   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1325598   +
1325599   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1325600   +
1325601   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1325602   +
1325603   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1325604   +
1325605   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1325606   +
1325607   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1325608   +
1325609   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1325610   +
1325611   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1325612   +
1325613   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1325614   +
1325615   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1325616   +
1325617   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1325618   +
1325619   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1325620   +
1325621   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1325622   +
1325623   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1325624   +
1325625   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1325626   +
1325627   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1325628   +
1325629   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1325630   +
1325631   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1325632   +
1325633   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1325634   +
1325635   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1325636   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1325637   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1325638   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1325639   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1325640   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1325641   +end;
MPRINT(EM_DIAGRAM):   end;
1325642   +else do;
MPRINT(EM_DIAGRAM):   else do;
1325643   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1325644   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1325645   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1325646   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1325647   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1325648   +   end;
MPRINT(EM_DIAGRAM):   end;
1325649   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1325650   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1325651   +   end;
MPRINT(EM_DIAGRAM):   end;
1325652   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1325653   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1325654   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1325655   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1325656   +   end;
MPRINT(EM_DIAGRAM):   end;
1325657   +end;
MPRINT(EM_DIAGRAM):   end;
1325658   +
1325659   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1325660   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1325661   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1325662   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1325663   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1325664   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1325665   +end;
MPRINT(EM_DIAGRAM):   end;
1325666   +else do;
MPRINT(EM_DIAGRAM):   else do;
1325667   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1325668   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1325669   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1325670   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1325671   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1325672   +   end;
MPRINT(EM_DIAGRAM):   end;
1325673   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1325674   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1325675   +   end;
MPRINT(EM_DIAGRAM):   end;
1325676   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1325677   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1325678   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1325679   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1325680   +   end;
MPRINT(EM_DIAGRAM):   end;
1325681   +end;
MPRINT(EM_DIAGRAM):   end;
1325682   +
1325683   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1325684   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1325685   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1325686   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1325687   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1325688   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1325689   +end;
MPRINT(EM_DIAGRAM):   end;
1325690   +else do;
MPRINT(EM_DIAGRAM):   else do;
1325691   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1325692   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1325693   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1325694   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1325695   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1325696   +   end;
MPRINT(EM_DIAGRAM):   end;
1325697   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1325698   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1325699   +   end;
MPRINT(EM_DIAGRAM):   end;
1325700   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1325701   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1325702   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1325703   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1325704   +   end;
MPRINT(EM_DIAGRAM):   end;
1325705   +end;
MPRINT(EM_DIAGRAM):   end;
1325706   +
1325707   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1325708   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1325709   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1325710   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1325711   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1325712   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1325713   +end;
MPRINT(EM_DIAGRAM):   end;
1325714   +else do;
MPRINT(EM_DIAGRAM):   else do;
1325715   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1325716   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1325717   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1325718   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1325719   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1325720   +   end;
MPRINT(EM_DIAGRAM):   end;
1325721   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1325722   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1325723   +   end;
MPRINT(EM_DIAGRAM):   end;
1325724   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1325725   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1325726   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1325727   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1325728   +   end;
MPRINT(EM_DIAGRAM):   end;
1325729   +end;
MPRINT(EM_DIAGRAM):   end;
1325730   +
1325731   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1325732   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1325733   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1325734   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1325735   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1325736   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1325737   +end;
MPRINT(EM_DIAGRAM):   end;
1325738   +else do;
MPRINT(EM_DIAGRAM):   else do;
1325739   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1325740   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1325741   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1325742   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1325743   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1325744   +   end;
MPRINT(EM_DIAGRAM):   end;
1325745   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1325746   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1325747   +   end;
MPRINT(EM_DIAGRAM):   end;
1325748   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1325749   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1325750   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1325751   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1325752   +   end;
MPRINT(EM_DIAGRAM):   end;
1325753   +end;
MPRINT(EM_DIAGRAM):   end;
1325754   +
1325755   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1325756   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1325757   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1325758   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1325759   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1325760   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1325761   +end;
MPRINT(EM_DIAGRAM):   end;
1325762   +else do;
MPRINT(EM_DIAGRAM):   else do;
1325763   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1325764   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1325765   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1325766   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1325767   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1325768   +   end;
MPRINT(EM_DIAGRAM):   end;
1325769   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1325770   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1325771   +   end;
MPRINT(EM_DIAGRAM):   end;
1325772   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1325773   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1325774   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1325775   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1325776   +   end;
MPRINT(EM_DIAGRAM):   end;
1325777   +end;
MPRINT(EM_DIAGRAM):   end;
1325778   +
1325779   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1325780   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1325781   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1325782   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1325783   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1325784   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1325785   +end;
MPRINT(EM_DIAGRAM):   end;
1325786   +else do;
MPRINT(EM_DIAGRAM):   else do;
1325787   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1325788   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1325789   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1325790   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1325791   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1325792   +   end;
MPRINT(EM_DIAGRAM):   end;
1325793   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1325794   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1325795   +   end;
MPRINT(EM_DIAGRAM):   end;
1325796   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1325797   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1325798   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1325799   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1325800   +   end;
MPRINT(EM_DIAGRAM):   end;
1325801   +end;
MPRINT(EM_DIAGRAM):   end;
1325802   +
1325803   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1325804   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1325805   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1325806   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1325807   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1325808   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1325809   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1325810   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1325811   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1325812   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1325813   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1325814   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1325815   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1325816   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1325817   +end;
MPRINT(EM_DIAGRAM):   end;
1325818   +else do;
MPRINT(EM_DIAGRAM):   else do;
1325819   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1325820   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1325821   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1325822   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1325823   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1325824   +   end;
MPRINT(EM_DIAGRAM):   end;
1325825   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1325826   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1325827   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1325828   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1325829   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1325830   +   end;
MPRINT(EM_DIAGRAM):   end;
1325831   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1325832   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1325833   +   end;
MPRINT(EM_DIAGRAM):   end;
1325834   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1325835   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1325836   +   end;
MPRINT(EM_DIAGRAM):   end;
1325837   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1325838   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1325839   +   end;
MPRINT(EM_DIAGRAM):   end;
1325840   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1325841   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1325842   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1325843   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1325844   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1325845   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1325846   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1325847   +   end;
MPRINT(EM_DIAGRAM):   end;
1325848   +end;
MPRINT(EM_DIAGRAM):   end;
1325849   +
1325850   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1325851   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1325852   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1325853   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1325854   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1325855   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1325856   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1325857   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1325858   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1325859   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1325860   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1325861   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1325862   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1325863   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1325864   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1325865   +end;
MPRINT(EM_DIAGRAM):   end;
1325866   +else do;
MPRINT(EM_DIAGRAM):   else do;
1325867   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1325868   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1325869   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1325870   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1325871   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1325872   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1325873   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1325874   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1325875   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1325876   +         end;
MPRINT(EM_DIAGRAM):   end;
1325877   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1325878   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1325879   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1325880   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1325881   +            end;
MPRINT(EM_DIAGRAM):   end;
1325882   +         end;
MPRINT(EM_DIAGRAM):   end;
1325883   +      end;
MPRINT(EM_DIAGRAM):   end;
1325884   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1325885   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1325886   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1325887   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1325888   +         end;
MPRINT(EM_DIAGRAM):   end;
1325889   +      end;
MPRINT(EM_DIAGRAM):   end;
1325890   +   end;
MPRINT(EM_DIAGRAM):   end;
1325891   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1325892   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1325893   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1325894   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1325895   +      end;
MPRINT(EM_DIAGRAM):   end;
1325896   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1325897   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1325898   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1325899   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1325900   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1325901   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1325902   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1325903   +         end;
MPRINT(EM_DIAGRAM):   end;
1325904   +      end;
MPRINT(EM_DIAGRAM):   end;
1325905   +   end;
MPRINT(EM_DIAGRAM):   end;
1325906   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1325907   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1325908   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1325909   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1325910   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1325911   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1325912   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1325913   +   end;
MPRINT(EM_DIAGRAM):   end;
1325914   +end;
MPRINT(EM_DIAGRAM):   end;
1325915   +
1325916   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1325917   +*** Checking missing input Interval
1325918   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1325919   +
1325920   +IF NMISS(
1325921   +   AcceptedCmpTotal ,
1325922   +   Age ,
1325923   +   Frq ,
1325924   +   Income ,
1325925   +   Kidhome ,
1325926   +   Mnt ,
1325927   +   MntFishProducts ,
1325928   +   MntFruits ,
1325929   +   MntGoldProds ,
1325930   +   MntMeatProducts ,
1325931   +   MntSweetProducts ,
1325932   +   MntWines ,
1325933   +   MonthsAsCustomer ,
1325934   +   NumCatalogPurchases ,
1325935   +   NumDealsPurchases ,
1325936   +   NumDistPurchases ,
1325937   +   NumStorePurchases ,
1325938   +   NumWebPurchases ,
1325939   +   NumWebVisitsMonth ,
1325940   +   RFMstat ,
1325941   +   RMntFrq ,
1325942   +   Recency ,
1325943   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1325944   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1325945   +
1325946   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1325947   +END;
MPRINT(EM_DIAGRAM):   END;
1325948   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1325949   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1325950   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1325951   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1325952   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1325953   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1325954   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1325955   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1325956   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1325957   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1325958   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1325959   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1325960   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1325961   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1325962   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1325963   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1325964   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1325965   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1325966   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1325967   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1325968   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1325969   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1325970   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1325971   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1325972   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1325973   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1325974   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1325975   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1325976   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1325977   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1325978   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1325979   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1325980   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1325981   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1325982   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1325983   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1325984   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1325985   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1325986   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1325987   +END;
MPRINT(EM_DIAGRAM):   END;
1325988   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1325989   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1325990   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1325991   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1325992   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1325993   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1325994   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1325995   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1325996   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1325997   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1325998   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1325999   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1326000   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1326001   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1326002   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1326003   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1326004   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1326005   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1326006   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1326007   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1326008   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1326009   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1326010   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1326011   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1326012   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1326013   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1326014   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1326015   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1326016   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1326017   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1326018   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1326019   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1326020   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1326021   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1326022   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1326023   +   ELSE S_NumCatalogPurchases
1326024   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1326025   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1326026   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1326027   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1326028   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1326029   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1326030   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1326031   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1326032   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1326033   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1326034   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1326035   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1326036   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1326037   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1326038   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1326039   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1326040   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1326041   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1326042   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1326043   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1326044   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1326045   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1326046   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1326047   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1326048   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1326049   +END;
MPRINT(EM_DIAGRAM):   END;
1326050   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1326051   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1326052   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1326053   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1326054   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1326055   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1326056   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1326057   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1326058   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1326059   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1326060   +   H11  =     -0.4861272258755 * S_AcceptedCmpTotal  +    -0.05189637306711 *
1326061   +        S_Age  +    -0.30315098258233 * S_Frq  +    -1.10363388640565 *
1326062   +        S_Income  +     0.49482308043138 * S_Kidhome
1326063   +          +    -0.21806866463657 * S_Mnt  +    -0.07009712511746 *
1326064   +        S_MntFishProducts  +     0.18128886998186 * S_MntFruits
1326065   +          +     0.08667708198542 * S_MntGoldProds  +    -0.34562904453263 *
1326066   +        S_MntMeatProducts  +     0.24207000188265 * S_MntSweetProducts
1326067   +          +     0.73913803788025 * S_MntWines  +    -0.12494500176265 *
1326068   +        S_MonthsAsCustomer  +    -0.45211334823309 * S_NumCatalogPurchases
1326069   +          +    -0.06511788072827 * S_NumDealsPurchases
1326070   +          +    -0.38159596394204 * S_NumDistPurchases
1326071   +          +     0.15411219967595 * S_NumStorePurchases
1326072   +          +     0.21139765335417 * S_NumWebPurchases
1326073   +          +    -1.04359200301033 * S_NumWebVisitsMonth
1326074   +          +      0.1090284887692 * S_RFMstat  +    -0.44883493072151 *
1326075   +        S_RMntFrq  +     1.34562786069569 * S_Recency
1326076   +          +     0.89460449958447 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.4861272258755 * S_AcceptedCmpTotal + -0.05189637306711 * S_Age 
+ -0.30315098258233 * S_Frq + -1.10363388640565 * S_Income + 0.49482308043138 * S_Kidhome + 
-0.21806866463657 * S_Mnt + -0.07009712511746 * S_MntFishProducts + 0.18128886998186 * 
S_MntFruits + 0.08667708198542 * S_MntGoldProds + -0.34562904453263 * S_MntMeatProducts + 
0.24207000188265 * S_MntSweetProducts + 0.73913803788025 * S_MntWines + -0.12494500176265 * 
S_MonthsAsCustomer + -0.45211334823309 * S_NumCatalogPurchases + -0.06511788072827 * 
S_NumDealsPurchases + -0.38159596394204 * S_NumDistPurchases + 0.15411219967595 * 
S_NumStorePurchases + 0.21139765335417 * S_NumWebPurchases + -1.04359200301033 * 
S_NumWebVisitsMonth + 0.1090284887692 * S_RFMstat + -0.44883493072151 * S_RMntFrq + 
1.34562786069569 * S_Recency + 0.89460449958447 * S_Teenhome ;
1326077   +   H12  =     0.49470690944633 * S_AcceptedCmpTotal  +      0.0261154901688 *
1326078   +        S_Age  +    -0.04461338015446 * S_Frq  +     0.49903480336525 *
1326079   +        S_Income  +     0.23698260075506 * S_Kidhome
1326080   +          +     0.24476004659493 * S_Mnt  +    -0.49492355746365 *
1326081   +        S_MntFishProducts  +    -0.09271328974329 * S_MntFruits
1326082   +          +     0.20870223796971 * S_MntGoldProds  +     2.14489337337229 *
1326083   +        S_MntMeatProducts  +     0.05836783904648 * S_MntSweetProducts
1326084   +          +    -0.80559423936695 * S_MntWines  +     0.05650618948417 *
1326085   +        S_MonthsAsCustomer  +     1.52325923960607 * S_NumCatalogPurchases
1326086   +          +     0.75951783049608 * S_NumDealsPurchases
1326087   +          +     0.27731850886303 * S_NumDistPurchases
1326088   +          +    -0.72597847158122 * S_NumStorePurchases
1326089   +          +    -0.87186594418005 * S_NumWebPurchases
1326090   +          +     0.22778956336256 * S_NumWebVisitsMonth
1326091   +          +     0.52707843426664 * S_RFMstat  +     0.08310736513647 *
1326092   +        S_RMntFrq  +    -0.24127828094269 * S_Recency
1326093   +          +    -0.09777624700028 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.49470690944633 * S_AcceptedCmpTotal + 0.0261154901688 * S_Age + 
-0.04461338015446 * S_Frq + 0.49903480336525 * S_Income + 0.23698260075506 * S_Kidhome + 
0.24476004659493 * S_Mnt + -0.49492355746365 * S_MntFishProducts + -0.09271328974329 * 
S_MntFruits + 0.20870223796971 * S_MntGoldProds + 2.14489337337229 * S_MntMeatProducts + 
0.05836783904648 * S_MntSweetProducts + -0.80559423936695 * S_MntWines + 0.05650618948417 * 
S_MonthsAsCustomer + 1.52325923960607 * S_NumCatalogPurchases + 0.75951783049608 * 
S_NumDealsPurchases + 0.27731850886303 * S_NumDistPurchases + -0.72597847158122 * 
S_NumStorePurchases + -0.87186594418005 * S_NumWebPurchases + 0.22778956336256 * 
S_NumWebVisitsMonth + 0.52707843426664 * S_RFMstat + 0.08310736513647 * S_RMntFrq + 
-0.24127828094269 * S_Recency + -0.09777624700028 * S_Teenhome ;
1326094   +   H13  =    -0.14339467136572 * S_AcceptedCmpTotal  +     0.01822297952084 *
1326095   +        S_Age  +    -0.09520130583725 * S_Frq  +    -0.03136906489645 *
1326096   +        S_Income  +    -0.02135707281355 * S_Kidhome
1326097   +          +       0.155894017168 * S_Mnt  +     0.08475472787843 *
1326098   +        S_MntFishProducts  +    -0.07789908506466 * S_MntFruits
1326099   +          +     0.10660062798043 * S_MntGoldProds  +     0.16015984966551 *
1326100   +        S_MntMeatProducts  +    -0.27612516960004 * S_MntSweetProducts
1326101   +          +     -0.2896840938935 * S_MntWines  +    -0.26254012296363 *
1326102   +        S_MonthsAsCustomer  +    -0.12998608904182 * S_NumCatalogPurchases
1326103   +          +    -0.07354863705565 * S_NumDealsPurchases
1326104   +          +    -0.11447983414298 * S_NumDistPurchases
1326105   +          +    -0.12215729534897 * S_NumStorePurchases
1326106   +          +    -0.12902195457851 * S_NumWebPurchases
1326107   +          +     0.19434933394862 * S_NumWebVisitsMonth
1326108   +          +     0.28975506236609 * S_RFMstat  +     0.29422521951226 *
1326109   +        S_RMntFrq  +    -0.17552894408192 * S_Recency
1326110   +          +     -0.1580830073017 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.14339467136572 * S_AcceptedCmpTotal + 0.01822297952084 * S_Age 
+ -0.09520130583725 * S_Frq + -0.03136906489645 * S_Income + -0.02135707281355 * S_Kidhome + 
0.155894017168 * S_Mnt + 0.08475472787843 * S_MntFishProducts + -0.07789908506466 * 
S_MntFruits + 0.10660062798043 * S_MntGoldProds + 0.16015984966551 * S_MntMeatProducts + 
-0.27612516960004 * S_MntSweetProducts + -0.2896840938935 * S_MntWines + -0.26254012296363 * 
S_MonthsAsCustomer + -0.12998608904182 * S_NumCatalogPurchases + -0.07354863705565 * 
S_NumDealsPurchases + -0.11447983414298 * S_NumDistPurchases + -0.12215729534897 * 
S_NumStorePurchases + -0.12902195457851 * S_NumWebPurchases + 0.19434933394862 * 
S_NumWebVisitsMonth + 0.28975506236609 * S_RFMstat + 0.29422521951226 * S_RMntFrq + 
-0.17552894408192 * S_Recency + -0.1580830073017 * S_Teenhome ;
1326111   +   H14  =     0.02093644707827 * S_AcceptedCmpTotal  +     0.20395783918661 *
1326112   +        S_Age  +     0.59442731897797 * S_Frq  +     0.29119798252337 *
1326113   +        S_Income  +    -0.45406848052616 * S_Kidhome
1326114   +          +    -0.07771670260258 * S_Mnt  +     0.22748787488449 *
1326115   +        S_MntFishProducts  +    -0.17850998839546 * S_MntFruits
1326116   +          +     0.26951758688823 * S_MntGoldProds  +    -0.79968061180107 *
1326117   +        S_MntMeatProducts  +     -0.1140667580899 * S_MntSweetProducts
1326118   +          +      0.4869411024289 * S_MntWines  +    -0.01712813082958 *
1326119   +        S_MonthsAsCustomer  +    -0.84487773781523 * S_NumCatalogPurchases
1326120   +          +     -0.7419997885817 * S_NumDealsPurchases
1326121   +          +     0.27831770188348 * S_NumDistPurchases
1326122   +          +     0.59857930354045 * S_NumStorePurchases
1326123   +          +     0.64048264413595 * S_NumWebPurchases
1326124   +          +    -0.50793007710291 * S_NumWebVisitsMonth
1326125   +          +    -0.14149333808405 * S_RFMstat  +     0.01746285773092 *
1326126   +        S_RMntFrq  +     0.40903481897501 * S_Recency
1326127   +          +    -0.09082840454575 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.02093644707827 * S_AcceptedCmpTotal + 0.20395783918661 * S_Age + 
0.59442731897797 * S_Frq + 0.29119798252337 * S_Income + -0.45406848052616 * S_Kidhome + 
-0.07771670260258 * S_Mnt + 0.22748787488449 * S_MntFishProducts + -0.17850998839546 * 
S_MntFruits + 0.26951758688823 * S_MntGoldProds + -0.79968061180107 * S_MntMeatProducts + 
-0.1140667580899 * S_MntSweetProducts + 0.4869411024289 * S_MntWines + -0.01712813082958 * 
S_MonthsAsCustomer + -0.84487773781523 * S_NumCatalogPurchases + -0.7419997885817 * 
S_NumDealsPurchases + 0.27831770188348 * S_NumDistPurchases + 0.59857930354045 * 
S_NumStorePurchases + 0.64048264413595 * S_NumWebPurchases + -0.50793007710291 * 
S_NumWebVisitsMonth + -0.14149333808405 * S_RFMstat + 0.01746285773092 * S_RMntFrq + 
0.40903481897501 * S_Recency + -0.09082840454575 * S_Teenhome ;
1326128   +   H15  =    -0.54395842220188 * S_AcceptedCmpTotal  +    -0.00659873517805 *
1326129   +        S_Age  +     0.13328067508696 * S_Frq  +    -0.40683362094427 *
1326130   +        S_Income  +     0.78347324989919 * S_Kidhome
1326131   +          +    -0.08815491299054 * S_Mnt  +     0.24650131354859 *
1326132   +        S_MntFishProducts  +     0.08184618135481 * S_MntFruits
1326133   +          +    -0.12412058422094 * S_MntGoldProds  +    -0.82851470750716 *
1326134   +        S_MntMeatProducts  +     0.04998663129465 * S_MntSweetProducts
1326135   +          +     0.40431404211888 * S_MntWines  +     0.20441979242265 *
1326136   +        S_MonthsAsCustomer  +    -0.59560487920908 * S_NumCatalogPurchases
1326137   +          +    -0.51611441201596 * S_NumDealsPurchases
1326138   +          +     0.08384183916368 * S_NumDistPurchases
1326139   +          +     0.61287235664869 * S_NumStorePurchases
1326140   +          +      0.6529111332187 * S_NumWebPurchases
1326141   +          +    -1.46254898694754 * S_NumWebVisitsMonth
1326142   +          +    -0.12654274035522 * S_RFMstat  +     0.44674987490347 *
1326143   +        S_RMntFrq  +     1.38435640479916 * S_Recency
1326144   +          +     0.33296597278129 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.54395842220188 * S_AcceptedCmpTotal + -0.00659873517805 * S_Age 
+ 0.13328067508696 * S_Frq + -0.40683362094427 * S_Income + 0.78347324989919 * S_Kidhome + 
-0.08815491299054 * S_Mnt + 0.24650131354859 * S_MntFishProducts + 0.08184618135481 * 
S_MntFruits + -0.12412058422094 * S_MntGoldProds + -0.82851470750716 * S_MntMeatProducts + 
0.04998663129465 * S_MntSweetProducts + 0.40431404211888 * S_MntWines + 0.20441979242265 * 
S_MonthsAsCustomer + -0.59560487920908 * S_NumCatalogPurchases + -0.51611441201596 * 
S_NumDealsPurchases + 0.08384183916368 * S_NumDistPurchases + 0.61287235664869 * 
S_NumStorePurchases + 0.6529111332187 * S_NumWebPurchases + -1.46254898694754 * 
S_NumWebVisitsMonth + -0.12654274035522 * S_RFMstat + 0.44674987490347 * S_RMntFrq + 
1.38435640479916 * S_Recency + 0.33296597278129 * S_Teenhome ;
1326145   +   H11  = H11  +    -0.00998851481276 * AcceptedCmp10
1326146   +          +     0.32921116293054 * AcceptedCmp20  +     0.31125214601572 *
1326147   +        AcceptedCmp30  +     0.49394812035071 * AcceptedCmp40
1326148   +          +    -0.13967719688623 * AcceptedCmp50  +     0.10069638637668 *
1326149   +        Complain0  +    -0.33122877949584 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.00998851481276 * AcceptedCmp10 + 0.32921116293054 * 
AcceptedCmp20 + 0.31125214601572 * AcceptedCmp30 + 0.49394812035071 * AcceptedCmp40 + 
-0.13967719688623 * AcceptedCmp50 + 0.10069638637668 * Complain0 + -0.33122877949584 * 
HigherEducationBinary0 ;
1326150   +   H12  = H12  +    -0.19856686646083 * AcceptedCmp10
1326151   +          +     0.23310696712955 * AcceptedCmp20  +     0.20346336135422 *
1326152   +        AcceptedCmp30  +     0.30256624409423 * AcceptedCmp40
1326153   +          +    -0.29335754278392 * AcceptedCmp50  +     0.21323212558806 *
1326154   +        Complain0  +    -0.13556600599489 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.19856686646083 * AcceptedCmp10 + 0.23310696712955 * 
AcceptedCmp20 + 0.20346336135422 * AcceptedCmp30 + 0.30256624409423 * AcceptedCmp40 + 
-0.29335754278392 * AcceptedCmp50 + 0.21323212558806 * Complain0 + -0.13556600599489 * 
HigherEducationBinary0 ;
1326155   +   H13  = H13  +    -0.01722105367877 * AcceptedCmp10
1326156   +          +     0.03291794356955 * AcceptedCmp20  +     0.05944626529099 *
1326157   +        AcceptedCmp30  +    -0.05221243291111 * AcceptedCmp40
1326158   +          +     0.17912917985939 * AcceptedCmp50  +    -0.15861965360776 *
1326159   +        Complain0  +     0.12900426780961 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.01722105367877 * AcceptedCmp10 + 0.03291794356955 * 
AcceptedCmp20 + 0.05944626529099 * AcceptedCmp30 + -0.05221243291111 * AcceptedCmp40 + 
0.17912917985939 * AcceptedCmp50 + -0.15861965360776 * Complain0 + 0.12900426780961 * 
HigherEducationBinary0 ;
1326160   +   H14  = H14  +     0.06387950776559 * AcceptedCmp10
1326161   +          +      0.2872534864949 * AcceptedCmp20  +     0.51726192943362 *
1326162   +        AcceptedCmp30  +     0.00602188882249 * AcceptedCmp40
1326163   +          +     0.32401593400636 * AcceptedCmp50  +     0.46704484165073 *
1326164   +        Complain0  +     0.18433576051792 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.06387950776559 * AcceptedCmp10 + 0.2872534864949 * 
AcceptedCmp20 + 0.51726192943362 * AcceptedCmp30 + 0.00602188882249 * AcceptedCmp40 + 
0.32401593400636 * AcceptedCmp50 + 0.46704484165073 * Complain0 + 0.18433576051792 * 
HigherEducationBinary0 ;
1326165   +   H15  = H15  +      0.2705244136245 * AcceptedCmp10
1326166   +          +     0.37082512037556 * AcceptedCmp20  +     0.13484905564511 *
1326167   +        AcceptedCmp30  +      0.0945945695678 * AcceptedCmp40
1326168   +          +     0.49264779479372 * AcceptedCmp50  +     0.02840120006931 *
1326169   +        Complain0  +     0.01012130065838 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.2705244136245 * AcceptedCmp10 + 0.37082512037556 * 
AcceptedCmp20 + 0.13484905564511 * AcceptedCmp30 + 0.0945945695678 * AcceptedCmp40 + 
0.49264779479372 * AcceptedCmp50 + 0.02840120006931 * Complain0 + 0.01012130065838 * 
HigherEducationBinary0 ;
1326170   +   H11  = H11  +     0.19487730016213 * Education2n_Cycle
1326171   +          +    -0.07970756533219 * EducationBasic  +    -0.00249127525942 *
1326172   +        EducationGraduation  +     0.05566108043576 * EducationMaster
1326173   +          +    -0.44050788959765 * Marital_StatusDivorced
1326174   +          +     1.05705004944669 * Marital_StatusMarried
1326175   +          +    -0.96451435752717 * Marital_StatusSingle
1326176   +          +     1.00265132362409 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.19487730016213 * Education2n_Cycle + -0.07970756533219 * 
EducationBasic + -0.00249127525942 * EducationGraduation + 0.05566108043576 * EducationMaster 
+ -0.44050788959765 * Marital_StatusDivorced + 1.05705004944669 * Marital_StatusMarried + 
-0.96451435752717 * Marital_StatusSingle + 1.00265132362409 * Marital_StatusTogether ;
1326177   +   H12  = H12  +     0.19745100530679 * Education2n_Cycle
1326178   +          +    -0.10079088668307 * EducationBasic  +     0.02404299835038 *
1326179   +        EducationGraduation  +      0.0340690439206 * EducationMaster
1326180   +          +    -0.21967258137916 * Marital_StatusDivorced
1326181   +          +     0.37571162461413 * Marital_StatusMarried
1326182   +          +    -0.14215095739521 * Marital_StatusSingle
1326183   +          +     0.46670526265514 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.19745100530679 * Education2n_Cycle + -0.10079088668307 * 
EducationBasic + 0.02404299835038 * EducationGraduation + 0.0340690439206 * EducationMaster + 
-0.21967258137916 * Marital_StatusDivorced + 0.37571162461413 * Marital_StatusMarried + 
-0.14215095739521 * Marital_StatusSingle + 0.46670526265514 * Marital_StatusTogether ;
1326184   +   H13  = H13  +      0.0623691087211 * Education2n_Cycle
1326185   +          +    -0.33655773682797 * EducationBasic  +     0.16528476523732 *
1326186   +        EducationGraduation  +     0.12766333771333 * EducationMaster
1326187   +          +     -0.0802366153164 * Marital_StatusDivorced
1326188   +          +     0.03786873526752 * Marital_StatusMarried
1326189   +          +     0.00312869012906 * Marital_StatusSingle
1326190   +          +    -0.00653511004071 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.0623691087211 * Education2n_Cycle + -0.33655773682797 * 
EducationBasic + 0.16528476523732 * EducationGraduation + 0.12766333771333 * EducationMaster + 
-0.0802366153164 * Marital_StatusDivorced + 0.03786873526752 * Marital_StatusMarried + 
0.00312869012906 * Marital_StatusSingle + -0.00653511004071 * Marital_StatusTogether ;
1326191   +   H14  = H14  +     0.23561684440206 * Education2n_Cycle
1326192   +          +     0.19772542317614 * EducationBasic  +    -0.01658765862665 *
1326193   +        EducationGraduation  +    -0.04275711813742 * EducationMaster
1326194   +          +      0.1354388000076 * Marital_StatusDivorced
1326195   +          +    -0.39881989621029 * Marital_StatusMarried
1326196   +          +     0.31082414702417 * Marital_StatusSingle
1326197   +          +    -0.23211065362686 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.23561684440206 * Education2n_Cycle + 0.19772542317614 * 
EducationBasic + -0.01658765862665 * EducationGraduation + -0.04275711813742 * EducationMaster 
+ 0.1354388000076 * Marital_StatusDivorced + -0.39881989621029 * Marital_StatusMarried + 
0.31082414702417 * Marital_StatusSingle + -0.23211065362686 * Marital_StatusTogether ;
1326198   +   H15  = H15  +    -0.23088632938738 * Education2n_Cycle
1326199   +          +     0.08999420370752 * EducationBasic  +    -0.11102395071934 *
1326200   +        EducationGraduation  +     0.22556288381362 * EducationMaster
1326201   +          +    -0.21036089859855 * Marital_StatusDivorced
1326202   +          +     0.68363662719948 * Marital_StatusMarried
1326203   +          +    -0.52766746827942 * Marital_StatusSingle
1326204   +          +     0.85776128537024 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.23088632938738 * Education2n_Cycle + 0.08999420370752 * 
EducationBasic + -0.11102395071934 * EducationGraduation + 0.22556288381362 * EducationMaster 
+ -0.21036089859855 * Marital_StatusDivorced + 0.68363662719948 * Marital_StatusMarried + 
-0.52766746827942 * Marital_StatusSingle + 0.85776128537024 * Marital_StatusTogether ;
1326205   +   H11  =     1.95018025194886 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.95018025194886 + H11 ;
1326206   +   H12  =     0.17843928986556 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.17843928986556 + H12 ;
1326207   +   H13  =    -2.95793338914875 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -2.95793338914875 + H13 ;
1326208   +   H14  =     0.65864057076307 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.65864057076307 + H14 ;
1326209   +   H15  =    -0.16712892170551 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.16712892170551 + H15 ;
1326210   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1326211   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1326212   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1326213   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1326214   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1326215   +END;
MPRINT(EM_DIAGRAM):   END;
1326216   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1326217   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1326218   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1326219   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1326220   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1326221   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1326222   +END;
MPRINT(EM_DIAGRAM):   END;
1326223   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1326224   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1326225   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1326226   +
1326227   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1326228   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1326229   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1326230   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1326231   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1326232   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1326233   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1326234   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1326235   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1326236   +end;
MPRINT(EM_DIAGRAM):   end;
1326237   +else do;
MPRINT(EM_DIAGRAM):   else do;
1326238   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1326239   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1326240   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1326241   +   end;
MPRINT(EM_DIAGRAM):   end;
1326242   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1326243   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1326244   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1326245   +   end;
MPRINT(EM_DIAGRAM):   end;
1326246   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1326247   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1326248   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1326249   +   end;
MPRINT(EM_DIAGRAM):   end;
1326250   +end;
MPRINT(EM_DIAGRAM):   end;
1326251   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1326252   +   P_DepVar1  =     -3.1843124920179 * H11  +     3.14684332137523 * H12
1326253   +          +     0.05566824550862 * H13  +    -2.15942017561302 * H14
1326254   +          +    -3.42546418986096 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.1843124920179 * H11 + 3.14684332137523 * H12 + 
0.05566824550862 * H13 + -2.15942017561302 * H14 + -3.42546418986096 * H15 ;
1326255   +   P_DepVar1  =    -1.09960037898167 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.09960037898167 + P_DepVar1 ;
1326256   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1326257   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1326258   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1326259   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1326260   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1326261   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1326262   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1326263   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1326264   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1326265   +END;
MPRINT(EM_DIAGRAM):   END;
1326266   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1326267   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1326268   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1326269   +END;
MPRINT(EM_DIAGRAM):   END;
1326270   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1326271   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1326272   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1326273   +END;
MPRINT(EM_DIAGRAM):   END;
1326274   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1326275   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1326276   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1326277   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1326278   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1326279   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1326280   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1326281   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1326282   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1326283   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1326284   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1326285   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1326286   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1326287   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1326288   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1326289   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1326290   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1326291   +END;
MPRINT(EM_DIAGRAM):   END;
1326292   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1326293   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1326294   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1326295   +drop
1326296   +H11
1326297   +H12
1326298   +H13
1326299   +H14
1326300   +H15
1326301   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
1326302   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1326303   +* Renaming variables for Neural7;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural7;
1326304   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1326305   +* Renaming Posterior variables for Neural7;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural7;
1326306   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1326307   +drop Neural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural7_P_DepVar1;
1326308   +Neural7_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural7_P_DepVar1 = P_DepVar1;
1326309   +drop Neural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural7_P_DepVar0;
1326310   +Neural7_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural7_P_DepVar0 = P_DepVar0;
1326311   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1326312   +* Renaming _WARN_ variable for Neural7;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural7;
1326313   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1326314   +length Neural7_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural7_WARN_ $4;
1326315   +drop Neural7_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural7_WARN_;
1326316   +Neural7_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural7_WARN_ = _WARN_;
1326317   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1326318   +* Ensmbl: Scoring Code of model 9 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl: Scoring Code of model 9 of 10;
1326319   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1326320   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1326321   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1326322   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1326323   +* NODE: Neural9;
MPRINT(EM_DIAGRAM):   * NODE: Neural9;
1326324   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1326325   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1326326   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1326327   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1326328   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1326329   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1326330   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1326331   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1326332   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1326333   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1326334   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1326335   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1326336   +LENGTH _WARN_ $4
1326337   +      F_DepVar  $ 12
1326338   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1326339   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1326340   +
1326341   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1326342   +
1326343   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1326344   +
1326345   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1326346   +
1326347   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1326348   +
1326349   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1326350   +
1326351   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1326352   +
1326353   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1326354   +
1326355   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1326356   +
1326357   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1326358   +
1326359   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1326360   +
1326361   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1326362   +
1326363   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1326364   +
1326365   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1326366   +
1326367   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1326368   +
1326369   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1326370   +
1326371   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1326372   +
1326373   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1326374   +
1326375   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1326376   +
1326377   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1326378   +
1326379   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1326380   +
1326381   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1326382   +
1326383   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1326384   +
1326385   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1326386   +
1326387   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1326388   +
1326389   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1326390   +
1326391   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1326392   +
1326393   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1326394   +
1326395   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1326396   +
1326397   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1326398   +
1326399   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1326400   +
1326401   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1326402   +
1326403   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1326404   +
1326405   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1326406   +
1326407   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1326408   +
1326409   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1326410   +
1326411   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1326412   +
1326413   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1326414   +
1326415   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1326416   +
1326417   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1326418   +
1326419   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1326420   +
1326421   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1326422   +
1326423   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1326424   +
1326425   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1326426   +
1326427   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1326428   +
1326429   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1326430   +
1326431   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1326432   +
1326433   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1326434   +
1326435   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1326436   +
1326437   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1326438   +
1326439   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1326440   +
1326441   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1326442   +
1326443   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1326444   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1326445   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1326446   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1326447   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1326448   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1326449   +end;
MPRINT(EM_DIAGRAM):   end;
1326450   +else do;
MPRINT(EM_DIAGRAM):   else do;
1326451   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1326452   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1326453   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1326454   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1326455   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1326456   +   end;
MPRINT(EM_DIAGRAM):   end;
1326457   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1326458   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1326459   +   end;
MPRINT(EM_DIAGRAM):   end;
1326460   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1326461   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1326462   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1326463   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1326464   +   end;
MPRINT(EM_DIAGRAM):   end;
1326465   +end;
MPRINT(EM_DIAGRAM):   end;
1326466   +
1326467   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1326468   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1326469   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1326470   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1326471   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1326472   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1326473   +end;
MPRINT(EM_DIAGRAM):   end;
1326474   +else do;
MPRINT(EM_DIAGRAM):   else do;
1326475   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1326476   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1326477   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1326478   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1326479   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1326480   +   end;
MPRINT(EM_DIAGRAM):   end;
1326481   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1326482   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1326483   +   end;
MPRINT(EM_DIAGRAM):   end;
1326484   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1326485   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1326486   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1326487   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1326488   +   end;
MPRINT(EM_DIAGRAM):   end;
1326489   +end;
MPRINT(EM_DIAGRAM):   end;
1326490   +
1326491   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1326492   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1326493   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1326494   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1326495   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1326496   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1326497   +end;
MPRINT(EM_DIAGRAM):   end;
1326498   +else do;
MPRINT(EM_DIAGRAM):   else do;
1326499   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1326500   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1326501   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1326502   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1326503   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1326504   +   end;
MPRINT(EM_DIAGRAM):   end;
1326505   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1326506   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1326507   +   end;
MPRINT(EM_DIAGRAM):   end;
1326508   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1326509   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1326510   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1326511   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1326512   +   end;
MPRINT(EM_DIAGRAM):   end;
1326513   +end;
MPRINT(EM_DIAGRAM):   end;
1326514   +
1326515   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1326516   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1326517   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1326518   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1326519   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1326520   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1326521   +end;
MPRINT(EM_DIAGRAM):   end;
1326522   +else do;
MPRINT(EM_DIAGRAM):   else do;
1326523   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1326524   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1326525   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1326526   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1326527   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1326528   +   end;
MPRINT(EM_DIAGRAM):   end;
1326529   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1326530   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1326531   +   end;
MPRINT(EM_DIAGRAM):   end;
1326532   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1326533   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1326534   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1326535   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1326536   +   end;
MPRINT(EM_DIAGRAM):   end;
1326537   +end;
MPRINT(EM_DIAGRAM):   end;
1326538   +
1326539   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1326540   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1326541   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1326542   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1326543   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1326544   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1326545   +end;
MPRINT(EM_DIAGRAM):   end;
1326546   +else do;
MPRINT(EM_DIAGRAM):   else do;
1326547   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1326548   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1326549   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1326550   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1326551   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1326552   +   end;
MPRINT(EM_DIAGRAM):   end;
1326553   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1326554   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1326555   +   end;
MPRINT(EM_DIAGRAM):   end;
1326556   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1326557   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1326558   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1326559   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1326560   +   end;
MPRINT(EM_DIAGRAM):   end;
1326561   +end;
MPRINT(EM_DIAGRAM):   end;
1326562   +
1326563   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1326564   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1326565   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1326566   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1326567   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1326568   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1326569   +end;
MPRINT(EM_DIAGRAM):   end;
1326570   +else do;
MPRINT(EM_DIAGRAM):   else do;
1326571   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1326572   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1326573   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1326574   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1326575   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1326576   +   end;
MPRINT(EM_DIAGRAM):   end;
1326577   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1326578   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1326579   +   end;
MPRINT(EM_DIAGRAM):   end;
1326580   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1326581   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1326582   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1326583   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1326584   +   end;
MPRINT(EM_DIAGRAM):   end;
1326585   +end;
MPRINT(EM_DIAGRAM):   end;
1326586   +
1326587   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1326588   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1326589   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1326590   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1326591   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1326592   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1326593   +end;
MPRINT(EM_DIAGRAM):   end;
1326594   +else do;
MPRINT(EM_DIAGRAM):   else do;
1326595   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1326596   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1326597   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1326598   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1326599   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1326600   +   end;
MPRINT(EM_DIAGRAM):   end;
1326601   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1326602   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1326603   +   end;
MPRINT(EM_DIAGRAM):   end;
1326604   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1326605   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1326606   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1326607   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1326608   +   end;
MPRINT(EM_DIAGRAM):   end;
1326609   +end;
MPRINT(EM_DIAGRAM):   end;
1326610   +
1326611   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1326612   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1326613   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1326614   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1326615   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1326616   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1326617   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1326618   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1326619   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1326620   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1326621   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1326622   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1326623   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1326624   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1326625   +end;
MPRINT(EM_DIAGRAM):   end;
1326626   +else do;
MPRINT(EM_DIAGRAM):   else do;
1326627   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1326628   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1326629   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1326630   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1326631   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1326632   +   end;
MPRINT(EM_DIAGRAM):   end;
1326633   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1326634   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1326635   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1326636   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1326637   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1326638   +   end;
MPRINT(EM_DIAGRAM):   end;
1326639   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1326640   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1326641   +   end;
MPRINT(EM_DIAGRAM):   end;
1326642   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1326643   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1326644   +   end;
MPRINT(EM_DIAGRAM):   end;
1326645   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1326646   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1326647   +   end;
MPRINT(EM_DIAGRAM):   end;
1326648   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1326649   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1326650   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1326651   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1326652   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1326653   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1326654   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1326655   +   end;
MPRINT(EM_DIAGRAM):   end;
1326656   +end;
MPRINT(EM_DIAGRAM):   end;
1326657   +
1326658   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1326659   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1326660   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1326661   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1326662   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1326663   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1326664   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1326665   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1326666   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1326667   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1326668   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1326669   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1326670   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1326671   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1326672   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1326673   +end;
MPRINT(EM_DIAGRAM):   end;
1326674   +else do;
MPRINT(EM_DIAGRAM):   else do;
1326675   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1326676   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1326677   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1326678   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1326679   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1326680   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1326681   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1326682   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1326683   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1326684   +         end;
MPRINT(EM_DIAGRAM):   end;
1326685   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1326686   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1326687   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1326688   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1326689   +            end;
MPRINT(EM_DIAGRAM):   end;
1326690   +         end;
MPRINT(EM_DIAGRAM):   end;
1326691   +      end;
MPRINT(EM_DIAGRAM):   end;
1326692   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1326693   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1326694   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1326695   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1326696   +         end;
MPRINT(EM_DIAGRAM):   end;
1326697   +      end;
MPRINT(EM_DIAGRAM):   end;
1326698   +   end;
MPRINT(EM_DIAGRAM):   end;
1326699   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1326700   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1326701   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1326702   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1326703   +      end;
MPRINT(EM_DIAGRAM):   end;
1326704   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1326705   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1326706   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1326707   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1326708   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1326709   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1326710   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1326711   +         end;
MPRINT(EM_DIAGRAM):   end;
1326712   +      end;
MPRINT(EM_DIAGRAM):   end;
1326713   +   end;
MPRINT(EM_DIAGRAM):   end;
1326714   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1326715   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1326716   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1326717   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1326718   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1326719   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1326720   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1326721   +   end;
MPRINT(EM_DIAGRAM):   end;
1326722   +end;
MPRINT(EM_DIAGRAM):   end;
1326723   +
1326724   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1326725   +*** Checking missing input Interval
1326726   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1326727   +
1326728   +IF NMISS(
1326729   +   AcceptedCmpTotal ,
1326730   +   Age ,
1326731   +   Frq ,
1326732   +   Income ,
1326733   +   Kidhome ,
1326734   +   Mnt ,
1326735   +   MntFishProducts ,
1326736   +   MntFruits ,
1326737   +   MntGoldProds ,
1326738   +   MntMeatProducts ,
1326739   +   MntSweetProducts ,
1326740   +   MntWines ,
1326741   +   MonthsAsCustomer ,
1326742   +   NumCatalogPurchases ,
1326743   +   NumDealsPurchases ,
1326744   +   NumDistPurchases ,
1326745   +   NumStorePurchases ,
1326746   +   NumWebPurchases ,
1326747   +   NumWebVisitsMonth ,
1326748   +   RFMstat ,
1326749   +   RMntFrq ,
1326750   +   Recency ,
1326751   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1326752   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1326753   +
1326754   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1326755   +END;
MPRINT(EM_DIAGRAM):   END;
1326756   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1326757   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1326758   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1326759   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1326760   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1326761   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1326762   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1326763   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1326764   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1326765   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1326766   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1326767   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1326768   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1326769   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1326770   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1326771   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1326772   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1326773   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1326774   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1326775   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1326776   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1326777   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1326778   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1326779   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1326780   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1326781   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1326782   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1326783   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1326784   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1326785   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1326786   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1326787   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1326788   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1326789   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1326790   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1326791   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1326792   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1326793   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1326794   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1326795   +END;
MPRINT(EM_DIAGRAM):   END;
1326796   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1326797   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1326798   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1326799   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1326800   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1326801   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1326802   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1326803   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1326804   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1326805   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1326806   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1326807   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1326808   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1326809   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1326810   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1326811   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1326812   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1326813   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1326814   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1326815   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1326816   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1326817   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1326818   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1326819   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1326820   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1326821   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1326822   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1326823   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1326824   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1326825   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1326826   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1326827   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1326828   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1326829   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1326830   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1326831   +   ELSE S_NumCatalogPurchases
1326832   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1326833   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1326834   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1326835   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1326836   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1326837   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1326838   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1326839   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1326840   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1326841   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1326842   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1326843   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1326844   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1326845   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1326846   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1326847   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1326848   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1326849   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1326850   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1326851   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1326852   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1326853   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1326854   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1326855   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1326856   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1326857   +END;
MPRINT(EM_DIAGRAM):   END;
1326858   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1326859   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1326860   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1326861   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1326862   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1326863   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1326864   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1326865   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1326866   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1326867   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1326868   +   H11  =     0.19960473225933 * S_AcceptedCmpTotal  +     -0.3891753208081 *
1326869   +        S_Age  +    -0.38863469907463 * S_Frq  +      -0.218282547936 *
1326870   +        S_Income  +     -0.0761121347886 * S_Kidhome
1326871   +          +     0.13231844745195 * S_Mnt  +     0.03847734904026 *
1326872   +        S_MntFishProducts  +    -0.08557040854782 * S_MntFruits
1326873   +          +     0.05679165614645 * S_MntGoldProds  +     0.98985461955462 *
1326874   +        S_MntMeatProducts  +    -0.25089034197541 * S_MntSweetProducts
1326875   +          +    -0.20961106315243 * S_MntWines  +     0.00877322606769 *
1326876   +        S_MonthsAsCustomer  +     0.42365427657146 * S_NumCatalogPurchases
1326877   +          +     0.83893684194413 * S_NumDealsPurchases
1326878   +          +     0.23391006875291 * S_NumDistPurchases
1326879   +          +    -0.63370705462074 * S_NumStorePurchases
1326880   +          +     -0.9137408014067 * S_NumWebPurchases
1326881   +          +     0.89109351479441 * S_NumWebVisitsMonth
1326882   +          +     0.40379703973869 * S_RFMstat  +     0.02992612739892 *
1326883   +        S_RMntFrq  +    -0.85349828740223 * S_Recency
1326884   +          +     0.17501150943585 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.19960473225933 * S_AcceptedCmpTotal + -0.3891753208081 * S_Age + 
-0.38863469907463 * S_Frq + -0.218282547936 * S_Income + -0.0761121347886 * S_Kidhome + 
0.13231844745195 * S_Mnt + 0.03847734904026 * S_MntFishProducts + -0.08557040854782 * 
S_MntFruits + 0.05679165614645 * S_MntGoldProds + 0.98985461955462 * S_MntMeatProducts + 
-0.25089034197541 * S_MntSweetProducts + -0.20961106315243 * S_MntWines + 0.00877322606769 * 
S_MonthsAsCustomer + 0.42365427657146 * S_NumCatalogPurchases + 0.83893684194413 * 
S_NumDealsPurchases + 0.23391006875291 * S_NumDistPurchases + -0.63370705462074 * 
S_NumStorePurchases + -0.9137408014067 * S_NumWebPurchases + 0.89109351479441 * 
S_NumWebVisitsMonth + 0.40379703973869 * S_RFMstat + 0.02992612739892 * S_RMntFrq + 
-0.85349828740223 * S_Recency + 0.17501150943585 * S_Teenhome ;
1326885   +   H12  =     0.57191299319193 * S_AcceptedCmpTotal  +     0.06554370511829 *
1326886   +        S_Age  +    -0.36683285440702 * S_Frq  +     0.38867787826981 *
1326887   +        S_Income  +    -0.43909782819329 * S_Kidhome
1326888   +          +    -0.20015496934973 * S_Mnt  +    -0.12914218014786 *
1326889   +        S_MntFishProducts  +    -0.15398661741952 * S_MntFruits
1326890   +          +    -0.05274722398466 * S_MntGoldProds  +     0.56013165499725 *
1326891   +        S_MntMeatProducts  +     0.05414820118553 * S_MntSweetProducts
1326892   +          +     -0.3600749061383 * S_MntWines  +    -0.10603301590721 *
1326893   +        S_MonthsAsCustomer  +     0.36776848192468 * S_NumCatalogPurchases
1326894   +          +      0.2218973353638 * S_NumDealsPurchases
1326895   +          +      0.0062360950528 * S_NumDistPurchases
1326896   +          +    -0.57621747951002 * S_NumStorePurchases
1326897   +          +    -0.33564890905657 * S_NumWebPurchases
1326898   +          +     0.82482365540301 * S_NumWebVisitsMonth
1326899   +          +     0.00853485340844 * S_RFMstat  +    -0.08358062109702 *
1326900   +        S_RMntFrq  +    -0.77306663228806 * S_Recency
1326901   +          +    -0.36028078495757 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.57191299319193 * S_AcceptedCmpTotal + 0.06554370511829 * S_Age + 
-0.36683285440702 * S_Frq + 0.38867787826981 * S_Income + -0.43909782819329 * S_Kidhome + 
-0.20015496934973 * S_Mnt + -0.12914218014786 * S_MntFishProducts + -0.15398661741952 * 
S_MntFruits + -0.05274722398466 * S_MntGoldProds + 0.56013165499725 * S_MntMeatProducts + 
0.05414820118553 * S_MntSweetProducts + -0.3600749061383 * S_MntWines + -0.10603301590721 * 
S_MonthsAsCustomer + 0.36776848192468 * S_NumCatalogPurchases + 0.2218973353638 * 
S_NumDealsPurchases + 0.0062360950528 * S_NumDistPurchases + -0.57621747951002 * 
S_NumStorePurchases + -0.33564890905657 * S_NumWebPurchases + 0.82482365540301 * 
S_NumWebVisitsMonth + 0.00853485340844 * S_RFMstat + -0.08358062109702 * S_RMntFrq + 
-0.77306663228806 * S_Recency + -0.36028078495757 * S_Teenhome ;
1326902   +   H13  =     0.04958757890989 * S_AcceptedCmpTotal  +    -0.35438992757247 *
1326903   +        S_Age  +    -0.00591919176562 * S_Frq  +    -0.27415788425743 *
1326904   +        S_Income  +    -0.03572236011846 * S_Kidhome
1326905   +          +    -0.13070406034722 * S_Mnt  +     0.18129697551902 *
1326906   +        S_MntFishProducts  +     0.12543390103308 * S_MntFruits
1326907   +          +    -0.03846216245953 * S_MntGoldProds  +      0.1535321444723 *
1326908   +        S_MntMeatProducts  +     0.43228964267878 * S_MntSweetProducts
1326909   +          +     0.04044476981059 * S_MntWines  +     0.05282237039086 *
1326910   +        S_MonthsAsCustomer  +    -0.22394386505524 * S_NumCatalogPurchases
1326911   +          +      -0.174147250062 * S_NumDealsPurchases
1326912   +          +    -0.22921682388864 * S_NumDistPurchases
1326913   +          +     0.41526854684299 * S_NumStorePurchases
1326914   +          +    -0.27675565493519 * S_NumWebPurchases
1326915   +          +    -0.31519058220182 * S_NumWebVisitsMonth
1326916   +          +    -0.46583825032896 * S_RFMstat  +    -0.00324569060855 *
1326917   +        S_RMntFrq  +     0.80762508263239 * S_Recency
1326918   +          +    -0.05609675878255 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.04958757890989 * S_AcceptedCmpTotal + -0.35438992757247 * S_Age 
+ -0.00591919176562 * S_Frq + -0.27415788425743 * S_Income + -0.03572236011846 * S_Kidhome + 
-0.13070406034722 * S_Mnt + 0.18129697551902 * S_MntFishProducts + 0.12543390103308 * 
S_MntFruits + -0.03846216245953 * S_MntGoldProds + 0.1535321444723 * S_MntMeatProducts + 
0.43228964267878 * S_MntSweetProducts + 0.04044476981059 * S_MntWines + 0.05282237039086 * 
S_MonthsAsCustomer + -0.22394386505524 * S_NumCatalogPurchases + -0.174147250062 * 
S_NumDealsPurchases + -0.22921682388864 * S_NumDistPurchases + 0.41526854684299 * 
S_NumStorePurchases + -0.27675565493519 * S_NumWebPurchases + -0.31519058220182 * 
S_NumWebVisitsMonth + -0.46583825032896 * S_RFMstat + -0.00324569060855 * S_RMntFrq + 
0.80762508263239 * S_Recency + -0.05609675878255 * S_Teenhome ;
1326919   +   H14  =     0.02595189997947 * S_AcceptedCmpTotal  +     0.06072450724422 *
1326920   +        S_Age  +     0.02299020571692 * S_Frq  +     -0.4565780535519 *
1326921   +        S_Income  +    -0.04788369327547 * S_Kidhome
1326922   +          +     0.02007551763294 * S_Mnt  +    -0.18053103558393 *
1326923   +        S_MntFishProducts  +    -0.09855244687933 * S_MntFruits
1326924   +          +    -0.15322502970206 * S_MntGoldProds  +    -0.66766356766896 *
1326925   +        S_MntMeatProducts  +     0.07957560397307 * S_MntSweetProducts
1326926   +          +     0.41567167308223 * S_MntWines  +     0.28903949823868 *
1326927   +        S_MonthsAsCustomer  +    -0.63829948878415 * S_NumCatalogPurchases
1326928   +          +    -0.46022430102423 * S_NumDealsPurchases
1326929   +          +     0.15831339342044 * S_NumDistPurchases
1326930   +          +     0.22480465173719 * S_NumStorePurchases
1326931   +          +     0.44798923484609 * S_NumWebPurchases
1326932   +          +    -0.71094702920004 * S_NumWebVisitsMonth
1326933   +          +     0.20620433566947 * S_RFMstat  +     -0.0106779556039 *
1326934   +        S_RMntFrq  +     0.79879111927102 * S_Recency
1326935   +          +      0.3056416743951 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.02595189997947 * S_AcceptedCmpTotal + 0.06072450724422 * S_Age + 
0.02299020571692 * S_Frq + -0.4565780535519 * S_Income + -0.04788369327547 * S_Kidhome + 
0.02007551763294 * S_Mnt + -0.18053103558393 * S_MntFishProducts + -0.09855244687933 * 
S_MntFruits + -0.15322502970206 * S_MntGoldProds + -0.66766356766896 * S_MntMeatProducts + 
0.07957560397307 * S_MntSweetProducts + 0.41567167308223 * S_MntWines + 0.28903949823868 * 
S_MonthsAsCustomer + -0.63829948878415 * S_NumCatalogPurchases + -0.46022430102423 * 
S_NumDealsPurchases + 0.15831339342044 * S_NumDistPurchases + 0.22480465173719 * 
S_NumStorePurchases + 0.44798923484609 * S_NumWebPurchases + -0.71094702920004 * 
S_NumWebVisitsMonth + 0.20620433566947 * S_RFMstat + -0.0106779556039 * S_RMntFrq + 
0.79879111927102 * S_Recency + 0.3056416743951 * S_Teenhome ;
1326936   +   H15  =    -0.13742649287176 * S_AcceptedCmpTotal  +     0.10145150511644 *
1326937   +        S_Age  +     -0.2837159248953 * S_Frq  +    -0.64706237411697 *
1326938   +        S_Income  +     0.53994304261534 * S_Kidhome
1326939   +          +    -0.09131017926694 * S_Mnt  +     0.02887823775959 *
1326940   +        S_MntFishProducts  +     0.08381294541966 * S_MntFruits
1326941   +          +     0.04873881168004 * S_MntGoldProds  +    -0.54973576310335 *
1326942   +        S_MntMeatProducts  +     0.05878621089895 * S_MntSweetProducts
1326943   +          +     0.21348875371185 * S_MntWines  +    -0.12051903605528 *
1326944   +        S_MonthsAsCustomer  +     -0.5945274016061 * S_NumCatalogPurchases
1326945   +          +     0.03650267472167 * S_NumDealsPurchases
1326946   +          +    -0.03322709524939 * S_NumDistPurchases
1326947   +          +     -0.0022226424472 * S_NumStorePurchases
1326948   +          +    -0.10131236740674 * S_NumWebPurchases
1326949   +          +    -0.69846819287714 * S_NumWebVisitsMonth
1326950   +          +    -0.13757300915933 * S_RFMstat  +     0.22262647555954 *
1326951   +        S_RMntFrq  +     0.92766392256433 * S_Recency
1326952   +          +      0.3625724229994 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.13742649287176 * S_AcceptedCmpTotal + 0.10145150511644 * S_Age 
+ -0.2837159248953 * S_Frq + -0.64706237411697 * S_Income + 0.53994304261534 * S_Kidhome + 
-0.09131017926694 * S_Mnt + 0.02887823775959 * S_MntFishProducts + 0.08381294541966 * 
S_MntFruits + 0.04873881168004 * S_MntGoldProds + -0.54973576310335 * S_MntMeatProducts + 
0.05878621089895 * S_MntSweetProducts + 0.21348875371185 * S_MntWines + -0.12051903605528 * 
S_MonthsAsCustomer + -0.5945274016061 * S_NumCatalogPurchases + 0.03650267472167 * 
S_NumDealsPurchases + -0.03322709524939 * S_NumDistPurchases + -0.0022226424472 * 
S_NumStorePurchases + -0.10131236740674 * S_NumWebPurchases + -0.69846819287714 * 
S_NumWebVisitsMonth + -0.13757300915933 * S_RFMstat + 0.22262647555954 * S_RMntFrq + 
0.92766392256433 * S_Recency + 0.3625724229994 * S_Teenhome ;
1326953   +   H16  =     -0.3666088571096 * S_AcceptedCmpTotal  +     0.07935193188365 *
1326954   +        S_Age  +    -0.42829147771921 * S_Frq  +    -0.42276511188403 *
1326955   +        S_Income  +    -0.52576099429582 * S_Kidhome
1326956   +          +    -0.25780820577456 * S_Mnt  +     0.15053849421837 *
1326957   +        S_MntFishProducts  +      0.0508038259278 * S_MntFruits
1326958   +          +    -0.20778953304026 * S_MntGoldProds  +    -0.19733433417367 *
1326959   +        S_MntMeatProducts  +    -0.19779369509324 * S_MntSweetProducts
1326960   +          +     -0.0614254708905 * S_MntWines  +    -0.24324114549599 *
1326961   +        S_MonthsAsCustomer  +    -0.51401967366294 * S_NumCatalogPurchases
1326962   +          +    -0.50209914729324 * S_NumDealsPurchases
1326963   +          +    -0.46217244513696 * S_NumDistPurchases
1326964   +          +      0.1832648560248 * S_NumStorePurchases
1326965   +          +     0.02866153257072 * S_NumWebPurchases
1326966   +          +    -0.21659886944483 * S_NumWebVisitsMonth
1326967   +          +    -0.05645651757643 * S_RFMstat  +    -0.09976672213368 *
1326968   +        S_RMntFrq  +      0.0483484608321 * S_Recency
1326969   +          +    -0.11406727037802 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.3666088571096 * S_AcceptedCmpTotal + 0.07935193188365 * S_Age + 
-0.42829147771921 * S_Frq + -0.42276511188403 * S_Income + -0.52576099429582 * S_Kidhome + 
-0.25780820577456 * S_Mnt + 0.15053849421837 * S_MntFishProducts + 0.0508038259278 * 
S_MntFruits + -0.20778953304026 * S_MntGoldProds + -0.19733433417367 * S_MntMeatProducts + 
-0.19779369509324 * S_MntSweetProducts + -0.0614254708905 * S_MntWines + -0.24324114549599 * 
S_MonthsAsCustomer + -0.51401967366294 * S_NumCatalogPurchases + -0.50209914729324 * 
S_NumDealsPurchases + -0.46217244513696 * S_NumDistPurchases + 0.1832648560248 * 
S_NumStorePurchases + 0.02866153257072 * S_NumWebPurchases + -0.21659886944483 * 
S_NumWebVisitsMonth + -0.05645651757643 * S_RFMstat + -0.09976672213368 * S_RMntFrq + 
0.0483484608321 * S_Recency + -0.11406727037802 * S_Teenhome ;
1326970   +   H11  = H11  +     -0.7601248031008 * AcceptedCmp10
1326971   +          +    -0.35671966174677 * AcceptedCmp20  +     -0.3945561586942 *
1326972   +        AcceptedCmp30  +    -0.54583010778346 * AcceptedCmp40
1326973   +          +    -0.38674738859251 * AcceptedCmp50  +    -0.14831343728217 *
1326974   +        Complain0  +     0.13245455648369 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.7601248031008 * AcceptedCmp10 + -0.35671966174677 * 
AcceptedCmp20 + -0.3945561586942 * AcceptedCmp30 + -0.54583010778346 * AcceptedCmp40 + 
-0.38674738859251 * AcceptedCmp50 + -0.14831343728217 * Complain0 + 0.13245455648369 * 
HigherEducationBinary0 ;
1326975   +   H12  = H12  +    -0.03783139750322 * AcceptedCmp10
1326976   +          +      0.0569762433011 * AcceptedCmp20  +    -0.21834950194396 *
1326977   +        AcceptedCmp30  +    -0.14978730026923 * AcceptedCmp40
1326978   +          +    -0.27826227141524 * AcceptedCmp50  +     0.05227448052769 *
1326979   +        Complain0  +     0.00441210978534 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.03783139750322 * AcceptedCmp10 + 0.0569762433011 * 
AcceptedCmp20 + -0.21834950194396 * AcceptedCmp30 + -0.14978730026923 * AcceptedCmp40 + 
-0.27826227141524 * AcceptedCmp50 + 0.05227448052769 * Complain0 + 0.00441210978534 * 
HigherEducationBinary0 ;
1326980   +   H13  = H13  +     0.20786972077091 * AcceptedCmp10
1326981   +          +     0.06123497721778 * AcceptedCmp20  +     0.21326165753825 *
1326982   +        AcceptedCmp30  +    -0.17148613450886 * AcceptedCmp40
1326983   +          +     0.05564403918936 * AcceptedCmp50  +     0.07876117708017 *
1326984   +        Complain0  +     0.40703714529737 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.20786972077091 * AcceptedCmp10 + 0.06123497721778 * 
AcceptedCmp20 + 0.21326165753825 * AcceptedCmp30 + -0.17148613450886 * AcceptedCmp40 + 
0.05564403918936 * AcceptedCmp50 + 0.07876117708017 * Complain0 + 0.40703714529737 * 
HigherEducationBinary0 ;
1326985   +   H14  = H14  +    -0.22288812741222 * AcceptedCmp10
1326986   +          +     0.09082443183915 * AcceptedCmp20  +     0.22381340075277 *
1326987   +        AcceptedCmp30  +    -0.33987044425695 * AcceptedCmp40
1326988   +          +     0.23335102436732 * AcceptedCmp50  +    -0.04181636989839 *
1326989   +        Complain0  +     0.07120379166339 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.22288812741222 * AcceptedCmp10 + 0.09082443183915 * 
AcceptedCmp20 + 0.22381340075277 * AcceptedCmp30 + -0.33987044425695 * AcceptedCmp40 + 
0.23335102436732 * AcceptedCmp50 + -0.04181636989839 * Complain0 + 0.07120379166339 * 
HigherEducationBinary0 ;
1326990   +   H15  = H15  +     0.42056230102758 * AcceptedCmp10
1326991   +          +     0.53764215961118 * AcceptedCmp20  +     0.37023411618924 *
1326992   +        AcceptedCmp30  +     0.42138560084911 * AcceptedCmp40
1326993   +          +      0.3085748174994 * AcceptedCmp50  +     0.22539323627952 *
1326994   +        Complain0  +    -0.21244663243009 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.42056230102758 * AcceptedCmp10 + 0.53764215961118 * 
AcceptedCmp20 + 0.37023411618924 * AcceptedCmp30 + 0.42138560084911 * AcceptedCmp40 + 
0.3085748174994 * AcceptedCmp50 + 0.22539323627952 * Complain0 + -0.21244663243009 * 
HigherEducationBinary0 ;
1326995   +   H16  = H16  +     0.18963464867682 * AcceptedCmp10
1326996   +          +     0.03787019267792 * AcceptedCmp20  +     0.08009211858272 *
1326997   +        AcceptedCmp30  +    -0.04360170073177 * AcceptedCmp40
1326998   +          +     0.21168040934214 * AcceptedCmp50  +     0.10568727450323 *
1326999   +        Complain0  +     0.53148657263966 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.18963464867682 * AcceptedCmp10 + 0.03787019267792 * 
AcceptedCmp20 + 0.08009211858272 * AcceptedCmp30 + -0.04360170073177 * AcceptedCmp40 + 
0.21168040934214 * AcceptedCmp50 + 0.10568727450323 * Complain0 + 0.53148657263966 * 
HigherEducationBinary0 ;
1327000   +   H11  = H11  +    -0.11496374901156 * Education2n_Cycle
1327001   +          +    -0.06656230963069 * EducationBasic  +     0.07997148658457 *
1327002   +        EducationGraduation  +     0.01554466662723 * EducationMaster
1327003   +          +     0.13815069071511 * Marital_StatusDivorced
1327004   +          +      0.0732913060929 * Marital_StatusMarried
1327005   +          +    -0.22858418468746 * Marital_StatusSingle
1327006   +          +     0.01116332924316 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.11496374901156 * Education2n_Cycle + -0.06656230963069 * 
EducationBasic + 0.07997148658457 * EducationGraduation + 0.01554466662723 * EducationMaster + 
0.13815069071511 * Marital_StatusDivorced + 0.0732913060929 * Marital_StatusMarried + 
-0.22858418468746 * Marital_StatusSingle + 0.01116332924316 * Marital_StatusTogether ;
1327007   +   H12  = H12  +     0.03901959784889 * Education2n_Cycle
1327008   +          +    -0.26280012394443 * EducationBasic  +     0.21504809933489 *
1327009   +        EducationGraduation  +    -0.06848191068145 * EducationMaster
1327010   +          +     0.32909808396509 * Marital_StatusDivorced
1327011   +          +    -0.50160173579004 * Marital_StatusMarried
1327012   +          +     0.57207102211224 * Marital_StatusSingle
1327013   +          +    -0.44360345973922 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.03901959784889 * Education2n_Cycle + -0.26280012394443 * 
EducationBasic + 0.21504809933489 * EducationGraduation + -0.06848191068145 * EducationMaster 
+ 0.32909808396509 * Marital_StatusDivorced + -0.50160173579004 * Marital_StatusMarried + 
0.57207102211224 * Marital_StatusSingle + -0.44360345973922 * Marital_StatusTogether ;
1327014   +   H13  = H13  +     0.01150876366725 * Education2n_Cycle
1327015   +          +     0.23107711255032 * EducationBasic  +    -0.21134640338561 *
1327016   +        EducationGraduation  +    -0.06661306485324 * EducationMaster
1327017   +          +    -0.07154493730107 * Marital_StatusDivorced
1327018   +          +     0.29126100051603 * Marital_StatusMarried
1327019   +          +    -0.06936325857004 * Marital_StatusSingle
1327020   +          +     0.16456919209683 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.01150876366725 * Education2n_Cycle + 0.23107711255032 * 
EducationBasic + -0.21134640338561 * EducationGraduation + -0.06661306485324 * EducationMaster 
+ -0.07154493730107 * Marital_StatusDivorced + 0.29126100051603 * Marital_StatusMarried + 
-0.06936325857004 * Marital_StatusSingle + 0.16456919209683 * Marital_StatusTogether ;
1327021   +   H14  = H14  +    -0.19946033710291 * Education2n_Cycle
1327022   +          +    -0.01034120145864 * EducationBasic  +     0.13668197947218 *
1327023   +        EducationGraduation  +     0.00467151758983 * EducationMaster
1327024   +          +    -0.05004640872388 * Marital_StatusDivorced
1327025   +          +     0.22197974032974 * Marital_StatusMarried
1327026   +          +    -0.33931504637453 * Marital_StatusSingle
1327027   +          +     0.52390006042597 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.19946033710291 * Education2n_Cycle + -0.01034120145864 * 
EducationBasic + 0.13668197947218 * EducationGraduation + 0.00467151758983 * EducationMaster + 
-0.05004640872388 * Marital_StatusDivorced + 0.22197974032974 * Marital_StatusMarried + 
-0.33931504637453 * Marital_StatusSingle + 0.52390006042597 * Marital_StatusTogether ;
1327028   +   H15  = H15  +      0.0257657569906 * Education2n_Cycle
1327029   +          +    -0.41272017245298 * EducationBasic  +     0.19220220110183 *
1327030   +        EducationGraduation  +     0.36479872943723 * EducationMaster
1327031   +          +    -0.07748874669478 * Marital_StatusDivorced
1327032   +          +     1.05442281159109 * Marital_StatusMarried
1327033   +          +    -0.67190984038867 * Marital_StatusSingle
1327034   +          +     0.60757498745412 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.0257657569906 * Education2n_Cycle + -0.41272017245298 * 
EducationBasic + 0.19220220110183 * EducationGraduation + 0.36479872943723 * EducationMaster + 
-0.07748874669478 * Marital_StatusDivorced + 1.05442281159109 * Marital_StatusMarried + 
-0.67190984038867 * Marital_StatusSingle + 0.60757498745412 * Marital_StatusTogether ;
1327035   +   H16  = H16  +    -0.17850020716849 * Education2n_Cycle
1327036   +          +    -0.22658689327697 * EducationBasic  +    -0.12677992318537 *
1327037   +        EducationGraduation  +    -0.09350942672909 * EducationMaster
1327038   +          +    -0.20478208715114 * Marital_StatusDivorced
1327039   +          +    -0.40186383707642 * Marital_StatusMarried
1327040   +          +     0.43474841662774 * Marital_StatusSingle
1327041   +          +    -0.24048672237031 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.17850020716849 * Education2n_Cycle + -0.22658689327697 * 
EducationBasic + -0.12677992318537 * EducationGraduation + -0.09350942672909 * EducationMaster 
+ -0.20478208715114 * Marital_StatusDivorced + -0.40186383707642 * Marital_StatusMarried + 
0.43474841662774 * Marital_StatusSingle + -0.24048672237031 * Marital_StatusTogether ;
1327042   +   H11  =    -0.02531559692589 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.02531559692589 + H11 ;
1327043   +   H12  =     0.37210575430377 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.37210575430377 + H12 ;
1327044   +   H13  =    -1.38678195714945 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.38678195714945 + H13 ;
1327045   +   H14  =      1.3896422684634 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.3896422684634 + H14 ;
1327046   +   H15  =     0.90118149151601 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.90118149151601 + H15 ;
1327047   +   H16  =    -2.10458510177045 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -2.10458510177045 + H16 ;
1327048   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1327049   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1327050   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1327051   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1327052   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1327053   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1327054   +END;
MPRINT(EM_DIAGRAM):   END;
1327055   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1327056   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1327057   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1327058   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1327059   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1327060   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1327061   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1327062   +END;
MPRINT(EM_DIAGRAM):   END;
1327063   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1327064   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1327065   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1327066   +
1327067   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1327068   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1327069   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1327070   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1327071   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1327072   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1327073   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1327074   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1327075   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1327076   +end;
MPRINT(EM_DIAGRAM):   end;
1327077   +else do;
MPRINT(EM_DIAGRAM):   else do;
1327078   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1327079   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1327080   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1327081   +   end;
MPRINT(EM_DIAGRAM):   end;
1327082   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1327083   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1327084   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1327085   +   end;
MPRINT(EM_DIAGRAM):   end;
1327086   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1327087   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1327088   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1327089   +   end;
MPRINT(EM_DIAGRAM):   end;
1327090   +end;
MPRINT(EM_DIAGRAM):   end;
1327091   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1327092   +   P_DepVar1  =     1.87884051128714 * H11  +     2.50729999746925 * H12
1327093   +          +    -1.75107820321125 * H13  +    -1.79455762110025 * H14
1327094   +          +    -2.94929305100625 * H15  +    -2.02736184847322 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.87884051128714 * H11 + 2.50729999746925 * H12 + 
-1.75107820321125 * H13 + -1.79455762110025 * H14 + -2.94929305100625 * H15 + 
-2.02736184847322 * H16 ;
1327095   +   P_DepVar1  =    -2.13374807262205 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.13374807262205 + P_DepVar1 ;
1327096   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1327097   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1327098   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1327099   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1327100   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1327101   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1327102   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1327103   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1327104   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1327105   +END;
MPRINT(EM_DIAGRAM):   END;
1327106   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1327107   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1327108   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1327109   +END;
MPRINT(EM_DIAGRAM):   END;
1327110   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1327111   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1327112   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1327113   +END;
MPRINT(EM_DIAGRAM):   END;
1327114   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1327115   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1327116   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1327117   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1327118   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1327119   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1327120   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1327121   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1327122   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1327123   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1327124   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1327125   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1327126   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1327127   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1327128   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1327129   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1327130   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1327131   +END;
MPRINT(EM_DIAGRAM):   END;
1327132   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1327133   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1327134   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1327135   +drop
1327136   +H11
1327137   +H12
1327138   +H13
1327139   +H14
1327140   +H15
1327141   +H16
1327142   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1327143   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1327144   +* Renaming variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural9;
1327145   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1327146   +* Renaming Posterior variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural9;
1327147   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1327148   +drop Neural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar1;
1327149   +Neural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar1 = P_DepVar1;
1327150   +drop Neural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar0;
1327151   +Neural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar0 = P_DepVar0;
1327152   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1327153   +* Renaming _WARN_ variable for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural9;
1327154   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1327155   +length Neural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural9_WARN_ $4;
1327156   +drop Neural9_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural9_WARN_;
1327157   +Neural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural9_WARN_ = _WARN_;
1327158   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1327159   +* Ensmbl: Scoring Code of model 10 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl: Scoring Code of model 10 of 10;
1327160   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1327161   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1327162   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1327163   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1327164   +* NODE: Neural10;
MPRINT(EM_DIAGRAM):   * NODE: Neural10;
1327165   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1327166   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1327167   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1327168   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1327169   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1327170   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1327171   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1327172   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1327173   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1327174   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1327175   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1327176   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1327177   +LENGTH _WARN_ $4
1327178   +      F_DepVar  $ 12
1327179   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1327180   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1327181   +
1327182   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1327183   +
1327184   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1327185   +
1327186   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1327187   +
1327188   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1327189   +
1327190   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1327191   +
1327192   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1327193   +
1327194   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1327195   +
1327196   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1327197   +
1327198   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1327199   +
1327200   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1327201   +
1327202   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1327203   +
1327204   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1327205   +
1327206   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1327207   +
1327208   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1327209   +
1327210   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1327211   +
1327212   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1327213   +
1327214   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1327215   +
1327216   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1327217   +
1327218   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1327219   +
1327220   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1327221   +
1327222   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1327223   +
1327224   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1327225   +
1327226   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1327227   +
1327228   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1327229   +
1327230   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1327231   +
1327232   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1327233   +
1327234   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1327235   +
1327236   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1327237   +
1327238   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1327239   +
1327240   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1327241   +
1327242   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1327243   +
1327244   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1327245   +
1327246   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1327247   +
1327248   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1327249   +
1327250   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1327251   +
1327252   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1327253   +
1327254   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1327255   +
1327256   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1327257   +
1327258   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1327259   +
1327260   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1327261   +
1327262   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1327263   +
1327264   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1327265   +
1327266   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1327267   +
1327268   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
1327269   +
1327270   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1327271   +
1327272   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1327273   +
1327274   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1327275   +
1327276   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1327277   +
1327278   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1327279   +
1327280   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1327281   +
1327282   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1327283   +
1327284   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1327285   +
1327286   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1327287   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1327288   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1327289   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1327290   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1327291   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1327292   +end;
MPRINT(EM_DIAGRAM):   end;
1327293   +else do;
MPRINT(EM_DIAGRAM):   else do;
1327294   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1327295   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1327296   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1327297   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1327298   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1327299   +   end;
MPRINT(EM_DIAGRAM):   end;
1327300   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1327301   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1327302   +   end;
MPRINT(EM_DIAGRAM):   end;
1327303   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1327304   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1327305   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1327306   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1327307   +   end;
MPRINT(EM_DIAGRAM):   end;
1327308   +end;
MPRINT(EM_DIAGRAM):   end;
1327309   +
1327310   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1327311   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1327312   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1327313   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1327314   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1327315   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1327316   +end;
MPRINT(EM_DIAGRAM):   end;
1327317   +else do;
MPRINT(EM_DIAGRAM):   else do;
1327318   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1327319   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1327320   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1327321   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1327322   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1327323   +   end;
MPRINT(EM_DIAGRAM):   end;
1327324   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1327325   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1327326   +   end;
MPRINT(EM_DIAGRAM):   end;
1327327   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1327328   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1327329   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1327330   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1327331   +   end;
MPRINT(EM_DIAGRAM):   end;
1327332   +end;
MPRINT(EM_DIAGRAM):   end;
1327333   +
1327334   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1327335   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1327336   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1327337   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1327338   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1327339   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1327340   +end;
MPRINT(EM_DIAGRAM):   end;
1327341   +else do;
MPRINT(EM_DIAGRAM):   else do;
1327342   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1327343   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1327344   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1327345   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1327346   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1327347   +   end;
MPRINT(EM_DIAGRAM):   end;
1327348   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1327349   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1327350   +   end;
MPRINT(EM_DIAGRAM):   end;
1327351   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1327352   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1327353   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1327354   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1327355   +   end;
MPRINT(EM_DIAGRAM):   end;
1327356   +end;
MPRINT(EM_DIAGRAM):   end;
1327357   +
1327358   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1327359   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1327360   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1327361   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1327362   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1327363   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1327364   +end;
MPRINT(EM_DIAGRAM):   end;
1327365   +else do;
MPRINT(EM_DIAGRAM):   else do;
1327366   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1327367   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1327368   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1327369   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1327370   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1327371   +   end;
MPRINT(EM_DIAGRAM):   end;
1327372   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1327373   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1327374   +   end;
MPRINT(EM_DIAGRAM):   end;
1327375   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1327376   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1327377   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1327378   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1327379   +   end;
MPRINT(EM_DIAGRAM):   end;
1327380   +end;
MPRINT(EM_DIAGRAM):   end;
1327381   +
1327382   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1327383   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1327384   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1327385   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1327386   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1327387   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1327388   +end;
MPRINT(EM_DIAGRAM):   end;
1327389   +else do;
MPRINT(EM_DIAGRAM):   else do;
1327390   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1327391   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1327392   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1327393   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1327394   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1327395   +   end;
MPRINT(EM_DIAGRAM):   end;
1327396   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1327397   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1327398   +   end;
MPRINT(EM_DIAGRAM):   end;
1327399   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1327400   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1327401   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1327402   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1327403   +   end;
MPRINT(EM_DIAGRAM):   end;
1327404   +end;
MPRINT(EM_DIAGRAM):   end;
1327405   +
1327406   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1327407   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1327408   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1327409   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1327410   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1327411   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1327412   +end;
MPRINT(EM_DIAGRAM):   end;
1327413   +else do;
MPRINT(EM_DIAGRAM):   else do;
1327414   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1327415   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1327416   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1327417   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1327418   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1327419   +   end;
MPRINT(EM_DIAGRAM):   end;
1327420   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1327421   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1327422   +   end;
MPRINT(EM_DIAGRAM):   end;
1327423   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1327424   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1327425   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1327426   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1327427   +   end;
MPRINT(EM_DIAGRAM):   end;
1327428   +end;
MPRINT(EM_DIAGRAM):   end;
1327429   +
1327430   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1327431   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1327432   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1327433   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1327434   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1327435   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1327436   +end;
MPRINT(EM_DIAGRAM):   end;
1327437   +else do;
MPRINT(EM_DIAGRAM):   else do;
1327438   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1327439   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1327440   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1327441   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1327442   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1327443   +   end;
MPRINT(EM_DIAGRAM):   end;
1327444   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1327445   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1327446   +   end;
MPRINT(EM_DIAGRAM):   end;
1327447   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1327448   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1327449   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1327450   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1327451   +   end;
MPRINT(EM_DIAGRAM):   end;
1327452   +end;
MPRINT(EM_DIAGRAM):   end;
1327453   +
1327454   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1327455   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1327456   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1327457   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1327458   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1327459   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1327460   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1327461   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1327462   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1327463   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1327464   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1327465   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1327466   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1327467   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1327468   +end;
MPRINT(EM_DIAGRAM):   end;
1327469   +else do;
MPRINT(EM_DIAGRAM):   else do;
1327470   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1327471   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1327472   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1327473   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1327474   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1327475   +   end;
MPRINT(EM_DIAGRAM):   end;
1327476   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1327477   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1327478   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1327479   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1327480   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1327481   +   end;
MPRINT(EM_DIAGRAM):   end;
1327482   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1327483   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1327484   +   end;
MPRINT(EM_DIAGRAM):   end;
1327485   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1327486   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1327487   +   end;
MPRINT(EM_DIAGRAM):   end;
1327488   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1327489   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1327490   +   end;
MPRINT(EM_DIAGRAM):   end;
1327491   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1327492   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1327493   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1327494   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1327495   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1327496   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1327497   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1327498   +   end;
MPRINT(EM_DIAGRAM):   end;
1327499   +end;
MPRINT(EM_DIAGRAM):   end;
1327500   +
1327501   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1327502   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1327503   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1327504   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1327505   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1327506   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1327507   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1327508   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1327509   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1327510   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1327511   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1327512   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1327513   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1327514   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1327515   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1327516   +end;
MPRINT(EM_DIAGRAM):   end;
1327517   +else do;
MPRINT(EM_DIAGRAM):   else do;
1327518   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1327519   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1327520   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1327521   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1327522   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1327523   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1327524   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1327525   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1327526   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1327527   +         end;
MPRINT(EM_DIAGRAM):   end;
1327528   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1327529   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1327530   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1327531   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1327532   +            end;
MPRINT(EM_DIAGRAM):   end;
1327533   +         end;
MPRINT(EM_DIAGRAM):   end;
1327534   +      end;
MPRINT(EM_DIAGRAM):   end;
1327535   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1327536   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1327537   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1327538   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1327539   +         end;
MPRINT(EM_DIAGRAM):   end;
1327540   +      end;
MPRINT(EM_DIAGRAM):   end;
1327541   +   end;
MPRINT(EM_DIAGRAM):   end;
1327542   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1327543   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1327544   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1327545   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1327546   +      end;
MPRINT(EM_DIAGRAM):   end;
1327547   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1327548   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1327549   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1327550   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1327551   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1327552   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1327553   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1327554   +         end;
MPRINT(EM_DIAGRAM):   end;
1327555   +      end;
MPRINT(EM_DIAGRAM):   end;
1327556   +   end;
MPRINT(EM_DIAGRAM):   end;
1327557   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1327558   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1327559   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1327560   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1327561   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1327562   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1327563   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1327564   +   end;
MPRINT(EM_DIAGRAM):   end;
1327565   +end;
MPRINT(EM_DIAGRAM):   end;
1327566   +
1327567   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1327568   +*** Checking missing input Interval
1327569   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1327570   +
1327571   +IF NMISS(
1327572   +   AcceptedCmpTotal ,
1327573   +   Age ,
1327574   +   Frq ,
1327575   +   Income ,
1327576   +   Kidhome ,
1327577   +   Mnt ,
1327578   +   MntFishProducts ,
1327579   +   MntFruits ,
1327580   +   MntGoldProds ,
1327581   +   MntMeatProducts ,
1327582   +   MntSweetProducts ,
1327583   +   MntWines ,
1327584   +   MonthsAsCustomer ,
1327585   +   NumCatalogPurchases ,
1327586   +   NumDealsPurchases ,
1327587   +   NumDistPurchases ,
1327588   +   NumStorePurchases ,
1327589   +   NumWebPurchases ,
1327590   +   NumWebVisitsMonth ,
1327591   +   RFMstat ,
1327592   +   RMntFrq ,
1327593   +   Recency ,
1327594   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1327595   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1327596   +
1327597   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1327598   +END;
MPRINT(EM_DIAGRAM):   END;
1327599   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1327600   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1327601   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1327602   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1327603   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1327604   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1327605   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1327606   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1327607   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1327608   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1327609   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1327610   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1327611   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1327612   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1327613   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1327614   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1327615   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1327616   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1327617   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1327618   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1327619   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1327620   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1327621   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1327622   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1327623   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1327624   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1327625   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1327626   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1327627   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1327628   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1327629   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1327630   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1327631   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1327632   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1327633   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1327634   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1327635   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1327636   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1327637   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1327638   +END;
MPRINT(EM_DIAGRAM):   END;
1327639   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1327640   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1327641   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1327642   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1327643   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1327644   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1327645   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1327646   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1327647   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1327648   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1327649   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1327650   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1327651   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1327652   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1327653   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1327654   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1327655   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1327656   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1327657   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1327658   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1327659   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1327660   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1327661   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1327662   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1327663   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1327664   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1327665   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1327666   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1327667   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1327668   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1327669   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1327670   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1327671   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1327672   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1327673   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1327674   +   ELSE S_NumCatalogPurchases
1327675   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1327676   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1327677   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1327678   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1327679   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1327680   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1327681   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1327682   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1327683   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1327684   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1327685   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1327686   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1327687   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1327688   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1327689   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1327690   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1327691   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1327692   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1327693   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1327694   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1327695   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1327696   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1327697   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1327698   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1327699   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1327700   +END;
MPRINT(EM_DIAGRAM):   END;
1327701   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1327702   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1327703   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1327704   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1327705   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1327706   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1327707   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1327708   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1327709   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1327710   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1327711   +   H11  =     -0.5578105652985 * S_AcceptedCmpTotal  +    -0.23241971580203 *
1327712   +        S_Age  +     0.28102175129839 * S_Frq  +    -0.14177438746231 *
1327713   +        S_Income  +    -0.45967008908227 * S_Kidhome
1327714   +          +     0.02794787691339 * S_Mnt  +     0.39828117417224 *
1327715   +        S_MntFishProducts  +    -0.05411429665612 * S_MntFruits
1327716   +          +     -0.2217613503816 * S_MntGoldProds  +    -1.14707919351018 *
1327717   +        S_MntMeatProducts  +     0.02010309795345 * S_MntSweetProducts
1327718   +          +     0.39487005596698 * S_MntWines  +     0.08057978219112 *
1327719   +        S_MonthsAsCustomer  +    -0.52508994350253 * S_NumCatalogPurchases
1327720   +          +    -0.23353175442713 * S_NumDealsPurchases
1327721   +          +     0.18635522192442 * S_NumDistPurchases
1327722   +          +     0.37209457890956 * S_NumStorePurchases
1327723   +          +     0.25018232304823 * S_NumWebPurchases
1327724   +          +    -0.12167684141831 * S_NumWebVisitsMonth
1327725   +          +    -0.26994136429184 * S_RFMstat  +    -0.15457821756538 *
1327726   +        S_RMntFrq  +      0.3771094487511 * S_Recency
1327727   +          +      0.3944445531753 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.5578105652985 * S_AcceptedCmpTotal + -0.23241971580203 * S_Age 
+ 0.28102175129839 * S_Frq + -0.14177438746231 * S_Income + -0.45967008908227 * S_Kidhome + 
0.02794787691339 * S_Mnt + 0.39828117417224 * S_MntFishProducts + -0.05411429665612 * 
S_MntFruits + -0.2217613503816 * S_MntGoldProds + -1.14707919351018 * S_MntMeatProducts + 
0.02010309795345 * S_MntSweetProducts + 0.39487005596698 * S_MntWines + 0.08057978219112 * 
S_MonthsAsCustomer + -0.52508994350253 * S_NumCatalogPurchases + -0.23353175442713 * 
S_NumDealsPurchases + 0.18635522192442 * S_NumDistPurchases + 0.37209457890956 * 
S_NumStorePurchases + 0.25018232304823 * S_NumWebPurchases + -0.12167684141831 * 
S_NumWebVisitsMonth + -0.26994136429184 * S_RFMstat + -0.15457821756538 * S_RMntFrq + 
0.3771094487511 * S_Recency + 0.3944445531753 * S_Teenhome ;
1327728   +   H12  =    -0.33593118949604 * S_AcceptedCmpTotal  +     0.13223006727754 *
1327729   +        S_Age  +     0.22535213074211 * S_Frq  +    -0.12962185963332 *
1327730   +        S_Income  +     0.23329613045589 * S_Kidhome
1327731   +          +     0.49569557196329 * S_Mnt  +     0.06134353482875 *
1327732   +        S_MntFishProducts  +     0.04198696278324 * S_MntFruits
1327733   +          +    -0.23606182835876 * S_MntGoldProds  +    -0.86703877719801 *
1327734   +        S_MntMeatProducts  +     0.13899494079616 * S_MntSweetProducts
1327735   +          +     0.64295088795338 * S_MntWines  +     0.23885718884975 *
1327736   +        S_MonthsAsCustomer  +    -0.13805721887365 * S_NumCatalogPurchases
1327737   +          +    -0.09699498622435 * S_NumDealsPurchases
1327738   +          +     0.40364070798795 * S_NumDistPurchases
1327739   +          +      0.2162579072164 * S_NumStorePurchases
1327740   +          +     0.26248410135079 * S_NumWebPurchases
1327741   +          +    -0.59275827872509 * S_NumWebVisitsMonth
1327742   +          +    -0.14095167046806 * S_RFMstat  +     0.33659399551436 *
1327743   +        S_RMntFrq  +     0.34734104517337 * S_Recency
1327744   +          +     0.20490660913172 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.33593118949604 * S_AcceptedCmpTotal + 0.13223006727754 * S_Age 
+ 0.22535213074211 * S_Frq + -0.12962185963332 * S_Income + 0.23329613045589 * S_Kidhome + 
0.49569557196329 * S_Mnt + 0.06134353482875 * S_MntFishProducts + 0.04198696278324 * 
S_MntFruits + -0.23606182835876 * S_MntGoldProds + -0.86703877719801 * S_MntMeatProducts + 
0.13899494079616 * S_MntSweetProducts + 0.64295088795338 * S_MntWines + 0.23885718884975 * 
S_MonthsAsCustomer + -0.13805721887365 * S_NumCatalogPurchases + -0.09699498622435 * 
S_NumDealsPurchases + 0.40364070798795 * S_NumDistPurchases + 0.2162579072164 * 
S_NumStorePurchases + 0.26248410135079 * S_NumWebPurchases + -0.59275827872509 * 
S_NumWebVisitsMonth + -0.14095167046806 * S_RFMstat + 0.33659399551436 * S_RMntFrq + 
0.34734104517337 * S_Recency + 0.20490660913172 * S_Teenhome ;
1327745   +   H13  =    -0.62678716035049 * S_AcceptedCmpTotal  +    -0.10291990746359 *
1327746   +        S_Age  +     0.05177116030679 * S_Frq  +    -0.22841348118599 *
1327747   +        S_Income  +     0.20139862021528 * S_Kidhome
1327748   +          +    -0.14983527202624 * S_Mnt  +    -0.48769617499769 *
1327749   +        S_MntFishProducts  +    -0.14107770157183 * S_MntFruits
1327750   +          +     0.10521088971296 * S_MntGoldProds  +     0.32521316479212 *
1327751   +        S_MntMeatProducts  +    -0.31623965627102 * S_MntSweetProducts
1327752   +          +     0.04140559575505 * S_MntWines  +     0.04461152334998 *
1327753   +        S_MonthsAsCustomer  +     0.02235616550218 * S_NumCatalogPurchases
1327754   +          +     0.09066191700879 * S_NumDealsPurchases
1327755   +          +    -0.05769000978222 * S_NumDistPurchases
1327756   +          +    -0.10089591692167 * S_NumStorePurchases
1327757   +          +    -0.00088654116561 * S_NumWebPurchases
1327758   +          +    -0.03166195000043 * S_NumWebVisitsMonth
1327759   +          +    -0.19039498348905 * S_RFMstat  +    -0.07321662360003 *
1327760   +        S_RMntFrq  +    -0.10121013357627 * S_Recency
1327761   +          +     0.07832397278234 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.62678716035049 * S_AcceptedCmpTotal + -0.10291990746359 * S_Age 
+ 0.05177116030679 * S_Frq + -0.22841348118599 * S_Income + 0.20139862021528 * S_Kidhome + 
-0.14983527202624 * S_Mnt + -0.48769617499769 * S_MntFishProducts + -0.14107770157183 * 
S_MntFruits + 0.10521088971296 * S_MntGoldProds + 0.32521316479212 * S_MntMeatProducts + 
-0.31623965627102 * S_MntSweetProducts + 0.04140559575505 * S_MntWines + 0.04461152334998 * 
S_MonthsAsCustomer + 0.02235616550218 * S_NumCatalogPurchases + 0.09066191700879 * 
S_NumDealsPurchases + -0.05769000978222 * S_NumDistPurchases + -0.10089591692167 * 
S_NumStorePurchases + -0.00088654116561 * S_NumWebPurchases + -0.03166195000043 * 
S_NumWebVisitsMonth + -0.19039498348905 * S_RFMstat + -0.07321662360003 * S_RMntFrq + 
-0.10121013357627 * S_Recency + 0.07832397278234 * S_Teenhome ;
1327762   +   H14  =     0.58751331473911 * S_AcceptedCmpTotal  +     0.04644967312033 *
1327763   +        S_Age  +      0.2396819202713 * S_Frq  +     0.09956520306725 *
1327764   +        S_Income  +      0.2502648333687 * S_Kidhome
1327765   +          +     0.28121314160041 * S_Mnt  +    -0.20485047973809 *
1327766   +        S_MntFishProducts  +    -0.01460488281711 * S_MntFruits
1327767   +          +    -0.03288844720922 * S_MntGoldProds  +     1.97837236467115 *
1327768   +        S_MntMeatProducts  +     0.28301480917504 * S_MntSweetProducts
1327769   +          +     -0.6936431037386 * S_MntWines  +    -0.00532955644826 *
1327770   +        S_MonthsAsCustomer  +     1.76299586599682 * S_NumCatalogPurchases
1327771   +          +     0.83424444661619 * S_NumDealsPurchases
1327772   +          +     0.31333214543205 * S_NumDistPurchases
1327773   +          +    -0.61732647242019 * S_NumStorePurchases
1327774   +          +    -1.01955156895052 * S_NumWebPurchases
1327775   +          +     0.13017609997428 * S_NumWebVisitsMonth
1327776   +          +     0.35931716325651 * S_RFMstat  +    -0.00463731332856 *
1327777   +        S_RMntFrq  +    -0.38584375735163 * S_Recency
1327778   +          +    -0.00542085930429 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.58751331473911 * S_AcceptedCmpTotal + 0.04644967312033 * S_Age + 
0.2396819202713 * S_Frq + 0.09956520306725 * S_Income + 0.2502648333687 * S_Kidhome + 
0.28121314160041 * S_Mnt + -0.20485047973809 * S_MntFishProducts + -0.01460488281711 * 
S_MntFruits + -0.03288844720922 * S_MntGoldProds + 1.97837236467115 * S_MntMeatProducts + 
0.28301480917504 * S_MntSweetProducts + -0.6936431037386 * S_MntWines + -0.00532955644826 * 
S_MonthsAsCustomer + 1.76299586599682 * S_NumCatalogPurchases + 0.83424444661619 * 
S_NumDealsPurchases + 0.31333214543205 * S_NumDistPurchases + -0.61732647242019 * 
S_NumStorePurchases + -1.01955156895052 * S_NumWebPurchases + 0.13017609997428 * 
S_NumWebVisitsMonth + 0.35931716325651 * S_RFMstat + -0.00463731332856 * S_RMntFrq + 
-0.38584375735163 * S_Recency + -0.00542085930429 * S_Teenhome ;
1327779   +   H15  =     0.53146760457913 * S_AcceptedCmpTotal  +    -0.03810411031475 *
1327780   +        S_Age  +    -0.18043958502932 * S_Frq  +     0.69595178597879 *
1327781   +        S_Income  +    -0.70952256145726 * S_Kidhome
1327782   +          +     0.07336443095717 * S_Mnt  +     0.07813855224934 *
1327783   +        S_MntFishProducts  +    -0.09796868776705 * S_MntFruits
1327784   +          +     -0.1026096257543 * S_MntGoldProds  +     0.90002400845078 *
1327785   +        S_MntMeatProducts  +    -0.05163420076554 * S_MntSweetProducts
1327786   +          +    -0.41703750500589 * S_MntWines  +     0.01638041414141 *
1327787   +        S_MonthsAsCustomer  +      0.6832201856142 * S_NumCatalogPurchases
1327788   +          +     0.63522682456102 * S_NumDealsPurchases
1327789   +          +      0.0043057429215 * S_NumDistPurchases
1327790   +          +    -0.76667751707574 * S_NumStorePurchases
1327791   +          +    -0.73436881033241 * S_NumWebPurchases
1327792   +          +     1.59331554601341 * S_NumWebVisitsMonth
1327793   +          +     0.05617601605625 * S_RFMstat  +    -0.49130520428583 *
1327794   +        S_RMntFrq  +    -1.32582830247063 * S_Recency
1327795   +          +     -0.3056726615596 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.53146760457913 * S_AcceptedCmpTotal + -0.03810411031475 * S_Age 
+ -0.18043958502932 * S_Frq + 0.69595178597879 * S_Income + -0.70952256145726 * S_Kidhome + 
0.07336443095717 * S_Mnt + 0.07813855224934 * S_MntFishProducts + -0.09796868776705 * 
S_MntFruits + -0.1026096257543 * S_MntGoldProds + 0.90002400845078 * S_MntMeatProducts + 
-0.05163420076554 * S_MntSweetProducts + -0.41703750500589 * S_MntWines + 0.01638041414141 * 
S_MonthsAsCustomer + 0.6832201856142 * S_NumCatalogPurchases + 0.63522682456102 * 
S_NumDealsPurchases + 0.0043057429215 * S_NumDistPurchases + -0.76667751707574 * 
S_NumStorePurchases + -0.73436881033241 * S_NumWebPurchases + 1.59331554601341 * 
S_NumWebVisitsMonth + 0.05617601605625 * S_RFMstat + -0.49130520428583 * S_RMntFrq + 
-1.32582830247063 * S_Recency + -0.3056726615596 * S_Teenhome ;
1327796   +   H16  =    -0.14553823909316 * S_AcceptedCmpTotal  +     0.33407048981453 *
1327797   +        S_Age  +     0.23734269837078 * S_Frq  +     0.25406469036176 *
1327798   +        S_Income  +    -0.23632967504194 * S_Kidhome
1327799   +          +      0.0179055062616 * S_Mnt  +    -0.02279077829807 *
1327800   +        S_MntFishProducts  +     0.01454079994702 * S_MntFruits
1327801   +          +     0.11034379787627 * S_MntGoldProds  +    -0.08132325963546 *
1327802   +        S_MntMeatProducts  +    -0.15375043677096 * S_MntSweetProducts
1327803   +          +    -0.28898229890805 * S_MntWines  +     0.18829471441599 *
1327804   +        S_MonthsAsCustomer  +     0.22198357500123 * S_NumCatalogPurchases
1327805   +          +     -0.3032858959477 * S_NumDealsPurchases
1327806   +          +     0.11343979556999 * S_NumDistPurchases
1327807   +          +     0.19545021266061 * S_NumStorePurchases
1327808   +          +      0.1566777684546 * S_NumWebPurchases
1327809   +          +    -0.19390757759484 * S_NumWebVisitsMonth
1327810   +          +    -0.21685141921823 * S_RFMstat  +    -0.08968120165679 *
1327811   +        S_RMntFrq  +     0.01331408958685 * S_Recency
1327812   +          +    -0.29851875139164 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.14553823909316 * S_AcceptedCmpTotal + 0.33407048981453 * S_Age 
+ 0.23734269837078 * S_Frq + 0.25406469036176 * S_Income + -0.23632967504194 * S_Kidhome + 
0.0179055062616 * S_Mnt + -0.02279077829807 * S_MntFishProducts + 0.01454079994702 * 
S_MntFruits + 0.11034379787627 * S_MntGoldProds + -0.08132325963546 * S_MntMeatProducts + 
-0.15375043677096 * S_MntSweetProducts + -0.28898229890805 * S_MntWines + 0.18829471441599 * 
S_MonthsAsCustomer + 0.22198357500123 * S_NumCatalogPurchases + -0.3032858959477 * 
S_NumDealsPurchases + 0.11343979556999 * S_NumDistPurchases + 0.19545021266061 * 
S_NumStorePurchases + 0.1566777684546 * S_NumWebPurchases + -0.19390757759484 * 
S_NumWebVisitsMonth + -0.21685141921823 * S_RFMstat + -0.08968120165679 * S_RMntFrq + 
0.01331408958685 * S_Recency + -0.29851875139164 * S_Teenhome ;
1327813   +   H17  =     0.17466919198464 * S_AcceptedCmpTotal  +     -0.1121028079984 *
1327814   +        S_Age  +     0.02716231756399 * S_Frq  +     0.41157809710764 *
1327815   +        S_Income  +    -0.47847362741737 * S_Kidhome
1327816   +          +     0.12197279598903 * S_Mnt  +    -0.28291208980103 *
1327817   +        S_MntFishProducts  +    -0.06478996635951 * S_MntFruits
1327818   +          +     0.10519382804535 * S_MntGoldProds  +    -0.02084816137226 *
1327819   +        S_MntMeatProducts  +     0.00302745742685 * S_MntSweetProducts
1327820   +          +     0.05093107260089 * S_MntWines  +    -0.11279856455812 *
1327821   +        S_MonthsAsCustomer  +     0.33888951696726 * S_NumCatalogPurchases
1327822   +          +    -0.17510289915098 * S_NumDealsPurchases
1327823   +          +     0.16952490494417 * S_NumDistPurchases
1327824   +          +     0.11152117614204 * S_NumStorePurchases
1327825   +          +     0.22594341376741 * S_NumWebPurchases
1327826   +          +     0.64523546369354 * S_NumWebVisitsMonth
1327827   +          +     0.10568501117555 * S_RFMstat  +     0.12784241795943 *
1327828   +        S_RMntFrq  +    -1.11651429004489 * S_Recency
1327829   +          +    -0.48880952880502 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = 0.17466919198464 * S_AcceptedCmpTotal + -0.1121028079984 * S_Age + 
0.02716231756399 * S_Frq + 0.41157809710764 * S_Income + -0.47847362741737 * S_Kidhome + 
0.12197279598903 * S_Mnt + -0.28291208980103 * S_MntFishProducts + -0.06478996635951 * 
S_MntFruits + 0.10519382804535 * S_MntGoldProds + -0.02084816137226 * S_MntMeatProducts + 
0.00302745742685 * S_MntSweetProducts + 0.05093107260089 * S_MntWines + -0.11279856455812 * 
S_MonthsAsCustomer + 0.33888951696726 * S_NumCatalogPurchases + -0.17510289915098 * 
S_NumDealsPurchases + 0.16952490494417 * S_NumDistPurchases + 0.11152117614204 * 
S_NumStorePurchases + 0.22594341376741 * S_NumWebPurchases + 0.64523546369354 * 
S_NumWebVisitsMonth + 0.10568501117555 * S_RFMstat + 0.12784241795943 * S_RMntFrq + 
-1.11651429004489 * S_Recency + -0.48880952880502 * S_Teenhome ;
1327830   +   H11  = H11  +     0.13977383212072 * AcceptedCmp10
1327831   +          +     0.05060031718137 * AcceptedCmp20  +     -0.1285183348614 *
1327832   +        AcceptedCmp30  +    -0.10484468193603 * AcceptedCmp40
1327833   +          +     0.05917719975803 * AcceptedCmp50  +    -0.26316725467429 *
1327834   +        Complain0  +    -0.01895470174434 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.13977383212072 * AcceptedCmp10 + 0.05060031718137 * 
AcceptedCmp20 + -0.1285183348614 * AcceptedCmp30 + -0.10484468193603 * AcceptedCmp40 + 
0.05917719975803 * AcceptedCmp50 + -0.26316725467429 * Complain0 + -0.01895470174434 * 
HigherEducationBinary0 ;
1327835   +   H12  = H12  +     0.02037307448825 * AcceptedCmp10
1327836   +          +     0.17835601132169 * AcceptedCmp20  +     0.38550714429243 *
1327837   +        AcceptedCmp30  +    -0.33756721331432 * AcceptedCmp40
1327838   +          +     0.37598437397044 * AcceptedCmp50  +    -0.03377310181099 *
1327839   +        Complain0  +    -0.39065832156758 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.02037307448825 * AcceptedCmp10 + 0.17835601132169 * 
AcceptedCmp20 + 0.38550714429243 * AcceptedCmp30 + -0.33756721331432 * AcceptedCmp40 + 
0.37598437397044 * AcceptedCmp50 + -0.03377310181099 * Complain0 + -0.39065832156758 * 
HigherEducationBinary0 ;
1327840   +   H13  = H13  +    -0.22454004936394 * AcceptedCmp10
1327841   +          +     0.05941661323841 * AcceptedCmp20  +    -0.03592458555508 *
1327842   +        AcceptedCmp30  +    -0.25474371327449 * AcceptedCmp40
1327843   +          +     -0.0455897206132 * AcceptedCmp50  +     0.04740536844263 *
1327844   +        Complain0  +    -0.02878944582567 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.22454004936394 * AcceptedCmp10 + 0.05941661323841 * 
AcceptedCmp20 + -0.03592458555508 * AcceptedCmp30 + -0.25474371327449 * AcceptedCmp40 + 
-0.0455897206132 * AcceptedCmp50 + 0.04740536844263 * Complain0 + -0.02878944582567 * 
HigherEducationBinary0 ;
1327845   +   H14  = H14  +     -0.3260094757606 * AcceptedCmp10
1327846   +          +    -0.11375214865976 * AcceptedCmp20  +     0.17394162217532 *
1327847   +        AcceptedCmp30  +     0.25649528618828 * AcceptedCmp40
1327848   +          +    -0.09775926020035 * AcceptedCmp50  +     0.07605735003987 *
The SAS System

1327849   +        Complain0  +    -0.03961404091649 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.3260094757606 * AcceptedCmp10 + -0.11375214865976 * 
AcceptedCmp20 + 0.17394162217532 * AcceptedCmp30 + 0.25649528618828 * AcceptedCmp40 + 
-0.09775926020035 * AcceptedCmp50 + 0.07605735003987 * Complain0 + -0.03961404091649 * 
HigherEducationBinary0 ;
1327850   +   H15  = H15  +    -0.25690837852364 * AcceptedCmp10
1327851   +          +    -0.17111872756246 * AcceptedCmp20  +    -0.15594117886178 *
1327852   +        AcceptedCmp30  +    -0.35871566761504 * AcceptedCmp40
1327853   +          +    -0.33301494609865 * AcceptedCmp50  +     0.02032122936961 *
1327854   +        Complain0  +    -0.28127713754103 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.25690837852364 * AcceptedCmp10 + -0.17111872756246 * 
AcceptedCmp20 + -0.15594117886178 * AcceptedCmp30 + -0.35871566761504 * AcceptedCmp40 + 
-0.33301494609865 * AcceptedCmp50 + 0.02032122936961 * Complain0 + -0.28127713754103 * 
HigherEducationBinary0 ;
1327855   +   H16  = H16  +     0.01304767072646 * AcceptedCmp10
1327856   +          +     0.04542970824889 * AcceptedCmp20  +    -0.04086132015641 *
1327857   +        AcceptedCmp30  +    -0.01583924109084 * AcceptedCmp40
1327858   +          +    -0.06928082094172 * AcceptedCmp50  +    -0.06496287745005 *
1327859   +        Complain0  +     0.23477563976328 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.01304767072646 * AcceptedCmp10 + 0.04542970824889 * 
AcceptedCmp20 + -0.04086132015641 * AcceptedCmp30 + -0.01583924109084 * AcceptedCmp40 + 
-0.06928082094172 * AcceptedCmp50 + -0.06496287745005 * Complain0 + 0.23477563976328 * 
HigherEducationBinary0 ;
1327860   +   H17  = H17  +     0.01615921378096 * AcceptedCmp10
1327861   +          +    -0.15677614259446 * AcceptedCmp20  +    -0.26690848255992 *
1327862   +        AcceptedCmp30  +    -0.26633430402858 * AcceptedCmp40
1327863   +          +     -0.1321548166386 * AcceptedCmp50  +    -0.12983847017281 *
1327864   +        Complain0  +     0.32518892495397 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.01615921378096 * AcceptedCmp10 + -0.15677614259446 * 
AcceptedCmp20 + -0.26690848255992 * AcceptedCmp30 + -0.26633430402858 * AcceptedCmp40 + 
-0.1321548166386 * AcceptedCmp50 + -0.12983847017281 * Complain0 + 0.32518892495397 * 
HigherEducationBinary0 ;
1327865   +   H11  = H11  +     0.05829614347592 * Education2n_Cycle
1327866   +          +     0.28826698233517 * EducationBasic  +     0.30092045123127 *
1327867   +        EducationGraduation  +     0.01956517058574 * EducationMaster
1327868   +          +     0.42319965972117 * Marital_StatusDivorced
1327869   +          +    -0.45015157317991 * Marital_StatusMarried
1327870   +          +     0.43076106925345 * Marital_StatusSingle
1327871   +          +    -0.34625245410408 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.05829614347592 * Education2n_Cycle + 0.28826698233517 * 
EducationBasic + 0.30092045123127 * EducationGraduation + 0.01956517058574 * EducationMaster + 
0.42319965972117 * Marital_StatusDivorced + -0.45015157317991 * Marital_StatusMarried + 
0.43076106925345 * Marital_StatusSingle + -0.34625245410408 * Marital_StatusTogether ;
1327872   +   H12  = H12  +    -0.15246834223268 * Education2n_Cycle
1327873   +          +     0.02248997563033 * EducationBasic  +    -0.05434884503392 *
1327874   +        EducationGraduation  +     0.28747604127576 * EducationMaster
1327875   +          +     0.11384347873072 * Marital_StatusDivorced
1327876   +          +     0.51442453272823 * Marital_StatusMarried
1327877   +          +    -0.38966058028661 * Marital_StatusSingle
1327878   +          +     0.59654659814606 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.15246834223268 * Education2n_Cycle + 0.02248997563033 * 
EducationBasic + -0.05434884503392 * EducationGraduation + 0.28747604127576 * EducationMaster 
+ 0.11384347873072 * Marital_StatusDivorced + 0.51442453272823 * Marital_StatusMarried + 
-0.38966058028661 * Marital_StatusSingle + 0.59654659814606 * Marital_StatusTogether ;
1327879   +   H13  = H13  +     0.07291520243057 * Education2n_Cycle
1327880   +          +     0.22798022739243 * EducationBasic  +    -0.09714428862174 *
1327881   +        EducationGraduation  +     0.19910048440114 * EducationMaster
1327882   +          +    -0.05213342781535 * Marital_StatusDivorced
1327883   +          +     0.07520352092928 * Marital_StatusMarried
1327884   +          +     0.20175107471623 * Marital_StatusSingle
1327885   +          +     0.21785232690504 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07291520243057 * Education2n_Cycle + 0.22798022739243 * 
EducationBasic + -0.09714428862174 * EducationGraduation + 0.19910048440114 * EducationMaster 
+ -0.05213342781535 * Marital_StatusDivorced + 0.07520352092928 * Marital_StatusMarried + 
0.20175107471623 * Marital_StatusSingle + 0.21785232690504 * Marital_StatusTogether ;
1327886   +   H14  = H14  +    -0.16241733679628 * Education2n_Cycle
1327887   +          +     0.10611998985678 * EducationBasic  +    -0.03570492688548 *
1327888   +        EducationGraduation  +     0.29010545079762 * EducationMaster
1327889   +          +    -0.40635592200933 * Marital_StatusDivorced
1327890   +          +     0.64772941459031 * Marital_StatusMarried
1327891   +          +    -0.36402842056603 * Marital_StatusSingle
1327892   +          +     0.66760594472194 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.16241733679628 * Education2n_Cycle + 0.10611998985678 * 
EducationBasic + -0.03570492688548 * EducationGraduation + 0.29010545079762 * EducationMaster 
+ -0.40635592200933 * Marital_StatusDivorced + 0.64772941459031 * Marital_StatusMarried + 
-0.36402842056603 * Marital_StatusSingle + 0.66760594472194 * Marital_StatusTogether ;
1327893   +   H15  = H15  +      0.1484080088272 * Education2n_Cycle
1327894   +          +    -0.26484833011693 * EducationBasic  +     0.32372570227867 *
1327895   +        EducationGraduation  +    -0.19830450172452 * EducationMaster
1327896   +          +     0.87932592764844 * Marital_StatusDivorced
1327897   +          +    -0.85946473083734 * Marital_StatusMarried
1327898   +          +     0.74505733668545 * Marital_StatusSingle
1327899   +          +    -0.94561469309103 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.1484080088272 * Education2n_Cycle + -0.26484833011693 * 
EducationBasic + 0.32372570227867 * EducationGraduation + -0.19830450172452 * EducationMaster 
+ 0.87932592764844 * Marital_StatusDivorced + -0.85946473083734 * Marital_StatusMarried + 
0.74505733668545 * Marital_StatusSingle + -0.94561469309103 * Marital_StatusTogether ;
1327900   +   H16  = H16  +     0.06060112302425 * Education2n_Cycle
1327901   +          +    -0.33181717926405 * EducationBasic  +    -0.11727908170163 *
1327902   +        EducationGraduation  +    -0.12441264886812 * EducationMaster
1327903   +          +    -0.11861748280641 * Marital_StatusDivorced
1327904   +          +    -0.15869097739395 * Marital_StatusMarried
1327905   +          +     0.34415019828259 * Marital_StatusSingle
1327906   +          +    -0.10748203749958 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.06060112302425 * Education2n_Cycle + -0.33181717926405 * 
EducationBasic + -0.11727908170163 * EducationGraduation + -0.12441264886812 * EducationMaster 
+ -0.11861748280641 * Marital_StatusDivorced + -0.15869097739395 * Marital_StatusMarried + 
0.34415019828259 * Marital_StatusSingle + -0.10748203749958 * Marital_StatusTogether ;
1327907   +   H17  = H17  +      0.0204719144571 * Education2n_Cycle
1327908   +          +    -0.21500190587821 * EducationBasic  +    -0.12457774765815 *
1327909   +        EducationGraduation  +    -0.08824349470153 * EducationMaster
1327910   +          +     0.14995740697816 * Marital_StatusDivorced
1327911   +          +    -1.01788822114068 * Marital_StatusMarried
1327912   +          +     0.70532758126153 * Marital_StatusSingle
1327913   +          +    -0.63335960879305 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.0204719144571 * Education2n_Cycle + -0.21500190587821 * 
EducationBasic + -0.12457774765815 * EducationGraduation + -0.08824349470153 * EducationMaster 
+ 0.14995740697816 * Marital_StatusDivorced + -1.01788822114068 * Marital_StatusMarried + 
0.70532758126153 * Marital_StatusSingle + -0.63335960879305 * Marital_StatusTogether ;
1327914   +   H11  =     0.02607332365548 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.02607332365548 + H11 ;
1327915   +   H12  =    -0.56666577494928 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.56666577494928 + H12 ;
1327916   +   H13  =    -1.03772915602166 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.03772915602166 + H13 ;
1327917   +   H14  =     0.84490585692811 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.84490585692811 + H14 ;
1327918   +   H15  =     -0.4221012604846 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.4221012604846 + H15 ;
1327919   +   H16  =     -1.7732139312938 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.7732139312938 + H16 ;
1327920   +   H17  =    -1.59831075827511 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.59831075827511 + H17 ;
1327921   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1327922   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1327923   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1327924   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1327925   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1327926   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1327927   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
1327928   +END;
MPRINT(EM_DIAGRAM):   END;
1327929   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1327930   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1327931   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1327932   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1327933   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1327934   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1327935   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1327936   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
1327937   +END;
MPRINT(EM_DIAGRAM):   END;
1327938   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1327939   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1327940   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1327941   +
1327942   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1327943   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1327944   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1327945   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1327946   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1327947   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1327948   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1327949   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1327950   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1327951   +end;
MPRINT(EM_DIAGRAM):   end;
1327952   +else do;
MPRINT(EM_DIAGRAM):   else do;
1327953   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1327954   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1327955   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1327956   +   end;
MPRINT(EM_DIAGRAM):   end;
1327957   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1327958   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1327959   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1327960   +   end;
MPRINT(EM_DIAGRAM):   end;
1327961   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1327962   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1327963   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1327964   +   end;
MPRINT(EM_DIAGRAM):   end;
1327965   +end;
MPRINT(EM_DIAGRAM):   end;
1327966   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1327967   +   P_DepVar1  =      -1.605577695663 * H11  +    -1.61358647892122 * H12
1327968   +          +     0.34401900767527 * H13  +     3.24181562332148 * H14
1327969   +          +     3.59380365492102 * H15  +     0.56941587287347 * H16
1327970   +          +     2.13310046968058 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.605577695663 * H11 + -1.61358647892122 * H12 + 
0.34401900767527 * H13 + 3.24181562332148 * H14 + 3.59380365492102 * H15 + 0.56941587287347 * 
H16 + 2.13310046968058 * H17 ;
1327971   +   P_DepVar1  =    -2.17258746401986 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.17258746401986 + P_DepVar1 ;
1327972   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1327973   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1327974   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1327975   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1327976   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1327977   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1327978   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1327979   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1327980   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1327981   +END;
MPRINT(EM_DIAGRAM):   END;
1327982   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1327983   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1327984   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1327985   +END;
MPRINT(EM_DIAGRAM):   END;
1327986   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1327987   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1327988   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1327989   +END;
MPRINT(EM_DIAGRAM):   END;
1327990   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1327991   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1327992   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1327993   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1327994   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1327995   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1327996   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1327997   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1327998   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1327999   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1328000   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1328001   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1328002   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1328003   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1328004   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1328005   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1328006   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1328007   +END;
MPRINT(EM_DIAGRAM):   END;
1328008   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1328009   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1328010   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1328011   +drop
1328012   +H11
1328013   +H12
1328014   +H13
1328015   +H14
1328016   +H15
1328017   +H16
1328018   +H17
1328019   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
1328020   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1328021   +* Renaming variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural10;
1328022   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1328023   +* Renaming Posterior variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural10;
1328024   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1328025   +drop Neural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural10_P_DepVar1;
1328026   +Neural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural10_P_DepVar1 = P_DepVar1;
1328027   +drop Neural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural10_P_DepVar0;
1328028   +Neural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural10_P_DepVar0 = P_DepVar0;
1328029   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1328030   +* Renaming _WARN_ variable for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural10;
1328031   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1328032   +length Neural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural10_WARN_ $4;
1328033   +drop Neural10_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural10_WARN_;
1328034   +Neural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural10_WARN_ = _WARN_;
1328035   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1328036   +* Ensmbl: Average Posteriors of 10 models;
MPRINT(EM_DIAGRAM):   * Ensmbl: Average Posteriors of 10 models;
1328037   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1328038   +P_DepVar1 = (
1328039   +Reg5_P_DepVar1 +
1328040   +Reg_P_DepVar1 +
1328041   +Tree_P_DepVar1 +
1328042   +Neural4_P_DepVar1 +
1328043   +Neural_P_DepVar1 +
1328044   +Neural2_P_DepVar1 +
1328045   +Neural3_P_DepVar1 +
1328046   +Neural7_P_DepVar1 +
1328047   +Neural9_P_DepVar1 +
1328048   +Neural10_P_DepVar1
1328049   +)/10;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( Reg5_P_DepVar1 + Reg_P_DepVar1 + Tree_P_DepVar1 + 
Neural4_P_DepVar1 + Neural_P_DepVar1 + Neural2_P_DepVar1 + Neural3_P_DepVar1 + 
Neural7_P_DepVar1 + Neural9_P_DepVar1 + Neural10_P_DepVar1 )/10;
1328050   +P_DepVar0 = (
1328051   +Reg5_P_DepVar0 +
1328052   +Reg_P_DepVar0 +
1328053   +Tree_P_DepVar0 +
1328054   +Neural4_P_DepVar0 +
1328055   +Neural_P_DepVar0 +
1328056   +Neural2_P_DepVar0 +
1328057   +Neural3_P_DepVar0 +
1328058   +Neural7_P_DepVar0 +
1328059   +Neural9_P_DepVar0 +
1328060   +Neural10_P_DepVar0
1328061   +)/10;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( Reg5_P_DepVar0 + Reg_P_DepVar0 + Tree_P_DepVar0 + 
Neural4_P_DepVar0 + Neural_P_DepVar0 + Neural2_P_DepVar0 + Neural3_P_DepVar0 + 
Neural7_P_DepVar0 + Neural9_P_DepVar0 + Neural10_P_DepVar0 )/10;
1328062   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1328063   +* Ensmbl: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl: Computing Classification Vars;
1328064   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1328065   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
1328066   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
1328067   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
1328068   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
1328069   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
1328070   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
1328071   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
1328072   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
1328073   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
1328074   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
1328075   +end;
MPRINT(EM_DIAGRAM):   end;
1328076   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
1328077   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
1328078   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
1328079   +end;
MPRINT(EM_DIAGRAM):   end;
1328080   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1328081   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1328082   +* Ensmbl: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl: Producing Unformatted variable;
1328083   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1328084   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1328085   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1328086   +else
1328087   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1328088   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1328089   +* Ensmbl: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl: Computing _WARN_ Variable;
1328090   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1328091   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1328092   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1328093   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1328094   +if index(REG5_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 
1) ='M';
1328095   +if index(REG5_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 
1) ='U';
1328096   +if index(REG5_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 
1) ='P';
1328097   +if index(REG5_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 
1) ='C';
1328098   +if index(REG_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 
1) ='M';
1328099   +if index(REG_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 
1) ='U';
1328100   +if index(REG_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 
1) ='P';
1328101   +if index(REG_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 
1) ='C';
1328102   +if index(TREE_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(TREE_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 
1) ='M';
1328103   +if index(TREE_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(TREE_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 
1) ='U';
1328104   +if index(TREE_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(TREE_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 
1) ='P';
1328105   +if index(TREE_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(TREE_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 
1) ='C';
1328106   +if index(NEURAL4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1328107   +if index(NEURAL4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1328108   +if index(NEURAL4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1328109   +if index(NEURAL4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1328110   +if index(NEURAL_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1328111   +if index(NEURAL_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1328112   +if index(NEURAL_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1328113   +if index(NEURAL_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1328114   +if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1328115   +if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1328116   +if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1328117   +if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1328118   +if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1328119   +if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1328120   +if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1328121   +if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1328122   +if index(NEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1328123   +if index(NEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1328124   +if index(NEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1328125   +if index(NEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1328126   +if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1328127   +if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1328128   +if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1328129   +if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1328130   +if index(NEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1328130  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1328131   +if index(NEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1328131  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1328132   +if index(NEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1328132  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1328133   +if index(NEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1328133  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1328134   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1328135   +* Ensmbl: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl: Computing Residual Vars;
1328136   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1328137   +if
1328138   +F_DepVar NE '1'
1328139   +AND F_DepVar NE '0'
1328140   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
1328141   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1328142   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1328143   +end;
MPRINT(EM_DIAGRAM):   end;
1328144   +else do;
MPRINT(EM_DIAGRAM):   else do;
1328145   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
1328146   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
1328147   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
1328148   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
1328149   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
1328150   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
1328151   +END;
MPRINT(EM_DIAGRAM):   END;
1328152   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1328153    run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.REG5_TRAIN.VIEW used (Total process time):
      real time           0.19 seconds
      cpu time            0.20 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.21 seconds
      cpu time            0.20 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1328154    quit;
1328155    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1328156    filename emflow
1328156  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl: Scoring REG5_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1328157    *------------------------------------------------------------*;
1328158    * Ensmbl: Scoring REG5_VALIDATE data;
1328159    *------------------------------------------------------------*;
1328160    data EMWS8.Ensmbl_VALIDATE
1328161    / view=EMWS8.Ensmbl_VALIDATE
1328162    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl_VALIDATE / view=EMWS8.Ensmbl_VALIDATE ;
1328163    set EMWS8.Reg5_VALIDATE
1328164    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg5_VALIDATE ;
1328165    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl\EMFLOWSCORE.sas.
1328166   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1328167   +* Ensmbl: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl: Combine model for DepVar;
1328168   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1328169   +* Ensmbl: Scoring Code of model 1 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl: Scoring Code of model 1 of 10;
1328170   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1328171   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1328172   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1328173   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1328174   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
1328175   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1328176   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1328177   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
1328178   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1328179   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
1328180   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1328181   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1328182   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
1328183   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1328184   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
1328185   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1328186   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1328187   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
1328188   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1328189   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
1328190   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1328191   +
1328192   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1328193   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1328193  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1328194   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1328195   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1328196   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1328197   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1328198   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
1328199   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1328200   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
1328201   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1328202   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
1328203   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1328204   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1328205   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1328206   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1328207   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1328208   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1328209   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
1328210   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1328211   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
1328212   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1328213   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
1328214   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1328215   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1328216   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
1328217   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1328218   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
1328219   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1328220   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1328221   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
1328222   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1328223   +* NODE: Reg5;
MPRINT(EM_DIAGRAM):   * NODE: Reg5;
1328224   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1328225   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1328226   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1328227   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1328228   +
1328229   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1328230   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1328231   +
1328232   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1328233   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1328234   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1328235   +array REG5DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG5DRF [2] $12 _temporary_ ('1' '0' );
1328236   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1328237   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1328238   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1328239   +ARRAY REG5DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG5DRU[2] _TEMPORARY_ (1 0);
1328240   +
1328241   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1328242   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
1328243   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1328244   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1328245   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1328246   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1328247   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1328248   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1328249   +end;
MPRINT(EM_DIAGRAM):   end;
1328250   +else do;
MPRINT(EM_DIAGRAM):   else do;
1328251   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1328252   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
1328253   +   end;
MPRINT(EM_DIAGRAM):   end;
1328254   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1328255   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
1328256   +   end;
MPRINT(EM_DIAGRAM):   end;
1328257   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1328258   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1328259   +   end;
MPRINT(EM_DIAGRAM):   end;
1328260   +end;
MPRINT(EM_DIAGRAM):   end;
1328261   +
1328262   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1328263   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1328264   +
1328265   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1328266   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1328267   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1328268   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1328269   +end;
MPRINT(EM_DIAGRAM):   end;
1328270   +
1328271   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1328272   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1328273   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1328274   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1328275   +end;
MPRINT(EM_DIAGRAM):   end;
1328276   +
1328277   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1328278   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1328279   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1328280   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1328281   +end;
MPRINT(EM_DIAGRAM):   end;
1328282   +
1328283   +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
1328284   +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
1328285   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1328286   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1328287   +end;
MPRINT(EM_DIAGRAM):   end;
1328288   +
1328289   +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
1328290   +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
1328291   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1328292   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1328293   +end;
MPRINT(EM_DIAGRAM):   end;
1328294   +
1328295   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1328296   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1328297   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1328298   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1328299   +end;
MPRINT(EM_DIAGRAM):   end;
1328300   +
1328301   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
1328302   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
1328303   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1328304   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1328305   +end;
MPRINT(EM_DIAGRAM):   end;
1328306   +
1328307   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1328308   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1328309   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1328310   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1328311   +end;
MPRINT(EM_DIAGRAM):   end;
1328312   +
1328313   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1328314   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1328315   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1328316   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1328317   +end;
MPRINT(EM_DIAGRAM):   end;
1328318   +
1328319   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1328320   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1328321   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1328322   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1328323   +end;
MPRINT(EM_DIAGRAM):   end;
1328324   +
1328325   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1328326   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1328327   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1328328   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1328329   +end;
MPRINT(EM_DIAGRAM):   end;
1328330   +
1328331   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1328332   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1328333   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1328334   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1328335   +end;
MPRINT(EM_DIAGRAM):   end;
1328336   +
1328337   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1328338   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
1328339   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1328340   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1328341   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1328342   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
1328343   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
1328344   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1328345   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1328346   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1328347   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1328348   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1328349   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1328350   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1328351   +end;
MPRINT(EM_DIAGRAM):   end;
1328352   +else do;
MPRINT(EM_DIAGRAM):   else do;
1328353   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1328354   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1328355   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1328356   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1328357   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1328358   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1328359   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1328360   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1328361   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1328362   +         end;
MPRINT(EM_DIAGRAM):   end;
1328363   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1328364   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1328365   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1328366   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1328367   +            end;
MPRINT(EM_DIAGRAM):   end;
1328368   +         end;
MPRINT(EM_DIAGRAM):   end;
1328369   +      end;
MPRINT(EM_DIAGRAM):   end;
1328370   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1328371   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1328372   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
1328373   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1328374   +         end;
MPRINT(EM_DIAGRAM):   end;
1328375   +      end;
MPRINT(EM_DIAGRAM):   end;
1328376   +   end;
MPRINT(EM_DIAGRAM):   end;
1328377   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1328378   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1328379   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
1328380   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1328381   +      end;
MPRINT(EM_DIAGRAM):   end;
1328382   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1328383   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1328384   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1328385   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1328386   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
1328387   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
1328388   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1328389   +         end;
MPRINT(EM_DIAGRAM):   end;
1328390   +      end;
MPRINT(EM_DIAGRAM):   end;
1328391   +   end;
MPRINT(EM_DIAGRAM):   end;
1328392   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1328393   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1328394   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1328395   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1328396   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1328397   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1328398   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1328399   +   end;
MPRINT(EM_DIAGRAM):   end;
1328400   +end;
MPRINT(EM_DIAGRAM):   end;
1328401   +
1328402   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1328403   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1328404   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1328405   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1328406   +   goto REG5DR1;
MPRINT(EM_DIAGRAM):   goto REG5DR1;
1328407   +end;
MPRINT(EM_DIAGRAM):   end;
1328408   +
1328409   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1328410   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1328411   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1328412   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1328413   +
1328414   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1328415   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1328416   +_LP0 = _LP0 + (    1.62720428342499 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.62720428342499 * _TEMP);
1328417   +
1328418   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1328419   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1328420   +_LP0 = _LP0 + (   -0.22971333675933 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.22971333675933 * _TEMP);
1328421   +
1328422   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1328423   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1328424   +_LP0 = _LP0 + (    0.00003533282438 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00003533282438 * _TEMP);
1328425   +
1328426   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1328427   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1328428   +_LP0 = _LP0 + (    0.08642160195218) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.08642160195218) * _TEMP * _9_0;
1328429   +_LP0 = _LP0 + (   -0.51421240544522) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.51421240544522) * _TEMP * _9_1;
1328430   +_LP0 = _LP0 + (    0.43839945966755) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.43839945966755) * _TEMP * _9_2;
1328431   +_LP0 = _LP0 + (   -0.51854020296844) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.51854020296844) * _TEMP * _9_3;
1328432   +
1328433   +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
1328434   +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
1328435   +_LP0 = _LP0 + (   -0.00223385655154 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00223385655154 * _TEMP);
1328436   +
1328437   +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
1328438   +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
1328439   +_LP0 = _LP0 + (    0.00401106095636 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00401106095636 * _TEMP);
1328440   +
1328441   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1328442   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1328443   +_LP0 = _LP0 + (    0.00703004991808 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00703004991808 * _TEMP);
1328444   +
1328445   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
1328446   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
1328447   +_LP0 = _LP0 + (    0.62141049405048 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.62141049405048 * _TEMP);
1328448   +
1328449   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1328450   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1328451   +_LP0 = _LP0 + (    0.39538473396078 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.39538473396078 * _TEMP);
1328452   +
1328453   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1328454   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1328455   +_LP0 = _LP0 + (    0.54283993308937 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.54283993308937 * _TEMP);
1328456   +
1328457   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1328458   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1328459   +_LP0 = _LP0 + (    0.00014928266997 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00014928266997 * _TEMP);
1328460   +
1328461   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1328462   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1328463   +_LP0 = _LP0 + (   -0.05097670253272 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05097670253272 * _TEMP);
1328464   +
1328465   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1328466   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1328467   +_LP0 = _LP0 + (   -0.68537073085327 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.68537073085327 * _TEMP);
1328468   +
1328469   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1328470   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1328471   +_P0 = probnorm((   -4.59636694921951) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -4.59636694921951) + _LP0);
1328472   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1328473   +
1328474   +REG5DR1:
1328475   +
1328476   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG5DR1: *** Residuals;
1328477   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
1328478   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1328479   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1328480   +end;
MPRINT(EM_DIAGRAM):   end;
1328481   +else do;
MPRINT(EM_DIAGRAM):   else do;
1328482   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1328483   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1328484   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
1328485   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
1328486   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
1328487   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
1328488   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
1328489   +   end;
MPRINT(EM_DIAGRAM):   end;
1328490   +end;
MPRINT(EM_DIAGRAM):   end;
1328491   +
1328492   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
1328493   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1328494   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1328495   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1328496   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1328497   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1328498   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1328499   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1328500   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1328501   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1328502   +end;
MPRINT(EM_DIAGRAM):   end;
1328503   +I_DepVar = REG5DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG5DRF[_IY];
1328504   +U_DepVar = REG5DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG5DRU[_IY];
1328505   +
1328506   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1328507   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1328508   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1328509   +* Renaming variables for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg5;
1328510   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1328511   +* Renaming Posterior variables for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg5;
1328512   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1328513   +drop Reg5_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg5_P_DepVar1;
1328514   +Reg5_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg5_P_DepVar1 = P_DepVar1;
1328515   +drop Reg5_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg5_P_DepVar0;
1328516   +Reg5_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg5_P_DepVar0 = P_DepVar0;
1328517   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1328518   +* Renaming _WARN_ variable for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg5;
1328519   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1328520   +length Reg5_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg5_WARN_ $4;
1328521   +drop Reg5_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg5_WARN_;
1328522   +Reg5_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg5_WARN_ = _WARN_;
1328523   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1328524   +* Ensmbl: Scoring Code of model 2 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl: Scoring Code of model 2 of 10;
1328525   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1328526   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1328527   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
1328528   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1328529   +* NODE: Reg;
MPRINT(EM_DIAGRAM):   * NODE: Reg;
1328530   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1328531   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1328532   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1328533   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1328534   +
1328535   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1328536   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1328537   +
1328538   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1328539   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1328540   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1328541   +array REGDRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REGDRF [2] $12 _temporary_ ('1' '0' );
1328542   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1328543   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1328544   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1328545   +ARRAY REGDRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REGDRU[2] _TEMPORARY_ (1 0);
1328546   +
1328547   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1328548   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
1328549   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1328550   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1328551   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1328552   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1328553   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1328554   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1328555   +end;
MPRINT(EM_DIAGRAM):   end;
1328556   +else do;
MPRINT(EM_DIAGRAM):   else do;
1328557   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1328558   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
1328559   +   end;
MPRINT(EM_DIAGRAM):   end;
1328560   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1328561   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
1328562   +   end;
MPRINT(EM_DIAGRAM):   end;
1328563   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1328564   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1328565   +   end;
MPRINT(EM_DIAGRAM):   end;
1328566   +end;
MPRINT(EM_DIAGRAM):   end;
1328567   +
1328568   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1328569   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1328570   +
1328571   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1328572   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1328573   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1328574   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1328575   +end;
MPRINT(EM_DIAGRAM):   end;
1328576   +
1328577   +*** Check Age for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Age for missing values ;
1328578   +if missing( Age ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age ) then do;
1328579   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1328580   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1328581   +end;
MPRINT(EM_DIAGRAM):   end;
1328582   +
1328583   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1328584   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1328585   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1328586   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1328587   +end;
MPRINT(EM_DIAGRAM):   end;
1328588   +
1328589   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1328590   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1328591   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1328592   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1328593   +end;
MPRINT(EM_DIAGRAM):   end;
1328594   +
1328595   +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
1328596   +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
1328597   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1328598   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1328599   +end;
MPRINT(EM_DIAGRAM):   end;
1328600   +
1328601   +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
1328602   +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
1328603   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1328604   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1328605   +end;
MPRINT(EM_DIAGRAM):   end;
1328606   +
1328607   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1328608   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1328609   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1328610   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1328611   +end;
MPRINT(EM_DIAGRAM):   end;
1328612   +
1328613   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
1328614   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
1328615   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1328616   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1328617   +end;
MPRINT(EM_DIAGRAM):   end;
1328618   +
1328619   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1328620   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1328621   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1328622   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1328623   +end;
MPRINT(EM_DIAGRAM):   end;
1328624   +
1328625   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1328626   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1328627   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1328628   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1328629   +end;
MPRINT(EM_DIAGRAM):   end;
1328630   +
1328631   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1328632   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1328633   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1328634   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1328635   +end;
MPRINT(EM_DIAGRAM):   end;
1328636   +
1328637   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1328638   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1328639   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1328640   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1328641   +end;
MPRINT(EM_DIAGRAM):   end;
1328642   +
1328643   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1328644   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1328645   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1328646   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1328647   +end;
MPRINT(EM_DIAGRAM):   end;
1328648   +
1328649   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1328650   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
1328651   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1328652   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1328653   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1328654   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
1328655   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
1328656   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1328657   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1328658   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1328659   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1328660   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1328661   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1328662   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1328663   +end;
MPRINT(EM_DIAGRAM):   end;
1328664   +else do;
MPRINT(EM_DIAGRAM):   else do;
1328665   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1328666   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1328667   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1328668   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1328669   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1328670   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1328671   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1328672   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1328673   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1328674   +         end;
MPRINT(EM_DIAGRAM):   end;
1328675   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1328676   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1328677   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1328678   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1328679   +            end;
MPRINT(EM_DIAGRAM):   end;
1328680   +         end;
MPRINT(EM_DIAGRAM):   end;
1328681   +      end;
MPRINT(EM_DIAGRAM):   end;
1328682   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1328683   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1328684   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
1328685   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1328686   +         end;
MPRINT(EM_DIAGRAM):   end;
1328687   +      end;
MPRINT(EM_DIAGRAM):   end;
1328688   +   end;
MPRINT(EM_DIAGRAM):   end;
1328689   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1328690   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1328691   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
1328692   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1328693   +      end;
MPRINT(EM_DIAGRAM):   end;
1328694   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1328695   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1328696   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1328697   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1328698   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
1328699   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
1328700   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1328701   +         end;
MPRINT(EM_DIAGRAM):   end;
1328702   +      end;
MPRINT(EM_DIAGRAM):   end;
1328703   +   end;
MPRINT(EM_DIAGRAM):   end;
1328704   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1328705   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1328706   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1328707   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1328708   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1328709   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1328710   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1328711   +   end;
MPRINT(EM_DIAGRAM):   end;
1328712   +end;
MPRINT(EM_DIAGRAM):   end;
1328713   +
1328714   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1328715   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1328716   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1328717   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1328718   +   goto REGDR1;
MPRINT(EM_DIAGRAM):   goto REGDR1;
1328719   +end;
MPRINT(EM_DIAGRAM):   end;
1328720   +
1328721   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1328722   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1328723   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1328724   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1328725   +
1328726   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1328727   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1328728   +_LP0 = _LP0 + (    2.95660035656229 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.95660035656229 * _TEMP);
1328729   +
1328730   +***  Effect: Age ;
MPRINT(EM_DIAGRAM):   *** Effect: Age ;
1328731   +_TEMP = Age ;
MPRINT(EM_DIAGRAM):   _TEMP = Age ;
1328732   +_LP0 = _LP0 + (   -0.01941875166212 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.01941875166212 * _TEMP);
1328733   +
1328734   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1328735   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1328736   +_LP0 = _LP0 + (   -0.41047634158755 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.41047634158755 * _TEMP);
1328737   +
1328738   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1328739   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1328740   +_LP0 = _LP0 + (    0.00006532180674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00006532180674 * _TEMP);
1328741   +
1328742   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1328743   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1328744   +_LP0 = _LP0 + (    0.17791594529968) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.17791594529968) * _TEMP * _9_0;
1328745   +_LP0 = _LP0 + (   -1.00641962019516) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.00641962019516) * _TEMP * _9_1;
1328746   +_LP0 = _LP0 + (    0.74716428311041) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.74716428311041) * _TEMP * _9_2;
1328747   +_LP0 = _LP0 + (    -1.0069846290756) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.0069846290756) * _TEMP * _9_3;
1328748   +
1328749   +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
1328750   +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
1328751   +_LP0 = _LP0 + (   -0.00385241964842 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00385241964842 * _TEMP);
1328752   +
1328753   +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
1328754   +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
1328755   +_LP0 = _LP0 + (    0.00669490355232 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00669490355232 * _TEMP);
1328756   +
1328757   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1328758   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1328759   +_LP0 = _LP0 + (     0.0125330231858 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0125330231858 * _TEMP);
1328760   +
1328761   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
1328762   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
1328763   +_LP0 = _LP0 + (     1.1253806716991 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.1253806716991 * _TEMP);
1328764   +
1328765   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1328766   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1328767   +_LP0 = _LP0 + (    0.71729818686875 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.71729818686875 * _TEMP);
1328768   +
1328769   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1328770   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1328771   +_LP0 = _LP0 + (    0.99094794685674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.99094794685674 * _TEMP);
1328772   +
1328773   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1328774   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1328775   +_LP0 = _LP0 + (    0.00024460251782 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00024460251782 * _TEMP);
1328776   +
1328777   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1328778   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1328779   +_LP0 = _LP0 + (   -0.09585871705652 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.09585871705652 * _TEMP);
1328780   +
1328781   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1328782   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1328783   +_LP0 = _LP0 + (   -1.10694522398045 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.10694522398045 * _TEMP);
1328784   +
1328785   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1328786   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1328787   +_TEMP =    -7.58770818124898 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -7.58770818124898 + _LP0;
1328788   +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
1328789   +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
1328790   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
1328791   +end;
MPRINT(EM_DIAGRAM):   end;
1328792   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
1328793   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1328794   +
1328795   +REGDR1:
1328796   +
1328797   +*** Residuals;
MPRINT(EM_DIAGRAM):   REGDR1: *** Residuals;
1328798   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
1328799   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1328800   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1328801   +end;
MPRINT(EM_DIAGRAM):   end;
1328802   +else do;
MPRINT(EM_DIAGRAM):   else do;
1328803   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1328804   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1328805   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
1328806   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
1328807   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
1328808   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
1328809   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
1328810   +   end;
MPRINT(EM_DIAGRAM):   end;
1328811   +end;
MPRINT(EM_DIAGRAM):   end;
1328812   +
1328813   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
1328814   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1328815   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1328816   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1328817   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1328818   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1328819   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1328820   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1328821   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1328822   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1328823   +end;
MPRINT(EM_DIAGRAM):   end;
1328824   +I_DepVar = REGDRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REGDRF[_IY];
1328825   +U_DepVar = REGDRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REGDRU[_IY];
1328826   +
1328827   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1328828   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1328829   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1328830   +* Renaming variables for Reg;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg;
1328831   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1328832   +* Renaming Posterior variables for Reg;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg;
1328833   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1328834   +drop Reg_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg_P_DepVar1;
1328835   +Reg_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg_P_DepVar1 = P_DepVar1;
1328836   +drop Reg_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg_P_DepVar0;
1328837   +Reg_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg_P_DepVar0 = P_DepVar0;
1328838   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1328839   +* Renaming _WARN_ variable for Reg;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg;
1328840   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1328841   +length Reg_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg_WARN_ $4;
1328842   +drop Reg_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg_WARN_;
1328843   +Reg_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg_WARN_ = _WARN_;
1328844   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1328845   +* Ensmbl: Scoring Code of model 3 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl: Scoring Code of model 3 of 10;
1328846   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1328847   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1328848   +* TOOL: Decision Tree;
MPRINT(EM_DIAGRAM):   * TOOL: Decision Tree;
1328849   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1328850   +* NODE: Tree;
MPRINT(EM_DIAGRAM):   * NODE: Tree;
1328851   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1328852   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1328853   +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
1328854   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1328855   +
1328856   +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
1328857   +LENGTH F_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH F_DepVar $ 12;
1328858   +LENGTH I_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH I_DepVar $ 12;
1328859   +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
1328860   +
1328861   +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
1328862   +LABEL _NODE_  = 'Node' ;
MPRINT(EM_DIAGRAM):   LABEL _NODE_ = 'Node' ;
1328863   +LABEL _LEAF_  = 'Leaf' ;
MPRINT(EM_DIAGRAM):   LABEL _LEAF_ = 'Leaf' ;
1328864   +LABEL P_DepVar0  = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar0 = 'Predicted: DepVar=0' ;
1328865   +LABEL P_DepVar1  = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar1 = 'Predicted: DepVar=1' ;
1328866   +LABEL Q_DepVar0  = 'Unadjusted P: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
1328867   +LABEL Q_DepVar1  = 'Unadjusted P: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
1328868   +LABEL V_DepVar0  = 'Validated: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar0 = 'Validated: DepVar=0' ;
1328869   +LABEL V_DepVar1  = 'Validated: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar1 = 'Validated: DepVar=1' ;
1328870   +LABEL R_DepVar0  = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL R_DepVar0 = 'Residual: DepVar=0' ;
1328871   +LABEL R_DepVar1  = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL R_DepVar1 = 'Residual: DepVar=1' ;
1328872   +LABEL F_DepVar  = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL F_DepVar = 'From: DepVar' ;
1328873   +LABEL I_DepVar  = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL I_DepVar = 'Into: DepVar' ;
1328874   +LABEL U_DepVar  = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL U_DepVar = 'Unnormalized Into: DepVar' ;
1328875   +LABEL _WARN_  = 'Warnings' ;
MPRINT(EM_DIAGRAM):   LABEL _WARN_ = 'Warnings' ;
1328876   +
1328877   +
1328878   +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
1328879   +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
1328880   +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
1328881   +LENGTH _ARBFMT_8 $      8; DROP _ARBFMT_8;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_8 $ 8;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_8;
1328882   +_ARBFMT_8 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_8 = ' ';
1328883   +
1328884   +
1328885   +_ARBFMT_12 = PUT( DepVar , BEST.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( DepVar , BEST.);
1328886   + %DMNORMCP( _ARBFMT_12, F_DepVar );
MPRINT(DMNORMCP):   F_DepVar=dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1328887   +
1328888   +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
1328889   +IF  NOT MISSING(AcceptedCmpTotal ) AND
1328890   +                   0.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 0.5 <= AcceptedCmpTotal THEN DO;
1328891   +  IF  NOT MISSING(Recency ) AND
1328892   +    Recency  <                 38.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Recency ) AND Recency < 38.5 THEN DO;
1328893   +    IF  NOT MISSING(AcceptedCmpTotal ) AND
1328894   +                       1.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 1.5 <= AcceptedCmpTotal THEN DO;
1328895   +      _NODE_  =                   13;
MPRINT(EM_DIAGRAM):   _NODE_ = 13;
1328896   +      _LEAF_  =                   14;
MPRINT(EM_DIAGRAM):   _LEAF_ = 14;
1328897   +      P_DepVar0  =     0.05263157894736;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.05263157894736;
1328898   +      P_DepVar1  =     0.94736842105263;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.94736842105263;
1328899   +      Q_DepVar0  =     0.05263157894736;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.05263157894736;
1328900   +      Q_DepVar1  =     0.94736842105263;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.94736842105263;
1328901   +      V_DepVar0  =                    0;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0;
1328902   +      V_DepVar1  =                    1;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 1;
1328903   +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1328904   +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1328905   +      END;
MPRINT(EM_DIAGRAM):   END;
1328906   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1328907   +      _ARBFMT_8 = PUT( Marital_Status , $8.);
MPRINT(EM_DIAGRAM):   _ARBFMT_8 = PUT( Marital_Status , $8.);
1328908   +       %DMNORMIP( _ARBFMT_8);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1328909   +      IF _ARBFMT_8 IN ('WIDOW' ,'DIVORCED' ,'SINGLE' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_8 IN ('WIDOW' ,'DIVORCED' ,'SINGLE' ) THEN DO;
1328910   +        _NODE_  =                   23;
MPRINT(EM_DIAGRAM):   _NODE_ = 23;
1328911   +        _LEAF_  =                   13;
MPRINT(EM_DIAGRAM):   _LEAF_ = 13;
1328912   +        P_DepVar0  =      0.2258064516129;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.2258064516129;
1328913   +        P_DepVar1  =     0.77419354838709;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.77419354838709;
1328914   +        Q_DepVar0  =      0.2258064516129;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.2258064516129;
1328915   +        Q_DepVar1  =     0.77419354838709;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.77419354838709;
1328916   +        V_DepVar0  =     0.41935483870967;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.41935483870967;
1328917   +        V_DepVar1  =     0.58064516129032;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.58064516129032;
1328918   +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1328919   +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1328920   +        END;
MPRINT(EM_DIAGRAM):   END;
1328921   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1328922   +        IF  NOT MISSING(NumStorePurchases ) AND
1328923   +          NumStorePurchases  <                  6.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumStorePurchases ) AND NumStorePurchases < 6.5 THEN DO;
1328924   +          IF  NOT MISSING(NumWebVisitsMonth ) AND
1328925   +            NumWebVisitsMonth  <                  5.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumWebVisitsMonth ) AND NumWebVisitsMonth < 5.5 THEN DO;
1328926   +            _NODE_  =                   56;
MPRINT(EM_DIAGRAM):   _NODE_ = 56;
1328927   +            _LEAF_  =                   10;
MPRINT(EM_DIAGRAM):   _LEAF_ = 10;
1328928   +            P_DepVar0  =     0.61111111111111;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.61111111111111;
1328929   +            P_DepVar1  =     0.38888888888888;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.38888888888888;
1328930   +            Q_DepVar0  =     0.61111111111111;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.61111111111111;
1328931   +            Q_DepVar1  =     0.38888888888888;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.38888888888888;
1328932   +            V_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.66666666666666;
1328933   +            V_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.33333333333333;
1328934   +            I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1328935   +            U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1328936   +            END;
MPRINT(EM_DIAGRAM):   END;
1328937   +          ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1328938   +            _NODE_  =                   57;
MPRINT(EM_DIAGRAM):   _NODE_ = 57;
1328939   +            _LEAF_  =                   11;
MPRINT(EM_DIAGRAM):   _LEAF_ = 11;
1328940   +            P_DepVar0  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.14285714285714;
1328941   +            P_DepVar1  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.85714285714285;
1328942   +            Q_DepVar0  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.14285714285714;
1328943   +            Q_DepVar1  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.85714285714285;
1328944   +            V_DepVar0  =      0.3076923076923;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.3076923076923;
1328945   +            V_DepVar1  =     0.69230769230769;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.69230769230769;
1328946   +            I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1328947   +            U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1328948   +            END;
MPRINT(EM_DIAGRAM):   END;
1328949   +          END;
MPRINT(EM_DIAGRAM):   END;
1328950   +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1328951   +          _NODE_  =                   41;
MPRINT(EM_DIAGRAM):   _NODE_ = 41;
1328952   +          _LEAF_  =                   12;
MPRINT(EM_DIAGRAM):   _LEAF_ = 12;
1328953   +          P_DepVar0  =     0.74545454545454;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.74545454545454;
1328954   +          P_DepVar1  =     0.25454545454545;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.25454545454545;
1328955   +          Q_DepVar0  =     0.74545454545454;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.74545454545454;
1328956   +          Q_DepVar1  =     0.25454545454545;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.25454545454545;
1328957   +          V_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.66666666666666;
1328958   +          V_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.33333333333333;
1328959   +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1328960   +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1328961   +          END;
MPRINT(EM_DIAGRAM):   END;
1328962   +        END;
MPRINT(EM_DIAGRAM):   END;
1328963   +      END;
MPRINT(EM_DIAGRAM):   END;
1328964   +    END;
MPRINT(EM_DIAGRAM):   END;
1328965   +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1328966   +    IF  NOT MISSING(AcceptedCmpTotal ) AND
1328967   +                       2.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 2.5 <= AcceptedCmpTotal THEN DO;
1328968   +      _NODE_  =                   15;
MPRINT(EM_DIAGRAM):   _NODE_ = 15;
1328969   +      _LEAF_  =                   16;
MPRINT(EM_DIAGRAM):   _LEAF_ = 16;
1328970   +      P_DepVar0  =      0.3103448275862;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.3103448275862;
1328971   +      P_DepVar1  =     0.68965517241379;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.68965517241379;
1328972   +      Q_DepVar0  =      0.3103448275862;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.3103448275862;
1328973   +      Q_DepVar1  =     0.68965517241379;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.68965517241379;
1328974   +      V_DepVar0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.33333333333333;
1328975   +      V_DepVar1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.66666666666666;
1328976   +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1328977   +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1328978   +      END;
MPRINT(EM_DIAGRAM):   END;
1328979   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1328980   +      _NODE_  =                   14;
MPRINT(EM_DIAGRAM):   _NODE_ = 14;
1328981   +      _LEAF_  =                   15;
MPRINT(EM_DIAGRAM):   _LEAF_ = 15;
1328982   +      P_DepVar0  =     0.82562277580071;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.82562277580071;
1328983   +      P_DepVar1  =     0.17437722419928;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.17437722419928;
1328984   +      Q_DepVar0  =     0.82562277580071;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.82562277580071;
1328985   +      Q_DepVar1  =     0.17437722419928;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.17437722419928;
1328986   +      V_DepVar0  =     0.81818181818181;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.81818181818181;
1328987   +      V_DepVar1  =     0.18181818181818;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.18181818181818;
1328988   +      I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1328989   +      U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1328990   +      END;
MPRINT(EM_DIAGRAM):   END;
1328991   +    END;
MPRINT(EM_DIAGRAM):   END;
1328992   +  END;
MPRINT(EM_DIAGRAM):   END;
1328993   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1328994   +  IF  NOT MISSING(Recency ) AND
1328995   +    Recency  <                 32.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Recency ) AND Recency < 32.5 THEN DO;
1328996   +    IF  NOT MISSING(NumCatalogPurchases ) AND
1328997   +                       5.5 <= NumCatalogPurchases  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumCatalogPurchases ) AND 5.5 <= NumCatalogPurchases THEN 
DO;
1328998   +      IF  NOT MISSING(NumStorePurchases ) AND
1328999   +                         7.5 <= NumStorePurchases  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumStorePurchases ) AND 7.5 <= NumStorePurchases THEN DO;
1329000   +        IF  NOT MISSING(RFMstat ) AND
1329001   +              1964.32692307692 <= RFMstat  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RFMstat ) AND 1964.32692307692 <= RFMstat THEN DO;
1329002   +          _NODE_  =                   37;
MPRINT(EM_DIAGRAM):   _NODE_ = 37;
1329003   +          _LEAF_  =                    8;
MPRINT(EM_DIAGRAM):   _LEAF_ = 8;
1329004   +          P_DepVar0  =     0.42857142857142;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.42857142857142;
1329005   +          P_DepVar1  =     0.57142857142857;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.57142857142857;
1329006   +          Q_DepVar0  =     0.42857142857142;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.42857142857142;
1329007   +          Q_DepVar1  =     0.57142857142857;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.57142857142857;
1329008   +          V_DepVar0  =     0.44444444444444;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.44444444444444;
1329009   +          V_DepVar1  =     0.55555555555555;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.55555555555555;
1329010   +          I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1329011   +          U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1329012   +          END;
MPRINT(EM_DIAGRAM):   END;
1329013   +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1329014   +          _NODE_  =                   36;
MPRINT(EM_DIAGRAM):   _NODE_ = 36;
1329015   +          _LEAF_  =                    7;
MPRINT(EM_DIAGRAM):   _LEAF_ = 7;
1329016   +          P_DepVar0  =                    1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 1;
1329017   +          P_DepVar1  =                    0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0;
1329018   +          Q_DepVar0  =                    1;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 1;
1329019   +          Q_DepVar1  =                    0;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0;
1329020   +          V_DepVar0  =     0.69230769230769;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.69230769230769;
1329021   +          V_DepVar1  =      0.3076923076923;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.3076923076923;
1329022   +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1329023   +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1329024   +          END;
MPRINT(EM_DIAGRAM):   END;
1329025   +        END;
MPRINT(EM_DIAGRAM):   END;
1329026   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1329027   +        IF  NOT MISSING(MntFishProducts ) AND
1329028   +          MntFishProducts  <                   26 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntFishProducts ) AND MntFishProducts < 26 THEN DO;
1329029   +          _NODE_  =                   34;
MPRINT(EM_DIAGRAM):   _NODE_ = 34;
1329030   +          _LEAF_  =                    5;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
1329031   +          P_DepVar0  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.71428571428571;
1329032   +          P_DepVar1  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.28571428571428;
1329033   +          Q_DepVar0  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.71428571428571;
1329034   +          Q_DepVar1  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.28571428571428;
1329035   +          V_DepVar0  =                  0.8;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.8;
1329036   +          V_DepVar1  =                  0.2;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.2;
1329037   +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1329038   +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1329039   +          END;
MPRINT(EM_DIAGRAM):   END;
1329040   +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1329041   +          _NODE_  =                   35;
MPRINT(EM_DIAGRAM):   _NODE_ = 35;
1329042   +          _LEAF_  =                    6;
MPRINT(EM_DIAGRAM):   _LEAF_ = 6;
1329043   +          P_DepVar0  =     0.13793103448275;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.13793103448275;
1329044   +          P_DepVar1  =     0.86206896551724;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.86206896551724;
1329045   +          Q_DepVar0  =     0.13793103448275;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.13793103448275;
1329046   +          Q_DepVar1  =     0.86206896551724;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.86206896551724;
1329047   +          V_DepVar0  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.14285714285714;
1329048   +          V_DepVar1  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.85714285714285;
1329049   +          I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1329050   +          U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1329051   +          END;
MPRINT(EM_DIAGRAM):   END;
1329052   +        END;
MPRINT(EM_DIAGRAM):   END;
1329053   +      END;
MPRINT(EM_DIAGRAM):   END;
1329054   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1329055   +      IF  NOT MISSING(NumWebVisitsMonth ) AND
1329056   +                         7.5 <= NumWebVisitsMonth  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumWebVisitsMonth ) AND 7.5 <= NumWebVisitsMonth THEN DO;
1329057   +        IF  NOT MISSING(NumCatalogPurchases ) AND
1329058   +                           0.5 <= NumCatalogPurchases  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumCatalogPurchases ) AND 0.5 <= NumCatalogPurchases THEN 
DO;
1329059   +          IF  NOT MISSING(Kidhome ) AND
1329060   +            Kidhome  <                  0.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Kidhome ) AND Kidhome < 0.5 THEN DO;
1329061   +            _NODE_  =                   52;
MPRINT(EM_DIAGRAM):   _NODE_ = 52;
1329062   +            _LEAF_  =                    3;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
1329063   +            P_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.66666666666666;
1329064   +            P_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.33333333333333;
1329065   +            Q_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.66666666666666;
1329066   +            Q_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.33333333333333;
1329067   +            V_DepVar0  =                  0.6;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.6;
1329068   +            V_DepVar1  =                  0.4;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.4;
1329069   +            I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1329070   +            U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1329071   +            END;
MPRINT(EM_DIAGRAM):   END;
1329072   +          ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1329073   +            _NODE_  =                   53;
MPRINT(EM_DIAGRAM):   _NODE_ = 53;
1329074   +            _LEAF_  =                    4;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
1329075   +            P_DepVar0  =     0.26470588235294;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.26470588235294;
1329076   +            P_DepVar1  =     0.73529411764705;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.73529411764705;
1329077   +            Q_DepVar0  =     0.26470588235294;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.26470588235294;
1329078   +            Q_DepVar1  =     0.73529411764705;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.73529411764705;
1329079   +            V_DepVar0  =     0.21428571428571;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.21428571428571;
1329080   +            V_DepVar1  =     0.78571428571428;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.78571428571428;
1329081   +            I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1329082   +            U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1329083   +            END;
MPRINT(EM_DIAGRAM):   END;
1329084   +          END;
MPRINT(EM_DIAGRAM):   END;
1329085   +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1329086   +          _NODE_  =                   32;
MPRINT(EM_DIAGRAM):   _NODE_ = 32;
1329087   +          _LEAF_  =                    2;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
1329088   +          P_DepVar0  =     0.81428571428571;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.81428571428571;
1329089   +          P_DepVar1  =     0.18571428571428;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.18571428571428;
1329090   +          Q_DepVar0  =     0.81428571428571;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.81428571428571;
1329091   +          Q_DepVar1  =     0.18571428571428;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.18571428571428;
1329092   +          V_DepVar0  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.71428571428571;
1329093   +          V_DepVar1  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.28571428571428;
1329094   +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1329095   +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1329096   +          END;
MPRINT(EM_DIAGRAM):   END;
1329097   +        END;
MPRINT(EM_DIAGRAM):   END;
1329098   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1329099   +        _NODE_  =                   16;
MPRINT(EM_DIAGRAM):   _NODE_ = 16;
1329100   +        _LEAF_  =                    1;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
1329101   +        P_DepVar0  =     0.90114942528735;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.90114942528735;
1329102   +        P_DepVar1  =     0.09885057471264;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.09885057471264;
1329103   +        Q_DepVar0  =     0.90114942528735;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.90114942528735;
1329104   +        Q_DepVar1  =     0.09885057471264;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.09885057471264;
1329105   +        V_DepVar0  =      0.8848167539267;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.8848167539267;
1329106   +        V_DepVar1  =     0.11518324607329;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.11518324607329;
1329107   +        I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1329108   +        U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1329109   +        END;
MPRINT(EM_DIAGRAM):   END;
1329110   +      END;
MPRINT(EM_DIAGRAM):   END;
1329111   +    END;
MPRINT(EM_DIAGRAM):   END;
1329112   +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1329113   +    _NODE_  =                    5;
MPRINT(EM_DIAGRAM):   _NODE_ = 5;
1329114   +    _LEAF_  =                    9;
MPRINT(EM_DIAGRAM):   _LEAF_ = 9;
1329115   +    P_DepVar0  =     0.98042414355628;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.98042414355628;
1329116   +    P_DepVar1  =     0.01957585644371;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.01957585644371;
1329117   +    Q_DepVar0  =     0.98042414355628;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.98042414355628;
1329118   +    Q_DepVar1  =     0.01957585644371;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.01957585644371;
1329119   +    V_DepVar0  =     0.98795180722891;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.98795180722891;
1329120   +    V_DepVar1  =     0.01204819277108;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.01204819277108;
1329121   +    I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1329122   +    U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1329123   +    END;
MPRINT(EM_DIAGRAM):   END;
1329124   +  END;
MPRINT(EM_DIAGRAM):   END;
1329125   +
1329126   +*****  RESIDUALS R_ *************;
MPRINT(EM_DIAGRAM):   ***** RESIDUALS R_ *************;
1329127   +IF  F_DepVar  NE '0'
1329128   +AND F_DepVar  NE '1'  THEN DO;
MPRINT(EM_DIAGRAM):   IF F_DepVar NE '0' AND F_DepVar NE '1' THEN DO;
1329129   +        R_DepVar0  = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1329130   +        R_DepVar1  = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1329131   + END;
MPRINT(EM_DIAGRAM):   END;
1329132   + ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1329133   +       R_DepVar0  =  -P_DepVar0 ;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0 ;
1329134   +       R_DepVar1  =  -P_DepVar1 ;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1 ;
1329135   +       SELECT( F_DepVar  );
MPRINT(EM_DIAGRAM):   SELECT( F_DepVar );
1329136   +          WHEN( '0'  ) R_DepVar0  = R_DepVar0  +1;
MPRINT(EM_DIAGRAM):   WHEN( '0' ) R_DepVar0 = R_DepVar0 +1;
1329137   +          WHEN( '1'  ) R_DepVar1  = R_DepVar1  +1;
MPRINT(EM_DIAGRAM):   WHEN( '1' ) R_DepVar1 = R_DepVar1 +1;
1329138   +       END;
MPRINT(EM_DIAGRAM):   END;
1329139   + END;
MPRINT(EM_DIAGRAM):   END;
1329140   +
1329141   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1329142   +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
1329143   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1329144   +drop _LEAF_;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
1329145   +* Renaming variables for Tree;
MPRINT(EM_DIAGRAM):   * Renaming variables for Tree;
1329146   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1329147   +* Renaming Posterior variables for Tree;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Tree;
1329148   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1329149   +drop Tree_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Tree_P_DepVar1;
1329150   +Tree_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Tree_P_DepVar1 = P_DepVar1;
1329151   +drop Tree_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Tree_P_DepVar0;
1329152   +Tree_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Tree_P_DepVar0 = P_DepVar0;
1329153   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1329154   +* Renaming _WARN_ variable for Tree;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Tree;
1329155   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1329156   +length Tree_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Tree_WARN_ $4;
1329157   +drop Tree_WARN_;
MPRINT(EM_DIAGRAM):   drop Tree_WARN_;
1329158   +Tree_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Tree_WARN_ = _WARN_;
1329159   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1329160   +* Ensmbl: Scoring Code of model 4 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl: Scoring Code of model 4 of 10;
1329161   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1329162   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1329163   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1329164   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1329165   +* NODE: Neural4;
MPRINT(EM_DIAGRAM):   * NODE: Neural4;
1329166   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1329167   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1329168   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1329169   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1329170   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1329171   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1329172   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1329173   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1329174   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1329175   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1329176   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1329177   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1329178   +LENGTH _WARN_ $4
1329179   +      F_DepVar  $ 12
1329180   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1329181   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1329182   +
1329183   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1329184   +
1329185   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1329186   +
1329187   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1329188   +
1329189   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1329190   +
1329191   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1329192   +
1329193   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1329194   +
1329195   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1329196   +
1329197   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1329198   +
1329199   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1329200   +
1329201   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1329202   +
1329203   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1329204   +
1329205   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1329206   +
1329207   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1329208   +
1329209   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1329210   +
1329211   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1329212   +
1329213   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1329214   +
1329215   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1329216   +
1329217   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1329218   +
1329219   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1329220   +
1329221   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1329222   +
1329223   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1329224   +
1329225   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1329226   +
1329227   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1329228   +
1329229   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1329230   +
1329231   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1329232   +
1329233   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1329234   +
1329235   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1329236   +
1329237   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1329238   +
1329239   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1329240   +
1329241   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1329242   +
1329243   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1329244   +
1329245   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1329246   +
1329247   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1329248   +
1329249   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1329250   +
1329251   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1329252   +
1329253   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1329254   +
1329255   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1329256   +
1329257   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1329258   +
1329259   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1329260   +
1329261   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1329262   +
1329263   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1329264   +
1329265   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1329266   +
1329267   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1329268   +
1329269   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1329270   +
1329271   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1329272   +
1329273   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1329274   +
1329275   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1329276   +
1329277   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1329278   +
1329279   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1329280   +
1329281   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1329282   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1329283   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1329284   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1329285   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1329286   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1329287   +end;
MPRINT(EM_DIAGRAM):   end;
1329288   +else do;
MPRINT(EM_DIAGRAM):   else do;
1329289   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1329290   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1329291   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1329292   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1329293   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1329294   +   end;
MPRINT(EM_DIAGRAM):   end;
1329295   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1329296   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1329297   +   end;
MPRINT(EM_DIAGRAM):   end;
1329298   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1329299   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1329300   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1329301   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1329302   +   end;
MPRINT(EM_DIAGRAM):   end;
1329303   +end;
MPRINT(EM_DIAGRAM):   end;
1329304   +
1329305   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1329306   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1329307   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1329308   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1329309   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1329310   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1329311   +end;
MPRINT(EM_DIAGRAM):   end;
1329312   +else do;
MPRINT(EM_DIAGRAM):   else do;
1329313   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1329314   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1329315   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1329316   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1329317   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1329318   +   end;
MPRINT(EM_DIAGRAM):   end;
1329319   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1329320   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1329321   +   end;
MPRINT(EM_DIAGRAM):   end;
1329322   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1329323   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1329324   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1329325   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1329326   +   end;
MPRINT(EM_DIAGRAM):   end;
1329327   +end;
MPRINT(EM_DIAGRAM):   end;
1329328   +
1329329   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1329330   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1329331   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1329332   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1329333   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1329334   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1329335   +end;
MPRINT(EM_DIAGRAM):   end;
1329336   +else do;
MPRINT(EM_DIAGRAM):   else do;
1329337   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1329338   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1329339   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1329340   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1329341   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1329342   +   end;
MPRINT(EM_DIAGRAM):   end;
1329343   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1329344   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1329345   +   end;
MPRINT(EM_DIAGRAM):   end;
1329346   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1329347   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1329348   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1329349   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1329350   +   end;
MPRINT(EM_DIAGRAM):   end;
1329351   +end;
MPRINT(EM_DIAGRAM):   end;
1329352   +
1329353   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1329354   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1329355   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1329356   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1329357   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1329358   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1329359   +end;
MPRINT(EM_DIAGRAM):   end;
1329360   +else do;
MPRINT(EM_DIAGRAM):   else do;
1329361   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1329362   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1329363   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1329364   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1329365   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1329366   +   end;
MPRINT(EM_DIAGRAM):   end;
1329367   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1329368   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1329369   +   end;
MPRINT(EM_DIAGRAM):   end;
1329370   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1329371   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1329372   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1329373   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1329374   +   end;
MPRINT(EM_DIAGRAM):   end;
1329375   +end;
MPRINT(EM_DIAGRAM):   end;
1329376   +
1329377   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1329378   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1329379   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1329380   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1329381   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1329382   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1329383   +end;
MPRINT(EM_DIAGRAM):   end;
1329384   +else do;
MPRINT(EM_DIAGRAM):   else do;
1329385   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1329386   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1329387   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1329388   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1329389   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1329390   +   end;
MPRINT(EM_DIAGRAM):   end;
1329391   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1329392   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1329393   +   end;
MPRINT(EM_DIAGRAM):   end;
1329394   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1329395   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1329396   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1329397   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1329398   +   end;
MPRINT(EM_DIAGRAM):   end;
1329399   +end;
MPRINT(EM_DIAGRAM):   end;
1329400   +
1329401   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1329402   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1329403   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1329404   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1329405   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1329406   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1329407   +end;
MPRINT(EM_DIAGRAM):   end;
1329408   +else do;
MPRINT(EM_DIAGRAM):   else do;
1329409   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1329410   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1329411   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1329412   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1329413   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1329414   +   end;
MPRINT(EM_DIAGRAM):   end;
1329415   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1329416   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1329417   +   end;
MPRINT(EM_DIAGRAM):   end;
1329418   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1329419   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1329420   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1329421   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1329422   +   end;
MPRINT(EM_DIAGRAM):   end;
1329423   +end;
MPRINT(EM_DIAGRAM):   end;
1329424   +
1329425   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1329426   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1329427   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1329428   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1329429   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1329430   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1329431   +end;
MPRINT(EM_DIAGRAM):   end;
1329432   +else do;
MPRINT(EM_DIAGRAM):   else do;
1329433   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1329434   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1329435   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1329436   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1329437   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1329438   +   end;
MPRINT(EM_DIAGRAM):   end;
1329439   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1329440   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1329441   +   end;
MPRINT(EM_DIAGRAM):   end;
1329442   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1329443   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1329444   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1329445   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1329446   +   end;
MPRINT(EM_DIAGRAM):   end;
1329447   +end;
MPRINT(EM_DIAGRAM):   end;
1329448   +
1329449   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1329450   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1329451   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1329452   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1329453   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1329454   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1329455   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1329456   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1329457   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1329458   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1329459   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1329460   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1329461   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1329462   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1329463   +end;
MPRINT(EM_DIAGRAM):   end;
1329464   +else do;
MPRINT(EM_DIAGRAM):   else do;
1329465   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1329466   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1329467   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1329468   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1329469   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1329470   +   end;
MPRINT(EM_DIAGRAM):   end;
1329471   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1329472   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1329473   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1329474   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1329475   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1329476   +   end;
MPRINT(EM_DIAGRAM):   end;
1329477   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1329478   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1329479   +   end;
MPRINT(EM_DIAGRAM):   end;
1329480   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1329481   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1329482   +   end;
MPRINT(EM_DIAGRAM):   end;
1329483   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1329484   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1329485   +   end;
MPRINT(EM_DIAGRAM):   end;
1329486   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1329487   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1329488   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1329489   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1329490   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1329491   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1329492   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1329493   +   end;
MPRINT(EM_DIAGRAM):   end;
1329494   +end;
MPRINT(EM_DIAGRAM):   end;
1329495   +
1329496   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1329497   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1329498   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1329499   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1329500   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1329501   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1329502   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1329503   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1329504   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1329505   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1329506   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1329507   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1329508   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1329509   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1329510   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1329511   +end;
MPRINT(EM_DIAGRAM):   end;
1329512   +else do;
MPRINT(EM_DIAGRAM):   else do;
1329513   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1329514   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1329515   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1329516   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1329517   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1329518   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1329519   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1329520   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1329521   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1329522   +         end;
MPRINT(EM_DIAGRAM):   end;
1329523   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1329524   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1329525   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1329526   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1329527   +            end;
MPRINT(EM_DIAGRAM):   end;
1329528   +         end;
MPRINT(EM_DIAGRAM):   end;
1329529   +      end;
MPRINT(EM_DIAGRAM):   end;
1329530   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1329531   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1329532   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1329533   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1329534   +         end;
MPRINT(EM_DIAGRAM):   end;
1329535   +      end;
MPRINT(EM_DIAGRAM):   end;
1329536   +   end;
MPRINT(EM_DIAGRAM):   end;
1329537   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1329538   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1329539   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1329540   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1329541   +      end;
MPRINT(EM_DIAGRAM):   end;
1329542   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1329543   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1329544   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1329545   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1329546   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1329547   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1329548   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1329549   +         end;
MPRINT(EM_DIAGRAM):   end;
1329550   +      end;
MPRINT(EM_DIAGRAM):   end;
1329551   +   end;
MPRINT(EM_DIAGRAM):   end;
1329552   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1329553   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1329554   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1329555   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1329556   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1329557   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1329558   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1329559   +   end;
MPRINT(EM_DIAGRAM):   end;
1329560   +end;
MPRINT(EM_DIAGRAM):   end;
1329561   +
1329562   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1329563   +*** Checking missing input Interval
1329564   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1329565   +
1329566   +IF NMISS(
1329567   +   AcceptedCmpTotal ,
1329568   +   Age ,
1329569   +   Frq ,
1329570   +   Income ,
1329571   +   Kidhome ,
1329572   +   Mnt ,
1329573   +   MntFishProducts ,
1329574   +   MntFruits ,
1329575   +   MntGoldProds ,
1329576   +   MntMeatProducts ,
1329577   +   MntSweetProducts ,
1329578   +   MntWines ,
1329579   +   MonthsAsCustomer ,
1329580   +   NumCatalogPurchases ,
1329581   +   NumDealsPurchases ,
1329582   +   NumDistPurchases ,
1329583   +   NumStorePurchases ,
1329584   +   NumWebPurchases ,
1329585   +   NumWebVisitsMonth ,
1329586   +   RFMstat ,
1329587   +   RMntFrq ,
1329588   +   Recency ,
1329589   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1329590   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1329591   +
1329592   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1329593   +END;
MPRINT(EM_DIAGRAM):   END;
1329594   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1329595   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1329596   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1329597   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1329598   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1329599   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1329600   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1329601   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1329602   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1329603   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1329604   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1329605   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1329606   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1329607   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1329608   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1329609   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1329610   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1329611   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1329612   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1329613   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1329614   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1329615   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1329616   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1329617   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1329618   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1329619   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1329620   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1329621   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1329622   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1329623   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1329624   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1329625   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1329626   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1329627   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1329628   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1329629   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1329630   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1329631   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1329632   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1329633   +END;
MPRINT(EM_DIAGRAM):   END;
1329634   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1329635   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1329636   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1329637   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1329638   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1329639   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1329640   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1329641   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1329642   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1329643   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1329644   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1329645   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1329646   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1329647   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1329648   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1329649   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1329650   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1329651   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1329652   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1329653   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1329654   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1329655   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1329656   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1329657   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1329658   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1329659   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1329660   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1329661   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1329662   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1329663   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1329664   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1329665   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1329666   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1329667   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1329668   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1329669   +   ELSE S_NumCatalogPurchases
1329670   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1329671   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1329672   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1329673   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1329674   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1329675   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1329676   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1329677   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1329678   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1329679   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1329680   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1329681   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1329682   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1329683   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1329684   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1329685   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1329686   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1329687   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1329688   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1329689   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1329690   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1329691   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1329692   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1329693   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1329694   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1329695   +END;
MPRINT(EM_DIAGRAM):   END;
1329696   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1329697   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1329698   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1329699   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1329700   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1329701   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1329702   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1329703   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1329704   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1329705   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1329706   +   H11  =    -0.84299355418982 * S_AcceptedCmpTotal  +     0.01354424462165 *
1329707   +        S_Age  +     0.26356367995208 * S_Frq  +    -0.22651244750456 *
1329708   +        S_Income  +    -0.23050240180524 * S_Kidhome
1329709   +          +    -1.06664092571354 * S_Mnt  +     0.46271649725684 *
1329710   +        S_MntFishProducts  +     0.29675940813656 * S_MntFruits
1329711   +          +     0.11295035964093 * S_MntGoldProds  +    -4.93303695297431 *
1329712   +        S_MntMeatProducts  +    -0.54183850324086 * S_MntSweetProducts
1329713   +          +     1.44837072773075 * S_MntWines  +     0.02861081928648 *
1329714   +        S_MonthsAsCustomer  +    -1.87075238979838 * S_NumCatalogPurchases
1329715   +          +    -1.32257303635072 * S_NumDealsPurchases
1329716   +          +    -0.54480870554989 * S_NumDistPurchases
1329717   +          +     1.24793709956495 * S_NumStorePurchases
1329718   +          +      1.7974198103915 * S_NumWebPurchases
1329719   +          +    -0.94706410495328 * S_NumWebVisitsMonth
1329720   +          +    -0.08194447980826 * S_RFMstat  +     0.59486634525204 *
1329721   +        S_RMntFrq  +     0.75191254776333 * S_Recency
1329722   +          +     0.13719529324408 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.84299355418982 * S_AcceptedCmpTotal + 0.01354424462165 * S_Age 
+ 0.26356367995208 * S_Frq + -0.22651244750456 * S_Income + -0.23050240180524 * S_Kidhome + 
-1.06664092571354 * S_Mnt + 0.46271649725684 * S_MntFishProducts + 0.29675940813656 * 
S_MntFruits + 0.11295035964093 * S_MntGoldProds + -4.93303695297431 * S_MntMeatProducts + 
-0.54183850324086 * S_MntSweetProducts + 1.44837072773075 * S_MntWines + 0.02861081928648 * 
S_MonthsAsCustomer + -1.87075238979838 * S_NumCatalogPurchases + -1.32257303635072 * 
S_NumDealsPurchases + -0.54480870554989 * S_NumDistPurchases + 1.24793709956495 * 
S_NumStorePurchases + 1.7974198103915 * S_NumWebPurchases + -0.94706410495328 * 
S_NumWebVisitsMonth + -0.08194447980826 * S_RFMstat + 0.59486634525204 * S_RMntFrq + 
0.75191254776333 * S_Recency + 0.13719529324408 * S_Teenhome ;
1329723   +   H12  =     0.19794895997964 * S_AcceptedCmpTotal  +    -0.04275283557766 *
1329724   +        S_Age  +    -0.56824925508231 * S_Frq  +     0.77692983182219 *
1329725   +        S_Income  +    -0.78793784980656 * S_Kidhome
1329726   +          +     0.04472047240299 * S_Mnt  +    -0.04688509126909 *
1329727   +        S_MntFishProducts  +    -0.00374619740046 * S_MntFruits
1329728   +          +     0.04963586007888 * S_MntGoldProds  +      1.0706121357066 *
1329729   +        S_MntMeatProducts  +     -0.1297171300067 * S_MntSweetProducts
1329730   +          +    -0.13703855748888 * S_MntWines  +     0.12672829255314 *
1329731   +        S_MonthsAsCustomer  +     0.72932641344764 * S_NumCatalogPurchases
1329732   +          +     0.70535680060775 * S_NumDealsPurchases
1329733   +          +    -0.15561838359391 * S_NumDistPurchases
1329734   +          +    -0.86545647977011 * S_NumStorePurchases
1329735   +          +    -0.78435825863867 * S_NumWebPurchases
1329736   +          +     1.76113949975149 * S_NumWebVisitsMonth
1329737   +          +     0.12430819021552 * S_RFMstat  +    -1.23324881442206 *
1329738   +        S_RMntFrq  +    -1.54576826012241 * S_Recency
1329739   +          +     -0.4369755549417 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.19794895997964 * S_AcceptedCmpTotal + -0.04275283557766 * S_Age 
+ -0.56824925508231 * S_Frq + 0.77692983182219 * S_Income + -0.78793784980656 * S_Kidhome + 
0.04472047240299 * S_Mnt + -0.04688509126909 * S_MntFishProducts + -0.00374619740046 * 
S_MntFruits + 0.04963586007888 * S_MntGoldProds + 1.0706121357066 * S_MntMeatProducts + 
-0.1297171300067 * S_MntSweetProducts + -0.13703855748888 * S_MntWines + 0.12672829255314 * 
S_MonthsAsCustomer + 0.72932641344764 * S_NumCatalogPurchases + 0.70535680060775 * 
S_NumDealsPurchases + -0.15561838359391 * S_NumDistPurchases + -0.86545647977011 * 
S_NumStorePurchases + -0.78435825863867 * S_NumWebPurchases + 1.76113949975149 * 
S_NumWebVisitsMonth + 0.12430819021552 * S_RFMstat + -1.23324881442206 * S_RMntFrq + 
-1.54576826012241 * S_Recency + -0.4369755549417 * S_Teenhome ;
1329740   +   H13  =     1.17645971046641 * S_AcceptedCmpTotal  +     0.30922319488674 *
1329741   +        S_Age  +     0.05428662439399 * S_Frq  +     1.21807403747713 *
1329742   +        S_Income  +    -0.59349067735666 * S_Kidhome
1329743   +          +     0.48252305689599 * S_Mnt  +    -0.37595381735402 *
1329744   +        S_MntFishProducts  +    -0.13011704623919 * S_MntFruits
1329745   +          +     0.89281681720037 * S_MntGoldProds  +     2.21463961986297 *
1329746   +        S_MntMeatProducts  +    -0.13844613393182 * S_MntSweetProducts
1329747   +          +    -0.93052774237188 * S_MntWines  +    -0.15329145148081 *
1329748   +        S_MonthsAsCustomer  +    -0.35464993634392 * S_NumCatalogPurchases
1329749   +          +     0.21510592309387 * S_NumDealsPurchases
1329750   +          +    -0.05401897321491 * S_NumDistPurchases
1329751   +          +     0.14945584086188 * S_NumStorePurchases
1329752   +          +    -0.09993898051701 * S_NumWebPurchases
1329753   +          +     1.40189771606069 * S_NumWebVisitsMonth
1329754   +          +    -0.37624880818184 * S_RFMstat  +     1.08211585195417 *
1329755   +        S_RMntFrq  +    -1.39818267754244 * S_Recency
1329756   +          +    -1.40352649738739 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 1.17645971046641 * S_AcceptedCmpTotal + 0.30922319488674 * S_Age + 
0.05428662439399 * S_Frq + 1.21807403747713 * S_Income + -0.59349067735666 * S_Kidhome + 
0.48252305689599 * S_Mnt + -0.37595381735402 * S_MntFishProducts + -0.13011704623919 * 
S_MntFruits + 0.89281681720037 * S_MntGoldProds + 2.21463961986297 * S_MntMeatProducts + 
-0.13844613393182 * S_MntSweetProducts + -0.93052774237188 * S_MntWines + -0.15329145148081 * 
S_MonthsAsCustomer + -0.35464993634392 * S_NumCatalogPurchases + 0.21510592309387 * 
S_NumDealsPurchases + -0.05401897321491 * S_NumDistPurchases + 0.14945584086188 * 
S_NumStorePurchases + -0.09993898051701 * S_NumWebPurchases + 1.40189771606069 * 
S_NumWebVisitsMonth + -0.37624880818184 * S_RFMstat + 1.08211585195417 * S_RMntFrq + 
-1.39818267754244 * S_Recency + -1.40352649738739 * S_Teenhome ;
1329757   +   H14  =     1.27893467893779 * S_AcceptedCmpTotal  +     0.01880979187764 *
1329758   +        S_Age  +    -0.70756405701277 * S_Frq  +     1.53745885395395 *
1329759   +        S_Income  +    -0.61129984920194 * S_Kidhome
1329760   +          +    -0.41376232228418 * S_Mnt  +      0.0693214270226 *
1329761   +        S_MntFishProducts  +    -0.38136390810525 * S_MntFruits
1329762   +          +    -0.00750645920769 * S_MntGoldProds  +     0.87695145656238 *
1329763   +        S_MntMeatProducts  +    -0.04977219570302 * S_MntSweetProducts
1329764   +          +     -0.6549812298966 * S_MntWines  +    -1.30809571041702 *
1329765   +        S_MonthsAsCustomer  +     1.09130957811982 * S_NumCatalogPurchases
1329766   +          +     0.81353732439473 * S_NumDealsPurchases
1329767   +          +     0.32933472931941 * S_NumDistPurchases
1329768   +          +    -1.28188012143595 * S_NumStorePurchases
1329769   +          +    -0.81914782214243 * S_NumWebPurchases
1329770   +          +     1.20332282902342 * S_NumWebVisitsMonth
1329771   +          +     0.64952098333126 * S_RFMstat  +     -0.9542946440546 *
1329772   +        S_RMntFrq  +    -2.33912996419146 * S_Recency
1329773   +          +    -0.87409399936848 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 1.27893467893779 * S_AcceptedCmpTotal + 0.01880979187764 * S_Age + 
-0.70756405701277 * S_Frq + 1.53745885395395 * S_Income + -0.61129984920194 * S_Kidhome + 
-0.41376232228418 * S_Mnt + 0.0693214270226 * S_MntFishProducts + -0.38136390810525 * 
S_MntFruits + -0.00750645920769 * S_MntGoldProds + 0.87695145656238 * S_MntMeatProducts + 
-0.04977219570302 * S_MntSweetProducts + -0.6549812298966 * S_MntWines + -1.30809571041702 * 
S_MonthsAsCustomer + 1.09130957811982 * S_NumCatalogPurchases + 0.81353732439473 * 
S_NumDealsPurchases + 0.32933472931941 * S_NumDistPurchases + -1.28188012143595 * 
S_NumStorePurchases + -0.81914782214243 * S_NumWebPurchases + 1.20332282902342 * 
S_NumWebVisitsMonth + 0.64952098333126 * S_RFMstat + -0.9542946440546 * S_RMntFrq + 
-2.33912996419146 * S_Recency + -0.87409399936848 * S_Teenhome ;
1329774   +   H11  = H11  +     0.59375673291979 * AcceptedCmp10
1329775   +          +     0.02203755618618 * AcceptedCmp20  +    -0.21181019584832 *
1329776   +        AcceptedCmp30  +     0.23268323109228 * AcceptedCmp40
1329777   +          +     0.90104209081514 * AcceptedCmp50  +     0.38697558270231 *
1329778   +        Complain0  +     0.35031878791853 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.59375673291979 * AcceptedCmp10 + 0.02203755618618 * 
AcceptedCmp20 + -0.21181019584832 * AcceptedCmp30 + 0.23268323109228 * AcceptedCmp40 + 
0.90104209081514 * AcceptedCmp50 + 0.38697558270231 * Complain0 + 0.35031878791853 * 
HigherEducationBinary0 ;
1329779   +   H12  = H12  +     -0.5730983744808 * AcceptedCmp10
1329780   +          +    -0.34424275081615 * AcceptedCmp20  +    -0.44620106374863 *
1329781   +        AcceptedCmp30  +    -0.49481575237203 * AcceptedCmp40
1329782   +          +    -0.69117141341081 * AcceptedCmp50  +     0.51229650850652 *
1329783   +        Complain0  +    -0.11735442134022 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.5730983744808 * AcceptedCmp10 + -0.34424275081615 * 
AcceptedCmp20 + -0.44620106374863 * AcceptedCmp30 + -0.49481575237203 * AcceptedCmp40 + 
-0.69117141341081 * AcceptedCmp50 + 0.51229650850652 * Complain0 + -0.11735442134022 * 
HigherEducationBinary0 ;
1329784   +   H13  = H13  +    -1.12949380623281 * AcceptedCmp10
1329785   +          +    -0.52986298901299 * AcceptedCmp20  +    -0.35665685041759 *
1329786   +        AcceptedCmp30  +    -0.03028806067484 * AcceptedCmp40
1329787   +          +    -0.17063695271842 * AcceptedCmp50  +    -1.10439852571034 *
1329788   +        Complain0  +      0.4574039172898 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -1.12949380623281 * AcceptedCmp10 + -0.52986298901299 * 
AcceptedCmp20 + -0.35665685041759 * AcceptedCmp30 + -0.03028806067484 * AcceptedCmp40 + 
-0.17063695271842 * AcceptedCmp50 + -1.10439852571034 * Complain0 + 0.4574039172898 * 
HigherEducationBinary0 ;
1329789   +   H14  = H14  +     0.90425496220772 * AcceptedCmp10
1329790   +          +     0.02606316440589 * AcceptedCmp20  +     0.05631172953758 *
1329791   +        AcceptedCmp30  +    -0.45861962742584 * AcceptedCmp40
1329792   +          +    -0.52730223640646 * AcceptedCmp50  +      1.1577500782814 *
1329793   +        Complain0  +    -0.02439051385945 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.90425496220772 * AcceptedCmp10 + 0.02606316440589 * 
AcceptedCmp20 + 0.05631172953758 * AcceptedCmp30 + -0.45861962742584 * AcceptedCmp40 + 
-0.52730223640646 * AcceptedCmp50 + 1.1577500782814 * Complain0 + -0.02439051385945 * 
HigherEducationBinary0 ;
1329794   +   H11  = H11  +    -0.36857478578596 * Education2n_Cycle
1329795   +          +     0.19898218105822 * EducationBasic  +     0.02724838036933 *
1329796   +        EducationGraduation  +    -0.18265777565193 * EducationMaster
1329797   +          +     0.38068062371853 * Marital_StatusDivorced
1329798   +          +    -0.09269938603625 * Marital_StatusMarried
1329799   +          +    -0.17904543311137 * Marital_StatusSingle
1329800   +          +    -0.13128093417312 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.36857478578596 * Education2n_Cycle + 0.19898218105822 * 
EducationBasic + 0.02724838036933 * EducationGraduation + -0.18265777565193 * EducationMaster 
+ 0.38068062371853 * Marital_StatusDivorced + -0.09269938603625 * Marital_StatusMarried + 
-0.17904543311137 * Marital_StatusSingle + -0.13128093417312 * Marital_StatusTogether ;
1329801   +   H12  = H12  +     0.57160337074566 * Education2n_Cycle
1329802   +          +    -0.43780721536745 * EducationBasic  +     0.14323913032441 *
1329803   +        EducationGraduation  +      -0.555680629921 * EducationMaster
1329804   +          +     0.46191454760643 * Marital_StatusDivorced
1329805   +          +    -1.36520525874032 * Marital_StatusMarried
1329806   +          +     1.36669525533789 * Marital_StatusSingle
1329807   +          +    -1.54396080382919 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.57160337074566 * Education2n_Cycle + -0.43780721536745 * 
EducationBasic + 0.14323913032441 * EducationGraduation + -0.555680629921 * EducationMaster + 
0.46191454760643 * Marital_StatusDivorced + -1.36520525874032 * Marital_StatusMarried + 
1.36669525533789 * Marital_StatusSingle + -1.54396080382919 * Marital_StatusTogether ;
1329808   +   H13  = H13  +    -0.69472324326666 * Education2n_Cycle
1329809   +          +     1.16589091191624 * EducationBasic  +     -0.2092156588512 *
1329810   +        EducationGraduation  +    -0.01875362530677 * EducationMaster
1329811   +          +     0.18693560360309 * Marital_StatusDivorced
1329812   +          +    -0.56475988428608 * Marital_StatusMarried
1329813   +          +     0.79263891340625 * Marital_StatusSingle
1329814   +          +    -0.06098632630716 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.69472324326666 * Education2n_Cycle + 1.16589091191624 * 
EducationBasic + -0.2092156588512 * EducationGraduation + -0.01875362530677 * EducationMaster 
+ 0.18693560360309 * Marital_StatusDivorced + -0.56475988428608 * Marital_StatusMarried + 
0.79263891340625 * Marital_StatusSingle + -0.06098632630716 * Marital_StatusTogether ;
1329815   +   H14  = H14  +     0.06911242671078 * Education2n_Cycle
1329816   +          +    -0.01750231496702 * EducationBasic  +    -0.32110835963458 *
1329817   +        EducationGraduation  +     0.38698693412081 * EducationMaster
1329818   +          +     1.14025450669394 * Marital_StatusDivorced
1329819   +          +     0.78122963298728 * Marital_StatusMarried
1329820   +          +    -1.37860768059913 * Marital_StatusSingle
1329821   +          +     0.04814874553216 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.06911242671078 * Education2n_Cycle + -0.01750231496702 * 
EducationBasic + -0.32110835963458 * EducationGraduation + 0.38698693412081 * EducationMaster 
+ 1.14025450669394 * Marital_StatusDivorced + 0.78122963298728 * Marital_StatusMarried + 
-1.37860768059913 * Marital_StatusSingle + 0.04814874553216 * Marital_StatusTogether ;
1329822   +   H11  =    -1.84343242480594 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.84343242480594 + H11 ;
1329823   +   H12  =     1.29327809357238 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.29327809357238 + H12 ;
1329824   +   H13  =    -0.37221770912681 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.37221770912681 + H13 ;
1329825   +   H14  =    -0.62919123351659 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.62919123351659 + H14 ;
1329826   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1329827   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1329828   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1329829   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1329830   +END;
MPRINT(EM_DIAGRAM):   END;
1329831   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1329832   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1329833   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1329834   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1329835   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1329836   +END;
MPRINT(EM_DIAGRAM):   END;
1329837   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1329838   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1329839   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1329840   +
1329841   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1329842   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1329843   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1329844   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1329845   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1329846   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1329847   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1329848   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1329849   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1329850   +end;
MPRINT(EM_DIAGRAM):   end;
1329851   +else do;
MPRINT(EM_DIAGRAM):   else do;
1329852   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1329853   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1329854   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1329855   +   end;
MPRINT(EM_DIAGRAM):   end;
1329856   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1329857   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1329858   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1329859   +   end;
MPRINT(EM_DIAGRAM):   end;
1329860   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1329861   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1329862   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1329863   +   end;
MPRINT(EM_DIAGRAM):   end;
1329864   +end;
MPRINT(EM_DIAGRAM):   end;
1329865   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1329866   +   P_DepVar1  =    -3.75170032730169 * H11  +     5.71110229580931 * H12
1329867   +          +     2.78452207249475 * H13  +     3.19333794612831 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.75170032730169 * H11 + 5.71110229580931 * H12 + 
2.78452207249475 * H13 + 3.19333794612831 * H14 ;
1329868   +   P_DepVar1  =    -6.67752417555263 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.67752417555263 + P_DepVar1 ;
1329869   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1329870   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1329871   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1329872   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1329873   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1329874   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1329875   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1329876   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1329877   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1329878   +END;
MPRINT(EM_DIAGRAM):   END;
1329879   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1329880   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1329881   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1329882   +END;
MPRINT(EM_DIAGRAM):   END;
1329883   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1329884   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1329885   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1329886   +END;
MPRINT(EM_DIAGRAM):   END;
1329887   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1329888   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1329889   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1329890   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1329891   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1329892   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1329893   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1329894   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1329895   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1329896   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1329897   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1329898   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1329899   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1329900   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1329901   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1329902   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1329903   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1329904   +END;
MPRINT(EM_DIAGRAM):   END;
1329905   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1329906   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1329907   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1329908   +drop
1329909   +H11
1329910   +H12
1329911   +H13
1329912   +H14
1329913   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1329914   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1329915   +* Renaming variables for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural4;
1329916   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1329917   +* Renaming Posterior variables for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural4;
1329918   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1329919   +drop Neural4_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural4_P_DepVar1;
1329920   +Neural4_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural4_P_DepVar1 = P_DepVar1;
1329921   +drop Neural4_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural4_P_DepVar0;
1329922   +Neural4_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural4_P_DepVar0 = P_DepVar0;
1329923   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1329924   +* Renaming _WARN_ variable for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural4;
1329925   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1329926   +length Neural4_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural4_WARN_ $4;
1329927   +drop Neural4_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural4_WARN_;
1329928   +Neural4_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural4_WARN_ = _WARN_;
1329929   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1329930   +* Ensmbl: Scoring Code of model 5 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl: Scoring Code of model 5 of 10;
1329931   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1329932   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1329933   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1329934   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1329935   +* NODE: Neural;
MPRINT(EM_DIAGRAM):   * NODE: Neural;
1329936   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1329937   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1329938   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1329939   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1329940   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1329941   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1329942   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1329943   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1329944   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1329945   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1329946   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1329947   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1329948   +LENGTH _WARN_ $4
1329949   +      F_DepVar  $ 12
1329950   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1329951   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1329952   +
1329953   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1329954   +
1329955   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1329956   +
1329957   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1329958   +
1329959   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1329960   +
1329961   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1329962   +
1329963   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1329964   +
1329965   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1329966   +
1329967   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1329968   +
1329969   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1329970   +
1329971   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1329972   +
1329973   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1329974   +
1329975   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1329976   +
1329977   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1329978   +
1329979   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1329980   +
1329981   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1329982   +
1329983   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1329984   +
1329985   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1329986   +
1329987   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1329988   +
1329989   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1329990   +
1329991   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1329992   +
1329993   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1329994   +
1329995   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1329996   +
1329997   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1329998   +
1329999   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1330000   +
1330001   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1330002   +
1330003   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1330004   +
1330005   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1330006   +
1330007   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1330008   +
1330009   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1330010   +
1330011   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1330012   +
1330013   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1330014   +
1330015   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1330016   +
1330017   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1330018   +
1330019   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1330020   +
1330021   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1330022   +
1330023   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1330024   +
1330025   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1330026   +
1330027   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1330028   +
1330029   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1330030   +
1330031   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1330032   +
1330033   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1330034   +
1330035   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1330036   +
1330037   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1330038   +
1330039   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1330040   +
1330041   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1330042   +
1330043   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1330044   +
1330045   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1330046   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1330047   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1330048   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1330049   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1330050   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1330051   +end;
MPRINT(EM_DIAGRAM):   end;
1330052   +else do;
MPRINT(EM_DIAGRAM):   else do;
1330053   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1330054   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1330055   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1330056   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1330057   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1330058   +   end;
MPRINT(EM_DIAGRAM):   end;
1330059   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1330060   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1330061   +   end;
MPRINT(EM_DIAGRAM):   end;
1330062   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1330063   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1330064   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1330065   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1330066   +   end;
MPRINT(EM_DIAGRAM):   end;
1330067   +end;
MPRINT(EM_DIAGRAM):   end;
1330068   +
1330069   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1330070   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1330071   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1330072   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1330073   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1330074   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1330075   +end;
MPRINT(EM_DIAGRAM):   end;
1330076   +else do;
MPRINT(EM_DIAGRAM):   else do;
1330077   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1330078   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1330079   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1330080   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1330081   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1330082   +   end;
MPRINT(EM_DIAGRAM):   end;
1330083   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1330084   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1330085   +   end;
MPRINT(EM_DIAGRAM):   end;
1330086   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1330087   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1330088   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1330089   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1330090   +   end;
MPRINT(EM_DIAGRAM):   end;
1330091   +end;
MPRINT(EM_DIAGRAM):   end;
1330092   +
1330093   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1330094   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1330095   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1330096   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1330097   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1330098   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1330099   +end;
MPRINT(EM_DIAGRAM):   end;
1330100   +else do;
MPRINT(EM_DIAGRAM):   else do;
1330101   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1330102   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1330103   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1330104   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1330105   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1330106   +   end;
MPRINT(EM_DIAGRAM):   end;
1330107   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1330108   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1330109   +   end;
MPRINT(EM_DIAGRAM):   end;
1330110   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1330111   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1330112   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1330113   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1330114   +   end;
MPRINT(EM_DIAGRAM):   end;
1330115   +end;
MPRINT(EM_DIAGRAM):   end;
1330116   +
1330117   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1330118   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1330119   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1330120   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1330121   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1330122   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1330123   +end;
MPRINT(EM_DIAGRAM):   end;
1330124   +else do;
MPRINT(EM_DIAGRAM):   else do;
1330125   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1330126   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1330127   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1330128   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1330129   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1330130   +   end;
MPRINT(EM_DIAGRAM):   end;
1330131   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1330132   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1330133   +   end;
MPRINT(EM_DIAGRAM):   end;
1330134   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1330135   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1330136   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1330137   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1330138   +   end;
MPRINT(EM_DIAGRAM):   end;
1330139   +end;
MPRINT(EM_DIAGRAM):   end;
1330140   +
1330141   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1330142   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1330143   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1330144   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1330145   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1330146   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1330147   +end;
MPRINT(EM_DIAGRAM):   end;
1330148   +else do;
MPRINT(EM_DIAGRAM):   else do;
1330149   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1330150   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1330151   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1330152   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1330153   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1330154   +   end;
MPRINT(EM_DIAGRAM):   end;
1330155   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1330156   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1330157   +   end;
MPRINT(EM_DIAGRAM):   end;
1330158   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1330159   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1330160   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1330161   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1330162   +   end;
MPRINT(EM_DIAGRAM):   end;
1330163   +end;
MPRINT(EM_DIAGRAM):   end;
1330164   +
1330165   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1330166   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1330167   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1330168   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1330169   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1330170   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1330171   +end;
MPRINT(EM_DIAGRAM):   end;
1330172   +else do;
MPRINT(EM_DIAGRAM):   else do;
1330173   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1330174   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1330175   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1330176   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1330177   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1330178   +   end;
MPRINT(EM_DIAGRAM):   end;
1330179   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1330180   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1330181   +   end;
MPRINT(EM_DIAGRAM):   end;
1330182   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1330183   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1330184   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1330185   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1330186   +   end;
MPRINT(EM_DIAGRAM):   end;
1330187   +end;
MPRINT(EM_DIAGRAM):   end;
1330188   +
1330189   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1330190   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1330191   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1330192   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1330193   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1330194   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1330195   +end;
MPRINT(EM_DIAGRAM):   end;
1330196   +else do;
MPRINT(EM_DIAGRAM):   else do;
1330197   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1330198   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1330199   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1330200   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1330201   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1330202   +   end;
MPRINT(EM_DIAGRAM):   end;
1330203   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1330204   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1330205   +   end;
MPRINT(EM_DIAGRAM):   end;
1330206   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1330207   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1330208   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1330209   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1330210   +   end;
MPRINT(EM_DIAGRAM):   end;
1330211   +end;
MPRINT(EM_DIAGRAM):   end;
1330212   +
1330213   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1330214   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1330215   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1330216   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1330217   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1330218   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1330219   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1330220   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1330221   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1330222   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1330223   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1330224   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1330225   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1330226   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1330227   +end;
MPRINT(EM_DIAGRAM):   end;
1330228   +else do;
MPRINT(EM_DIAGRAM):   else do;
1330229   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1330230   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1330231   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1330232   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1330233   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1330234   +   end;
MPRINT(EM_DIAGRAM):   end;
1330235   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1330236   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1330237   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1330238   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1330239   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1330240   +   end;
MPRINT(EM_DIAGRAM):   end;
1330241   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1330242   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1330243   +   end;
MPRINT(EM_DIAGRAM):   end;
1330244   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1330245   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1330246   +   end;
MPRINT(EM_DIAGRAM):   end;
1330247   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1330248   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1330249   +   end;
MPRINT(EM_DIAGRAM):   end;
1330250   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1330251   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1330252   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1330253   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1330254   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1330255   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1330256   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1330257   +   end;
MPRINT(EM_DIAGRAM):   end;
1330258   +end;
MPRINT(EM_DIAGRAM):   end;
1330259   +
1330260   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1330261   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1330262   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1330263   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1330264   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1330265   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1330266   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1330267   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1330268   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1330269   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1330270   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1330271   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1330272   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1330273   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1330274   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1330275   +end;
MPRINT(EM_DIAGRAM):   end;
1330276   +else do;
MPRINT(EM_DIAGRAM):   else do;
1330277   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1330278   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1330279   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1330280   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1330281   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1330282   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1330283   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1330284   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1330285   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1330286   +         end;
MPRINT(EM_DIAGRAM):   end;
1330287   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1330288   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1330289   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1330290   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1330291   +            end;
MPRINT(EM_DIAGRAM):   end;
1330292   +         end;
MPRINT(EM_DIAGRAM):   end;
1330293   +      end;
MPRINT(EM_DIAGRAM):   end;
1330294   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1330295   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1330296   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1330297   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1330298   +         end;
MPRINT(EM_DIAGRAM):   end;
1330299   +      end;
MPRINT(EM_DIAGRAM):   end;
1330300   +   end;
MPRINT(EM_DIAGRAM):   end;
1330301   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1330302   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1330303   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1330304   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1330305   +      end;
MPRINT(EM_DIAGRAM):   end;
1330306   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1330307   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1330308   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1330309   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1330310   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1330311   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1330312   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1330313   +         end;
MPRINT(EM_DIAGRAM):   end;
1330314   +      end;
MPRINT(EM_DIAGRAM):   end;
1330315   +   end;
MPRINT(EM_DIAGRAM):   end;
1330316   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1330317   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1330318   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1330319   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1330320   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1330321   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1330322   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1330323   +   end;
MPRINT(EM_DIAGRAM):   end;
1330324   +end;
MPRINT(EM_DIAGRAM):   end;
1330325   +
1330326   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1330327   +*** Checking missing input Interval
1330328   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1330329   +
1330330   +IF NMISS(
1330331   +   AcceptedCmpTotal ,
1330332   +   Age ,
1330333   +   Frq ,
1330334   +   Income ,
1330335   +   Kidhome ,
1330336   +   Mnt ,
1330337   +   MntFishProducts ,
1330338   +   MntFruits ,
1330339   +   MntGoldProds ,
1330340   +   MntMeatProducts ,
1330341   +   MntSweetProducts ,
1330342   +   MntWines ,
1330343   +   MonthsAsCustomer ,
1330344   +   NumCatalogPurchases ,
1330345   +   NumDealsPurchases ,
1330346   +   NumDistPurchases ,
1330347   +   NumStorePurchases ,
1330348   +   NumWebPurchases ,
1330349   +   NumWebVisitsMonth ,
1330350   +   RFMstat ,
1330351   +   RMntFrq ,
1330352   +   Recency ,
1330353   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1330354   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1330355   +
1330356   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1330357   +END;
MPRINT(EM_DIAGRAM):   END;
1330358   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1330359   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1330360   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1330361   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1330362   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1330363   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1330364   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1330365   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1330366   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1330367   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1330368   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1330369   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1330370   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1330371   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1330372   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1330373   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1330374   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1330375   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1330376   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1330377   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1330378   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1330379   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1330380   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1330381   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1330382   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1330383   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1330384   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1330385   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1330386   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1330387   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1330388   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1330389   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1330390   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1330391   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1330392   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1330393   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1330394   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1330395   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1330396   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1330397   +END;
MPRINT(EM_DIAGRAM):   END;
1330398   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1330399   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1330400   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1330401   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1330402   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1330403   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1330404   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1330405   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1330406   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1330407   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1330408   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1330409   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1330410   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1330411   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1330412   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1330413   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1330414   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1330415   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1330416   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1330417   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1330418   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1330419   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1330420   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1330421   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1330422   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1330423   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1330424   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1330425   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1330426   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1330427   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1330428   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1330429   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1330430   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1330431   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1330432   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1330433   +   ELSE S_NumCatalogPurchases
1330434   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1330435   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1330436   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1330437   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1330438   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1330439   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1330440   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1330441   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1330442   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1330443   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1330444   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1330445   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1330446   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1330447   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1330448   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1330449   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1330450   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1330451   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1330452   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1330453   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1330454   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1330455   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1330456   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1330457   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1330458   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1330459   +END;
MPRINT(EM_DIAGRAM):   END;
1330460   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1330461   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1330462   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1330463   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1330464   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1330465   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1330466   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1330467   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1330468   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1330469   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1330470   +   H11  =     0.21197486042877 * S_AcceptedCmpTotal  +    -0.02949522070573 *
1330471   +        S_Age  +    -0.16919312615037 * S_Frq  +     0.14522255331039 *
1330472   +        S_Income  +     -0.0266473959975 * S_Kidhome
1330473   +          +     0.00778892787353 * S_Mnt  +    -0.04773629470954 *
1330474   +        S_MntFishProducts  +    -0.04230043327825 * S_MntFruits
1330475   +          +     0.00794218138067 * S_MntGoldProds  +      0.2107009197796 *
1330476   +        S_MntMeatProducts  +    -0.02357514913511 * S_MntSweetProducts
1330477   +          +    -0.19324648510173 * S_MntWines  +    -0.01985289349376 *
1330478   +        S_MonthsAsCustomer  +     0.28120382833347 * S_NumCatalogPurchases
1330479   +          +     0.15204082764648 * S_NumDealsPurchases
1330480   +          +     0.06913395421701 * S_NumDistPurchases
1330481   +          +    -0.06320045391889 * S_NumStorePurchases
1330482   +          +    -0.10763219134397 * S_NumWebPurchases
1330483   +          +     0.30129325870073 * S_NumWebVisitsMonth
1330484   +          +      0.0486741214698 * S_RFMstat  +     0.05669529576559 *
1330485   +        S_RMntFrq  +    -0.33977590725175 * S_Recency
1330486   +          +    -0.07911174205052 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.21197486042877 * S_AcceptedCmpTotal + -0.02949522070573 * S_Age 
+ -0.16919312615037 * S_Frq + 0.14522255331039 * S_Income + -0.0266473959975 * S_Kidhome + 
0.00778892787353 * S_Mnt + -0.04773629470954 * S_MntFishProducts + -0.04230043327825 * 
S_MntFruits + 0.00794218138067 * S_MntGoldProds + 0.2107009197796 * S_MntMeatProducts + 
-0.02357514913511 * S_MntSweetProducts + -0.19324648510173 * S_MntWines + -0.01985289349376 * 
S_MonthsAsCustomer + 0.28120382833347 * S_NumCatalogPurchases + 0.15204082764648 * 
S_NumDealsPurchases + 0.06913395421701 * S_NumDistPurchases + -0.06320045391889 * 
S_NumStorePurchases + -0.10763219134397 * S_NumWebPurchases + 0.30129325870073 * 
S_NumWebVisitsMonth + 0.0486741214698 * S_RFMstat + 0.05669529576559 * S_RMntFrq + 
-0.33977590725175 * S_Recency + -0.07911174205052 * S_Teenhome ;
1330487   +   H11  = H11  +    -0.00076888633638 * AcceptedCmp10
1330488   +          +     0.00331144478287 * AcceptedCmp20  +    -0.01959880328373 *
1330489   +        AcceptedCmp30  +     0.01506573257273 * AcceptedCmp40
1330490   +          +     -0.0677799414781 * AcceptedCmp50  +     0.04559602713799 *
1330491   +        Complain0  +    -0.02207878651679 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.00076888633638 * AcceptedCmp10 + 0.00331144478287 * 
AcceptedCmp20 + -0.01959880328373 * AcceptedCmp30 + 0.01506573257273 * AcceptedCmp40 + 
-0.0677799414781 * AcceptedCmp50 + 0.04559602713799 * Complain0 + -0.02207878651679 * 
HigherEducationBinary0 ;
1330492   +   H11  = H11  +     0.02201277166891 * Education2n_Cycle
1330493   +          +    -0.04148038680327 * EducationBasic  +     0.02074941779593 *
1330494   +        EducationGraduation  +    -0.00113068890412 * EducationMaster
1330495   +          +     0.03231190657829 * Marital_StatusDivorced
1330496   +          +    -0.11915392851312 * Marital_StatusMarried
1330497   +          +     0.09075278174727 * Marital_StatusSingle
1330498   +          +    -0.12491280689858 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.02201277166891 * Education2n_Cycle + -0.04148038680327 * 
EducationBasic + 0.02074941779593 * EducationGraduation + -0.00113068890412 * EducationMaster 
+ 0.03231190657829 * Marital_StatusDivorced + -0.11915392851312 * Marital_StatusMarried + 
0.09075278174727 * Marital_StatusSingle + -0.12491280689858 * Marital_StatusTogether ;
1330499   +   H11  =    -0.51532097089609 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.51532097089609 + H11 ;
1330500   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1330501   +END;
MPRINT(EM_DIAGRAM):   END;
1330502   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1330503   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1330504   +END;
MPRINT(EM_DIAGRAM):   END;
1330505   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1330506   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1330507   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1330508   +
1330509   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1330510   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1330511   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1330512   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1330513   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1330514   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1330515   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1330516   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1330517   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1330518   +end;
MPRINT(EM_DIAGRAM):   end;
1330519   +else do;
MPRINT(EM_DIAGRAM):   else do;
1330520   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1330521   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1330522   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1330523   +   end;
MPRINT(EM_DIAGRAM):   end;
1330524   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1330525   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1330526   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1330527   +   end;
MPRINT(EM_DIAGRAM):   end;
1330528   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1330529   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1330530   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1330531   +   end;
MPRINT(EM_DIAGRAM):   end;
1330532   +end;
MPRINT(EM_DIAGRAM):   end;
1330533   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1330534   +   P_DepVar1  =     8.82153759949468 * H11 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 8.82153759949468 * H11 ;
1330535   +   P_DepVar1  =    -0.58718093717937 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.58718093717937 + P_DepVar1 ;
1330536   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1330537   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1330538   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1330539   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1330540   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1330541   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1330542   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1330543   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1330544   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1330545   +END;
MPRINT(EM_DIAGRAM):   END;
1330546   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1330547   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1330548   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1330549   +END;
MPRINT(EM_DIAGRAM):   END;
1330550   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1330551   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1330552   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1330553   +END;
MPRINT(EM_DIAGRAM):   END;
1330554   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1330555   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1330556   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1330557   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1330558   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1330559   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1330560   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1330561   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1330562   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1330563   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1330564   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1330565   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1330566   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1330567   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1330568   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1330569   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1330570   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1330571   +END;
MPRINT(EM_DIAGRAM):   END;
1330572   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1330573   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1330574   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1330575   +drop
1330576   +H11
1330577   +;
MPRINT(EM_DIAGRAM):   drop H11 ;
1330578   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1330579   +* Renaming variables for Neural;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural;
1330580   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1330581   +* Renaming Posterior variables for Neural;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural;
1330582   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1330583   +drop Neural_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural_P_DepVar1;
1330584   +Neural_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural_P_DepVar1 = P_DepVar1;
1330585   +drop Neural_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural_P_DepVar0;
1330586   +Neural_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural_P_DepVar0 = P_DepVar0;
1330587   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1330588   +* Renaming _WARN_ variable for Neural;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural;
1330589   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1330590   +length Neural_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural_WARN_ $4;
1330591   +drop Neural_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural_WARN_;
1330592   +Neural_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural_WARN_ = _WARN_;
1330593   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1330594   +* Ensmbl: Scoring Code of model 6 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl: Scoring Code of model 6 of 10;
1330595   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1330596   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1330597   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1330598   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1330599   +* NODE: Neural2;
MPRINT(EM_DIAGRAM):   * NODE: Neural2;
1330600   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1330601   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1330602   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1330603   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1330604   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1330605   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1330606   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1330607   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1330608   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1330609   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1330610   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1330611   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1330612   +LENGTH _WARN_ $4
1330613   +      F_DepVar  $ 12
1330614   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1330615   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1330616   +
1330617   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1330618   +
1330619   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1330620   +
1330621   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1330622   +
1330623   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1330624   +
1330625   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1330626   +
1330627   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1330628   +
1330629   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1330630   +
1330631   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1330632   +
1330633   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1330634   +
1330635   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1330636   +
1330637   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1330638   +
1330639   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1330640   +
1330641   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1330642   +
1330643   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1330644   +
1330645   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1330646   +
1330647   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1330648   +
1330649   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1330650   +
1330651   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1330652   +
1330653   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1330654   +
1330655   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1330656   +
1330657   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1330658   +
1330659   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1330660   +
1330661   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1330662   +
1330663   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1330664   +
1330665   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1330666   +
1330667   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1330668   +
1330669   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1330670   +
1330671   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1330672   +
1330673   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1330674   +
1330675   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1330676   +
1330677   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1330678   +
1330679   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1330680   +
1330681   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1330682   +
1330683   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1330684   +
1330685   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1330686   +
1330687   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1330688   +
1330689   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1330690   +
1330691   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1330692   +
1330693   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1330694   +
1330695   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1330696   +
1330697   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1330698   +
1330699   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1330700   +
1330701   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1330702   +
1330703   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1330704   +
1330705   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1330706   +
1330707   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1330708   +
1330709   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1330710   +
1330711   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1330712   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1330713   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1330714   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1330715   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1330716   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1330717   +end;
MPRINT(EM_DIAGRAM):   end;
1330718   +else do;
MPRINT(EM_DIAGRAM):   else do;
1330719   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1330720   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1330721   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1330722   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1330723   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1330724   +   end;
MPRINT(EM_DIAGRAM):   end;
1330725   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1330726   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1330727   +   end;
MPRINT(EM_DIAGRAM):   end;
1330728   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1330729   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1330730   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1330731   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1330732   +   end;
MPRINT(EM_DIAGRAM):   end;
1330733   +end;
MPRINT(EM_DIAGRAM):   end;
1330734   +
1330735   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1330736   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1330737   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1330738   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1330739   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1330740   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1330741   +end;
MPRINT(EM_DIAGRAM):   end;
1330742   +else do;
MPRINT(EM_DIAGRAM):   else do;
1330743   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1330744   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1330745   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1330746   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1330747   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1330748   +   end;
MPRINT(EM_DIAGRAM):   end;
1330749   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1330750   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1330751   +   end;
MPRINT(EM_DIAGRAM):   end;
1330752   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1330753   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1330754   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1330755   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1330756   +   end;
MPRINT(EM_DIAGRAM):   end;
1330757   +end;
MPRINT(EM_DIAGRAM):   end;
1330758   +
1330759   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1330760   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1330761   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1330762   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1330763   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1330764   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1330765   +end;
MPRINT(EM_DIAGRAM):   end;
1330766   +else do;
MPRINT(EM_DIAGRAM):   else do;
1330767   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1330768   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1330769   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1330770   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1330771   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1330772   +   end;
MPRINT(EM_DIAGRAM):   end;
1330773   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1330774   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1330775   +   end;
MPRINT(EM_DIAGRAM):   end;
1330776   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1330777   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1330778   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1330779   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1330780   +   end;
MPRINT(EM_DIAGRAM):   end;
1330781   +end;
MPRINT(EM_DIAGRAM):   end;
1330782   +
1330783   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1330784   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1330785   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1330786   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1330787   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1330788   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1330789   +end;
MPRINT(EM_DIAGRAM):   end;
1330790   +else do;
MPRINT(EM_DIAGRAM):   else do;
1330791   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1330792   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1330793   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1330794   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1330795   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1330796   +   end;
MPRINT(EM_DIAGRAM):   end;
1330797   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1330798   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1330799   +   end;
MPRINT(EM_DIAGRAM):   end;
1330800   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1330801   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1330802   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1330803   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1330804   +   end;
MPRINT(EM_DIAGRAM):   end;
1330805   +end;
MPRINT(EM_DIAGRAM):   end;
1330806   +
1330807   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1330808   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1330809   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1330810   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1330811   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1330812   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1330813   +end;
MPRINT(EM_DIAGRAM):   end;
1330814   +else do;
MPRINT(EM_DIAGRAM):   else do;
1330815   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1330816   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1330817   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1330818   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1330819   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1330820   +   end;
MPRINT(EM_DIAGRAM):   end;
1330821   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1330822   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1330823   +   end;
MPRINT(EM_DIAGRAM):   end;
1330824   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1330825   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1330826   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1330827   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1330828   +   end;
MPRINT(EM_DIAGRAM):   end;
1330829   +end;
MPRINT(EM_DIAGRAM):   end;
1330830   +
1330831   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1330832   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1330833   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1330834   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1330835   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1330836   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1330837   +end;
MPRINT(EM_DIAGRAM):   end;
1330838   +else do;
MPRINT(EM_DIAGRAM):   else do;
1330839   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1330840   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1330841   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1330842   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1330843   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1330844   +   end;
MPRINT(EM_DIAGRAM):   end;
1330845   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1330846   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1330847   +   end;
MPRINT(EM_DIAGRAM):   end;
1330848   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1330849   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1330850   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1330851   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1330852   +   end;
MPRINT(EM_DIAGRAM):   end;
1330853   +end;
MPRINT(EM_DIAGRAM):   end;
1330854   +
1330855   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1330856   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1330857   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1330858   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1330859   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1330860   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1330861   +end;
MPRINT(EM_DIAGRAM):   end;
1330862   +else do;
MPRINT(EM_DIAGRAM):   else do;
1330863   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1330864   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1330865   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1330866   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1330867   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1330868   +   end;
MPRINT(EM_DIAGRAM):   end;
1330869   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1330870   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1330871   +   end;
MPRINT(EM_DIAGRAM):   end;
1330872   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1330873   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1330874   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1330875   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1330876   +   end;
MPRINT(EM_DIAGRAM):   end;
1330877   +end;
MPRINT(EM_DIAGRAM):   end;
1330878   +
1330879   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1330880   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1330881   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1330882   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1330883   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1330884   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1330885   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1330886   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1330887   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1330888   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1330889   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1330890   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1330891   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1330892   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1330893   +end;
MPRINT(EM_DIAGRAM):   end;
1330894   +else do;
MPRINT(EM_DIAGRAM):   else do;
1330895   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1330896   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1330897   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1330898   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1330899   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1330900   +   end;
MPRINT(EM_DIAGRAM):   end;
1330901   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1330902   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1330903   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1330904   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1330905   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1330906   +   end;
MPRINT(EM_DIAGRAM):   end;
1330907   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1330908   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1330909   +   end;
MPRINT(EM_DIAGRAM):   end;
1330910   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1330911   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1330912   +   end;
MPRINT(EM_DIAGRAM):   end;
1330913   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1330914   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1330915   +   end;
MPRINT(EM_DIAGRAM):   end;
1330916   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1330917   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1330918   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1330919   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1330920   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1330921   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1330922   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1330923   +   end;
MPRINT(EM_DIAGRAM):   end;
1330924   +end;
MPRINT(EM_DIAGRAM):   end;
1330925   +
1330926   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1330927   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1330928   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1330929   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1330930   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1330931   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1330932   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1330933   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1330934   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1330935   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1330936   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1330937   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1330938   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1330939   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1330940   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1330941   +end;
MPRINT(EM_DIAGRAM):   end;
1330942   +else do;
MPRINT(EM_DIAGRAM):   else do;
1330943   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1330944   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1330945   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1330946   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1330947   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1330948   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1330949   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1330950   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1330951   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1330952   +         end;
MPRINT(EM_DIAGRAM):   end;
1330953   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1330954   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1330955   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1330956   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1330957   +            end;
MPRINT(EM_DIAGRAM):   end;
1330958   +         end;
MPRINT(EM_DIAGRAM):   end;
1330959   +      end;
MPRINT(EM_DIAGRAM):   end;
1330960   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1330961   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1330962   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1330963   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1330964   +         end;
MPRINT(EM_DIAGRAM):   end;
1330965   +      end;
MPRINT(EM_DIAGRAM):   end;
1330966   +   end;
MPRINT(EM_DIAGRAM):   end;
1330967   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1330968   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1330969   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1330970   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1330971   +      end;
MPRINT(EM_DIAGRAM):   end;
1330972   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1330973   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1330974   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1330975   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1330976   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1330977   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1330978   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1330979   +         end;
MPRINT(EM_DIAGRAM):   end;
1330980   +      end;
MPRINT(EM_DIAGRAM):   end;
1330981   +   end;
MPRINT(EM_DIAGRAM):   end;
1330982   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1330983   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1330984   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1330985   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1330986   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1330987   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1330988   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1330989   +   end;
MPRINT(EM_DIAGRAM):   end;
1330990   +end;
MPRINT(EM_DIAGRAM):   end;
1330991   +
1330992   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1330993   +*** Checking missing input Interval
1330994   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1330995   +
1330996   +IF NMISS(
1330997   +   AcceptedCmpTotal ,
1330998   +   Age ,
1330999   +   Frq ,
1331000   +   Income ,
1331001   +   Kidhome ,
1331002   +   Mnt ,
1331003   +   MntFishProducts ,
1331004   +   MntFruits ,
1331005   +   MntGoldProds ,
1331006   +   MntMeatProducts ,
1331007   +   MntSweetProducts ,
1331008   +   MntWines ,
1331009   +   MonthsAsCustomer ,
1331010   +   NumCatalogPurchases ,
1331011   +   NumDealsPurchases ,
1331012   +   NumDistPurchases ,
1331013   +   NumStorePurchases ,
1331014   +   NumWebPurchases ,
1331015   +   NumWebVisitsMonth ,
1331016   +   RFMstat ,
1331017   +   RMntFrq ,
1331018   +   Recency ,
1331019   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1331020   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1331021   +
1331022   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1331023   +END;
MPRINT(EM_DIAGRAM):   END;
1331024   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1331025   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1331026   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1331027   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1331028   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1331029   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1331030   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1331031   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1331032   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1331033   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1331034   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1331035   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1331036   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1331037   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1331038   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1331039   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1331040   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1331041   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1331042   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1331043   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1331044   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1331045   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1331046   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1331047   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1331048   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1331049   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1331050   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1331051   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1331052   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1331053   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1331054   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1331055   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1331056   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1331057   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1331058   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1331059   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1331060   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1331061   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1331062   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1331063   +END;
MPRINT(EM_DIAGRAM):   END;
1331064   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1331065   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1331066   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1331067   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1331068   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1331069   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1331070   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1331071   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1331072   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1331073   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1331074   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1331075   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1331076   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1331077   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1331078   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1331079   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1331080   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1331081   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1331082   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1331083   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1331084   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1331085   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1331086   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1331087   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1331088   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1331089   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1331090   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1331091   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1331092   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1331093   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1331094   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1331095   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1331096   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1331097   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1331098   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1331099   +   ELSE S_NumCatalogPurchases
1331100   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1331101   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1331102   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1331103   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1331104   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1331105   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1331106   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1331107   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1331108   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1331109   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1331110   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1331111   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1331112   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1331113   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1331114   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1331115   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1331116   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1331117   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1331118   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1331119   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1331120   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1331121   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1331122   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1331123   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1331124   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1331125   +END;
MPRINT(EM_DIAGRAM):   END;
1331126   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1331127   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1331128   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1331129   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1331130   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1331131   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1331132   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1331133   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1331134   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1331135   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1331136   +   H11  =     0.29712286997834 * S_AcceptedCmpTotal  +     0.15682927566787 *
1331137   +        S_Age  +     0.23365791685845 * S_Frq  +     1.19070222818862 *
1331138   +        S_Income  +    -1.07652572934003 * S_Kidhome
1331139   +          +    -0.33332653884544 * S_Mnt  +     -0.1196291817134 *
1331140   +        S_MntFishProducts  +    -0.05693834390907 * S_MntFruits
1331141   +          +    -0.04894091348569 * S_MntGoldProds  +     0.36709988209272 *
1331142   +        S_MntMeatProducts  +    -0.21921869790385 * S_MntSweetProducts
1331143   +          +    -0.60642239904043 * S_MntWines  +     0.00269864537349 *
1331144   +        S_MonthsAsCustomer  +     0.54303346499176 * S_NumCatalogPurchases
1331145   +          +     0.34217069579861 * S_NumDealsPurchases
1331146   +          +      0.7126550962469 * S_NumDistPurchases
1331147   +          +     0.05810128676346 * S_NumStorePurchases
1331148   +          +     -0.1974592461824 * S_NumWebPurchases
1331149   +          +     1.33855646568468 * S_NumWebVisitsMonth
1331150   +          +    -0.00867312774072 * S_RFMstat  +     1.16131106250766 *
1331151   +        S_RMntFrq  +      -1.575765175986 * S_Recency
1331152   +          +    -0.86597551041595 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.29712286997834 * S_AcceptedCmpTotal + 0.15682927566787 * S_Age + 
0.23365791685845 * S_Frq + 1.19070222818862 * S_Income + -1.07652572934003 * S_Kidhome + 
-0.33332653884544 * S_Mnt + -0.1196291817134 * S_MntFishProducts + -0.05693834390907 * 
S_MntFruits + -0.04894091348569 * S_MntGoldProds + 0.36709988209272 * S_MntMeatProducts + 
-0.21921869790385 * S_MntSweetProducts + -0.60642239904043 * S_MntWines + 0.00269864537349 * 
S_MonthsAsCustomer + 0.54303346499176 * S_NumCatalogPurchases + 0.34217069579861 * 
S_NumDealsPurchases + 0.7126550962469 * S_NumDistPurchases + 0.05810128676346 * 
S_NumStorePurchases + -0.1974592461824 * S_NumWebPurchases + 1.33855646568468 * 
S_NumWebVisitsMonth + -0.00867312774072 * S_RFMstat + 1.16131106250766 * S_RMntFrq + 
-1.575765175986 * S_Recency + -0.86597551041595 * S_Teenhome ;
1331153   +   H12  =     0.31665243267047 * S_AcceptedCmpTotal  +    -0.09124940821631 *
1331154   +        S_Age  +    -0.16072737746014 * S_Frq  +      0.1038384650026 *
1331155   +        S_Income  +    -0.00280376715329 * S_Kidhome
1331156   +          +    -0.62213528239612 * S_Mnt  +    -0.04305309942503 *
1331157   +        S_MntFishProducts  +    -0.24959132224402 * S_MntFruits
1331158   +          +    -0.01371148610726 * S_MntGoldProds  +     0.62558247205775 *
1331159   +        S_MntMeatProducts  +    -0.10439524833374 * S_MntSweetProducts
1331160   +          +     -1.1377432724423 * S_MntWines  +    -0.04956864038898 *
1331161   +        S_MonthsAsCustomer  +     0.66989184148268 * S_NumCatalogPurchases
1331162   +          +     0.45694604326279 * S_NumDealsPurchases
1331163   +          +      0.1555582457419 * S_NumDistPurchases
1331164   +          +     -0.3340268446813 * S_NumStorePurchases
1331165   +          +    -0.39316217683753 * S_NumWebPurchases
1331166   +          +     0.52431656748667 * S_NumWebVisitsMonth
1331167   +          +     0.20727402314383 * S_RFMstat  +     0.70433803286711 *
1331168   +        S_RMntFrq  +    -0.55909695066219 * S_Recency
1331169   +          +    -0.02589465113799 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.31665243267047 * S_AcceptedCmpTotal + -0.09124940821631 * S_Age 
+ -0.16072737746014 * S_Frq + 0.1038384650026 * S_Income + -0.00280376715329 * S_Kidhome + 
-0.62213528239612 * S_Mnt + -0.04305309942503 * S_MntFishProducts + -0.24959132224402 * 
S_MntFruits + -0.01371148610726 * S_MntGoldProds + 0.62558247205775 * S_MntMeatProducts + 
-0.10439524833374 * S_MntSweetProducts + -1.1377432724423 * S_MntWines + -0.04956864038898 * 
S_MonthsAsCustomer + 0.66989184148268 * S_NumCatalogPurchases + 0.45694604326279 * 
S_NumDealsPurchases + 0.1555582457419 * S_NumDistPurchases + -0.3340268446813 * 
S_NumStorePurchases + -0.39316217683753 * S_NumWebPurchases + 0.52431656748667 * 
S_NumWebVisitsMonth + 0.20727402314383 * S_RFMstat + 0.70433803286711 * S_RMntFrq + 
-0.55909695066219 * S_Recency + -0.02589465113799 * S_Teenhome ;
1331170   +   H11  = H11  +     -0.2601649080458 * AcceptedCmp10
1331171   +          +    -0.69535266799466 * AcceptedCmp20  +    -0.58039838698106 *
1331172   +        AcceptedCmp30  +    -0.51789867388634 * AcceptedCmp40
1331173   +          +    -0.28577801943332 * AcceptedCmp50  +    -0.24224458808871 *
1331174   +        Complain0  +     0.22760495991556 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.2601649080458 * AcceptedCmp10 + -0.69535266799466 * 
AcceptedCmp20 + -0.58039838698106 * AcceptedCmp30 + -0.51789867388634 * AcceptedCmp40 + 
-0.28577801943332 * AcceptedCmp50 + -0.24224458808871 * Complain0 + 0.22760495991556 * 
HigherEducationBinary0 ;
1331175   +   H12  = H12  +     -0.3622176384122 * AcceptedCmp10
1331176   +          +    -0.33944386002412 * AcceptedCmp20  +    -0.02687563797332 *
1331177   +        AcceptedCmp30  +     0.00421902079715 * AcceptedCmp40
1331178   +          +    -0.12328105393668 * AcceptedCmp50  +    -0.06053338147955 *
1331179   +        Complain0  +    -0.17559776257445 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.3622176384122 * AcceptedCmp10 + -0.33944386002412 * 
AcceptedCmp20 + -0.02687563797332 * AcceptedCmp30 + 0.00421902079715 * AcceptedCmp40 + 
-0.12328105393668 * AcceptedCmp50 + -0.06053338147955 * Complain0 + -0.17559776257445 * 
HigherEducationBinary0 ;
1331180   +   H11  = H11  +     0.04102597460729 * Education2n_Cycle
1331181   +          +     0.10315751459359 * EducationBasic  +    -0.09694950452171 *
1331182   +        EducationGraduation  +    -0.33205513178262 * EducationMaster
1331183   +          +     0.46676686502466 * Marital_StatusDivorced
1331184   +          +    -1.27760562209616 * Marital_StatusMarried
1331185   +          +     1.31419230639567 * Marital_StatusSingle
1331186   +          +    -0.94615367007608 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04102597460729 * Education2n_Cycle + 0.10315751459359 * 
EducationBasic + -0.09694950452171 * EducationGraduation + -0.33205513178262 * EducationMaster 
+ 0.46676686502466 * Marital_StatusDivorced + -1.27760562209616 * Marital_StatusMarried + 
1.31419230639567 * Marital_StatusSingle + -0.94615367007608 * Marital_StatusTogether ;
1331187   +   H12  = H12  +     0.04140711456188 * Education2n_Cycle
1331188   +          +     0.00023669301751 * EducationBasic  +      0.0217486986892 *
1331189   +        EducationGraduation  +     0.00743064542151 * EducationMaster
1331190   +          +     0.07434297903639 * Marital_StatusDivorced
1331191   +          +     0.00294493836325 * Marital_StatusMarried
1331192   +          +    -0.00745595849422 * Marital_StatusSingle
1331193   +          +    -0.02426182934399 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04140711456188 * Education2n_Cycle + 0.00023669301751 * 
EducationBasic + 0.0217486986892 * EducationGraduation + 0.00743064542151 * EducationMaster + 
0.07434297903639 * Marital_StatusDivorced + 0.00294493836325 * Marital_StatusMarried + 
-0.00745595849422 * Marital_StatusSingle + -0.02426182934399 * Marital_StatusTogether ;
1331194   +   H11  =    -2.08476947519933 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.08476947519933 + H11 ;
1331195   +   H12  =    -0.67000030345457 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.67000030345457 + H12 ;
1331196   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1331197   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1331198   +END;
MPRINT(EM_DIAGRAM):   END;
1331199   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1331200   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1331201   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1331202   +END;
MPRINT(EM_DIAGRAM):   END;
1331203   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1331204   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1331205   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1331206   +
1331207   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1331208   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1331209   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1331210   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1331211   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1331212   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1331213   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1331214   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1331215   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1331216   +end;
MPRINT(EM_DIAGRAM):   end;
1331217   +else do;
MPRINT(EM_DIAGRAM):   else do;
1331218   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1331219   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1331220   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1331221   +   end;
MPRINT(EM_DIAGRAM):   end;
1331222   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1331223   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1331224   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1331225   +   end;
MPRINT(EM_DIAGRAM):   end;
1331226   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1331227   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1331228   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1331229   +   end;
MPRINT(EM_DIAGRAM):   end;
1331230   +end;
MPRINT(EM_DIAGRAM):   end;
1331231   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1331232   +   P_DepVar1  =     5.63200889678434 * H11  +     6.13502549580323 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.63200889678434 * H11 + 6.13502549580323 * H12 ;
1331233   +   P_DepVar1  =     3.20850695873198 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.20850695873198 + P_DepVar1 ;
1331234   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1331235   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1331236   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1331237   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1331238   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1331239   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1331240   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1331241   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1331242   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1331243   +END;
MPRINT(EM_DIAGRAM):   END;
1331244   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1331245   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1331246   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1331247   +END;
MPRINT(EM_DIAGRAM):   END;
1331248   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1331249   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1331250   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1331251   +END;
MPRINT(EM_DIAGRAM):   END;
1331252   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1331253   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1331254   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1331255   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1331256   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1331257   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1331258   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1331259   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1331260   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1331261   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1331262   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1331263   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1331264   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1331265   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1331266   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1331267   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1331268   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1331269   +END;
MPRINT(EM_DIAGRAM):   END;
1331270   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1331271   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1331272   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1331273   +drop
1331274   +H11
1331275   +H12
1331276   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
1331277   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1331278   +* Renaming variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural2;
1331279   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1331280   +* Renaming Posterior variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural2;
1331281   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1331282   +drop Neural2_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar1;
1331283   +Neural2_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar1 = P_DepVar1;
1331284   +drop Neural2_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar0;
1331285   +Neural2_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar0 = P_DepVar0;
1331286   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1331287   +* Renaming _WARN_ variable for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural2;
1331288   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1331289   +length Neural2_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural2_WARN_ $4;
1331290   +drop Neural2_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural2_WARN_;
1331291   +Neural2_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural2_WARN_ = _WARN_;
1331292   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1331293   +* Ensmbl: Scoring Code of model 7 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl: Scoring Code of model 7 of 10;
1331294   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1331295   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1331296   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1331297   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1331298   +* NODE: Neural3;
MPRINT(EM_DIAGRAM):   * NODE: Neural3;
1331299   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1331300   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1331301   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1331302   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1331303   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1331304   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1331305   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1331306   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1331307   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1331308   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1331309   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1331310   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1331311   +LENGTH _WARN_ $4
1331312   +      F_DepVar  $ 12
1331313   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1331314   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1331315   +
1331316   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1331317   +
1331318   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1331319   +
1331320   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1331321   +
1331322   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1331323   +
1331324   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1331325   +
1331326   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1331327   +
1331328   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1331329   +
1331330   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1331331   +
1331332   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1331333   +
1331334   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1331335   +
1331336   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1331337   +
1331338   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1331339   +
1331340   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1331341   +
1331342   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1331343   +
1331344   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1331345   +
1331346   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1331347   +
1331348   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1331349   +
1331350   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1331351   +
1331352   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1331353   +
1331354   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1331355   +
1331356   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1331357   +
1331358   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1331359   +
1331360   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1331361   +
1331362   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1331363   +
1331364   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1331365   +
1331366   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1331367   +
1331368   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1331369   +
1331370   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1331371   +
1331372   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1331373   +
1331374   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1331375   +
1331376   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1331377   +
1331378   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1331379   +
1331380   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1331381   +
1331382   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1331383   +
1331384   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1331385   +
1331386   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1331387   +
1331388   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1331389   +
1331390   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1331391   +
1331392   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1331393   +
1331394   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1331395   +
1331396   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1331397   +
1331398   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1331399   +
1331400   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1331401   +
1331402   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1331403   +
1331404   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1331405   +
1331406   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1331407   +
1331408   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1331409   +
1331410   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1331411   +
1331412   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1331413   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1331414   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1331415   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1331416   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1331417   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1331418   +end;
MPRINT(EM_DIAGRAM):   end;
1331419   +else do;
MPRINT(EM_DIAGRAM):   else do;
1331420   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1331421   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1331422   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1331423   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1331424   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1331425   +   end;
MPRINT(EM_DIAGRAM):   end;
1331426   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1331427   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1331428   +   end;
MPRINT(EM_DIAGRAM):   end;
1331429   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1331430   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1331431   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1331432   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1331433   +   end;
MPRINT(EM_DIAGRAM):   end;
1331434   +end;
MPRINT(EM_DIAGRAM):   end;
1331435   +
1331436   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1331437   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1331438   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1331439   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1331440   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1331441   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1331442   +end;
MPRINT(EM_DIAGRAM):   end;
1331443   +else do;
MPRINT(EM_DIAGRAM):   else do;
1331444   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1331445   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1331446   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1331447   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1331448   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1331449   +   end;
MPRINT(EM_DIAGRAM):   end;
1331450   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1331451   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1331452   +   end;
MPRINT(EM_DIAGRAM):   end;
1331453   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1331454   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1331455   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1331456   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1331457   +   end;
MPRINT(EM_DIAGRAM):   end;
1331458   +end;
MPRINT(EM_DIAGRAM):   end;
1331459   +
1331460   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1331461   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1331462   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1331463   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1331464   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1331465   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1331466   +end;
MPRINT(EM_DIAGRAM):   end;
1331467   +else do;
MPRINT(EM_DIAGRAM):   else do;
1331468   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1331469   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1331470   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1331471   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1331472   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1331473   +   end;
MPRINT(EM_DIAGRAM):   end;
1331474   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1331475   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1331476   +   end;
MPRINT(EM_DIAGRAM):   end;
1331477   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1331478   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1331479   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1331480   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1331481   +   end;
MPRINT(EM_DIAGRAM):   end;
1331482   +end;
MPRINT(EM_DIAGRAM):   end;
1331483   +
1331484   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1331485   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1331486   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1331487   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1331488   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1331489   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1331490   +end;
MPRINT(EM_DIAGRAM):   end;
1331491   +else do;
MPRINT(EM_DIAGRAM):   else do;
1331492   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1331493   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1331494   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1331495   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1331496   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1331497   +   end;
MPRINT(EM_DIAGRAM):   end;
1331498   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1331499   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1331500   +   end;
MPRINT(EM_DIAGRAM):   end;
1331501   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1331502   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1331503   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1331504   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1331505   +   end;
MPRINT(EM_DIAGRAM):   end;
1331506   +end;
MPRINT(EM_DIAGRAM):   end;
1331507   +
1331508   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1331509   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1331510   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1331511   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1331512   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1331513   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1331514   +end;
MPRINT(EM_DIAGRAM):   end;
1331515   +else do;
MPRINT(EM_DIAGRAM):   else do;
1331516   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1331517   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1331518   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1331519   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1331520   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1331521   +   end;
MPRINT(EM_DIAGRAM):   end;
1331522   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1331523   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1331524   +   end;
MPRINT(EM_DIAGRAM):   end;
1331525   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1331526   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1331527   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1331528   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1331529   +   end;
MPRINT(EM_DIAGRAM):   end;
1331530   +end;
MPRINT(EM_DIAGRAM):   end;
1331531   +
1331532   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1331533   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1331534   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1331535   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1331536   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1331537   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1331538   +end;
MPRINT(EM_DIAGRAM):   end;
1331539   +else do;
MPRINT(EM_DIAGRAM):   else do;
1331540   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1331541   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1331542   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1331543   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1331544   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1331545   +   end;
MPRINT(EM_DIAGRAM):   end;
1331546   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1331547   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1331548   +   end;
MPRINT(EM_DIAGRAM):   end;
1331549   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1331550   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1331551   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1331552   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1331553   +   end;
MPRINT(EM_DIAGRAM):   end;
1331554   +end;
MPRINT(EM_DIAGRAM):   end;
1331555   +
1331556   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1331557   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1331558   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1331559   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1331560   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1331561   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1331562   +end;
MPRINT(EM_DIAGRAM):   end;
1331563   +else do;
MPRINT(EM_DIAGRAM):   else do;
1331564   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1331565   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1331566   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1331567   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1331568   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1331569   +   end;
MPRINT(EM_DIAGRAM):   end;
1331570   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1331571   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1331572   +   end;
MPRINT(EM_DIAGRAM):   end;
1331573   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1331574   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1331575   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1331576   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1331577   +   end;
MPRINT(EM_DIAGRAM):   end;
1331578   +end;
MPRINT(EM_DIAGRAM):   end;
1331579   +
1331580   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1331581   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1331582   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1331583   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1331584   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1331585   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1331586   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1331587   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1331588   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1331589   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1331590   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1331591   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1331592   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1331593   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1331594   +end;
MPRINT(EM_DIAGRAM):   end;
1331595   +else do;
MPRINT(EM_DIAGRAM):   else do;
1331596   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1331597   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1331598   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1331599   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1331600   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1331601   +   end;
MPRINT(EM_DIAGRAM):   end;
1331602   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1331603   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1331604   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1331605   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1331606   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1331607   +   end;
MPRINT(EM_DIAGRAM):   end;
1331608   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1331609   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1331610   +   end;
MPRINT(EM_DIAGRAM):   end;
1331611   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1331612   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1331613   +   end;
MPRINT(EM_DIAGRAM):   end;
1331614   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1331615   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1331616   +   end;
MPRINT(EM_DIAGRAM):   end;
1331617   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1331618   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1331619   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1331620   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1331621   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1331622   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1331623   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1331624   +   end;
MPRINT(EM_DIAGRAM):   end;
1331625   +end;
MPRINT(EM_DIAGRAM):   end;
1331626   +
1331627   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1331628   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1331629   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1331630   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1331631   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1331632   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1331633   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1331634   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1331635   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1331636   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1331637   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1331638   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1331639   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1331640   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1331641   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1331642   +end;
MPRINT(EM_DIAGRAM):   end;
1331643   +else do;
MPRINT(EM_DIAGRAM):   else do;
1331644   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1331645   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1331646   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1331647   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1331648   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1331649   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1331650   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1331651   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1331652   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1331653   +         end;
MPRINT(EM_DIAGRAM):   end;
1331654   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1331655   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1331656   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1331657   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1331658   +            end;
MPRINT(EM_DIAGRAM):   end;
1331659   +         end;
MPRINT(EM_DIAGRAM):   end;
1331660   +      end;
MPRINT(EM_DIAGRAM):   end;
1331661   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1331662   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1331663   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1331664   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1331665   +         end;
MPRINT(EM_DIAGRAM):   end;
1331666   +      end;
MPRINT(EM_DIAGRAM):   end;
1331667   +   end;
MPRINT(EM_DIAGRAM):   end;
1331668   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1331669   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1331670   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1331671   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1331672   +      end;
MPRINT(EM_DIAGRAM):   end;
1331673   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1331674   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1331675   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1331676   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1331677   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1331678   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1331679   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1331680   +         end;
MPRINT(EM_DIAGRAM):   end;
1331681   +      end;
MPRINT(EM_DIAGRAM):   end;
1331682   +   end;
MPRINT(EM_DIAGRAM):   end;
1331683   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1331684   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1331685   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1331686   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1331687   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1331688   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1331689   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1331690   +   end;
MPRINT(EM_DIAGRAM):   end;
1331691   +end;
MPRINT(EM_DIAGRAM):   end;
1331692   +
1331693   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1331694   +*** Checking missing input Interval
1331695   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1331696   +
1331697   +IF NMISS(
1331698   +   AcceptedCmpTotal ,
1331699   +   Age ,
1331700   +   Frq ,
1331701   +   Income ,
1331702   +   Kidhome ,
1331703   +   Mnt ,
1331704   +   MntFishProducts ,
1331705   +   MntFruits ,
1331706   +   MntGoldProds ,
1331707   +   MntMeatProducts ,
1331708   +   MntSweetProducts ,
1331709   +   MntWines ,
1331710   +   MonthsAsCustomer ,
1331711   +   NumCatalogPurchases ,
1331712   +   NumDealsPurchases ,
1331713   +   NumDistPurchases ,
1331714   +   NumStorePurchases ,
1331715   +   NumWebPurchases ,
1331716   +   NumWebVisitsMonth ,
1331717   +   RFMstat ,
1331718   +   RMntFrq ,
1331719   +   Recency ,
1331720   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1331721   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1331722   +
1331723   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1331724   +END;
MPRINT(EM_DIAGRAM):   END;
1331725   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1331726   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1331727   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1331728   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1331729   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1331730   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1331731   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1331732   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1331733   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1331734   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1331735   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1331736   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1331737   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1331738   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1331739   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1331740   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1331741   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1331742   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1331743   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1331744   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1331745   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1331746   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1331747   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1331748   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1331749   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1331750   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1331751   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1331752   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1331753   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1331754   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1331755   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1331756   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1331757   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1331758   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1331759   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1331760   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1331761   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1331762   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1331763   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1331764   +END;
MPRINT(EM_DIAGRAM):   END;
1331765   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1331766   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1331767   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1331768   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1331769   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1331770   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1331771   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1331772   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1331773   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1331774   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1331775   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1331776   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1331777   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1331778   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1331779   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1331780   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1331781   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1331782   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1331783   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1331784   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1331785   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1331786   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1331787   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1331788   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1331789   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1331790   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1331791   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1331792   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1331793   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1331794   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1331795   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1331796   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1331797   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1331798   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1331799   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1331800   +   ELSE S_NumCatalogPurchases
1331801   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1331802   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1331803   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1331804   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1331805   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1331806   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1331807   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1331808   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1331809   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1331810   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1331811   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1331812   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1331813   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1331814   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1331815   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1331816   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1331817   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1331818   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1331819   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1331820   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1331821   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1331822   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1331823   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1331824   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1331825   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1331826   +END;
MPRINT(EM_DIAGRAM):   END;
1331827   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1331828   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1331829   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1331830   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1331831   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1331832   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1331833   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1331834   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1331835   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1331836   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1331837   +   H11  =     0.80580599758828 * S_AcceptedCmpTotal  +    -0.20439898580437 *
1331838   +        S_Age  +     0.05865035632173 * S_Frq  +     0.35752372652995 *
1331839   +        S_Income  +     0.48614351216065 * S_Kidhome
1331840   +          +     -0.1747641480344 * S_Mnt  +     0.01575775403439 *
1331841   +        S_MntFishProducts  +    -0.38201490870585 * S_MntFruits
1331842   +          +    -0.05580975774246 * S_MntGoldProds  +     1.09721567184869 *
1331843   +        S_MntMeatProducts  +    -0.13227791819319 * S_MntSweetProducts
1331844   +          +    -1.10701810096598 * S_MntWines  +     0.20854938667936 *
1331845   +        S_MonthsAsCustomer  +     1.07538229088114 * S_NumCatalogPurchases
1331846   +          +     1.38069708066212 * S_NumDealsPurchases
1331847   +          +     0.18758966496994 * S_NumDistPurchases
1331848   +          +    -0.65306017966122 * S_NumStorePurchases
1331849   +          +    -0.65780154318734 * S_NumWebPurchases
1331850   +          +     1.42347048260615 * S_NumWebVisitsMonth
1331851   +          +      0.7433518928188 * S_RFMstat  +     0.14860840574393 *
1331852   +        S_RMntFrq  +    -0.94596110554056 * S_Recency
1331853   +          +     0.06338271932444 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.80580599758828 * S_AcceptedCmpTotal + -0.20439898580437 * S_Age 
+ 0.05865035632173 * S_Frq + 0.35752372652995 * S_Income + 0.48614351216065 * S_Kidhome + 
-0.1747641480344 * S_Mnt + 0.01575775403439 * S_MntFishProducts + -0.38201490870585 * 
S_MntFruits + -0.05580975774246 * S_MntGoldProds + 1.09721567184869 * S_MntMeatProducts + 
-0.13227791819319 * S_MntSweetProducts + -1.10701810096598 * S_MntWines + 0.20854938667936 * 
S_MonthsAsCustomer + 1.07538229088114 * S_NumCatalogPurchases + 1.38069708066212 * 
S_NumDealsPurchases + 0.18758966496994 * S_NumDistPurchases + -0.65306017966122 * 
S_NumStorePurchases + -0.65780154318734 * S_NumWebPurchases + 1.42347048260615 * 
S_NumWebVisitsMonth + 0.7433518928188 * S_RFMstat + 0.14860840574393 * S_RMntFrq + 
-0.94596110554056 * S_Recency + 0.06338271932444 * S_Teenhome ;
1331854   +   H12  =    -0.95250648389067 * S_AcceptedCmpTotal  +     0.00781145364918 *
1331855   +        S_Age  +     0.27693667522426 * S_Frq  +    -0.44422940279858 *
1331856   +        S_Income  +     0.50072567449363 * S_Kidhome
1331857   +          +     0.16426609438465 * S_Mnt  +     0.90735360020692 *
1331858   +        S_MntFishProducts  +    -0.10280436633296 * S_MntFruits
1331859   +          +      -0.172427737402 * S_MntGoldProds  +    -1.57830143431967 *
1331860   +        S_MntMeatProducts  +    -0.49111039017578 * S_MntSweetProducts
1331861   +          +     0.60032626047049 * S_MntWines  +      0.2471946896739 *
1331862   +        S_MonthsAsCustomer  +    -0.89033290398106 * S_NumCatalogPurchases
1331863   +          +    -0.75291043162386 * S_NumDealsPurchases
1331864   +          +    -0.06780631818187 * S_NumDistPurchases
1331865   +          +     1.03453599373919 * S_NumStorePurchases
1331866   +          +     1.02348906006707 * S_NumWebPurchases
1331867   +          +    -1.28963718583136 * S_NumWebVisitsMonth
1331868   +          +    -0.28437040883974 * S_RFMstat  +     0.13305006522815 *
1331869   +        S_RMntFrq  +     1.57678875777412 * S_Recency
1331870   +          +     0.37259077233644 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.95250648389067 * S_AcceptedCmpTotal + 0.00781145364918 * S_Age 
+ 0.27693667522426 * S_Frq + -0.44422940279858 * S_Income + 0.50072567449363 * S_Kidhome + 
0.16426609438465 * S_Mnt + 0.90735360020692 * S_MntFishProducts + -0.10280436633296 * 
S_MntFruits + -0.172427737402 * S_MntGoldProds + -1.57830143431967 * S_MntMeatProducts + 
-0.49111039017578 * S_MntSweetProducts + 0.60032626047049 * S_MntWines + 0.2471946896739 * 
S_MonthsAsCustomer + -0.89033290398106 * S_NumCatalogPurchases + -0.75291043162386 * 
S_NumDealsPurchases + -0.06780631818187 * S_NumDistPurchases + 1.03453599373919 * 
S_NumStorePurchases + 1.02348906006707 * S_NumWebPurchases + -1.28963718583136 * 
S_NumWebVisitsMonth + -0.28437040883974 * S_RFMstat + 0.13305006522815 * S_RMntFrq + 
1.57678875777412 * S_Recency + 0.37259077233644 * S_Teenhome ;
1331871   +   H13  =    -0.15934537040899 * S_AcceptedCmpTotal  +    -0.18908743508071 *
1331872   +        S_Age  +    -0.21049405570619 * S_Frq  +    -1.13478522535816 *
1331873   +        S_Income  +     0.57496607656903 * S_Kidhome
1331874   +          +     0.24039633053683 * S_Mnt  +    -0.12111845985793 *
1331875   +        S_MntFishProducts  +     0.18932758935406 * S_MntFruits
1331876   +          +      0.0282001773792 * S_MntGoldProds  +    -0.34135136526975 *
1331877   +        S_MntMeatProducts  +      0.3048511351264 * S_MntSweetProducts
1331878   +          +     0.34934932685263 * S_MntWines  +     -0.2282334455458 *
1331879   +        S_MonthsAsCustomer  +    -0.61139042080723 * S_NumCatalogPurchases
1331880   +          +     0.13431497076806 * S_NumDealsPurchases
1331881   +          +     -0.4516722514278 * S_NumDistPurchases
1331882   +          +     0.08636745161008 * S_NumStorePurchases
1331883   +          +    -0.01091843489919 * S_NumWebPurchases
1331884   +          +    -0.67680105332226 * S_NumWebVisitsMonth
1331885   +          +     0.06960881208574 * S_RFMstat  +    -0.40844599827715 *
1331886   +        S_RMntFrq  +     1.43664973786717 * S_Recency
1331887   +          +     0.89586482279711 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.15934537040899 * S_AcceptedCmpTotal + -0.18908743508071 * S_Age 
+ -0.21049405570619 * S_Frq + -1.13478522535816 * S_Income + 0.57496607656903 * S_Kidhome + 
0.24039633053683 * S_Mnt + -0.12111845985793 * S_MntFishProducts + 0.18932758935406 * 
S_MntFruits + 0.0282001773792 * S_MntGoldProds + -0.34135136526975 * S_MntMeatProducts + 
0.3048511351264 * S_MntSweetProducts + 0.34934932685263 * S_MntWines + -0.2282334455458 * 
S_MonthsAsCustomer + -0.61139042080723 * S_NumCatalogPurchases + 0.13431497076806 * 
S_NumDealsPurchases + -0.4516722514278 * S_NumDistPurchases + 0.08636745161008 * 
S_NumStorePurchases + -0.01091843489919 * S_NumWebPurchases + -0.67680105332226 * 
S_NumWebVisitsMonth + 0.06960881208574 * S_RFMstat + -0.40844599827715 * S_RMntFrq + 
1.43664973786717 * S_Recency + 0.89586482279711 * S_Teenhome ;
1331888   +   H11  = H11  +     -0.6416671004655 * AcceptedCmp10
1331889   +          +     0.01492041108634 * AcceptedCmp20  +    -0.91114347887192 *
1331890   +        AcceptedCmp30  +    -0.20710365118058 * AcceptedCmp40
1331891   +          +    -0.11794134499267 * AcceptedCmp50  +     0.09288714621262 *
1331892   +        Complain0  +    -0.52243814822483 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.6416671004655 * AcceptedCmp10 + 0.01492041108634 * 
AcceptedCmp20 + -0.91114347887192 * AcceptedCmp30 + -0.20710365118058 * AcceptedCmp40 + 
-0.11794134499267 * AcceptedCmp50 + 0.09288714621262 * Complain0 + -0.52243814822483 * 
HigherEducationBinary0 ;
1331893   +   H12  = H12  +     0.24751093651686 * AcceptedCmp10
1331894   +          +     0.07782559575868 * AcceptedCmp20  +    -0.31714859220477 *
1331895   +        AcceptedCmp30  +    -0.04651262852266 * AcceptedCmp40
1331896   +          +     1.12079204972473 * AcceptedCmp50  +     0.01995812214945 *
1331897   +        Complain0  +    -0.10554781512031 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.24751093651686 * AcceptedCmp10 + 0.07782559575868 * 
AcceptedCmp20 + -0.31714859220477 * AcceptedCmp30 + -0.04651262852266 * AcceptedCmp40 + 
1.12079204972473 * AcceptedCmp50 + 0.01995812214945 * Complain0 + -0.10554781512031 * 
HigherEducationBinary0 ;
1331898   +   H13  = H13  +     0.24429915728404 * AcceptedCmp10
1331899   +          +     0.61295080768552 * AcceptedCmp20  +     0.44102169319186 *
1331900   +        AcceptedCmp30  +     0.47980251068529 * AcceptedCmp40
1331901   +          +     0.10988021992419 * AcceptedCmp50  +     0.28313602324535 *
1331902   +        Complain0  +    -0.23261190302425 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.24429915728404 * AcceptedCmp10 + 0.61295080768552 * 
AcceptedCmp20 + 0.44102169319186 * AcceptedCmp30 + 0.47980251068529 * AcceptedCmp40 + 
0.10988021992419 * AcceptedCmp50 + 0.28313602324535 * Complain0 + -0.23261190302425 * 
HigherEducationBinary0 ;
1331903   +   H11  = H11  +     0.01626472365517 * Education2n_Cycle
1331904   +          +     0.14365936599314 * EducationBasic  +      0.3318092181003 *
1331905   +        EducationGraduation  +    -0.04307117865412 * EducationMaster
1331906   +          +     0.09616912826117 * Marital_StatusDivorced
1331907   +          +     0.15377557778014 * Marital_StatusMarried
1331908   +          +    -0.20686296055741 * Marital_StatusSingle
1331909   +          +    -0.02512911479575 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.01626472365517 * Education2n_Cycle + 0.14365936599314 * 
EducationBasic + 0.3318092181003 * EducationGraduation + -0.04307117865412 * EducationMaster + 
0.09616912826117 * Marital_StatusDivorced + 0.15377557778014 * Marital_StatusMarried + 
-0.20686296055741 * Marital_StatusSingle + -0.02512911479575 * Marital_StatusTogether ;
1331910   +   H12  = H12  +    -0.23609122137422 * Education2n_Cycle
1331911   +          +     0.32804834977485 * EducationBasic  +    -0.02696870760206 *
1331912   +        EducationGraduation  +     0.07379681316678 * EducationMaster
1331913   +          +    -0.18362421441913 * Marital_StatusDivorced
1331914   +          +     0.14861660317702 * Marital_StatusMarried
1331915   +          +    -0.51051982152027 * Marital_StatusSingle
1331916   +          +     0.13742493760562 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.23609122137422 * Education2n_Cycle + 0.32804834977485 * 
EducationBasic + -0.02696870760206 * EducationGraduation + 0.07379681316678 * EducationMaster 
+ -0.18362421441913 * Marital_StatusDivorced + 0.14861660317702 * Marital_StatusMarried + 
-0.51051982152027 * Marital_StatusSingle + 0.13742493760562 * Marital_StatusTogether ;
1331917   +   H13  = H13  +     0.13227832845665 * Education2n_Cycle
1331918   +          +     -0.1369481832857 * EducationBasic  +      0.1472139603427 *
1331919   +        EducationGraduation  +     0.27596372441804 * EducationMaster
1331920   +          +    -0.65088528624708 * Marital_StatusDivorced
1331921   +          +     1.85383531288095 * Marital_StatusMarried
1331922   +          +    -1.45031245605509 * Marital_StatusSingle
1331923   +          +     1.19623402360662 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.13227832845665 * Education2n_Cycle + -0.1369481832857 * 
EducationBasic + 0.1472139603427 * EducationGraduation + 0.27596372441804 * EducationMaster + 
-0.65088528624708 * Marital_StatusDivorced + 1.85383531288095 * Marital_StatusMarried + 
-1.45031245605509 * Marital_StatusSingle + 1.19623402360662 * Marital_StatusTogether ;
1331924   +   H11  =    -1.19945523281267 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.19945523281267 + H11 ;
1331925   +   H12  =     0.40473145844756 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.40473145844756 + H12 ;
1331926   +   H13  =     1.86025159730213 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.86025159730213 + H13 ;
1331927   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1331928   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1331929   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1331930   +END;
MPRINT(EM_DIAGRAM):   END;
1331931   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1331932   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1331933   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1331934   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1331935   +END;
MPRINT(EM_DIAGRAM):   END;
1331936   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1331937   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1331938   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1331939   +
1331940   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1331941   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1331942   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1331943   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1331944   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1331945   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1331946   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1331947   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1331948   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1331949   +end;
MPRINT(EM_DIAGRAM):   end;
1331950   +else do;
MPRINT(EM_DIAGRAM):   else do;
1331951   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1331952   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1331953   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1331954   +   end;
MPRINT(EM_DIAGRAM):   end;
1331955   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1331956   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1331957   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1331958   +   end;
MPRINT(EM_DIAGRAM):   end;
1331959   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1331960   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1331961   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1331962   +   end;
MPRINT(EM_DIAGRAM):   end;
1331963   +end;
MPRINT(EM_DIAGRAM):   end;
1331964   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1331965   +   P_DepVar1  =     2.59495030782086 * H11  +    -2.95318868021515 * H12
1331966   +          +    -3.46108195946376 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.59495030782086 * H11 + -2.95318868021515 * H12 + 
-3.46108195946376 * H13 ;
1331967   +   P_DepVar1  =    -0.18846734589192 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.18846734589192 + P_DepVar1 ;
1331968   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1331969   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1331970   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1331971   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1331972   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1331973   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1331974   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1331975   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1331976   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1331977   +END;
MPRINT(EM_DIAGRAM):   END;
1331978   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1331979   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1331980   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1331981   +END;
MPRINT(EM_DIAGRAM):   END;
1331982   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1331983   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1331984   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1331985   +END;
MPRINT(EM_DIAGRAM):   END;
1331986   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1331987   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1331988   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1331989   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1331990   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1331991   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1331992   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1331993   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1331994   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1331995   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1331996   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1331997   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1331998   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1331999   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1332000   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1332001   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1332002   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1332003   +END;
MPRINT(EM_DIAGRAM):   END;
1332004   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1332005   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1332006   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1332007   +drop
1332008   +H11
1332009   +H12
1332010   +H13
1332011   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1332012   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1332013   +* Renaming variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural3;
1332014   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1332015   +* Renaming Posterior variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural3;
1332016   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1332017   +drop Neural3_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar1;
1332018   +Neural3_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar1 = P_DepVar1;
1332019   +drop Neural3_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar0;
1332020   +Neural3_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar0 = P_DepVar0;
1332021   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1332022   +* Renaming _WARN_ variable for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural3;
1332023   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1332024   +length Neural3_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural3_WARN_ $4;
1332025   +drop Neural3_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural3_WARN_;
1332026   +Neural3_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural3_WARN_ = _WARN_;
1332027   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1332028   +* Ensmbl: Scoring Code of model 8 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl: Scoring Code of model 8 of 10;
1332029   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1332030   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1332031   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1332032   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1332033   +* NODE: Neural7;
MPRINT(EM_DIAGRAM):   * NODE: Neural7;
1332034   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1332035   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1332036   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1332037   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1332038   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1332039   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1332040   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1332041   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1332042   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1332043   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1332044   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1332045   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1332046   +LENGTH _WARN_ $4
1332047   +      F_DepVar  $ 12
1332048   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1332049   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1332050   +
1332051   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1332052   +
1332053   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1332054   +
1332055   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1332056   +
1332057   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1332058   +
1332059   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1332060   +
1332061   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1332062   +
1332063   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1332064   +
1332065   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1332066   +
1332067   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1332068   +
1332069   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1332070   +
1332071   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1332072   +
1332073   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1332074   +
1332075   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1332076   +
1332077   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1332078   +
1332079   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1332080   +
1332081   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1332082   +
1332083   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1332084   +
1332085   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1332086   +
1332087   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1332088   +
1332089   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1332090   +
1332091   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1332092   +
1332093   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1332094   +
1332095   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1332096   +
1332097   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1332098   +
1332099   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1332100   +
1332101   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1332102   +
1332103   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1332104   +
1332105   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1332106   +
1332107   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1332108   +
1332109   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1332110   +
1332111   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1332112   +
1332113   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1332114   +
1332115   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1332116   +
1332117   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1332118   +
1332119   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1332120   +
1332121   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1332122   +
1332123   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1332124   +
1332125   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1332126   +
1332127   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1332128   +
1332129   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1332130   +
1332131   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1332132   +
1332133   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1332134   +
1332135   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1332136   +
1332137   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1332138   +
1332139   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1332140   +
1332141   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1332142   +
1332143   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1332144   +
1332145   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1332146   +
1332147   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1332148   +
1332149   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1332150   +
1332151   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1332152   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1332153   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1332154   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1332155   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1332156   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1332157   +end;
MPRINT(EM_DIAGRAM):   end;
1332158   +else do;
MPRINT(EM_DIAGRAM):   else do;
1332159   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1332160   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1332161   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1332162   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1332163   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1332164   +   end;
MPRINT(EM_DIAGRAM):   end;
1332165   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1332166   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1332167   +   end;
MPRINT(EM_DIAGRAM):   end;
1332168   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1332169   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1332170   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1332171   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1332172   +   end;
MPRINT(EM_DIAGRAM):   end;
1332173   +end;
MPRINT(EM_DIAGRAM):   end;
1332174   +
1332175   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1332176   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1332177   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1332178   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1332179   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1332180   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1332181   +end;
MPRINT(EM_DIAGRAM):   end;
1332182   +else do;
MPRINT(EM_DIAGRAM):   else do;
1332183   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1332184   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1332185   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1332186   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1332187   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1332188   +   end;
MPRINT(EM_DIAGRAM):   end;
1332189   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1332190   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1332191   +   end;
MPRINT(EM_DIAGRAM):   end;
1332192   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1332193   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1332194   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1332195   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1332196   +   end;
MPRINT(EM_DIAGRAM):   end;
1332197   +end;
MPRINT(EM_DIAGRAM):   end;
1332198   +
1332199   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1332200   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1332201   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1332202   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1332203   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1332204   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1332205   +end;
MPRINT(EM_DIAGRAM):   end;
1332206   +else do;
MPRINT(EM_DIAGRAM):   else do;
1332207   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1332208   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1332209   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1332210   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1332211   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1332212   +   end;
MPRINT(EM_DIAGRAM):   end;
1332213   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1332214   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1332215   +   end;
MPRINT(EM_DIAGRAM):   end;
1332216   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1332217   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1332218   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1332219   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1332220   +   end;
MPRINT(EM_DIAGRAM):   end;
1332221   +end;
MPRINT(EM_DIAGRAM):   end;
1332222   +
1332223   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1332224   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1332225   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1332226   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1332227   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1332228   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1332229   +end;
MPRINT(EM_DIAGRAM):   end;
1332230   +else do;
MPRINT(EM_DIAGRAM):   else do;
1332231   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1332232   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1332233   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1332234   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1332235   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1332236   +   end;
MPRINT(EM_DIAGRAM):   end;
1332237   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1332238   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1332239   +   end;
MPRINT(EM_DIAGRAM):   end;
1332240   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1332241   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1332242   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1332243   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1332244   +   end;
MPRINT(EM_DIAGRAM):   end;
1332245   +end;
MPRINT(EM_DIAGRAM):   end;
1332246   +
1332247   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1332248   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1332249   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1332250   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1332251   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1332252   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1332253   +end;
MPRINT(EM_DIAGRAM):   end;
1332254   +else do;
MPRINT(EM_DIAGRAM):   else do;
1332255   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1332256   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1332257   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1332258   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1332259   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1332260   +   end;
MPRINT(EM_DIAGRAM):   end;
1332261   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1332262   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1332263   +   end;
MPRINT(EM_DIAGRAM):   end;
1332264   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1332265   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1332266   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1332267   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1332268   +   end;
MPRINT(EM_DIAGRAM):   end;
1332269   +end;
MPRINT(EM_DIAGRAM):   end;
1332270   +
1332271   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1332272   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1332273   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1332274   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1332275   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1332276   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1332277   +end;
MPRINT(EM_DIAGRAM):   end;
1332278   +else do;
MPRINT(EM_DIAGRAM):   else do;
1332279   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1332280   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1332281   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1332282   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1332283   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1332284   +   end;
MPRINT(EM_DIAGRAM):   end;
1332285   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1332286   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1332287   +   end;
MPRINT(EM_DIAGRAM):   end;
1332288   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1332289   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1332290   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1332291   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1332292   +   end;
MPRINT(EM_DIAGRAM):   end;
1332293   +end;
MPRINT(EM_DIAGRAM):   end;
1332294   +
1332295   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1332296   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1332297   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1332298   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1332299   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1332300   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1332301   +end;
MPRINT(EM_DIAGRAM):   end;
1332302   +else do;
MPRINT(EM_DIAGRAM):   else do;
1332303   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1332304   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1332305   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1332306   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1332307   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1332308   +   end;
MPRINT(EM_DIAGRAM):   end;
1332309   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1332310   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1332311   +   end;
MPRINT(EM_DIAGRAM):   end;
1332312   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1332313   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1332314   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1332315   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1332316   +   end;
MPRINT(EM_DIAGRAM):   end;
1332317   +end;
MPRINT(EM_DIAGRAM):   end;
1332318   +
1332319   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1332320   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1332321   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1332322   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1332323   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1332324   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1332325   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1332326   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1332327   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1332328   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1332329   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1332330   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1332331   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1332332   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1332333   +end;
MPRINT(EM_DIAGRAM):   end;
1332334   +else do;
MPRINT(EM_DIAGRAM):   else do;
1332335   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1332336   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1332337   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1332338   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1332339   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1332340   +   end;
MPRINT(EM_DIAGRAM):   end;
1332341   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1332342   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1332343   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1332344   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1332345   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1332346   +   end;
MPRINT(EM_DIAGRAM):   end;
1332347   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1332348   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1332349   +   end;
MPRINT(EM_DIAGRAM):   end;
1332350   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1332351   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1332352   +   end;
MPRINT(EM_DIAGRAM):   end;
1332353   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1332354   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1332355   +   end;
MPRINT(EM_DIAGRAM):   end;
1332356   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1332357   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1332358   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1332359   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1332360   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1332361   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1332362   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1332363   +   end;
MPRINT(EM_DIAGRAM):   end;
1332364   +end;
MPRINT(EM_DIAGRAM):   end;
1332365   +
1332366   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1332367   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1332368   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1332369   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1332370   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1332371   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1332372   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1332373   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1332374   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1332375   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1332376   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1332377   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1332378   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1332379   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1332380   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1332381   +end;
MPRINT(EM_DIAGRAM):   end;
1332382   +else do;
MPRINT(EM_DIAGRAM):   else do;
1332383   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1332384   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1332385   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1332386   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1332387   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1332388   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1332389   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1332390   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1332391   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1332392   +         end;
MPRINT(EM_DIAGRAM):   end;
1332393   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1332394   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1332395   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1332396   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1332397   +            end;
MPRINT(EM_DIAGRAM):   end;
1332398   +         end;
MPRINT(EM_DIAGRAM):   end;
1332399   +      end;
MPRINT(EM_DIAGRAM):   end;
1332400   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1332401   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1332402   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1332403   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1332404   +         end;
MPRINT(EM_DIAGRAM):   end;
1332405   +      end;
MPRINT(EM_DIAGRAM):   end;
1332406   +   end;
MPRINT(EM_DIAGRAM):   end;
1332407   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1332408   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1332409   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1332410   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1332411   +      end;
MPRINT(EM_DIAGRAM):   end;
1332412   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1332413   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1332414   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1332415   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1332416   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1332417   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1332418   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1332419   +         end;
MPRINT(EM_DIAGRAM):   end;
1332420   +      end;
MPRINT(EM_DIAGRAM):   end;
1332421   +   end;
MPRINT(EM_DIAGRAM):   end;
1332422   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1332423   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1332424   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1332425   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1332426   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1332427   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1332428   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1332429   +   end;
MPRINT(EM_DIAGRAM):   end;
1332430   +end;
MPRINT(EM_DIAGRAM):   end;
1332431   +
1332432   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1332433   +*** Checking missing input Interval
1332434   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1332435   +
1332436   +IF NMISS(
1332437   +   AcceptedCmpTotal ,
1332438   +   Age ,
1332439   +   Frq ,
1332440   +   Income ,
1332441   +   Kidhome ,
1332442   +   Mnt ,
1332443   +   MntFishProducts ,
1332444   +   MntFruits ,
1332445   +   MntGoldProds ,
1332446   +   MntMeatProducts ,
1332447   +   MntSweetProducts ,
1332448   +   MntWines ,
1332449   +   MonthsAsCustomer ,
1332450   +   NumCatalogPurchases ,
1332451   +   NumDealsPurchases ,
1332452   +   NumDistPurchases ,
1332453   +   NumStorePurchases ,
1332454   +   NumWebPurchases ,
1332455   +   NumWebVisitsMonth ,
1332456   +   RFMstat ,
1332457   +   RMntFrq ,
1332458   +   Recency ,
1332459   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1332460   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1332461   +
1332462   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1332463   +END;
MPRINT(EM_DIAGRAM):   END;
1332464   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1332465   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1332466   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1332467   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1332468   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1332469   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1332470   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1332471   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1332472   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1332473   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1332474   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1332475   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1332476   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1332477   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1332478   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1332479   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1332480   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1332481   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1332482   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1332483   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1332484   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1332485   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1332486   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1332487   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1332488   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1332489   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1332490   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1332491   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1332492   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1332493   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1332494   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1332495   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1332496   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1332497   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1332498   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1332499   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1332500   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1332501   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1332502   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1332503   +END;
MPRINT(EM_DIAGRAM):   END;
1332504   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1332505   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1332506   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1332507   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1332508   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1332509   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1332510   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1332511   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1332512   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1332513   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1332514   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1332515   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1332516   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1332517   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1332518   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1332519   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1332520   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1332521   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1332522   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1332523   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1332524   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1332525   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1332526   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1332527   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1332528   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1332529   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1332530   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1332531   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1332532   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1332533   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1332534   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1332535   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1332536   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1332537   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1332538   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1332539   +   ELSE S_NumCatalogPurchases
1332540   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1332541   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1332542   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1332543   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1332544   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1332545   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1332546   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1332547   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1332548   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1332549   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1332550   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1332551   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1332552   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1332553   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1332554   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1332555   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1332556   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1332557   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1332558   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1332559   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1332560   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1332561   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1332562   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1332563   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1332564   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1332565   +END;
MPRINT(EM_DIAGRAM):   END;
1332566   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1332567   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1332568   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1332569   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1332570   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1332571   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1332572   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1332573   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1332574   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1332575   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1332576   +   H11  =     -0.4861272258755 * S_AcceptedCmpTotal  +    -0.05189637306711 *
1332577   +        S_Age  +    -0.30315098258233 * S_Frq  +    -1.10363388640565 *
1332578   +        S_Income  +     0.49482308043138 * S_Kidhome
1332579   +          +    -0.21806866463657 * S_Mnt  +    -0.07009712511746 *
1332580   +        S_MntFishProducts  +     0.18128886998186 * S_MntFruits
1332581   +          +     0.08667708198542 * S_MntGoldProds  +    -0.34562904453263 *
1332582   +        S_MntMeatProducts  +     0.24207000188265 * S_MntSweetProducts
1332583   +          +     0.73913803788025 * S_MntWines  +    -0.12494500176265 *
1332584   +        S_MonthsAsCustomer  +    -0.45211334823309 * S_NumCatalogPurchases
1332585   +          +    -0.06511788072827 * S_NumDealsPurchases
1332586   +          +    -0.38159596394204 * S_NumDistPurchases
1332587   +          +     0.15411219967595 * S_NumStorePurchases
1332588   +          +     0.21139765335417 * S_NumWebPurchases
1332589   +          +    -1.04359200301033 * S_NumWebVisitsMonth
1332590   +          +      0.1090284887692 * S_RFMstat  +    -0.44883493072151 *
1332591   +        S_RMntFrq  +     1.34562786069569 * S_Recency
1332592   +          +     0.89460449958447 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.4861272258755 * S_AcceptedCmpTotal + -0.05189637306711 * S_Age 
+ -0.30315098258233 * S_Frq + -1.10363388640565 * S_Income + 0.49482308043138 * S_Kidhome + 
-0.21806866463657 * S_Mnt + -0.07009712511746 * S_MntFishProducts + 0.18128886998186 * 
S_MntFruits + 0.08667708198542 * S_MntGoldProds + -0.34562904453263 * S_MntMeatProducts + 
0.24207000188265 * S_MntSweetProducts + 0.73913803788025 * S_MntWines + -0.12494500176265 * 
S_MonthsAsCustomer + -0.45211334823309 * S_NumCatalogPurchases + -0.06511788072827 * 
S_NumDealsPurchases + -0.38159596394204 * S_NumDistPurchases + 0.15411219967595 * 
S_NumStorePurchases + 0.21139765335417 * S_NumWebPurchases + -1.04359200301033 * 
S_NumWebVisitsMonth + 0.1090284887692 * S_RFMstat + -0.44883493072151 * S_RMntFrq + 
1.34562786069569 * S_Recency + 0.89460449958447 * S_Teenhome ;
1332593   +   H12  =     0.49470690944633 * S_AcceptedCmpTotal  +      0.0261154901688 *
1332594   +        S_Age  +    -0.04461338015446 * S_Frq  +     0.49903480336525 *
1332595   +        S_Income  +     0.23698260075506 * S_Kidhome
1332596   +          +     0.24476004659493 * S_Mnt  +    -0.49492355746365 *
1332597   +        S_MntFishProducts  +    -0.09271328974329 * S_MntFruits
1332598   +          +     0.20870223796971 * S_MntGoldProds  +     2.14489337337229 *
1332599   +        S_MntMeatProducts  +     0.05836783904648 * S_MntSweetProducts
1332600   +          +    -0.80559423936695 * S_MntWines  +     0.05650618948417 *
1332601   +        S_MonthsAsCustomer  +     1.52325923960607 * S_NumCatalogPurchases
1332602   +          +     0.75951783049608 * S_NumDealsPurchases
1332603   +          +     0.27731850886303 * S_NumDistPurchases
1332604   +          +    -0.72597847158122 * S_NumStorePurchases
1332605   +          +    -0.87186594418005 * S_NumWebPurchases
1332606   +          +     0.22778956336256 * S_NumWebVisitsMonth
1332607   +          +     0.52707843426664 * S_RFMstat  +     0.08310736513647 *
1332608   +        S_RMntFrq  +    -0.24127828094269 * S_Recency
1332609   +          +    -0.09777624700028 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.49470690944633 * S_AcceptedCmpTotal + 0.0261154901688 * S_Age + 
-0.04461338015446 * S_Frq + 0.49903480336525 * S_Income + 0.23698260075506 * S_Kidhome + 
0.24476004659493 * S_Mnt + -0.49492355746365 * S_MntFishProducts + -0.09271328974329 * 
S_MntFruits + 0.20870223796971 * S_MntGoldProds + 2.14489337337229 * S_MntMeatProducts + 
0.05836783904648 * S_MntSweetProducts + -0.80559423936695 * S_MntWines + 0.05650618948417 * 
S_MonthsAsCustomer + 1.52325923960607 * S_NumCatalogPurchases + 0.75951783049608 * 
S_NumDealsPurchases + 0.27731850886303 * S_NumDistPurchases + -0.72597847158122 * 
S_NumStorePurchases + -0.87186594418005 * S_NumWebPurchases + 0.22778956336256 * 
S_NumWebVisitsMonth + 0.52707843426664 * S_RFMstat + 0.08310736513647 * S_RMntFrq + 
-0.24127828094269 * S_Recency + -0.09777624700028 * S_Teenhome ;
1332610   +   H13  =    -0.14339467136572 * S_AcceptedCmpTotal  +     0.01822297952084 *
1332611   +        S_Age  +    -0.09520130583725 * S_Frq  +    -0.03136906489645 *
1332612   +        S_Income  +    -0.02135707281355 * S_Kidhome
1332613   +          +       0.155894017168 * S_Mnt  +     0.08475472787843 *
1332614   +        S_MntFishProducts  +    -0.07789908506466 * S_MntFruits
1332615   +          +     0.10660062798043 * S_MntGoldProds  +     0.16015984966551 *
1332616   +        S_MntMeatProducts  +    -0.27612516960004 * S_MntSweetProducts
1332617   +          +     -0.2896840938935 * S_MntWines  +    -0.26254012296363 *
1332618   +        S_MonthsAsCustomer  +    -0.12998608904182 * S_NumCatalogPurchases
1332619   +          +    -0.07354863705565 * S_NumDealsPurchases
1332620   +          +    -0.11447983414298 * S_NumDistPurchases
1332621   +          +    -0.12215729534897 * S_NumStorePurchases
1332622   +          +    -0.12902195457851 * S_NumWebPurchases
1332623   +          +     0.19434933394862 * S_NumWebVisitsMonth
1332624   +          +     0.28975506236609 * S_RFMstat  +     0.29422521951226 *
1332625   +        S_RMntFrq  +    -0.17552894408192 * S_Recency
1332626   +          +     -0.1580830073017 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.14339467136572 * S_AcceptedCmpTotal + 0.01822297952084 * S_Age 
+ -0.09520130583725 * S_Frq + -0.03136906489645 * S_Income + -0.02135707281355 * S_Kidhome + 
0.155894017168 * S_Mnt + 0.08475472787843 * S_MntFishProducts + -0.07789908506466 * 
S_MntFruits + 0.10660062798043 * S_MntGoldProds + 0.16015984966551 * S_MntMeatProducts + 
-0.27612516960004 * S_MntSweetProducts + -0.2896840938935 * S_MntWines + -0.26254012296363 * 
S_MonthsAsCustomer + -0.12998608904182 * S_NumCatalogPurchases + -0.07354863705565 * 
S_NumDealsPurchases + -0.11447983414298 * S_NumDistPurchases + -0.12215729534897 * 
S_NumStorePurchases + -0.12902195457851 * S_NumWebPurchases + 0.19434933394862 * 
S_NumWebVisitsMonth + 0.28975506236609 * S_RFMstat + 0.29422521951226 * S_RMntFrq + 
-0.17552894408192 * S_Recency + -0.1580830073017 * S_Teenhome ;
1332627   +   H14  =     0.02093644707827 * S_AcceptedCmpTotal  +     0.20395783918661 *
1332628   +        S_Age  +     0.59442731897797 * S_Frq  +     0.29119798252337 *
1332629   +        S_Income  +    -0.45406848052616 * S_Kidhome
1332630   +          +    -0.07771670260258 * S_Mnt  +     0.22748787488449 *
1332631   +        S_MntFishProducts  +    -0.17850998839546 * S_MntFruits
1332632   +          +     0.26951758688823 * S_MntGoldProds  +    -0.79968061180107 *
1332633   +        S_MntMeatProducts  +     -0.1140667580899 * S_MntSweetProducts
1332634   +          +      0.4869411024289 * S_MntWines  +    -0.01712813082958 *
1332635   +        S_MonthsAsCustomer  +    -0.84487773781523 * S_NumCatalogPurchases
1332636   +          +     -0.7419997885817 * S_NumDealsPurchases
1332637   +          +     0.27831770188348 * S_NumDistPurchases
1332638   +          +     0.59857930354045 * S_NumStorePurchases
1332639   +          +     0.64048264413595 * S_NumWebPurchases
1332640   +          +    -0.50793007710291 * S_NumWebVisitsMonth
1332641   +          +    -0.14149333808405 * S_RFMstat  +     0.01746285773092 *
1332642   +        S_RMntFrq  +     0.40903481897501 * S_Recency
1332643   +          +    -0.09082840454575 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.02093644707827 * S_AcceptedCmpTotal + 0.20395783918661 * S_Age + 
0.59442731897797 * S_Frq + 0.29119798252337 * S_Income + -0.45406848052616 * S_Kidhome + 
-0.07771670260258 * S_Mnt + 0.22748787488449 * S_MntFishProducts + -0.17850998839546 * 
S_MntFruits + 0.26951758688823 * S_MntGoldProds + -0.79968061180107 * S_MntMeatProducts + 
-0.1140667580899 * S_MntSweetProducts + 0.4869411024289 * S_MntWines + -0.01712813082958 * 
S_MonthsAsCustomer + -0.84487773781523 * S_NumCatalogPurchases + -0.7419997885817 * 
S_NumDealsPurchases + 0.27831770188348 * S_NumDistPurchases + 0.59857930354045 * 
S_NumStorePurchases + 0.64048264413595 * S_NumWebPurchases + -0.50793007710291 * 
S_NumWebVisitsMonth + -0.14149333808405 * S_RFMstat + 0.01746285773092 * S_RMntFrq + 
0.40903481897501 * S_Recency + -0.09082840454575 * S_Teenhome ;
1332644   +   H15  =    -0.54395842220188 * S_AcceptedCmpTotal  +    -0.00659873517805 *
1332645   +        S_Age  +     0.13328067508696 * S_Frq  +    -0.40683362094427 *
1332646   +        S_Income  +     0.78347324989919 * S_Kidhome
1332647   +          +    -0.08815491299054 * S_Mnt  +     0.24650131354859 *
1332648   +        S_MntFishProducts  +     0.08184618135481 * S_MntFruits
1332649   +          +    -0.12412058422094 * S_MntGoldProds  +    -0.82851470750716 *
1332650   +        S_MntMeatProducts  +     0.04998663129465 * S_MntSweetProducts
1332651   +          +     0.40431404211888 * S_MntWines  +     0.20441979242265 *
1332652   +        S_MonthsAsCustomer  +    -0.59560487920908 * S_NumCatalogPurchases
1332653   +          +    -0.51611441201596 * S_NumDealsPurchases
1332654   +          +     0.08384183916368 * S_NumDistPurchases
1332655   +          +     0.61287235664869 * S_NumStorePurchases
1332656   +          +      0.6529111332187 * S_NumWebPurchases
1332657   +          +    -1.46254898694754 * S_NumWebVisitsMonth
1332658   +          +    -0.12654274035522 * S_RFMstat  +     0.44674987490347 *
1332659   +        S_RMntFrq  +     1.38435640479916 * S_Recency
1332660   +          +     0.33296597278129 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.54395842220188 * S_AcceptedCmpTotal + -0.00659873517805 * S_Age 
+ 0.13328067508696 * S_Frq + -0.40683362094427 * S_Income + 0.78347324989919 * S_Kidhome + 
-0.08815491299054 * S_Mnt + 0.24650131354859 * S_MntFishProducts + 0.08184618135481 * 
S_MntFruits + -0.12412058422094 * S_MntGoldProds + -0.82851470750716 * S_MntMeatProducts + 
0.04998663129465 * S_MntSweetProducts + 0.40431404211888 * S_MntWines + 0.20441979242265 * 
S_MonthsAsCustomer + -0.59560487920908 * S_NumCatalogPurchases + -0.51611441201596 * 
S_NumDealsPurchases + 0.08384183916368 * S_NumDistPurchases + 0.61287235664869 * 
S_NumStorePurchases + 0.6529111332187 * S_NumWebPurchases + -1.46254898694754 * 
S_NumWebVisitsMonth + -0.12654274035522 * S_RFMstat + 0.44674987490347 * S_RMntFrq + 
1.38435640479916 * S_Recency + 0.33296597278129 * S_Teenhome ;
1332661   +   H11  = H11  +    -0.00998851481276 * AcceptedCmp10
1332662   +          +     0.32921116293054 * AcceptedCmp20  +     0.31125214601572 *
1332663   +        AcceptedCmp30  +     0.49394812035071 * AcceptedCmp40
1332664   +          +    -0.13967719688623 * AcceptedCmp50  +     0.10069638637668 *
1332665   +        Complain0  +    -0.33122877949584 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.00998851481276 * AcceptedCmp10 + 0.32921116293054 * 
AcceptedCmp20 + 0.31125214601572 * AcceptedCmp30 + 0.49394812035071 * AcceptedCmp40 + 
-0.13967719688623 * AcceptedCmp50 + 0.10069638637668 * Complain0 + -0.33122877949584 * 
HigherEducationBinary0 ;
1332666   +   H12  = H12  +    -0.19856686646083 * AcceptedCmp10
1332667   +          +     0.23310696712955 * AcceptedCmp20  +     0.20346336135422 *
1332668   +        AcceptedCmp30  +     0.30256624409423 * AcceptedCmp40
1332669   +          +    -0.29335754278392 * AcceptedCmp50  +     0.21323212558806 *
1332670   +        Complain0  +    -0.13556600599489 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.19856686646083 * AcceptedCmp10 + 0.23310696712955 * 
AcceptedCmp20 + 0.20346336135422 * AcceptedCmp30 + 0.30256624409423 * AcceptedCmp40 + 
-0.29335754278392 * AcceptedCmp50 + 0.21323212558806 * Complain0 + -0.13556600599489 * 
HigherEducationBinary0 ;
1332671   +   H13  = H13  +    -0.01722105367877 * AcceptedCmp10
1332672   +          +     0.03291794356955 * AcceptedCmp20  +     0.05944626529099 *
1332673   +        AcceptedCmp30  +    -0.05221243291111 * AcceptedCmp40
1332674   +          +     0.17912917985939 * AcceptedCmp50  +    -0.15861965360776 *
1332675   +        Complain0  +     0.12900426780961 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.01722105367877 * AcceptedCmp10 + 0.03291794356955 * 
AcceptedCmp20 + 0.05944626529099 * AcceptedCmp30 + -0.05221243291111 * AcceptedCmp40 + 
0.17912917985939 * AcceptedCmp50 + -0.15861965360776 * Complain0 + 0.12900426780961 * 
HigherEducationBinary0 ;
1332676   +   H14  = H14  +     0.06387950776559 * AcceptedCmp10
1332677   +          +      0.2872534864949 * AcceptedCmp20  +     0.51726192943362 *
1332678   +        AcceptedCmp30  +     0.00602188882249 * AcceptedCmp40
1332679   +          +     0.32401593400636 * AcceptedCmp50  +     0.46704484165073 *
1332680   +        Complain0  +     0.18433576051792 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.06387950776559 * AcceptedCmp10 + 0.2872534864949 * 
AcceptedCmp20 + 0.51726192943362 * AcceptedCmp30 + 0.00602188882249 * AcceptedCmp40 + 
0.32401593400636 * AcceptedCmp50 + 0.46704484165073 * Complain0 + 0.18433576051792 * 
HigherEducationBinary0 ;
1332681   +   H15  = H15  +      0.2705244136245 * AcceptedCmp10
1332682   +          +     0.37082512037556 * AcceptedCmp20  +     0.13484905564511 *
1332683   +        AcceptedCmp30  +      0.0945945695678 * AcceptedCmp40
1332684   +          +     0.49264779479372 * AcceptedCmp50  +     0.02840120006931 *
1332685   +        Complain0  +     0.01012130065838 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.2705244136245 * AcceptedCmp10 + 0.37082512037556 * 
AcceptedCmp20 + 0.13484905564511 * AcceptedCmp30 + 0.0945945695678 * AcceptedCmp40 + 
0.49264779479372 * AcceptedCmp50 + 0.02840120006931 * Complain0 + 0.01012130065838 * 
HigherEducationBinary0 ;
1332686   +   H11  = H11  +     0.19487730016213 * Education2n_Cycle
1332687   +          +    -0.07970756533219 * EducationBasic  +    -0.00249127525942 *
1332688   +        EducationGraduation  +     0.05566108043576 * EducationMaster
1332689   +          +    -0.44050788959765 * Marital_StatusDivorced
1332690   +          +     1.05705004944669 * Marital_StatusMarried
1332691   +          +    -0.96451435752717 * Marital_StatusSingle
1332692   +          +     1.00265132362409 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.19487730016213 * Education2n_Cycle + -0.07970756533219 * 
EducationBasic + -0.00249127525942 * EducationGraduation + 0.05566108043576 * EducationMaster 
+ -0.44050788959765 * Marital_StatusDivorced + 1.05705004944669 * Marital_StatusMarried + 
-0.96451435752717 * Marital_StatusSingle + 1.00265132362409 * Marital_StatusTogether ;
1332693   +   H12  = H12  +     0.19745100530679 * Education2n_Cycle
1332694   +          +    -0.10079088668307 * EducationBasic  +     0.02404299835038 *
1332695   +        EducationGraduation  +      0.0340690439206 * EducationMaster
1332696   +          +    -0.21967258137916 * Marital_StatusDivorced
1332697   +          +     0.37571162461413 * Marital_StatusMarried
1332698   +          +    -0.14215095739521 * Marital_StatusSingle
1332699   +          +     0.46670526265514 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.19745100530679 * Education2n_Cycle + -0.10079088668307 * 
EducationBasic + 0.02404299835038 * EducationGraduation + 0.0340690439206 * EducationMaster + 
-0.21967258137916 * Marital_StatusDivorced + 0.37571162461413 * Marital_StatusMarried + 
-0.14215095739521 * Marital_StatusSingle + 0.46670526265514 * Marital_StatusTogether ;
1332700   +   H13  = H13  +      0.0623691087211 * Education2n_Cycle
1332701   +          +    -0.33655773682797 * EducationBasic  +     0.16528476523732 *
1332702   +        EducationGraduation  +     0.12766333771333 * EducationMaster
1332703   +          +     -0.0802366153164 * Marital_StatusDivorced
1332704   +          +     0.03786873526752 * Marital_StatusMarried
1332705   +          +     0.00312869012906 * Marital_StatusSingle
1332706   +          +    -0.00653511004071 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.0623691087211 * Education2n_Cycle + -0.33655773682797 * 
EducationBasic + 0.16528476523732 * EducationGraduation + 0.12766333771333 * EducationMaster + 
-0.0802366153164 * Marital_StatusDivorced + 0.03786873526752 * Marital_StatusMarried + 
0.00312869012906 * Marital_StatusSingle + -0.00653511004071 * Marital_StatusTogether ;
1332707   +   H14  = H14  +     0.23561684440206 * Education2n_Cycle
1332708   +          +     0.19772542317614 * EducationBasic  +    -0.01658765862665 *
1332709   +        EducationGraduation  +    -0.04275711813742 * EducationMaster
1332710   +          +      0.1354388000076 * Marital_StatusDivorced
1332711   +          +    -0.39881989621029 * Marital_StatusMarried
1332712   +          +     0.31082414702417 * Marital_StatusSingle
1332713   +          +    -0.23211065362686 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.23561684440206 * Education2n_Cycle + 0.19772542317614 * 
EducationBasic + -0.01658765862665 * EducationGraduation + -0.04275711813742 * EducationMaster 
+ 0.1354388000076 * Marital_StatusDivorced + -0.39881989621029 * Marital_StatusMarried + 
0.31082414702417 * Marital_StatusSingle + -0.23211065362686 * Marital_StatusTogether ;
1332714   +   H15  = H15  +    -0.23088632938738 * Education2n_Cycle
1332715   +          +     0.08999420370752 * EducationBasic  +    -0.11102395071934 *
1332716   +        EducationGraduation  +     0.22556288381362 * EducationMaster
1332717   +          +    -0.21036089859855 * Marital_StatusDivorced
1332718   +          +     0.68363662719948 * Marital_StatusMarried
1332719   +          +    -0.52766746827942 * Marital_StatusSingle
1332720   +          +     0.85776128537024 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.23088632938738 * Education2n_Cycle + 0.08999420370752 * 
EducationBasic + -0.11102395071934 * EducationGraduation + 0.22556288381362 * EducationMaster 
+ -0.21036089859855 * Marital_StatusDivorced + 0.68363662719948 * Marital_StatusMarried + 
-0.52766746827942 * Marital_StatusSingle + 0.85776128537024 * Marital_StatusTogether ;
1332721   +   H11  =     1.95018025194886 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.95018025194886 + H11 ;
1332722   +   H12  =     0.17843928986556 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.17843928986556 + H12 ;
1332723   +   H13  =    -2.95793338914875 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -2.95793338914875 + H13 ;
1332724   +   H14  =     0.65864057076307 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.65864057076307 + H14 ;
1332725   +   H15  =    -0.16712892170551 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.16712892170551 + H15 ;
1332726   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1332727   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1332728   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1332729   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1332730   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1332731   +END;
MPRINT(EM_DIAGRAM):   END;
1332732   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1332733   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1332734   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1332735   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1332736   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1332737   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1332738   +END;
MPRINT(EM_DIAGRAM):   END;
1332739   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1332740   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1332741   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1332742   +
1332743   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1332744   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1332745   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1332746   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1332747   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1332748   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1332749   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1332750   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1332751   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1332752   +end;
MPRINT(EM_DIAGRAM):   end;
1332753   +else do;
MPRINT(EM_DIAGRAM):   else do;
1332754   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1332755   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1332756   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1332757   +   end;
MPRINT(EM_DIAGRAM):   end;
1332758   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1332759   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1332760   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1332761   +   end;
MPRINT(EM_DIAGRAM):   end;
1332762   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1332763   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1332764   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1332765   +   end;
MPRINT(EM_DIAGRAM):   end;
1332766   +end;
MPRINT(EM_DIAGRAM):   end;
1332767   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1332768   +   P_DepVar1  =     -3.1843124920179 * H11  +     3.14684332137523 * H12
1332769   +          +     0.05566824550862 * H13  +    -2.15942017561302 * H14
1332770   +          +    -3.42546418986096 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.1843124920179 * H11 + 3.14684332137523 * H12 + 
0.05566824550862 * H13 + -2.15942017561302 * H14 + -3.42546418986096 * H15 ;
1332771   +   P_DepVar1  =    -1.09960037898167 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.09960037898167 + P_DepVar1 ;
1332772   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1332773   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1332774   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1332775   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1332776   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1332777   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1332778   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1332779   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1332780   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1332781   +END;
MPRINT(EM_DIAGRAM):   END;
1332782   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1332783   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1332784   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1332785   +END;
MPRINT(EM_DIAGRAM):   END;
1332786   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1332787   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1332788   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1332789   +END;
MPRINT(EM_DIAGRAM):   END;
1332790   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1332791   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1332792   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1332793   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1332794   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1332795   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1332796   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1332797   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1332798   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1332799   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1332800   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1332801   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1332802   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1332803   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1332804   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1332805   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1332806   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1332807   +END;
MPRINT(EM_DIAGRAM):   END;
1332808   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1332809   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1332810   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1332811   +drop
1332812   +H11
1332813   +H12
1332814   +H13
1332815   +H14
1332816   +H15
1332817   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
1332818   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1332819   +* Renaming variables for Neural7;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural7;
1332820   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1332821   +* Renaming Posterior variables for Neural7;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural7;
1332822   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1332823   +drop Neural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural7_P_DepVar1;
1332824   +Neural7_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural7_P_DepVar1 = P_DepVar1;
1332825   +drop Neural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural7_P_DepVar0;
1332826   +Neural7_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural7_P_DepVar0 = P_DepVar0;
1332827   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1332828   +* Renaming _WARN_ variable for Neural7;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural7;
1332829   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1332830   +length Neural7_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural7_WARN_ $4;
1332831   +drop Neural7_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural7_WARN_;
1332832   +Neural7_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural7_WARN_ = _WARN_;
1332833   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1332834   +* Ensmbl: Scoring Code of model 9 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl: Scoring Code of model 9 of 10;
1332835   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1332836   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1332837   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1332838   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1332839   +* NODE: Neural9;
MPRINT(EM_DIAGRAM):   * NODE: Neural9;
1332840   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1332841   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1332842   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1332843   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1332844   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1332845   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1332846   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1332847   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1332848   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1332849   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1332850   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1332851   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1332852   +LENGTH _WARN_ $4
1332853   +      F_DepVar  $ 12
1332854   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1332855   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1332856   +
1332857   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1332858   +
1332859   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1332860   +
1332861   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1332862   +
1332863   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1332864   +
1332865   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1332866   +
1332867   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1332868   +
1332869   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1332870   +
1332871   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1332872   +
1332873   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1332874   +
1332875   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1332876   +
1332877   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1332878   +
1332879   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1332880   +
1332881   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1332882   +
1332883   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1332884   +
1332885   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1332886   +
1332887   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1332888   +
1332889   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1332890   +
1332891   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1332892   +
1332893   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1332894   +
1332895   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1332896   +
1332897   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1332898   +
1332899   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1332900   +
1332901   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1332902   +
1332903   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1332904   +
1332905   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1332906   +
1332907   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1332908   +
1332909   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1332910   +
1332911   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1332912   +
1332913   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1332914   +
1332915   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1332916   +
1332917   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1332918   +
1332919   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1332920   +
1332921   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1332922   +
1332923   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1332924   +
1332925   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1332926   +
1332927   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1332928   +
1332929   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1332930   +
1332931   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1332932   +
1332933   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1332934   +
1332935   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1332936   +
1332937   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1332938   +
1332939   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1332940   +
1332941   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1332942   +
1332943   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1332944   +
1332945   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1332946   +
1332947   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1332948   +
1332949   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1332950   +
1332951   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1332952   +
1332953   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1332954   +
1332955   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1332956   +
1332957   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1332958   +
1332959   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1332960   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1332961   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1332962   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1332963   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1332964   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1332965   +end;
MPRINT(EM_DIAGRAM):   end;
1332966   +else do;
MPRINT(EM_DIAGRAM):   else do;
1332967   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1332968   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1332969   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1332970   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1332971   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1332972   +   end;
MPRINT(EM_DIAGRAM):   end;
1332973   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1332974   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1332975   +   end;
MPRINT(EM_DIAGRAM):   end;
1332976   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1332977   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1332978   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1332979   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1332980   +   end;
MPRINT(EM_DIAGRAM):   end;
1332981   +end;
MPRINT(EM_DIAGRAM):   end;
1332982   +
1332983   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1332984   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1332985   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1332986   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1332987   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1332988   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1332989   +end;
MPRINT(EM_DIAGRAM):   end;
1332990   +else do;
MPRINT(EM_DIAGRAM):   else do;
1332991   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1332992   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1332993   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1332994   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1332995   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1332996   +   end;
MPRINT(EM_DIAGRAM):   end;
1332997   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1332998   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1332999   +   end;
MPRINT(EM_DIAGRAM):   end;
1333000   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1333001   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1333002   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1333003   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1333004   +   end;
MPRINT(EM_DIAGRAM):   end;
1333005   +end;
MPRINT(EM_DIAGRAM):   end;
1333006   +
1333007   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1333008   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1333009   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1333010   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1333011   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1333012   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1333013   +end;
MPRINT(EM_DIAGRAM):   end;
1333014   +else do;
MPRINT(EM_DIAGRAM):   else do;
1333015   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1333016   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1333017   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1333018   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1333019   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1333020   +   end;
MPRINT(EM_DIAGRAM):   end;
1333021   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1333022   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1333023   +   end;
MPRINT(EM_DIAGRAM):   end;
1333024   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1333025   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1333026   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1333027   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1333028   +   end;
MPRINT(EM_DIAGRAM):   end;
1333029   +end;
MPRINT(EM_DIAGRAM):   end;
1333030   +
1333031   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1333032   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1333033   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1333034   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1333035   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1333036   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1333037   +end;
MPRINT(EM_DIAGRAM):   end;
1333038   +else do;
MPRINT(EM_DIAGRAM):   else do;
1333039   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1333040   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1333041   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1333042   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1333043   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1333044   +   end;
MPRINT(EM_DIAGRAM):   end;
1333045   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1333046   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1333047   +   end;
MPRINT(EM_DIAGRAM):   end;
1333048   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1333049   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1333050   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1333051   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1333052   +   end;
MPRINT(EM_DIAGRAM):   end;
1333053   +end;
MPRINT(EM_DIAGRAM):   end;
1333054   +
1333055   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1333056   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1333057   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1333058   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1333059   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1333060   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1333061   +end;
MPRINT(EM_DIAGRAM):   end;
1333062   +else do;
MPRINT(EM_DIAGRAM):   else do;
1333063   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1333064   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1333065   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1333066   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1333067   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1333068   +   end;
MPRINT(EM_DIAGRAM):   end;
1333069   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1333070   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1333071   +   end;
MPRINT(EM_DIAGRAM):   end;
1333072   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1333073   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1333074   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1333075   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1333076   +   end;
MPRINT(EM_DIAGRAM):   end;
1333077   +end;
MPRINT(EM_DIAGRAM):   end;
1333078   +
1333079   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1333080   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1333081   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1333082   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1333083   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1333084   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1333085   +end;
MPRINT(EM_DIAGRAM):   end;
1333086   +else do;
MPRINT(EM_DIAGRAM):   else do;
1333087   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1333088   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1333089   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1333090   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1333091   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1333092   +   end;
MPRINT(EM_DIAGRAM):   end;
1333093   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1333094   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1333095   +   end;
MPRINT(EM_DIAGRAM):   end;
1333096   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1333097   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1333098   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1333099   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1333100   +   end;
MPRINT(EM_DIAGRAM):   end;
1333101   +end;
MPRINT(EM_DIAGRAM):   end;
1333102   +
1333103   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1333104   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1333105   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1333106   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1333107   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1333108   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1333109   +end;
MPRINT(EM_DIAGRAM):   end;
1333110   +else do;
MPRINT(EM_DIAGRAM):   else do;
1333111   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1333112   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1333113   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1333114   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1333115   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1333116   +   end;
MPRINT(EM_DIAGRAM):   end;
1333117   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1333118   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1333119   +   end;
MPRINT(EM_DIAGRAM):   end;
1333120   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1333121   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1333122   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1333123   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1333124   +   end;
MPRINT(EM_DIAGRAM):   end;
1333125   +end;
MPRINT(EM_DIAGRAM):   end;
1333126   +
1333127   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1333128   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1333129   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1333130   +Education2n_Cycle = 0;
The SAS System

MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1333131   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1333132   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1333133   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1333134   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1333135   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1333136   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1333137   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1333138   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1333139   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1333140   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1333141   +end;
MPRINT(EM_DIAGRAM):   end;
1333142   +else do;
MPRINT(EM_DIAGRAM):   else do;
1333143   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1333144   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1333145   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1333146   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1333147   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1333148   +   end;
MPRINT(EM_DIAGRAM):   end;
1333149   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1333150   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1333151   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1333152   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1333153   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1333154   +   end;
MPRINT(EM_DIAGRAM):   end;
1333155   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1333156   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1333157   +   end;
MPRINT(EM_DIAGRAM):   end;
1333158   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1333159   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1333160   +   end;
MPRINT(EM_DIAGRAM):   end;
1333161   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1333162   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1333163   +   end;
MPRINT(EM_DIAGRAM):   end;
1333164   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1333165   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1333166   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1333167   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1333168   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1333169   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1333170   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1333171   +   end;
MPRINT(EM_DIAGRAM):   end;
1333172   +end;
MPRINT(EM_DIAGRAM):   end;
1333173   +
1333174   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1333175   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1333176   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1333177   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1333178   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1333179   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1333180   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1333181   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1333182   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1333183   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1333184   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1333185   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1333186   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1333187   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1333188   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1333189   +end;
MPRINT(EM_DIAGRAM):   end;
1333190   +else do;
MPRINT(EM_DIAGRAM):   else do;
1333191   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1333192   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1333193   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1333194   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1333195   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1333196   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1333197   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1333198   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1333199   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1333200   +         end;
MPRINT(EM_DIAGRAM):   end;
1333201   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1333202   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1333203   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1333204   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1333205   +            end;
MPRINT(EM_DIAGRAM):   end;
1333206   +         end;
MPRINT(EM_DIAGRAM):   end;
1333207   +      end;
MPRINT(EM_DIAGRAM):   end;
1333208   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1333209   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1333210   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1333211   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1333212   +         end;
MPRINT(EM_DIAGRAM):   end;
1333213   +      end;
MPRINT(EM_DIAGRAM):   end;
1333214   +   end;
MPRINT(EM_DIAGRAM):   end;
1333215   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1333216   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1333217   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1333218   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1333219   +      end;
MPRINT(EM_DIAGRAM):   end;
1333220   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1333221   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1333222   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1333223   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1333224   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1333225   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1333226   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1333227   +         end;
MPRINT(EM_DIAGRAM):   end;
1333228   +      end;
MPRINT(EM_DIAGRAM):   end;
1333229   +   end;
MPRINT(EM_DIAGRAM):   end;
1333230   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1333231   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1333232   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1333233   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1333234   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1333235   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1333236   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1333237   +   end;
MPRINT(EM_DIAGRAM):   end;
1333238   +end;
MPRINT(EM_DIAGRAM):   end;
1333239   +
1333240   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1333241   +*** Checking missing input Interval
1333242   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1333243   +
1333244   +IF NMISS(
1333245   +   AcceptedCmpTotal ,
1333246   +   Age ,
1333247   +   Frq ,
1333248   +   Income ,
1333249   +   Kidhome ,
1333250   +   Mnt ,
1333251   +   MntFishProducts ,
1333252   +   MntFruits ,
1333253   +   MntGoldProds ,
1333254   +   MntMeatProducts ,
1333255   +   MntSweetProducts ,
1333256   +   MntWines ,
1333257   +   MonthsAsCustomer ,
1333258   +   NumCatalogPurchases ,
1333259   +   NumDealsPurchases ,
1333260   +   NumDistPurchases ,
1333261   +   NumStorePurchases ,
1333262   +   NumWebPurchases ,
1333263   +   NumWebVisitsMonth ,
1333264   +   RFMstat ,
1333265   +   RMntFrq ,
1333266   +   Recency ,
1333267   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1333268   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1333269   +
1333270   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1333271   +END;
MPRINT(EM_DIAGRAM):   END;
1333272   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1333273   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1333274   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1333275   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1333276   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1333277   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1333278   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1333279   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1333280   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1333281   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1333282   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1333283   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1333284   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1333285   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1333286   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1333287   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1333288   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1333289   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1333290   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1333291   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1333292   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1333293   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1333294   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1333295   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1333296   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1333297   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1333298   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1333299   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1333300   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1333301   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1333302   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1333303   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1333304   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1333305   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1333306   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1333307   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1333308   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1333309   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1333310   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1333311   +END;
MPRINT(EM_DIAGRAM):   END;
1333312   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1333313   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1333314   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1333315   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1333316   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1333317   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1333318   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1333319   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1333320   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1333321   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1333322   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1333323   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1333324   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1333325   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1333326   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1333327   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1333328   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1333329   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1333330   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1333331   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1333332   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1333333   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1333334   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1333335   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1333336   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1333337   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1333338   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1333339   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1333340   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1333341   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1333342   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1333343   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1333344   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1333345   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1333346   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1333347   +   ELSE S_NumCatalogPurchases
1333348   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1333349   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1333350   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1333351   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1333352   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1333353   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1333354   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1333355   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1333356   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1333357   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1333358   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1333359   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1333360   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1333361   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1333362   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1333363   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1333364   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1333365   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1333366   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1333367   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1333368   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1333369   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1333370   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1333371   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1333372   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1333373   +END;
MPRINT(EM_DIAGRAM):   END;
1333374   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1333375   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1333376   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1333377   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1333378   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1333379   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1333380   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1333381   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1333382   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1333383   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1333384   +   H11  =     0.19960473225933 * S_AcceptedCmpTotal  +     -0.3891753208081 *
1333385   +        S_Age  +    -0.38863469907463 * S_Frq  +      -0.218282547936 *
1333386   +        S_Income  +     -0.0761121347886 * S_Kidhome
1333387   +          +     0.13231844745195 * S_Mnt  +     0.03847734904026 *
1333388   +        S_MntFishProducts  +    -0.08557040854782 * S_MntFruits
1333389   +          +     0.05679165614645 * S_MntGoldProds  +     0.98985461955462 *
1333390   +        S_MntMeatProducts  +    -0.25089034197541 * S_MntSweetProducts
1333391   +          +    -0.20961106315243 * S_MntWines  +     0.00877322606769 *
1333392   +        S_MonthsAsCustomer  +     0.42365427657146 * S_NumCatalogPurchases
1333393   +          +     0.83893684194413 * S_NumDealsPurchases
1333394   +          +     0.23391006875291 * S_NumDistPurchases
1333395   +          +    -0.63370705462074 * S_NumStorePurchases
1333396   +          +     -0.9137408014067 * S_NumWebPurchases
1333397   +          +     0.89109351479441 * S_NumWebVisitsMonth
1333398   +          +     0.40379703973869 * S_RFMstat  +     0.02992612739892 *
1333399   +        S_RMntFrq  +    -0.85349828740223 * S_Recency
1333400   +          +     0.17501150943585 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.19960473225933 * S_AcceptedCmpTotal + -0.3891753208081 * S_Age + 
-0.38863469907463 * S_Frq + -0.218282547936 * S_Income + -0.0761121347886 * S_Kidhome + 
0.13231844745195 * S_Mnt + 0.03847734904026 * S_MntFishProducts + -0.08557040854782 * 
S_MntFruits + 0.05679165614645 * S_MntGoldProds + 0.98985461955462 * S_MntMeatProducts + 
-0.25089034197541 * S_MntSweetProducts + -0.20961106315243 * S_MntWines + 0.00877322606769 * 
S_MonthsAsCustomer + 0.42365427657146 * S_NumCatalogPurchases + 0.83893684194413 * 
S_NumDealsPurchases + 0.23391006875291 * S_NumDistPurchases + -0.63370705462074 * 
S_NumStorePurchases + -0.9137408014067 * S_NumWebPurchases + 0.89109351479441 * 
S_NumWebVisitsMonth + 0.40379703973869 * S_RFMstat + 0.02992612739892 * S_RMntFrq + 
-0.85349828740223 * S_Recency + 0.17501150943585 * S_Teenhome ;
1333401   +   H12  =     0.57191299319193 * S_AcceptedCmpTotal  +     0.06554370511829 *
1333402   +        S_Age  +    -0.36683285440702 * S_Frq  +     0.38867787826981 *
1333403   +        S_Income  +    -0.43909782819329 * S_Kidhome
1333404   +          +    -0.20015496934973 * S_Mnt  +    -0.12914218014786 *
1333405   +        S_MntFishProducts  +    -0.15398661741952 * S_MntFruits
1333406   +          +    -0.05274722398466 * S_MntGoldProds  +     0.56013165499725 *
1333407   +        S_MntMeatProducts  +     0.05414820118553 * S_MntSweetProducts
1333408   +          +     -0.3600749061383 * S_MntWines  +    -0.10603301590721 *
1333409   +        S_MonthsAsCustomer  +     0.36776848192468 * S_NumCatalogPurchases
1333410   +          +      0.2218973353638 * S_NumDealsPurchases
1333411   +          +      0.0062360950528 * S_NumDistPurchases
1333412   +          +    -0.57621747951002 * S_NumStorePurchases
1333413   +          +    -0.33564890905657 * S_NumWebPurchases
1333414   +          +     0.82482365540301 * S_NumWebVisitsMonth
1333415   +          +     0.00853485340844 * S_RFMstat  +    -0.08358062109702 *
1333416   +        S_RMntFrq  +    -0.77306663228806 * S_Recency
1333417   +          +    -0.36028078495757 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.57191299319193 * S_AcceptedCmpTotal + 0.06554370511829 * S_Age + 
-0.36683285440702 * S_Frq + 0.38867787826981 * S_Income + -0.43909782819329 * S_Kidhome + 
-0.20015496934973 * S_Mnt + -0.12914218014786 * S_MntFishProducts + -0.15398661741952 * 
S_MntFruits + -0.05274722398466 * S_MntGoldProds + 0.56013165499725 * S_MntMeatProducts + 
0.05414820118553 * S_MntSweetProducts + -0.3600749061383 * S_MntWines + -0.10603301590721 * 
S_MonthsAsCustomer + 0.36776848192468 * S_NumCatalogPurchases + 0.2218973353638 * 
S_NumDealsPurchases + 0.0062360950528 * S_NumDistPurchases + -0.57621747951002 * 
S_NumStorePurchases + -0.33564890905657 * S_NumWebPurchases + 0.82482365540301 * 
S_NumWebVisitsMonth + 0.00853485340844 * S_RFMstat + -0.08358062109702 * S_RMntFrq + 
-0.77306663228806 * S_Recency + -0.36028078495757 * S_Teenhome ;
1333418   +   H13  =     0.04958757890989 * S_AcceptedCmpTotal  +    -0.35438992757247 *
1333419   +        S_Age  +    -0.00591919176562 * S_Frq  +    -0.27415788425743 *
1333420   +        S_Income  +    -0.03572236011846 * S_Kidhome
1333421   +          +    -0.13070406034722 * S_Mnt  +     0.18129697551902 *
1333422   +        S_MntFishProducts  +     0.12543390103308 * S_MntFruits
1333423   +          +    -0.03846216245953 * S_MntGoldProds  +      0.1535321444723 *
1333424   +        S_MntMeatProducts  +     0.43228964267878 * S_MntSweetProducts
1333425   +          +     0.04044476981059 * S_MntWines  +     0.05282237039086 *
1333426   +        S_MonthsAsCustomer  +    -0.22394386505524 * S_NumCatalogPurchases
1333427   +          +      -0.174147250062 * S_NumDealsPurchases
1333428   +          +    -0.22921682388864 * S_NumDistPurchases
1333429   +          +     0.41526854684299 * S_NumStorePurchases
1333430   +          +    -0.27675565493519 * S_NumWebPurchases
1333431   +          +    -0.31519058220182 * S_NumWebVisitsMonth
1333432   +          +    -0.46583825032896 * S_RFMstat  +    -0.00324569060855 *
1333433   +        S_RMntFrq  +     0.80762508263239 * S_Recency
1333434   +          +    -0.05609675878255 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.04958757890989 * S_AcceptedCmpTotal + -0.35438992757247 * S_Age 
+ -0.00591919176562 * S_Frq + -0.27415788425743 * S_Income + -0.03572236011846 * S_Kidhome + 
-0.13070406034722 * S_Mnt + 0.18129697551902 * S_MntFishProducts + 0.12543390103308 * 
S_MntFruits + -0.03846216245953 * S_MntGoldProds + 0.1535321444723 * S_MntMeatProducts + 
0.43228964267878 * S_MntSweetProducts + 0.04044476981059 * S_MntWines + 0.05282237039086 * 
S_MonthsAsCustomer + -0.22394386505524 * S_NumCatalogPurchases + -0.174147250062 * 
S_NumDealsPurchases + -0.22921682388864 * S_NumDistPurchases + 0.41526854684299 * 
S_NumStorePurchases + -0.27675565493519 * S_NumWebPurchases + -0.31519058220182 * 
S_NumWebVisitsMonth + -0.46583825032896 * S_RFMstat + -0.00324569060855 * S_RMntFrq + 
0.80762508263239 * S_Recency + -0.05609675878255 * S_Teenhome ;
1333435   +   H14  =     0.02595189997947 * S_AcceptedCmpTotal  +     0.06072450724422 *
1333436   +        S_Age  +     0.02299020571692 * S_Frq  +     -0.4565780535519 *
1333437   +        S_Income  +    -0.04788369327547 * S_Kidhome
1333438   +          +     0.02007551763294 * S_Mnt  +    -0.18053103558393 *
1333439   +        S_MntFishProducts  +    -0.09855244687933 * S_MntFruits
1333440   +          +    -0.15322502970206 * S_MntGoldProds  +    -0.66766356766896 *
1333441   +        S_MntMeatProducts  +     0.07957560397307 * S_MntSweetProducts
1333442   +          +     0.41567167308223 * S_MntWines  +     0.28903949823868 *
1333443   +        S_MonthsAsCustomer  +    -0.63829948878415 * S_NumCatalogPurchases
1333444   +          +    -0.46022430102423 * S_NumDealsPurchases
1333445   +          +     0.15831339342044 * S_NumDistPurchases
1333446   +          +     0.22480465173719 * S_NumStorePurchases
1333447   +          +     0.44798923484609 * S_NumWebPurchases
1333448   +          +    -0.71094702920004 * S_NumWebVisitsMonth
1333449   +          +     0.20620433566947 * S_RFMstat  +     -0.0106779556039 *
1333450   +        S_RMntFrq  +     0.79879111927102 * S_Recency
1333451   +          +      0.3056416743951 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.02595189997947 * S_AcceptedCmpTotal + 0.06072450724422 * S_Age + 
0.02299020571692 * S_Frq + -0.4565780535519 * S_Income + -0.04788369327547 * S_Kidhome + 
0.02007551763294 * S_Mnt + -0.18053103558393 * S_MntFishProducts + -0.09855244687933 * 
S_MntFruits + -0.15322502970206 * S_MntGoldProds + -0.66766356766896 * S_MntMeatProducts + 
0.07957560397307 * S_MntSweetProducts + 0.41567167308223 * S_MntWines + 0.28903949823868 * 
S_MonthsAsCustomer + -0.63829948878415 * S_NumCatalogPurchases + -0.46022430102423 * 
S_NumDealsPurchases + 0.15831339342044 * S_NumDistPurchases + 0.22480465173719 * 
S_NumStorePurchases + 0.44798923484609 * S_NumWebPurchases + -0.71094702920004 * 
S_NumWebVisitsMonth + 0.20620433566947 * S_RFMstat + -0.0106779556039 * S_RMntFrq + 
0.79879111927102 * S_Recency + 0.3056416743951 * S_Teenhome ;
1333452   +   H15  =    -0.13742649287176 * S_AcceptedCmpTotal  +     0.10145150511644 *
1333453   +        S_Age  +     -0.2837159248953 * S_Frq  +    -0.64706237411697 *
1333454   +        S_Income  +     0.53994304261534 * S_Kidhome
1333455   +          +    -0.09131017926694 * S_Mnt  +     0.02887823775959 *
1333456   +        S_MntFishProducts  +     0.08381294541966 * S_MntFruits
1333457   +          +     0.04873881168004 * S_MntGoldProds  +    -0.54973576310335 *
1333458   +        S_MntMeatProducts  +     0.05878621089895 * S_MntSweetProducts
1333459   +          +     0.21348875371185 * S_MntWines  +    -0.12051903605528 *
1333460   +        S_MonthsAsCustomer  +     -0.5945274016061 * S_NumCatalogPurchases
1333461   +          +     0.03650267472167 * S_NumDealsPurchases
1333462   +          +    -0.03322709524939 * S_NumDistPurchases
1333463   +          +     -0.0022226424472 * S_NumStorePurchases
1333464   +          +    -0.10131236740674 * S_NumWebPurchases
1333465   +          +    -0.69846819287714 * S_NumWebVisitsMonth
1333466   +          +    -0.13757300915933 * S_RFMstat  +     0.22262647555954 *
1333467   +        S_RMntFrq  +     0.92766392256433 * S_Recency
1333468   +          +      0.3625724229994 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.13742649287176 * S_AcceptedCmpTotal + 0.10145150511644 * S_Age 
+ -0.2837159248953 * S_Frq + -0.64706237411697 * S_Income + 0.53994304261534 * S_Kidhome + 
-0.09131017926694 * S_Mnt + 0.02887823775959 * S_MntFishProducts + 0.08381294541966 * 
S_MntFruits + 0.04873881168004 * S_MntGoldProds + -0.54973576310335 * S_MntMeatProducts + 
0.05878621089895 * S_MntSweetProducts + 0.21348875371185 * S_MntWines + -0.12051903605528 * 
S_MonthsAsCustomer + -0.5945274016061 * S_NumCatalogPurchases + 0.03650267472167 * 
S_NumDealsPurchases + -0.03322709524939 * S_NumDistPurchases + -0.0022226424472 * 
S_NumStorePurchases + -0.10131236740674 * S_NumWebPurchases + -0.69846819287714 * 
S_NumWebVisitsMonth + -0.13757300915933 * S_RFMstat + 0.22262647555954 * S_RMntFrq + 
0.92766392256433 * S_Recency + 0.3625724229994 * S_Teenhome ;
1333469   +   H16  =     -0.3666088571096 * S_AcceptedCmpTotal  +     0.07935193188365 *
1333470   +        S_Age  +    -0.42829147771921 * S_Frq  +    -0.42276511188403 *
1333471   +        S_Income  +    -0.52576099429582 * S_Kidhome
1333472   +          +    -0.25780820577456 * S_Mnt  +     0.15053849421837 *
1333473   +        S_MntFishProducts  +      0.0508038259278 * S_MntFruits
1333474   +          +    -0.20778953304026 * S_MntGoldProds  +    -0.19733433417367 *
1333475   +        S_MntMeatProducts  +    -0.19779369509324 * S_MntSweetProducts
1333476   +          +     -0.0614254708905 * S_MntWines  +    -0.24324114549599 *
1333477   +        S_MonthsAsCustomer  +    -0.51401967366294 * S_NumCatalogPurchases
1333478   +          +    -0.50209914729324 * S_NumDealsPurchases
1333479   +          +    -0.46217244513696 * S_NumDistPurchases
1333480   +          +      0.1832648560248 * S_NumStorePurchases
1333481   +          +     0.02866153257072 * S_NumWebPurchases
1333482   +          +    -0.21659886944483 * S_NumWebVisitsMonth
1333483   +          +    -0.05645651757643 * S_RFMstat  +    -0.09976672213368 *
1333484   +        S_RMntFrq  +      0.0483484608321 * S_Recency
1333485   +          +    -0.11406727037802 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.3666088571096 * S_AcceptedCmpTotal + 0.07935193188365 * S_Age + 
-0.42829147771921 * S_Frq + -0.42276511188403 * S_Income + -0.52576099429582 * S_Kidhome + 
-0.25780820577456 * S_Mnt + 0.15053849421837 * S_MntFishProducts + 0.0508038259278 * 
S_MntFruits + -0.20778953304026 * S_MntGoldProds + -0.19733433417367 * S_MntMeatProducts + 
-0.19779369509324 * S_MntSweetProducts + -0.0614254708905 * S_MntWines + -0.24324114549599 * 
S_MonthsAsCustomer + -0.51401967366294 * S_NumCatalogPurchases + -0.50209914729324 * 
S_NumDealsPurchases + -0.46217244513696 * S_NumDistPurchases + 0.1832648560248 * 
S_NumStorePurchases + 0.02866153257072 * S_NumWebPurchases + -0.21659886944483 * 
S_NumWebVisitsMonth + -0.05645651757643 * S_RFMstat + -0.09976672213368 * S_RMntFrq + 
0.0483484608321 * S_Recency + -0.11406727037802 * S_Teenhome ;
1333486   +   H11  = H11  +     -0.7601248031008 * AcceptedCmp10
1333487   +          +    -0.35671966174677 * AcceptedCmp20  +     -0.3945561586942 *
1333488   +        AcceptedCmp30  +    -0.54583010778346 * AcceptedCmp40
1333489   +          +    -0.38674738859251 * AcceptedCmp50  +    -0.14831343728217 *
1333490   +        Complain0  +     0.13245455648369 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.7601248031008 * AcceptedCmp10 + -0.35671966174677 * 
AcceptedCmp20 + -0.3945561586942 * AcceptedCmp30 + -0.54583010778346 * AcceptedCmp40 + 
-0.38674738859251 * AcceptedCmp50 + -0.14831343728217 * Complain0 + 0.13245455648369 * 
HigherEducationBinary0 ;
1333491   +   H12  = H12  +    -0.03783139750322 * AcceptedCmp10
1333492   +          +      0.0569762433011 * AcceptedCmp20  +    -0.21834950194396 *
1333493   +        AcceptedCmp30  +    -0.14978730026923 * AcceptedCmp40
1333494   +          +    -0.27826227141524 * AcceptedCmp50  +     0.05227448052769 *
1333495   +        Complain0  +     0.00441210978534 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.03783139750322 * AcceptedCmp10 + 0.0569762433011 * 
AcceptedCmp20 + -0.21834950194396 * AcceptedCmp30 + -0.14978730026923 * AcceptedCmp40 + 
-0.27826227141524 * AcceptedCmp50 + 0.05227448052769 * Complain0 + 0.00441210978534 * 
HigherEducationBinary0 ;
1333496   +   H13  = H13  +     0.20786972077091 * AcceptedCmp10
1333497   +          +     0.06123497721778 * AcceptedCmp20  +     0.21326165753825 *
1333498   +        AcceptedCmp30  +    -0.17148613450886 * AcceptedCmp40
1333499   +          +     0.05564403918936 * AcceptedCmp50  +     0.07876117708017 *
1333500   +        Complain0  +     0.40703714529737 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.20786972077091 * AcceptedCmp10 + 0.06123497721778 * 
AcceptedCmp20 + 0.21326165753825 * AcceptedCmp30 + -0.17148613450886 * AcceptedCmp40 + 
0.05564403918936 * AcceptedCmp50 + 0.07876117708017 * Complain0 + 0.40703714529737 * 
HigherEducationBinary0 ;
1333501   +   H14  = H14  +    -0.22288812741222 * AcceptedCmp10
1333502   +          +     0.09082443183915 * AcceptedCmp20  +     0.22381340075277 *
1333503   +        AcceptedCmp30  +    -0.33987044425695 * AcceptedCmp40
1333504   +          +     0.23335102436732 * AcceptedCmp50  +    -0.04181636989839 *
1333505   +        Complain0  +     0.07120379166339 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.22288812741222 * AcceptedCmp10 + 0.09082443183915 * 
AcceptedCmp20 + 0.22381340075277 * AcceptedCmp30 + -0.33987044425695 * AcceptedCmp40 + 
0.23335102436732 * AcceptedCmp50 + -0.04181636989839 * Complain0 + 0.07120379166339 * 
HigherEducationBinary0 ;
1333506   +   H15  = H15  +     0.42056230102758 * AcceptedCmp10
1333507   +          +     0.53764215961118 * AcceptedCmp20  +     0.37023411618924 *
1333508   +        AcceptedCmp30  +     0.42138560084911 * AcceptedCmp40
1333509   +          +      0.3085748174994 * AcceptedCmp50  +     0.22539323627952 *
1333510   +        Complain0  +    -0.21244663243009 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.42056230102758 * AcceptedCmp10 + 0.53764215961118 * 
AcceptedCmp20 + 0.37023411618924 * AcceptedCmp30 + 0.42138560084911 * AcceptedCmp40 + 
0.3085748174994 * AcceptedCmp50 + 0.22539323627952 * Complain0 + -0.21244663243009 * 
HigherEducationBinary0 ;
1333511   +   H16  = H16  +     0.18963464867682 * AcceptedCmp10
1333512   +          +     0.03787019267792 * AcceptedCmp20  +     0.08009211858272 *
1333513   +        AcceptedCmp30  +    -0.04360170073177 * AcceptedCmp40
1333514   +          +     0.21168040934214 * AcceptedCmp50  +     0.10568727450323 *
1333515   +        Complain0  +     0.53148657263966 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.18963464867682 * AcceptedCmp10 + 0.03787019267792 * 
AcceptedCmp20 + 0.08009211858272 * AcceptedCmp30 + -0.04360170073177 * AcceptedCmp40 + 
0.21168040934214 * AcceptedCmp50 + 0.10568727450323 * Complain0 + 0.53148657263966 * 
HigherEducationBinary0 ;
1333516   +   H11  = H11  +    -0.11496374901156 * Education2n_Cycle
1333517   +          +    -0.06656230963069 * EducationBasic  +     0.07997148658457 *
1333518   +        EducationGraduation  +     0.01554466662723 * EducationMaster
1333519   +          +     0.13815069071511 * Marital_StatusDivorced
1333520   +          +      0.0732913060929 * Marital_StatusMarried
1333521   +          +    -0.22858418468746 * Marital_StatusSingle
1333522   +          +     0.01116332924316 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.11496374901156 * Education2n_Cycle + -0.06656230963069 * 
EducationBasic + 0.07997148658457 * EducationGraduation + 0.01554466662723 * EducationMaster + 
0.13815069071511 * Marital_StatusDivorced + 0.0732913060929 * Marital_StatusMarried + 
-0.22858418468746 * Marital_StatusSingle + 0.01116332924316 * Marital_StatusTogether ;
1333523   +   H12  = H12  +     0.03901959784889 * Education2n_Cycle
1333524   +          +    -0.26280012394443 * EducationBasic  +     0.21504809933489 *
1333525   +        EducationGraduation  +    -0.06848191068145 * EducationMaster
1333526   +          +     0.32909808396509 * Marital_StatusDivorced
1333527   +          +    -0.50160173579004 * Marital_StatusMarried
1333528   +          +     0.57207102211224 * Marital_StatusSingle
1333529   +          +    -0.44360345973922 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.03901959784889 * Education2n_Cycle + -0.26280012394443 * 
EducationBasic + 0.21504809933489 * EducationGraduation + -0.06848191068145 * EducationMaster 
+ 0.32909808396509 * Marital_StatusDivorced + -0.50160173579004 * Marital_StatusMarried + 
0.57207102211224 * Marital_StatusSingle + -0.44360345973922 * Marital_StatusTogether ;
1333530   +   H13  = H13  +     0.01150876366725 * Education2n_Cycle
1333531   +          +     0.23107711255032 * EducationBasic  +    -0.21134640338561 *
1333532   +        EducationGraduation  +    -0.06661306485324 * EducationMaster
1333533   +          +    -0.07154493730107 * Marital_StatusDivorced
1333534   +          +     0.29126100051603 * Marital_StatusMarried
1333535   +          +    -0.06936325857004 * Marital_StatusSingle
1333536   +          +     0.16456919209683 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.01150876366725 * Education2n_Cycle + 0.23107711255032 * 
EducationBasic + -0.21134640338561 * EducationGraduation + -0.06661306485324 * EducationMaster 
+ -0.07154493730107 * Marital_StatusDivorced + 0.29126100051603 * Marital_StatusMarried + 
-0.06936325857004 * Marital_StatusSingle + 0.16456919209683 * Marital_StatusTogether ;
1333537   +   H14  = H14  +    -0.19946033710291 * Education2n_Cycle
1333538   +          +    -0.01034120145864 * EducationBasic  +     0.13668197947218 *
1333539   +        EducationGraduation  +     0.00467151758983 * EducationMaster
1333540   +          +    -0.05004640872388 * Marital_StatusDivorced
1333541   +          +     0.22197974032974 * Marital_StatusMarried
1333542   +          +    -0.33931504637453 * Marital_StatusSingle
1333543   +          +     0.52390006042597 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.19946033710291 * Education2n_Cycle + -0.01034120145864 * 
EducationBasic + 0.13668197947218 * EducationGraduation + 0.00467151758983 * EducationMaster + 
-0.05004640872388 * Marital_StatusDivorced + 0.22197974032974 * Marital_StatusMarried + 
-0.33931504637453 * Marital_StatusSingle + 0.52390006042597 * Marital_StatusTogether ;
1333544   +   H15  = H15  +      0.0257657569906 * Education2n_Cycle
1333545   +          +    -0.41272017245298 * EducationBasic  +     0.19220220110183 *
1333546   +        EducationGraduation  +     0.36479872943723 * EducationMaster
1333547   +          +    -0.07748874669478 * Marital_StatusDivorced
1333548   +          +     1.05442281159109 * Marital_StatusMarried
1333549   +          +    -0.67190984038867 * Marital_StatusSingle
1333550   +          +     0.60757498745412 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.0257657569906 * Education2n_Cycle + -0.41272017245298 * 
EducationBasic + 0.19220220110183 * EducationGraduation + 0.36479872943723 * EducationMaster + 
-0.07748874669478 * Marital_StatusDivorced + 1.05442281159109 * Marital_StatusMarried + 
-0.67190984038867 * Marital_StatusSingle + 0.60757498745412 * Marital_StatusTogether ;
1333551   +   H16  = H16  +    -0.17850020716849 * Education2n_Cycle
1333552   +          +    -0.22658689327697 * EducationBasic  +    -0.12677992318537 *
1333553   +        EducationGraduation  +    -0.09350942672909 * EducationMaster
1333554   +          +    -0.20478208715114 * Marital_StatusDivorced
1333555   +          +    -0.40186383707642 * Marital_StatusMarried
1333556   +          +     0.43474841662774 * Marital_StatusSingle
1333557   +          +    -0.24048672237031 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.17850020716849 * Education2n_Cycle + -0.22658689327697 * 
EducationBasic + -0.12677992318537 * EducationGraduation + -0.09350942672909 * EducationMaster 
+ -0.20478208715114 * Marital_StatusDivorced + -0.40186383707642 * Marital_StatusMarried + 
0.43474841662774 * Marital_StatusSingle + -0.24048672237031 * Marital_StatusTogether ;
1333558   +   H11  =    -0.02531559692589 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.02531559692589 + H11 ;
1333559   +   H12  =     0.37210575430377 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.37210575430377 + H12 ;
1333560   +   H13  =    -1.38678195714945 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.38678195714945 + H13 ;
1333561   +   H14  =      1.3896422684634 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.3896422684634 + H14 ;
1333562   +   H15  =     0.90118149151601 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.90118149151601 + H15 ;
1333563   +   H16  =    -2.10458510177045 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -2.10458510177045 + H16 ;
1333564   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1333565   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1333566   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1333567   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1333568   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1333569   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1333570   +END;
MPRINT(EM_DIAGRAM):   END;
1333571   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1333572   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1333573   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1333574   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1333575   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1333576   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1333577   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1333578   +END;
MPRINT(EM_DIAGRAM):   END;
1333579   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1333580   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1333581   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1333582   +
1333583   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1333584   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1333585   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1333586   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1333587   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1333588   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1333589   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1333590   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1333591   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1333592   +end;
MPRINT(EM_DIAGRAM):   end;
1333593   +else do;
MPRINT(EM_DIAGRAM):   else do;
1333594   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1333595   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1333596   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1333597   +   end;
MPRINT(EM_DIAGRAM):   end;
1333598   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1333599   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1333600   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1333601   +   end;
MPRINT(EM_DIAGRAM):   end;
1333602   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1333603   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1333604   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1333605   +   end;
MPRINT(EM_DIAGRAM):   end;
1333606   +end;
MPRINT(EM_DIAGRAM):   end;
1333607   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1333608   +   P_DepVar1  =     1.87884051128714 * H11  +     2.50729999746925 * H12
1333609   +          +    -1.75107820321125 * H13  +    -1.79455762110025 * H14
1333610   +          +    -2.94929305100625 * H15  +    -2.02736184847322 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.87884051128714 * H11 + 2.50729999746925 * H12 + 
-1.75107820321125 * H13 + -1.79455762110025 * H14 + -2.94929305100625 * H15 + 
-2.02736184847322 * H16 ;
1333611   +   P_DepVar1  =    -2.13374807262205 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.13374807262205 + P_DepVar1 ;
1333612   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1333613   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1333614   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1333615   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1333616   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1333617   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1333618   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1333619   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1333620   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1333621   +END;
MPRINT(EM_DIAGRAM):   END;
1333622   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1333623   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1333624   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1333625   +END;
MPRINT(EM_DIAGRAM):   END;
1333626   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1333627   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1333628   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1333629   +END;
MPRINT(EM_DIAGRAM):   END;
1333630   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1333631   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1333632   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1333633   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1333634   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1333635   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1333636   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1333637   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1333638   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1333639   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1333640   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1333641   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1333642   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1333643   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1333644   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1333645   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1333646   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1333647   +END;
MPRINT(EM_DIAGRAM):   END;
1333648   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1333649   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1333650   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1333651   +drop
1333652   +H11
1333653   +H12
1333654   +H13
1333655   +H14
1333656   +H15
1333657   +H16
1333658   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1333659   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1333660   +* Renaming variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural9;
1333661   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1333662   +* Renaming Posterior variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural9;
1333663   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1333664   +drop Neural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar1;
1333665   +Neural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar1 = P_DepVar1;
1333666   +drop Neural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar0;
1333667   +Neural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar0 = P_DepVar0;
1333668   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1333669   +* Renaming _WARN_ variable for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural9;
1333670   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1333671   +length Neural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural9_WARN_ $4;
1333672   +drop Neural9_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural9_WARN_;
1333673   +Neural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural9_WARN_ = _WARN_;
1333674   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1333675   +* Ensmbl: Scoring Code of model 10 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl: Scoring Code of model 10 of 10;
1333676   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1333677   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1333678   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1333679   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1333680   +* NODE: Neural10;
MPRINT(EM_DIAGRAM):   * NODE: Neural10;
1333681   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1333682   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1333683   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1333684   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1333685   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1333686   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1333687   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1333688   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1333689   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1333690   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1333691   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1333692   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1333693   +LENGTH _WARN_ $4
1333694   +      F_DepVar  $ 12
1333695   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1333696   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1333697   +
1333698   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1333699   +
1333700   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1333701   +
1333702   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1333703   +
1333704   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1333705   +
1333706   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1333707   +
1333708   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1333709   +
1333710   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1333711   +
1333712   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1333713   +
1333714   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1333715   +
1333716   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1333717   +
1333718   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1333719   +
1333720   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1333721   +
1333722   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1333723   +
1333724   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1333725   +
1333726   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1333727   +
1333728   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1333729   +
1333730   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1333731   +
1333732   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1333733   +
1333734   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1333735   +
1333736   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1333737   +
1333738   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1333739   +
1333740   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1333741   +
1333742   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1333743   +
1333744   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1333745   +
1333746   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1333747   +
1333748   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1333749   +
1333750   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1333751   +
1333752   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1333753   +
1333754   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1333755   +
1333756   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1333757   +
1333758   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1333759   +
1333760   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1333761   +
1333762   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1333763   +
1333764   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1333765   +
1333766   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1333767   +
1333768   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1333769   +
1333770   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1333771   +
1333772   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1333773   +
1333774   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1333775   +
1333776   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1333777   +
1333778   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1333779   +
1333780   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1333781   +
1333782   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1333783   +
1333784   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
1333785   +
1333786   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1333787   +
1333788   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1333789   +
1333790   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1333791   +
1333792   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1333793   +
1333794   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1333795   +
1333796   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1333797   +
1333798   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1333799   +
1333800   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1333801   +
1333802   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1333803   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1333804   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1333805   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1333806   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1333807   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1333808   +end;
MPRINT(EM_DIAGRAM):   end;
1333809   +else do;
MPRINT(EM_DIAGRAM):   else do;
1333810   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1333811   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1333812   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1333813   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1333814   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1333815   +   end;
MPRINT(EM_DIAGRAM):   end;
1333816   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1333817   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1333818   +   end;
MPRINT(EM_DIAGRAM):   end;
1333819   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1333820   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1333821   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1333822   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1333823   +   end;
MPRINT(EM_DIAGRAM):   end;
1333824   +end;
MPRINT(EM_DIAGRAM):   end;
1333825   +
1333826   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1333827   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1333828   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1333829   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1333830   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1333831   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1333832   +end;
MPRINT(EM_DIAGRAM):   end;
1333833   +else do;
MPRINT(EM_DIAGRAM):   else do;
1333834   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1333835   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1333836   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1333837   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1333838   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1333839   +   end;
MPRINT(EM_DIAGRAM):   end;
1333840   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1333841   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1333842   +   end;
MPRINT(EM_DIAGRAM):   end;
1333843   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1333844   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1333845   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1333846   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1333847   +   end;
MPRINT(EM_DIAGRAM):   end;
1333848   +end;
MPRINT(EM_DIAGRAM):   end;
1333849   +
1333850   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1333851   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1333852   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1333853   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1333854   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1333855   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1333856   +end;
MPRINT(EM_DIAGRAM):   end;
1333857   +else do;
MPRINT(EM_DIAGRAM):   else do;
1333858   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1333859   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1333860   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1333861   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1333862   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1333863   +   end;
MPRINT(EM_DIAGRAM):   end;
1333864   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1333865   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1333866   +   end;
MPRINT(EM_DIAGRAM):   end;
1333867   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1333868   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1333869   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1333870   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1333871   +   end;
MPRINT(EM_DIAGRAM):   end;
1333872   +end;
MPRINT(EM_DIAGRAM):   end;
1333873   +
1333874   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1333875   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1333876   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1333877   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1333878   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1333879   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1333880   +end;
MPRINT(EM_DIAGRAM):   end;
1333881   +else do;
MPRINT(EM_DIAGRAM):   else do;
1333882   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1333883   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1333884   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1333885   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1333886   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1333887   +   end;
MPRINT(EM_DIAGRAM):   end;
1333888   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1333889   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1333890   +   end;
MPRINT(EM_DIAGRAM):   end;
1333891   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1333892   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1333893   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1333894   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1333895   +   end;
MPRINT(EM_DIAGRAM):   end;
1333896   +end;
MPRINT(EM_DIAGRAM):   end;
1333897   +
1333898   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1333899   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1333900   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1333901   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1333902   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1333903   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1333904   +end;
MPRINT(EM_DIAGRAM):   end;
1333905   +else do;
MPRINT(EM_DIAGRAM):   else do;
1333906   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1333907   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1333908   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1333909   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1333910   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1333911   +   end;
MPRINT(EM_DIAGRAM):   end;
1333912   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1333913   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1333914   +   end;
MPRINT(EM_DIAGRAM):   end;
1333915   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1333916   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1333917   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1333918   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1333919   +   end;
MPRINT(EM_DIAGRAM):   end;
1333920   +end;
MPRINT(EM_DIAGRAM):   end;
1333921   +
1333922   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1333923   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1333924   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1333925   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1333926   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1333927   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1333928   +end;
MPRINT(EM_DIAGRAM):   end;
1333929   +else do;
MPRINT(EM_DIAGRAM):   else do;
1333930   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1333931   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1333932   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1333933   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1333934   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1333935   +   end;
MPRINT(EM_DIAGRAM):   end;
1333936   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1333937   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1333938   +   end;
MPRINT(EM_DIAGRAM):   end;
1333939   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1333940   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1333941   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1333942   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1333943   +   end;
MPRINT(EM_DIAGRAM):   end;
1333944   +end;
MPRINT(EM_DIAGRAM):   end;
1333945   +
1333946   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1333947   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1333948   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1333949   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1333950   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1333951   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1333952   +end;
MPRINT(EM_DIAGRAM):   end;
1333953   +else do;
MPRINT(EM_DIAGRAM):   else do;
1333954   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1333955   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1333956   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1333957   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1333958   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1333959   +   end;
MPRINT(EM_DIAGRAM):   end;
1333960   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1333961   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1333962   +   end;
MPRINT(EM_DIAGRAM):   end;
1333963   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1333964   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1333965   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1333966   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1333967   +   end;
MPRINT(EM_DIAGRAM):   end;
1333968   +end;
MPRINT(EM_DIAGRAM):   end;
1333969   +
1333970   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1333971   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1333972   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1333973   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1333974   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1333975   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1333976   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1333977   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1333978   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1333979   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1333980   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1333981   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1333982   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1333983   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1333984   +end;
MPRINT(EM_DIAGRAM):   end;
1333985   +else do;
MPRINT(EM_DIAGRAM):   else do;
1333986   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1333987   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1333988   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1333989   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1333990   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1333991   +   end;
MPRINT(EM_DIAGRAM):   end;
1333992   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1333993   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1333994   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1333995   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1333996   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1333997   +   end;
MPRINT(EM_DIAGRAM):   end;
1333998   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1333999   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1334000   +   end;
MPRINT(EM_DIAGRAM):   end;
1334001   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1334002   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1334003   +   end;
MPRINT(EM_DIAGRAM):   end;
1334004   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1334005   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1334006   +   end;
MPRINT(EM_DIAGRAM):   end;
1334007   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1334008   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1334009   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1334010   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1334011   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1334012   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1334013   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1334014   +   end;
MPRINT(EM_DIAGRAM):   end;
1334015   +end;
MPRINT(EM_DIAGRAM):   end;
1334016   +
1334017   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1334018   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1334019   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1334020   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1334021   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1334022   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1334023   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1334024   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1334025   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1334026   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1334027   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1334028   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1334029   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1334030   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1334031   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1334032   +end;
MPRINT(EM_DIAGRAM):   end;
1334033   +else do;
MPRINT(EM_DIAGRAM):   else do;
1334034   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1334035   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1334036   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1334037   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1334038   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1334039   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1334040   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1334041   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1334042   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1334043   +         end;
MPRINT(EM_DIAGRAM):   end;
1334044   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1334045   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1334046   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1334047   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1334048   +            end;
MPRINT(EM_DIAGRAM):   end;
1334049   +         end;
MPRINT(EM_DIAGRAM):   end;
1334050   +      end;
MPRINT(EM_DIAGRAM):   end;
1334051   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1334052   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1334053   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1334054   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1334055   +         end;
MPRINT(EM_DIAGRAM):   end;
1334056   +      end;
MPRINT(EM_DIAGRAM):   end;
1334057   +   end;
MPRINT(EM_DIAGRAM):   end;
1334058   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1334059   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1334060   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1334061   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1334062   +      end;
MPRINT(EM_DIAGRAM):   end;
1334063   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1334064   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1334065   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1334066   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1334067   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1334068   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1334069   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1334070   +         end;
MPRINT(EM_DIAGRAM):   end;
1334071   +      end;
MPRINT(EM_DIAGRAM):   end;
1334072   +   end;
MPRINT(EM_DIAGRAM):   end;
1334073   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1334074   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1334075   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1334076   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1334077   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1334078   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1334079   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1334080   +   end;
MPRINT(EM_DIAGRAM):   end;
1334081   +end;
MPRINT(EM_DIAGRAM):   end;
1334082   +
1334083   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1334084   +*** Checking missing input Interval
1334085   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1334086   +
1334087   +IF NMISS(
1334088   +   AcceptedCmpTotal ,
1334089   +   Age ,
1334090   +   Frq ,
1334091   +   Income ,
1334092   +   Kidhome ,
1334093   +   Mnt ,
1334094   +   MntFishProducts ,
1334095   +   MntFruits ,
1334096   +   MntGoldProds ,
1334097   +   MntMeatProducts ,
1334098   +   MntSweetProducts ,
1334099   +   MntWines ,
1334100   +   MonthsAsCustomer ,
1334101   +   NumCatalogPurchases ,
1334102   +   NumDealsPurchases ,
1334103   +   NumDistPurchases ,
1334104   +   NumStorePurchases ,
1334105   +   NumWebPurchases ,
1334106   +   NumWebVisitsMonth ,
1334107   +   RFMstat ,
1334108   +   RMntFrq ,
1334109   +   Recency ,
1334110   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1334111   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1334112   +
1334113   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1334114   +END;
MPRINT(EM_DIAGRAM):   END;
1334115   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1334116   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1334117   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1334118   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1334119   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1334120   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1334121   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1334122   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1334123   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1334124   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1334125   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1334126   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1334127   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1334128   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1334129   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1334130   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1334131   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1334132   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1334133   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1334134   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1334135   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1334136   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1334137   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1334138   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1334139   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1334140   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1334141   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1334142   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1334143   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1334144   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1334145   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1334146   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1334147   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1334148   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1334149   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1334150   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1334151   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1334152   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1334153   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1334154   +END;
MPRINT(EM_DIAGRAM):   END;
1334155   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1334156   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1334157   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1334158   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1334159   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1334160   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1334161   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1334162   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1334163   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1334164   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1334165   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1334166   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1334167   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1334168   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1334169   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1334170   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1334171   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1334172   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1334173   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1334174   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1334175   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1334176   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1334177   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1334178   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1334179   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1334180   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1334181   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1334182   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1334183   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1334184   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1334185   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1334186   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1334187   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1334188   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1334189   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1334190   +   ELSE S_NumCatalogPurchases
1334191   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1334192   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1334193   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1334194   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1334195   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1334196   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1334197   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1334198   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1334199   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1334200   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1334201   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1334202   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1334203   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1334204   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1334205   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1334206   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1334207   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1334208   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1334209   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1334210   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1334211   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1334212   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1334213   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1334214   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1334215   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1334216   +END;
MPRINT(EM_DIAGRAM):   END;
1334217   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1334218   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1334219   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1334220   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1334221   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1334222   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1334223   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1334224   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1334225   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1334226   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1334227   +   H11  =     -0.5578105652985 * S_AcceptedCmpTotal  +    -0.23241971580203 *
1334228   +        S_Age  +     0.28102175129839 * S_Frq  +    -0.14177438746231 *
1334229   +        S_Income  +    -0.45967008908227 * S_Kidhome
1334230   +          +     0.02794787691339 * S_Mnt  +     0.39828117417224 *
1334231   +        S_MntFishProducts  +    -0.05411429665612 * S_MntFruits
1334232   +          +     -0.2217613503816 * S_MntGoldProds  +    -1.14707919351018 *
1334233   +        S_MntMeatProducts  +     0.02010309795345 * S_MntSweetProducts
1334234   +          +     0.39487005596698 * S_MntWines  +     0.08057978219112 *
1334235   +        S_MonthsAsCustomer  +    -0.52508994350253 * S_NumCatalogPurchases
1334236   +          +    -0.23353175442713 * S_NumDealsPurchases
1334237   +          +     0.18635522192442 * S_NumDistPurchases
1334238   +          +     0.37209457890956 * S_NumStorePurchases
1334239   +          +     0.25018232304823 * S_NumWebPurchases
1334240   +          +    -0.12167684141831 * S_NumWebVisitsMonth
1334241   +          +    -0.26994136429184 * S_RFMstat  +    -0.15457821756538 *
1334242   +        S_RMntFrq  +      0.3771094487511 * S_Recency
1334243   +          +      0.3944445531753 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.5578105652985 * S_AcceptedCmpTotal + -0.23241971580203 * S_Age 
+ 0.28102175129839 * S_Frq + -0.14177438746231 * S_Income + -0.45967008908227 * S_Kidhome + 
0.02794787691339 * S_Mnt + 0.39828117417224 * S_MntFishProducts + -0.05411429665612 * 
S_MntFruits + -0.2217613503816 * S_MntGoldProds + -1.14707919351018 * S_MntMeatProducts + 
0.02010309795345 * S_MntSweetProducts + 0.39487005596698 * S_MntWines + 0.08057978219112 * 
S_MonthsAsCustomer + -0.52508994350253 * S_NumCatalogPurchases + -0.23353175442713 * 
S_NumDealsPurchases + 0.18635522192442 * S_NumDistPurchases + 0.37209457890956 * 
S_NumStorePurchases + 0.25018232304823 * S_NumWebPurchases + -0.12167684141831 * 
S_NumWebVisitsMonth + -0.26994136429184 * S_RFMstat + -0.15457821756538 * S_RMntFrq + 
0.3771094487511 * S_Recency + 0.3944445531753 * S_Teenhome ;
1334244   +   H12  =    -0.33593118949604 * S_AcceptedCmpTotal  +     0.13223006727754 *
1334245   +        S_Age  +     0.22535213074211 * S_Frq  +    -0.12962185963332 *
1334246   +        S_Income  +     0.23329613045589 * S_Kidhome
1334247   +          +     0.49569557196329 * S_Mnt  +     0.06134353482875 *
1334248   +        S_MntFishProducts  +     0.04198696278324 * S_MntFruits
1334249   +          +    -0.23606182835876 * S_MntGoldProds  +    -0.86703877719801 *
1334250   +        S_MntMeatProducts  +     0.13899494079616 * S_MntSweetProducts
1334251   +          +     0.64295088795338 * S_MntWines  +     0.23885718884975 *
1334252   +        S_MonthsAsCustomer  +    -0.13805721887365 * S_NumCatalogPurchases
1334253   +          +    -0.09699498622435 * S_NumDealsPurchases
1334254   +          +     0.40364070798795 * S_NumDistPurchases
1334255   +          +      0.2162579072164 * S_NumStorePurchases
1334256   +          +     0.26248410135079 * S_NumWebPurchases
1334257   +          +    -0.59275827872509 * S_NumWebVisitsMonth
1334258   +          +    -0.14095167046806 * S_RFMstat  +     0.33659399551436 *
1334259   +        S_RMntFrq  +     0.34734104517337 * S_Recency
1334260   +          +     0.20490660913172 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.33593118949604 * S_AcceptedCmpTotal + 0.13223006727754 * S_Age 
+ 0.22535213074211 * S_Frq + -0.12962185963332 * S_Income + 0.23329613045589 * S_Kidhome + 
0.49569557196329 * S_Mnt + 0.06134353482875 * S_MntFishProducts + 0.04198696278324 * 
S_MntFruits + -0.23606182835876 * S_MntGoldProds + -0.86703877719801 * S_MntMeatProducts + 
0.13899494079616 * S_MntSweetProducts + 0.64295088795338 * S_MntWines + 0.23885718884975 * 
S_MonthsAsCustomer + -0.13805721887365 * S_NumCatalogPurchases + -0.09699498622435 * 
S_NumDealsPurchases + 0.40364070798795 * S_NumDistPurchases + 0.2162579072164 * 
S_NumStorePurchases + 0.26248410135079 * S_NumWebPurchases + -0.59275827872509 * 
S_NumWebVisitsMonth + -0.14095167046806 * S_RFMstat + 0.33659399551436 * S_RMntFrq + 
0.34734104517337 * S_Recency + 0.20490660913172 * S_Teenhome ;
1334261   +   H13  =    -0.62678716035049 * S_AcceptedCmpTotal  +    -0.10291990746359 *
1334262   +        S_Age  +     0.05177116030679 * S_Frq  +    -0.22841348118599 *
1334263   +        S_Income  +     0.20139862021528 * S_Kidhome
1334264   +          +    -0.14983527202624 * S_Mnt  +    -0.48769617499769 *
1334265   +        S_MntFishProducts  +    -0.14107770157183 * S_MntFruits
1334266   +          +     0.10521088971296 * S_MntGoldProds  +     0.32521316479212 *
1334267   +        S_MntMeatProducts  +    -0.31623965627102 * S_MntSweetProducts
1334268   +          +     0.04140559575505 * S_MntWines  +     0.04461152334998 *
1334269   +        S_MonthsAsCustomer  +     0.02235616550218 * S_NumCatalogPurchases
1334270   +          +     0.09066191700879 * S_NumDealsPurchases
1334271   +          +    -0.05769000978222 * S_NumDistPurchases
1334272   +          +    -0.10089591692167 * S_NumStorePurchases
1334273   +          +    -0.00088654116561 * S_NumWebPurchases
1334274   +          +    -0.03166195000043 * S_NumWebVisitsMonth
1334275   +          +    -0.19039498348905 * S_RFMstat  +    -0.07321662360003 *
1334276   +        S_RMntFrq  +    -0.10121013357627 * S_Recency
1334277   +          +     0.07832397278234 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.62678716035049 * S_AcceptedCmpTotal + -0.10291990746359 * S_Age 
+ 0.05177116030679 * S_Frq + -0.22841348118599 * S_Income + 0.20139862021528 * S_Kidhome + 
-0.14983527202624 * S_Mnt + -0.48769617499769 * S_MntFishProducts + -0.14107770157183 * 
S_MntFruits + 0.10521088971296 * S_MntGoldProds + 0.32521316479212 * S_MntMeatProducts + 
-0.31623965627102 * S_MntSweetProducts + 0.04140559575505 * S_MntWines + 0.04461152334998 * 
S_MonthsAsCustomer + 0.02235616550218 * S_NumCatalogPurchases + 0.09066191700879 * 
S_NumDealsPurchases + -0.05769000978222 * S_NumDistPurchases + -0.10089591692167 * 
S_NumStorePurchases + -0.00088654116561 * S_NumWebPurchases + -0.03166195000043 * 
S_NumWebVisitsMonth + -0.19039498348905 * S_RFMstat + -0.07321662360003 * S_RMntFrq + 
-0.10121013357627 * S_Recency + 0.07832397278234 * S_Teenhome ;
1334278   +   H14  =     0.58751331473911 * S_AcceptedCmpTotal  +     0.04644967312033 *
1334279   +        S_Age  +      0.2396819202713 * S_Frq  +     0.09956520306725 *
1334280   +        S_Income  +      0.2502648333687 * S_Kidhome
1334281   +          +     0.28121314160041 * S_Mnt  +    -0.20485047973809 *
1334282   +        S_MntFishProducts  +    -0.01460488281711 * S_MntFruits
1334283   +          +    -0.03288844720922 * S_MntGoldProds  +     1.97837236467115 *
1334284   +        S_MntMeatProducts  +     0.28301480917504 * S_MntSweetProducts
1334285   +          +     -0.6936431037386 * S_MntWines  +    -0.00532955644826 *
1334286   +        S_MonthsAsCustomer  +     1.76299586599682 * S_NumCatalogPurchases
1334287   +          +     0.83424444661619 * S_NumDealsPurchases
1334288   +          +     0.31333214543205 * S_NumDistPurchases
1334289   +          +    -0.61732647242019 * S_NumStorePurchases
1334290   +          +    -1.01955156895052 * S_NumWebPurchases
1334291   +          +     0.13017609997428 * S_NumWebVisitsMonth
1334292   +          +     0.35931716325651 * S_RFMstat  +    -0.00463731332856 *
1334293   +        S_RMntFrq  +    -0.38584375735163 * S_Recency
1334294   +          +    -0.00542085930429 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.58751331473911 * S_AcceptedCmpTotal + 0.04644967312033 * S_Age + 
0.2396819202713 * S_Frq + 0.09956520306725 * S_Income + 0.2502648333687 * S_Kidhome + 
0.28121314160041 * S_Mnt + -0.20485047973809 * S_MntFishProducts + -0.01460488281711 * 
S_MntFruits + -0.03288844720922 * S_MntGoldProds + 1.97837236467115 * S_MntMeatProducts + 
0.28301480917504 * S_MntSweetProducts + -0.6936431037386 * S_MntWines + -0.00532955644826 * 
S_MonthsAsCustomer + 1.76299586599682 * S_NumCatalogPurchases + 0.83424444661619 * 
S_NumDealsPurchases + 0.31333214543205 * S_NumDistPurchases + -0.61732647242019 * 
S_NumStorePurchases + -1.01955156895052 * S_NumWebPurchases + 0.13017609997428 * 
S_NumWebVisitsMonth + 0.35931716325651 * S_RFMstat + -0.00463731332856 * S_RMntFrq + 
-0.38584375735163 * S_Recency + -0.00542085930429 * S_Teenhome ;
1334295   +   H15  =     0.53146760457913 * S_AcceptedCmpTotal  +    -0.03810411031475 *
1334296   +        S_Age  +    -0.18043958502932 * S_Frq  +     0.69595178597879 *
1334297   +        S_Income  +    -0.70952256145726 * S_Kidhome
1334298   +          +     0.07336443095717 * S_Mnt  +     0.07813855224934 *
1334299   +        S_MntFishProducts  +    -0.09796868776705 * S_MntFruits
1334300   +          +     -0.1026096257543 * S_MntGoldProds  +     0.90002400845078 *
1334301   +        S_MntMeatProducts  +    -0.05163420076554 * S_MntSweetProducts
1334302   +          +    -0.41703750500589 * S_MntWines  +     0.01638041414141 *
1334303   +        S_MonthsAsCustomer  +      0.6832201856142 * S_NumCatalogPurchases
1334304   +          +     0.63522682456102 * S_NumDealsPurchases
1334305   +          +      0.0043057429215 * S_NumDistPurchases
1334306   +          +    -0.76667751707574 * S_NumStorePurchases
1334307   +          +    -0.73436881033241 * S_NumWebPurchases
1334308   +          +     1.59331554601341 * S_NumWebVisitsMonth
1334309   +          +     0.05617601605625 * S_RFMstat  +    -0.49130520428583 *
1334310   +        S_RMntFrq  +    -1.32582830247063 * S_Recency
1334311   +          +     -0.3056726615596 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.53146760457913 * S_AcceptedCmpTotal + -0.03810411031475 * S_Age 
+ -0.18043958502932 * S_Frq + 0.69595178597879 * S_Income + -0.70952256145726 * S_Kidhome + 
0.07336443095717 * S_Mnt + 0.07813855224934 * S_MntFishProducts + -0.09796868776705 * 
S_MntFruits + -0.1026096257543 * S_MntGoldProds + 0.90002400845078 * S_MntMeatProducts + 
-0.05163420076554 * S_MntSweetProducts + -0.41703750500589 * S_MntWines + 0.01638041414141 * 
S_MonthsAsCustomer + 0.6832201856142 * S_NumCatalogPurchases + 0.63522682456102 * 
S_NumDealsPurchases + 0.0043057429215 * S_NumDistPurchases + -0.76667751707574 * 
S_NumStorePurchases + -0.73436881033241 * S_NumWebPurchases + 1.59331554601341 * 
S_NumWebVisitsMonth + 0.05617601605625 * S_RFMstat + -0.49130520428583 * S_RMntFrq + 
-1.32582830247063 * S_Recency + -0.3056726615596 * S_Teenhome ;
1334312   +   H16  =    -0.14553823909316 * S_AcceptedCmpTotal  +     0.33407048981453 *
1334313   +        S_Age  +     0.23734269837078 * S_Frq  +     0.25406469036176 *
1334314   +        S_Income  +    -0.23632967504194 * S_Kidhome
1334315   +          +      0.0179055062616 * S_Mnt  +    -0.02279077829807 *
1334316   +        S_MntFishProducts  +     0.01454079994702 * S_MntFruits
1334317   +          +     0.11034379787627 * S_MntGoldProds  +    -0.08132325963546 *
1334318   +        S_MntMeatProducts  +    -0.15375043677096 * S_MntSweetProducts
1334319   +          +    -0.28898229890805 * S_MntWines  +     0.18829471441599 *
1334320   +        S_MonthsAsCustomer  +     0.22198357500123 * S_NumCatalogPurchases
1334321   +          +     -0.3032858959477 * S_NumDealsPurchases
1334322   +          +     0.11343979556999 * S_NumDistPurchases
1334323   +          +     0.19545021266061 * S_NumStorePurchases
1334324   +          +      0.1566777684546 * S_NumWebPurchases
1334325   +          +    -0.19390757759484 * S_NumWebVisitsMonth
1334326   +          +    -0.21685141921823 * S_RFMstat  +    -0.08968120165679 *
1334327   +        S_RMntFrq  +     0.01331408958685 * S_Recency
1334328   +          +    -0.29851875139164 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.14553823909316 * S_AcceptedCmpTotal + 0.33407048981453 * S_Age 
+ 0.23734269837078 * S_Frq + 0.25406469036176 * S_Income + -0.23632967504194 * S_Kidhome + 
0.0179055062616 * S_Mnt + -0.02279077829807 * S_MntFishProducts + 0.01454079994702 * 
S_MntFruits + 0.11034379787627 * S_MntGoldProds + -0.08132325963546 * S_MntMeatProducts + 
-0.15375043677096 * S_MntSweetProducts + -0.28898229890805 * S_MntWines + 0.18829471441599 * 
S_MonthsAsCustomer + 0.22198357500123 * S_NumCatalogPurchases + -0.3032858959477 * 
S_NumDealsPurchases + 0.11343979556999 * S_NumDistPurchases + 0.19545021266061 * 
S_NumStorePurchases + 0.1566777684546 * S_NumWebPurchases + -0.19390757759484 * 
S_NumWebVisitsMonth + -0.21685141921823 * S_RFMstat + -0.08968120165679 * S_RMntFrq + 
0.01331408958685 * S_Recency + -0.29851875139164 * S_Teenhome ;
1334329   +   H17  =     0.17466919198464 * S_AcceptedCmpTotal  +     -0.1121028079984 *
1334330   +        S_Age  +     0.02716231756399 * S_Frq  +     0.41157809710764 *
1334331   +        S_Income  +    -0.47847362741737 * S_Kidhome
1334332   +          +     0.12197279598903 * S_Mnt  +    -0.28291208980103 *
1334333   +        S_MntFishProducts  +    -0.06478996635951 * S_MntFruits
1334334   +          +     0.10519382804535 * S_MntGoldProds  +    -0.02084816137226 *
1334335   +        S_MntMeatProducts  +     0.00302745742685 * S_MntSweetProducts
1334336   +          +     0.05093107260089 * S_MntWines  +    -0.11279856455812 *
1334337   +        S_MonthsAsCustomer  +     0.33888951696726 * S_NumCatalogPurchases
1334338   +          +    -0.17510289915098 * S_NumDealsPurchases
1334339   +          +     0.16952490494417 * S_NumDistPurchases
1334340   +          +     0.11152117614204 * S_NumStorePurchases
1334341   +          +     0.22594341376741 * S_NumWebPurchases
1334342   +          +     0.64523546369354 * S_NumWebVisitsMonth
1334343   +          +     0.10568501117555 * S_RFMstat  +     0.12784241795943 *
1334344   +        S_RMntFrq  +    -1.11651429004489 * S_Recency
1334345   +          +    -0.48880952880502 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = 0.17466919198464 * S_AcceptedCmpTotal + -0.1121028079984 * S_Age + 
0.02716231756399 * S_Frq + 0.41157809710764 * S_Income + -0.47847362741737 * S_Kidhome + 
0.12197279598903 * S_Mnt + -0.28291208980103 * S_MntFishProducts + -0.06478996635951 * 
S_MntFruits + 0.10519382804535 * S_MntGoldProds + -0.02084816137226 * S_MntMeatProducts + 
0.00302745742685 * S_MntSweetProducts + 0.05093107260089 * S_MntWines + -0.11279856455812 * 
S_MonthsAsCustomer + 0.33888951696726 * S_NumCatalogPurchases + -0.17510289915098 * 
S_NumDealsPurchases + 0.16952490494417 * S_NumDistPurchases + 0.11152117614204 * 
S_NumStorePurchases + 0.22594341376741 * S_NumWebPurchases + 0.64523546369354 * 
S_NumWebVisitsMonth + 0.10568501117555 * S_RFMstat + 0.12784241795943 * S_RMntFrq + 
-1.11651429004489 * S_Recency + -0.48880952880502 * S_Teenhome ;
1334346   +   H11  = H11  +     0.13977383212072 * AcceptedCmp10
1334347   +          +     0.05060031718137 * AcceptedCmp20  +     -0.1285183348614 *
1334348   +        AcceptedCmp30  +    -0.10484468193603 * AcceptedCmp40
1334349   +          +     0.05917719975803 * AcceptedCmp50  +    -0.26316725467429 *
1334350   +        Complain0  +    -0.01895470174434 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.13977383212072 * AcceptedCmp10 + 0.05060031718137 * 
AcceptedCmp20 + -0.1285183348614 * AcceptedCmp30 + -0.10484468193603 * AcceptedCmp40 + 
0.05917719975803 * AcceptedCmp50 + -0.26316725467429 * Complain0 + -0.01895470174434 * 
HigherEducationBinary0 ;
1334351   +   H12  = H12  +     0.02037307448825 * AcceptedCmp10
1334352   +          +     0.17835601132169 * AcceptedCmp20  +     0.38550714429243 *
1334353   +        AcceptedCmp30  +    -0.33756721331432 * AcceptedCmp40
1334354   +          +     0.37598437397044 * AcceptedCmp50  +    -0.03377310181099 *
1334355   +        Complain0  +    -0.39065832156758 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.02037307448825 * AcceptedCmp10 + 0.17835601132169 * 
AcceptedCmp20 + 0.38550714429243 * AcceptedCmp30 + -0.33756721331432 * AcceptedCmp40 + 
0.37598437397044 * AcceptedCmp50 + -0.03377310181099 * Complain0 + -0.39065832156758 * 
HigherEducationBinary0 ;
1334356   +   H13  = H13  +    -0.22454004936394 * AcceptedCmp10
1334357   +          +     0.05941661323841 * AcceptedCmp20  +    -0.03592458555508 *
1334358   +        AcceptedCmp30  +    -0.25474371327449 * AcceptedCmp40
1334359   +          +     -0.0455897206132 * AcceptedCmp50  +     0.04740536844263 *
1334360   +        Complain0  +    -0.02878944582567 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.22454004936394 * AcceptedCmp10 + 0.05941661323841 * 
AcceptedCmp20 + -0.03592458555508 * AcceptedCmp30 + -0.25474371327449 * AcceptedCmp40 + 
-0.0455897206132 * AcceptedCmp50 + 0.04740536844263 * Complain0 + -0.02878944582567 * 
HigherEducationBinary0 ;
1334361   +   H14  = H14  +     -0.3260094757606 * AcceptedCmp10
1334362   +          +    -0.11375214865976 * AcceptedCmp20  +     0.17394162217532 *
1334363   +        AcceptedCmp30  +     0.25649528618828 * AcceptedCmp40
1334364   +          +    -0.09775926020035 * AcceptedCmp50  +     0.07605735003987 *
1334365   +        Complain0  +    -0.03961404091649 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.3260094757606 * AcceptedCmp10 + -0.11375214865976 * 
AcceptedCmp20 + 0.17394162217532 * AcceptedCmp30 + 0.25649528618828 * AcceptedCmp40 + 
-0.09775926020035 * AcceptedCmp50 + 0.07605735003987 * Complain0 + -0.03961404091649 * 
HigherEducationBinary0 ;
1334366   +   H15  = H15  +    -0.25690837852364 * AcceptedCmp10
1334367   +          +    -0.17111872756246 * AcceptedCmp20  +    -0.15594117886178 *
1334368   +        AcceptedCmp30  +    -0.35871566761504 * AcceptedCmp40
1334369   +          +    -0.33301494609865 * AcceptedCmp50  +     0.02032122936961 *
1334370   +        Complain0  +    -0.28127713754103 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.25690837852364 * AcceptedCmp10 + -0.17111872756246 * 
AcceptedCmp20 + -0.15594117886178 * AcceptedCmp30 + -0.35871566761504 * AcceptedCmp40 + 
-0.33301494609865 * AcceptedCmp50 + 0.02032122936961 * Complain0 + -0.28127713754103 * 
HigherEducationBinary0 ;
1334371   +   H16  = H16  +     0.01304767072646 * AcceptedCmp10
1334372   +          +     0.04542970824889 * AcceptedCmp20  +    -0.04086132015641 *
1334373   +        AcceptedCmp30  +    -0.01583924109084 * AcceptedCmp40
1334374   +          +    -0.06928082094172 * AcceptedCmp50  +    -0.06496287745005 *
1334375   +        Complain0  +     0.23477563976328 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.01304767072646 * AcceptedCmp10 + 0.04542970824889 * 
AcceptedCmp20 + -0.04086132015641 * AcceptedCmp30 + -0.01583924109084 * AcceptedCmp40 + 
-0.06928082094172 * AcceptedCmp50 + -0.06496287745005 * Complain0 + 0.23477563976328 * 
HigherEducationBinary0 ;
1334376   +   H17  = H17  +     0.01615921378096 * AcceptedCmp10
1334377   +          +    -0.15677614259446 * AcceptedCmp20  +    -0.26690848255992 *
1334378   +        AcceptedCmp30  +    -0.26633430402858 * AcceptedCmp40
1334379   +          +     -0.1321548166386 * AcceptedCmp50  +    -0.12983847017281 *
1334380   +        Complain0  +     0.32518892495397 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.01615921378096 * AcceptedCmp10 + -0.15677614259446 * 
AcceptedCmp20 + -0.26690848255992 * AcceptedCmp30 + -0.26633430402858 * AcceptedCmp40 + 
-0.1321548166386 * AcceptedCmp50 + -0.12983847017281 * Complain0 + 0.32518892495397 * 
HigherEducationBinary0 ;
1334381   +   H11  = H11  +     0.05829614347592 * Education2n_Cycle
1334382   +          +     0.28826698233517 * EducationBasic  +     0.30092045123127 *
1334383   +        EducationGraduation  +     0.01956517058574 * EducationMaster
1334384   +          +     0.42319965972117 * Marital_StatusDivorced
1334385   +          +    -0.45015157317991 * Marital_StatusMarried
1334386   +          +     0.43076106925345 * Marital_StatusSingle
1334387   +          +    -0.34625245410408 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.05829614347592 * Education2n_Cycle + 0.28826698233517 * 
EducationBasic + 0.30092045123127 * EducationGraduation + 0.01956517058574 * EducationMaster + 
0.42319965972117 * Marital_StatusDivorced + -0.45015157317991 * Marital_StatusMarried + 
0.43076106925345 * Marital_StatusSingle + -0.34625245410408 * Marital_StatusTogether ;
1334388   +   H12  = H12  +    -0.15246834223268 * Education2n_Cycle
1334389   +          +     0.02248997563033 * EducationBasic  +    -0.05434884503392 *
1334390   +        EducationGraduation  +     0.28747604127576 * EducationMaster
1334391   +          +     0.11384347873072 * Marital_StatusDivorced
1334392   +          +     0.51442453272823 * Marital_StatusMarried
1334393   +          +    -0.38966058028661 * Marital_StatusSingle
1334394   +          +     0.59654659814606 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.15246834223268 * Education2n_Cycle + 0.02248997563033 * 
EducationBasic + -0.05434884503392 * EducationGraduation + 0.28747604127576 * EducationMaster 
+ 0.11384347873072 * Marital_StatusDivorced + 0.51442453272823 * Marital_StatusMarried + 
-0.38966058028661 * Marital_StatusSingle + 0.59654659814606 * Marital_StatusTogether ;
1334395   +   H13  = H13  +     0.07291520243057 * Education2n_Cycle
1334396   +          +     0.22798022739243 * EducationBasic  +    -0.09714428862174 *
1334397   +        EducationGraduation  +     0.19910048440114 * EducationMaster
1334398   +          +    -0.05213342781535 * Marital_StatusDivorced
1334399   +          +     0.07520352092928 * Marital_StatusMarried
1334400   +          +     0.20175107471623 * Marital_StatusSingle
1334401   +          +     0.21785232690504 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07291520243057 * Education2n_Cycle + 0.22798022739243 * 
EducationBasic + -0.09714428862174 * EducationGraduation + 0.19910048440114 * EducationMaster 
+ -0.05213342781535 * Marital_StatusDivorced + 0.07520352092928 * Marital_StatusMarried + 
0.20175107471623 * Marital_StatusSingle + 0.21785232690504 * Marital_StatusTogether ;
1334402   +   H14  = H14  +    -0.16241733679628 * Education2n_Cycle
1334403   +          +     0.10611998985678 * EducationBasic  +    -0.03570492688548 *
1334404   +        EducationGraduation  +     0.29010545079762 * EducationMaster
1334405   +          +    -0.40635592200933 * Marital_StatusDivorced
1334406   +          +     0.64772941459031 * Marital_StatusMarried
1334407   +          +    -0.36402842056603 * Marital_StatusSingle
1334408   +          +     0.66760594472194 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.16241733679628 * Education2n_Cycle + 0.10611998985678 * 
EducationBasic + -0.03570492688548 * EducationGraduation + 0.29010545079762 * EducationMaster 
+ -0.40635592200933 * Marital_StatusDivorced + 0.64772941459031 * Marital_StatusMarried + 
-0.36402842056603 * Marital_StatusSingle + 0.66760594472194 * Marital_StatusTogether ;
1334409   +   H15  = H15  +      0.1484080088272 * Education2n_Cycle
1334410   +          +    -0.26484833011693 * EducationBasic  +     0.32372570227867 *
1334411   +        EducationGraduation  +    -0.19830450172452 * EducationMaster
1334412   +          +     0.87932592764844 * Marital_StatusDivorced
1334413   +          +    -0.85946473083734 * Marital_StatusMarried
1334414   +          +     0.74505733668545 * Marital_StatusSingle
1334415   +          +    -0.94561469309103 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.1484080088272 * Education2n_Cycle + -0.26484833011693 * 
EducationBasic + 0.32372570227867 * EducationGraduation + -0.19830450172452 * EducationMaster 
+ 0.87932592764844 * Marital_StatusDivorced + -0.85946473083734 * Marital_StatusMarried + 
0.74505733668545 * Marital_StatusSingle + -0.94561469309103 * Marital_StatusTogether ;
1334416   +   H16  = H16  +     0.06060112302425 * Education2n_Cycle
1334417   +          +    -0.33181717926405 * EducationBasic  +    -0.11727908170163 *
1334418   +        EducationGraduation  +    -0.12441264886812 * EducationMaster
1334419   +          +    -0.11861748280641 * Marital_StatusDivorced
1334420   +          +    -0.15869097739395 * Marital_StatusMarried
1334421   +          +     0.34415019828259 * Marital_StatusSingle
1334422   +          +    -0.10748203749958 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.06060112302425 * Education2n_Cycle + -0.33181717926405 * 
EducationBasic + -0.11727908170163 * EducationGraduation + -0.12441264886812 * EducationMaster 
+ -0.11861748280641 * Marital_StatusDivorced + -0.15869097739395 * Marital_StatusMarried + 
0.34415019828259 * Marital_StatusSingle + -0.10748203749958 * Marital_StatusTogether ;
1334423   +   H17  = H17  +      0.0204719144571 * Education2n_Cycle
1334424   +          +    -0.21500190587821 * EducationBasic  +    -0.12457774765815 *
1334425   +        EducationGraduation  +    -0.08824349470153 * EducationMaster
1334426   +          +     0.14995740697816 * Marital_StatusDivorced
1334427   +          +    -1.01788822114068 * Marital_StatusMarried
1334428   +          +     0.70532758126153 * Marital_StatusSingle
1334429   +          +    -0.63335960879305 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.0204719144571 * Education2n_Cycle + -0.21500190587821 * 
EducationBasic + -0.12457774765815 * EducationGraduation + -0.08824349470153 * EducationMaster 
+ 0.14995740697816 * Marital_StatusDivorced + -1.01788822114068 * Marital_StatusMarried + 
0.70532758126153 * Marital_StatusSingle + -0.63335960879305 * Marital_StatusTogether ;
1334430   +   H11  =     0.02607332365548 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.02607332365548 + H11 ;
1334431   +   H12  =    -0.56666577494928 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.56666577494928 + H12 ;
1334432   +   H13  =    -1.03772915602166 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.03772915602166 + H13 ;
1334433   +   H14  =     0.84490585692811 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.84490585692811 + H14 ;
1334434   +   H15  =     -0.4221012604846 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.4221012604846 + H15 ;
1334435   +   H16  =     -1.7732139312938 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.7732139312938 + H16 ;
1334436   +   H17  =    -1.59831075827511 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.59831075827511 + H17 ;
1334437   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1334438   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1334439   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1334440   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1334441   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1334442   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1334443   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
1334444   +END;
MPRINT(EM_DIAGRAM):   END;
1334445   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1334446   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1334447   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1334448   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1334449   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1334450   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1334451   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1334452   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
1334453   +END;
MPRINT(EM_DIAGRAM):   END;
1334454   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1334455   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1334456   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1334457   +
1334458   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1334459   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1334460   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1334461   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1334462   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1334463   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1334464   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1334465   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1334466   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1334467   +end;
MPRINT(EM_DIAGRAM):   end;
1334468   +else do;
MPRINT(EM_DIAGRAM):   else do;
1334469   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1334470   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1334471   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1334472   +   end;
MPRINT(EM_DIAGRAM):   end;
1334473   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1334474   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1334475   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1334476   +   end;
MPRINT(EM_DIAGRAM):   end;
1334477   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1334478   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1334479   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1334480   +   end;
MPRINT(EM_DIAGRAM):   end;
1334481   +end;
MPRINT(EM_DIAGRAM):   end;
1334482   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1334483   +   P_DepVar1  =      -1.605577695663 * H11  +    -1.61358647892122 * H12
1334484   +          +     0.34401900767527 * H13  +     3.24181562332148 * H14
1334485   +          +     3.59380365492102 * H15  +     0.56941587287347 * H16
1334486   +          +     2.13310046968058 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.605577695663 * H11 + -1.61358647892122 * H12 + 
0.34401900767527 * H13 + 3.24181562332148 * H14 + 3.59380365492102 * H15 + 0.56941587287347 * 
H16 + 2.13310046968058 * H17 ;
1334487   +   P_DepVar1  =    -2.17258746401986 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.17258746401986 + P_DepVar1 ;
1334488   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1334489   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1334490   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1334491   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1334492   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1334493   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1334494   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1334495   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1334496   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1334497   +END;
MPRINT(EM_DIAGRAM):   END;
1334498   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1334499   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1334500   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1334501   +END;
MPRINT(EM_DIAGRAM):   END;
1334502   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1334503   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1334504   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1334505   +END;
MPRINT(EM_DIAGRAM):   END;
1334506   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1334507   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1334508   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1334509   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1334510   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1334511   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1334512   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1334513   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1334514   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1334515   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1334516   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1334517   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1334518   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1334519   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1334520   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1334521   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1334522   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1334523   +END;
MPRINT(EM_DIAGRAM):   END;
1334524   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1334525   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1334526   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1334527   +drop
1334528   +H11
1334529   +H12
1334530   +H13
1334531   +H14
1334532   +H15
1334533   +H16
1334534   +H17
1334535   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
1334536   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1334537   +* Renaming variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural10;
1334538   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1334539   +* Renaming Posterior variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural10;
1334540   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1334541   +drop Neural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural10_P_DepVar1;
1334542   +Neural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural10_P_DepVar1 = P_DepVar1;
1334543   +drop Neural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural10_P_DepVar0;
1334544   +Neural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural10_P_DepVar0 = P_DepVar0;
1334545   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1334546   +* Renaming _WARN_ variable for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural10;
1334547   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1334548   +length Neural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural10_WARN_ $4;
1334549   +drop Neural10_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural10_WARN_;
1334550   +Neural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural10_WARN_ = _WARN_;
1334551   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1334552   +* Ensmbl: Average Posteriors of 10 models;
MPRINT(EM_DIAGRAM):   * Ensmbl: Average Posteriors of 10 models;
1334553   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1334554   +P_DepVar1 = (
1334555   +Reg5_P_DepVar1 +
1334556   +Reg_P_DepVar1 +
1334557   +Tree_P_DepVar1 +
1334558   +Neural4_P_DepVar1 +
1334559   +Neural_P_DepVar1 +
1334560   +Neural2_P_DepVar1 +
1334561   +Neural3_P_DepVar1 +
1334562   +Neural7_P_DepVar1 +
1334563   +Neural9_P_DepVar1 +
1334564   +Neural10_P_DepVar1
1334565   +)/10;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( Reg5_P_DepVar1 + Reg_P_DepVar1 + Tree_P_DepVar1 + 
Neural4_P_DepVar1 + Neural_P_DepVar1 + Neural2_P_DepVar1 + Neural3_P_DepVar1 + 
Neural7_P_DepVar1 + Neural9_P_DepVar1 + Neural10_P_DepVar1 )/10;
1334566   +P_DepVar0 = (
1334567   +Reg5_P_DepVar0 +
1334568   +Reg_P_DepVar0 +
1334569   +Tree_P_DepVar0 +
1334570   +Neural4_P_DepVar0 +
1334571   +Neural_P_DepVar0 +
1334572   +Neural2_P_DepVar0 +
1334573   +Neural3_P_DepVar0 +
1334574   +Neural7_P_DepVar0 +
1334575   +Neural9_P_DepVar0 +
1334576   +Neural10_P_DepVar0
1334577   +)/10;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( Reg5_P_DepVar0 + Reg_P_DepVar0 + Tree_P_DepVar0 + 
Neural4_P_DepVar0 + Neural_P_DepVar0 + Neural2_P_DepVar0 + Neural3_P_DepVar0 + 
Neural7_P_DepVar0 + Neural9_P_DepVar0 + Neural10_P_DepVar0 )/10;
1334578   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1334579   +* Ensmbl: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl: Computing Classification Vars;
1334580   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1334581   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
1334582   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
1334583   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
1334584   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
1334585   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
1334586   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
1334587   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
1334588   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
1334589   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
1334590   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
1334591   +end;
MPRINT(EM_DIAGRAM):   end;
1334592   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
1334593   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
1334594   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
1334595   +end;
MPRINT(EM_DIAGRAM):   end;
1334596   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1334597   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1334598   +* Ensmbl: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl: Producing Unformatted variable;
1334599   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1334600   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1334601   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1334602   +else
1334603   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1334604   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1334605   +* Ensmbl: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl: Computing _WARN_ Variable;
1334606   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1334607   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1334608   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1334609   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1334610   +if index(REG5_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 
1) ='M';
1334611   +if index(REG5_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 
1) ='U';
1334612   +if index(REG5_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 
1) ='P';
1334613   +if index(REG5_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 
1) ='C';
1334614   +if index(REG_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 
1) ='M';
1334615   +if index(REG_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 
1) ='U';
1334616   +if index(REG_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 
1) ='P';
1334617   +if index(REG_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 
1) ='C';
1334618   +if index(TREE_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(TREE_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 
1) ='M';
1334619   +if index(TREE_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(TREE_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 
1) ='U';
1334620   +if index(TREE_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(TREE_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 
1) ='P';
1334621   +if index(TREE_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(TREE_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 
1) ='C';
1334622   +if index(NEURAL4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1334623   +if index(NEURAL4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1334624   +if index(NEURAL4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1334625   +if index(NEURAL4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1334626   +if index(NEURAL_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1334627   +if index(NEURAL_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1334628   +if index(NEURAL_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1334629   +if index(NEURAL_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1334630   +if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1334631   +if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1334632   +if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1334633   +if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1334634   +if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1334635   +if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1334636   +if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1334637   +if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1334638   +if index(NEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1334639   +if index(NEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1334640   +if index(NEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1334641   +if index(NEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1334642   +if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1334643   +if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1334644   +if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1334645   +if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1334646   +if index(NEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1334646  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1334647   +if index(NEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1334647  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1334648   +if index(NEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1334648  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1334649   +if index(NEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1334649  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1334650   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1334651   +* Ensmbl: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl: Computing Residual Vars;
1334652   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1334653   +if
1334654   +F_DepVar NE '1'
1334655   +AND F_DepVar NE '0'
1334656   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
1334657   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1334658   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1334659   +end;
MPRINT(EM_DIAGRAM):   end;
1334660   +else do;
MPRINT(EM_DIAGRAM):   else do;
1334661   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
1334662   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
1334663   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
1334664   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
1334665   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
1334666   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
1334667   +END;
MPRINT(EM_DIAGRAM):   END;
1334668   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1334669    run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.REG5_VALIDATE.VIEW used (Total process time):
      real time           0.19 seconds
      cpu time            0.18 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.20 seconds
      cpu time            0.20 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1334670    quit;
1334671    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of 
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error" 
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_= 
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train: 
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of 
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error" 
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_= 
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid: 
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
1334731    filename _pref
1334731  ! "C:\\predictive-models-project\Workspaces\EMWS8\Reg5\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Reg5\EMPUBLISHSCORE.sas";
1334732    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1334733    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Reg5\EMPUBLISHSCORE.sas.
1334734   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1334735   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1334736   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1334737   +
1334738   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1334739   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1334740   +
1334741   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1334742   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1334743   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1334744   +array REG5DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG5DRF [2] $12 _temporary_ ('1' '0' );
1334745   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1334746   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1334747   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1334748   +ARRAY REG5DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG5DRU[2] _TEMPORARY_ (1 0);
1334749   +
1334750   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1334751   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1334752   +
1334753   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1334754   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1334755   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1334756   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1334757   +end;
MPRINT(EM_DIAGRAM):   end;
1334758   +
1334759   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1334760   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1334761   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1334762   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1334763   +end;
MPRINT(EM_DIAGRAM):   end;
1334764   +
1334765   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1334766   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1334767   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1334768   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1334769   +end;
MPRINT(EM_DIAGRAM):   end;
1334770   +
1334771   +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
1334772   +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
1334773   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1334774   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1334775   +end;
MPRINT(EM_DIAGRAM):   end;
1334776   +
1334777   +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
1334778   +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
1334779   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1334780   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1334781   +end;
MPRINT(EM_DIAGRAM):   end;
1334782   +
1334783   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1334784   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1334785   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1334786   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1334787   +end;
MPRINT(EM_DIAGRAM):   end;
1334788   +
1334789   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
1334790   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
1334791   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1334792   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1334793   +end;
MPRINT(EM_DIAGRAM):   end;
1334794   +
1334795   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1334796   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1334797   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1334798   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1334799   +end;
MPRINT(EM_DIAGRAM):   end;
1334800   +
1334801   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1334802   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1334803   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1334804   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1334805   +end;
MPRINT(EM_DIAGRAM):   end;
1334806   +
1334807   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1334808   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1334809   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1334810   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1334811   +end;
MPRINT(EM_DIAGRAM):   end;
1334812   +
1334813   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1334814   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1334815   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1334816   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1334817   +end;
MPRINT(EM_DIAGRAM):   end;
1334818   +
1334819   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1334820   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1334821   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1334822   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1334823   +end;
MPRINT(EM_DIAGRAM):   end;
1334824   +
1334825   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1334826   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
1334827   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1334828   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1334829   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1334830   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
1334831   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
1334832   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1334833   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1334834   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1334835   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1334836   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1334837   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1334838   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1334839   +end;
MPRINT(EM_DIAGRAM):   end;
1334840   +else do;
MPRINT(EM_DIAGRAM):   else do;
1334841   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1334842   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1334843   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1334844   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1334845   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1334846   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1334847   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1334848   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1334849   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1334850   +         end;
MPRINT(EM_DIAGRAM):   end;
1334851   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1334852   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1334853   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1334854   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1334855   +            end;
MPRINT(EM_DIAGRAM):   end;
1334856   +         end;
MPRINT(EM_DIAGRAM):   end;
1334857   +      end;
MPRINT(EM_DIAGRAM):   end;
1334858   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1334859   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1334860   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
1334861   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1334862   +         end;
MPRINT(EM_DIAGRAM):   end;
1334863   +      end;
MPRINT(EM_DIAGRAM):   end;
1334864   +   end;
MPRINT(EM_DIAGRAM):   end;
1334865   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1334866   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1334867   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
1334868   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1334869   +      end;
MPRINT(EM_DIAGRAM):   end;
1334870   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1334871   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1334872   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1334873   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1334874   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
1334875   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
1334876   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1334877   +         end;
MPRINT(EM_DIAGRAM):   end;
1334878   +      end;
MPRINT(EM_DIAGRAM):   end;
1334879   +   end;
MPRINT(EM_DIAGRAM):   end;
1334880   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1334881   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1334882   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1334883   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1334884   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1334885   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1334886   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1334887   +   end;
MPRINT(EM_DIAGRAM):   end;
1334888   +end;
MPRINT(EM_DIAGRAM):   end;
1334889   +
1334890   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1334891   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1334892   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1334893   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1334894   +   goto REG5DR1;
MPRINT(EM_DIAGRAM):   goto REG5DR1;
1334895   +end;
MPRINT(EM_DIAGRAM):   end;
1334896   +
1334897   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1334898   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1334899   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1334900   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1334901   +
1334902   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1334903   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1334904   +_LP0 = _LP0 + (    1.62720428342499 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.62720428342499 * _TEMP);
1334905   +
1334906   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1334907   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1334908   +_LP0 = _LP0 + (   -0.22971333675933 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.22971333675933 * _TEMP);
1334909   +
1334910   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1334911   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1334912   +_LP0 = _LP0 + (    0.00003533282438 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00003533282438 * _TEMP);
1334913   +
1334914   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1334915   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1334916   +_LP0 = _LP0 + (    0.08642160195218) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.08642160195218) * _TEMP * _9_0;
1334917   +_LP0 = _LP0 + (   -0.51421240544522) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.51421240544522) * _TEMP * _9_1;
1334918   +_LP0 = _LP0 + (    0.43839945966755) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.43839945966755) * _TEMP * _9_2;
1334919   +_LP0 = _LP0 + (   -0.51854020296844) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.51854020296844) * _TEMP * _9_3;
1334920   +
1334921   +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
1334922   +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
1334923   +_LP0 = _LP0 + (   -0.00223385655154 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00223385655154 * _TEMP);
1334924   +
1334925   +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
1334926   +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
1334927   +_LP0 = _LP0 + (    0.00401106095636 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00401106095636 * _TEMP);
1334928   +
1334929   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1334930   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1334931   +_LP0 = _LP0 + (    0.00703004991808 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00703004991808 * _TEMP);
1334932   +
1334933   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
1334934   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
1334935   +_LP0 = _LP0 + (    0.62141049405048 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.62141049405048 * _TEMP);
1334936   +
1334937   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1334938   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1334939   +_LP0 = _LP0 + (    0.39538473396078 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.39538473396078 * _TEMP);
1334940   +
1334941   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1334942   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1334943   +_LP0 = _LP0 + (    0.54283993308937 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.54283993308937 * _TEMP);
1334944   +
1334945   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1334946   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1334947   +_LP0 = _LP0 + (    0.00014928266997 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00014928266997 * _TEMP);
1334948   +
1334949   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1334950   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1334951   +_LP0 = _LP0 + (   -0.05097670253272 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05097670253272 * _TEMP);
1334952   +
1334953   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1334954   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1334955   +_LP0 = _LP0 + (   -0.68537073085327 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.68537073085327 * _TEMP);
1334956   +
1334957   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1334958   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1334959   +_P0 = probnorm((   -4.59636694921951) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -4.59636694921951) + _LP0);
1334960   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1334961   +
1334962   +REG5DR1:
1334963   +
1334964   +
1334965   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   REG5DR1: *** Posterior Probabilities and Predicted Level;
1334966   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1334967   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1334968   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1334969   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1334970   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1334971   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1334972   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1334973   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1334974   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1334975   +end;
MPRINT(EM_DIAGRAM):   end;
1334976   +I_DepVar = REG5DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG5DRF[_IY];
1334977   +U_DepVar = REG5DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG5DRU[_IY];
1334978   +
1334979   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1334980   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1334981   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1334982    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1334983    quit;
1334984    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1334985    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1334986    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1334987    retain ID 2 Node "Reg5";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Reg5";
1334988    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1334989    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 304 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 304 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1334990    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1334991    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1334992    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 304 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 304 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1334993    proc sort data=EMWS8.Reg5_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Reg5_variableset out=_temp2(keep=NAME CREATOR);
1334994    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1334995    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.REG5_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1334996    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1334997    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1334998    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1334999    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1335000    proc contents data=EMWS8.Reg5_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Reg5_train out=_meta(keep=NAME) noprint;
1335001    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1335002    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1335003    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1335004    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1335005    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1335006    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1335007    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1335008    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1335009    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1335010    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1335010  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 174 rows and 5 columns.

1335011    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1335012    proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
1335013    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 174 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL_FCMP has 174 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1335014    filename _pref
1335014  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1335015    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1335016    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1335017   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1335018   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1335019   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1335020   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1335021   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1335022   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1335023    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1335024    quit;
1335025    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1335026    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1335027    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1335028    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1335029    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1335030    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1335031    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1335032    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1335033    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1335034    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1335035    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1335036    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1335037    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1335038    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1335039    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1335040    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1335041    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1335042    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1335043    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1335044    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1335045    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1335046    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1335047    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1335048    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1335049    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1335050    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1335051    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1335051  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1335052    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1335053    proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
1335054    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL_FCMP has 178 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1335055    filename _pref
1335055  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1335056    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1335057    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1335058   +
1335059   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1335060   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1335060  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1335061   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1335062   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1335063   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1335064   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1335065   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1335066    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1335067    quit;
1335068    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1335069    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1335070    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1335071    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1335072    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1335073    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1335074    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1335075    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1335076    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1335077    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1335078    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1335079    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1335080    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1335081    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1335082    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1335083    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1335084    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1335085    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1335086    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1335087    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1335088    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1335089    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1335090    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1335091    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1335092    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1335093    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1335094    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1335094  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1335095    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1335096    proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
1335097    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL_FCMP has 217 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1335098    filename _pref
1335098  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1335099    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1335100    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1335101   +
1335102   +
1335103   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1335104   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1335105   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1335106   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1335107   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1335108   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1335109   +
1335110   +
1335111   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1335112   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1335113   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1335114   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1335115   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1335116   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1335117   +
1335118   +
1335119   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1335120   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1335121   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1335122   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1335123   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1335124   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1335125   +
1335126   +
1335127   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1335128   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1335129   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1335130   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1335131   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1335132   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1335133   +
1335134   +
1335135   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1335136   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1335137   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1335138   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1335139   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1335140   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1335141   +
1335142   +
1335143   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1335144   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1335145   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1335146   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1335147   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1335148   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1335149   +
1335150   +
1335151   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1335152   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1335153   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1335154   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1335155   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1335156   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1335157   +
1335158   +
1335159   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1335160   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1335161   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1335162   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1335163   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1335164   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1335165   +if
1335166   +_FILTERNORM1 not in ( '.')
1335167   + and
1335168   +_FILTERNORM2 not in ( '.')
1335169   + and
1335170   +_FILTERNORM3 not in ( '.')
1335171   + and
1335172   +_FILTERNORM4 not in ( '.')
1335173   + and
1335174   +_FILTERNORM5 not in ( '.')
1335175   + and
1335176   +_FILTERNORM6 not in ( '.')
1335177   + and
1335178   +_FILTERNORM7 not in ( ' ')
1335179   + and
1335180   +_FILTERNORM8 not in ( ' ')
1335181   +and
1335182   +( Dt_Customer ne .)
1335183   +and ( Income ne . and (Income<=107000))
1335184   +and ( Kidhome ne .)
1335185   +and ( MntFishProducts ne .)
1335186   +and ( MntFruits ne .)
1335187   +and ( MntGoldProds ne .)
1335188   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1335189   +and ( MntSweetProducts ne .)
1335190   +and ( MntWines ne .)
1335191   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1335192   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1335193   +and ( NumStorePurchases ne .)
1335194   +and ( NumWebPurchases ne .)
1335195   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1335196   +and ( Recency ne .)
1335197   +and ( Teenhome ne .)
1335198   +and ( Year_Birth ne .)
1335199   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1335200   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1335201   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1335202   +end;
MPRINT(EM_DIAGRAM):   end;
1335203   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1335204   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1335205    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1335206    quit;
1335207    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1335208    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1335209    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1335210    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1335211    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1335212    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.16 seconds
      cpu time            0.00 seconds
      

1335213    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1335214    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1335215    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1335216    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1335217    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1335218    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1335219    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1335220    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1335221    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1335222    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1335223    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1335224    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1335225    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1335226    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1335227    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1335228    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1335229    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1335230    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1335231    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1335232    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1335233    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1335233  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1335234    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1335235    proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
1335236    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL_FCMP has 283 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1335237    %macro varDept(fcmpdata=,id=);
1335238    %global nobs&id scoreFlag&id;
1335239    %let scoreFlag&id = 0;
1335240    %if &id=1 or ^&fcmpStart %then %do;
1335241    proc sort data=&fcmpdata out=_temp&id nodupkey;
1335242    by NAME;
1335243    where id=&id and LHS in( %let j=1;
1335244    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1335245    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1335246    "&var" %let j = %eval(&j+1);
1335247    %end;
1335248    );
1335249    run;
1335250    %let dsid = %sysfunc(open(_temp&id));
1335251    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1335252    %let dsid = %sysfunc(close(&dsid));
1335253    %if &&nobs&id %then %do;
1335254    %let scoreFlag&id = 1;
1335255    %let fcmpStart = 1;
1335256    %end;
1335257    %else %let fcmpStart = 0;
1335258    %end;
1335259    %else %do;
1335260    proc sort data=&fcmpdata out=_tempid;
1335261    where id=&id;
1335262    by LHS;
1335263    run;
1335264    %let dsid = %sysfunc(open(_tempid));
1335265    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1335266    %let dsid = %sysfunc(close(&dsid));
1335267    %if ^&&nobs&id %then %do;
1335268    proc datasets lib=work nolist;
1335269    delete _tempid;
1335270    run;
1335271    quit;
1335272    %end;
1335273    %else %do;
1335274    data _tempAll;
1335275    set %let j=%eval(&id-1);
1335276    %do x=1 %to &j;
1335277    %if &&nobs&x %then %do;
1335278    _temp&x %end;
1335279    %end;
1335280    ;
1335281    run;
1335282    proc sql;
1335283    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1335283  ! work._tempid p2 where p.name=p2.lhs;
1335284    quit;
1335285    data _temp&id;
1335286    set _temp&id;
1335287    where LHS ne '' and NAME ne '' and Node ne '';
1335288    run;
1335289    proc datasets lib=work nolist;
1335290    delete _tempAll;
1335291    run;
1335292    %let dsid = %sysfunc(open(_temp&id));
1335293    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1335294    %let dsid = %sysfunc(close(&dsid));
1335295    %if ^&&nobs&id %then %do;
1335296    proc datasets lib=work nolist;
1335297    delete _temp&id;
1335298    run;
1335299    quit;
1335300    %end;
1335301    %else %do;
1335302    %let scoreFlag&id = 1;
1335303    data _temp&id;
1335304    set _temp&id;
1335305    where LHS ne NAME and node ne '';
1335306    run;
1335307    %let dsid = %sysfunc(open(_temp&id));
1335308    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1335309    %let dsid = %sysfunc(close(&dsid));
1335310    %if ^&&nobs&id %then %do;
1335311    proc datasets lib=work nolist;
1335312    delete _temp&id;
1335313    run;
1335314    quit;
1335315    %end;
1335316    %else %do;
1335317    proc sort data=_temp&id nodupkey;
1335318    by LHS NAME;
1335319    run;
1335320    %end;
1335321    %end;
1335322    %end;
1335323    %end;
1335324    %mend varDept;
1335325    %macro optCode(outdata=fcmpdata);
1335326    %global fcmpStart;
1335327    %let fcmpStart = 0;
1335328    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1335329    %let NumNodes=9;
1335330    %do k=1 %to &NumNodes;
1335331    %vardept(fcmpdata=&outdata, id=&k);
1335332    %end;
1335333    %mend optCode;
1335334    %optcode(outData=EMWS8.Ensmbl_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 52 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 39 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 13 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 13 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 13 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 26 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 39 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1335335    filename _pref
1335335  ! "C:\\predictive-models-project\Workspaces\EMWS8\Reg\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Reg\EMPUBLISHSCORE.sas";
1335336    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1335337    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Reg\EMPUBLISHSCORE.sas.
1335338   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1335339   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1335340   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1335341   +
1335342   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1335343   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1335344   +
1335345   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1335346   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1335347   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1335348   +array REGDRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REGDRF [2] $12 _temporary_ ('1' '0' );
1335349   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1335350   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1335351   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1335352   +ARRAY REGDRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REGDRU[2] _TEMPORARY_ (1 0);
1335353   +
1335354   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1335355   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1335356   +
1335357   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1335358   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1335359   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1335360   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1335361   +end;
MPRINT(EM_DIAGRAM):   end;
1335362   +
1335363   +*** Check Age for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Age for missing values ;
1335364   +if missing( Age ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age ) then do;
1335365   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1335366   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1335367   +end;
MPRINT(EM_DIAGRAM):   end;
1335368   +
1335369   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1335370   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1335371   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1335372   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1335373   +end;
MPRINT(EM_DIAGRAM):   end;
1335374   +
1335375   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1335376   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1335377   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1335378   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1335379   +end;
MPRINT(EM_DIAGRAM):   end;
1335380   +
1335381   +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
1335382   +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
1335383   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1335384   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1335385   +end;
MPRINT(EM_DIAGRAM):   end;
1335386   +
1335387   +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
1335388   +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
1335389   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1335390   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1335391   +end;
MPRINT(EM_DIAGRAM):   end;
1335392   +
1335393   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1335394   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1335395   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1335396   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1335397   +end;
MPRINT(EM_DIAGRAM):   end;
1335398   +
1335399   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
1335400   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
1335401   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1335402   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1335403   +end;
MPRINT(EM_DIAGRAM):   end;
1335404   +
1335405   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1335406   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1335407   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1335408   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1335409   +end;
MPRINT(EM_DIAGRAM):   end;
1335410   +
1335411   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1335412   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1335413   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1335414   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1335415   +end;
MPRINT(EM_DIAGRAM):   end;
1335416   +
1335417   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1335418   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1335419   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1335420   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1335421   +end;
MPRINT(EM_DIAGRAM):   end;
1335422   +
1335423   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1335424   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1335425   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1335426   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1335427   +end;
MPRINT(EM_DIAGRAM):   end;
1335428   +
1335429   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1335430   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1335431   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1335432   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1335433   +end;
MPRINT(EM_DIAGRAM):   end;
1335434   +
1335435   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1335436   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
1335437   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1335438   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1335439   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1335440   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
1335441   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
1335442   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1335443   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1335444   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1335445   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1335446   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1335447   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1335448   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1335449   +end;
MPRINT(EM_DIAGRAM):   end;
1335450   +else do;
MPRINT(EM_DIAGRAM):   else do;
1335451   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1335452   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1335453   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1335454   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1335455   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1335456   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1335457   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1335458   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1335459   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1335460   +         end;
MPRINT(EM_DIAGRAM):   end;
1335461   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1335462   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1335463   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1335464   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1335465   +            end;
MPRINT(EM_DIAGRAM):   end;
1335466   +         end;
MPRINT(EM_DIAGRAM):   end;
1335467   +      end;
MPRINT(EM_DIAGRAM):   end;
1335468   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1335469   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1335470   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
1335471   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1335472   +         end;
MPRINT(EM_DIAGRAM):   end;
1335473   +      end;
MPRINT(EM_DIAGRAM):   end;
1335474   +   end;
MPRINT(EM_DIAGRAM):   end;
1335475   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1335476   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1335477   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
1335478   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1335479   +      end;
MPRINT(EM_DIAGRAM):   end;
1335480   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1335481   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1335482   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1335483   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1335484   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
1335485   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
1335486   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1335487   +         end;
MPRINT(EM_DIAGRAM):   end;
1335488   +      end;
MPRINT(EM_DIAGRAM):   end;
1335489   +   end;
MPRINT(EM_DIAGRAM):   end;
1335490   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1335491   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1335492   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1335493   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1335494   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1335495   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1335496   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1335497   +   end;
MPRINT(EM_DIAGRAM):   end;
1335498   +end;
MPRINT(EM_DIAGRAM):   end;
1335499   +
1335500   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1335501   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1335502   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1335503   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1335504   +   goto REGDR1;
MPRINT(EM_DIAGRAM):   goto REGDR1;
1335505   +end;
MPRINT(EM_DIAGRAM):   end;
1335506   +
1335507   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1335508   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1335509   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1335510   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1335511   +
1335512   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1335513   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1335514   +_LP0 = _LP0 + (    2.95660035656229 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.95660035656229 * _TEMP);
1335515   +
1335516   +***  Effect: Age ;
MPRINT(EM_DIAGRAM):   *** Effect: Age ;
1335517   +_TEMP = Age ;
MPRINT(EM_DIAGRAM):   _TEMP = Age ;
1335518   +_LP0 = _LP0 + (   -0.01941875166212 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.01941875166212 * _TEMP);
1335519   +
1335520   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1335521   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1335522   +_LP0 = _LP0 + (   -0.41047634158755 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.41047634158755 * _TEMP);
1335523   +
1335524   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1335525   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1335526   +_LP0 = _LP0 + (    0.00006532180674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00006532180674 * _TEMP);
1335527   +
1335528   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1335529   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1335530   +_LP0 = _LP0 + (    0.17791594529968) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.17791594529968) * _TEMP * _9_0;
1335531   +_LP0 = _LP0 + (   -1.00641962019516) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.00641962019516) * _TEMP * _9_1;
1335532   +_LP0 = _LP0 + (    0.74716428311041) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.74716428311041) * _TEMP * _9_2;
1335533   +_LP0 = _LP0 + (    -1.0069846290756) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.0069846290756) * _TEMP * _9_3;
1335534   +
1335535   +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
1335536   +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
1335537   +_LP0 = _LP0 + (   -0.00385241964842 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00385241964842 * _TEMP);
1335538   +
1335539   +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
1335540   +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
1335541   +_LP0 = _LP0 + (    0.00669490355232 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00669490355232 * _TEMP);
1335542   +
1335543   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1335544   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1335545   +_LP0 = _LP0 + (     0.0125330231858 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0125330231858 * _TEMP);
1335546   +
1335547   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
1335548   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
1335549   +_LP0 = _LP0 + (     1.1253806716991 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.1253806716991 * _TEMP);
1335550   +
1335551   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1335552   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1335553   +_LP0 = _LP0 + (    0.71729818686875 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.71729818686875 * _TEMP);
1335554   +
1335555   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1335556   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1335557   +_LP0 = _LP0 + (    0.99094794685674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.99094794685674 * _TEMP);
1335558   +
1335559   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1335560   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1335561   +_LP0 = _LP0 + (    0.00024460251782 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00024460251782 * _TEMP);
1335562   +
1335563   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1335564   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1335565   +_LP0 = _LP0 + (   -0.09585871705652 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.09585871705652 * _TEMP);
1335566   +
1335567   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1335568   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1335569   +_LP0 = _LP0 + (   -1.10694522398045 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.10694522398045 * _TEMP);
1335570   +
1335571   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1335572   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1335573   +_TEMP =    -7.58770818124898 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -7.58770818124898 + _LP0;
1335574   +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
1335575   +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
1335576   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
1335577   +end;
MPRINT(EM_DIAGRAM):   end;
1335578   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
1335579   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1335580   +
1335581   +REGDR1:
1335582   +
1335583   +
1335584   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   REGDR1: *** Posterior Probabilities and Predicted Level;
1335585   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1335586   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1335587   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1335588   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1335589   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1335590   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1335591   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1335592   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1335593   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1335594   +end;
MPRINT(EM_DIAGRAM):   end;
1335595   +I_DepVar = REGDRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REGDRF[_IY];
1335596   +U_DepVar = REGDRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REGDRU[_IY];
1335597   +
1335598   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1335599   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1335600   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1335601    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1335602    quit;
1335603    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1335604    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1335605    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1335606    retain ID 2 Node "Reg";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Reg";
1335607    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1335608    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 362 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 362 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1335609    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1335610    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1335611    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 362 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 362 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1335612    proc sort data=EMWS8.Reg_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Reg_variableset out=_temp2(keep=NAME CREATOR);
1335613    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1335614    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.REG_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1335615    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1335616    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1335617    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1335618    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1335619    proc contents data=EMWS8.Reg_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Reg_train out=_meta(keep=NAME) noprint;
1335620    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1335621    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1335622    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1335623    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1335624    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1335625    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1335626    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1335627    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1335628    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1335629    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1335629  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 202 rows and 5 columns.

1335630    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1335631    proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
1335632    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 202 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL_FCMP has 202 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1335633    filename _pref
1335633  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1335634    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1335635    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1335636   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1335637   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1335638   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1335639   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1335640   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1335641   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1335642    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1335643    quit;
1335644    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1335645    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1335646    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1335647    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1335648    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1335649    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1335650    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1335651    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1335652    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1335653    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1335654    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1335655    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1335656    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1335657    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1335658    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1335659    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1335660    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1335661    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1335662    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1335663    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1335664    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1335665    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1335666    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1335667    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1335668    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1335669    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1335670    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1335670  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1335671    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1335672    proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
1335673    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL_FCMP has 206 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1335674    filename _pref
1335674  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1335675    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1335676    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1335677   +
1335678   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1335679   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1335679  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1335680   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1335681   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1335682   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1335683   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1335684   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1335685    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1335686    quit;
1335687    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1335688    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1335689    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1335690    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1335691    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1335692    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1335693    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1335694    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1335695    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1335696    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1335697    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1335698    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1335699    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1335700    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1335701    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1335702    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1335703    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1335704    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1335705    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1335706    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1335707    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1335708    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1335709    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1335710    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1335711    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1335712    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1335713    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1335713  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1335714    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1335715    proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
1335716    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL_FCMP has 245 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1335717    filename _pref
1335717  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1335718    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1335719    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1335720   +
1335721   +
1335722   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1335723   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1335724   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1335725   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1335726   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1335727   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1335728   +
1335729   +
1335730   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1335731   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1335732   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1335733   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1335734   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1335735   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1335736   +
1335737   +
1335738   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1335739   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1335740   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1335741   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1335742   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1335743   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1335744   +
1335745   +
1335746   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1335747   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1335748   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1335749   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1335750   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1335751   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1335752   +
1335753   +
1335754   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1335755   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1335756   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1335757   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1335758   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1335759   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1335760   +
1335761   +
1335762   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1335763   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1335764   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1335765   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1335766   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1335767   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1335768   +
1335769   +
1335770   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1335771   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1335772   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1335773   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1335774   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1335775   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1335776   +
1335777   +
1335778   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1335779   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1335780   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1335781   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1335782   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1335783   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1335784   +if
1335785   +_FILTERNORM1 not in ( '.')
1335786   + and
1335787   +_FILTERNORM2 not in ( '.')
1335788   + and
1335789   +_FILTERNORM3 not in ( '.')
1335790   + and
1335791   +_FILTERNORM4 not in ( '.')
1335792   + and
1335793   +_FILTERNORM5 not in ( '.')
1335794   + and
1335795   +_FILTERNORM6 not in ( '.')
1335796   + and
1335797   +_FILTERNORM7 not in ( ' ')
1335798   + and
1335799   +_FILTERNORM8 not in ( ' ')
1335800   +and
1335801   +( Dt_Customer ne .)
1335802   +and ( Income ne . and (Income<=107000))
1335803   +and ( Kidhome ne .)
1335804   +and ( MntFishProducts ne .)
1335805   +and ( MntFruits ne .)
1335806   +and ( MntGoldProds ne .)
1335807   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1335808   +and ( MntSweetProducts ne .)
1335809   +and ( MntWines ne .)
1335810   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1335811   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1335812   +and ( NumStorePurchases ne .)
1335813   +and ( NumWebPurchases ne .)
1335814   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1335815   +and ( Recency ne .)
1335816   +and ( Teenhome ne .)
1335817   +and ( Year_Birth ne .)
1335818   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1335819   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1335820   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1335821   +end;
MPRINT(EM_DIAGRAM):   end;
1335822   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1335823   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1335824    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1335825    quit;
1335826    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1335827    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1335828    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1335829    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1335830    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1335831    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1335832    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1335833    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1335834    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1335835    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1335836    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1335837    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1335838    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1335839    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1335840    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1335841    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1335842    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1335843    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1335844    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1335845    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1335846    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1335847    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1335848    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1335849    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1335850    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1335851    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1335852    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1335852  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1335853    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1335854    proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
1335855    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL_FCMP has 311 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1335856    %macro varDept(fcmpdata=,id=);
1335857    %global nobs&id scoreFlag&id;
1335858    %let scoreFlag&id = 0;
1335859    %if &id=1 or ^&fcmpStart %then %do;
1335860    proc sort data=&fcmpdata out=_temp&id nodupkey;
1335861    by NAME;
1335862    where id=&id and LHS in( %let j=1;
1335863    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1335864    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1335865    "&var" %let j = %eval(&j+1);
1335866    %end;
1335867    );
1335868    run;
1335869    %let dsid = %sysfunc(open(_temp&id));
1335870    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1335871    %let dsid = %sysfunc(close(&dsid));
1335872    %if &&nobs&id %then %do;
1335873    %let scoreFlag&id = 1;
1335874    %let fcmpStart = 1;
1335875    %end;
1335876    %else %let fcmpStart = 0;
1335877    %end;
1335878    %else %do;
1335879    proc sort data=&fcmpdata out=_tempid;
1335880    where id=&id;
1335881    by LHS;
1335882    run;
1335883    %let dsid = %sysfunc(open(_tempid));
1335884    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1335885    %let dsid = %sysfunc(close(&dsid));
1335886    %if ^&&nobs&id %then %do;
1335887    proc datasets lib=work nolist;
1335888    delete _tempid;
1335889    run;
1335890    quit;
1335891    %end;
1335892    %else %do;
1335893    data _tempAll;
1335894    set %let j=%eval(&id-1);
1335895    %do x=1 %to &j;
1335896    %if &&nobs&x %then %do;
1335897    _temp&x %end;
1335898    %end;
1335899    ;
1335900    run;
1335901    proc sql;
1335902    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1335902  ! work._tempid p2 where p.name=p2.lhs;
1335903    quit;
1335904    data _temp&id;
1335905    set _temp&id;
1335906    where LHS ne '' and NAME ne '' and Node ne '';
1335907    run;
1335908    proc datasets lib=work nolist;
1335909    delete _tempAll;
1335910    run;
1335911    %let dsid = %sysfunc(open(_temp&id));
1335912    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1335913    %let dsid = %sysfunc(close(&dsid));
1335914    %if ^&&nobs&id %then %do;
1335915    proc datasets lib=work nolist;
1335916    delete _temp&id;
1335917    run;
1335918    quit;
1335919    %end;
1335920    %else %do;
1335921    %let scoreFlag&id = 1;
1335922    data _temp&id;
1335923    set _temp&id;
1335924    where LHS ne NAME and node ne '';
1335925    run;
1335926    %let dsid = %sysfunc(open(_temp&id));
1335927    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1335928    %let dsid = %sysfunc(close(&dsid));
1335929    %if ^&&nobs&id %then %do;
1335930    proc datasets lib=work nolist;
1335931    delete _temp&id;
1335932    run;
1335933    quit;
1335934    %end;
1335935    %else %do;
1335936    proc sort data=_temp&id nodupkey;
1335937    by LHS NAME;
1335938    run;
1335939    %end;
1335940    %end;
1335941    %end;
1335942    %end;
1335943    %mend varDept;
1335944    %macro optCode(outdata=fcmpdata);
1335945    %global fcmpStart;
1335946    %let fcmpStart = 0;
1335947    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1335948    %let NumNodes=9;
1335949    %do k=1 %to &NumNodes;
1335950    %vardept(fcmpdata=&outdata, id=&k);
1335951    %end;
1335952    %mend optCode;
1335953    %optcode(outData=EMWS8.Ensmbl_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 56 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 42 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 14 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 14 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 14 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 27 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 27 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 27 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 27 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: There were 27 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 41 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1335954    filename _pref
1335954  ! "C:\\predictive-models-project\Workspaces\EMWS8\Tree\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Tree\EMPUBLISHSCORE.sas";
1335955    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1335956    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Tree\EMPUBLISHSCORE.sas.
1335957   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1335958   +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
1335959   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1335960   +
1335961   +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
1335962   +LENGTH I_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH I_DepVar $ 12;
1335963   +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
1335964   +
1335965   +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
1335966   +LABEL _NODE_  = 'Node' ;
MPRINT(EM_DIAGRAM):   LABEL _NODE_ = 'Node' ;
1335967   +LABEL _LEAF_  = 'Leaf' ;
MPRINT(EM_DIAGRAM):   LABEL _LEAF_ = 'Leaf' ;
1335968   +LABEL P_DepVar0  = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar0 = 'Predicted: DepVar=0' ;
1335969   +LABEL P_DepVar1  = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar1 = 'Predicted: DepVar=1' ;
1335970   +LABEL Q_DepVar0  = 'Unadjusted P: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
1335971   +LABEL Q_DepVar1  = 'Unadjusted P: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
1335972   +LABEL V_DepVar0  = 'Validated: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar0 = 'Validated: DepVar=0' ;
1335973   +LABEL V_DepVar1  = 'Validated: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar1 = 'Validated: DepVar=1' ;
1335974   +LABEL I_DepVar  = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL I_DepVar = 'Into: DepVar' ;
1335975   +LABEL U_DepVar  = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL U_DepVar = 'Unnormalized Into: DepVar' ;
1335976   +LABEL _WARN_  = 'Warnings' ;
MPRINT(EM_DIAGRAM):   LABEL _WARN_ = 'Warnings' ;
1335977   +
1335978   +
1335979   +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
1335980   +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
1335981   +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
1335982   +LENGTH _ARBFMT_8 $      8; DROP _ARBFMT_8;
MPRINT(EM_DIAGRAM):   /* Initialize to avoid warning. */ LENGTH _ARBFMT_8 $ 8;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_8;
1335983   +_ARBFMT_8 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_8 = ' ';
1335984   +
1335985   +
1335986   +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(EM_DIAGRAM):   /* Initialize to avoid warning. */ ****** ASSIGN OBSERVATION TO NODE 
******;
1335987   +IF  NOT MISSING(AcceptedCmpTotal ) AND
1335988   +                   0.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 0.5 <= AcceptedCmpTotal THEN DO;
1335989   +  IF  NOT MISSING(Recency ) AND
1335990   +    Recency  <                 38.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Recency ) AND Recency < 38.5 THEN DO;
1335991   +    IF  NOT MISSING(AcceptedCmpTotal ) AND
1335992   +                       1.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 1.5 <= AcceptedCmpTotal THEN DO;
1335993   +      _NODE_  =                   13;
MPRINT(EM_DIAGRAM):   _NODE_ = 13;
1335994   +      _LEAF_  =                   14;
MPRINT(EM_DIAGRAM):   _LEAF_ = 14;
1335995   +      P_DepVar0  =     0.05263157894736;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.05263157894736;
1335996   +      P_DepVar1  =     0.94736842105263;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.94736842105263;
1335997   +      Q_DepVar0  =     0.05263157894736;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.05263157894736;
1335998   +      Q_DepVar1  =     0.94736842105263;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.94736842105263;
1335999   +      V_DepVar0  =                    0;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0;
1336000   +      V_DepVar1  =                    1;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 1;
1336001   +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1336002   +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1336003   +      END;
MPRINT(EM_DIAGRAM):   END;
1336004   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1336005   +      _ARBFMT_8 = PUT( Marital_Status , $8.);
MPRINT(EM_DIAGRAM):   _ARBFMT_8 = PUT( Marital_Status , $8.);
1336006   +       %DMNORMIP( _ARBFMT_8);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1336007   +      IF _ARBFMT_8 IN ('WIDOW' ,'DIVORCED' ,'SINGLE' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_8 IN ('WIDOW' ,'DIVORCED' ,'SINGLE' ) THEN DO;
1336008   +        _NODE_  =                   23;
MPRINT(EM_DIAGRAM):   _NODE_ = 23;
1336009   +        _LEAF_  =                   13;
MPRINT(EM_DIAGRAM):   _LEAF_ = 13;
1336010   +        P_DepVar0  =      0.2258064516129;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.2258064516129;
1336011   +        P_DepVar1  =     0.77419354838709;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.77419354838709;
1336012   +        Q_DepVar0  =      0.2258064516129;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.2258064516129;
1336013   +        Q_DepVar1  =     0.77419354838709;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.77419354838709;
1336014   +        V_DepVar0  =     0.41935483870967;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.41935483870967;
1336015   +        V_DepVar1  =     0.58064516129032;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.58064516129032;
1336016   +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1336017   +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1336018   +        END;
MPRINT(EM_DIAGRAM):   END;
1336019   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1336020   +        IF  NOT MISSING(NumStorePurchases ) AND
1336021   +          NumStorePurchases  <                  6.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumStorePurchases ) AND NumStorePurchases < 6.5 THEN DO;
1336022   +          IF  NOT MISSING(NumWebVisitsMonth ) AND
1336023   +            NumWebVisitsMonth  <                  5.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumWebVisitsMonth ) AND NumWebVisitsMonth < 5.5 THEN DO;
1336024   +            _NODE_  =                   56;
MPRINT(EM_DIAGRAM):   _NODE_ = 56;
1336025   +            _LEAF_  =                   10;
MPRINT(EM_DIAGRAM):   _LEAF_ = 10;
1336026   +            P_DepVar0  =     0.61111111111111;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.61111111111111;
1336027   +            P_DepVar1  =     0.38888888888888;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.38888888888888;
1336028   +            Q_DepVar0  =     0.61111111111111;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.61111111111111;
1336029   +            Q_DepVar1  =     0.38888888888888;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.38888888888888;
1336030   +            V_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.66666666666666;
1336031   +            V_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.33333333333333;
1336032   +            I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1336033   +            U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1336034   +            END;
MPRINT(EM_DIAGRAM):   END;
1336035   +          ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1336036   +            _NODE_  =                   57;
MPRINT(EM_DIAGRAM):   _NODE_ = 57;
1336037   +            _LEAF_  =                   11;
MPRINT(EM_DIAGRAM):   _LEAF_ = 11;
1336038   +            P_DepVar0  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.14285714285714;
1336039   +            P_DepVar1  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.85714285714285;
1336040   +            Q_DepVar0  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.14285714285714;
1336041   +            Q_DepVar1  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.85714285714285;
1336042   +            V_DepVar0  =      0.3076923076923;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.3076923076923;
1336043   +            V_DepVar1  =     0.69230769230769;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.69230769230769;
1336044   +            I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1336045   +            U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1336046   +            END;
MPRINT(EM_DIAGRAM):   END;
1336047   +          END;
MPRINT(EM_DIAGRAM):   END;
1336048   +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1336049   +          _NODE_  =                   41;
MPRINT(EM_DIAGRAM):   _NODE_ = 41;
1336050   +          _LEAF_  =                   12;
MPRINT(EM_DIAGRAM):   _LEAF_ = 12;
1336051   +          P_DepVar0  =     0.74545454545454;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.74545454545454;
1336052   +          P_DepVar1  =     0.25454545454545;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.25454545454545;
1336053   +          Q_DepVar0  =     0.74545454545454;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.74545454545454;
1336054   +          Q_DepVar1  =     0.25454545454545;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.25454545454545;
1336055   +          V_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.66666666666666;
1336056   +          V_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.33333333333333;
1336057   +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1336058   +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1336059   +          END;
MPRINT(EM_DIAGRAM):   END;
1336060   +        END;
MPRINT(EM_DIAGRAM):   END;
1336061   +      END;
MPRINT(EM_DIAGRAM):   END;
1336062   +    END;
MPRINT(EM_DIAGRAM):   END;
1336063   +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1336064   +    IF  NOT MISSING(AcceptedCmpTotal ) AND
1336065   +                       2.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 2.5 <= AcceptedCmpTotal THEN DO;
1336066   +      _NODE_  =                   15;
MPRINT(EM_DIAGRAM):   _NODE_ = 15;
1336067   +      _LEAF_  =                   16;
MPRINT(EM_DIAGRAM):   _LEAF_ = 16;
1336068   +      P_DepVar0  =      0.3103448275862;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.3103448275862;
1336069   +      P_DepVar1  =     0.68965517241379;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.68965517241379;
1336070   +      Q_DepVar0  =      0.3103448275862;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.3103448275862;
1336071   +      Q_DepVar1  =     0.68965517241379;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.68965517241379;
1336072   +      V_DepVar0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.33333333333333;
1336073   +      V_DepVar1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.66666666666666;
1336074   +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1336075   +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1336076   +      END;
MPRINT(EM_DIAGRAM):   END;
1336077   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1336078   +      _NODE_  =                   14;
MPRINT(EM_DIAGRAM):   _NODE_ = 14;
1336079   +      _LEAF_  =                   15;
MPRINT(EM_DIAGRAM):   _LEAF_ = 15;
1336080   +      P_DepVar0  =     0.82562277580071;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.82562277580071;
1336081   +      P_DepVar1  =     0.17437722419928;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.17437722419928;
1336082   +      Q_DepVar0  =     0.82562277580071;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.82562277580071;
1336083   +      Q_DepVar1  =     0.17437722419928;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.17437722419928;
1336084   +      V_DepVar0  =     0.81818181818181;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.81818181818181;
1336085   +      V_DepVar1  =     0.18181818181818;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.18181818181818;
1336086   +      I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1336087   +      U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1336088   +      END;
MPRINT(EM_DIAGRAM):   END;
1336089   +    END;
MPRINT(EM_DIAGRAM):   END;
1336090   +  END;
MPRINT(EM_DIAGRAM):   END;
1336091   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1336092   +  IF  NOT MISSING(Recency ) AND
1336093   +    Recency  <                 32.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Recency ) AND Recency < 32.5 THEN DO;
1336094   +    IF  NOT MISSING(NumCatalogPurchases ) AND
1336095   +                       5.5 <= NumCatalogPurchases  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumCatalogPurchases ) AND 5.5 <= NumCatalogPurchases THEN 
DO;
1336096   +      IF  NOT MISSING(NumStorePurchases ) AND
1336097   +                         7.5 <= NumStorePurchases  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumStorePurchases ) AND 7.5 <= NumStorePurchases THEN DO;
1336098   +        IF  NOT MISSING(RFMstat ) AND
1336099   +              1964.32692307692 <= RFMstat  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RFMstat ) AND 1964.32692307692 <= RFMstat THEN DO;
1336100   +          _NODE_  =                   37;
MPRINT(EM_DIAGRAM):   _NODE_ = 37;
1336101   +          _LEAF_  =                    8;
MPRINT(EM_DIAGRAM):   _LEAF_ = 8;
1336102   +          P_DepVar0  =     0.42857142857142;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.42857142857142;
1336103   +          P_DepVar1  =     0.57142857142857;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.57142857142857;
1336104   +          Q_DepVar0  =     0.42857142857142;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.42857142857142;
1336105   +          Q_DepVar1  =     0.57142857142857;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.57142857142857;
1336106   +          V_DepVar0  =     0.44444444444444;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.44444444444444;
1336107   +          V_DepVar1  =     0.55555555555555;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.55555555555555;
1336108   +          I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1336109   +          U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1336110   +          END;
MPRINT(EM_DIAGRAM):   END;
1336111   +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1336112   +          _NODE_  =                   36;
MPRINT(EM_DIAGRAM):   _NODE_ = 36;
1336113   +          _LEAF_  =                    7;
MPRINT(EM_DIAGRAM):   _LEAF_ = 7;
1336114   +          P_DepVar0  =                    1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 1;
1336115   +          P_DepVar1  =                    0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0;
1336116   +          Q_DepVar0  =                    1;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 1;
1336117   +          Q_DepVar1  =                    0;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0;
1336118   +          V_DepVar0  =     0.69230769230769;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.69230769230769;
1336119   +          V_DepVar1  =      0.3076923076923;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.3076923076923;
1336120   +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1336121   +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1336122   +          END;
MPRINT(EM_DIAGRAM):   END;
1336123   +        END;
MPRINT(EM_DIAGRAM):   END;
1336124   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1336125   +        IF  NOT MISSING(MntFishProducts ) AND
1336126   +          MntFishProducts  <                   26 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntFishProducts ) AND MntFishProducts < 26 THEN DO;
1336127   +          _NODE_  =                   34;
MPRINT(EM_DIAGRAM):   _NODE_ = 34;
1336128   +          _LEAF_  =                    5;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
1336129   +          P_DepVar0  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.71428571428571;
1336130   +          P_DepVar1  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.28571428571428;
1336131   +          Q_DepVar0  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.71428571428571;
1336132   +          Q_DepVar1  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.28571428571428;
1336133   +          V_DepVar0  =                  0.8;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.8;
1336134   +          V_DepVar1  =                  0.2;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.2;
1336135   +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1336136   +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1336137   +          END;
MPRINT(EM_DIAGRAM):   END;
1336138   +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1336139   +          _NODE_  =                   35;
MPRINT(EM_DIAGRAM):   _NODE_ = 35;
1336140   +          _LEAF_  =                    6;
MPRINT(EM_DIAGRAM):   _LEAF_ = 6;
1336141   +          P_DepVar0  =     0.13793103448275;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.13793103448275;
1336142   +          P_DepVar1  =     0.86206896551724;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.86206896551724;
1336143   +          Q_DepVar0  =     0.13793103448275;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.13793103448275;
1336144   +          Q_DepVar1  =     0.86206896551724;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.86206896551724;
1336145   +          V_DepVar0  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.14285714285714;
1336146   +          V_DepVar1  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.85714285714285;
1336147   +          I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1336148   +          U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1336149   +          END;
MPRINT(EM_DIAGRAM):   END;
1336150   +        END;
MPRINT(EM_DIAGRAM):   END;
1336151   +      END;
MPRINT(EM_DIAGRAM):   END;
1336152   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1336153   +      IF  NOT MISSING(NumWebVisitsMonth ) AND
1336154   +                         7.5 <= NumWebVisitsMonth  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumWebVisitsMonth ) AND 7.5 <= NumWebVisitsMonth THEN DO;
1336155   +        IF  NOT MISSING(NumCatalogPurchases ) AND
1336156   +                           0.5 <= NumCatalogPurchases  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumCatalogPurchases ) AND 0.5 <= NumCatalogPurchases THEN 
DO;
1336157   +          IF  NOT MISSING(Kidhome ) AND
1336158   +            Kidhome  <                  0.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Kidhome ) AND Kidhome < 0.5 THEN DO;
1336159   +            _NODE_  =                   52;
MPRINT(EM_DIAGRAM):   _NODE_ = 52;
1336160   +            _LEAF_  =                    3;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
1336161   +            P_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.66666666666666;
1336162   +            P_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.33333333333333;
1336163   +            Q_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.66666666666666;
1336164   +            Q_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.33333333333333;
1336165   +            V_DepVar0  =                  0.6;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.6;
1336166   +            V_DepVar1  =                  0.4;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.4;
1336167   +            I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1336168   +            U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1336169   +            END;
MPRINT(EM_DIAGRAM):   END;
1336170   +          ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1336171   +            _NODE_  =                   53;
MPRINT(EM_DIAGRAM):   _NODE_ = 53;
1336172   +            _LEAF_  =                    4;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
1336173   +            P_DepVar0  =     0.26470588235294;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.26470588235294;
1336174   +            P_DepVar1  =     0.73529411764705;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.73529411764705;
1336175   +            Q_DepVar0  =     0.26470588235294;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.26470588235294;
1336176   +            Q_DepVar1  =     0.73529411764705;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.73529411764705;
1336177   +            V_DepVar0  =     0.21428571428571;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.21428571428571;
1336178   +            V_DepVar1  =     0.78571428571428;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.78571428571428;
1336179   +            I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1336180   +            U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1336181   +            END;
MPRINT(EM_DIAGRAM):   END;
1336182   +          END;
MPRINT(EM_DIAGRAM):   END;
1336183   +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1336184   +          _NODE_  =                   32;
MPRINT(EM_DIAGRAM):   _NODE_ = 32;
1336185   +          _LEAF_  =                    2;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
1336186   +          P_DepVar0  =     0.81428571428571;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.81428571428571;
1336187   +          P_DepVar1  =     0.18571428571428;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.18571428571428;
1336188   +          Q_DepVar0  =     0.81428571428571;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.81428571428571;
1336189   +          Q_DepVar1  =     0.18571428571428;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.18571428571428;
1336190   +          V_DepVar0  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.71428571428571;
1336191   +          V_DepVar1  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.28571428571428;
1336192   +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1336193   +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1336194   +          END;
MPRINT(EM_DIAGRAM):   END;
1336195   +        END;
MPRINT(EM_DIAGRAM):   END;
1336196   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1336197   +        _NODE_  =                   16;
MPRINT(EM_DIAGRAM):   _NODE_ = 16;
1336198   +        _LEAF_  =                    1;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
1336199   +        P_DepVar0  =     0.90114942528735;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.90114942528735;
1336200   +        P_DepVar1  =     0.09885057471264;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.09885057471264;
1336201   +        Q_DepVar0  =     0.90114942528735;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.90114942528735;
1336202   +        Q_DepVar1  =     0.09885057471264;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.09885057471264;
1336203   +        V_DepVar0  =      0.8848167539267;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.8848167539267;
1336204   +        V_DepVar1  =     0.11518324607329;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.11518324607329;
1336205   +        I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1336206   +        U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1336207   +        END;
MPRINT(EM_DIAGRAM):   END;
1336208   +      END;
MPRINT(EM_DIAGRAM):   END;
1336209   +    END;
MPRINT(EM_DIAGRAM):   END;
1336210   +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1336211   +    _NODE_  =                    5;
MPRINT(EM_DIAGRAM):   _NODE_ = 5;
1336212   +    _LEAF_  =                    9;
MPRINT(EM_DIAGRAM):   _LEAF_ = 9;
1336213   +    P_DepVar0  =     0.98042414355628;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.98042414355628;
1336214   +    P_DepVar1  =     0.01957585644371;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.01957585644371;
1336215   +    Q_DepVar0  =     0.98042414355628;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.98042414355628;
1336216   +    Q_DepVar1  =     0.01957585644371;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.01957585644371;
1336217   +    V_DepVar0  =     0.98795180722891;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.98795180722891;
1336218   +    V_DepVar1  =     0.01204819277108;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.01204819277108;
1336219   +    I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1336220   +    U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1336221   +    END;
MPRINT(EM_DIAGRAM):   END;
1336222   +  END;
MPRINT(EM_DIAGRAM):   END;
1336223   +
1336224   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1336225   +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
1336226   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1336227   +drop _LEAF_;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1336228    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1336229    quit;
1336230    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1336231    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1336232    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1336233    retain ID 2 Node "Tree";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Tree";
1336234    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1336235    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 103 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 103 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1336236    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1336237    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1336238    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 103 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 103 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1336239    proc sort data=EMWS8.Tree_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Tree_variableset out=_temp2(keep=NAME CREATOR);
1336240    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1336241    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.TREE_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1336242    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1336243    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1336244    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1336245    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1336246    proc contents data=EMWS8.Tree_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Tree_train out=_meta(keep=NAME) noprint;
1336247    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 58 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1336248    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1336249    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1336250    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 58 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 58 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1336251    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1336252    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1336253    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1336254    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 58 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 58 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1336255    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1336256    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1336256  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 93 rows and 5 columns.

1336257    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1336258    proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
1336259    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 93 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL_FCMP has 93 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1336260    filename _pref
1336260  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1336261    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1336262    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1336263   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1336264   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1336265   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1336266   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1336267   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1336268   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1336269    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1336270    quit;
1336271    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1336272    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1336273    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1336274    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1336275    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1336276    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1336277    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1336278    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1336279    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1336280    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1336281    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1336282    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1336283    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1336284    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1336285    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1336286    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1336287    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1336288    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1336289    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1336290    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1336291    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1336292    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1336293    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1336294    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1336295    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1336296    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1336297    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1336297  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1336298    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1336299    proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
1336300    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL_FCMP has 97 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1336301    filename _pref
1336301  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1336302    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1336303    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1336304   +
1336305   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1336306   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1336306  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1336307   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1336308   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1336309   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1336310   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1336311   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1336312    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1336313    quit;
1336314    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1336315    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1336316    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1336317    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1336318    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1336319    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1336320    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1336321    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1336322    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1336323    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1336324    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1336325    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1336326    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1336327    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1336328    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1336329    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1336330    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1336331    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1336332    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1336333    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1336334    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1336335    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1336336    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1336337    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1336338    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1336339    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1336340    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1336340  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1336341    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1336342    proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
1336343    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL_FCMP has 136 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1336344    filename _pref
1336344  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1336345    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1336346    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1336347   +
1336348   +
1336349   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1336350   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1336351   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1336352   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1336353   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1336354   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1336355   +
1336356   +
1336357   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1336358   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1336359   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1336360   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1336361   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1336362   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1336363   +
1336364   +
1336365   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1336366   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1336367   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1336368   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1336369   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1336370   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1336371   +
1336372   +
1336373   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1336374   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1336375   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1336376   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1336377   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1336378   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1336379   +
1336380   +
1336381   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1336382   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1336383   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1336384   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1336385   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1336386   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1336387   +
1336388   +
1336389   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1336390   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1336391   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1336392   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1336393   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1336394   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1336395   +
1336396   +
1336397   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1336398   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1336399   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1336400   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1336401   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1336402   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1336403   +
1336404   +
1336405   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1336406   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1336407   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1336408   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1336409   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1336410   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1336411   +if
1336412   +_FILTERNORM1 not in ( '.')
1336413   + and
1336414   +_FILTERNORM2 not in ( '.')
1336415   + and
1336416   +_FILTERNORM3 not in ( '.')
1336417   + and
1336418   +_FILTERNORM4 not in ( '.')
1336419   + and
1336420   +_FILTERNORM5 not in ( '.')
1336421   + and
1336422   +_FILTERNORM6 not in ( '.')
1336423   + and
1336424   +_FILTERNORM7 not in ( ' ')
1336425   + and
1336426   +_FILTERNORM8 not in ( ' ')
1336427   +and
1336428   +( Dt_Customer ne .)
1336429   +and ( Income ne . and (Income<=107000))
1336430   +and ( Kidhome ne .)
1336431   +and ( MntFishProducts ne .)
1336432   +and ( MntFruits ne .)
1336433   +and ( MntGoldProds ne .)
1336434   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1336435   +and ( MntSweetProducts ne .)
1336436   +and ( MntWines ne .)
1336437   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1336438   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1336439   +and ( NumStorePurchases ne .)
1336440   +and ( NumWebPurchases ne .)
1336441   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1336442   +and ( Recency ne .)
1336443   +and ( Teenhome ne .)
1336444   +and ( Year_Birth ne .)
1336445   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1336446   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1336447   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1336448   +end;
MPRINT(EM_DIAGRAM):   end;
1336449   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1336450   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1336451    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1336452    quit;
1336453    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1336454    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1336455    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1336456    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1336457    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1336458    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1336459    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1336460    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1336461    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1336462    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1336463    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1336464    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1336465    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1336466    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1336467    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1336468    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1336469    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1336470    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1336471    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1336472    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1336473    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1336474    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1336475    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1336476    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1336477    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1336478    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1336479    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1336479  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1336480    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1336481    proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
1336482    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL_FCMP has 202 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1336483    %macro varDept(fcmpdata=,id=);
1336484    %global nobs&id scoreFlag&id;
1336485    %let scoreFlag&id = 0;
1336486    %if &id=1 or ^&fcmpStart %then %do;
1336487    proc sort data=&fcmpdata out=_temp&id nodupkey;
1336488    by NAME;
1336489    where id=&id and LHS in( %let j=1;
1336490    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1336491    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1336492    "&var" %let j = %eval(&j+1);
1336493    %end;
1336494    );
1336495    run;
1336496    %let dsid = %sysfunc(open(_temp&id));
1336497    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1336498    %let dsid = %sysfunc(close(&dsid));
1336499    %if &&nobs&id %then %do;
1336500    %let scoreFlag&id = 1;
1336501    %let fcmpStart = 1;
1336502    %end;
1336503    %else %let fcmpStart = 0;
1336504    %end;
1336505    %else %do;
1336506    proc sort data=&fcmpdata out=_tempid;
1336507    where id=&id;
1336508    by LHS;
1336509    run;
1336510    %let dsid = %sysfunc(open(_tempid));
1336511    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1336512    %let dsid = %sysfunc(close(&dsid));
1336513    %if ^&&nobs&id %then %do;
1336514    proc datasets lib=work nolist;
1336515    delete _tempid;
1336516    run;
1336517    quit;
1336518    %end;
1336519    %else %do;
1336520    data _tempAll;
1336521    set %let j=%eval(&id-1);
1336522    %do x=1 %to &j;
1336523    %if &&nobs&x %then %do;
1336524    _temp&x %end;
1336525    %end;
1336526    ;
1336527    run;
1336528    proc sql;
1336529    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1336529  ! work._tempid p2 where p.name=p2.lhs;
1336530    quit;
1336531    data _temp&id;
1336532    set _temp&id;
1336533    where LHS ne '' and NAME ne '' and Node ne '';
1336534    run;
1336535    proc datasets lib=work nolist;
1336536    delete _tempAll;
1336537    run;
1336538    %let dsid = %sysfunc(open(_temp&id));
1336539    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1336540    %let dsid = %sysfunc(close(&dsid));
1336541    %if ^&&nobs&id %then %do;
1336542    proc datasets lib=work nolist;
1336543    delete _temp&id;
1336544    run;
1336545    quit;
1336546    %end;
1336547    %else %do;
1336548    %let scoreFlag&id = 1;
1336549    data _temp&id;
1336550    set _temp&id;
1336551    where LHS ne NAME and node ne '';
1336552    run;
1336553    %let dsid = %sysfunc(open(_temp&id));
1336554    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1336555    %let dsid = %sysfunc(close(&dsid));
1336556    %if ^&&nobs&id %then %do;
1336557    proc datasets lib=work nolist;
1336558    delete _temp&id;
1336559    run;
1336560    quit;
1336561    %end;
1336562    %else %do;
1336563    proc sort data=_temp&id nodupkey;
1336564    by LHS NAME;
1336565    run;
1336566    %end;
1336567    %end;
1336568    %end;
1336569    %end;
1336570    %mend varDept;
1336571    %macro optCode(outdata=fcmpdata);
1336572    %global fcmpStart;
1336573    %let fcmpStart = 0;
1336574    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1336575    %let NumNodes=9;
1336576    %do k=1 %to &NumNodes;
1336577    %vardept(fcmpdata=&outdata, id=&k);
1336578    %end;
1336579    %mend optCode;
1336580    %optcode(outData=EMWS8.Ensmbl_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 18 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 9 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 9 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 9 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 9 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 9 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 17 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 17 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 17 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 17 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 17 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 17 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 17 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 9 observations read from the data set WORK._TEMP2.
NOTE: There were 17 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 26 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1336581    filename _pref
1336581  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural4\EMPUBLISHSCORE.sas";
1336582    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1336583    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural4\EMPUBLISHSCORE.sas.
1336584   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1336585   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1336586   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1336587   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1336588   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1336589   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1336590   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1336591   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1336592   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1336593   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1336594   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1336595   +LENGTH _WARN_ $4
1336596   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1336597   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1336598   +
1336599   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1336600   +
1336601   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1336602   +
1336603   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1336604   +
1336605   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1336606   +
1336607   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1336608   +
1336609   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1336610   +
1336611   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1336612   +
1336613   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1336614   +
1336615   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1336616   +
1336617   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1336618   +
1336619   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1336620   +
1336621   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1336622   +
1336623   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1336624   +
1336625   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1336626   +
1336627   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1336628   +
1336629   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1336630   +
1336631   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1336632   +
1336633   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1336634   +
1336635   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1336636   +
1336637   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1336638   +
1336639   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1336640   +
1336641   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1336642   +
1336643   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1336644   +
1336645   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1336646   +
1336647   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1336648   +
1336649   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1336650   +
1336651   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1336652   +
1336653   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1336654   +
1336655   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1336656   +
1336657   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1336658   +
1336659   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1336660   +
1336661   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1336662   +
1336663   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1336664   +
1336665   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1336666   +
1336667   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1336668   +
1336669   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1336670   +
1336671   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1336672   +
1336673   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1336674   +
1336675   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1336676   +
1336677   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1336678   +
1336679   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1336680   +
1336681   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1336682   +
1336683   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1336684   +
1336685   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1336686   +
1336687   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1336688   +
1336689   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1336690   +
1336691   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1336692   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1336693   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1336694   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1336695   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1336696   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1336697   +end;
MPRINT(EM_DIAGRAM):   end;
1336698   +else do;
MPRINT(EM_DIAGRAM):   else do;
1336699   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1336700   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1336701   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1336702   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1336703   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1336704   +   end;
MPRINT(EM_DIAGRAM):   end;
1336705   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1336706   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1336707   +   end;
MPRINT(EM_DIAGRAM):   end;
1336708   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1336709   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1336710   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1336711   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1336712   +   end;
MPRINT(EM_DIAGRAM):   end;
1336713   +end;
MPRINT(EM_DIAGRAM):   end;
1336714   +
1336715   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1336716   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1336717   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1336718   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1336719   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1336720   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1336721   +end;
MPRINT(EM_DIAGRAM):   end;
1336722   +else do;
MPRINT(EM_DIAGRAM):   else do;
1336723   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1336724   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1336725   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1336726   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1336727   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1336728   +   end;
MPRINT(EM_DIAGRAM):   end;
1336729   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1336730   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1336731   +   end;
MPRINT(EM_DIAGRAM):   end;
1336732   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1336733   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1336734   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1336735   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1336736   +   end;
MPRINT(EM_DIAGRAM):   end;
1336737   +end;
MPRINT(EM_DIAGRAM):   end;
1336738   +
1336739   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1336740   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1336741   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1336742   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1336743   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1336744   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1336745   +end;
MPRINT(EM_DIAGRAM):   end;
1336746   +else do;
MPRINT(EM_DIAGRAM):   else do;
1336747   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1336748   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1336749   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1336750   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1336751   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1336752   +   end;
MPRINT(EM_DIAGRAM):   end;
1336753   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1336754   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1336755   +   end;
MPRINT(EM_DIAGRAM):   end;
1336756   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1336757   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1336758   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1336759   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1336760   +   end;
MPRINT(EM_DIAGRAM):   end;
1336761   +end;
MPRINT(EM_DIAGRAM):   end;
1336762   +
1336763   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1336764   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1336765   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1336766   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1336767   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1336768   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1336769   +end;
MPRINT(EM_DIAGRAM):   end;
1336770   +else do;
MPRINT(EM_DIAGRAM):   else do;
1336771   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1336772   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1336773   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1336774   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1336775   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1336776   +   end;
MPRINT(EM_DIAGRAM):   end;
1336777   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1336778   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1336779   +   end;
MPRINT(EM_DIAGRAM):   end;
1336780   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1336781   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1336782   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1336783   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1336784   +   end;
MPRINT(EM_DIAGRAM):   end;
1336785   +end;
MPRINT(EM_DIAGRAM):   end;
1336786   +
1336787   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1336788   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1336789   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1336790   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1336791   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1336792   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1336793   +end;
MPRINT(EM_DIAGRAM):   end;
1336794   +else do;
MPRINT(EM_DIAGRAM):   else do;
1336795   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1336796   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1336797   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1336798   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1336799   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1336800   +   end;
MPRINT(EM_DIAGRAM):   end;
1336801   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1336802   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1336803   +   end;
MPRINT(EM_DIAGRAM):   end;
1336804   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1336805   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1336806   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1336807   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1336808   +   end;
MPRINT(EM_DIAGRAM):   end;
1336809   +end;
MPRINT(EM_DIAGRAM):   end;
1336810   +
1336811   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1336812   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1336813   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1336814   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1336815   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1336816   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1336817   +end;
MPRINT(EM_DIAGRAM):   end;
1336818   +else do;
MPRINT(EM_DIAGRAM):   else do;
1336819   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1336820   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1336821   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1336822   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1336823   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1336824   +   end;
MPRINT(EM_DIAGRAM):   end;
1336825   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1336826   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1336827   +   end;
MPRINT(EM_DIAGRAM):   end;
1336828   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1336829   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1336830   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1336831   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1336832   +   end;
MPRINT(EM_DIAGRAM):   end;
1336833   +end;
MPRINT(EM_DIAGRAM):   end;
1336834   +
1336835   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1336836   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1336837   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1336838   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1336839   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1336840   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1336841   +end;
MPRINT(EM_DIAGRAM):   end;
1336842   +else do;
MPRINT(EM_DIAGRAM):   else do;
1336843   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1336844   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1336845   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1336846   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1336847   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1336848   +   end;
MPRINT(EM_DIAGRAM):   end;
1336849   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1336850   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1336851   +   end;
MPRINT(EM_DIAGRAM):   end;
1336852   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1336853   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1336854   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1336855   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1336856   +   end;
MPRINT(EM_DIAGRAM):   end;
1336857   +end;
MPRINT(EM_DIAGRAM):   end;
1336858   +
1336859   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1336860   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1336861   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1336862   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1336863   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1336864   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1336865   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1336866   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1336867   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1336868   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1336869   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1336870   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1336871   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1336872   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1336873   +end;
MPRINT(EM_DIAGRAM):   end;
1336874   +else do;
MPRINT(EM_DIAGRAM):   else do;
1336875   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1336876   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1336877   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1336878   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1336879   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1336880   +   end;
MPRINT(EM_DIAGRAM):   end;
1336881   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1336882   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1336883   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1336884   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1336885   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1336886   +   end;
MPRINT(EM_DIAGRAM):   end;
1336887   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1336888   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1336889   +   end;
MPRINT(EM_DIAGRAM):   end;
1336890   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1336891   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1336892   +   end;
MPRINT(EM_DIAGRAM):   end;
1336893   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1336894   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1336895   +   end;
MPRINT(EM_DIAGRAM):   end;
1336896   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1336897   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1336898   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1336899   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1336900   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1336901   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1336902   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1336903   +   end;
MPRINT(EM_DIAGRAM):   end;
1336904   +end;
MPRINT(EM_DIAGRAM):   end;
1336905   +
1336906   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1336907   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1336908   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1336909   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1336910   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1336911   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1336912   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1336913   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1336914   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1336915   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1336916   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1336917   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1336918   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1336919   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1336920   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1336921   +end;
MPRINT(EM_DIAGRAM):   end;
1336922   +else do;
MPRINT(EM_DIAGRAM):   else do;
1336923   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1336924   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1336925   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1336926   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1336927   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1336928   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1336929   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1336930   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1336931   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1336932   +         end;
MPRINT(EM_DIAGRAM):   end;
1336933   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1336934   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1336935   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1336936   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1336937   +            end;
MPRINT(EM_DIAGRAM):   end;
1336938   +         end;
MPRINT(EM_DIAGRAM):   end;
1336939   +      end;
MPRINT(EM_DIAGRAM):   end;
1336940   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1336941   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1336942   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1336943   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1336944   +         end;
MPRINT(EM_DIAGRAM):   end;
1336945   +      end;
MPRINT(EM_DIAGRAM):   end;
1336946   +   end;
MPRINT(EM_DIAGRAM):   end;
1336947   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1336948   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1336949   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1336950   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1336951   +      end;
MPRINT(EM_DIAGRAM):   end;
1336952   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1336953   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1336954   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1336955   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1336956   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1336957   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1336958   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1336959   +         end;
MPRINT(EM_DIAGRAM):   end;
1336960   +      end;
MPRINT(EM_DIAGRAM):   end;
1336961   +   end;
MPRINT(EM_DIAGRAM):   end;
1336962   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1336963   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1336964   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1336965   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1336966   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1336967   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1336968   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1336969   +   end;
MPRINT(EM_DIAGRAM):   end;
1336970   +end;
MPRINT(EM_DIAGRAM):   end;
1336971   +
1336972   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1336973   +*** Checking missing input Interval
1336974   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1336975   +
1336976   +IF NMISS(
1336977   +   AcceptedCmpTotal ,
1336978   +   Age ,
1336979   +   Frq ,
1336980   +   Income ,
1336981   +   Kidhome ,
1336982   +   Mnt ,
1336983   +   MntFishProducts ,
1336984   +   MntFruits ,
1336985   +   MntGoldProds ,
1336986   +   MntMeatProducts ,
1336987   +   MntSweetProducts ,
1336988   +   MntWines ,
1336989   +   MonthsAsCustomer ,
1336990   +   NumCatalogPurchases ,
1336991   +   NumDealsPurchases ,
1336992   +   NumDistPurchases ,
1336993   +   NumStorePurchases ,
1336994   +   NumWebPurchases ,
1336995   +   NumWebVisitsMonth ,
1336996   +   RFMstat ,
1336997   +   RMntFrq ,
1336998   +   Recency ,
1336999   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1337000   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1337001   +
1337002   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1337003   +END;
MPRINT(EM_DIAGRAM):   END;
1337004   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1337005   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1337006   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1337007   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1337008   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1337009   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1337010   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1337011   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1337012   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1337013   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1337014   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1337015   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1337016   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1337017   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1337018   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1337019   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1337020   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1337021   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1337022   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1337023   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1337024   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1337025   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1337026   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1337027   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1337028   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1337029   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1337030   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1337031   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1337032   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1337033   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1337034   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1337035   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1337036   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1337037   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1337038   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1337039   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1337040   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1337041   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1337042   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1337043   +END;
MPRINT(EM_DIAGRAM):   END;
1337044   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1337045   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1337046   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1337047   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1337048   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1337049   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1337050   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1337051   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1337052   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1337053   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1337054   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1337055   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1337056   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1337057   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1337058   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1337059   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1337060   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1337061   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1337062   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1337063   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1337064   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1337065   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1337066   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1337067   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1337068   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1337069   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1337070   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1337071   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1337072   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1337073   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1337074   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1337075   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1337076   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1337077   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1337078   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1337079   +   ELSE S_NumCatalogPurchases
1337080   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1337081   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1337082   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1337083   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1337084   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1337085   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1337086   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1337087   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1337088   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1337089   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1337090   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1337091   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1337092   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1337093   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1337094   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1337095   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1337096   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1337097   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1337098   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1337099   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1337100   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1337101   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1337102   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1337103   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1337104   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1337105   +END;
MPRINT(EM_DIAGRAM):   END;
1337106   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1337107   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1337108   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1337109   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1337110   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1337111   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1337112   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1337113   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1337114   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1337115   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1337116   +   H11  =    -0.84299355418982 * S_AcceptedCmpTotal  +     0.01354424462165 *
1337117   +        S_Age  +     0.26356367995208 * S_Frq  +    -0.22651244750456 *
1337118   +        S_Income  +    -0.23050240180524 * S_Kidhome
1337119   +          +    -1.06664092571354 * S_Mnt  +     0.46271649725684 *
1337120   +        S_MntFishProducts  +     0.29675940813656 * S_MntFruits
1337121   +          +     0.11295035964093 * S_MntGoldProds  +    -4.93303695297431 *
1337122   +        S_MntMeatProducts  +    -0.54183850324086 * S_MntSweetProducts
1337123   +          +     1.44837072773075 * S_MntWines  +     0.02861081928648 *
1337124   +        S_MonthsAsCustomer  +    -1.87075238979838 * S_NumCatalogPurchases
1337125   +          +    -1.32257303635072 * S_NumDealsPurchases
1337126   +          +    -0.54480870554989 * S_NumDistPurchases
1337127   +          +     1.24793709956495 * S_NumStorePurchases
1337128   +          +      1.7974198103915 * S_NumWebPurchases
1337129   +          +    -0.94706410495328 * S_NumWebVisitsMonth
1337130   +          +    -0.08194447980826 * S_RFMstat  +     0.59486634525204 *
1337131   +        S_RMntFrq  +     0.75191254776333 * S_Recency
1337132   +          +     0.13719529324408 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.84299355418982 * S_AcceptedCmpTotal + 0.01354424462165 * S_Age 
+ 0.26356367995208 * S_Frq + -0.22651244750456 * S_Income + -0.23050240180524 * S_Kidhome + 
-1.06664092571354 * S_Mnt + 0.46271649725684 * S_MntFishProducts + 0.29675940813656 * 
S_MntFruits + 0.11295035964093 * S_MntGoldProds + -4.93303695297431 * S_MntMeatProducts + 
-0.54183850324086 * S_MntSweetProducts + 1.44837072773075 * S_MntWines + 0.02861081928648 * 
S_MonthsAsCustomer + -1.87075238979838 * S_NumCatalogPurchases + -1.32257303635072 * 
S_NumDealsPurchases + -0.54480870554989 * S_NumDistPurchases + 1.24793709956495 * 
S_NumStorePurchases + 1.7974198103915 * S_NumWebPurchases + -0.94706410495328 * 
S_NumWebVisitsMonth + -0.08194447980826 * S_RFMstat + 0.59486634525204 * S_RMntFrq + 
0.75191254776333 * S_Recency + 0.13719529324408 * S_Teenhome ;
1337133   +   H12  =     0.19794895997964 * S_AcceptedCmpTotal  +    -0.04275283557766 *
1337134   +        S_Age  +    -0.56824925508231 * S_Frq  +     0.77692983182219 *
1337135   +        S_Income  +    -0.78793784980656 * S_Kidhome
1337136   +          +     0.04472047240299 * S_Mnt  +    -0.04688509126909 *
1337137   +        S_MntFishProducts  +    -0.00374619740046 * S_MntFruits
1337138   +          +     0.04963586007888 * S_MntGoldProds  +      1.0706121357066 *
1337139   +        S_MntMeatProducts  +     -0.1297171300067 * S_MntSweetProducts
1337140   +          +    -0.13703855748888 * S_MntWines  +     0.12672829255314 *
1337141   +        S_MonthsAsCustomer  +     0.72932641344764 * S_NumCatalogPurchases
1337142   +          +     0.70535680060775 * S_NumDealsPurchases
1337143   +          +    -0.15561838359391 * S_NumDistPurchases
1337144   +          +    -0.86545647977011 * S_NumStorePurchases
1337145   +          +    -0.78435825863867 * S_NumWebPurchases
1337146   +          +     1.76113949975149 * S_NumWebVisitsMonth
1337147   +          +     0.12430819021552 * S_RFMstat  +    -1.23324881442206 *
1337148   +        S_RMntFrq  +    -1.54576826012241 * S_Recency
1337149   +          +     -0.4369755549417 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.19794895997964 * S_AcceptedCmpTotal + -0.04275283557766 * S_Age 
+ -0.56824925508231 * S_Frq + 0.77692983182219 * S_Income + -0.78793784980656 * S_Kidhome + 
0.04472047240299 * S_Mnt + -0.04688509126909 * S_MntFishProducts + -0.00374619740046 * 
S_MntFruits + 0.04963586007888 * S_MntGoldProds + 1.0706121357066 * S_MntMeatProducts + 
-0.1297171300067 * S_MntSweetProducts + -0.13703855748888 * S_MntWines + 0.12672829255314 * 
S_MonthsAsCustomer + 0.72932641344764 * S_NumCatalogPurchases + 0.70535680060775 * 
S_NumDealsPurchases + -0.15561838359391 * S_NumDistPurchases + -0.86545647977011 * 
S_NumStorePurchases + -0.78435825863867 * S_NumWebPurchases + 1.76113949975149 * 
S_NumWebVisitsMonth + 0.12430819021552 * S_RFMstat + -1.23324881442206 * S_RMntFrq + 
-1.54576826012241 * S_Recency + -0.4369755549417 * S_Teenhome ;
1337150   +   H13  =     1.17645971046641 * S_AcceptedCmpTotal  +     0.30922319488674 *
1337151   +        S_Age  +     0.05428662439399 * S_Frq  +     1.21807403747713 *
1337152   +        S_Income  +    -0.59349067735666 * S_Kidhome
1337153   +          +     0.48252305689599 * S_Mnt  +    -0.37595381735402 *
1337154   +        S_MntFishProducts  +    -0.13011704623919 * S_MntFruits
1337155   +          +     0.89281681720037 * S_MntGoldProds  +     2.21463961986297 *
1337156   +        S_MntMeatProducts  +    -0.13844613393182 * S_MntSweetProducts
1337157   +          +    -0.93052774237188 * S_MntWines  +    -0.15329145148081 *
1337158   +        S_MonthsAsCustomer  +    -0.35464993634392 * S_NumCatalogPurchases
1337159   +          +     0.21510592309387 * S_NumDealsPurchases
1337160   +          +    -0.05401897321491 * S_NumDistPurchases
1337161   +          +     0.14945584086188 * S_NumStorePurchases
1337162   +          +    -0.09993898051701 * S_NumWebPurchases
1337163   +          +     1.40189771606069 * S_NumWebVisitsMonth
1337164   +          +    -0.37624880818184 * S_RFMstat  +     1.08211585195417 *
1337165   +        S_RMntFrq  +    -1.39818267754244 * S_Recency
1337166   +          +    -1.40352649738739 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 1.17645971046641 * S_AcceptedCmpTotal + 0.30922319488674 * S_Age + 
0.05428662439399 * S_Frq + 1.21807403747713 * S_Income + -0.59349067735666 * S_Kidhome + 
0.48252305689599 * S_Mnt + -0.37595381735402 * S_MntFishProducts + -0.13011704623919 * 
S_MntFruits + 0.89281681720037 * S_MntGoldProds + 2.21463961986297 * S_MntMeatProducts + 
-0.13844613393182 * S_MntSweetProducts + -0.93052774237188 * S_MntWines + -0.15329145148081 * 
S_MonthsAsCustomer + -0.35464993634392 * S_NumCatalogPurchases + 0.21510592309387 * 
S_NumDealsPurchases + -0.05401897321491 * S_NumDistPurchases + 0.14945584086188 * 
S_NumStorePurchases + -0.09993898051701 * S_NumWebPurchases + 1.40189771606069 * 
S_NumWebVisitsMonth + -0.37624880818184 * S_RFMstat + 1.08211585195417 * S_RMntFrq + 
-1.39818267754244 * S_Recency + -1.40352649738739 * S_Teenhome ;
1337167   +   H14  =     1.27893467893779 * S_AcceptedCmpTotal  +     0.01880979187764 *
1337168   +        S_Age  +    -0.70756405701277 * S_Frq  +     1.53745885395395 *
1337169   +        S_Income  +    -0.61129984920194 * S_Kidhome
1337170   +          +    -0.41376232228418 * S_Mnt  +      0.0693214270226 *
1337171   +        S_MntFishProducts  +    -0.38136390810525 * S_MntFruits
1337172   +          +    -0.00750645920769 * S_MntGoldProds  +     0.87695145656238 *
1337173   +        S_MntMeatProducts  +    -0.04977219570302 * S_MntSweetProducts
1337174   +          +     -0.6549812298966 * S_MntWines  +    -1.30809571041702 *
1337175   +        S_MonthsAsCustomer  +     1.09130957811982 * S_NumCatalogPurchases
1337176   +          +     0.81353732439473 * S_NumDealsPurchases
1337177   +          +     0.32933472931941 * S_NumDistPurchases
1337178   +          +    -1.28188012143595 * S_NumStorePurchases
1337179   +          +    -0.81914782214243 * S_NumWebPurchases
1337180   +          +     1.20332282902342 * S_NumWebVisitsMonth
1337181   +          +     0.64952098333126 * S_RFMstat  +     -0.9542946440546 *
1337182   +        S_RMntFrq  +    -2.33912996419146 * S_Recency
1337183   +          +    -0.87409399936848 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 1.27893467893779 * S_AcceptedCmpTotal + 0.01880979187764 * S_Age + 
-0.70756405701277 * S_Frq + 1.53745885395395 * S_Income + -0.61129984920194 * S_Kidhome + 
-0.41376232228418 * S_Mnt + 0.0693214270226 * S_MntFishProducts + -0.38136390810525 * 
S_MntFruits + -0.00750645920769 * S_MntGoldProds + 0.87695145656238 * S_MntMeatProducts + 
-0.04977219570302 * S_MntSweetProducts + -0.6549812298966 * S_MntWines + -1.30809571041702 * 
S_MonthsAsCustomer + 1.09130957811982 * S_NumCatalogPurchases + 0.81353732439473 * 
S_NumDealsPurchases + 0.32933472931941 * S_NumDistPurchases + -1.28188012143595 * 
S_NumStorePurchases + -0.81914782214243 * S_NumWebPurchases + 1.20332282902342 * 
S_NumWebVisitsMonth + 0.64952098333126 * S_RFMstat + -0.9542946440546 * S_RMntFrq + 
-2.33912996419146 * S_Recency + -0.87409399936848 * S_Teenhome ;
1337184   +   H11  = H11  +     0.59375673291979 * AcceptedCmp10
1337185   +          +     0.02203755618618 * AcceptedCmp20  +    -0.21181019584832 *
1337186   +        AcceptedCmp30  +     0.23268323109228 * AcceptedCmp40
1337187   +          +     0.90104209081514 * AcceptedCmp50  +     0.38697558270231 *
1337188   +        Complain0  +     0.35031878791853 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.59375673291979 * AcceptedCmp10 + 0.02203755618618 * 
AcceptedCmp20 + -0.21181019584832 * AcceptedCmp30 + 0.23268323109228 * AcceptedCmp40 + 
0.90104209081514 * AcceptedCmp50 + 0.38697558270231 * Complain0 + 0.35031878791853 * 
HigherEducationBinary0 ;
1337189   +   H12  = H12  +     -0.5730983744808 * AcceptedCmp10
1337190   +          +    -0.34424275081615 * AcceptedCmp20  +    -0.44620106374863 *
1337191   +        AcceptedCmp30  +    -0.49481575237203 * AcceptedCmp40
1337192   +          +    -0.69117141341081 * AcceptedCmp50  +     0.51229650850652 *
1337193   +        Complain0  +    -0.11735442134022 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.5730983744808 * AcceptedCmp10 + -0.34424275081615 * 
AcceptedCmp20 + -0.44620106374863 * AcceptedCmp30 + -0.49481575237203 * AcceptedCmp40 + 
-0.69117141341081 * AcceptedCmp50 + 0.51229650850652 * Complain0 + -0.11735442134022 * 
HigherEducationBinary0 ;
1337194   +   H13  = H13  +    -1.12949380623281 * AcceptedCmp10
1337195   +          +    -0.52986298901299 * AcceptedCmp20  +    -0.35665685041759 *
1337196   +        AcceptedCmp30  +    -0.03028806067484 * AcceptedCmp40
1337197   +          +    -0.17063695271842 * AcceptedCmp50  +    -1.10439852571034 *
1337198   +        Complain0  +      0.4574039172898 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -1.12949380623281 * AcceptedCmp10 + -0.52986298901299 * 
AcceptedCmp20 + -0.35665685041759 * AcceptedCmp30 + -0.03028806067484 * AcceptedCmp40 + 
-0.17063695271842 * AcceptedCmp50 + -1.10439852571034 * Complain0 + 0.4574039172898 * 
HigherEducationBinary0 ;
1337199   +   H14  = H14  +     0.90425496220772 * AcceptedCmp10
1337200   +          +     0.02606316440589 * AcceptedCmp20  +     0.05631172953758 *
1337201   +        AcceptedCmp30  +    -0.45861962742584 * AcceptedCmp40
1337202   +          +    -0.52730223640646 * AcceptedCmp50  +      1.1577500782814 *
1337203   +        Complain0  +    -0.02439051385945 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.90425496220772 * AcceptedCmp10 + 0.02606316440589 * 
AcceptedCmp20 + 0.05631172953758 * AcceptedCmp30 + -0.45861962742584 * AcceptedCmp40 + 
-0.52730223640646 * AcceptedCmp50 + 1.1577500782814 * Complain0 + -0.02439051385945 * 
HigherEducationBinary0 ;
1337204   +   H11  = H11  +    -0.36857478578596 * Education2n_Cycle
1337205   +          +     0.19898218105822 * EducationBasic  +     0.02724838036933 *
1337206   +        EducationGraduation  +    -0.18265777565193 * EducationMaster
1337207   +          +     0.38068062371853 * Marital_StatusDivorced
1337208   +          +    -0.09269938603625 * Marital_StatusMarried
1337209   +          +    -0.17904543311137 * Marital_StatusSingle
1337210   +          +    -0.13128093417312 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.36857478578596 * Education2n_Cycle + 0.19898218105822 * 
EducationBasic + 0.02724838036933 * EducationGraduation + -0.18265777565193 * EducationMaster 
+ 0.38068062371853 * Marital_StatusDivorced + -0.09269938603625 * Marital_StatusMarried + 
-0.17904543311137 * Marital_StatusSingle + -0.13128093417312 * Marital_StatusTogether ;
1337211   +   H12  = H12  +     0.57160337074566 * Education2n_Cycle
1337212   +          +    -0.43780721536745 * EducationBasic  +     0.14323913032441 *
1337213   +        EducationGraduation  +      -0.555680629921 * EducationMaster
1337214   +          +     0.46191454760643 * Marital_StatusDivorced
1337215   +          +    -1.36520525874032 * Marital_StatusMarried
1337216   +          +     1.36669525533789 * Marital_StatusSingle
1337217   +          +    -1.54396080382919 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.57160337074566 * Education2n_Cycle + -0.43780721536745 * 
EducationBasic + 0.14323913032441 * EducationGraduation + -0.555680629921 * EducationMaster + 
0.46191454760643 * Marital_StatusDivorced + -1.36520525874032 * Marital_StatusMarried + 
1.36669525533789 * Marital_StatusSingle + -1.54396080382919 * Marital_StatusTogether ;
1337218   +   H13  = H13  +    -0.69472324326666 * Education2n_Cycle
1337219   +          +     1.16589091191624 * EducationBasic  +     -0.2092156588512 *
1337220   +        EducationGraduation  +    -0.01875362530677 * EducationMaster
1337221   +          +     0.18693560360309 * Marital_StatusDivorced
1337222   +          +    -0.56475988428608 * Marital_StatusMarried
1337223   +          +     0.79263891340625 * Marital_StatusSingle
1337224   +          +    -0.06098632630716 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.69472324326666 * Education2n_Cycle + 1.16589091191624 * 
EducationBasic + -0.2092156588512 * EducationGraduation + -0.01875362530677 * EducationMaster 
+ 0.18693560360309 * Marital_StatusDivorced + -0.56475988428608 * Marital_StatusMarried + 
0.79263891340625 * Marital_StatusSingle + -0.06098632630716 * Marital_StatusTogether ;
1337225   +   H14  = H14  +     0.06911242671078 * Education2n_Cycle
1337226   +          +    -0.01750231496702 * EducationBasic  +    -0.32110835963458 *
1337227   +        EducationGraduation  +     0.38698693412081 * EducationMaster
1337228   +          +     1.14025450669394 * Marital_StatusDivorced
1337229   +          +     0.78122963298728 * Marital_StatusMarried
1337230   +          +    -1.37860768059913 * Marital_StatusSingle
1337231   +          +     0.04814874553216 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.06911242671078 * Education2n_Cycle + -0.01750231496702 * 
EducationBasic + -0.32110835963458 * EducationGraduation + 0.38698693412081 * EducationMaster 
+ 1.14025450669394 * Marital_StatusDivorced + 0.78122963298728 * Marital_StatusMarried + 
-1.37860768059913 * Marital_StatusSingle + 0.04814874553216 * Marital_StatusTogether ;
1337232   +   H11  =    -1.84343242480594 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.84343242480594 + H11 ;
1337233   +   H12  =     1.29327809357238 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.29327809357238 + H12 ;
1337234   +   H13  =    -0.37221770912681 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.37221770912681 + H13 ;
1337235   +   H14  =    -0.62919123351659 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.62919123351659 + H14 ;
1337236   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1337237   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1337238   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1337239   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1337240   +END;
MPRINT(EM_DIAGRAM):   END;
1337241   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1337242   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1337243   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1337244   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1337245   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1337246   +END;
MPRINT(EM_DIAGRAM):   END;
1337247   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1337248   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1337249   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1337250   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1337251   +   P_DepVar1  =    -3.75170032730169 * H11  +     5.71110229580931 * H12
1337252   +          +     2.78452207249475 * H13  +     3.19333794612831 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.75170032730169 * H11 + 5.71110229580931 * H12 + 
2.78452207249475 * H13 + 3.19333794612831 * H14 ;
1337253   +   P_DepVar1  =    -6.67752417555263 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.67752417555263 + P_DepVar1 ;
1337254   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1337255   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1337256   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1337257   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1337258   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1337259   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1337260   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1337261   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1337262   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1337263   +END;
MPRINT(EM_DIAGRAM):   END;
1337264   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1337265   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1337266   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1337267   +END;
MPRINT(EM_DIAGRAM):   END;
1337268   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1337269   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1337270   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1337271   +END;
MPRINT(EM_DIAGRAM):   END;
1337272   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1337273   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1337274   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1337275   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1337276   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1337277   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1337278   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1337279   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1337280   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1337281   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1337282   +END;
MPRINT(EM_DIAGRAM):   END;
1337283   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1337284   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1337285   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1337286   +drop
1337287   +H11
1337288   +H12
1337289   +H13
1337290   +H14
1337291   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1337292   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1337293    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1337294    quit;
1337295    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1337296    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1337297    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1337298    retain ID 2 Node "Neural4";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural4";
1337299    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1337300    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2528 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2528 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1337301    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1337302    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1337303    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2528 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2528 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1337304    proc sort data=EMWS8.Neural4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural4_variableset out=_temp2(keep=NAME CREATOR);
1337305    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1337306    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1337307    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1337308    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1337309    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1337310    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1337311    proc contents data=EMWS8.Neural4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural4_train out=_meta(keep=NAME) noprint;
1337312    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1337313    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1337314    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1337315    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1337316    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1337317    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1337318    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1337319    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1337320    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1337321    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1337321  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1463 rows and 5 columns.

1337322    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1337323    proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
1337324    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1463 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL_FCMP has 1463 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1337325    filename _pref
1337325  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1337326    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1337327    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1337328   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1337329   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1337330   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1337331   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1337332   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1337333   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1337334    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1337335    quit;
1337336    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1337337    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1337338    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1337339    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1337340    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1337341    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1337342    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1337343    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1337344    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
The SAS System

      

1337345    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1337346    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1337347    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1337348    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1337349    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1337350    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1337351    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1337352    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1337353    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1337354    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1337355    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1337356    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1337357    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1337358    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1337359    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1337360    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1337361    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1337362    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1337362  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1337363    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1337364    proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
1337365    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL_FCMP has 1467 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1337366    filename _pref
1337366  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1337367    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1337368    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1337369   +
1337370   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1337371   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1337371  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1337372   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1337373   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1337374   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1337375   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1337376   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1337377    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1337378    quit;
1337379    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1337380    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1337381    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1337382    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1337383    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1337384    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1337385    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1337386    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1337387    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1337388    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1337389    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1337390    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1337391    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1337392    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1337393    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1337394    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1337395    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1337396    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1337397    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1337398    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1337399    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1337400    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1337401    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1337402    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1337403    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.03 seconds
      

1337404    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1337405    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1337405  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1337406    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1337407    proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
1337408    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL_FCMP has 1506 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1337409    filename _pref
1337409  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1337410    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1337411    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1337412   +
1337413   +
1337414   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1337415   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1337416   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1337417   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1337418   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1337419   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1337420   +
1337421   +
1337422   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1337423   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1337424   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1337425   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1337426   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1337427   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1337428   +
1337429   +
1337430   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1337431   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1337432   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1337433   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1337434   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1337435   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1337436   +
1337437   +
1337438   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1337439   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1337440   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1337441   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1337442   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1337443   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1337444   +
1337445   +
1337446   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1337447   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1337448   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1337449   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1337450   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1337451   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1337452   +
1337453   +
1337454   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1337455   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1337456   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1337457   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1337458   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1337459   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1337460   +
1337461   +
1337462   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1337463   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1337464   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1337465   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1337466   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1337467   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1337468   +
1337469   +
1337470   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1337471   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1337472   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1337473   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1337474   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1337475   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1337476   +if
1337477   +_FILTERNORM1 not in ( '.')
1337478   + and
1337479   +_FILTERNORM2 not in ( '.')
1337480   + and
1337481   +_FILTERNORM3 not in ( '.')
1337482   + and
1337483   +_FILTERNORM4 not in ( '.')
1337484   + and
1337485   +_FILTERNORM5 not in ( '.')
1337486   + and
1337487   +_FILTERNORM6 not in ( '.')
1337488   + and
1337489   +_FILTERNORM7 not in ( ' ')
1337490   + and
1337491   +_FILTERNORM8 not in ( ' ')
1337492   +and
1337493   +( Dt_Customer ne .)
1337494   +and ( Income ne . and (Income<=107000))
1337495   +and ( Kidhome ne .)
1337496   +and ( MntFishProducts ne .)
1337497   +and ( MntFruits ne .)
1337498   +and ( MntGoldProds ne .)
1337499   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1337500   +and ( MntSweetProducts ne .)
1337501   +and ( MntWines ne .)
1337502   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1337503   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1337504   +and ( NumStorePurchases ne .)
1337505   +and ( NumWebPurchases ne .)
1337506   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1337507   +and ( Recency ne .)
1337508   +and ( Teenhome ne .)
1337509   +and ( Year_Birth ne .)
1337510   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1337511   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1337512   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1337513   +end;
MPRINT(EM_DIAGRAM):   end;
1337514   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1337515   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1337516    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1337517    quit;
1337518    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1337519    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1337520    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1337521    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1337522    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1337523    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1337524    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1337525    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1337526    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1337527    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1337528    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1337529    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1337530    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1337531    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1337532    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1337533    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1337534    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1337535    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1337536    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1337537    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1337538    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1337539    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1337540    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1337541    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1337542    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1337543    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1337544    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1337544  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1337545    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1337546    proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
1337547    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL_FCMP has 1572 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1337548    %macro varDept(fcmpdata=,id=);
1337549    %global nobs&id scoreFlag&id;
1337550    %let scoreFlag&id = 0;
1337551    %if &id=1 or ^&fcmpStart %then %do;
1337552    proc sort data=&fcmpdata out=_temp&id nodupkey;
1337553    by NAME;
1337554    where id=&id and LHS in( %let j=1;
1337555    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1337556    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1337557    "&var" %let j = %eval(&j+1);
1337558    %end;
1337559    );
1337560    run;
1337561    %let dsid = %sysfunc(open(_temp&id));
1337562    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1337563    %let dsid = %sysfunc(close(&dsid));
1337564    %if &&nobs&id %then %do;
1337565    %let scoreFlag&id = 1;
1337566    %let fcmpStart = 1;
1337567    %end;
1337568    %else %let fcmpStart = 0;
1337569    %end;
1337570    %else %do;
1337571    proc sort data=&fcmpdata out=_tempid;
1337572    where id=&id;
1337573    by LHS;
1337574    run;
1337575    %let dsid = %sysfunc(open(_tempid));
1337576    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1337577    %let dsid = %sysfunc(close(&dsid));
1337578    %if ^&&nobs&id %then %do;
1337579    proc datasets lib=work nolist;
1337580    delete _tempid;
1337581    run;
1337582    quit;
1337583    %end;
1337584    %else %do;
1337585    data _tempAll;
1337586    set %let j=%eval(&id-1);
1337587    %do x=1 %to &j;
1337588    %if &&nobs&x %then %do;
1337589    _temp&x %end;
1337590    %end;
1337591    ;
1337592    run;
1337593    proc sql;
1337594    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1337594  ! work._tempid p2 where p.name=p2.lhs;
1337595    quit;
1337596    data _temp&id;
1337597    set _temp&id;
1337598    where LHS ne '' and NAME ne '' and Node ne '';
1337599    run;
1337600    proc datasets lib=work nolist;
1337601    delete _tempAll;
1337602    run;
1337603    %let dsid = %sysfunc(open(_temp&id));
1337604    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1337605    %let dsid = %sysfunc(close(&dsid));
1337606    %if ^&&nobs&id %then %do;
1337607    proc datasets lib=work nolist;
1337608    delete _temp&id;
1337609    run;
1337610    quit;
1337611    %end;
1337612    %else %do;
1337613    %let scoreFlag&id = 1;
1337614    data _temp&id;
1337615    set _temp&id;
1337616    where LHS ne NAME and node ne '';
1337617    run;
1337618    %let dsid = %sysfunc(open(_temp&id));
1337619    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1337620    %let dsid = %sysfunc(close(&dsid));
1337621    %if ^&&nobs&id %then %do;
1337622    proc datasets lib=work nolist;
1337623    delete _temp&id;
1337624    run;
1337625    quit;
1337626    %end;
1337627    %else %do;
1337628    proc sort data=_temp&id nodupkey;
1337629    by LHS NAME;
1337630    run;
1337631    %end;
1337632    %end;
1337633    %end;
1337634    %end;
1337635    %mend varDept;
1337636    %macro optCode(outdata=fcmpdata);
1337637    %global fcmpStart;
1337638    %let fcmpStart = 0;
1337639    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1337640    %let NumNodes=9;
1337641    %do k=1 %to &NumNodes;
1337642    %vardept(fcmpdata=&outdata, id=&k);
1337643    %end;
1337644    %mend optCode;
1337645    %optcode(outData=EMWS8.Ensmbl_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1337646    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1337647    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1337648    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1337649    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1337650    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1337651    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1337652    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1337653    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1337654    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1337655    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1337655  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

1337656    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1337657    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1337658    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1337659    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1337660    filename _pref
1337660  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural\EMPUBLISHSCORE.sas";
1337661    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1337662    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural\EMPUBLISHSCORE.sas.
1337663   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1337664   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1337665   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1337666   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1337667   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1337668   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1337669   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1337670   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1337671   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1337672   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1337673   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1337674   +LENGTH _WARN_ $4
1337675   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1337676   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1337677   +
1337678   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1337679   +
1337680   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1337681   +
1337682   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1337683   +
1337684   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1337685   +
1337686   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1337687   +
1337688   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1337689   +
1337690   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1337691   +
1337692   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1337693   +
1337694   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1337695   +
1337696   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1337697   +
1337698   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1337699   +
1337700   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1337701   +
1337702   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1337703   +
1337704   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1337705   +
1337706   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1337707   +
1337708   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1337709   +
1337710   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1337711   +
1337712   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1337713   +
1337714   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1337715   +
1337716   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1337717   +
1337718   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1337719   +
1337720   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1337721   +
1337722   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1337723   +
1337724   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1337725   +
1337726   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1337727   +
1337728   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1337729   +
1337730   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1337731   +
1337732   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1337733   +
1337734   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1337735   +
1337736   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1337737   +
1337738   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1337739   +
1337740   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1337741   +
1337742   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1337743   +
1337744   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1337745   +
1337746   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1337747   +
1337748   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1337749   +
1337750   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1337751   +
1337752   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1337753   +
1337754   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1337755   +
1337756   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1337757   +
1337758   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1337759   +
1337760   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1337761   +
1337762   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1337763   +
1337764   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1337765   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1337766   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1337767   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1337768   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1337769   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1337770   +end;
MPRINT(EM_DIAGRAM):   end;
1337771   +else do;
MPRINT(EM_DIAGRAM):   else do;
1337772   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1337773   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1337774   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1337775   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1337776   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1337777   +   end;
MPRINT(EM_DIAGRAM):   end;
1337778   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1337779   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1337780   +   end;
MPRINT(EM_DIAGRAM):   end;
1337781   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1337782   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1337783   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1337784   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1337785   +   end;
MPRINT(EM_DIAGRAM):   end;
1337786   +end;
MPRINT(EM_DIAGRAM):   end;
1337787   +
1337788   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1337789   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1337790   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1337791   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1337792   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1337793   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1337794   +end;
MPRINT(EM_DIAGRAM):   end;
1337795   +else do;
MPRINT(EM_DIAGRAM):   else do;
1337796   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1337797   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1337798   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1337799   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1337800   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1337801   +   end;
MPRINT(EM_DIAGRAM):   end;
1337802   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1337803   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1337804   +   end;
MPRINT(EM_DIAGRAM):   end;
1337805   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1337806   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1337807   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1337808   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1337809   +   end;
MPRINT(EM_DIAGRAM):   end;
1337810   +end;
MPRINT(EM_DIAGRAM):   end;
1337811   +
1337812   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1337813   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1337814   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1337815   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1337816   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1337817   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1337818   +end;
MPRINT(EM_DIAGRAM):   end;
1337819   +else do;
MPRINT(EM_DIAGRAM):   else do;
1337820   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1337821   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1337822   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1337823   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1337824   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1337825   +   end;
MPRINT(EM_DIAGRAM):   end;
1337826   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1337827   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1337828   +   end;
MPRINT(EM_DIAGRAM):   end;
1337829   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1337830   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1337831   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1337832   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1337833   +   end;
MPRINT(EM_DIAGRAM):   end;
1337834   +end;
MPRINT(EM_DIAGRAM):   end;
1337835   +
1337836   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1337837   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1337838   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1337839   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1337840   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1337841   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1337842   +end;
MPRINT(EM_DIAGRAM):   end;
1337843   +else do;
MPRINT(EM_DIAGRAM):   else do;
1337844   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1337845   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1337846   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1337847   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1337848   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1337849   +   end;
MPRINT(EM_DIAGRAM):   end;
1337850   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1337851   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1337852   +   end;
MPRINT(EM_DIAGRAM):   end;
1337853   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1337854   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1337855   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1337856   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1337857   +   end;
MPRINT(EM_DIAGRAM):   end;
1337858   +end;
MPRINT(EM_DIAGRAM):   end;
1337859   +
1337860   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1337861   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1337862   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1337863   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1337864   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1337865   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1337866   +end;
MPRINT(EM_DIAGRAM):   end;
1337867   +else do;
MPRINT(EM_DIAGRAM):   else do;
1337868   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1337869   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1337870   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1337871   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1337872   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1337873   +   end;
MPRINT(EM_DIAGRAM):   end;
1337874   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1337875   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1337876   +   end;
MPRINT(EM_DIAGRAM):   end;
1337877   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1337878   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1337879   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1337880   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1337881   +   end;
MPRINT(EM_DIAGRAM):   end;
1337882   +end;
MPRINT(EM_DIAGRAM):   end;
1337883   +
1337884   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1337885   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1337886   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1337887   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1337888   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1337889   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1337890   +end;
MPRINT(EM_DIAGRAM):   end;
1337891   +else do;
MPRINT(EM_DIAGRAM):   else do;
1337892   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1337893   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1337894   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1337895   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1337896   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1337897   +   end;
MPRINT(EM_DIAGRAM):   end;
1337898   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1337899   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1337900   +   end;
MPRINT(EM_DIAGRAM):   end;
1337901   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1337902   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1337903   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1337904   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1337905   +   end;
MPRINT(EM_DIAGRAM):   end;
1337906   +end;
MPRINT(EM_DIAGRAM):   end;
1337907   +
1337908   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1337909   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1337910   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1337911   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1337912   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1337913   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1337914   +end;
MPRINT(EM_DIAGRAM):   end;
1337915   +else do;
MPRINT(EM_DIAGRAM):   else do;
1337916   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1337917   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1337918   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1337919   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1337920   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1337921   +   end;
MPRINT(EM_DIAGRAM):   end;
1337922   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1337923   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1337924   +   end;
MPRINT(EM_DIAGRAM):   end;
1337925   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1337926   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1337927   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1337928   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1337929   +   end;
MPRINT(EM_DIAGRAM):   end;
1337930   +end;
MPRINT(EM_DIAGRAM):   end;
1337931   +
1337932   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1337933   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1337934   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1337935   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1337936   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1337937   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1337938   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1337939   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1337940   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1337941   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1337942   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1337943   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1337944   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1337945   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1337946   +end;
MPRINT(EM_DIAGRAM):   end;
1337947   +else do;
MPRINT(EM_DIAGRAM):   else do;
1337948   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1337949   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1337950   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1337951   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1337952   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1337953   +   end;
MPRINT(EM_DIAGRAM):   end;
1337954   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1337955   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1337956   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1337957   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1337958   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1337959   +   end;
MPRINT(EM_DIAGRAM):   end;
1337960   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1337961   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1337962   +   end;
MPRINT(EM_DIAGRAM):   end;
1337963   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1337964   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1337965   +   end;
MPRINT(EM_DIAGRAM):   end;
1337966   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1337967   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1337968   +   end;
MPRINT(EM_DIAGRAM):   end;
1337969   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1337970   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1337971   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1337972   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1337973   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1337974   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1337975   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1337976   +   end;
MPRINT(EM_DIAGRAM):   end;
1337977   +end;
MPRINT(EM_DIAGRAM):   end;
1337978   +
1337979   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1337980   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1337981   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1337982   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1337983   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1337984   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1337985   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1337986   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1337987   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1337988   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1337989   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1337990   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1337991   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1337992   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1337993   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1337994   +end;
MPRINT(EM_DIAGRAM):   end;
1337995   +else do;
MPRINT(EM_DIAGRAM):   else do;
1337996   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1337997   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1337998   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1337999   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1338000   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1338001   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1338002   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1338003   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1338004   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1338005   +         end;
MPRINT(EM_DIAGRAM):   end;
1338006   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1338007   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1338008   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1338009   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1338010   +            end;
MPRINT(EM_DIAGRAM):   end;
1338011   +         end;
MPRINT(EM_DIAGRAM):   end;
1338012   +      end;
MPRINT(EM_DIAGRAM):   end;
1338013   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1338014   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1338015   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1338016   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1338017   +         end;
MPRINT(EM_DIAGRAM):   end;
1338018   +      end;
MPRINT(EM_DIAGRAM):   end;
1338019   +   end;
MPRINT(EM_DIAGRAM):   end;
1338020   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1338021   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1338022   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1338023   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1338024   +      end;
MPRINT(EM_DIAGRAM):   end;
1338025   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1338026   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1338027   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1338028   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1338029   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1338030   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1338031   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1338032   +         end;
MPRINT(EM_DIAGRAM):   end;
1338033   +      end;
MPRINT(EM_DIAGRAM):   end;
1338034   +   end;
MPRINT(EM_DIAGRAM):   end;
1338035   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1338036   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1338037   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1338038   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1338039   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1338040   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1338041   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1338042   +   end;
MPRINT(EM_DIAGRAM):   end;
1338043   +end;
MPRINT(EM_DIAGRAM):   end;
1338044   +
1338045   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1338046   +*** Checking missing input Interval
1338047   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1338048   +
1338049   +IF NMISS(
1338050   +   AcceptedCmpTotal ,
1338051   +   Age ,
1338052   +   Frq ,
1338053   +   Income ,
1338054   +   Kidhome ,
1338055   +   Mnt ,
1338056   +   MntFishProducts ,
1338057   +   MntFruits ,
1338058   +   MntGoldProds ,
1338059   +   MntMeatProducts ,
1338060   +   MntSweetProducts ,
1338061   +   MntWines ,
1338062   +   MonthsAsCustomer ,
1338063   +   NumCatalogPurchases ,
1338064   +   NumDealsPurchases ,
1338065   +   NumDistPurchases ,
1338066   +   NumStorePurchases ,
1338067   +   NumWebPurchases ,
1338068   +   NumWebVisitsMonth ,
1338069   +   RFMstat ,
1338070   +   RMntFrq ,
1338071   +   Recency ,
1338072   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1338073   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1338074   +
1338075   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1338076   +END;
MPRINT(EM_DIAGRAM):   END;
1338077   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1338078   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1338079   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1338080   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1338081   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1338082   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1338083   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1338084   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1338085   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1338086   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1338087   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1338088   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1338089   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1338090   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1338091   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1338092   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1338093   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1338094   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1338095   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1338096   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1338097   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1338098   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1338099   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1338100   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1338101   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1338102   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1338103   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1338104   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1338105   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1338106   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1338107   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1338108   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1338109   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1338110   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1338111   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1338112   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1338113   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1338114   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1338115   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1338116   +END;
MPRINT(EM_DIAGRAM):   END;
1338117   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1338118   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1338119   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1338120   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1338121   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1338122   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1338123   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1338124   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1338125   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1338126   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1338127   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1338128   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1338129   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1338130   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1338131   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1338132   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1338133   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1338134   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1338135   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1338136   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1338137   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1338138   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1338139   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1338140   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1338141   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1338142   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1338143   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1338144   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1338145   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1338146   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1338147   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1338148   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1338149   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1338150   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1338151   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1338152   +   ELSE S_NumCatalogPurchases
1338153   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1338154   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1338155   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1338156   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1338157   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1338158   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1338159   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1338160   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1338161   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1338162   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1338163   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1338164   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1338165   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1338166   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1338167   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1338168   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1338169   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1338170   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1338171   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1338172   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1338173   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1338174   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1338175   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1338176   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1338177   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1338178   +END;
MPRINT(EM_DIAGRAM):   END;
1338179   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1338180   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1338181   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1338182   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1338183   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1338184   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1338185   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1338186   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1338187   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1338188   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1338189   +   H11  =     0.21197486042877 * S_AcceptedCmpTotal  +    -0.02949522070573 *
1338190   +        S_Age  +    -0.16919312615037 * S_Frq  +     0.14522255331039 *
1338191   +        S_Income  +     -0.0266473959975 * S_Kidhome
1338192   +          +     0.00778892787353 * S_Mnt  +    -0.04773629470954 *
1338193   +        S_MntFishProducts  +    -0.04230043327825 * S_MntFruits
1338194   +          +     0.00794218138067 * S_MntGoldProds  +      0.2107009197796 *
1338195   +        S_MntMeatProducts  +    -0.02357514913511 * S_MntSweetProducts
1338196   +          +    -0.19324648510173 * S_MntWines  +    -0.01985289349376 *
1338197   +        S_MonthsAsCustomer  +     0.28120382833347 * S_NumCatalogPurchases
1338198   +          +     0.15204082764648 * S_NumDealsPurchases
1338199   +          +     0.06913395421701 * S_NumDistPurchases
1338200   +          +    -0.06320045391889 * S_NumStorePurchases
1338201   +          +    -0.10763219134397 * S_NumWebPurchases
1338202   +          +     0.30129325870073 * S_NumWebVisitsMonth
1338203   +          +      0.0486741214698 * S_RFMstat  +     0.05669529576559 *
1338204   +        S_RMntFrq  +    -0.33977590725175 * S_Recency
1338205   +          +    -0.07911174205052 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.21197486042877 * S_AcceptedCmpTotal + -0.02949522070573 * S_Age 
+ -0.16919312615037 * S_Frq + 0.14522255331039 * S_Income + -0.0266473959975 * S_Kidhome + 
0.00778892787353 * S_Mnt + -0.04773629470954 * S_MntFishProducts + -0.04230043327825 * 
S_MntFruits + 0.00794218138067 * S_MntGoldProds + 0.2107009197796 * S_MntMeatProducts + 
-0.02357514913511 * S_MntSweetProducts + -0.19324648510173 * S_MntWines + -0.01985289349376 * 
S_MonthsAsCustomer + 0.28120382833347 * S_NumCatalogPurchases + 0.15204082764648 * 
S_NumDealsPurchases + 0.06913395421701 * S_NumDistPurchases + -0.06320045391889 * 
S_NumStorePurchases + -0.10763219134397 * S_NumWebPurchases + 0.30129325870073 * 
S_NumWebVisitsMonth + 0.0486741214698 * S_RFMstat + 0.05669529576559 * S_RMntFrq + 
-0.33977590725175 * S_Recency + -0.07911174205052 * S_Teenhome ;
1338206   +   H11  = H11  +    -0.00076888633638 * AcceptedCmp10
1338207   +          +     0.00331144478287 * AcceptedCmp20  +    -0.01959880328373 *
1338208   +        AcceptedCmp30  +     0.01506573257273 * AcceptedCmp40
1338209   +          +     -0.0677799414781 * AcceptedCmp50  +     0.04559602713799 *
1338210   +        Complain0  +    -0.02207878651679 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.00076888633638 * AcceptedCmp10 + 0.00331144478287 * 
AcceptedCmp20 + -0.01959880328373 * AcceptedCmp30 + 0.01506573257273 * AcceptedCmp40 + 
-0.0677799414781 * AcceptedCmp50 + 0.04559602713799 * Complain0 + -0.02207878651679 * 
HigherEducationBinary0 ;
1338211   +   H11  = H11  +     0.02201277166891 * Education2n_Cycle
1338212   +          +    -0.04148038680327 * EducationBasic  +     0.02074941779593 *
1338213   +        EducationGraduation  +    -0.00113068890412 * EducationMaster
1338214   +          +     0.03231190657829 * Marital_StatusDivorced
1338215   +          +    -0.11915392851312 * Marital_StatusMarried
1338216   +          +     0.09075278174727 * Marital_StatusSingle
1338217   +          +    -0.12491280689858 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.02201277166891 * Education2n_Cycle + -0.04148038680327 * 
EducationBasic + 0.02074941779593 * EducationGraduation + -0.00113068890412 * EducationMaster 
+ 0.03231190657829 * Marital_StatusDivorced + -0.11915392851312 * Marital_StatusMarried + 
0.09075278174727 * Marital_StatusSingle + -0.12491280689858 * Marital_StatusTogether ;
1338218   +   H11  =    -0.51532097089609 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.51532097089609 + H11 ;
1338219   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1338220   +END;
MPRINT(EM_DIAGRAM):   END;
1338221   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1338222   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1338223   +END;
MPRINT(EM_DIAGRAM):   END;
1338224   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1338225   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1338226   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1338227   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1338228   +   P_DepVar1  =     8.82153759949468 * H11 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 8.82153759949468 * H11 ;
1338229   +   P_DepVar1  =    -0.58718093717937 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.58718093717937 + P_DepVar1 ;
1338230   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1338231   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1338232   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1338233   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1338234   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1338235   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1338236   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1338237   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1338238   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1338239   +END;
MPRINT(EM_DIAGRAM):   END;
1338240   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1338241   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1338242   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1338243   +END;
MPRINT(EM_DIAGRAM):   END;
1338244   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1338245   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1338246   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1338247   +END;
MPRINT(EM_DIAGRAM):   END;
1338248   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1338249   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1338250   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1338251   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1338252   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1338253   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1338254   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1338255   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1338256   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1338257   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1338258   +END;
MPRINT(EM_DIAGRAM):   END;
1338259   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1338260   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1338261   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1338262   +drop
1338263   +H11
1338264   +;
MPRINT(EM_DIAGRAM):   drop H11 ;
1338265   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1338266    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1338267    quit;
1338268    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1338269    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1338270    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1338271    retain ID 2 Node "Neural";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural";
1338272    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1338273    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2006 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2006 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1338274    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1338275    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1338276    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2006 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2006 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1338277    proc sort data=EMWS8.Neural_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural_variableset out=_temp2(keep=NAME CREATOR);
1338278    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1338279    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1338280    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1338281    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1338282    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1338283    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1338284    proc contents data=EMWS8.Neural_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural_train out=_meta(keep=NAME) noprint;
1338285    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1338286    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1338287    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1338288    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1338289    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1338290    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1338291    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1338292    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1338293    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1338294    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1338294  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1271 rows and 5 columns.

1338295    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1338296    proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
1338297    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1271 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL_FCMP has 1271 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1338298    filename _pref
1338298  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1338299    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1338300    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1338301   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1338302   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1338303   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1338304   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1338305   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1338306   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1338307    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1338308    quit;
1338309    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1338310    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1338311    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1338312    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1338313    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1338314    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1338315    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1338316    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1338317    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1338318    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1338319    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1338320    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1338321    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1338322    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1338323    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1338324    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1338325    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1338326    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1338327    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1338328    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1338329    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1338330    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1338331    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1338332    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1338333    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1338334    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1338335    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1338335  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1338336    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1338337    proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
1338338    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL_FCMP has 1275 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1338339    filename _pref
1338339  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1338340    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1338341    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1338342   +
1338343   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1338344   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1338344  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1338345   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1338346   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1338347   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1338348   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1338349   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1338350    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1338351    quit;
1338352    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1338353    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1338354    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1338355    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1338356    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1338357    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1338358    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1338359    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1338360    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1338361    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1338362    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1338363    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1338364    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1338365    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1338366    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1338367    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1338368    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1338369    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1338370    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1338371    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1338372    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1338373    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1338374    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1338375    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1338376    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1338377    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1338378    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1338378  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1338379    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1338380    proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
1338381    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL_FCMP has 1314 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1338382    filename _pref
1338382  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1338383    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1338384    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1338385   +
1338386   +
1338387   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1338388   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1338389   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1338390   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1338391   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1338392   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1338393   +
1338394   +
1338395   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1338396   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1338397   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1338398   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1338399   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1338400   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1338401   +
1338402   +
1338403   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1338404   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1338405   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1338406   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1338407   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1338408   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1338409   +
1338410   +
1338411   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1338412   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1338413   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1338414   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1338415   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1338416   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1338417   +
1338418   +
1338419   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1338420   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1338421   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1338422   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1338423   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1338424   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1338425   +
1338426   +
1338427   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1338428   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1338429   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1338430   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1338431   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1338432   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1338433   +
1338434   +
1338435   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1338436   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1338437   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1338438   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1338439   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1338440   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1338441   +
1338442   +
1338443   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1338444   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1338445   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1338446   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1338447   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1338448   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1338449   +if
1338450   +_FILTERNORM1 not in ( '.')
1338451   + and
1338452   +_FILTERNORM2 not in ( '.')
1338453   + and
1338454   +_FILTERNORM3 not in ( '.')
1338455   + and
1338456   +_FILTERNORM4 not in ( '.')
1338457   + and
1338458   +_FILTERNORM5 not in ( '.')
1338459   + and
1338460   +_FILTERNORM6 not in ( '.')
1338461   + and
1338462   +_FILTERNORM7 not in ( ' ')
1338463   + and
1338464   +_FILTERNORM8 not in ( ' ')
1338465   +and
1338466   +( Dt_Customer ne .)
1338467   +and ( Income ne . and (Income<=107000))
1338468   +and ( Kidhome ne .)
1338469   +and ( MntFishProducts ne .)
1338470   +and ( MntFruits ne .)
1338471   +and ( MntGoldProds ne .)
1338472   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1338473   +and ( MntSweetProducts ne .)
1338474   +and ( MntWines ne .)
1338475   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1338476   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1338477   +and ( NumStorePurchases ne .)
1338478   +and ( NumWebPurchases ne .)
1338479   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1338480   +and ( Recency ne .)
1338481   +and ( Teenhome ne .)
1338482   +and ( Year_Birth ne .)
1338483   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1338484   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1338485   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1338486   +end;
MPRINT(EM_DIAGRAM):   end;
1338487   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1338488   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1338489    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1338490    quit;
1338491    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1338492    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1338493    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1338494    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1338495    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1338496    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1338497    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1338498    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1338499    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1338500    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1338501    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1338502    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1338503    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1338504    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1338505    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1338506    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1338507    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1338508    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1338509    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1338510    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1338511    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1338512    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1338513    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1338514    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1338515    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1338516    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1338517    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1338517  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1338518    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1338519    proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
1338520    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL_FCMP has 1380 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1338521    %macro varDept(fcmpdata=,id=);
1338522    %global nobs&id scoreFlag&id;
1338523    %let scoreFlag&id = 0;
1338524    %if &id=1 or ^&fcmpStart %then %do;
1338525    proc sort data=&fcmpdata out=_temp&id nodupkey;
1338526    by NAME;
1338527    where id=&id and LHS in( %let j=1;
1338528    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1338529    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1338530    "&var" %let j = %eval(&j+1);
1338531    %end;
1338532    );
1338533    run;
1338534    %let dsid = %sysfunc(open(_temp&id));
1338535    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1338536    %let dsid = %sysfunc(close(&dsid));
1338537    %if &&nobs&id %then %do;
1338538    %let scoreFlag&id = 1;
1338539    %let fcmpStart = 1;
1338540    %end;
1338541    %else %let fcmpStart = 0;
1338542    %end;
1338543    %else %do;
1338544    proc sort data=&fcmpdata out=_tempid;
1338545    where id=&id;
1338546    by LHS;
1338547    run;
1338548    %let dsid = %sysfunc(open(_tempid));
1338549    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1338550    %let dsid = %sysfunc(close(&dsid));
1338551    %if ^&&nobs&id %then %do;
1338552    proc datasets lib=work nolist;
1338553    delete _tempid;
1338554    run;
1338555    quit;
1338556    %end;
1338557    %else %do;
1338558    data _tempAll;
1338559    set %let j=%eval(&id-1);
1338560    %do x=1 %to &j;
1338561    %if &&nobs&x %then %do;
1338562    _temp&x %end;
1338563    %end;
1338564    ;
1338565    run;
1338566    proc sql;
1338567    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1338567  ! work._tempid p2 where p.name=p2.lhs;
1338568    quit;
1338569    data _temp&id;
1338570    set _temp&id;
1338571    where LHS ne '' and NAME ne '' and Node ne '';
1338572    run;
1338573    proc datasets lib=work nolist;
1338574    delete _tempAll;
1338575    run;
1338576    %let dsid = %sysfunc(open(_temp&id));
1338577    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1338578    %let dsid = %sysfunc(close(&dsid));
1338579    %if ^&&nobs&id %then %do;
1338580    proc datasets lib=work nolist;
1338581    delete _temp&id;
1338582    run;
1338583    quit;
1338584    %end;
1338585    %else %do;
1338586    %let scoreFlag&id = 1;
1338587    data _temp&id;
1338588    set _temp&id;
1338589    where LHS ne NAME and node ne '';
1338590    run;
1338591    %let dsid = %sysfunc(open(_temp&id));
1338592    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1338593    %let dsid = %sysfunc(close(&dsid));
1338594    %if ^&&nobs&id %then %do;
1338595    proc datasets lib=work nolist;
1338596    delete _temp&id;
1338597    run;
1338598    quit;
1338599    %end;
1338600    %else %do;
1338601    proc sort data=_temp&id nodupkey;
1338602    by LHS NAME;
1338603    run;
1338604    %end;
1338605    %end;
1338606    %end;
1338607    %end;
1338608    %mend varDept;
1338609    %macro optCode(outdata=fcmpdata);
1338610    %global fcmpStart;
1338611    %let fcmpStart = 0;
1338612    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1338613    %let NumNodes=9;
1338614    %do k=1 %to &NumNodes;
1338615    %vardept(fcmpdata=&outdata, id=&k);
1338616    %end;
1338617    %mend optCode;
1338618    %optcode(outData=EMWS8.Ensmbl_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.18 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1338619    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1338620    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1338621    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1338622    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1338623    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1338624    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1338625    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1338626    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1338627    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1338628    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1338628  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

1338629    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1338630    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1338631    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1338632    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1338633    filename _pref
1338633  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural2\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural2\EMPUBLISHSCORE.sas";
1338634    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1338635    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural2\EMPUBLISHSCORE.sas.
1338636   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1338637   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1338638   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1338639   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1338640   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1338641   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1338642   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1338643   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1338644   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1338645   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1338646   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1338647   +LENGTH _WARN_ $4
1338648   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1338649   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1338650   +
1338651   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1338652   +
1338653   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1338654   +
1338655   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1338656   +
1338657   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1338658   +
1338659   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1338660   +
1338661   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1338662   +
1338663   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1338664   +
1338665   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1338666   +
1338667   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1338668   +
1338669   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1338670   +
1338671   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1338672   +
1338673   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1338674   +
1338675   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1338676   +
1338677   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1338678   +
1338679   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1338680   +
1338681   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1338682   +
1338683   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1338684   +
1338685   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1338686   +
1338687   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1338688   +
1338689   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1338690   +
1338691   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1338692   +
1338693   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1338694   +
1338695   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1338696   +
1338697   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1338698   +
1338699   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1338700   +
1338701   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1338702   +
1338703   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1338704   +
1338705   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1338706   +
1338707   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1338708   +
1338709   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1338710   +
1338711   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1338712   +
1338713   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1338714   +
1338715   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1338716   +
1338717   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1338718   +
1338719   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1338720   +
1338721   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1338722   +
1338723   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1338724   +
1338725   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1338726   +
1338727   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1338728   +
1338729   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1338730   +
1338731   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1338732   +
1338733   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1338734   +
1338735   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1338736   +
1338737   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1338738   +
1338739   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1338740   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1338741   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1338742   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1338743   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1338744   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1338745   +end;
MPRINT(EM_DIAGRAM):   end;
1338746   +else do;
MPRINT(EM_DIAGRAM):   else do;
1338747   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1338748   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1338749   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1338750   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1338751   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1338752   +   end;
MPRINT(EM_DIAGRAM):   end;
1338753   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1338754   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1338755   +   end;
MPRINT(EM_DIAGRAM):   end;
1338756   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1338757   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1338758   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1338759   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1338760   +   end;
MPRINT(EM_DIAGRAM):   end;
1338761   +end;
MPRINT(EM_DIAGRAM):   end;
1338762   +
1338763   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1338764   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1338765   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1338766   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1338767   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1338768   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1338769   +end;
MPRINT(EM_DIAGRAM):   end;
1338770   +else do;
MPRINT(EM_DIAGRAM):   else do;
1338771   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1338772   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1338773   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1338774   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1338775   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1338776   +   end;
MPRINT(EM_DIAGRAM):   end;
1338777   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1338778   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1338779   +   end;
MPRINT(EM_DIAGRAM):   end;
1338780   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1338781   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1338782   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1338783   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1338784   +   end;
MPRINT(EM_DIAGRAM):   end;
1338785   +end;
MPRINT(EM_DIAGRAM):   end;
1338786   +
1338787   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1338788   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1338789   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1338790   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1338791   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1338792   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1338793   +end;
MPRINT(EM_DIAGRAM):   end;
1338794   +else do;
MPRINT(EM_DIAGRAM):   else do;
1338795   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1338796   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1338797   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1338798   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1338799   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1338800   +   end;
MPRINT(EM_DIAGRAM):   end;
1338801   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1338802   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1338803   +   end;
MPRINT(EM_DIAGRAM):   end;
1338804   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1338805   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1338806   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1338807   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1338808   +   end;
MPRINT(EM_DIAGRAM):   end;
1338809   +end;
MPRINT(EM_DIAGRAM):   end;
1338810   +
1338811   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1338812   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1338813   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1338814   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1338815   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1338816   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1338817   +end;
MPRINT(EM_DIAGRAM):   end;
1338818   +else do;
MPRINT(EM_DIAGRAM):   else do;
1338819   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1338820   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1338821   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1338822   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1338823   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1338824   +   end;
MPRINT(EM_DIAGRAM):   end;
1338825   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1338826   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1338827   +   end;
MPRINT(EM_DIAGRAM):   end;
1338828   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1338829   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1338830   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1338831   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1338832   +   end;
MPRINT(EM_DIAGRAM):   end;
1338833   +end;
MPRINT(EM_DIAGRAM):   end;
1338834   +
1338835   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1338836   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1338837   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1338838   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1338839   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1338840   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1338841   +end;
MPRINT(EM_DIAGRAM):   end;
1338842   +else do;
MPRINT(EM_DIAGRAM):   else do;
1338843   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1338844   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1338845   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1338846   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1338847   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1338848   +   end;
MPRINT(EM_DIAGRAM):   end;
1338849   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1338850   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1338851   +   end;
MPRINT(EM_DIAGRAM):   end;
1338852   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1338853   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1338854   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1338855   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1338856   +   end;
MPRINT(EM_DIAGRAM):   end;
1338857   +end;
MPRINT(EM_DIAGRAM):   end;
1338858   +
1338859   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1338860   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1338861   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1338862   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1338863   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1338864   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1338865   +end;
MPRINT(EM_DIAGRAM):   end;
1338866   +else do;
MPRINT(EM_DIAGRAM):   else do;
1338867   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1338868   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1338869   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1338870   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1338871   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1338872   +   end;
MPRINT(EM_DIAGRAM):   end;
1338873   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1338874   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1338875   +   end;
MPRINT(EM_DIAGRAM):   end;
1338876   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1338877   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1338878   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1338879   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1338880   +   end;
MPRINT(EM_DIAGRAM):   end;
1338881   +end;
MPRINT(EM_DIAGRAM):   end;
1338882   +
1338883   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1338884   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1338885   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1338886   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1338887   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1338888   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1338889   +end;
MPRINT(EM_DIAGRAM):   end;
1338890   +else do;
MPRINT(EM_DIAGRAM):   else do;
1338891   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1338892   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1338893   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1338894   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1338895   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1338896   +   end;
MPRINT(EM_DIAGRAM):   end;
1338897   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1338898   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1338899   +   end;
MPRINT(EM_DIAGRAM):   end;
1338900   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1338901   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1338902   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1338903   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1338904   +   end;
MPRINT(EM_DIAGRAM):   end;
1338905   +end;
MPRINT(EM_DIAGRAM):   end;
1338906   +
1338907   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1338908   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1338909   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1338910   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1338911   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1338912   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1338913   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1338914   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1338915   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1338916   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1338917   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1338918   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1338919   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1338920   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1338921   +end;
MPRINT(EM_DIAGRAM):   end;
1338922   +else do;
MPRINT(EM_DIAGRAM):   else do;
1338923   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1338924   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1338925   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1338926   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1338927   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1338928   +   end;
MPRINT(EM_DIAGRAM):   end;
1338929   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1338930   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1338931   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1338932   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1338933   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1338934   +   end;
MPRINT(EM_DIAGRAM):   end;
1338935   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1338936   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1338937   +   end;
MPRINT(EM_DIAGRAM):   end;
1338938   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1338939   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1338940   +   end;
MPRINT(EM_DIAGRAM):   end;
1338941   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1338942   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1338943   +   end;
MPRINT(EM_DIAGRAM):   end;
1338944   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1338945   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1338946   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1338947   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1338948   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1338949   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1338950   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1338951   +   end;
MPRINT(EM_DIAGRAM):   end;
1338952   +end;
MPRINT(EM_DIAGRAM):   end;
1338953   +
1338954   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1338955   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1338956   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1338957   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1338958   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1338959   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1338960   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1338961   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1338962   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1338963   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1338964   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1338965   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1338966   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1338967   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1338968   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1338969   +end;
MPRINT(EM_DIAGRAM):   end;
1338970   +else do;
MPRINT(EM_DIAGRAM):   else do;
1338971   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1338972   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1338973   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1338974   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1338975   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1338976   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1338977   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1338978   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1338979   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1338980   +         end;
MPRINT(EM_DIAGRAM):   end;
1338981   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1338982   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1338983   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1338984   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1338985   +            end;
MPRINT(EM_DIAGRAM):   end;
1338986   +         end;
MPRINT(EM_DIAGRAM):   end;
1338987   +      end;
MPRINT(EM_DIAGRAM):   end;
1338988   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1338989   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1338990   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1338991   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1338992   +         end;
MPRINT(EM_DIAGRAM):   end;
1338993   +      end;
MPRINT(EM_DIAGRAM):   end;
1338994   +   end;
MPRINT(EM_DIAGRAM):   end;
1338995   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1338996   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1338997   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1338998   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1338999   +      end;
MPRINT(EM_DIAGRAM):   end;
1339000   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1339001   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1339002   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1339003   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1339004   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1339005   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1339006   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1339007   +         end;
MPRINT(EM_DIAGRAM):   end;
1339008   +      end;
MPRINT(EM_DIAGRAM):   end;
1339009   +   end;
MPRINT(EM_DIAGRAM):   end;
1339010   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1339011   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1339012   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1339013   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1339014   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1339015   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1339016   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1339017   +   end;
MPRINT(EM_DIAGRAM):   end;
1339018   +end;
MPRINT(EM_DIAGRAM):   end;
1339019   +
1339020   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1339021   +*** Checking missing input Interval
1339022   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1339023   +
1339024   +IF NMISS(
1339025   +   AcceptedCmpTotal ,
1339026   +   Age ,
1339027   +   Frq ,
1339028   +   Income ,
1339029   +   Kidhome ,
1339030   +   Mnt ,
1339031   +   MntFishProducts ,
1339032   +   MntFruits ,
1339033   +   MntGoldProds ,
1339034   +   MntMeatProducts ,
1339035   +   MntSweetProducts ,
1339036   +   MntWines ,
1339037   +   MonthsAsCustomer ,
1339038   +   NumCatalogPurchases ,
1339039   +   NumDealsPurchases ,
1339040   +   NumDistPurchases ,
1339041   +   NumStorePurchases ,
1339042   +   NumWebPurchases ,
1339043   +   NumWebVisitsMonth ,
1339044   +   RFMstat ,
1339045   +   RMntFrq ,
1339046   +   Recency ,
1339047   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1339048   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1339049   +
1339050   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1339051   +END;
MPRINT(EM_DIAGRAM):   END;
1339052   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1339053   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1339054   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1339055   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1339056   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1339057   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1339058   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1339059   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1339060   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1339061   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1339062   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1339063   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1339064   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1339065   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1339066   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1339067   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1339068   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1339069   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1339070   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1339071   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1339072   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1339073   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1339074   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1339075   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1339076   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1339077   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1339078   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1339079   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1339080   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1339081   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1339082   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1339083   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1339084   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1339085   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1339086   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1339087   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1339088   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1339089   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1339090   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1339091   +END;
MPRINT(EM_DIAGRAM):   END;
1339092   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1339093   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1339094   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1339095   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1339096   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1339097   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1339098   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1339099   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1339100   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1339101   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1339102   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1339103   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1339104   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1339105   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1339106   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1339107   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1339108   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1339109   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1339110   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1339111   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1339112   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1339113   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1339114   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1339115   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1339116   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1339117   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1339118   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1339119   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1339120   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1339121   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1339122   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1339123   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1339124   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1339125   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1339126   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1339127   +   ELSE S_NumCatalogPurchases
1339128   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1339129   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1339130   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1339131   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1339132   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1339133   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1339134   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1339135   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1339136   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1339137   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1339138   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1339139   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1339140   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1339141   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1339142   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1339143   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1339144   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1339145   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1339146   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1339147   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1339148   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1339149   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1339150   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1339151   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1339152   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1339153   +END;
MPRINT(EM_DIAGRAM):   END;
1339154   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1339155   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1339156   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1339157   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1339158   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1339159   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1339160   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1339161   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1339162   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1339163   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1339164   +   H11  =     0.29712286997834 * S_AcceptedCmpTotal  +     0.15682927566787 *
1339165   +        S_Age  +     0.23365791685845 * S_Frq  +     1.19070222818862 *
1339166   +        S_Income  +    -1.07652572934003 * S_Kidhome
1339167   +          +    -0.33332653884544 * S_Mnt  +     -0.1196291817134 *
1339168   +        S_MntFishProducts  +    -0.05693834390907 * S_MntFruits
1339169   +          +    -0.04894091348569 * S_MntGoldProds  +     0.36709988209272 *
1339170   +        S_MntMeatProducts  +    -0.21921869790385 * S_MntSweetProducts
1339171   +          +    -0.60642239904043 * S_MntWines  +     0.00269864537349 *
1339172   +        S_MonthsAsCustomer  +     0.54303346499176 * S_NumCatalogPurchases
1339173   +          +     0.34217069579861 * S_NumDealsPurchases
1339174   +          +      0.7126550962469 * S_NumDistPurchases
1339175   +          +     0.05810128676346 * S_NumStorePurchases
1339176   +          +     -0.1974592461824 * S_NumWebPurchases
1339177   +          +     1.33855646568468 * S_NumWebVisitsMonth
1339178   +          +    -0.00867312774072 * S_RFMstat  +     1.16131106250766 *
1339179   +        S_RMntFrq  +      -1.575765175986 * S_Recency
1339180   +          +    -0.86597551041595 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.29712286997834 * S_AcceptedCmpTotal + 0.15682927566787 * S_Age + 
0.23365791685845 * S_Frq + 1.19070222818862 * S_Income + -1.07652572934003 * S_Kidhome + 
-0.33332653884544 * S_Mnt + -0.1196291817134 * S_MntFishProducts + -0.05693834390907 * 
S_MntFruits + -0.04894091348569 * S_MntGoldProds + 0.36709988209272 * S_MntMeatProducts + 
-0.21921869790385 * S_MntSweetProducts + -0.60642239904043 * S_MntWines + 0.00269864537349 * 
S_MonthsAsCustomer + 0.54303346499176 * S_NumCatalogPurchases + 0.34217069579861 * 
S_NumDealsPurchases + 0.7126550962469 * S_NumDistPurchases + 0.05810128676346 * 
S_NumStorePurchases + -0.1974592461824 * S_NumWebPurchases + 1.33855646568468 * 
S_NumWebVisitsMonth + -0.00867312774072 * S_RFMstat + 1.16131106250766 * S_RMntFrq + 
-1.575765175986 * S_Recency + -0.86597551041595 * S_Teenhome ;
1339181   +   H12  =     0.31665243267047 * S_AcceptedCmpTotal  +    -0.09124940821631 *
1339182   +        S_Age  +    -0.16072737746014 * S_Frq  +      0.1038384650026 *
1339183   +        S_Income  +    -0.00280376715329 * S_Kidhome
1339184   +          +    -0.62213528239612 * S_Mnt  +    -0.04305309942503 *
1339185   +        S_MntFishProducts  +    -0.24959132224402 * S_MntFruits
1339186   +          +    -0.01371148610726 * S_MntGoldProds  +     0.62558247205775 *
1339187   +        S_MntMeatProducts  +    -0.10439524833374 * S_MntSweetProducts
1339188   +          +     -1.1377432724423 * S_MntWines  +    -0.04956864038898 *
1339189   +        S_MonthsAsCustomer  +     0.66989184148268 * S_NumCatalogPurchases
1339190   +          +     0.45694604326279 * S_NumDealsPurchases
1339191   +          +      0.1555582457419 * S_NumDistPurchases
1339192   +          +     -0.3340268446813 * S_NumStorePurchases
1339193   +          +    -0.39316217683753 * S_NumWebPurchases
1339194   +          +     0.52431656748667 * S_NumWebVisitsMonth
1339195   +          +     0.20727402314383 * S_RFMstat  +     0.70433803286711 *
1339196   +        S_RMntFrq  +    -0.55909695066219 * S_Recency
1339197   +          +    -0.02589465113799 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.31665243267047 * S_AcceptedCmpTotal + -0.09124940821631 * S_Age 
+ -0.16072737746014 * S_Frq + 0.1038384650026 * S_Income + -0.00280376715329 * S_Kidhome + 
-0.62213528239612 * S_Mnt + -0.04305309942503 * S_MntFishProducts + -0.24959132224402 * 
S_MntFruits + -0.01371148610726 * S_MntGoldProds + 0.62558247205775 * S_MntMeatProducts + 
-0.10439524833374 * S_MntSweetProducts + -1.1377432724423 * S_MntWines + -0.04956864038898 * 
S_MonthsAsCustomer + 0.66989184148268 * S_NumCatalogPurchases + 0.45694604326279 * 
S_NumDealsPurchases + 0.1555582457419 * S_NumDistPurchases + -0.3340268446813 * 
S_NumStorePurchases + -0.39316217683753 * S_NumWebPurchases + 0.52431656748667 * 
S_NumWebVisitsMonth + 0.20727402314383 * S_RFMstat + 0.70433803286711 * S_RMntFrq + 
-0.55909695066219 * S_Recency + -0.02589465113799 * S_Teenhome ;
1339198   +   H11  = H11  +     -0.2601649080458 * AcceptedCmp10
1339199   +          +    -0.69535266799466 * AcceptedCmp20  +    -0.58039838698106 *
1339200   +        AcceptedCmp30  +    -0.51789867388634 * AcceptedCmp40
1339201   +          +    -0.28577801943332 * AcceptedCmp50  +    -0.24224458808871 *
1339202   +        Complain0  +     0.22760495991556 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.2601649080458 * AcceptedCmp10 + -0.69535266799466 * 
AcceptedCmp20 + -0.58039838698106 * AcceptedCmp30 + -0.51789867388634 * AcceptedCmp40 + 
-0.28577801943332 * AcceptedCmp50 + -0.24224458808871 * Complain0 + 0.22760495991556 * 
HigherEducationBinary0 ;
1339203   +   H12  = H12  +     -0.3622176384122 * AcceptedCmp10
1339204   +          +    -0.33944386002412 * AcceptedCmp20  +    -0.02687563797332 *
1339205   +        AcceptedCmp30  +     0.00421902079715 * AcceptedCmp40
1339206   +          +    -0.12328105393668 * AcceptedCmp50  +    -0.06053338147955 *
1339207   +        Complain0  +    -0.17559776257445 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.3622176384122 * AcceptedCmp10 + -0.33944386002412 * 
AcceptedCmp20 + -0.02687563797332 * AcceptedCmp30 + 0.00421902079715 * AcceptedCmp40 + 
-0.12328105393668 * AcceptedCmp50 + -0.06053338147955 * Complain0 + -0.17559776257445 * 
HigherEducationBinary0 ;
1339208   +   H11  = H11  +     0.04102597460729 * Education2n_Cycle
1339209   +          +     0.10315751459359 * EducationBasic  +    -0.09694950452171 *
1339210   +        EducationGraduation  +    -0.33205513178262 * EducationMaster
1339211   +          +     0.46676686502466 * Marital_StatusDivorced
1339212   +          +    -1.27760562209616 * Marital_StatusMarried
1339213   +          +     1.31419230639567 * Marital_StatusSingle
1339214   +          +    -0.94615367007608 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04102597460729 * Education2n_Cycle + 0.10315751459359 * 
EducationBasic + -0.09694950452171 * EducationGraduation + -0.33205513178262 * EducationMaster 
+ 0.46676686502466 * Marital_StatusDivorced + -1.27760562209616 * Marital_StatusMarried + 
1.31419230639567 * Marital_StatusSingle + -0.94615367007608 * Marital_StatusTogether ;
1339215   +   H12  = H12  +     0.04140711456188 * Education2n_Cycle
1339216   +          +     0.00023669301751 * EducationBasic  +      0.0217486986892 *
1339217   +        EducationGraduation  +     0.00743064542151 * EducationMaster
1339218   +          +     0.07434297903639 * Marital_StatusDivorced
1339219   +          +     0.00294493836325 * Marital_StatusMarried
1339220   +          +    -0.00745595849422 * Marital_StatusSingle
1339221   +          +    -0.02426182934399 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04140711456188 * Education2n_Cycle + 0.00023669301751 * 
EducationBasic + 0.0217486986892 * EducationGraduation + 0.00743064542151 * EducationMaster + 
0.07434297903639 * Marital_StatusDivorced + 0.00294493836325 * Marital_StatusMarried + 
-0.00745595849422 * Marital_StatusSingle + -0.02426182934399 * Marital_StatusTogether ;
1339222   +   H11  =    -2.08476947519933 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.08476947519933 + H11 ;
1339223   +   H12  =    -0.67000030345457 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.67000030345457 + H12 ;
1339224   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1339225   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1339226   +END;
MPRINT(EM_DIAGRAM):   END;
1339227   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1339228   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1339229   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1339230   +END;
MPRINT(EM_DIAGRAM):   END;
1339231   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1339232   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1339233   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1339234   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1339235   +   P_DepVar1  =     5.63200889678434 * H11  +     6.13502549580323 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.63200889678434 * H11 + 6.13502549580323 * H12 ;
1339236   +   P_DepVar1  =     3.20850695873198 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.20850695873198 + P_DepVar1 ;
1339237   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1339238   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1339239   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1339240   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1339241   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1339242   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1339243   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1339244   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1339245   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1339246   +END;
MPRINT(EM_DIAGRAM):   END;
1339247   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1339248   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1339249   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1339250   +END;
MPRINT(EM_DIAGRAM):   END;
1339251   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1339252   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1339253   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1339254   +END;
MPRINT(EM_DIAGRAM):   END;
1339255   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1339256   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1339257   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1339258   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1339259   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1339260   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1339261   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1339262   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1339263   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1339264   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1339265   +END;
MPRINT(EM_DIAGRAM):   END;
1339266   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1339267   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1339268   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1339269   +drop
1339270   +H11
1339271   +H12
1339272   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
1339273   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1339274    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1339275    quit;
1339276    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1339277    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1339278    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1339279    retain ID 2 Node "Neural2";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural2";
1339280    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1339281    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2180 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2180 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1339282    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1339283    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1339284    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2180 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2180 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1339285    proc sort data=EMWS8.Neural2_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural2_variableset out=_temp2(keep=NAME CREATOR);
1339286    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1339287    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL2_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1339288    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1339289    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1339290    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1339291    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1339292    proc contents data=EMWS8.Neural2_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural2_train out=_meta(keep=NAME) noprint;
1339293    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1339294    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1339295    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1339296    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1339297    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1339298    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1339299    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1339300    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1339301    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1339302    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1339302  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1335 rows and 5 columns.

1339303    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1339304    proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
1339305    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1335 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL_FCMP has 1335 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1339306    filename _pref
1339306  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1339307    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1339308    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1339309   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1339310   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1339311   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1339312   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1339313   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1339314   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1339315    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1339316    quit;
1339317    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1339318    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1339319    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1339320    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1339321    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1339322    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1339323    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1339324    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1339325    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1339326    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1339327    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1339328    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1339329    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1339330    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1339331    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1339332    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1339333    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1339334    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1339335    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1339336    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1339337    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1339338    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1339339    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1339340    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1339341    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1339342    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1339343    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1339343  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1339344    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1339345    proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
1339346    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL_FCMP has 1339 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1339347    filename _pref
1339347  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1339348    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1339349    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1339350   +
1339351   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1339352   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1339352  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1339353   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1339354   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1339355   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1339356   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1339357   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1339358    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1339359    quit;
1339360    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1339361    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1339362    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1339363    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1339364    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1339365    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1339366    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1339367    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1339368    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1339369    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1339370    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1339371    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1339372    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1339373    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1339374    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1339375    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1339376    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1339377    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1339378    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1339379    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1339380    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1339381    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1339382    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1339383    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1339384    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1339385    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1339386    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1339386  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1339387    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1339388    proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
1339389    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL_FCMP has 1378 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1339390    filename _pref
1339390  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1339391    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1339392    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1339393   +
1339394   +
1339395   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1339396   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1339397   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1339398   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1339399   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1339400   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1339401   +
1339402   +
1339403   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1339404   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1339405   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1339406   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1339407   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1339408   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1339409   +
1339410   +
1339411   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1339412   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1339413   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1339414   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1339415   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1339416   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1339417   +
1339418   +
1339419   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1339420   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1339421   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1339422   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1339423   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1339424   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1339425   +
1339426   +
1339427   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1339428   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1339429   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1339430   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1339431   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1339432   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1339433   +
1339434   +
1339435   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1339436   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1339437   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1339438   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1339439   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1339440   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1339441   +
1339442   +
1339443   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1339444   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1339445   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1339446   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1339447   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1339448   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1339449   +
1339450   +
1339451   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1339452   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1339453   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1339454   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1339455   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1339456   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1339457   +if
1339458   +_FILTERNORM1 not in ( '.')
1339459   + and
1339460   +_FILTERNORM2 not in ( '.')
1339461   + and
1339462   +_FILTERNORM3 not in ( '.')
1339463   + and
1339464   +_FILTERNORM4 not in ( '.')
1339465   + and
1339466   +_FILTERNORM5 not in ( '.')
1339467   + and
1339468   +_FILTERNORM6 not in ( '.')
1339469   + and
1339470   +_FILTERNORM7 not in ( ' ')
1339471   + and
1339472   +_FILTERNORM8 not in ( ' ')
1339473   +and
1339474   +( Dt_Customer ne .)
1339475   +and ( Income ne . and (Income<=107000))
1339476   +and ( Kidhome ne .)
1339477   +and ( MntFishProducts ne .)
1339478   +and ( MntFruits ne .)
1339479   +and ( MntGoldProds ne .)
1339480   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1339481   +and ( MntSweetProducts ne .)
1339482   +and ( MntWines ne .)
1339483   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1339484   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1339485   +and ( NumStorePurchases ne .)
1339486   +and ( NumWebPurchases ne .)
1339487   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1339488   +and ( Recency ne .)
1339489   +and ( Teenhome ne .)
1339490   +and ( Year_Birth ne .)
1339491   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1339492   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1339493   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1339494   +end;
MPRINT(EM_DIAGRAM):   end;
1339495   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1339496   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1339497    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1339498    quit;
1339499    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1339500    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1339501    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1339502    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1339503    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1339504    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1339505    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1339506    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1339507    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1339508    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1339509    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1339510    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1339511    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1339512    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1339513    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1339514    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1339515    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1339516    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1339517    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1339518    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1339519    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1339520    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1339521    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1339522    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1339523    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1339524    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1339525    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1339525  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1339526    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1339527    proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
1339528    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL_FCMP has 1444 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1339529    %macro varDept(fcmpdata=,id=);
1339530    %global nobs&id scoreFlag&id;
1339531    %let scoreFlag&id = 0;
1339532    %if &id=1 or ^&fcmpStart %then %do;
1339533    proc sort data=&fcmpdata out=_temp&id nodupkey;
1339534    by NAME;
1339535    where id=&id and LHS in( %let j=1;
1339536    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1339537    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1339538    "&var" %let j = %eval(&j+1);
1339539    %end;
1339540    );
1339541    run;
1339542    %let dsid = %sysfunc(open(_temp&id));
1339543    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1339544    %let dsid = %sysfunc(close(&dsid));
1339545    %if &&nobs&id %then %do;
1339546    %let scoreFlag&id = 1;
1339547    %let fcmpStart = 1;
1339548    %end;
1339549    %else %let fcmpStart = 0;
1339550    %end;
1339551    %else %do;
1339552    proc sort data=&fcmpdata out=_tempid;
1339553    where id=&id;
1339554    by LHS;
1339555    run;
1339556    %let dsid = %sysfunc(open(_tempid));
1339557    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1339558    %let dsid = %sysfunc(close(&dsid));
1339559    %if ^&&nobs&id %then %do;
1339560    proc datasets lib=work nolist;
1339561    delete _tempid;
1339562    run;
1339563    quit;
1339564    %end;
1339565    %else %do;
1339566    data _tempAll;
1339567    set %let j=%eval(&id-1);
1339568    %do x=1 %to &j;
1339569    %if &&nobs&x %then %do;
1339570    _temp&x %end;
1339571    %end;
1339572    ;
1339573    run;
1339574    proc sql;
1339575    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1339575  ! work._tempid p2 where p.name=p2.lhs;
1339576    quit;
1339577    data _temp&id;
1339578    set _temp&id;
1339579    where LHS ne '' and NAME ne '' and Node ne '';
1339580    run;
1339581    proc datasets lib=work nolist;
1339582    delete _tempAll;
1339583    run;
1339584    %let dsid = %sysfunc(open(_temp&id));
1339585    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1339586    %let dsid = %sysfunc(close(&dsid));
1339587    %if ^&&nobs&id %then %do;
1339588    proc datasets lib=work nolist;
1339589    delete _temp&id;
1339590    run;
1339591    quit;
1339592    %end;
1339593    %else %do;
1339594    %let scoreFlag&id = 1;
1339595    data _temp&id;
1339596    set _temp&id;
1339597    where LHS ne NAME and node ne '';
1339598    run;
1339599    %let dsid = %sysfunc(open(_temp&id));
1339600    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1339601    %let dsid = %sysfunc(close(&dsid));
1339602    %if ^&&nobs&id %then %do;
1339603    proc datasets lib=work nolist;
1339604    delete _temp&id;
1339605    run;
1339606    quit;
1339607    %end;
1339608    %else %do;
1339609    proc sort data=_temp&id nodupkey;
1339610    by LHS NAME;
1339611    run;
1339612    %end;
1339613    %end;
1339614    %end;
1339615    %end;
1339616    %mend varDept;
1339617    %macro optCode(outdata=fcmpdata);
1339618    %global fcmpStart;
1339619    %let fcmpStart = 0;
1339620    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1339621    %let NumNodes=9;
1339622    %do k=1 %to &NumNodes;
1339623    %vardept(fcmpdata=&outdata, id=&k);
1339624    %end;
1339625    %mend optCode;
1339626    %optcode(outData=EMWS8.Ensmbl_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1339627    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1339628    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1339629    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1339630    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1339631    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1339632    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1339633    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1339634    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1339635    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1339636    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1339636  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

1339637    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1339638    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1339639    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1339640    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1339641    filename _pref
1339641  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMPUBLISHSCORE.sas";
1339642    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1339643    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMPUBLISHSCORE.sas.
1339644   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1339645   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1339646   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1339647   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1339648   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1339649   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1339650   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1339651   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1339652   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1339653   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1339654   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1339655   +LENGTH _WARN_ $4
1339656   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1339657   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1339658   +
1339659   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1339660   +
1339661   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1339662   +
1339663   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1339664   +
1339665   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1339666   +
1339667   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1339668   +
1339669   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1339670   +
1339671   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1339672   +
1339673   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1339674   +
1339675   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1339676   +
1339677   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1339678   +
1339679   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1339680   +
1339681   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1339682   +
1339683   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1339684   +
1339685   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1339686   +
1339687   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1339688   +
1339689   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1339690   +
1339691   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1339692   +
1339693   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1339694   +
1339695   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1339696   +
1339697   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1339698   +
1339699   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1339700   +
1339701   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1339702   +
1339703   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1339704   +
1339705   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1339706   +
1339707   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1339708   +
1339709   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1339710   +
1339711   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1339712   +
1339713   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1339714   +
1339715   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1339716   +
1339717   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1339718   +
1339719   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1339720   +
1339721   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1339722   +
1339723   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1339724   +
1339725   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1339726   +
1339727   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1339728   +
1339729   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1339730   +
1339731   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1339732   +
1339733   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1339734   +
1339735   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1339736   +
1339737   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1339738   +
1339739   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1339740   +
1339741   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1339742   +
1339743   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1339744   +
1339745   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1339746   +
1339747   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1339748   +
1339749   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1339750   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1339751   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1339752   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1339753   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1339754   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1339755   +end;
MPRINT(EM_DIAGRAM):   end;
1339756   +else do;
MPRINT(EM_DIAGRAM):   else do;
1339757   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1339758   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1339759   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1339760   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1339761   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1339762   +   end;
MPRINT(EM_DIAGRAM):   end;
1339763   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1339764   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1339765   +   end;
MPRINT(EM_DIAGRAM):   end;
1339766   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1339767   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1339768   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1339769   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1339770   +   end;
MPRINT(EM_DIAGRAM):   end;
1339771   +end;
MPRINT(EM_DIAGRAM):   end;
1339772   +
1339773   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1339774   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1339775   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1339776   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1339777   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1339778   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1339779   +end;
MPRINT(EM_DIAGRAM):   end;
1339780   +else do;
MPRINT(EM_DIAGRAM):   else do;
1339781   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1339782   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1339783   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1339784   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1339785   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1339786   +   end;
MPRINT(EM_DIAGRAM):   end;
1339787   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1339788   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1339789   +   end;
MPRINT(EM_DIAGRAM):   end;
1339790   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1339791   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1339792   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1339793   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1339794   +   end;
MPRINT(EM_DIAGRAM):   end;
1339795   +end;
MPRINT(EM_DIAGRAM):   end;
1339796   +
1339797   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1339798   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1339799   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1339800   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1339801   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1339802   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1339803   +end;
MPRINT(EM_DIAGRAM):   end;
1339804   +else do;
MPRINT(EM_DIAGRAM):   else do;
1339805   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1339806   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1339807   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1339808   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1339809   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1339810   +   end;
MPRINT(EM_DIAGRAM):   end;
1339811   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1339812   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1339813   +   end;
MPRINT(EM_DIAGRAM):   end;
1339814   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1339815   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1339816   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1339817   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1339818   +   end;
MPRINT(EM_DIAGRAM):   end;
1339819   +end;
MPRINT(EM_DIAGRAM):   end;
1339820   +
1339821   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1339822   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1339823   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1339824   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1339825   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1339826   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1339827   +end;
MPRINT(EM_DIAGRAM):   end;
1339828   +else do;
MPRINT(EM_DIAGRAM):   else do;
1339829   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1339830   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1339831   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1339832   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1339833   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1339834   +   end;
MPRINT(EM_DIAGRAM):   end;
1339835   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1339836   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1339837   +   end;
MPRINT(EM_DIAGRAM):   end;
1339838   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1339839   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1339840   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1339841   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1339842   +   end;
MPRINT(EM_DIAGRAM):   end;
1339843   +end;
MPRINT(EM_DIAGRAM):   end;
1339844   +
1339845   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1339846   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1339847   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1339848   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1339849   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1339850   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1339851   +end;
MPRINT(EM_DIAGRAM):   end;
1339852   +else do;
MPRINT(EM_DIAGRAM):   else do;
1339853   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1339854   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1339855   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1339856   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1339857   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1339858   +   end;
MPRINT(EM_DIAGRAM):   end;
1339859   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1339860   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1339861   +   end;
MPRINT(EM_DIAGRAM):   end;
1339862   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1339863   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1339864   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1339865   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1339866   +   end;
MPRINT(EM_DIAGRAM):   end;
1339867   +end;
MPRINT(EM_DIAGRAM):   end;
1339868   +
1339869   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1339870   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1339871   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1339872   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1339873   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1339874   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1339875   +end;
MPRINT(EM_DIAGRAM):   end;
1339876   +else do;
MPRINT(EM_DIAGRAM):   else do;
1339877   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1339878   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1339879   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1339880   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1339881   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1339882   +   end;
MPRINT(EM_DIAGRAM):   end;
1339883   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1339884   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1339885   +   end;
MPRINT(EM_DIAGRAM):   end;
1339886   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1339887   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1339888   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1339889   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1339890   +   end;
MPRINT(EM_DIAGRAM):   end;
1339891   +end;
MPRINT(EM_DIAGRAM):   end;
1339892   +
1339893   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1339894   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1339895   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1339896   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1339897   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1339898   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1339899   +end;
MPRINT(EM_DIAGRAM):   end;
1339900   +else do;
MPRINT(EM_DIAGRAM):   else do;
1339901   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1339902   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1339903   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1339904   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1339905   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1339906   +   end;
MPRINT(EM_DIAGRAM):   end;
1339907   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1339908   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1339909   +   end;
MPRINT(EM_DIAGRAM):   end;
1339910   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1339911   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1339912   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1339913   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1339914   +   end;
MPRINT(EM_DIAGRAM):   end;
1339915   +end;
MPRINT(EM_DIAGRAM):   end;
1339916   +
1339917   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1339918   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1339919   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1339920   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1339921   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1339922   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1339923   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1339924   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1339925   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1339926   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1339927   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1339928   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1339929   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1339930   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1339931   +end;
MPRINT(EM_DIAGRAM):   end;
1339932   +else do;
MPRINT(EM_DIAGRAM):   else do;
1339933   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1339934   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1339935   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1339936   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1339937   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1339938   +   end;
MPRINT(EM_DIAGRAM):   end;
1339939   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1339940   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1339941   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1339942   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1339943   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1339944   +   end;
MPRINT(EM_DIAGRAM):   end;
1339945   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1339946   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1339947   +   end;
MPRINT(EM_DIAGRAM):   end;
1339948   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1339949   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1339950   +   end;
MPRINT(EM_DIAGRAM):   end;
1339951   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1339952   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1339953   +   end;
MPRINT(EM_DIAGRAM):   end;
1339954   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1339955   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1339956   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1339957   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1339958   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1339959   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1339960   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1339961   +   end;
MPRINT(EM_DIAGRAM):   end;
1339962   +end;
MPRINT(EM_DIAGRAM):   end;
1339963   +
1339964   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1339965   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1339966   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1339967   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1339968   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1339969   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1339970   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1339971   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1339972   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1339973   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1339974   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1339975   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1339976   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1339977   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1339978   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1339979   +end;
MPRINT(EM_DIAGRAM):   end;
1339980   +else do;
MPRINT(EM_DIAGRAM):   else do;
1339981   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1339982   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1339983   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1339984   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1339985   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1339986   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1339987   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1339988   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1339989   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1339990   +         end;
MPRINT(EM_DIAGRAM):   end;
1339991   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1339992   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1339993   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1339994   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1339995   +            end;
MPRINT(EM_DIAGRAM):   end;
1339996   +         end;
MPRINT(EM_DIAGRAM):   end;
1339997   +      end;
MPRINT(EM_DIAGRAM):   end;
1339998   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1339999   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1340000   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1340001   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1340002   +         end;
MPRINT(EM_DIAGRAM):   end;
1340003   +      end;
MPRINT(EM_DIAGRAM):   end;
1340004   +   end;
MPRINT(EM_DIAGRAM):   end;
1340005   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1340006   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1340007   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1340008   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1340009   +      end;
MPRINT(EM_DIAGRAM):   end;
1340010   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1340011   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1340012   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1340013   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1340014   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1340015   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1340016   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1340017   +         end;
MPRINT(EM_DIAGRAM):   end;
1340018   +      end;
MPRINT(EM_DIAGRAM):   end;
1340019   +   end;
MPRINT(EM_DIAGRAM):   end;
1340020   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1340021   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1340022   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1340023   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1340024   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1340025   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1340026   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1340027   +   end;
MPRINT(EM_DIAGRAM):   end;
1340028   +end;
MPRINT(EM_DIAGRAM):   end;
1340029   +
1340030   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1340031   +*** Checking missing input Interval
1340032   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1340033   +
1340034   +IF NMISS(
1340035   +   AcceptedCmpTotal ,
1340036   +   Age ,
1340037   +   Frq ,
1340038   +   Income ,
1340039   +   Kidhome ,
1340040   +   Mnt ,
1340041   +   MntFishProducts ,
1340042   +   MntFruits ,
1340043   +   MntGoldProds ,
1340044   +   MntMeatProducts ,
1340045   +   MntSweetProducts ,
1340046   +   MntWines ,
1340047   +   MonthsAsCustomer ,
1340048   +   NumCatalogPurchases ,
1340049   +   NumDealsPurchases ,
1340050   +   NumDistPurchases ,
1340051   +   NumStorePurchases ,
1340052   +   NumWebPurchases ,
1340053   +   NumWebVisitsMonth ,
1340054   +   RFMstat ,
1340055   +   RMntFrq ,
1340056   +   Recency ,
1340057   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1340058   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1340059   +
1340060   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1340061   +END;
MPRINT(EM_DIAGRAM):   END;
1340062   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1340063   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1340064   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1340065   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1340066   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1340067   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1340068   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1340069   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1340070   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1340071   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1340072   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1340073   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1340074   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1340075   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1340076   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1340077   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1340078   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1340079   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1340080   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1340081   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1340082   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1340083   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1340084   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1340085   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1340086   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1340087   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1340088   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1340089   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1340090   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1340091   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1340092   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1340093   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1340094   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1340095   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1340096   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1340097   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1340098   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1340099   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1340100   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1340101   +END;
MPRINT(EM_DIAGRAM):   END;
1340102   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1340103   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1340104   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1340105   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1340106   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1340107   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1340108   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1340109   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1340110   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1340111   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1340112   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1340113   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1340114   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1340115   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1340116   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1340117   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1340118   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1340119   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1340120   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1340121   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1340122   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1340123   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1340124   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1340125   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1340126   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1340127   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1340128   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1340129   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1340130   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1340131   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1340132   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1340133   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1340134   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1340135   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1340136   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1340137   +   ELSE S_NumCatalogPurchases
1340138   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1340139   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1340140   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1340141   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1340142   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1340143   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1340144   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1340145   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1340146   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1340147   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1340148   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1340149   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1340150   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1340151   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1340152   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1340153   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1340154   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1340155   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1340156   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1340157   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1340158   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1340159   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1340160   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1340161   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1340162   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1340163   +END;
MPRINT(EM_DIAGRAM):   END;
1340164   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1340165   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1340166   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1340167   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1340168   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1340169   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1340170   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1340171   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1340172   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1340173   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1340174   +   H11  =     0.80580599758828 * S_AcceptedCmpTotal  +    -0.20439898580437 *
1340175   +        S_Age  +     0.05865035632173 * S_Frq  +     0.35752372652995 *
1340176   +        S_Income  +     0.48614351216065 * S_Kidhome
1340177   +          +     -0.1747641480344 * S_Mnt  +     0.01575775403439 *
1340178   +        S_MntFishProducts  +    -0.38201490870585 * S_MntFruits
1340179   +          +    -0.05580975774246 * S_MntGoldProds  +     1.09721567184869 *
1340180   +        S_MntMeatProducts  +    -0.13227791819319 * S_MntSweetProducts
1340181   +          +    -1.10701810096598 * S_MntWines  +     0.20854938667936 *
1340182   +        S_MonthsAsCustomer  +     1.07538229088114 * S_NumCatalogPurchases
1340183   +          +     1.38069708066212 * S_NumDealsPurchases
1340184   +          +     0.18758966496994 * S_NumDistPurchases
1340185   +          +    -0.65306017966122 * S_NumStorePurchases
1340186   +          +    -0.65780154318734 * S_NumWebPurchases
1340187   +          +     1.42347048260615 * S_NumWebVisitsMonth
1340188   +          +      0.7433518928188 * S_RFMstat  +     0.14860840574393 *
1340189   +        S_RMntFrq  +    -0.94596110554056 * S_Recency
1340190   +          +     0.06338271932444 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.80580599758828 * S_AcceptedCmpTotal + -0.20439898580437 * S_Age 
+ 0.05865035632173 * S_Frq + 0.35752372652995 * S_Income + 0.48614351216065 * S_Kidhome + 
-0.1747641480344 * S_Mnt + 0.01575775403439 * S_MntFishProducts + -0.38201490870585 * 
S_MntFruits + -0.05580975774246 * S_MntGoldProds + 1.09721567184869 * S_MntMeatProducts + 
-0.13227791819319 * S_MntSweetProducts + -1.10701810096598 * S_MntWines + 0.20854938667936 * 
S_MonthsAsCustomer + 1.07538229088114 * S_NumCatalogPurchases + 1.38069708066212 * 
S_NumDealsPurchases + 0.18758966496994 * S_NumDistPurchases + -0.65306017966122 * 
S_NumStorePurchases + -0.65780154318734 * S_NumWebPurchases + 1.42347048260615 * 
S_NumWebVisitsMonth + 0.7433518928188 * S_RFMstat + 0.14860840574393 * S_RMntFrq + 
-0.94596110554056 * S_Recency + 0.06338271932444 * S_Teenhome ;
1340191   +   H12  =    -0.95250648389067 * S_AcceptedCmpTotal  +     0.00781145364918 *
1340192   +        S_Age  +     0.27693667522426 * S_Frq  +    -0.44422940279858 *
1340193   +        S_Income  +     0.50072567449363 * S_Kidhome
1340194   +          +     0.16426609438465 * S_Mnt  +     0.90735360020692 *
1340195   +        S_MntFishProducts  +    -0.10280436633296 * S_MntFruits
1340196   +          +      -0.172427737402 * S_MntGoldProds  +    -1.57830143431967 *
1340197   +        S_MntMeatProducts  +    -0.49111039017578 * S_MntSweetProducts
1340198   +          +     0.60032626047049 * S_MntWines  +      0.2471946896739 *
1340199   +        S_MonthsAsCustomer  +    -0.89033290398106 * S_NumCatalogPurchases
1340200   +          +    -0.75291043162386 * S_NumDealsPurchases
1340201   +          +    -0.06780631818187 * S_NumDistPurchases
1340202   +          +     1.03453599373919 * S_NumStorePurchases
1340203   +          +     1.02348906006707 * S_NumWebPurchases
1340204   +          +    -1.28963718583136 * S_NumWebVisitsMonth
1340205   +          +    -0.28437040883974 * S_RFMstat  +     0.13305006522815 *
1340206   +        S_RMntFrq  +     1.57678875777412 * S_Recency
1340207   +          +     0.37259077233644 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.95250648389067 * S_AcceptedCmpTotal + 0.00781145364918 * S_Age 
+ 0.27693667522426 * S_Frq + -0.44422940279858 * S_Income + 0.50072567449363 * S_Kidhome + 
0.16426609438465 * S_Mnt + 0.90735360020692 * S_MntFishProducts + -0.10280436633296 * 
S_MntFruits + -0.172427737402 * S_MntGoldProds + -1.57830143431967 * S_MntMeatProducts + 
-0.49111039017578 * S_MntSweetProducts + 0.60032626047049 * S_MntWines + 0.2471946896739 * 
S_MonthsAsCustomer + -0.89033290398106 * S_NumCatalogPurchases + -0.75291043162386 * 
S_NumDealsPurchases + -0.06780631818187 * S_NumDistPurchases + 1.03453599373919 * 
S_NumStorePurchases + 1.02348906006707 * S_NumWebPurchases + -1.28963718583136 * 
S_NumWebVisitsMonth + -0.28437040883974 * S_RFMstat + 0.13305006522815 * S_RMntFrq + 
1.57678875777412 * S_Recency + 0.37259077233644 * S_Teenhome ;
1340208   +   H13  =    -0.15934537040899 * S_AcceptedCmpTotal  +    -0.18908743508071 *
1340209   +        S_Age  +    -0.21049405570619 * S_Frq  +    -1.13478522535816 *
1340210   +        S_Income  +     0.57496607656903 * S_Kidhome
1340211   +          +     0.24039633053683 * S_Mnt  +    -0.12111845985793 *
1340212   +        S_MntFishProducts  +     0.18932758935406 * S_MntFruits
1340213   +          +      0.0282001773792 * S_MntGoldProds  +    -0.34135136526975 *
1340214   +        S_MntMeatProducts  +      0.3048511351264 * S_MntSweetProducts
1340215   +          +     0.34934932685263 * S_MntWines  +     -0.2282334455458 *
1340216   +        S_MonthsAsCustomer  +    -0.61139042080723 * S_NumCatalogPurchases
1340217   +          +     0.13431497076806 * S_NumDealsPurchases
1340218   +          +     -0.4516722514278 * S_NumDistPurchases
1340219   +          +     0.08636745161008 * S_NumStorePurchases
1340220   +          +    -0.01091843489919 * S_NumWebPurchases
1340221   +          +    -0.67680105332226 * S_NumWebVisitsMonth
1340222   +          +     0.06960881208574 * S_RFMstat  +    -0.40844599827715 *
1340223   +        S_RMntFrq  +     1.43664973786717 * S_Recency
1340224   +          +     0.89586482279711 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.15934537040899 * S_AcceptedCmpTotal + -0.18908743508071 * S_Age 
+ -0.21049405570619 * S_Frq + -1.13478522535816 * S_Income + 0.57496607656903 * S_Kidhome + 
0.24039633053683 * S_Mnt + -0.12111845985793 * S_MntFishProducts + 0.18932758935406 * 
S_MntFruits + 0.0282001773792 * S_MntGoldProds + -0.34135136526975 * S_MntMeatProducts + 
0.3048511351264 * S_MntSweetProducts + 0.34934932685263 * S_MntWines + -0.2282334455458 * 
S_MonthsAsCustomer + -0.61139042080723 * S_NumCatalogPurchases + 0.13431497076806 * 
S_NumDealsPurchases + -0.4516722514278 * S_NumDistPurchases + 0.08636745161008 * 
S_NumStorePurchases + -0.01091843489919 * S_NumWebPurchases + -0.67680105332226 * 
S_NumWebVisitsMonth + 0.06960881208574 * S_RFMstat + -0.40844599827715 * S_RMntFrq + 
1.43664973786717 * S_Recency + 0.89586482279711 * S_Teenhome ;
1340225   +   H11  = H11  +     -0.6416671004655 * AcceptedCmp10
1340226   +          +     0.01492041108634 * AcceptedCmp20  +    -0.91114347887192 *
1340227   +        AcceptedCmp30  +    -0.20710365118058 * AcceptedCmp40
1340228   +          +    -0.11794134499267 * AcceptedCmp50  +     0.09288714621262 *
1340229   +        Complain0  +    -0.52243814822483 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.6416671004655 * AcceptedCmp10 + 0.01492041108634 * 
AcceptedCmp20 + -0.91114347887192 * AcceptedCmp30 + -0.20710365118058 * AcceptedCmp40 + 
-0.11794134499267 * AcceptedCmp50 + 0.09288714621262 * Complain0 + -0.52243814822483 * 
HigherEducationBinary0 ;
1340230   +   H12  = H12  +     0.24751093651686 * AcceptedCmp10
1340231   +          +     0.07782559575868 * AcceptedCmp20  +    -0.31714859220477 *
1340232   +        AcceptedCmp30  +    -0.04651262852266 * AcceptedCmp40
1340233   +          +     1.12079204972473 * AcceptedCmp50  +     0.01995812214945 *
1340234   +        Complain0  +    -0.10554781512031 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.24751093651686 * AcceptedCmp10 + 0.07782559575868 * 
AcceptedCmp20 + -0.31714859220477 * AcceptedCmp30 + -0.04651262852266 * AcceptedCmp40 + 
1.12079204972473 * AcceptedCmp50 + 0.01995812214945 * Complain0 + -0.10554781512031 * 
HigherEducationBinary0 ;
1340235   +   H13  = H13  +     0.24429915728404 * AcceptedCmp10
1340236   +          +     0.61295080768552 * AcceptedCmp20  +     0.44102169319186 *
1340237   +        AcceptedCmp30  +     0.47980251068529 * AcceptedCmp40
1340238   +          +     0.10988021992419 * AcceptedCmp50  +     0.28313602324535 *
1340239   +        Complain0  +    -0.23261190302425 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.24429915728404 * AcceptedCmp10 + 0.61295080768552 * 
AcceptedCmp20 + 0.44102169319186 * AcceptedCmp30 + 0.47980251068529 * AcceptedCmp40 + 
0.10988021992419 * AcceptedCmp50 + 0.28313602324535 * Complain0 + -0.23261190302425 * 
HigherEducationBinary0 ;
1340240   +   H11  = H11  +     0.01626472365517 * Education2n_Cycle
1340241   +          +     0.14365936599314 * EducationBasic  +      0.3318092181003 *
1340242   +        EducationGraduation  +    -0.04307117865412 * EducationMaster
1340243   +          +     0.09616912826117 * Marital_StatusDivorced
1340244   +          +     0.15377557778014 * Marital_StatusMarried
1340245   +          +    -0.20686296055741 * Marital_StatusSingle
1340246   +          +    -0.02512911479575 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.01626472365517 * Education2n_Cycle + 0.14365936599314 * 
EducationBasic + 0.3318092181003 * EducationGraduation + -0.04307117865412 * EducationMaster + 
0.09616912826117 * Marital_StatusDivorced + 0.15377557778014 * Marital_StatusMarried + 
-0.20686296055741 * Marital_StatusSingle + -0.02512911479575 * Marital_StatusTogether ;
1340247   +   H12  = H12  +    -0.23609122137422 * Education2n_Cycle
1340248   +          +     0.32804834977485 * EducationBasic  +    -0.02696870760206 *
1340249   +        EducationGraduation  +     0.07379681316678 * EducationMaster
1340250   +          +    -0.18362421441913 * Marital_StatusDivorced
1340251   +          +     0.14861660317702 * Marital_StatusMarried
1340252   +          +    -0.51051982152027 * Marital_StatusSingle
1340253   +          +     0.13742493760562 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.23609122137422 * Education2n_Cycle + 0.32804834977485 * 
EducationBasic + -0.02696870760206 * EducationGraduation + 0.07379681316678 * EducationMaster 
+ -0.18362421441913 * Marital_StatusDivorced + 0.14861660317702 * Marital_StatusMarried + 
-0.51051982152027 * Marital_StatusSingle + 0.13742493760562 * Marital_StatusTogether ;
1340254   +   H13  = H13  +     0.13227832845665 * Education2n_Cycle
1340255   +          +     -0.1369481832857 * EducationBasic  +      0.1472139603427 *
1340256   +        EducationGraduation  +     0.27596372441804 * EducationMaster
1340257   +          +    -0.65088528624708 * Marital_StatusDivorced
1340258   +          +     1.85383531288095 * Marital_StatusMarried
1340259   +          +    -1.45031245605509 * Marital_StatusSingle
1340260   +          +     1.19623402360662 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.13227832845665 * Education2n_Cycle + -0.1369481832857 * 
EducationBasic + 0.1472139603427 * EducationGraduation + 0.27596372441804 * EducationMaster + 
-0.65088528624708 * Marital_StatusDivorced + 1.85383531288095 * Marital_StatusMarried + 
-1.45031245605509 * Marital_StatusSingle + 1.19623402360662 * Marital_StatusTogether ;
1340261   +   H11  =    -1.19945523281267 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.19945523281267 + H11 ;
1340262   +   H12  =     0.40473145844756 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.40473145844756 + H12 ;
1340263   +   H13  =     1.86025159730213 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.86025159730213 + H13 ;
1340264   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1340265   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1340266   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1340267   +END;
MPRINT(EM_DIAGRAM):   END;
1340268   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1340269   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1340270   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1340271   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1340272   +END;
MPRINT(EM_DIAGRAM):   END;
1340273   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1340274   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1340275   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1340276   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1340277   +   P_DepVar1  =     2.59495030782086 * H11  +    -2.95318868021515 * H12
1340278   +          +    -3.46108195946376 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.59495030782086 * H11 + -2.95318868021515 * H12 + 
-3.46108195946376 * H13 ;
1340279   +   P_DepVar1  =    -0.18846734589192 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.18846734589192 + P_DepVar1 ;
1340280   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1340281   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1340282   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1340283   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1340284   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1340285   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1340286   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1340287   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1340288   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1340289   +END;
MPRINT(EM_DIAGRAM):   END;
1340290   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1340291   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1340292   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1340293   +END;
MPRINT(EM_DIAGRAM):   END;
1340294   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1340295   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1340296   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1340297   +END;
MPRINT(EM_DIAGRAM):   END;
1340298   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1340299   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1340300   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1340301   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1340302   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1340303   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1340304   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1340305   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1340306   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1340307   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1340308   +END;
MPRINT(EM_DIAGRAM):   END;
1340309   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1340310   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1340311   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1340312   +drop
1340313   +H11
1340314   +H12
1340315   +H13
1340316   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1340317   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1340318    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1340319    quit;
1340320    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1340321    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1340322    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1340323    retain ID 2 Node "Neural3";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural3";
1340324    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1340325    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2354 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2354 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1340326    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1340327    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1340328    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2354 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2354 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1340329    proc sort data=EMWS8.Neural3_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural3_variableset out=_temp2(keep=NAME CREATOR);
1340330    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1340331    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL3_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1340332    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1340333    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1340334    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1340335    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1340336    proc contents data=EMWS8.Neural3_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural3_train out=_meta(keep=NAME) noprint;
1340337    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1340338    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1340339    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1340340    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1340341    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1340342    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1340343    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1340344    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1340345    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1340346    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1340346  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1399 rows and 5 columns.

1340347    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1340348    proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
1340349    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1399 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL_FCMP has 1399 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1340350    filename _pref
1340350  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1340351    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1340352    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1340353   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1340354   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1340355   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1340356   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1340357   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1340358   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1340359    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1340360    quit;
1340361    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1340362    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1340363    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1340364    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1340365    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1340366    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1340367    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1340368    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1340369    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1340370    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1340371    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1340372    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1340373    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1340374    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1340375    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1340376    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1340377    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1340378    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1340379    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1340380    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1340381    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1340382    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1340383    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1340384    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1340385    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1340386    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1340387    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1340387  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1340388    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1340389    proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
1340390    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL_FCMP has 1403 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1340391    filename _pref
1340391  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1340392    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1340393    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1340394   +
1340395   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1340396   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1340396  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1340397   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1340398   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1340399   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1340400   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1340401   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1340402    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1340403    quit;
1340404    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1340405    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1340406    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1340407    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1340408    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1340409    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1340410    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1340411    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1340412    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1340413    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1340414    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1340415    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1340416    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1340417    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1340418    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1340419    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1340420    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1340421    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1340422    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1340423    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1340424    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1340425    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1340426    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1340427    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1340428    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1340429    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1340430    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1340430  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1340431    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1340432    proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
1340433    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL_FCMP has 1442 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1340434    filename _pref
1340434  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1340435    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1340436    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1340437   +
1340438   +
1340439   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1340440   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1340441   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1340442   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1340443   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1340444   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1340445   +
1340446   +
1340447   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1340448   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1340449   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1340450   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1340451   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1340452   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1340453   +
1340454   +
1340455   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1340456   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1340457   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1340458   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1340459   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1340460   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1340461   +
1340462   +
1340463   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1340464   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1340465   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1340466   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1340467   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1340468   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1340469   +
1340470   +
1340471   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1340472   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1340473   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1340474   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1340475   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1340476   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1340477   +
1340478   +
1340479   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1340480   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1340481   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1340482   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1340483   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1340484   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1340485   +
1340486   +
1340487   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1340488   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1340489   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1340490   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1340491   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1340492   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1340493   +
1340494   +
1340495   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1340496   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1340497   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1340498   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1340499   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1340500   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1340501   +if
1340502   +_FILTERNORM1 not in ( '.')
1340503   + and
1340504   +_FILTERNORM2 not in ( '.')
1340505   + and
1340506   +_FILTERNORM3 not in ( '.')
1340507   + and
1340508   +_FILTERNORM4 not in ( '.')
1340509   + and
1340510   +_FILTERNORM5 not in ( '.')
1340511   + and
1340512   +_FILTERNORM6 not in ( '.')
1340513   + and
1340514   +_FILTERNORM7 not in ( ' ')
1340515   + and
1340516   +_FILTERNORM8 not in ( ' ')
1340517   +and
1340518   +( Dt_Customer ne .)
1340519   +and ( Income ne . and (Income<=107000))
1340520   +and ( Kidhome ne .)
1340521   +and ( MntFishProducts ne .)
1340522   +and ( MntFruits ne .)
1340523   +and ( MntGoldProds ne .)
1340524   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1340525   +and ( MntSweetProducts ne .)
1340526   +and ( MntWines ne .)
1340527   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1340528   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1340529   +and ( NumStorePurchases ne .)
1340530   +and ( NumWebPurchases ne .)
1340531   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1340532   +and ( Recency ne .)
1340533   +and ( Teenhome ne .)
1340534   +and ( Year_Birth ne .)
1340535   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1340536   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1340537   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1340538   +end;
MPRINT(EM_DIAGRAM):   end;
1340539   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1340540   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1340541    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1340542    quit;
1340543    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1340544    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1340545    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1340546    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1340547    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1340548    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1340549    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1340550    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1340551    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1340552    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1340553    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1340554    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1340555    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1340556    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1340557    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1340558    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1340559    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1340560    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1340561    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1340562    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1340563    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1340564    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1340565    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1340566    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1340567    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1340568    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1340569    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1340569  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1340570    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1340571    proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
1340572    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL_FCMP has 1508 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1340573    %macro varDept(fcmpdata=,id=);
1340574    %global nobs&id scoreFlag&id;
1340575    %let scoreFlag&id = 0;
1340576    %if &id=1 or ^&fcmpStart %then %do;
1340577    proc sort data=&fcmpdata out=_temp&id nodupkey;
1340578    by NAME;
1340579    where id=&id and LHS in( %let j=1;
1340580    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1340581    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1340582    "&var" %let j = %eval(&j+1);
1340583    %end;
1340584    );
1340585    run;
1340586    %let dsid = %sysfunc(open(_temp&id));
1340587    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1340588    %let dsid = %sysfunc(close(&dsid));
1340589    %if &&nobs&id %then %do;
1340590    %let scoreFlag&id = 1;
1340591    %let fcmpStart = 1;
1340592    %end;
1340593    %else %let fcmpStart = 0;
1340594    %end;
1340595    %else %do;
1340596    proc sort data=&fcmpdata out=_tempid;
1340597    where id=&id;
1340598    by LHS;
1340599    run;
1340600    %let dsid = %sysfunc(open(_tempid));
1340601    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1340602    %let dsid = %sysfunc(close(&dsid));
1340603    %if ^&&nobs&id %then %do;
1340604    proc datasets lib=work nolist;
1340605    delete _tempid;
1340606    run;
1340607    quit;
1340608    %end;
1340609    %else %do;
1340610    data _tempAll;
1340611    set %let j=%eval(&id-1);
1340612    %do x=1 %to &j;
1340613    %if &&nobs&x %then %do;
1340614    _temp&x %end;
1340615    %end;
1340616    ;
1340617    run;
1340618    proc sql;
1340619    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1340619  ! work._tempid p2 where p.name=p2.lhs;
1340620    quit;
1340621    data _temp&id;
1340622    set _temp&id;
1340623    where LHS ne '' and NAME ne '' and Node ne '';
1340624    run;
1340625    proc datasets lib=work nolist;
1340626    delete _tempAll;
1340627    run;
1340628    %let dsid = %sysfunc(open(_temp&id));
1340629    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1340630    %let dsid = %sysfunc(close(&dsid));
1340631    %if ^&&nobs&id %then %do;
1340632    proc datasets lib=work nolist;
1340633    delete _temp&id;
1340634    run;
1340635    quit;
1340636    %end;
1340637    %else %do;
1340638    %let scoreFlag&id = 1;
1340639    data _temp&id;
1340640    set _temp&id;
1340641    where LHS ne NAME and node ne '';
1340642    run;
1340643    %let dsid = %sysfunc(open(_temp&id));
1340644    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1340645    %let dsid = %sysfunc(close(&dsid));
1340646    %if ^&&nobs&id %then %do;
1340647    proc datasets lib=work nolist;
1340648    delete _temp&id;
1340649    run;
1340650    quit;
1340651    %end;
1340652    %else %do;
1340653    proc sort data=_temp&id nodupkey;
1340654    by LHS NAME;
1340655    run;
1340656    %end;
1340657    %end;
1340658    %end;
1340659    %end;
1340660    %mend varDept;
1340661    %macro optCode(outdata=fcmpdata);
1340662    %global fcmpStart;
1340663    %let fcmpStart = 0;
1340664    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1340665    %let NumNodes=9;
1340666    %do k=1 %to &NumNodes;
1340667    %vardept(fcmpdata=&outdata, id=&k);
1340668    %end;
1340669    %mend optCode;
1340670    %optcode(outData=EMWS8.Ensmbl_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1340671    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1340672    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1340673    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1340674    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1340675    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1340676    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1340677    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1340678    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1340679    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1340680    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1340680  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

1340681    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1340682    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1340683    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1340684    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1340685    filename _pref
1340685  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural7\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural7\EMPUBLISHSCORE.sas";
1340686    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1340687    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural7\EMPUBLISHSCORE.sas.
1340688   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1340689   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1340690   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1340691   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1340692   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1340693   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1340694   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1340695   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1340696   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1340697   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1340698   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1340699   +LENGTH _WARN_ $4
1340700   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1340701   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1340702   +
1340703   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1340704   +
1340705   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1340706   +
1340707   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1340708   +
1340709   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1340710   +
1340711   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1340712   +
1340713   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1340714   +
1340715   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1340716   +
1340717   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1340718   +
1340719   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1340720   +
1340721   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1340722   +
1340723   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1340724   +
1340725   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1340726   +
1340727   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1340728   +
1340729   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1340730   +
1340731   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1340732   +
1340733   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1340734   +
1340735   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1340736   +
1340737   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1340738   +
1340739   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1340740   +
1340741   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1340742   +
1340743   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1340744   +
1340745   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1340746   +
1340747   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1340748   +
1340749   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1340750   +
1340751   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1340752   +
1340753   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1340754   +
1340755   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1340756   +
1340757   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1340758   +
1340759   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1340760   +
1340761   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1340762   +
1340763   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1340764   +
1340765   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1340766   +
1340767   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1340768   +
1340769   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1340770   +
1340771   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1340772   +
1340773   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1340774   +
1340775   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1340776   +
1340777   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1340778   +
1340779   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1340780   +
1340781   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1340782   +
1340783   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1340784   +
1340785   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1340786   +
1340787   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1340788   +
1340789   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1340790   +
1340791   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1340792   +
1340793   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1340794   +
1340795   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1340796   +
1340797   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1340798   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1340799   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1340800   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1340801   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1340802   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1340803   +end;
MPRINT(EM_DIAGRAM):   end;
1340804   +else do;
MPRINT(EM_DIAGRAM):   else do;
1340805   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1340806   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1340807   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1340808   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1340809   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1340810   +   end;
MPRINT(EM_DIAGRAM):   end;
1340811   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1340812   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1340813   +   end;
MPRINT(EM_DIAGRAM):   end;
1340814   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1340815   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1340816   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1340817   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1340818   +   end;
MPRINT(EM_DIAGRAM):   end;
1340819   +end;
MPRINT(EM_DIAGRAM):   end;
1340820   +
1340821   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1340822   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1340823   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1340824   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1340825   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1340826   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1340827   +end;
MPRINT(EM_DIAGRAM):   end;
1340828   +else do;
MPRINT(EM_DIAGRAM):   else do;
1340829   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1340830   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1340831   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1340832   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1340833   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1340834   +   end;
MPRINT(EM_DIAGRAM):   end;
1340835   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1340836   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1340837   +   end;
MPRINT(EM_DIAGRAM):   end;
1340838   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1340839   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1340840   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1340841   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1340842   +   end;
MPRINT(EM_DIAGRAM):   end;
1340843   +end;
MPRINT(EM_DIAGRAM):   end;
1340844   +
1340845   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1340846   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1340847   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1340848   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1340849   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1340850   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1340851   +end;
MPRINT(EM_DIAGRAM):   end;
1340852   +else do;
MPRINT(EM_DIAGRAM):   else do;
1340853   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1340854   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1340855   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1340856   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1340857   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1340858   +   end;
MPRINT(EM_DIAGRAM):   end;
1340859   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1340860   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1340861   +   end;
MPRINT(EM_DIAGRAM):   end;
1340862   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1340863   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1340864   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1340865   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1340866   +   end;
MPRINT(EM_DIAGRAM):   end;
1340867   +end;
MPRINT(EM_DIAGRAM):   end;
1340868   +
1340869   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1340870   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1340871   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1340872   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1340873   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1340874   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1340875   +end;
MPRINT(EM_DIAGRAM):   end;
1340876   +else do;
MPRINT(EM_DIAGRAM):   else do;
1340877   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1340878   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1340879   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1340880   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1340881   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1340882   +   end;
MPRINT(EM_DIAGRAM):   end;
1340883   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1340884   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1340885   +   end;
MPRINT(EM_DIAGRAM):   end;
1340886   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1340887   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1340888   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1340889   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1340890   +   end;
MPRINT(EM_DIAGRAM):   end;
1340891   +end;
MPRINT(EM_DIAGRAM):   end;
1340892   +
1340893   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1340894   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1340895   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1340896   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1340897   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1340898   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1340899   +end;
MPRINT(EM_DIAGRAM):   end;
1340900   +else do;
MPRINT(EM_DIAGRAM):   else do;
1340901   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1340902   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1340903   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1340904   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1340905   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1340906   +   end;
MPRINT(EM_DIAGRAM):   end;
1340907   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1340908   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1340909   +   end;
MPRINT(EM_DIAGRAM):   end;
1340910   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1340911   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1340912   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1340913   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1340914   +   end;
MPRINT(EM_DIAGRAM):   end;
1340915   +end;
MPRINT(EM_DIAGRAM):   end;
1340916   +
1340917   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1340918   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1340919   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1340920   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1340921   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1340922   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1340923   +end;
MPRINT(EM_DIAGRAM):   end;
1340924   +else do;
MPRINT(EM_DIAGRAM):   else do;
1340925   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1340926   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1340927   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1340928   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1340929   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1340930   +   end;
MPRINT(EM_DIAGRAM):   end;
1340931   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1340932   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1340933   +   end;
MPRINT(EM_DIAGRAM):   end;
1340934   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1340935   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1340936   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1340937   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1340938   +   end;
MPRINT(EM_DIAGRAM):   end;
1340939   +end;
MPRINT(EM_DIAGRAM):   end;
1340940   +
1340941   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1340942   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1340943   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1340944   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1340945   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1340946   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1340947   +end;
MPRINT(EM_DIAGRAM):   end;
1340948   +else do;
MPRINT(EM_DIAGRAM):   else do;
1340949   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1340950   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1340951   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1340952   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1340953   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1340954   +   end;
MPRINT(EM_DIAGRAM):   end;
1340955   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1340956   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1340957   +   end;
MPRINT(EM_DIAGRAM):   end;
1340958   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1340959   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1340960   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1340961   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1340962   +   end;
MPRINT(EM_DIAGRAM):   end;
1340963   +end;
MPRINT(EM_DIAGRAM):   end;
1340964   +
1340965   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1340966   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1340967   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1340968   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1340969   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1340970   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1340971   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1340972   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1340973   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1340974   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1340975   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1340976   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1340977   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1340978   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1340979   +end;
MPRINT(EM_DIAGRAM):   end;
1340980   +else do;
MPRINT(EM_DIAGRAM):   else do;
1340981   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1340982   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1340983   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1340984   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1340985   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1340986   +   end;
MPRINT(EM_DIAGRAM):   end;
1340987   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1340988   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1340989   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1340990   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1340991   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1340992   +   end;
MPRINT(EM_DIAGRAM):   end;
1340993   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1340994   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1340995   +   end;
MPRINT(EM_DIAGRAM):   end;
1340996   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1340997   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1340998   +   end;
MPRINT(EM_DIAGRAM):   end;
1340999   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1341000   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1341001   +   end;
MPRINT(EM_DIAGRAM):   end;
1341002   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1341003   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1341004   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1341005   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1341006   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1341007   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1341008   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1341009   +   end;
MPRINT(EM_DIAGRAM):   end;
1341010   +end;
MPRINT(EM_DIAGRAM):   end;
1341011   +
1341012   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1341013   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1341014   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1341015   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1341016   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1341017   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1341018   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1341019   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1341020   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1341021   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1341022   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1341023   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1341024   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1341025   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1341026   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1341027   +end;
MPRINT(EM_DIAGRAM):   end;
1341028   +else do;
MPRINT(EM_DIAGRAM):   else do;
1341029   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1341030   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1341031   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1341032   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1341033   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1341034   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1341035   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1341036   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1341037   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1341038   +         end;
MPRINT(EM_DIAGRAM):   end;
1341039   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1341040   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1341041   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1341042   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1341043   +            end;
MPRINT(EM_DIAGRAM):   end;
1341044   +         end;
MPRINT(EM_DIAGRAM):   end;
1341045   +      end;
MPRINT(EM_DIAGRAM):   end;
1341046   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1341047   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1341048   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1341049   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1341050   +         end;
MPRINT(EM_DIAGRAM):   end;
1341051   +      end;
MPRINT(EM_DIAGRAM):   end;
1341052   +   end;
MPRINT(EM_DIAGRAM):   end;
1341053   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1341054   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1341055   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1341056   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1341057   +      end;
MPRINT(EM_DIAGRAM):   end;
1341058   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1341059   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1341060   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1341061   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1341062   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1341063   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1341064   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1341065   +         end;
MPRINT(EM_DIAGRAM):   end;
1341066   +      end;
MPRINT(EM_DIAGRAM):   end;
1341067   +   end;
MPRINT(EM_DIAGRAM):   end;
1341068   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1341069   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1341070   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1341071   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1341072   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1341073   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1341074   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1341075   +   end;
MPRINT(EM_DIAGRAM):   end;
1341076   +end;
MPRINT(EM_DIAGRAM):   end;
1341077   +
1341078   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1341079   +*** Checking missing input Interval
1341080   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1341081   +
1341082   +IF NMISS(
1341083   +   AcceptedCmpTotal ,
1341084   +   Age ,
1341085   +   Frq ,
1341086   +   Income ,
1341087   +   Kidhome ,
1341088   +   Mnt ,
1341089   +   MntFishProducts ,
1341090   +   MntFruits ,
1341091   +   MntGoldProds ,
1341092   +   MntMeatProducts ,
1341093   +   MntSweetProducts ,
1341094   +   MntWines ,
1341095   +   MonthsAsCustomer ,
1341096   +   NumCatalogPurchases ,
1341097   +   NumDealsPurchases ,
1341098   +   NumDistPurchases ,
1341099   +   NumStorePurchases ,
1341100   +   NumWebPurchases ,
1341101   +   NumWebVisitsMonth ,
1341102   +   RFMstat ,
1341103   +   RMntFrq ,
1341104   +   Recency ,
1341105   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1341106   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1341107   +
1341108   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1341109   +END;
MPRINT(EM_DIAGRAM):   END;
1341110   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1341111   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1341112   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1341113   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1341114   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1341115   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1341116   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1341117   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1341118   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1341119   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1341120   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1341121   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1341122   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1341123   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1341124   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1341125   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1341126   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1341127   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1341128   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1341129   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1341130   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1341131   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1341132   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1341133   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1341134   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1341135   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1341136   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1341137   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1341138   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1341139   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1341140   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1341141   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1341142   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1341143   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1341144   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1341145   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1341146   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1341147   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1341148   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1341149   +END;
MPRINT(EM_DIAGRAM):   END;
1341150   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1341151   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1341152   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1341153   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1341154   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1341155   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1341156   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1341157   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1341158   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1341159   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1341160   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1341161   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1341162   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1341163   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1341164   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1341165   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1341166   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1341167   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1341168   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1341169   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1341170   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1341171   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1341172   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1341173   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1341174   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1341175   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1341176   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1341177   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1341178   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1341179   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1341180   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1341181   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1341182   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1341183   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1341184   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1341185   +   ELSE S_NumCatalogPurchases
1341186   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1341187   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1341188   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1341189   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1341190   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1341191   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1341192   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1341193   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1341194   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1341195   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1341196   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1341197   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1341198   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1341199   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1341200   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1341201   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1341202   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1341203   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1341204   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
The SAS System

1341205   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1341206   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1341207   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1341208   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1341209   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1341210   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1341211   +END;
MPRINT(EM_DIAGRAM):   END;
1341212   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1341213   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1341214   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1341215   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1341216   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1341217   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1341218   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1341219   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1341220   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1341221   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1341222   +   H11  =     -0.4861272258755 * S_AcceptedCmpTotal  +    -0.05189637306711 *
1341223   +        S_Age  +    -0.30315098258233 * S_Frq  +    -1.10363388640565 *
1341224   +        S_Income  +     0.49482308043138 * S_Kidhome
1341225   +          +    -0.21806866463657 * S_Mnt  +    -0.07009712511746 *
1341226   +        S_MntFishProducts  +     0.18128886998186 * S_MntFruits
1341227   +          +     0.08667708198542 * S_MntGoldProds  +    -0.34562904453263 *
1341228   +        S_MntMeatProducts  +     0.24207000188265 * S_MntSweetProducts
1341229   +          +     0.73913803788025 * S_MntWines  +    -0.12494500176265 *
1341230   +        S_MonthsAsCustomer  +    -0.45211334823309 * S_NumCatalogPurchases
1341231   +          +    -0.06511788072827 * S_NumDealsPurchases
1341232   +          +    -0.38159596394204 * S_NumDistPurchases
1341233   +          +     0.15411219967595 * S_NumStorePurchases
1341234   +          +     0.21139765335417 * S_NumWebPurchases
1341235   +          +    -1.04359200301033 * S_NumWebVisitsMonth
1341236   +          +      0.1090284887692 * S_RFMstat  +    -0.44883493072151 *
1341237   +        S_RMntFrq  +     1.34562786069569 * S_Recency
1341238   +          +     0.89460449958447 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.4861272258755 * S_AcceptedCmpTotal + -0.05189637306711 * S_Age 
+ -0.30315098258233 * S_Frq + -1.10363388640565 * S_Income + 0.49482308043138 * S_Kidhome + 
-0.21806866463657 * S_Mnt + -0.07009712511746 * S_MntFishProducts + 0.18128886998186 * 
S_MntFruits + 0.08667708198542 * S_MntGoldProds + -0.34562904453263 * S_MntMeatProducts + 
0.24207000188265 * S_MntSweetProducts + 0.73913803788025 * S_MntWines + -0.12494500176265 * 
S_MonthsAsCustomer + -0.45211334823309 * S_NumCatalogPurchases + -0.06511788072827 * 
S_NumDealsPurchases + -0.38159596394204 * S_NumDistPurchases + 0.15411219967595 * 
S_NumStorePurchases + 0.21139765335417 * S_NumWebPurchases + -1.04359200301033 * 
S_NumWebVisitsMonth + 0.1090284887692 * S_RFMstat + -0.44883493072151 * S_RMntFrq + 
1.34562786069569 * S_Recency + 0.89460449958447 * S_Teenhome ;
1341239   +   H12  =     0.49470690944633 * S_AcceptedCmpTotal  +      0.0261154901688 *
1341240   +        S_Age  +    -0.04461338015446 * S_Frq  +     0.49903480336525 *
1341241   +        S_Income  +     0.23698260075506 * S_Kidhome
1341242   +          +     0.24476004659493 * S_Mnt  +    -0.49492355746365 *
1341243   +        S_MntFishProducts  +    -0.09271328974329 * S_MntFruits
1341244   +          +     0.20870223796971 * S_MntGoldProds  +     2.14489337337229 *
1341245   +        S_MntMeatProducts  +     0.05836783904648 * S_MntSweetProducts
1341246   +          +    -0.80559423936695 * S_MntWines  +     0.05650618948417 *
1341247   +        S_MonthsAsCustomer  +     1.52325923960607 * S_NumCatalogPurchases
1341248   +          +     0.75951783049608 * S_NumDealsPurchases
1341249   +          +     0.27731850886303 * S_NumDistPurchases
1341250   +          +    -0.72597847158122 * S_NumStorePurchases
1341251   +          +    -0.87186594418005 * S_NumWebPurchases
1341252   +          +     0.22778956336256 * S_NumWebVisitsMonth
1341253   +          +     0.52707843426664 * S_RFMstat  +     0.08310736513647 *
1341254   +        S_RMntFrq  +    -0.24127828094269 * S_Recency
1341255   +          +    -0.09777624700028 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.49470690944633 * S_AcceptedCmpTotal + 0.0261154901688 * S_Age + 
-0.04461338015446 * S_Frq + 0.49903480336525 * S_Income + 0.23698260075506 * S_Kidhome + 
0.24476004659493 * S_Mnt + -0.49492355746365 * S_MntFishProducts + -0.09271328974329 * 
S_MntFruits + 0.20870223796971 * S_MntGoldProds + 2.14489337337229 * S_MntMeatProducts + 
0.05836783904648 * S_MntSweetProducts + -0.80559423936695 * S_MntWines + 0.05650618948417 * 
S_MonthsAsCustomer + 1.52325923960607 * S_NumCatalogPurchases + 0.75951783049608 * 
S_NumDealsPurchases + 0.27731850886303 * S_NumDistPurchases + -0.72597847158122 * 
S_NumStorePurchases + -0.87186594418005 * S_NumWebPurchases + 0.22778956336256 * 
S_NumWebVisitsMonth + 0.52707843426664 * S_RFMstat + 0.08310736513647 * S_RMntFrq + 
-0.24127828094269 * S_Recency + -0.09777624700028 * S_Teenhome ;
1341256   +   H13  =    -0.14339467136572 * S_AcceptedCmpTotal  +     0.01822297952084 *
1341257   +        S_Age  +    -0.09520130583725 * S_Frq  +    -0.03136906489645 *
1341258   +        S_Income  +    -0.02135707281355 * S_Kidhome
1341259   +          +       0.155894017168 * S_Mnt  +     0.08475472787843 *
1341260   +        S_MntFishProducts  +    -0.07789908506466 * S_MntFruits
1341261   +          +     0.10660062798043 * S_MntGoldProds  +     0.16015984966551 *
1341262   +        S_MntMeatProducts  +    -0.27612516960004 * S_MntSweetProducts
1341263   +          +     -0.2896840938935 * S_MntWines  +    -0.26254012296363 *
1341264   +        S_MonthsAsCustomer  +    -0.12998608904182 * S_NumCatalogPurchases
1341265   +          +    -0.07354863705565 * S_NumDealsPurchases
1341266   +          +    -0.11447983414298 * S_NumDistPurchases
1341267   +          +    -0.12215729534897 * S_NumStorePurchases
1341268   +          +    -0.12902195457851 * S_NumWebPurchases
1341269   +          +     0.19434933394862 * S_NumWebVisitsMonth
1341270   +          +     0.28975506236609 * S_RFMstat  +     0.29422521951226 *
1341271   +        S_RMntFrq  +    -0.17552894408192 * S_Recency
1341272   +          +     -0.1580830073017 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.14339467136572 * S_AcceptedCmpTotal + 0.01822297952084 * S_Age 
+ -0.09520130583725 * S_Frq + -0.03136906489645 * S_Income + -0.02135707281355 * S_Kidhome + 
0.155894017168 * S_Mnt + 0.08475472787843 * S_MntFishProducts + -0.07789908506466 * 
S_MntFruits + 0.10660062798043 * S_MntGoldProds + 0.16015984966551 * S_MntMeatProducts + 
-0.27612516960004 * S_MntSweetProducts + -0.2896840938935 * S_MntWines + -0.26254012296363 * 
S_MonthsAsCustomer + -0.12998608904182 * S_NumCatalogPurchases + -0.07354863705565 * 
S_NumDealsPurchases + -0.11447983414298 * S_NumDistPurchases + -0.12215729534897 * 
S_NumStorePurchases + -0.12902195457851 * S_NumWebPurchases + 0.19434933394862 * 
S_NumWebVisitsMonth + 0.28975506236609 * S_RFMstat + 0.29422521951226 * S_RMntFrq + 
-0.17552894408192 * S_Recency + -0.1580830073017 * S_Teenhome ;
1341273   +   H14  =     0.02093644707827 * S_AcceptedCmpTotal  +     0.20395783918661 *
1341274   +        S_Age  +     0.59442731897797 * S_Frq  +     0.29119798252337 *
1341275   +        S_Income  +    -0.45406848052616 * S_Kidhome
1341276   +          +    -0.07771670260258 * S_Mnt  +     0.22748787488449 *
1341277   +        S_MntFishProducts  +    -0.17850998839546 * S_MntFruits
1341278   +          +     0.26951758688823 * S_MntGoldProds  +    -0.79968061180107 *
1341279   +        S_MntMeatProducts  +     -0.1140667580899 * S_MntSweetProducts
1341280   +          +      0.4869411024289 * S_MntWines  +    -0.01712813082958 *
1341281   +        S_MonthsAsCustomer  +    -0.84487773781523 * S_NumCatalogPurchases
1341282   +          +     -0.7419997885817 * S_NumDealsPurchases
1341283   +          +     0.27831770188348 * S_NumDistPurchases
1341284   +          +     0.59857930354045 * S_NumStorePurchases
1341285   +          +     0.64048264413595 * S_NumWebPurchases
1341286   +          +    -0.50793007710291 * S_NumWebVisitsMonth
1341287   +          +    -0.14149333808405 * S_RFMstat  +     0.01746285773092 *
1341288   +        S_RMntFrq  +     0.40903481897501 * S_Recency
1341289   +          +    -0.09082840454575 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.02093644707827 * S_AcceptedCmpTotal + 0.20395783918661 * S_Age + 
0.59442731897797 * S_Frq + 0.29119798252337 * S_Income + -0.45406848052616 * S_Kidhome + 
-0.07771670260258 * S_Mnt + 0.22748787488449 * S_MntFishProducts + -0.17850998839546 * 
S_MntFruits + 0.26951758688823 * S_MntGoldProds + -0.79968061180107 * S_MntMeatProducts + 
-0.1140667580899 * S_MntSweetProducts + 0.4869411024289 * S_MntWines + -0.01712813082958 * 
S_MonthsAsCustomer + -0.84487773781523 * S_NumCatalogPurchases + -0.7419997885817 * 
S_NumDealsPurchases + 0.27831770188348 * S_NumDistPurchases + 0.59857930354045 * 
S_NumStorePurchases + 0.64048264413595 * S_NumWebPurchases + -0.50793007710291 * 
S_NumWebVisitsMonth + -0.14149333808405 * S_RFMstat + 0.01746285773092 * S_RMntFrq + 
0.40903481897501 * S_Recency + -0.09082840454575 * S_Teenhome ;
1341290   +   H15  =    -0.54395842220188 * S_AcceptedCmpTotal  +    -0.00659873517805 *
1341291   +        S_Age  +     0.13328067508696 * S_Frq  +    -0.40683362094427 *
1341292   +        S_Income  +     0.78347324989919 * S_Kidhome
1341293   +          +    -0.08815491299054 * S_Mnt  +     0.24650131354859 *
1341294   +        S_MntFishProducts  +     0.08184618135481 * S_MntFruits
1341295   +          +    -0.12412058422094 * S_MntGoldProds  +    -0.82851470750716 *
1341296   +        S_MntMeatProducts  +     0.04998663129465 * S_MntSweetProducts
1341297   +          +     0.40431404211888 * S_MntWines  +     0.20441979242265 *
1341298   +        S_MonthsAsCustomer  +    -0.59560487920908 * S_NumCatalogPurchases
1341299   +          +    -0.51611441201596 * S_NumDealsPurchases
1341300   +          +     0.08384183916368 * S_NumDistPurchases
1341301   +          +     0.61287235664869 * S_NumStorePurchases
1341302   +          +      0.6529111332187 * S_NumWebPurchases
1341303   +          +    -1.46254898694754 * S_NumWebVisitsMonth
1341304   +          +    -0.12654274035522 * S_RFMstat  +     0.44674987490347 *
1341305   +        S_RMntFrq  +     1.38435640479916 * S_Recency
1341306   +          +     0.33296597278129 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.54395842220188 * S_AcceptedCmpTotal + -0.00659873517805 * S_Age 
+ 0.13328067508696 * S_Frq + -0.40683362094427 * S_Income + 0.78347324989919 * S_Kidhome + 
-0.08815491299054 * S_Mnt + 0.24650131354859 * S_MntFishProducts + 0.08184618135481 * 
S_MntFruits + -0.12412058422094 * S_MntGoldProds + -0.82851470750716 * S_MntMeatProducts + 
0.04998663129465 * S_MntSweetProducts + 0.40431404211888 * S_MntWines + 0.20441979242265 * 
S_MonthsAsCustomer + -0.59560487920908 * S_NumCatalogPurchases + -0.51611441201596 * 
S_NumDealsPurchases + 0.08384183916368 * S_NumDistPurchases + 0.61287235664869 * 
S_NumStorePurchases + 0.6529111332187 * S_NumWebPurchases + -1.46254898694754 * 
S_NumWebVisitsMonth + -0.12654274035522 * S_RFMstat + 0.44674987490347 * S_RMntFrq + 
1.38435640479916 * S_Recency + 0.33296597278129 * S_Teenhome ;
1341307   +   H11  = H11  +    -0.00998851481276 * AcceptedCmp10
1341308   +          +     0.32921116293054 * AcceptedCmp20  +     0.31125214601572 *
1341309   +        AcceptedCmp30  +     0.49394812035071 * AcceptedCmp40
1341310   +          +    -0.13967719688623 * AcceptedCmp50  +     0.10069638637668 *
1341311   +        Complain0  +    -0.33122877949584 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.00998851481276 * AcceptedCmp10 + 0.32921116293054 * 
AcceptedCmp20 + 0.31125214601572 * AcceptedCmp30 + 0.49394812035071 * AcceptedCmp40 + 
-0.13967719688623 * AcceptedCmp50 + 0.10069638637668 * Complain0 + -0.33122877949584 * 
HigherEducationBinary0 ;
1341312   +   H12  = H12  +    -0.19856686646083 * AcceptedCmp10
1341313   +          +     0.23310696712955 * AcceptedCmp20  +     0.20346336135422 *
1341314   +        AcceptedCmp30  +     0.30256624409423 * AcceptedCmp40
1341315   +          +    -0.29335754278392 * AcceptedCmp50  +     0.21323212558806 *
1341316   +        Complain0  +    -0.13556600599489 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.19856686646083 * AcceptedCmp10 + 0.23310696712955 * 
AcceptedCmp20 + 0.20346336135422 * AcceptedCmp30 + 0.30256624409423 * AcceptedCmp40 + 
-0.29335754278392 * AcceptedCmp50 + 0.21323212558806 * Complain0 + -0.13556600599489 * 
HigherEducationBinary0 ;
1341317   +   H13  = H13  +    -0.01722105367877 * AcceptedCmp10
1341318   +          +     0.03291794356955 * AcceptedCmp20  +     0.05944626529099 *
1341319   +        AcceptedCmp30  +    -0.05221243291111 * AcceptedCmp40
1341320   +          +     0.17912917985939 * AcceptedCmp50  +    -0.15861965360776 *
1341321   +        Complain0  +     0.12900426780961 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.01722105367877 * AcceptedCmp10 + 0.03291794356955 * 
AcceptedCmp20 + 0.05944626529099 * AcceptedCmp30 + -0.05221243291111 * AcceptedCmp40 + 
0.17912917985939 * AcceptedCmp50 + -0.15861965360776 * Complain0 + 0.12900426780961 * 
HigherEducationBinary0 ;
1341322   +   H14  = H14  +     0.06387950776559 * AcceptedCmp10
1341323   +          +      0.2872534864949 * AcceptedCmp20  +     0.51726192943362 *
1341324   +        AcceptedCmp30  +     0.00602188882249 * AcceptedCmp40
1341325   +          +     0.32401593400636 * AcceptedCmp50  +     0.46704484165073 *
1341326   +        Complain0  +     0.18433576051792 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.06387950776559 * AcceptedCmp10 + 0.2872534864949 * 
AcceptedCmp20 + 0.51726192943362 * AcceptedCmp30 + 0.00602188882249 * AcceptedCmp40 + 
0.32401593400636 * AcceptedCmp50 + 0.46704484165073 * Complain0 + 0.18433576051792 * 
HigherEducationBinary0 ;
1341327   +   H15  = H15  +      0.2705244136245 * AcceptedCmp10
1341328   +          +     0.37082512037556 * AcceptedCmp20  +     0.13484905564511 *
1341329   +        AcceptedCmp30  +      0.0945945695678 * AcceptedCmp40
1341330   +          +     0.49264779479372 * AcceptedCmp50  +     0.02840120006931 *
1341331   +        Complain0  +     0.01012130065838 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.2705244136245 * AcceptedCmp10 + 0.37082512037556 * 
AcceptedCmp20 + 0.13484905564511 * AcceptedCmp30 + 0.0945945695678 * AcceptedCmp40 + 
0.49264779479372 * AcceptedCmp50 + 0.02840120006931 * Complain0 + 0.01012130065838 * 
HigherEducationBinary0 ;
1341332   +   H11  = H11  +     0.19487730016213 * Education2n_Cycle
1341333   +          +    -0.07970756533219 * EducationBasic  +    -0.00249127525942 *
1341334   +        EducationGraduation  +     0.05566108043576 * EducationMaster
1341335   +          +    -0.44050788959765 * Marital_StatusDivorced
1341336   +          +     1.05705004944669 * Marital_StatusMarried
1341337   +          +    -0.96451435752717 * Marital_StatusSingle
1341338   +          +     1.00265132362409 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.19487730016213 * Education2n_Cycle + -0.07970756533219 * 
EducationBasic + -0.00249127525942 * EducationGraduation + 0.05566108043576 * EducationMaster 
+ -0.44050788959765 * Marital_StatusDivorced + 1.05705004944669 * Marital_StatusMarried + 
-0.96451435752717 * Marital_StatusSingle + 1.00265132362409 * Marital_StatusTogether ;
1341339   +   H12  = H12  +     0.19745100530679 * Education2n_Cycle
1341340   +          +    -0.10079088668307 * EducationBasic  +     0.02404299835038 *
1341341   +        EducationGraduation  +      0.0340690439206 * EducationMaster
1341342   +          +    -0.21967258137916 * Marital_StatusDivorced
1341343   +          +     0.37571162461413 * Marital_StatusMarried
1341344   +          +    -0.14215095739521 * Marital_StatusSingle
1341345   +          +     0.46670526265514 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.19745100530679 * Education2n_Cycle + -0.10079088668307 * 
EducationBasic + 0.02404299835038 * EducationGraduation + 0.0340690439206 * EducationMaster + 
-0.21967258137916 * Marital_StatusDivorced + 0.37571162461413 * Marital_StatusMarried + 
-0.14215095739521 * Marital_StatusSingle + 0.46670526265514 * Marital_StatusTogether ;
1341346   +   H13  = H13  +      0.0623691087211 * Education2n_Cycle
1341347   +          +    -0.33655773682797 * EducationBasic  +     0.16528476523732 *
1341348   +        EducationGraduation  +     0.12766333771333 * EducationMaster
1341349   +          +     -0.0802366153164 * Marital_StatusDivorced
1341350   +          +     0.03786873526752 * Marital_StatusMarried
1341351   +          +     0.00312869012906 * Marital_StatusSingle
1341352   +          +    -0.00653511004071 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.0623691087211 * Education2n_Cycle + -0.33655773682797 * 
EducationBasic + 0.16528476523732 * EducationGraduation + 0.12766333771333 * EducationMaster + 
-0.0802366153164 * Marital_StatusDivorced + 0.03786873526752 * Marital_StatusMarried + 
0.00312869012906 * Marital_StatusSingle + -0.00653511004071 * Marital_StatusTogether ;
1341353   +   H14  = H14  +     0.23561684440206 * Education2n_Cycle
1341354   +          +     0.19772542317614 * EducationBasic  +    -0.01658765862665 *
1341355   +        EducationGraduation  +    -0.04275711813742 * EducationMaster
1341356   +          +      0.1354388000076 * Marital_StatusDivorced
1341357   +          +    -0.39881989621029 * Marital_StatusMarried
1341358   +          +     0.31082414702417 * Marital_StatusSingle
1341359   +          +    -0.23211065362686 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.23561684440206 * Education2n_Cycle + 0.19772542317614 * 
EducationBasic + -0.01658765862665 * EducationGraduation + -0.04275711813742 * EducationMaster 
+ 0.1354388000076 * Marital_StatusDivorced + -0.39881989621029 * Marital_StatusMarried + 
0.31082414702417 * Marital_StatusSingle + -0.23211065362686 * Marital_StatusTogether ;
1341360   +   H15  = H15  +    -0.23088632938738 * Education2n_Cycle
1341361   +          +     0.08999420370752 * EducationBasic  +    -0.11102395071934 *
1341362   +        EducationGraduation  +     0.22556288381362 * EducationMaster
1341363   +          +    -0.21036089859855 * Marital_StatusDivorced
1341364   +          +     0.68363662719948 * Marital_StatusMarried
1341365   +          +    -0.52766746827942 * Marital_StatusSingle
1341366   +          +     0.85776128537024 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.23088632938738 * Education2n_Cycle + 0.08999420370752 * 
EducationBasic + -0.11102395071934 * EducationGraduation + 0.22556288381362 * EducationMaster 
+ -0.21036089859855 * Marital_StatusDivorced + 0.68363662719948 * Marital_StatusMarried + 
-0.52766746827942 * Marital_StatusSingle + 0.85776128537024 * Marital_StatusTogether ;
1341367   +   H11  =     1.95018025194886 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.95018025194886 + H11 ;
1341368   +   H12  =     0.17843928986556 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.17843928986556 + H12 ;
1341369   +   H13  =    -2.95793338914875 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -2.95793338914875 + H13 ;
1341370   +   H14  =     0.65864057076307 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.65864057076307 + H14 ;
1341371   +   H15  =    -0.16712892170551 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.16712892170551 + H15 ;
1341372   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1341373   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1341374   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1341375   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1341376   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1341377   +END;
MPRINT(EM_DIAGRAM):   END;
1341378   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1341379   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1341380   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1341381   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1341382   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1341383   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1341384   +END;
MPRINT(EM_DIAGRAM):   END;
1341385   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1341386   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1341387   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1341388   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1341389   +   P_DepVar1  =     -3.1843124920179 * H11  +     3.14684332137523 * H12
1341390   +          +     0.05566824550862 * H13  +    -2.15942017561302 * H14
1341391   +          +    -3.42546418986096 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.1843124920179 * H11 + 3.14684332137523 * H12 + 
0.05566824550862 * H13 + -2.15942017561302 * H14 + -3.42546418986096 * H15 ;
1341392   +   P_DepVar1  =    -1.09960037898167 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.09960037898167 + P_DepVar1 ;
1341393   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1341394   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1341395   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1341396   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1341397   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1341398   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1341399   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1341400   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1341401   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1341402   +END;
MPRINT(EM_DIAGRAM):   END;
1341403   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1341404   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1341405   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1341406   +END;
MPRINT(EM_DIAGRAM):   END;
1341407   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1341408   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1341409   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1341410   +END;
MPRINT(EM_DIAGRAM):   END;
1341411   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1341412   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1341413   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1341414   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1341415   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1341416   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1341417   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1341418   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1341419   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1341420   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1341421   +END;
MPRINT(EM_DIAGRAM):   END;
1341422   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1341423   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1341424   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1341425   +drop
1341426   +H11
1341427   +H12
1341428   +H13
1341429   +H14
1341430   +H15
1341431   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
1341432   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1341433    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1341434    quit;
1341435    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1341436    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1341437    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1341438    retain ID 2 Node "Neural7";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural7";
1341439    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1341440    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2702 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2702 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1341441    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1341442    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1341443    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2702 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2702 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1341444    proc sort data=EMWS8.Neural7_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural7_variableset out=_temp2(keep=NAME CREATOR);
1341445    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1341446    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL7_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1341447    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1341448    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1341449    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1341450    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1341451    proc contents data=EMWS8.Neural7_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural7_train out=_meta(keep=NAME) noprint;
1341452    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1341453    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1341454    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1341455    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1341456    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1341457    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1341458    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1341459    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1341460    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1341461    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1341461  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1527 rows and 5 columns.

1341462    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1341463    proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
1341464    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1527 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL_FCMP has 1527 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1341465    filename _pref
1341465  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1341466    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1341467    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1341468   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1341469   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1341470   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1341471   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1341472   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1341473   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1341474    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1341475    quit;
1341476    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1341477    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1341478    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1341479    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1341480    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1341481    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1341482    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1341483    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1341484    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1341485    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1341486    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1341487    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1341488    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1341489    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1341490    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1341491    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1341492    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1341493    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1341494    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1341495    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1341496    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1341497    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1341498    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1341499    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1341500    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1341501    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1341502    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1341502  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1341503    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1341504    proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
1341505    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL_FCMP has 1531 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1341506    filename _pref
1341506  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1341507    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1341508    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1341509   +
1341510   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1341511   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1341511  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1341512   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1341513   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1341514   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1341515   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1341516   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1341517    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1341518    quit;
1341519    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1341520    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1341521    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1341522    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1341523    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1341524    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1341525    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1341526    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1341527    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1341528    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1341529    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1341530    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1341531    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1341532    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1341533    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1341534    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1341535    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1341536    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1341537    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1341538    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1341539    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1341540    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1341541    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1341542    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1341543    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1341544    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1341545    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1341545  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1341546    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1341547    proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
1341548    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL_FCMP has 1570 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1341549    filename _pref
1341549  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1341550    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1341551    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1341552   +
1341553   +
1341554   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1341555   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1341556   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1341557   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1341558   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1341559   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1341560   +
1341561   +
1341562   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1341563   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1341564   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1341565   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1341566   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1341567   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1341568   +
1341569   +
1341570   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1341571   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1341572   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1341573   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1341574   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1341575   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1341576   +
1341577   +
1341578   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1341579   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1341580   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1341581   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1341582   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1341583   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1341584   +
1341585   +
1341586   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1341587   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1341588   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1341589   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1341590   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1341591   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1341592   +
1341593   +
1341594   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1341595   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1341596   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1341597   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1341598   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1341599   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1341600   +
1341601   +
1341602   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1341603   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1341604   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1341605   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1341606   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1341607   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1341608   +
1341609   +
1341610   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1341611   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1341612   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1341613   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1341614   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1341615   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1341616   +if
1341617   +_FILTERNORM1 not in ( '.')
1341618   + and
1341619   +_FILTERNORM2 not in ( '.')
1341620   + and
1341621   +_FILTERNORM3 not in ( '.')
1341622   + and
1341623   +_FILTERNORM4 not in ( '.')
1341624   + and
1341625   +_FILTERNORM5 not in ( '.')
1341626   + and
1341627   +_FILTERNORM6 not in ( '.')
1341628   + and
1341629   +_FILTERNORM7 not in ( ' ')
1341630   + and
1341631   +_FILTERNORM8 not in ( ' ')
1341632   +and
1341633   +( Dt_Customer ne .)
1341634   +and ( Income ne . and (Income<=107000))
1341635   +and ( Kidhome ne .)
1341636   +and ( MntFishProducts ne .)
1341637   +and ( MntFruits ne .)
1341638   +and ( MntGoldProds ne .)
1341639   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1341640   +and ( MntSweetProducts ne .)
1341641   +and ( MntWines ne .)
1341642   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1341643   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1341644   +and ( NumStorePurchases ne .)
1341645   +and ( NumWebPurchases ne .)
1341646   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1341647   +and ( Recency ne .)
1341648   +and ( Teenhome ne .)
1341649   +and ( Year_Birth ne .)
1341650   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1341651   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1341652   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1341653   +end;
MPRINT(EM_DIAGRAM):   end;
1341654   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1341655   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1341656    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1341657    quit;
1341658    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1341659    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1341660    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1341661    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1341662    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1341663    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1341664    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1341665    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1341666    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1341667    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1341668    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1341669    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1341670    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1341671    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1341672    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1341673    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1341674    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1341675    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1341676    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1341677    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1341678    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1341679    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1341680    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1341681    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1341682    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1341683    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1341684    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1341684  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1341685    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1341686    proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
1341687    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL_FCMP has 1636 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1341688    %macro varDept(fcmpdata=,id=);
1341689    %global nobs&id scoreFlag&id;
1341690    %let scoreFlag&id = 0;
1341691    %if &id=1 or ^&fcmpStart %then %do;
1341692    proc sort data=&fcmpdata out=_temp&id nodupkey;
1341693    by NAME;
1341694    where id=&id and LHS in( %let j=1;
1341695    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1341696    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1341697    "&var" %let j = %eval(&j+1);
1341698    %end;
1341699    );
1341700    run;
1341701    %let dsid = %sysfunc(open(_temp&id));
1341702    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1341703    %let dsid = %sysfunc(close(&dsid));
1341704    %if &&nobs&id %then %do;
1341705    %let scoreFlag&id = 1;
1341706    %let fcmpStart = 1;
1341707    %end;
1341708    %else %let fcmpStart = 0;
1341709    %end;
1341710    %else %do;
1341711    proc sort data=&fcmpdata out=_tempid;
1341712    where id=&id;
1341713    by LHS;
1341714    run;
1341715    %let dsid = %sysfunc(open(_tempid));
1341716    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1341717    %let dsid = %sysfunc(close(&dsid));
1341718    %if ^&&nobs&id %then %do;
1341719    proc datasets lib=work nolist;
1341720    delete _tempid;
1341721    run;
1341722    quit;
1341723    %end;
1341724    %else %do;
1341725    data _tempAll;
1341726    set %let j=%eval(&id-1);
1341727    %do x=1 %to &j;
1341728    %if &&nobs&x %then %do;
1341729    _temp&x %end;
1341730    %end;
1341731    ;
1341732    run;
1341733    proc sql;
1341734    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1341734  ! work._tempid p2 where p.name=p2.lhs;
1341735    quit;
1341736    data _temp&id;
1341737    set _temp&id;
1341738    where LHS ne '' and NAME ne '' and Node ne '';
1341739    run;
1341740    proc datasets lib=work nolist;
1341741    delete _tempAll;
1341742    run;
1341743    %let dsid = %sysfunc(open(_temp&id));
1341744    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1341745    %let dsid = %sysfunc(close(&dsid));
1341746    %if ^&&nobs&id %then %do;
1341747    proc datasets lib=work nolist;
1341748    delete _temp&id;
1341749    run;
1341750    quit;
1341751    %end;
1341752    %else %do;
1341753    %let scoreFlag&id = 1;
1341754    data _temp&id;
1341755    set _temp&id;
1341756    where LHS ne NAME and node ne '';
1341757    run;
1341758    %let dsid = %sysfunc(open(_temp&id));
1341759    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1341760    %let dsid = %sysfunc(close(&dsid));
1341761    %if ^&&nobs&id %then %do;
1341762    proc datasets lib=work nolist;
1341763    delete _temp&id;
1341764    run;
1341765    quit;
1341766    %end;
1341767    %else %do;
1341768    proc sort data=_temp&id nodupkey;
1341769    by LHS NAME;
1341770    run;
1341771    %end;
1341772    %end;
1341773    %end;
1341774    %end;
1341775    %mend varDept;
1341776    %macro optCode(outdata=fcmpdata);
1341777    %global fcmpStart;
1341778    %let fcmpStart = 0;
1341779    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1341780    %let NumNodes=9;
1341781    %do k=1 %to &NumNodes;
1341782    %vardept(fcmpdata=&outdata, id=&k);
1341783    %end;
1341784    %mend optCode;
1341785    %optcode(outData=EMWS8.Ensmbl_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1341786    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1341787    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1341788    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1341789    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1341790    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1341791    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1341792    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1341793    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1341794    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1341795    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1341795  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

1341796    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1341797    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1341798    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1341799    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1341800    filename _pref
1341800  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMPUBLISHSCORE.sas";
1341801    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1341802    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMPUBLISHSCORE.sas.
1341803   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1341804   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1341805   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1341806   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1341807   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1341808   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1341809   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1341810   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1341811   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1341812   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1341813   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1341814   +LENGTH _WARN_ $4
1341815   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1341816   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1341817   +
1341818   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1341819   +
1341820   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1341821   +
1341822   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1341823   +
1341824   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1341825   +
1341826   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1341827   +
1341828   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1341829   +
1341830   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1341831   +
1341832   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1341833   +
1341834   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1341835   +
1341836   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1341837   +
1341838   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1341839   +
1341840   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1341841   +
1341842   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1341843   +
1341844   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1341845   +
1341846   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1341847   +
1341848   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1341849   +
1341850   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1341851   +
1341852   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1341853   +
1341854   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1341855   +
1341856   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1341857   +
1341858   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1341859   +
1341860   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1341861   +
1341862   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1341863   +
1341864   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1341865   +
1341866   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1341867   +
1341868   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1341869   +
1341870   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1341871   +
1341872   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1341873   +
1341874   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1341875   +
1341876   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1341877   +
1341878   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1341879   +
1341880   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1341881   +
1341882   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1341883   +
1341884   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1341885   +
1341886   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1341887   +
1341888   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1341889   +
1341890   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1341891   +
1341892   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1341893   +
1341894   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1341895   +
1341896   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1341897   +
1341898   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1341899   +
1341900   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1341901   +
1341902   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1341903   +
1341904   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1341905   +
1341906   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1341907   +
1341908   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1341909   +
1341910   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1341911   +
1341912   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1341913   +
1341914   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1341915   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1341916   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1341917   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1341918   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1341919   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1341920   +end;
MPRINT(EM_DIAGRAM):   end;
1341921   +else do;
MPRINT(EM_DIAGRAM):   else do;
1341922   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1341923   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1341924   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1341925   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1341926   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1341927   +   end;
MPRINT(EM_DIAGRAM):   end;
1341928   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1341929   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1341930   +   end;
MPRINT(EM_DIAGRAM):   end;
1341931   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1341932   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1341933   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1341934   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1341935   +   end;
MPRINT(EM_DIAGRAM):   end;
1341936   +end;
MPRINT(EM_DIAGRAM):   end;
1341937   +
1341938   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1341939   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1341940   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1341941   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1341942   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1341943   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1341944   +end;
MPRINT(EM_DIAGRAM):   end;
1341945   +else do;
MPRINT(EM_DIAGRAM):   else do;
1341946   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1341947   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1341948   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1341949   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1341950   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1341951   +   end;
MPRINT(EM_DIAGRAM):   end;
1341952   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1341953   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1341954   +   end;
MPRINT(EM_DIAGRAM):   end;
1341955   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1341956   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1341957   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1341958   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1341959   +   end;
MPRINT(EM_DIAGRAM):   end;
1341960   +end;
MPRINT(EM_DIAGRAM):   end;
1341961   +
1341962   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1341963   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1341964   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1341965   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1341966   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1341967   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1341968   +end;
MPRINT(EM_DIAGRAM):   end;
1341969   +else do;
MPRINT(EM_DIAGRAM):   else do;
1341970   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1341971   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1341972   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1341973   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1341974   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1341975   +   end;
MPRINT(EM_DIAGRAM):   end;
1341976   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1341977   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1341978   +   end;
MPRINT(EM_DIAGRAM):   end;
1341979   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1341980   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1341981   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1341982   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1341983   +   end;
MPRINT(EM_DIAGRAM):   end;
1341984   +end;
MPRINT(EM_DIAGRAM):   end;
1341985   +
1341986   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1341987   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1341988   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1341989   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1341990   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1341991   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1341992   +end;
MPRINT(EM_DIAGRAM):   end;
1341993   +else do;
MPRINT(EM_DIAGRAM):   else do;
1341994   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1341995   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1341996   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1341997   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1341998   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1341999   +   end;
MPRINT(EM_DIAGRAM):   end;
1342000   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1342001   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1342002   +   end;
MPRINT(EM_DIAGRAM):   end;
1342003   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1342004   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1342005   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1342006   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1342007   +   end;
MPRINT(EM_DIAGRAM):   end;
1342008   +end;
MPRINT(EM_DIAGRAM):   end;
1342009   +
1342010   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1342011   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1342012   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1342013   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1342014   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1342015   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1342016   +end;
MPRINT(EM_DIAGRAM):   end;
1342017   +else do;
MPRINT(EM_DIAGRAM):   else do;
1342018   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1342019   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1342020   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1342021   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1342022   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1342023   +   end;
MPRINT(EM_DIAGRAM):   end;
1342024   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1342025   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1342026   +   end;
MPRINT(EM_DIAGRAM):   end;
1342027   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1342028   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1342029   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1342030   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1342031   +   end;
MPRINT(EM_DIAGRAM):   end;
1342032   +end;
MPRINT(EM_DIAGRAM):   end;
1342033   +
1342034   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1342035   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1342036   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1342037   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1342038   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1342039   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1342040   +end;
MPRINT(EM_DIAGRAM):   end;
1342041   +else do;
MPRINT(EM_DIAGRAM):   else do;
1342042   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1342043   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1342044   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1342045   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1342046   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1342047   +   end;
MPRINT(EM_DIAGRAM):   end;
1342048   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1342049   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1342050   +   end;
MPRINT(EM_DIAGRAM):   end;
1342051   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1342052   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1342053   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1342054   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1342055   +   end;
MPRINT(EM_DIAGRAM):   end;
1342056   +end;
MPRINT(EM_DIAGRAM):   end;
1342057   +
1342058   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1342059   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1342060   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1342061   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1342062   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1342063   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1342064   +end;
MPRINT(EM_DIAGRAM):   end;
1342065   +else do;
MPRINT(EM_DIAGRAM):   else do;
1342066   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1342067   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1342068   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1342069   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1342070   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1342071   +   end;
MPRINT(EM_DIAGRAM):   end;
1342072   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1342073   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1342074   +   end;
MPRINT(EM_DIAGRAM):   end;
1342075   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1342076   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1342077   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1342078   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1342079   +   end;
MPRINT(EM_DIAGRAM):   end;
1342080   +end;
MPRINT(EM_DIAGRAM):   end;
1342081   +
1342082   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1342083   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1342084   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1342085   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1342086   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1342087   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1342088   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1342089   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1342090   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1342091   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1342092   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1342093   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1342094   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1342095   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1342096   +end;
MPRINT(EM_DIAGRAM):   end;
1342097   +else do;
MPRINT(EM_DIAGRAM):   else do;
1342098   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1342099   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1342100   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1342101   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1342102   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1342103   +   end;
MPRINT(EM_DIAGRAM):   end;
1342104   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1342105   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1342106   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1342107   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1342108   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1342109   +   end;
MPRINT(EM_DIAGRAM):   end;
1342110   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1342111   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1342112   +   end;
MPRINT(EM_DIAGRAM):   end;
1342113   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1342114   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1342115   +   end;
MPRINT(EM_DIAGRAM):   end;
1342116   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1342117   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1342118   +   end;
MPRINT(EM_DIAGRAM):   end;
1342119   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1342120   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1342121   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1342122   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1342123   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1342124   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1342125   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1342126   +   end;
MPRINT(EM_DIAGRAM):   end;
1342127   +end;
MPRINT(EM_DIAGRAM):   end;
1342128   +
1342129   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1342130   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1342131   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1342132   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1342133   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1342134   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1342135   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1342136   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1342137   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1342138   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1342139   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1342140   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1342141   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1342142   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1342143   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1342144   +end;
MPRINT(EM_DIAGRAM):   end;
1342145   +else do;
MPRINT(EM_DIAGRAM):   else do;
1342146   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1342147   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1342148   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1342149   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1342150   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1342151   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1342152   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1342153   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1342154   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1342155   +         end;
MPRINT(EM_DIAGRAM):   end;
1342156   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1342157   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1342158   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1342159   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1342160   +            end;
MPRINT(EM_DIAGRAM):   end;
1342161   +         end;
MPRINT(EM_DIAGRAM):   end;
1342162   +      end;
MPRINT(EM_DIAGRAM):   end;
1342163   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1342164   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1342165   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1342166   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1342167   +         end;
MPRINT(EM_DIAGRAM):   end;
1342168   +      end;
MPRINT(EM_DIAGRAM):   end;
1342169   +   end;
MPRINT(EM_DIAGRAM):   end;
1342170   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1342171   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1342172   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1342173   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1342174   +      end;
MPRINT(EM_DIAGRAM):   end;
1342175   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1342176   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1342177   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1342178   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1342179   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1342180   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1342181   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1342182   +         end;
MPRINT(EM_DIAGRAM):   end;
1342183   +      end;
MPRINT(EM_DIAGRAM):   end;
1342184   +   end;
MPRINT(EM_DIAGRAM):   end;
1342185   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1342186   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1342187   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1342188   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1342189   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1342190   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1342191   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1342192   +   end;
MPRINT(EM_DIAGRAM):   end;
1342193   +end;
MPRINT(EM_DIAGRAM):   end;
1342194   +
1342195   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1342196   +*** Checking missing input Interval
1342197   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1342198   +
1342199   +IF NMISS(
1342200   +   AcceptedCmpTotal ,
1342201   +   Age ,
1342202   +   Frq ,
1342203   +   Income ,
1342204   +   Kidhome ,
1342205   +   Mnt ,
1342206   +   MntFishProducts ,
1342207   +   MntFruits ,
1342208   +   MntGoldProds ,
1342209   +   MntMeatProducts ,
1342210   +   MntSweetProducts ,
1342211   +   MntWines ,
1342212   +   MonthsAsCustomer ,
1342213   +   NumCatalogPurchases ,
1342214   +   NumDealsPurchases ,
1342215   +   NumDistPurchases ,
1342216   +   NumStorePurchases ,
1342217   +   NumWebPurchases ,
1342218   +   NumWebVisitsMonth ,
1342219   +   RFMstat ,
1342220   +   RMntFrq ,
1342221   +   Recency ,
1342222   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1342223   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1342224   +
1342225   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1342226   +END;
MPRINT(EM_DIAGRAM):   END;
1342227   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1342228   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1342229   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1342230   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1342231   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1342232   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1342233   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1342234   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1342235   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1342236   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1342237   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1342238   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1342239   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1342240   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1342241   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1342242   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1342243   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1342244   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1342245   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1342246   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1342247   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1342248   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1342249   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1342250   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1342251   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1342252   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1342253   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1342254   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1342255   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1342256   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1342257   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1342258   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1342259   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1342260   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1342261   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1342262   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1342263   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1342264   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1342265   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1342266   +END;
MPRINT(EM_DIAGRAM):   END;
1342267   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1342268   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1342269   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1342270   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1342271   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1342272   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1342273   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1342274   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1342275   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1342276   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1342277   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1342278   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1342279   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1342280   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1342281   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1342282   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1342283   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1342284   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1342285   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1342286   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1342287   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1342288   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1342289   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1342290   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1342291   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1342292   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1342293   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1342294   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1342295   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1342296   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1342297   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1342298   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1342299   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1342300   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1342301   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1342302   +   ELSE S_NumCatalogPurchases
1342303   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1342304   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1342305   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1342306   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1342307   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1342308   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1342309   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1342310   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1342311   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1342312   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1342313   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1342314   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1342315   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1342316   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1342317   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1342318   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1342319   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1342320   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1342321   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1342322   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1342323   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1342324   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1342325   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1342326   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1342327   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1342328   +END;
MPRINT(EM_DIAGRAM):   END;
1342329   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1342330   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1342331   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1342332   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1342333   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1342334   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1342335   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1342336   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1342337   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1342338   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1342339   +   H11  =     0.19960473225933 * S_AcceptedCmpTotal  +     -0.3891753208081 *
1342340   +        S_Age  +    -0.38863469907463 * S_Frq  +      -0.218282547936 *
1342341   +        S_Income  +     -0.0761121347886 * S_Kidhome
1342342   +          +     0.13231844745195 * S_Mnt  +     0.03847734904026 *
1342343   +        S_MntFishProducts  +    -0.08557040854782 * S_MntFruits
1342344   +          +     0.05679165614645 * S_MntGoldProds  +     0.98985461955462 *
1342345   +        S_MntMeatProducts  +    -0.25089034197541 * S_MntSweetProducts
1342346   +          +    -0.20961106315243 * S_MntWines  +     0.00877322606769 *
1342347   +        S_MonthsAsCustomer  +     0.42365427657146 * S_NumCatalogPurchases
1342348   +          +     0.83893684194413 * S_NumDealsPurchases
1342349   +          +     0.23391006875291 * S_NumDistPurchases
1342350   +          +    -0.63370705462074 * S_NumStorePurchases
1342351   +          +     -0.9137408014067 * S_NumWebPurchases
1342352   +          +     0.89109351479441 * S_NumWebVisitsMonth
1342353   +          +     0.40379703973869 * S_RFMstat  +     0.02992612739892 *
1342354   +        S_RMntFrq  +    -0.85349828740223 * S_Recency
1342355   +          +     0.17501150943585 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.19960473225933 * S_AcceptedCmpTotal + -0.3891753208081 * S_Age + 
-0.38863469907463 * S_Frq + -0.218282547936 * S_Income + -0.0761121347886 * S_Kidhome + 
0.13231844745195 * S_Mnt + 0.03847734904026 * S_MntFishProducts + -0.08557040854782 * 
S_MntFruits + 0.05679165614645 * S_MntGoldProds + 0.98985461955462 * S_MntMeatProducts + 
-0.25089034197541 * S_MntSweetProducts + -0.20961106315243 * S_MntWines + 0.00877322606769 * 
S_MonthsAsCustomer + 0.42365427657146 * S_NumCatalogPurchases + 0.83893684194413 * 
S_NumDealsPurchases + 0.23391006875291 * S_NumDistPurchases + -0.63370705462074 * 
S_NumStorePurchases + -0.9137408014067 * S_NumWebPurchases + 0.89109351479441 * 
S_NumWebVisitsMonth + 0.40379703973869 * S_RFMstat + 0.02992612739892 * S_RMntFrq + 
-0.85349828740223 * S_Recency + 0.17501150943585 * S_Teenhome ;
1342356   +   H12  =     0.57191299319193 * S_AcceptedCmpTotal  +     0.06554370511829 *
1342357   +        S_Age  +    -0.36683285440702 * S_Frq  +     0.38867787826981 *
1342358   +        S_Income  +    -0.43909782819329 * S_Kidhome
1342359   +          +    -0.20015496934973 * S_Mnt  +    -0.12914218014786 *
1342360   +        S_MntFishProducts  +    -0.15398661741952 * S_MntFruits
1342361   +          +    -0.05274722398466 * S_MntGoldProds  +     0.56013165499725 *
1342362   +        S_MntMeatProducts  +     0.05414820118553 * S_MntSweetProducts
1342363   +          +     -0.3600749061383 * S_MntWines  +    -0.10603301590721 *
1342364   +        S_MonthsAsCustomer  +     0.36776848192468 * S_NumCatalogPurchases
1342365   +          +      0.2218973353638 * S_NumDealsPurchases
1342366   +          +      0.0062360950528 * S_NumDistPurchases
1342367   +          +    -0.57621747951002 * S_NumStorePurchases
1342368   +          +    -0.33564890905657 * S_NumWebPurchases
1342369   +          +     0.82482365540301 * S_NumWebVisitsMonth
1342370   +          +     0.00853485340844 * S_RFMstat  +    -0.08358062109702 *
1342371   +        S_RMntFrq  +    -0.77306663228806 * S_Recency
1342372   +          +    -0.36028078495757 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.57191299319193 * S_AcceptedCmpTotal + 0.06554370511829 * S_Age + 
-0.36683285440702 * S_Frq + 0.38867787826981 * S_Income + -0.43909782819329 * S_Kidhome + 
-0.20015496934973 * S_Mnt + -0.12914218014786 * S_MntFishProducts + -0.15398661741952 * 
S_MntFruits + -0.05274722398466 * S_MntGoldProds + 0.56013165499725 * S_MntMeatProducts + 
0.05414820118553 * S_MntSweetProducts + -0.3600749061383 * S_MntWines + -0.10603301590721 * 
S_MonthsAsCustomer + 0.36776848192468 * S_NumCatalogPurchases + 0.2218973353638 * 
S_NumDealsPurchases + 0.0062360950528 * S_NumDistPurchases + -0.57621747951002 * 
S_NumStorePurchases + -0.33564890905657 * S_NumWebPurchases + 0.82482365540301 * 
S_NumWebVisitsMonth + 0.00853485340844 * S_RFMstat + -0.08358062109702 * S_RMntFrq + 
-0.77306663228806 * S_Recency + -0.36028078495757 * S_Teenhome ;
1342373   +   H13  =     0.04958757890989 * S_AcceptedCmpTotal  +    -0.35438992757247 *
1342374   +        S_Age  +    -0.00591919176562 * S_Frq  +    -0.27415788425743 *
1342375   +        S_Income  +    -0.03572236011846 * S_Kidhome
1342376   +          +    -0.13070406034722 * S_Mnt  +     0.18129697551902 *
1342377   +        S_MntFishProducts  +     0.12543390103308 * S_MntFruits
1342378   +          +    -0.03846216245953 * S_MntGoldProds  +      0.1535321444723 *
1342379   +        S_MntMeatProducts  +     0.43228964267878 * S_MntSweetProducts
1342380   +          +     0.04044476981059 * S_MntWines  +     0.05282237039086 *
1342381   +        S_MonthsAsCustomer  +    -0.22394386505524 * S_NumCatalogPurchases
1342382   +          +      -0.174147250062 * S_NumDealsPurchases
1342383   +          +    -0.22921682388864 * S_NumDistPurchases
1342384   +          +     0.41526854684299 * S_NumStorePurchases
1342385   +          +    -0.27675565493519 * S_NumWebPurchases
1342386   +          +    -0.31519058220182 * S_NumWebVisitsMonth
1342387   +          +    -0.46583825032896 * S_RFMstat  +    -0.00324569060855 *
1342388   +        S_RMntFrq  +     0.80762508263239 * S_Recency
1342389   +          +    -0.05609675878255 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.04958757890989 * S_AcceptedCmpTotal + -0.35438992757247 * S_Age 
+ -0.00591919176562 * S_Frq + -0.27415788425743 * S_Income + -0.03572236011846 * S_Kidhome + 
-0.13070406034722 * S_Mnt + 0.18129697551902 * S_MntFishProducts + 0.12543390103308 * 
S_MntFruits + -0.03846216245953 * S_MntGoldProds + 0.1535321444723 * S_MntMeatProducts + 
0.43228964267878 * S_MntSweetProducts + 0.04044476981059 * S_MntWines + 0.05282237039086 * 
S_MonthsAsCustomer + -0.22394386505524 * S_NumCatalogPurchases + -0.174147250062 * 
S_NumDealsPurchases + -0.22921682388864 * S_NumDistPurchases + 0.41526854684299 * 
S_NumStorePurchases + -0.27675565493519 * S_NumWebPurchases + -0.31519058220182 * 
S_NumWebVisitsMonth + -0.46583825032896 * S_RFMstat + -0.00324569060855 * S_RMntFrq + 
0.80762508263239 * S_Recency + -0.05609675878255 * S_Teenhome ;
1342390   +   H14  =     0.02595189997947 * S_AcceptedCmpTotal  +     0.06072450724422 *
1342391   +        S_Age  +     0.02299020571692 * S_Frq  +     -0.4565780535519 *
1342392   +        S_Income  +    -0.04788369327547 * S_Kidhome
1342393   +          +     0.02007551763294 * S_Mnt  +    -0.18053103558393 *
1342394   +        S_MntFishProducts  +    -0.09855244687933 * S_MntFruits
1342395   +          +    -0.15322502970206 * S_MntGoldProds  +    -0.66766356766896 *
1342396   +        S_MntMeatProducts  +     0.07957560397307 * S_MntSweetProducts
1342397   +          +     0.41567167308223 * S_MntWines  +     0.28903949823868 *
1342398   +        S_MonthsAsCustomer  +    -0.63829948878415 * S_NumCatalogPurchases
1342399   +          +    -0.46022430102423 * S_NumDealsPurchases
1342400   +          +     0.15831339342044 * S_NumDistPurchases
1342401   +          +     0.22480465173719 * S_NumStorePurchases
1342402   +          +     0.44798923484609 * S_NumWebPurchases
1342403   +          +    -0.71094702920004 * S_NumWebVisitsMonth
1342404   +          +     0.20620433566947 * S_RFMstat  +     -0.0106779556039 *
1342405   +        S_RMntFrq  +     0.79879111927102 * S_Recency
1342406   +          +      0.3056416743951 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.02595189997947 * S_AcceptedCmpTotal + 0.06072450724422 * S_Age + 
0.02299020571692 * S_Frq + -0.4565780535519 * S_Income + -0.04788369327547 * S_Kidhome + 
0.02007551763294 * S_Mnt + -0.18053103558393 * S_MntFishProducts + -0.09855244687933 * 
S_MntFruits + -0.15322502970206 * S_MntGoldProds + -0.66766356766896 * S_MntMeatProducts + 
0.07957560397307 * S_MntSweetProducts + 0.41567167308223 * S_MntWines + 0.28903949823868 * 
S_MonthsAsCustomer + -0.63829948878415 * S_NumCatalogPurchases + -0.46022430102423 * 
S_NumDealsPurchases + 0.15831339342044 * S_NumDistPurchases + 0.22480465173719 * 
S_NumStorePurchases + 0.44798923484609 * S_NumWebPurchases + -0.71094702920004 * 
S_NumWebVisitsMonth + 0.20620433566947 * S_RFMstat + -0.0106779556039 * S_RMntFrq + 
0.79879111927102 * S_Recency + 0.3056416743951 * S_Teenhome ;
1342407   +   H15  =    -0.13742649287176 * S_AcceptedCmpTotal  +     0.10145150511644 *
1342408   +        S_Age  +     -0.2837159248953 * S_Frq  +    -0.64706237411697 *
1342409   +        S_Income  +     0.53994304261534 * S_Kidhome
1342410   +          +    -0.09131017926694 * S_Mnt  +     0.02887823775959 *
1342411   +        S_MntFishProducts  +     0.08381294541966 * S_MntFruits
1342412   +          +     0.04873881168004 * S_MntGoldProds  +    -0.54973576310335 *
1342413   +        S_MntMeatProducts  +     0.05878621089895 * S_MntSweetProducts
1342414   +          +     0.21348875371185 * S_MntWines  +    -0.12051903605528 *
1342415   +        S_MonthsAsCustomer  +     -0.5945274016061 * S_NumCatalogPurchases
1342416   +          +     0.03650267472167 * S_NumDealsPurchases
1342417   +          +    -0.03322709524939 * S_NumDistPurchases
1342418   +          +     -0.0022226424472 * S_NumStorePurchases
1342419   +          +    -0.10131236740674 * S_NumWebPurchases
1342420   +          +    -0.69846819287714 * S_NumWebVisitsMonth
1342421   +          +    -0.13757300915933 * S_RFMstat  +     0.22262647555954 *
1342422   +        S_RMntFrq  +     0.92766392256433 * S_Recency
1342423   +          +      0.3625724229994 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.13742649287176 * S_AcceptedCmpTotal + 0.10145150511644 * S_Age 
+ -0.2837159248953 * S_Frq + -0.64706237411697 * S_Income + 0.53994304261534 * S_Kidhome + 
-0.09131017926694 * S_Mnt + 0.02887823775959 * S_MntFishProducts + 0.08381294541966 * 
S_MntFruits + 0.04873881168004 * S_MntGoldProds + -0.54973576310335 * S_MntMeatProducts + 
0.05878621089895 * S_MntSweetProducts + 0.21348875371185 * S_MntWines + -0.12051903605528 * 
S_MonthsAsCustomer + -0.5945274016061 * S_NumCatalogPurchases + 0.03650267472167 * 
S_NumDealsPurchases + -0.03322709524939 * S_NumDistPurchases + -0.0022226424472 * 
S_NumStorePurchases + -0.10131236740674 * S_NumWebPurchases + -0.69846819287714 * 
S_NumWebVisitsMonth + -0.13757300915933 * S_RFMstat + 0.22262647555954 * S_RMntFrq + 
0.92766392256433 * S_Recency + 0.3625724229994 * S_Teenhome ;
1342424   +   H16  =     -0.3666088571096 * S_AcceptedCmpTotal  +     0.07935193188365 *
1342425   +        S_Age  +    -0.42829147771921 * S_Frq  +    -0.42276511188403 *
1342426   +        S_Income  +    -0.52576099429582 * S_Kidhome
1342427   +          +    -0.25780820577456 * S_Mnt  +     0.15053849421837 *
1342428   +        S_MntFishProducts  +      0.0508038259278 * S_MntFruits
1342429   +          +    -0.20778953304026 * S_MntGoldProds  +    -0.19733433417367 *
1342430   +        S_MntMeatProducts  +    -0.19779369509324 * S_MntSweetProducts
1342431   +          +     -0.0614254708905 * S_MntWines  +    -0.24324114549599 *
1342432   +        S_MonthsAsCustomer  +    -0.51401967366294 * S_NumCatalogPurchases
1342433   +          +    -0.50209914729324 * S_NumDealsPurchases
1342434   +          +    -0.46217244513696 * S_NumDistPurchases
1342435   +          +      0.1832648560248 * S_NumStorePurchases
1342436   +          +     0.02866153257072 * S_NumWebPurchases
1342437   +          +    -0.21659886944483 * S_NumWebVisitsMonth
1342438   +          +    -0.05645651757643 * S_RFMstat  +    -0.09976672213368 *
1342439   +        S_RMntFrq  +      0.0483484608321 * S_Recency
1342440   +          +    -0.11406727037802 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.3666088571096 * S_AcceptedCmpTotal + 0.07935193188365 * S_Age + 
-0.42829147771921 * S_Frq + -0.42276511188403 * S_Income + -0.52576099429582 * S_Kidhome + 
-0.25780820577456 * S_Mnt + 0.15053849421837 * S_MntFishProducts + 0.0508038259278 * 
S_MntFruits + -0.20778953304026 * S_MntGoldProds + -0.19733433417367 * S_MntMeatProducts + 
-0.19779369509324 * S_MntSweetProducts + -0.0614254708905 * S_MntWines + -0.24324114549599 * 
S_MonthsAsCustomer + -0.51401967366294 * S_NumCatalogPurchases + -0.50209914729324 * 
S_NumDealsPurchases + -0.46217244513696 * S_NumDistPurchases + 0.1832648560248 * 
S_NumStorePurchases + 0.02866153257072 * S_NumWebPurchases + -0.21659886944483 * 
S_NumWebVisitsMonth + -0.05645651757643 * S_RFMstat + -0.09976672213368 * S_RMntFrq + 
0.0483484608321 * S_Recency + -0.11406727037802 * S_Teenhome ;
1342441   +   H11  = H11  +     -0.7601248031008 * AcceptedCmp10
1342442   +          +    -0.35671966174677 * AcceptedCmp20  +     -0.3945561586942 *
1342443   +        AcceptedCmp30  +    -0.54583010778346 * AcceptedCmp40
1342444   +          +    -0.38674738859251 * AcceptedCmp50  +    -0.14831343728217 *
1342445   +        Complain0  +     0.13245455648369 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.7601248031008 * AcceptedCmp10 + -0.35671966174677 * 
AcceptedCmp20 + -0.3945561586942 * AcceptedCmp30 + -0.54583010778346 * AcceptedCmp40 + 
-0.38674738859251 * AcceptedCmp50 + -0.14831343728217 * Complain0 + 0.13245455648369 * 
HigherEducationBinary0 ;
1342446   +   H12  = H12  +    -0.03783139750322 * AcceptedCmp10
1342447   +          +      0.0569762433011 * AcceptedCmp20  +    -0.21834950194396 *
1342448   +        AcceptedCmp30  +    -0.14978730026923 * AcceptedCmp40
1342449   +          +    -0.27826227141524 * AcceptedCmp50  +     0.05227448052769 *
1342450   +        Complain0  +     0.00441210978534 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.03783139750322 * AcceptedCmp10 + 0.0569762433011 * 
AcceptedCmp20 + -0.21834950194396 * AcceptedCmp30 + -0.14978730026923 * AcceptedCmp40 + 
-0.27826227141524 * AcceptedCmp50 + 0.05227448052769 * Complain0 + 0.00441210978534 * 
HigherEducationBinary0 ;
1342451   +   H13  = H13  +     0.20786972077091 * AcceptedCmp10
1342452   +          +     0.06123497721778 * AcceptedCmp20  +     0.21326165753825 *
1342453   +        AcceptedCmp30  +    -0.17148613450886 * AcceptedCmp40
1342454   +          +     0.05564403918936 * AcceptedCmp50  +     0.07876117708017 *
1342455   +        Complain0  +     0.40703714529737 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.20786972077091 * AcceptedCmp10 + 0.06123497721778 * 
AcceptedCmp20 + 0.21326165753825 * AcceptedCmp30 + -0.17148613450886 * AcceptedCmp40 + 
0.05564403918936 * AcceptedCmp50 + 0.07876117708017 * Complain0 + 0.40703714529737 * 
HigherEducationBinary0 ;
1342456   +   H14  = H14  +    -0.22288812741222 * AcceptedCmp10
1342457   +          +     0.09082443183915 * AcceptedCmp20  +     0.22381340075277 *
1342458   +        AcceptedCmp30  +    -0.33987044425695 * AcceptedCmp40
1342459   +          +     0.23335102436732 * AcceptedCmp50  +    -0.04181636989839 *
1342460   +        Complain0  +     0.07120379166339 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.22288812741222 * AcceptedCmp10 + 0.09082443183915 * 
AcceptedCmp20 + 0.22381340075277 * AcceptedCmp30 + -0.33987044425695 * AcceptedCmp40 + 
0.23335102436732 * AcceptedCmp50 + -0.04181636989839 * Complain0 + 0.07120379166339 * 
HigherEducationBinary0 ;
1342461   +   H15  = H15  +     0.42056230102758 * AcceptedCmp10
1342462   +          +     0.53764215961118 * AcceptedCmp20  +     0.37023411618924 *
1342463   +        AcceptedCmp30  +     0.42138560084911 * AcceptedCmp40
1342464   +          +      0.3085748174994 * AcceptedCmp50  +     0.22539323627952 *
1342465   +        Complain0  +    -0.21244663243009 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.42056230102758 * AcceptedCmp10 + 0.53764215961118 * 
AcceptedCmp20 + 0.37023411618924 * AcceptedCmp30 + 0.42138560084911 * AcceptedCmp40 + 
0.3085748174994 * AcceptedCmp50 + 0.22539323627952 * Complain0 + -0.21244663243009 * 
HigherEducationBinary0 ;
1342466   +   H16  = H16  +     0.18963464867682 * AcceptedCmp10
1342467   +          +     0.03787019267792 * AcceptedCmp20  +     0.08009211858272 *
1342468   +        AcceptedCmp30  +    -0.04360170073177 * AcceptedCmp40
1342469   +          +     0.21168040934214 * AcceptedCmp50  +     0.10568727450323 *
1342470   +        Complain0  +     0.53148657263966 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.18963464867682 * AcceptedCmp10 + 0.03787019267792 * 
AcceptedCmp20 + 0.08009211858272 * AcceptedCmp30 + -0.04360170073177 * AcceptedCmp40 + 
0.21168040934214 * AcceptedCmp50 + 0.10568727450323 * Complain0 + 0.53148657263966 * 
HigherEducationBinary0 ;
1342471   +   H11  = H11  +    -0.11496374901156 * Education2n_Cycle
1342472   +          +    -0.06656230963069 * EducationBasic  +     0.07997148658457 *
1342473   +        EducationGraduation  +     0.01554466662723 * EducationMaster
1342474   +          +     0.13815069071511 * Marital_StatusDivorced
1342475   +          +      0.0732913060929 * Marital_StatusMarried
1342476   +          +    -0.22858418468746 * Marital_StatusSingle
1342477   +          +     0.01116332924316 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.11496374901156 * Education2n_Cycle + -0.06656230963069 * 
EducationBasic + 0.07997148658457 * EducationGraduation + 0.01554466662723 * EducationMaster + 
0.13815069071511 * Marital_StatusDivorced + 0.0732913060929 * Marital_StatusMarried + 
-0.22858418468746 * Marital_StatusSingle + 0.01116332924316 * Marital_StatusTogether ;
1342478   +   H12  = H12  +     0.03901959784889 * Education2n_Cycle
1342479   +          +    -0.26280012394443 * EducationBasic  +     0.21504809933489 *
1342480   +        EducationGraduation  +    -0.06848191068145 * EducationMaster
1342481   +          +     0.32909808396509 * Marital_StatusDivorced
1342482   +          +    -0.50160173579004 * Marital_StatusMarried
1342483   +          +     0.57207102211224 * Marital_StatusSingle
1342484   +          +    -0.44360345973922 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.03901959784889 * Education2n_Cycle + -0.26280012394443 * 
EducationBasic + 0.21504809933489 * EducationGraduation + -0.06848191068145 * EducationMaster 
+ 0.32909808396509 * Marital_StatusDivorced + -0.50160173579004 * Marital_StatusMarried + 
0.57207102211224 * Marital_StatusSingle + -0.44360345973922 * Marital_StatusTogether ;
1342485   +   H13  = H13  +     0.01150876366725 * Education2n_Cycle
1342486   +          +     0.23107711255032 * EducationBasic  +    -0.21134640338561 *
1342487   +        EducationGraduation  +    -0.06661306485324 * EducationMaster
1342488   +          +    -0.07154493730107 * Marital_StatusDivorced
1342489   +          +     0.29126100051603 * Marital_StatusMarried
1342490   +          +    -0.06936325857004 * Marital_StatusSingle
1342491   +          +     0.16456919209683 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.01150876366725 * Education2n_Cycle + 0.23107711255032 * 
EducationBasic + -0.21134640338561 * EducationGraduation + -0.06661306485324 * EducationMaster 
+ -0.07154493730107 * Marital_StatusDivorced + 0.29126100051603 * Marital_StatusMarried + 
-0.06936325857004 * Marital_StatusSingle + 0.16456919209683 * Marital_StatusTogether ;
1342492   +   H14  = H14  +    -0.19946033710291 * Education2n_Cycle
1342493   +          +    -0.01034120145864 * EducationBasic  +     0.13668197947218 *
1342494   +        EducationGraduation  +     0.00467151758983 * EducationMaster
1342495   +          +    -0.05004640872388 * Marital_StatusDivorced
1342496   +          +     0.22197974032974 * Marital_StatusMarried
1342497   +          +    -0.33931504637453 * Marital_StatusSingle
1342498   +          +     0.52390006042597 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.19946033710291 * Education2n_Cycle + -0.01034120145864 * 
EducationBasic + 0.13668197947218 * EducationGraduation + 0.00467151758983 * EducationMaster + 
-0.05004640872388 * Marital_StatusDivorced + 0.22197974032974 * Marital_StatusMarried + 
-0.33931504637453 * Marital_StatusSingle + 0.52390006042597 * Marital_StatusTogether ;
1342499   +   H15  = H15  +      0.0257657569906 * Education2n_Cycle
1342500   +          +    -0.41272017245298 * EducationBasic  +     0.19220220110183 *
1342501   +        EducationGraduation  +     0.36479872943723 * EducationMaster
1342502   +          +    -0.07748874669478 * Marital_StatusDivorced
1342503   +          +     1.05442281159109 * Marital_StatusMarried
1342504   +          +    -0.67190984038867 * Marital_StatusSingle
1342505   +          +     0.60757498745412 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.0257657569906 * Education2n_Cycle + -0.41272017245298 * 
EducationBasic + 0.19220220110183 * EducationGraduation + 0.36479872943723 * EducationMaster + 
-0.07748874669478 * Marital_StatusDivorced + 1.05442281159109 * Marital_StatusMarried + 
-0.67190984038867 * Marital_StatusSingle + 0.60757498745412 * Marital_StatusTogether ;
1342506   +   H16  = H16  +    -0.17850020716849 * Education2n_Cycle
1342507   +          +    -0.22658689327697 * EducationBasic  +    -0.12677992318537 *
1342508   +        EducationGraduation  +    -0.09350942672909 * EducationMaster
1342509   +          +    -0.20478208715114 * Marital_StatusDivorced
1342510   +          +    -0.40186383707642 * Marital_StatusMarried
1342511   +          +     0.43474841662774 * Marital_StatusSingle
1342512   +          +    -0.24048672237031 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.17850020716849 * Education2n_Cycle + -0.22658689327697 * 
EducationBasic + -0.12677992318537 * EducationGraduation + -0.09350942672909 * EducationMaster 
+ -0.20478208715114 * Marital_StatusDivorced + -0.40186383707642 * Marital_StatusMarried + 
0.43474841662774 * Marital_StatusSingle + -0.24048672237031 * Marital_StatusTogether ;
1342513   +   H11  =    -0.02531559692589 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.02531559692589 + H11 ;
1342514   +   H12  =     0.37210575430377 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.37210575430377 + H12 ;
1342515   +   H13  =    -1.38678195714945 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.38678195714945 + H13 ;
1342516   +   H14  =      1.3896422684634 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.3896422684634 + H14 ;
1342517   +   H15  =     0.90118149151601 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.90118149151601 + H15 ;
1342518   +   H16  =    -2.10458510177045 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -2.10458510177045 + H16 ;
1342519   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1342520   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1342521   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1342522   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1342523   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1342524   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1342525   +END;
MPRINT(EM_DIAGRAM):   END;
1342526   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1342527   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1342528   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1342529   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1342530   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1342531   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1342532   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1342533   +END;
MPRINT(EM_DIAGRAM):   END;
1342534   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1342535   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1342536   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1342537   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1342538   +   P_DepVar1  =     1.87884051128714 * H11  +     2.50729999746925 * H12
1342539   +          +    -1.75107820321125 * H13  +    -1.79455762110025 * H14
1342540   +          +    -2.94929305100625 * H15  +    -2.02736184847322 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.87884051128714 * H11 + 2.50729999746925 * H12 + 
-1.75107820321125 * H13 + -1.79455762110025 * H14 + -2.94929305100625 * H15 + 
-2.02736184847322 * H16 ;
1342541   +   P_DepVar1  =    -2.13374807262205 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.13374807262205 + P_DepVar1 ;
1342542   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1342543   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1342544   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1342545   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1342546   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1342547   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1342548   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1342549   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1342550   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1342551   +END;
MPRINT(EM_DIAGRAM):   END;
1342552   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1342553   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1342554   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1342555   +END;
MPRINT(EM_DIAGRAM):   END;
1342556   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1342557   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1342558   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1342559   +END;
MPRINT(EM_DIAGRAM):   END;
1342560   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1342561   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1342562   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1342563   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1342564   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1342565   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1342566   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1342567   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1342568   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1342569   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1342570   +END;
MPRINT(EM_DIAGRAM):   END;
1342571   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1342572   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1342573   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1342574   +drop
1342575   +H11
1342576   +H12
1342577   +H13
1342578   +H14
1342579   +H15
1342580   +H16
1342581   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1342582   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1342583    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1342584    quit;
1342585    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1342586    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1342587    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1342588    retain ID 2 Node "Neural9";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural9";
1342589    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1342590    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2876 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2876 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1342591    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1342592    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1342593    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2876 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2876 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1342594    proc sort data=EMWS8.Neural9_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural9_variableset out=_temp2(keep=NAME CREATOR);
1342595    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1342596    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL9_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1342597    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1342598    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1342599    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1342600    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1342601    proc contents data=EMWS8.Neural9_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural9_train out=_meta(keep=NAME) noprint;
1342602    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1342603    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1342604    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1342605    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1342606    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1342607    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1342608    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1342609    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1342610    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1342611    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1342611  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1591 rows and 5 columns.

1342612    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1342613    proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
1342614    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1591 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL_FCMP has 1591 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1342615    filename _pref
1342615  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1342616    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1342617    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1342618   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1342619   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1342620   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1342621   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1342622   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1342623   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1342624    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1342625    quit;
1342626    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1342627    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1342628    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1342629    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1342630    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1342631    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1342632    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1342633    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1342634    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1342635    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1342636    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1342637    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1342638    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1342639    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1342640    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1342641    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1342642    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1342643    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1342644    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1342645    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1342646    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1342647    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1342648    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1342649    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1342650    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1342651    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1342652    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1342652  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1342653    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1342654    proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
1342655    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL_FCMP has 1595 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1342656    filename _pref
1342656  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1342657    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1342658    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1342659   +
1342660   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1342661   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1342661  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1342662   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1342663   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1342664   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1342665   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1342666   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1342667    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1342668    quit;
1342669    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1342670    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1342671    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1342672    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1342673    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1342674    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1342675    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1342676    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1342677    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1342678    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1342679    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1342680    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1342681    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1342682    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1342683    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1342684    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1342685    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1342686    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1342687    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1342688    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1342689    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1342690    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1342691    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1342692    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1342693    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1342694    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1342695    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1342695  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1342696    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1342697    proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
1342698    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL_FCMP has 1634 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1342699    filename _pref
1342699  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1342700    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1342701    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1342702   +
1342703   +
1342704   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1342705   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1342706   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1342707   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1342708   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1342709   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1342710   +
1342711   +
1342712   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1342713   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1342714   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1342715   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1342716   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1342717   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1342718   +
1342719   +
1342720   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1342721   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1342722   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1342723   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1342724   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1342725   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1342726   +
1342727   +
1342728   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1342729   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1342730   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1342731   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1342732   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1342733   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1342734   +
1342735   +
1342736   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1342737   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1342738   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1342739   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1342740   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1342741   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1342742   +
1342743   +
1342744   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1342745   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1342746   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1342747   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1342748   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1342749   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1342750   +
1342751   +
1342752   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1342753   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1342754   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1342755   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1342756   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1342757   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1342758   +
1342759   +
1342760   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1342761   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1342762   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1342763   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1342764   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1342765   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1342766   +if
1342767   +_FILTERNORM1 not in ( '.')
1342768   + and
1342769   +_FILTERNORM2 not in ( '.')
1342770   + and
1342771   +_FILTERNORM3 not in ( '.')
1342772   + and
1342773   +_FILTERNORM4 not in ( '.')
1342774   + and
1342775   +_FILTERNORM5 not in ( '.')
1342776   + and
1342777   +_FILTERNORM6 not in ( '.')
1342778   + and
1342779   +_FILTERNORM7 not in ( ' ')
1342780   + and
1342781   +_FILTERNORM8 not in ( ' ')
1342782   +and
1342783   +( Dt_Customer ne .)
1342784   +and ( Income ne . and (Income<=107000))
1342785   +and ( Kidhome ne .)
1342786   +and ( MntFishProducts ne .)
1342787   +and ( MntFruits ne .)
1342788   +and ( MntGoldProds ne .)
1342789   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1342790   +and ( MntSweetProducts ne .)
1342791   +and ( MntWines ne .)
1342792   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1342793   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1342794   +and ( NumStorePurchases ne .)
1342795   +and ( NumWebPurchases ne .)
1342796   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1342797   +and ( Recency ne .)
1342798   +and ( Teenhome ne .)
1342799   +and ( Year_Birth ne .)
1342800   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1342801   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1342802   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1342803   +end;
MPRINT(EM_DIAGRAM):   end;
1342804   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1342805   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1342806    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1342807    quit;
1342808    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1342809    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1342810    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1342811    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1342812    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1342813    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1342814    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1342815    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1342816    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1342817    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1342818    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1342819    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1342820    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1342821    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1342822    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1342823    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1342824    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1342825    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1342826    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1342827    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1342828    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1342829    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1342830    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1342831    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1342832    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1342833    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1342834    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1342834  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1342835    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1342836    proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
1342837    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL_FCMP has 1700 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1342838    %macro varDept(fcmpdata=,id=);
1342839    %global nobs&id scoreFlag&id;
1342840    %let scoreFlag&id = 0;
1342841    %if &id=1 or ^&fcmpStart %then %do;
1342842    proc sort data=&fcmpdata out=_temp&id nodupkey;
1342843    by NAME;
1342844    where id=&id and LHS in( %let j=1;
1342845    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1342846    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1342847    "&var" %let j = %eval(&j+1);
1342848    %end;
1342849    );
1342850    run;
1342851    %let dsid = %sysfunc(open(_temp&id));
1342852    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1342853    %let dsid = %sysfunc(close(&dsid));
1342854    %if &&nobs&id %then %do;
1342855    %let scoreFlag&id = 1;
1342856    %let fcmpStart = 1;
1342857    %end;
1342858    %else %let fcmpStart = 0;
1342859    %end;
1342860    %else %do;
1342861    proc sort data=&fcmpdata out=_tempid;
1342862    where id=&id;
1342863    by LHS;
1342864    run;
1342865    %let dsid = %sysfunc(open(_tempid));
1342866    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1342867    %let dsid = %sysfunc(close(&dsid));
1342868    %if ^&&nobs&id %then %do;
1342869    proc datasets lib=work nolist;
1342870    delete _tempid;
1342871    run;
1342872    quit;
1342873    %end;
1342874    %else %do;
1342875    data _tempAll;
1342876    set %let j=%eval(&id-1);
1342877    %do x=1 %to &j;
1342878    %if &&nobs&x %then %do;
1342879    _temp&x %end;
1342880    %end;
1342881    ;
1342882    run;
1342883    proc sql;
1342884    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1342884  ! work._tempid p2 where p.name=p2.lhs;
1342885    quit;
1342886    data _temp&id;
1342887    set _temp&id;
1342888    where LHS ne '' and NAME ne '' and Node ne '';
1342889    run;
1342890    proc datasets lib=work nolist;
1342891    delete _tempAll;
1342892    run;
1342893    %let dsid = %sysfunc(open(_temp&id));
1342894    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1342895    %let dsid = %sysfunc(close(&dsid));
1342896    %if ^&&nobs&id %then %do;
1342897    proc datasets lib=work nolist;
1342898    delete _temp&id;
1342899    run;
1342900    quit;
1342901    %end;
1342902    %else %do;
1342903    %let scoreFlag&id = 1;
1342904    data _temp&id;
1342905    set _temp&id;
1342906    where LHS ne NAME and node ne '';
1342907    run;
1342908    %let dsid = %sysfunc(open(_temp&id));
1342909    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1342910    %let dsid = %sysfunc(close(&dsid));
1342911    %if ^&&nobs&id %then %do;
1342912    proc datasets lib=work nolist;
1342913    delete _temp&id;
1342914    run;
1342915    quit;
1342916    %end;
1342917    %else %do;
1342918    proc sort data=_temp&id nodupkey;
1342919    by LHS NAME;
1342920    run;
1342921    %end;
1342922    %end;
1342923    %end;
1342924    %end;
1342925    %mend varDept;
1342926    %macro optCode(outdata=fcmpdata);
1342927    %global fcmpStart;
1342928    %let fcmpStart = 0;
1342929    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1342930    %let NumNodes=9;
1342931    %do k=1 %to &NumNodes;
1342932    %vardept(fcmpdata=&outdata, id=&k);
1342933    %end;
1342934    %mend optCode;
1342935    %optcode(outData=EMWS8.Ensmbl_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1342936    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1342937    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1342938    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1342939    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1342940    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1342941    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1342942    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1342943    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1342944    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1342945    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1342945  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

1342946    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1342947    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1342948    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1342949    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1342950    filename _pref
1342950  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural10\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural10\EMPUBLISHSCORE.sas";
1342951    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1342952    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural10\EMPUBLISHSCORE.sas.
1342953   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1342954   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1342955   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1342956   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1342957   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1342958   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1342959   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1342960   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1342961   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1342962   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1342963   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1342964   +LENGTH _WARN_ $4
1342965   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1342966   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1342967   +
1342968   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1342969   +
1342970   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1342971   +
1342972   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1342973   +
1342974   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1342975   +
1342976   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1342977   +
1342978   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1342979   +
1342980   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1342981   +
1342982   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1342983   +
1342984   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1342985   +
1342986   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1342987   +
1342988   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1342989   +
1342990   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1342991   +
1342992   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1342993   +
1342994   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1342995   +
1342996   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1342997   +
1342998   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1342999   +
1343000   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1343001   +
1343002   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1343003   +
1343004   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1343005   +
1343006   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1343007   +
1343008   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1343009   +
1343010   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1343011   +
1343012   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1343013   +
1343014   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1343015   +
1343016   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1343017   +
1343018   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1343019   +
1343020   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1343021   +
1343022   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1343023   +
1343024   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1343025   +
1343026   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1343027   +
1343028   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1343029   +
1343030   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1343031   +
1343032   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1343033   +
1343034   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1343035   +
1343036   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1343037   +
1343038   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1343039   +
1343040   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1343041   +
1343042   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1343043   +
1343044   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1343045   +
1343046   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1343047   +
1343048   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1343049   +
1343050   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1343051   +
1343052   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1343053   +
1343054   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
1343055   +
1343056   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1343057   +
1343058   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1343059   +
1343060   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1343061   +
1343062   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1343063   +
1343064   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1343065   +
1343066   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1343067   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1343068   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1343069   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1343070   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1343071   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1343072   +end;
MPRINT(EM_DIAGRAM):   end;
1343073   +else do;
MPRINT(EM_DIAGRAM):   else do;
1343074   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1343075   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1343076   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1343077   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1343078   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1343079   +   end;
MPRINT(EM_DIAGRAM):   end;
1343080   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1343081   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1343082   +   end;
MPRINT(EM_DIAGRAM):   end;
1343083   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1343084   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1343085   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1343086   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1343087   +   end;
MPRINT(EM_DIAGRAM):   end;
1343088   +end;
MPRINT(EM_DIAGRAM):   end;
1343089   +
1343090   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1343091   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1343092   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1343093   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1343094   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1343095   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1343096   +end;
MPRINT(EM_DIAGRAM):   end;
1343097   +else do;
MPRINT(EM_DIAGRAM):   else do;
1343098   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1343099   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1343100   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1343101   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1343102   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1343103   +   end;
MPRINT(EM_DIAGRAM):   end;
1343104   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1343105   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1343106   +   end;
MPRINT(EM_DIAGRAM):   end;
1343107   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1343108   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1343109   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1343110   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1343111   +   end;
MPRINT(EM_DIAGRAM):   end;
1343112   +end;
MPRINT(EM_DIAGRAM):   end;
1343113   +
1343114   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1343115   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1343116   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1343117   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1343118   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1343119   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1343120   +end;
MPRINT(EM_DIAGRAM):   end;
1343121   +else do;
MPRINT(EM_DIAGRAM):   else do;
1343122   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1343123   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1343124   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1343125   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1343126   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1343127   +   end;
MPRINT(EM_DIAGRAM):   end;
1343128   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1343129   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1343130   +   end;
MPRINT(EM_DIAGRAM):   end;
1343131   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1343132   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1343133   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1343134   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1343135   +   end;
MPRINT(EM_DIAGRAM):   end;
1343136   +end;
MPRINT(EM_DIAGRAM):   end;
1343137   +
1343138   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1343139   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1343140   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1343141   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1343142   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1343143   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1343144   +end;
MPRINT(EM_DIAGRAM):   end;
1343145   +else do;
MPRINT(EM_DIAGRAM):   else do;
1343146   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1343147   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1343148   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1343149   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1343150   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1343151   +   end;
MPRINT(EM_DIAGRAM):   end;
1343152   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1343153   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1343154   +   end;
MPRINT(EM_DIAGRAM):   end;
1343155   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1343156   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1343157   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1343158   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1343159   +   end;
MPRINT(EM_DIAGRAM):   end;
1343160   +end;
MPRINT(EM_DIAGRAM):   end;
1343161   +
1343162   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1343163   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1343164   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1343165   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1343166   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1343167   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1343168   +end;
MPRINT(EM_DIAGRAM):   end;
1343169   +else do;
MPRINT(EM_DIAGRAM):   else do;
1343170   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1343171   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1343172   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1343173   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1343174   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1343175   +   end;
MPRINT(EM_DIAGRAM):   end;
1343176   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1343177   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1343178   +   end;
MPRINT(EM_DIAGRAM):   end;
1343179   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1343180   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1343181   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1343182   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1343183   +   end;
MPRINT(EM_DIAGRAM):   end;
1343184   +end;
MPRINT(EM_DIAGRAM):   end;
1343185   +
1343186   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1343187   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1343188   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1343189   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1343190   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1343191   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1343192   +end;
MPRINT(EM_DIAGRAM):   end;
1343193   +else do;
MPRINT(EM_DIAGRAM):   else do;
1343194   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1343195   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1343196   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1343197   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1343198   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1343199   +   end;
MPRINT(EM_DIAGRAM):   end;
1343200   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1343201   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1343202   +   end;
MPRINT(EM_DIAGRAM):   end;
1343203   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1343204   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1343205   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1343206   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1343207   +   end;
MPRINT(EM_DIAGRAM):   end;
1343208   +end;
MPRINT(EM_DIAGRAM):   end;
1343209   +
1343210   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1343211   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1343212   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1343213   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1343214   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1343215   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1343216   +end;
MPRINT(EM_DIAGRAM):   end;
1343217   +else do;
MPRINT(EM_DIAGRAM):   else do;
1343218   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1343219   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1343220   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1343221   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1343222   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1343223   +   end;
MPRINT(EM_DIAGRAM):   end;
1343224   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1343225   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1343226   +   end;
MPRINT(EM_DIAGRAM):   end;
1343227   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1343228   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1343229   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1343230   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1343231   +   end;
MPRINT(EM_DIAGRAM):   end;
1343232   +end;
MPRINT(EM_DIAGRAM):   end;
1343233   +
1343234   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1343235   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1343236   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1343237   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1343238   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1343239   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1343240   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1343241   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1343242   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1343243   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1343244   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1343245   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1343246   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1343247   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1343248   +end;
MPRINT(EM_DIAGRAM):   end;
1343249   +else do;
MPRINT(EM_DIAGRAM):   else do;
1343250   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1343251   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1343252   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1343253   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1343254   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1343255   +   end;
MPRINT(EM_DIAGRAM):   end;
1343256   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1343257   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1343258   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1343259   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1343260   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1343261   +   end;
MPRINT(EM_DIAGRAM):   end;
1343262   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1343263   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1343264   +   end;
MPRINT(EM_DIAGRAM):   end;
1343265   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1343266   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1343267   +   end;
MPRINT(EM_DIAGRAM):   end;
1343268   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1343269   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1343270   +   end;
MPRINT(EM_DIAGRAM):   end;
1343271   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1343272   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1343273   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1343274   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1343275   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1343276   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1343277   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1343278   +   end;
MPRINT(EM_DIAGRAM):   end;
1343279   +end;
MPRINT(EM_DIAGRAM):   end;
1343280   +
1343281   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1343282   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1343283   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1343284   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1343285   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1343286   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1343287   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1343288   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1343289   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1343290   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1343291   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1343292   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1343293   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1343294   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1343295   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1343296   +end;
MPRINT(EM_DIAGRAM):   end;
1343297   +else do;
MPRINT(EM_DIAGRAM):   else do;
1343298   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1343299   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1343300   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1343301   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1343302   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1343303   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1343304   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1343305   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1343306   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1343307   +         end;
MPRINT(EM_DIAGRAM):   end;
1343308   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1343309   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1343310   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1343311   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1343312   +            end;
MPRINT(EM_DIAGRAM):   end;
1343313   +         end;
MPRINT(EM_DIAGRAM):   end;
1343314   +      end;
MPRINT(EM_DIAGRAM):   end;
1343315   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1343316   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1343317   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1343318   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1343319   +         end;
MPRINT(EM_DIAGRAM):   end;
1343320   +      end;
MPRINT(EM_DIAGRAM):   end;
1343321   +   end;
MPRINT(EM_DIAGRAM):   end;
1343322   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1343323   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1343324   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1343325   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1343326   +      end;
MPRINT(EM_DIAGRAM):   end;
1343327   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1343328   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1343329   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1343330   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1343331   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1343332   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1343333   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1343334   +         end;
MPRINT(EM_DIAGRAM):   end;
1343335   +      end;
MPRINT(EM_DIAGRAM):   end;
1343336   +   end;
MPRINT(EM_DIAGRAM):   end;
1343337   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1343338   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1343339   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1343340   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1343341   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1343342   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1343343   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1343344   +   end;
MPRINT(EM_DIAGRAM):   end;
1343345   +end;
MPRINT(EM_DIAGRAM):   end;
1343346   +
1343347   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1343348   +*** Checking missing input Interval
1343349   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1343350   +
1343351   +IF NMISS(
1343352   +   AcceptedCmpTotal ,
1343353   +   Age ,
1343354   +   Frq ,
1343355   +   Income ,
1343356   +   Kidhome ,
1343357   +   Mnt ,
1343358   +   MntFishProducts ,
1343359   +   MntFruits ,
1343360   +   MntGoldProds ,
1343361   +   MntMeatProducts ,
1343362   +   MntSweetProducts ,
1343363   +   MntWines ,
1343364   +   MonthsAsCustomer ,
1343365   +   NumCatalogPurchases ,
1343366   +   NumDealsPurchases ,
1343367   +   NumDistPurchases ,
1343368   +   NumStorePurchases ,
1343369   +   NumWebPurchases ,
1343370   +   NumWebVisitsMonth ,
1343371   +   RFMstat ,
1343372   +   RMntFrq ,
1343373   +   Recency ,
1343374   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1343375   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1343376   +
1343377   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1343378   +END;
MPRINT(EM_DIAGRAM):   END;
1343379   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1343380   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1343381   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1343382   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1343383   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1343384   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1343385   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1343386   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1343387   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1343388   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1343389   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1343390   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1343391   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1343392   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1343393   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1343394   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1343395   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1343396   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1343397   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1343398   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1343399   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1343400   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1343401   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1343402   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1343403   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1343404   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1343405   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1343406   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1343407   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1343408   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1343409   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1343410   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1343411   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1343412   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1343413   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1343414   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1343415   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1343416   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1343417   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1343418   +END;
MPRINT(EM_DIAGRAM):   END;
1343419   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1343420   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1343421   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1343422   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1343423   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1343424   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1343425   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1343426   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1343427   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1343428   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1343429   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1343430   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1343431   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1343432   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1343433   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1343434   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1343435   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1343436   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1343437   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1343438   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1343439   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1343440   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1343441   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1343442   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1343443   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1343444   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1343445   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1343446   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1343447   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1343448   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1343449   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1343450   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1343451   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1343452   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1343453   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1343454   +   ELSE S_NumCatalogPurchases
1343455   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1343456   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1343457   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1343458   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1343459   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1343460   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1343461   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1343462   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1343463   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1343464   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1343465   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1343466   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1343467   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1343468   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1343469   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1343470   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1343471   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1343472   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1343473   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1343474   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1343475   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1343476   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1343477   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1343478   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1343479   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1343480   +END;
MPRINT(EM_DIAGRAM):   END;
1343481   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1343482   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1343483   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1343484   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1343485   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1343486   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1343487   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1343488   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1343489   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1343490   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1343491   +   H11  =     -0.5578105652985 * S_AcceptedCmpTotal  +    -0.23241971580203 *
1343492   +        S_Age  +     0.28102175129839 * S_Frq  +    -0.14177438746231 *
1343493   +        S_Income  +    -0.45967008908227 * S_Kidhome
1343494   +          +     0.02794787691339 * S_Mnt  +     0.39828117417224 *
1343495   +        S_MntFishProducts  +    -0.05411429665612 * S_MntFruits
1343496   +          +     -0.2217613503816 * S_MntGoldProds  +    -1.14707919351018 *
1343497   +        S_MntMeatProducts  +     0.02010309795345 * S_MntSweetProducts
1343498   +          +     0.39487005596698 * S_MntWines  +     0.08057978219112 *
1343499   +        S_MonthsAsCustomer  +    -0.52508994350253 * S_NumCatalogPurchases
1343500   +          +    -0.23353175442713 * S_NumDealsPurchases
1343501   +          +     0.18635522192442 * S_NumDistPurchases
1343502   +          +     0.37209457890956 * S_NumStorePurchases
1343503   +          +     0.25018232304823 * S_NumWebPurchases
1343504   +          +    -0.12167684141831 * S_NumWebVisitsMonth
1343505   +          +    -0.26994136429184 * S_RFMstat  +    -0.15457821756538 *
1343506   +        S_RMntFrq  +      0.3771094487511 * S_Recency
1343507   +          +      0.3944445531753 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.5578105652985 * S_AcceptedCmpTotal + -0.23241971580203 * S_Age 
+ 0.28102175129839 * S_Frq + -0.14177438746231 * S_Income + -0.45967008908227 * S_Kidhome + 
0.02794787691339 * S_Mnt + 0.39828117417224 * S_MntFishProducts + -0.05411429665612 * 
S_MntFruits + -0.2217613503816 * S_MntGoldProds + -1.14707919351018 * S_MntMeatProducts + 
0.02010309795345 * S_MntSweetProducts + 0.39487005596698 * S_MntWines + 0.08057978219112 * 
S_MonthsAsCustomer + -0.52508994350253 * S_NumCatalogPurchases + -0.23353175442713 * 
S_NumDealsPurchases + 0.18635522192442 * S_NumDistPurchases + 0.37209457890956 * 
S_NumStorePurchases + 0.25018232304823 * S_NumWebPurchases + -0.12167684141831 * 
S_NumWebVisitsMonth + -0.26994136429184 * S_RFMstat + -0.15457821756538 * S_RMntFrq + 
0.3771094487511 * S_Recency + 0.3944445531753 * S_Teenhome ;
1343508   +   H12  =    -0.33593118949604 * S_AcceptedCmpTotal  +     0.13223006727754 *
1343509   +        S_Age  +     0.22535213074211 * S_Frq  +    -0.12962185963332 *
1343510   +        S_Income  +     0.23329613045589 * S_Kidhome
1343511   +          +     0.49569557196329 * S_Mnt  +     0.06134353482875 *
1343512   +        S_MntFishProducts  +     0.04198696278324 * S_MntFruits
1343513   +          +    -0.23606182835876 * S_MntGoldProds  +    -0.86703877719801 *
1343514   +        S_MntMeatProducts  +     0.13899494079616 * S_MntSweetProducts
1343515   +          +     0.64295088795338 * S_MntWines  +     0.23885718884975 *
1343516   +        S_MonthsAsCustomer  +    -0.13805721887365 * S_NumCatalogPurchases
1343517   +          +    -0.09699498622435 * S_NumDealsPurchases
1343518   +          +     0.40364070798795 * S_NumDistPurchases
1343519   +          +      0.2162579072164 * S_NumStorePurchases
1343520   +          +     0.26248410135079 * S_NumWebPurchases
1343521   +          +    -0.59275827872509 * S_NumWebVisitsMonth
1343522   +          +    -0.14095167046806 * S_RFMstat  +     0.33659399551436 *
1343523   +        S_RMntFrq  +     0.34734104517337 * S_Recency
1343524   +          +     0.20490660913172 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.33593118949604 * S_AcceptedCmpTotal + 0.13223006727754 * S_Age 
+ 0.22535213074211 * S_Frq + -0.12962185963332 * S_Income + 0.23329613045589 * S_Kidhome + 
0.49569557196329 * S_Mnt + 0.06134353482875 * S_MntFishProducts + 0.04198696278324 * 
S_MntFruits + -0.23606182835876 * S_MntGoldProds + -0.86703877719801 * S_MntMeatProducts + 
0.13899494079616 * S_MntSweetProducts + 0.64295088795338 * S_MntWines + 0.23885718884975 * 
S_MonthsAsCustomer + -0.13805721887365 * S_NumCatalogPurchases + -0.09699498622435 * 
S_NumDealsPurchases + 0.40364070798795 * S_NumDistPurchases + 0.2162579072164 * 
S_NumStorePurchases + 0.26248410135079 * S_NumWebPurchases + -0.59275827872509 * 
S_NumWebVisitsMonth + -0.14095167046806 * S_RFMstat + 0.33659399551436 * S_RMntFrq + 
0.34734104517337 * S_Recency + 0.20490660913172 * S_Teenhome ;
1343525   +   H13  =    -0.62678716035049 * S_AcceptedCmpTotal  +    -0.10291990746359 *
1343526   +        S_Age  +     0.05177116030679 * S_Frq  +    -0.22841348118599 *
1343527   +        S_Income  +     0.20139862021528 * S_Kidhome
1343528   +          +    -0.14983527202624 * S_Mnt  +    -0.48769617499769 *
1343529   +        S_MntFishProducts  +    -0.14107770157183 * S_MntFruits
1343530   +          +     0.10521088971296 * S_MntGoldProds  +     0.32521316479212 *
1343531   +        S_MntMeatProducts  +    -0.31623965627102 * S_MntSweetProducts
1343532   +          +     0.04140559575505 * S_MntWines  +     0.04461152334998 *
1343533   +        S_MonthsAsCustomer  +     0.02235616550218 * S_NumCatalogPurchases
1343534   +          +     0.09066191700879 * S_NumDealsPurchases
1343535   +          +    -0.05769000978222 * S_NumDistPurchases
1343536   +          +    -0.10089591692167 * S_NumStorePurchases
1343537   +          +    -0.00088654116561 * S_NumWebPurchases
1343538   +          +    -0.03166195000043 * S_NumWebVisitsMonth
1343539   +          +    -0.19039498348905 * S_RFMstat  +    -0.07321662360003 *
1343540   +        S_RMntFrq  +    -0.10121013357627 * S_Recency
1343541   +          +     0.07832397278234 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.62678716035049 * S_AcceptedCmpTotal + -0.10291990746359 * S_Age 
+ 0.05177116030679 * S_Frq + -0.22841348118599 * S_Income + 0.20139862021528 * S_Kidhome + 
-0.14983527202624 * S_Mnt + -0.48769617499769 * S_MntFishProducts + -0.14107770157183 * 
S_MntFruits + 0.10521088971296 * S_MntGoldProds + 0.32521316479212 * S_MntMeatProducts + 
-0.31623965627102 * S_MntSweetProducts + 0.04140559575505 * S_MntWines + 0.04461152334998 * 
S_MonthsAsCustomer + 0.02235616550218 * S_NumCatalogPurchases + 0.09066191700879 * 
S_NumDealsPurchases + -0.05769000978222 * S_NumDistPurchases + -0.10089591692167 * 
S_NumStorePurchases + -0.00088654116561 * S_NumWebPurchases + -0.03166195000043 * 
S_NumWebVisitsMonth + -0.19039498348905 * S_RFMstat + -0.07321662360003 * S_RMntFrq + 
-0.10121013357627 * S_Recency + 0.07832397278234 * S_Teenhome ;
1343542   +   H14  =     0.58751331473911 * S_AcceptedCmpTotal  +     0.04644967312033 *
1343543   +        S_Age  +      0.2396819202713 * S_Frq  +     0.09956520306725 *
1343544   +        S_Income  +      0.2502648333687 * S_Kidhome
1343545   +          +     0.28121314160041 * S_Mnt  +    -0.20485047973809 *
1343546   +        S_MntFishProducts  +    -0.01460488281711 * S_MntFruits
1343547   +          +    -0.03288844720922 * S_MntGoldProds  +     1.97837236467115 *
1343548   +        S_MntMeatProducts  +     0.28301480917504 * S_MntSweetProducts
1343549   +          +     -0.6936431037386 * S_MntWines  +    -0.00532955644826 *
1343550   +        S_MonthsAsCustomer  +     1.76299586599682 * S_NumCatalogPurchases
1343551   +          +     0.83424444661619 * S_NumDealsPurchases
1343552   +          +     0.31333214543205 * S_NumDistPurchases
1343553   +          +    -0.61732647242019 * S_NumStorePurchases
1343554   +          +    -1.01955156895052 * S_NumWebPurchases
1343555   +          +     0.13017609997428 * S_NumWebVisitsMonth
1343556   +          +     0.35931716325651 * S_RFMstat  +    -0.00463731332856 *
1343557   +        S_RMntFrq  +    -0.38584375735163 * S_Recency
1343558   +          +    -0.00542085930429 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.58751331473911 * S_AcceptedCmpTotal + 0.04644967312033 * S_Age + 
0.2396819202713 * S_Frq + 0.09956520306725 * S_Income + 0.2502648333687 * S_Kidhome + 
0.28121314160041 * S_Mnt + -0.20485047973809 * S_MntFishProducts + -0.01460488281711 * 
S_MntFruits + -0.03288844720922 * S_MntGoldProds + 1.97837236467115 * S_MntMeatProducts + 
0.28301480917504 * S_MntSweetProducts + -0.6936431037386 * S_MntWines + -0.00532955644826 * 
S_MonthsAsCustomer + 1.76299586599682 * S_NumCatalogPurchases + 0.83424444661619 * 
S_NumDealsPurchases + 0.31333214543205 * S_NumDistPurchases + -0.61732647242019 * 
S_NumStorePurchases + -1.01955156895052 * S_NumWebPurchases + 0.13017609997428 * 
S_NumWebVisitsMonth + 0.35931716325651 * S_RFMstat + -0.00463731332856 * S_RMntFrq + 
-0.38584375735163 * S_Recency + -0.00542085930429 * S_Teenhome ;
1343559   +   H15  =     0.53146760457913 * S_AcceptedCmpTotal  +    -0.03810411031475 *
1343560   +        S_Age  +    -0.18043958502932 * S_Frq  +     0.69595178597879 *
1343561   +        S_Income  +    -0.70952256145726 * S_Kidhome
1343562   +          +     0.07336443095717 * S_Mnt  +     0.07813855224934 *
1343563   +        S_MntFishProducts  +    -0.09796868776705 * S_MntFruits
1343564   +          +     -0.1026096257543 * S_MntGoldProds  +     0.90002400845078 *
1343565   +        S_MntMeatProducts  +    -0.05163420076554 * S_MntSweetProducts
1343566   +          +    -0.41703750500589 * S_MntWines  +     0.01638041414141 *
1343567   +        S_MonthsAsCustomer  +      0.6832201856142 * S_NumCatalogPurchases
1343568   +          +     0.63522682456102 * S_NumDealsPurchases
1343569   +          +      0.0043057429215 * S_NumDistPurchases
1343570   +          +    -0.76667751707574 * S_NumStorePurchases
1343571   +          +    -0.73436881033241 * S_NumWebPurchases
1343572   +          +     1.59331554601341 * S_NumWebVisitsMonth
1343573   +          +     0.05617601605625 * S_RFMstat  +    -0.49130520428583 *
1343574   +        S_RMntFrq  +    -1.32582830247063 * S_Recency
1343575   +          +     -0.3056726615596 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.53146760457913 * S_AcceptedCmpTotal + -0.03810411031475 * S_Age 
+ -0.18043958502932 * S_Frq + 0.69595178597879 * S_Income + -0.70952256145726 * S_Kidhome + 
0.07336443095717 * S_Mnt + 0.07813855224934 * S_MntFishProducts + -0.09796868776705 * 
S_MntFruits + -0.1026096257543 * S_MntGoldProds + 0.90002400845078 * S_MntMeatProducts + 
-0.05163420076554 * S_MntSweetProducts + -0.41703750500589 * S_MntWines + 0.01638041414141 * 
S_MonthsAsCustomer + 0.6832201856142 * S_NumCatalogPurchases + 0.63522682456102 * 
S_NumDealsPurchases + 0.0043057429215 * S_NumDistPurchases + -0.76667751707574 * 
S_NumStorePurchases + -0.73436881033241 * S_NumWebPurchases + 1.59331554601341 * 
S_NumWebVisitsMonth + 0.05617601605625 * S_RFMstat + -0.49130520428583 * S_RMntFrq + 
-1.32582830247063 * S_Recency + -0.3056726615596 * S_Teenhome ;
1343576   +   H16  =    -0.14553823909316 * S_AcceptedCmpTotal  +     0.33407048981453 *
1343577   +        S_Age  +     0.23734269837078 * S_Frq  +     0.25406469036176 *
1343578   +        S_Income  +    -0.23632967504194 * S_Kidhome
1343579   +          +      0.0179055062616 * S_Mnt  +    -0.02279077829807 *
1343580   +        S_MntFishProducts  +     0.01454079994702 * S_MntFruits
1343581   +          +     0.11034379787627 * S_MntGoldProds  +    -0.08132325963546 *
1343582   +        S_MntMeatProducts  +    -0.15375043677096 * S_MntSweetProducts
1343583   +          +    -0.28898229890805 * S_MntWines  +     0.18829471441599 *
1343584   +        S_MonthsAsCustomer  +     0.22198357500123 * S_NumCatalogPurchases
1343585   +          +     -0.3032858959477 * S_NumDealsPurchases
1343586   +          +     0.11343979556999 * S_NumDistPurchases
1343587   +          +     0.19545021266061 * S_NumStorePurchases
1343588   +          +      0.1566777684546 * S_NumWebPurchases
1343589   +          +    -0.19390757759484 * S_NumWebVisitsMonth
1343590   +          +    -0.21685141921823 * S_RFMstat  +    -0.08968120165679 *
1343591   +        S_RMntFrq  +     0.01331408958685 * S_Recency
1343592   +          +    -0.29851875139164 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.14553823909316 * S_AcceptedCmpTotal + 0.33407048981453 * S_Age 
+ 0.23734269837078 * S_Frq + 0.25406469036176 * S_Income + -0.23632967504194 * S_Kidhome + 
0.0179055062616 * S_Mnt + -0.02279077829807 * S_MntFishProducts + 0.01454079994702 * 
S_MntFruits + 0.11034379787627 * S_MntGoldProds + -0.08132325963546 * S_MntMeatProducts + 
-0.15375043677096 * S_MntSweetProducts + -0.28898229890805 * S_MntWines + 0.18829471441599 * 
S_MonthsAsCustomer + 0.22198357500123 * S_NumCatalogPurchases + -0.3032858959477 * 
S_NumDealsPurchases + 0.11343979556999 * S_NumDistPurchases + 0.19545021266061 * 
S_NumStorePurchases + 0.1566777684546 * S_NumWebPurchases + -0.19390757759484 * 
S_NumWebVisitsMonth + -0.21685141921823 * S_RFMstat + -0.08968120165679 * S_RMntFrq + 
0.01331408958685 * S_Recency + -0.29851875139164 * S_Teenhome ;
1343593   +   H17  =     0.17466919198464 * S_AcceptedCmpTotal  +     -0.1121028079984 *
1343594   +        S_Age  +     0.02716231756399 * S_Frq  +     0.41157809710764 *
1343595   +        S_Income  +    -0.47847362741737 * S_Kidhome
1343596   +          +     0.12197279598903 * S_Mnt  +    -0.28291208980103 *
1343597   +        S_MntFishProducts  +    -0.06478996635951 * S_MntFruits
1343598   +          +     0.10519382804535 * S_MntGoldProds  +    -0.02084816137226 *
1343599   +        S_MntMeatProducts  +     0.00302745742685 * S_MntSweetProducts
1343600   +          +     0.05093107260089 * S_MntWines  +    -0.11279856455812 *
1343601   +        S_MonthsAsCustomer  +     0.33888951696726 * S_NumCatalogPurchases
1343602   +          +    -0.17510289915098 * S_NumDealsPurchases
1343603   +          +     0.16952490494417 * S_NumDistPurchases
1343604   +          +     0.11152117614204 * S_NumStorePurchases
1343605   +          +     0.22594341376741 * S_NumWebPurchases
1343606   +          +     0.64523546369354 * S_NumWebVisitsMonth
1343607   +          +     0.10568501117555 * S_RFMstat  +     0.12784241795943 *
1343608   +        S_RMntFrq  +    -1.11651429004489 * S_Recency
1343609   +          +    -0.48880952880502 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = 0.17466919198464 * S_AcceptedCmpTotal + -0.1121028079984 * S_Age + 
0.02716231756399 * S_Frq + 0.41157809710764 * S_Income + -0.47847362741737 * S_Kidhome + 
0.12197279598903 * S_Mnt + -0.28291208980103 * S_MntFishProducts + -0.06478996635951 * 
S_MntFruits + 0.10519382804535 * S_MntGoldProds + -0.02084816137226 * S_MntMeatProducts + 
0.00302745742685 * S_MntSweetProducts + 0.05093107260089 * S_MntWines + -0.11279856455812 * 
S_MonthsAsCustomer + 0.33888951696726 * S_NumCatalogPurchases + -0.17510289915098 * 
S_NumDealsPurchases + 0.16952490494417 * S_NumDistPurchases + 0.11152117614204 * 
S_NumStorePurchases + 0.22594341376741 * S_NumWebPurchases + 0.64523546369354 * 
S_NumWebVisitsMonth + 0.10568501117555 * S_RFMstat + 0.12784241795943 * S_RMntFrq + 
-1.11651429004489 * S_Recency + -0.48880952880502 * S_Teenhome ;
1343610   +   H11  = H11  +     0.13977383212072 * AcceptedCmp10
1343611   +          +     0.05060031718137 * AcceptedCmp20  +     -0.1285183348614 *
1343612   +        AcceptedCmp30  +    -0.10484468193603 * AcceptedCmp40
1343613   +          +     0.05917719975803 * AcceptedCmp50  +    -0.26316725467429 *
1343614   +        Complain0  +    -0.01895470174434 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.13977383212072 * AcceptedCmp10 + 0.05060031718137 * 
AcceptedCmp20 + -0.1285183348614 * AcceptedCmp30 + -0.10484468193603 * AcceptedCmp40 + 
0.05917719975803 * AcceptedCmp50 + -0.26316725467429 * Complain0 + -0.01895470174434 * 
HigherEducationBinary0 ;
1343615   +   H12  = H12  +     0.02037307448825 * AcceptedCmp10
1343616   +          +     0.17835601132169 * AcceptedCmp20  +     0.38550714429243 *
1343617   +        AcceptedCmp30  +    -0.33756721331432 * AcceptedCmp40
1343618   +          +     0.37598437397044 * AcceptedCmp50  +    -0.03377310181099 *
1343619   +        Complain0  +    -0.39065832156758 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.02037307448825 * AcceptedCmp10 + 0.17835601132169 * 
AcceptedCmp20 + 0.38550714429243 * AcceptedCmp30 + -0.33756721331432 * AcceptedCmp40 + 
0.37598437397044 * AcceptedCmp50 + -0.03377310181099 * Complain0 + -0.39065832156758 * 
HigherEducationBinary0 ;
1343620   +   H13  = H13  +    -0.22454004936394 * AcceptedCmp10
1343621   +          +     0.05941661323841 * AcceptedCmp20  +    -0.03592458555508 *
1343622   +        AcceptedCmp30  +    -0.25474371327449 * AcceptedCmp40
1343623   +          +     -0.0455897206132 * AcceptedCmp50  +     0.04740536844263 *
1343624   +        Complain0  +    -0.02878944582567 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.22454004936394 * AcceptedCmp10 + 0.05941661323841 * 
AcceptedCmp20 + -0.03592458555508 * AcceptedCmp30 + -0.25474371327449 * AcceptedCmp40 + 
-0.0455897206132 * AcceptedCmp50 + 0.04740536844263 * Complain0 + -0.02878944582567 * 
HigherEducationBinary0 ;
1343625   +   H14  = H14  +     -0.3260094757606 * AcceptedCmp10
1343626   +          +    -0.11375214865976 * AcceptedCmp20  +     0.17394162217532 *
1343627   +        AcceptedCmp30  +     0.25649528618828 * AcceptedCmp40
1343628   +          +    -0.09775926020035 * AcceptedCmp50  +     0.07605735003987 *
1343629   +        Complain0  +    -0.03961404091649 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.3260094757606 * AcceptedCmp10 + -0.11375214865976 * 
AcceptedCmp20 + 0.17394162217532 * AcceptedCmp30 + 0.25649528618828 * AcceptedCmp40 + 
-0.09775926020035 * AcceptedCmp50 + 0.07605735003987 * Complain0 + -0.03961404091649 * 
HigherEducationBinary0 ;
1343630   +   H15  = H15  +    -0.25690837852364 * AcceptedCmp10
1343631   +          +    -0.17111872756246 * AcceptedCmp20  +    -0.15594117886178 *
1343632   +        AcceptedCmp30  +    -0.35871566761504 * AcceptedCmp40
1343633   +          +    -0.33301494609865 * AcceptedCmp50  +     0.02032122936961 *
1343634   +        Complain0  +    -0.28127713754103 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.25690837852364 * AcceptedCmp10 + -0.17111872756246 * 
AcceptedCmp20 + -0.15594117886178 * AcceptedCmp30 + -0.35871566761504 * AcceptedCmp40 + 
-0.33301494609865 * AcceptedCmp50 + 0.02032122936961 * Complain0 + -0.28127713754103 * 
HigherEducationBinary0 ;
1343635   +   H16  = H16  +     0.01304767072646 * AcceptedCmp10
1343636   +          +     0.04542970824889 * AcceptedCmp20  +    -0.04086132015641 *
1343637   +        AcceptedCmp30  +    -0.01583924109084 * AcceptedCmp40
1343638   +          +    -0.06928082094172 * AcceptedCmp50  +    -0.06496287745005 *
1343639   +        Complain0  +     0.23477563976328 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.01304767072646 * AcceptedCmp10 + 0.04542970824889 * 
AcceptedCmp20 + -0.04086132015641 * AcceptedCmp30 + -0.01583924109084 * AcceptedCmp40 + 
-0.06928082094172 * AcceptedCmp50 + -0.06496287745005 * Complain0 + 0.23477563976328 * 
HigherEducationBinary0 ;
1343640   +   H17  = H17  +     0.01615921378096 * AcceptedCmp10
1343641   +          +    -0.15677614259446 * AcceptedCmp20  +    -0.26690848255992 *
1343642   +        AcceptedCmp30  +    -0.26633430402858 * AcceptedCmp40
1343643   +          +     -0.1321548166386 * AcceptedCmp50  +    -0.12983847017281 *
1343644   +        Complain0  +     0.32518892495397 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.01615921378096 * AcceptedCmp10 + -0.15677614259446 * 
AcceptedCmp20 + -0.26690848255992 * AcceptedCmp30 + -0.26633430402858 * AcceptedCmp40 + 
-0.1321548166386 * AcceptedCmp50 + -0.12983847017281 * Complain0 + 0.32518892495397 * 
HigherEducationBinary0 ;
1343645   +   H11  = H11  +     0.05829614347592 * Education2n_Cycle
1343646   +          +     0.28826698233517 * EducationBasic  +     0.30092045123127 *
1343647   +        EducationGraduation  +     0.01956517058574 * EducationMaster
1343648   +          +     0.42319965972117 * Marital_StatusDivorced
1343649   +          +    -0.45015157317991 * Marital_StatusMarried
1343650   +          +     0.43076106925345 * Marital_StatusSingle
1343651   +          +    -0.34625245410408 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.05829614347592 * Education2n_Cycle + 0.28826698233517 * 
EducationBasic + 0.30092045123127 * EducationGraduation + 0.01956517058574 * EducationMaster + 
0.42319965972117 * Marital_StatusDivorced + -0.45015157317991 * Marital_StatusMarried + 
0.43076106925345 * Marital_StatusSingle + -0.34625245410408 * Marital_StatusTogether ;
1343652   +   H12  = H12  +    -0.15246834223268 * Education2n_Cycle
1343653   +          +     0.02248997563033 * EducationBasic  +    -0.05434884503392 *
1343654   +        EducationGraduation  +     0.28747604127576 * EducationMaster
1343655   +          +     0.11384347873072 * Marital_StatusDivorced
1343656   +          +     0.51442453272823 * Marital_StatusMarried
1343657   +          +    -0.38966058028661 * Marital_StatusSingle
1343658   +          +     0.59654659814606 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.15246834223268 * Education2n_Cycle + 0.02248997563033 * 
EducationBasic + -0.05434884503392 * EducationGraduation + 0.28747604127576 * EducationMaster 
+ 0.11384347873072 * Marital_StatusDivorced + 0.51442453272823 * Marital_StatusMarried + 
-0.38966058028661 * Marital_StatusSingle + 0.59654659814606 * Marital_StatusTogether ;
1343659   +   H13  = H13  +     0.07291520243057 * Education2n_Cycle
1343660   +          +     0.22798022739243 * EducationBasic  +    -0.09714428862174 *
1343661   +        EducationGraduation  +     0.19910048440114 * EducationMaster
1343662   +          +    -0.05213342781535 * Marital_StatusDivorced
1343663   +          +     0.07520352092928 * Marital_StatusMarried
1343664   +          +     0.20175107471623 * Marital_StatusSingle
1343665   +          +     0.21785232690504 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07291520243057 * Education2n_Cycle + 0.22798022739243 * 
EducationBasic + -0.09714428862174 * EducationGraduation + 0.19910048440114 * EducationMaster 
+ -0.05213342781535 * Marital_StatusDivorced + 0.07520352092928 * Marital_StatusMarried + 
0.20175107471623 * Marital_StatusSingle + 0.21785232690504 * Marital_StatusTogether ;
1343666   +   H14  = H14  +    -0.16241733679628 * Education2n_Cycle
1343667   +          +     0.10611998985678 * EducationBasic  +    -0.03570492688548 *
1343668   +        EducationGraduation  +     0.29010545079762 * EducationMaster
1343669   +          +    -0.40635592200933 * Marital_StatusDivorced
1343670   +          +     0.64772941459031 * Marital_StatusMarried
1343671   +          +    -0.36402842056603 * Marital_StatusSingle
1343672   +          +     0.66760594472194 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.16241733679628 * Education2n_Cycle + 0.10611998985678 * 
EducationBasic + -0.03570492688548 * EducationGraduation + 0.29010545079762 * EducationMaster 
+ -0.40635592200933 * Marital_StatusDivorced + 0.64772941459031 * Marital_StatusMarried + 
-0.36402842056603 * Marital_StatusSingle + 0.66760594472194 * Marital_StatusTogether ;
1343673   +   H15  = H15  +      0.1484080088272 * Education2n_Cycle
1343674   +          +    -0.26484833011693 * EducationBasic  +     0.32372570227867 *
1343675   +        EducationGraduation  +    -0.19830450172452 * EducationMaster
1343676   +          +     0.87932592764844 * Marital_StatusDivorced
1343677   +          +    -0.85946473083734 * Marital_StatusMarried
1343678   +          +     0.74505733668545 * Marital_StatusSingle
1343679   +          +    -0.94561469309103 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.1484080088272 * Education2n_Cycle + -0.26484833011693 * 
EducationBasic + 0.32372570227867 * EducationGraduation + -0.19830450172452 * EducationMaster 
+ 0.87932592764844 * Marital_StatusDivorced + -0.85946473083734 * Marital_StatusMarried + 
0.74505733668545 * Marital_StatusSingle + -0.94561469309103 * Marital_StatusTogether ;
1343680   +   H16  = H16  +     0.06060112302425 * Education2n_Cycle
1343681   +          +    -0.33181717926405 * EducationBasic  +    -0.11727908170163 *
1343682   +        EducationGraduation  +    -0.12441264886812 * EducationMaster
1343683   +          +    -0.11861748280641 * Marital_StatusDivorced
1343684   +          +    -0.15869097739395 * Marital_StatusMarried
1343685   +          +     0.34415019828259 * Marital_StatusSingle
1343686   +          +    -0.10748203749958 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.06060112302425 * Education2n_Cycle + -0.33181717926405 * 
EducationBasic + -0.11727908170163 * EducationGraduation + -0.12441264886812 * EducationMaster 
+ -0.11861748280641 * Marital_StatusDivorced + -0.15869097739395 * Marital_StatusMarried + 
0.34415019828259 * Marital_StatusSingle + -0.10748203749958 * Marital_StatusTogether ;
1343687   +   H17  = H17  +      0.0204719144571 * Education2n_Cycle
1343688   +          +    -0.21500190587821 * EducationBasic  +    -0.12457774765815 *
1343689   +        EducationGraduation  +    -0.08824349470153 * EducationMaster
1343690   +          +     0.14995740697816 * Marital_StatusDivorced
1343691   +          +    -1.01788822114068 * Marital_StatusMarried
1343692   +          +     0.70532758126153 * Marital_StatusSingle
1343693   +          +    -0.63335960879305 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.0204719144571 * Education2n_Cycle + -0.21500190587821 * 
EducationBasic + -0.12457774765815 * EducationGraduation + -0.08824349470153 * EducationMaster 
+ 0.14995740697816 * Marital_StatusDivorced + -1.01788822114068 * Marital_StatusMarried + 
0.70532758126153 * Marital_StatusSingle + -0.63335960879305 * Marital_StatusTogether ;
1343694   +   H11  =     0.02607332365548 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.02607332365548 + H11 ;
1343695   +   H12  =    -0.56666577494928 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.56666577494928 + H12 ;
1343696   +   H13  =    -1.03772915602166 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.03772915602166 + H13 ;
1343697   +   H14  =     0.84490585692811 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.84490585692811 + H14 ;
1343698   +   H15  =     -0.4221012604846 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.4221012604846 + H15 ;
1343699   +   H16  =     -1.7732139312938 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.7732139312938 + H16 ;
1343700   +   H17  =    -1.59831075827511 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.59831075827511 + H17 ;
1343701   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1343702   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1343703   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1343704   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1343705   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1343706   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1343707   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
1343708   +END;
MPRINT(EM_DIAGRAM):   END;
1343709   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1343710   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1343711   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1343712   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1343713   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1343714   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1343715   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1343716   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
1343717   +END;
MPRINT(EM_DIAGRAM):   END;
1343718   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1343719   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1343720   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1343721   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1343722   +   P_DepVar1  =      -1.605577695663 * H11  +    -1.61358647892122 * H12
1343723   +          +     0.34401900767527 * H13  +     3.24181562332148 * H14
1343724   +          +     3.59380365492102 * H15  +     0.56941587287347 * H16
1343725   +          +     2.13310046968058 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.605577695663 * H11 + -1.61358647892122 * H12 + 
0.34401900767527 * H13 + 3.24181562332148 * H14 + 3.59380365492102 * H15 + 0.56941587287347 * 
H16 + 2.13310046968058 * H17 ;
1343726   +   P_DepVar1  =    -2.17258746401986 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.17258746401986 + P_DepVar1 ;
1343727   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1343728   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1343729   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1343730   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1343731   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1343732   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1343733   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1343734   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1343735   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1343736   +END;
MPRINT(EM_DIAGRAM):   END;
1343737   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1343738   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1343739   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1343740   +END;
MPRINT(EM_DIAGRAM):   END;
1343741   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1343742   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1343743   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1343744   +END;
MPRINT(EM_DIAGRAM):   END;
1343745   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1343746   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1343747   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1343748   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1343749   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1343750   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1343751   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1343752   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1343753   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1343754   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1343755   +END;
MPRINT(EM_DIAGRAM):   END;
1343756   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1343757   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1343758   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1343759   +drop
1343760   +H11
1343761   +H12
1343762   +H13
1343763   +H14
1343764   +H15
1343765   +H16
1343766   +H17
1343767   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
1343768   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1343769    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1343770    quit;
1343771    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1343772    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1343773    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1343774    retain ID 2 Node "Neural10";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural10";
1343775    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1343776    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3050 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3050 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1343777    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1343778    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1343779    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3050 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3050 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1343780    proc sort data=EMWS8.Neural10_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural10_variableset out=_temp2(keep=NAME CREATOR);
1343781    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1343782    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL10_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1343783    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1343784    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1343785    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1343786    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1343787    proc contents data=EMWS8.Neural10_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural10_train out=_meta(keep=NAME) noprint;
1343788    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1343789    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1343790    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1343791    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1343792    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1343793    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1343794    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1343795    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1343796    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1343797    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1343797  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1655 rows and 5 columns.

1343798    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1343799    proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
1343800    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1655 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL_FCMP has 1655 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1343801    filename _pref
1343801  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1343802    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1343803    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1343804   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1343805   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1343806   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1343807   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1343808   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1343809   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1343810    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1343811    quit;
1343812    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1343813    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1343814    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1343815    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1343816    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1343817    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1343818    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1343819    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1343820    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1343821    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1343822    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1343823    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1343824    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1343825    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1343826    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1343827    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1343828    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1343829    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1343830    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1343831    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1343832    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1343833    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1343834    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1343835    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1343836    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1343837    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1343838    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1343838  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1343839    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1343840    proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
1343841    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL_FCMP has 1659 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1343842    filename _pref
1343842  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1343843    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1343844    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1343845   +
1343846   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1343847   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1343847  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1343848   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1343849   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1343850   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1343851   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1343852   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1343853    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1343854    quit;
1343855    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1343856    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1343857    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1343858    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1343859    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1343860    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1343861    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1343862    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1343863    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1343864    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1343865    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1343866    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1343867    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1343868    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1343869    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1343870    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1343871    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1343872    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1343873    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1343874    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1343875    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1343876    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1343877    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1343878    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1343879    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1343880    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1343881    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1343881  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1343882    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1343883    proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
1343884    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL_FCMP has 1698 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1343885    filename _pref
1343885  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1343886    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1343887    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1343888   +
1343889   +
1343890   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1343891   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1343892   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1343893   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1343894   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1343895   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1343896   +
1343897   +
1343898   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1343899   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1343900   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1343901   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1343902   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1343903   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1343904   +
1343905   +
1343906   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1343907   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1343908   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1343909   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1343910   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1343911   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1343912   +
1343913   +
1343914   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1343915   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1343916   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1343917   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1343918   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1343919   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1343920   +
1343921   +
1343922   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1343923   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1343924   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1343925   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1343926   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1343927   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1343928   +
1343929   +
1343930   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1343931   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1343932   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1343933   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1343934   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1343935   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1343936   +
1343937   +
1343938   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1343939   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1343940   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1343941   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1343942   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1343943   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1343944   +
1343945   +
1343946   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1343947   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1343948   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1343949   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1343950   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1343951   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1343952   +if
1343953   +_FILTERNORM1 not in ( '.')
1343954   + and
1343955   +_FILTERNORM2 not in ( '.')
1343956   + and
1343957   +_FILTERNORM3 not in ( '.')
1343958   + and
1343959   +_FILTERNORM4 not in ( '.')
1343960   + and
1343961   +_FILTERNORM5 not in ( '.')
1343962   + and
1343963   +_FILTERNORM6 not in ( '.')
1343964   + and
1343965   +_FILTERNORM7 not in ( ' ')
1343966   + and
1343967   +_FILTERNORM8 not in ( ' ')
1343968   +and
1343969   +( Dt_Customer ne .)
1343970   +and ( Income ne . and (Income<=107000))
1343971   +and ( Kidhome ne .)
1343972   +and ( MntFishProducts ne .)
1343973   +and ( MntFruits ne .)
1343974   +and ( MntGoldProds ne .)
1343975   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1343976   +and ( MntSweetProducts ne .)
1343977   +and ( MntWines ne .)
1343978   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1343979   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1343980   +and ( NumStorePurchases ne .)
1343981   +and ( NumWebPurchases ne .)
1343982   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1343983   +and ( Recency ne .)
1343984   +and ( Teenhome ne .)
1343985   +and ( Year_Birth ne .)
1343986   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1343987   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1343988   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1343989   +end;
MPRINT(EM_DIAGRAM):   end;
1343990   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1343991   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1343992    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1343993    quit;
1343994    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1343995    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1343996    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1343997    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1343998    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1343999    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1344000    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1344001    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1344002    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1344003    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1344004    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1344005    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1344006    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1344007    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1344008    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1344009    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1344010    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1344011    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1344012    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1344013    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1344014    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1344015    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1344016    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1344017    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1344018    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1344019    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1344020    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1344020  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1344021    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1344022    proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
1344023    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL_FCMP has 1764 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1344024    %macro varDept(fcmpdata=,id=);
1344025    %global nobs&id scoreFlag&id;
1344026    %let scoreFlag&id = 0;
1344027    %if &id=1 or ^&fcmpStart %then %do;
1344028    proc sort data=&fcmpdata out=_temp&id nodupkey;
1344029    by NAME;
1344030    where id=&id and LHS in( %let j=1;
1344031    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1344032    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1344033    "&var" %let j = %eval(&j+1);
1344034    %end;
1344035    );
1344036    run;
1344037    %let dsid = %sysfunc(open(_temp&id));
1344038    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1344039    %let dsid = %sysfunc(close(&dsid));
1344040    %if &&nobs&id %then %do;
1344041    %let scoreFlag&id = 1;
1344042    %let fcmpStart = 1;
1344043    %end;
1344044    %else %let fcmpStart = 0;
1344045    %end;
1344046    %else %do;
1344047    proc sort data=&fcmpdata out=_tempid;
1344048    where id=&id;
1344049    by LHS;
1344050    run;
1344051    %let dsid = %sysfunc(open(_tempid));
1344052    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1344053    %let dsid = %sysfunc(close(&dsid));
1344054    %if ^&&nobs&id %then %do;
1344055    proc datasets lib=work nolist;
1344056    delete _tempid;
1344057    run;
1344058    quit;
1344059    %end;
1344060    %else %do;
1344061    data _tempAll;
1344062    set %let j=%eval(&id-1);
1344063    %do x=1 %to &j;
1344064    %if &&nobs&x %then %do;
1344065    _temp&x %end;
1344066    %end;
1344067    ;
1344068    run;
1344069    proc sql;
1344070    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1344070  ! work._tempid p2 where p.name=p2.lhs;
1344071    quit;
1344072    data _temp&id;
1344073    set _temp&id;
1344074    where LHS ne '' and NAME ne '' and Node ne '';
1344075    run;
1344076    proc datasets lib=work nolist;
1344077    delete _tempAll;
1344078    run;
1344079    %let dsid = %sysfunc(open(_temp&id));
1344080    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1344081    %let dsid = %sysfunc(close(&dsid));
1344082    %if ^&&nobs&id %then %do;
1344083    proc datasets lib=work nolist;
1344084    delete _temp&id;
1344085    run;
1344086    quit;
1344087    %end;
1344088    %else %do;
1344089    %let scoreFlag&id = 1;
1344090    data _temp&id;
1344091    set _temp&id;
1344092    where LHS ne NAME and node ne '';
1344093    run;
1344094    %let dsid = %sysfunc(open(_temp&id));
1344095    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1344096    %let dsid = %sysfunc(close(&dsid));
1344097    %if ^&&nobs&id %then %do;
1344098    proc datasets lib=work nolist;
1344099    delete _temp&id;
1344100    run;
1344101    quit;
1344102    %end;
1344103    %else %do;
1344104    proc sort data=_temp&id nodupkey;
1344105    by LHS NAME;
1344106    run;
1344107    %end;
1344108    %end;
1344109    %end;
1344110    %end;
1344111    %mend varDept;
1344112    %macro optCode(outdata=fcmpdata);
1344113    %global fcmpStart;
1344114    %let fcmpStart = 0;
1344115    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1344116    %let NumNodes=9;
1344117    %do k=1 %to &NumNodes;
1344118    %vardept(fcmpdata=&outdata, id=&k);
1344119    %end;
1344120    %mend optCode;
1344121    %optcode(outData=EMWS8.Ensmbl_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1344122    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1344123    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1344124    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1344125    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1344126    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1344127    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1344128    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1344129    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1344130    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1344131    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1344131  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

1344132    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1344133    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1344134    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1344135    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1344136    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1344137    * Ensmbl: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl: Computing metadata for TRAIN data;
1344138    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.ENSMBL_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl_TRAIN out=WORK.M05U84H2 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M05U84H2;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M05U84H2(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M05U84H2;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M05U84H2;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2CLK04F NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2CLK04F;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M2CLK04F;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1D0SPXK(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M2CLK04F;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2CLK04F;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M2CLK04F;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2CLK04F;
MPRINT(EMADVISECOLUMNS):   set WORK.M2CLK04F;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Reg5_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Reg5_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1" 
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
1344458    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
1344459    set EMWS8.Ensmbl_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl_EMINFO;
1344460    where DATA='Ensmbl' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
1344461    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_EMINFO.
      WHERE (DATA='Ensmbl') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1344462    data EMWS8.Ensmbl_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl_EMINFO;
1344463    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
1344464    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
1344465    cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.ENSMBL_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
1344469    run;
1344470    data EMWS8.Ensmbl_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl_EMINFO;
1344471    set EMWS8.Ensmbl_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl_EMINFO WORK.MODELTEMP_INFO;
1344472    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1344473    proc sort data = EMWS8.Ensmbl_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl_EMINFO NOTHREADS;
1344474    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1344475    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL_EMINFO.
NOTE: The data set EMWS8.ENSMBL_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1344476    proc sort data = EMWS8.Reg5_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Reg5_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
1344477    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1344478    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS8.REG5_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1344479    proc sort data = EMWS8.Ensmbl_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
1344480    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1344481    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1344482    data EMWS8.Ensmbl_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl_EMINFO;
1344483    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
1344484    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1344485    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1344486    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1344487    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
1344488    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
1344489    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

NOTE: View EMWS8.ENSMBL_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      
NOTE: View EMWS8.ENSMBL_VALIDATE.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
