MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "16. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "20.14 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                16. April 2016
Time:                20.14 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O02CLFWY 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O02CLFWY new;
MPRINT(EM_DIAGRAM):   run;
657691     filename emflow
657691   ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl: Scoring REG_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
657692     *------------------------------------------------------------*;
657693     * Ensmbl: Scoring REG_TRAIN data;
657694     *------------------------------------------------------------*;
657695     data EMWS8.Ensmbl_TRAIN
657696     / view=EMWS8.Ensmbl_TRAIN
657697     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl_TRAIN / view=EMWS8.Ensmbl_TRAIN ;
657698     set EMWS8.Reg_TRAIN
657699     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg_TRAIN ;
657700     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl\EMFLOWSCORE.sas.
657701    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
657702    +* Ensmbl: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl: Combine model for DepVar;
657703    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
657704    +* Ensmbl: Scoring Code of model 1 of 9;
MPRINT(EM_DIAGRAM):   * Ensmbl: Scoring Code of model 1 of 9;
657705    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
657706    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
657707    +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
657708    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
657709    +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
657710    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
657711    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
657712    +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
657713    +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
657714    +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
657715    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
657716    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
657717    +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
657718    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
657719    +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
657720    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
657721    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
657722    +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
657723    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
657724    +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
657725    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
657726    +
657727    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
657728    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
657728   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
657729    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
657730    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
657731    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
657732    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
657733    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
657734    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
657735    +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
657736    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
657737    +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
657738    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
657739    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
657740    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
657741    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
657742    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
657743    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
657744    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
657745    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
657746    +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
657747    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
657748    +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
657749    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
657750    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
657751    +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
657752    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
657753    +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
657754    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
657755    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
657756    +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
The SAS System

657757    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
657758    +* NODE: Reg;
MPRINT(EM_DIAGRAM):   * NODE: Reg;
657759    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
657760    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
657761    +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
657762    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
657763    +
657764    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
657765    +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
657766    +
657767    +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
657768    +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
657769    +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
657770    +array REGDRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REGDRF [2] $12 _temporary_ ('1' '0' );
657771    +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
657772    +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
657773    +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
657774    +ARRAY REGDRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REGDRU[2] _TEMPORARY_ (1 0);
657775    +
657776    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
657777    +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
657778    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
657779    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
657780    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
657781    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
657782    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
657783    +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
657784    +end;
MPRINT(EM_DIAGRAM):   end;
657785    +else do;
MPRINT(EM_DIAGRAM):   else do;
657786    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
657787    +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
657788    +   end;
MPRINT(EM_DIAGRAM):   end;
657789    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
657790    +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
657791    +   end;
MPRINT(EM_DIAGRAM):   end;
657792    +   else do;
MPRINT(EM_DIAGRAM):   else do;
657793    +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
657794    +   end;
MPRINT(EM_DIAGRAM):   end;
657795    +end;
MPRINT(EM_DIAGRAM):   end;
657796    +
657797    +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
657798    +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
657799    +
657800    +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
657801    +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
657802    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
657803    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
657804    +end;
MPRINT(EM_DIAGRAM):   end;
657805    +
657806    +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
657807    +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
657808    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
657809    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
657810    +end;
MPRINT(EM_DIAGRAM):   end;
657811    +
657812    +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
657813    +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
657814    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
657815    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
657816    +end;
MPRINT(EM_DIAGRAM):   end;
657817    +
657818    +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
657819    +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
657820    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
657821    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
657822    +end;
MPRINT(EM_DIAGRAM):   end;
657823    +
657824    +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
657825    +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
657826    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
657827    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
657828    +end;
MPRINT(EM_DIAGRAM):   end;
657829    +
657830    +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
657831    +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
657832    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
657833    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
657834    +end;
MPRINT(EM_DIAGRAM):   end;
657835    +
657836    +*** Check NumDistPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDistPurchases for missing values ;
657837    +if missing( NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDistPurchases ) then do;
657838    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
657839    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
657840    +end;
MPRINT(EM_DIAGRAM):   end;
657841    +
657842    +*** Check NumStorePurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumStorePurchases for missing values ;
657843    +if missing( NumStorePurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumStorePurchases ) then do;
657844    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
657845    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
657846    +end;
MPRINT(EM_DIAGRAM):   end;
657847    +
657848    +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
657849    +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
657850    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
657851    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
657852    +end;
MPRINT(EM_DIAGRAM):   end;
657853    +
657854    +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
657855    +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
657856    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
657857    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
657858    +end;
MPRINT(EM_DIAGRAM):   end;
657859    +
657860    +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
657861    +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
657862    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
657863    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
657864    +end;
MPRINT(EM_DIAGRAM):   end;
657865    +
657866    +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
657867    +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
657868    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
657869    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
657870    +end;
MPRINT(EM_DIAGRAM):   end;
657871    +
657872    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
657873    +drop _5_0 ;
MPRINT(EM_DIAGRAM):   drop _5_0 ;
657874    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
657875    +   _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
657876    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
657877    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
657878    +end;
MPRINT(EM_DIAGRAM):   end;
657879    +else do;
MPRINT(EM_DIAGRAM):   else do;
657880    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
657881    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
657882    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
657883    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
657884    +      _5_0 = 1;
MPRINT(EM_DIAGRAM):   _5_0 = 1;
657885    +   end;
MPRINT(EM_DIAGRAM):   end;
657886    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
657887    +      _5_0 = -1;
MPRINT(EM_DIAGRAM):   _5_0 = -1;
657888    +   end;
MPRINT(EM_DIAGRAM):   end;
657889    +   else do;
MPRINT(EM_DIAGRAM):   else do;
657890    +      _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
657891    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
657892    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
657893    +   end;
MPRINT(EM_DIAGRAM):   end;
657894    +end;
MPRINT(EM_DIAGRAM):   end;
657895    +
657896    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
657897    +drop _8_0 _8_1 _8_2 _8_3 ;
MPRINT(EM_DIAGRAM):   drop _8_0 _8_1 _8_2 _8_3 ;
657898    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
657899    +_8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
657900    +_8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
657901    +_8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
657902    +_8_3 = 0;
MPRINT(EM_DIAGRAM):   _8_3 = 0;
657903    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
657904    +   _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
657905    +   _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
657906    +   _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
657907    +   _8_3 = .;
MPRINT(EM_DIAGRAM):   _8_3 = .;
657908    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
657909    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
657910    +end;
MPRINT(EM_DIAGRAM):   end;
657911    +else do;
MPRINT(EM_DIAGRAM):   else do;
657912    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
657913    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
657914    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
657915    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
657916    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
657917    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
657918    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
657919    +            _8_0 = 1;
MPRINT(EM_DIAGRAM):   _8_0 = 1;
657920    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
657921    +         end;
MPRINT(EM_DIAGRAM):   end;
657922    +         else do;
MPRINT(EM_DIAGRAM):   else do;
657923    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
657924    +               _8_1 = 1;
MPRINT(EM_DIAGRAM):   _8_1 = 1;
657925    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
657926    +            end;
MPRINT(EM_DIAGRAM):   end;
657927    +         end;
MPRINT(EM_DIAGRAM):   end;
657928    +      end;
MPRINT(EM_DIAGRAM):   end;
657929    +      else do;
MPRINT(EM_DIAGRAM):   else do;
657930    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
657931    +            _8_2 = 1;
MPRINT(EM_DIAGRAM):   _8_2 = 1;
657932    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
657933    +         end;
MPRINT(EM_DIAGRAM):   end;
657934    +      end;
MPRINT(EM_DIAGRAM):   end;
657935    +   end;
MPRINT(EM_DIAGRAM):   end;
657936    +   else do;
MPRINT(EM_DIAGRAM):   else do;
657937    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
657938    +         _8_3 = 1;
MPRINT(EM_DIAGRAM):   _8_3 = 1;
657939    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
657940    +      end;
MPRINT(EM_DIAGRAM):   end;
657941    +      else do;
MPRINT(EM_DIAGRAM):   else do;
657942    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
657943    +            _8_0 = -1;
MPRINT(EM_DIAGRAM):   _8_0 = -1;
657944    +            _8_1 = -1;
MPRINT(EM_DIAGRAM):   _8_1 = -1;
657945    +            _8_2 = -1;
MPRINT(EM_DIAGRAM):   _8_2 = -1;
657946    +            _8_3 = -1;
MPRINT(EM_DIAGRAM):   _8_3 = -1;
657947    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
657948    +         end;
MPRINT(EM_DIAGRAM):   end;
657949    +      end;
MPRINT(EM_DIAGRAM):   end;
657950    +   end;
MPRINT(EM_DIAGRAM):   end;
657951    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
657952    +      _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
657953    +      _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
657954    +      _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
657955    +      _8_3 = .;
MPRINT(EM_DIAGRAM):   _8_3 = .;
657956    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
657957    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
657958    +   end;
MPRINT(EM_DIAGRAM):   end;
657959    +end;
MPRINT(EM_DIAGRAM):   end;
657960    +
657961    +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
657962    +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
657963    +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
657964    +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
657965    +   goto REGDR1;
MPRINT(EM_DIAGRAM):   goto REGDR1;
657966    +end;
MPRINT(EM_DIAGRAM):   end;
657967    +
657968    +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
657969    +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
657970    +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
657971    +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
657972    +
657973    +***  Effect: AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp5 ;
657974    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
657975    +_LP0 = _LP0 + (   -0.56028520837373) * _TEMP * _5_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.56028520837373) * _TEMP * _5_0;
657976    +
657977    +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
657978    +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
657979    +_LP0 = _LP0 + (    2.79239159186379 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.79239159186379 * _TEMP);
657980    +
657981    +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
657982    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
657983    +_LP0 = _LP0 + (     0.2275252741727) * _TEMP * _8_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.2275252741727) * _TEMP * _8_0;
657984    +_LP0 = _LP0 + (   -0.91116218011236) * _TEMP * _8_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.91116218011236) * _TEMP * _8_1;
657985    +_LP0 = _LP0 + (    0.79946068413138) * _TEMP * _8_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.79946068413138) * _TEMP * _8_2;
657986    +_LP0 = _LP0 + (   -0.98989949139857) * _TEMP * _8_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.98989949139857) * _TEMP * _8_3;
657987    +
657988    +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
657989    +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
657990    +_LP0 = _LP0 + (   -0.00335712586387 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00335712586387 * _TEMP);
657991    +
657992    +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
657993    +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
657994    +_LP0 = _LP0 + (    0.00629742829089 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00629742829089 * _TEMP);
657995    +
657996    +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
657997    +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
657998    +_LP0 = _LP0 + (    0.01279646348912 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.01279646348912 * _TEMP);
657999    +
658000    +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
658001    +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
658002    +_LP0 = _LP0 + (    1.04928237490658 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.04928237490658 * _TEMP);
658003    +
658004    +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
658005    +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
658006    +_LP0 = _LP0 + (    0.63552663903891 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.63552663903891 * _TEMP);
658007    +
658008    +***  Effect: NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDistPurchases ;
658009    +_TEMP = NumDistPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDistPurchases ;
658010    +_LP0 = _LP0 + (   -0.30009214663172 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.30009214663172 * _TEMP);
658011    +
658012    +***  Effect: NumStorePurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumStorePurchases ;
658013    +_TEMP = NumStorePurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumStorePurchases ;
658014    +_LP0 = _LP0 + (   -0.35266748733964 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.35266748733964 * _TEMP);
658015    +
658016    +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
658017    +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
658018    +_LP0 = _LP0 + (    0.81352797289677 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.81352797289677 * _TEMP);
658019    +
658020    +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
658021    +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
658022    +_LP0 = _LP0 + (    0.00030864821595 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00030864821595 * _TEMP);
658023    +
658024    +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
658025    +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
658026    +_LP0 = _LP0 + (    -0.0914537880502 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.0914537880502 * _TEMP);
658027    +
658028    +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
658029    +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
658030    +_LP0 = _LP0 + (   -0.66398866776766 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.66398866776766 * _TEMP);
658031    +
658032    +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
658033    +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
658034    +_TEMP =    -5.00123691079588 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -5.00123691079588 + _LP0;
658035    +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
658036    +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
658037    +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
658038    +end;
MPRINT(EM_DIAGRAM):   end;
658039    +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
658040    +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
658041    +
658042    +REGDR1:
658043    +
658044    +*** Residuals;
MPRINT(EM_DIAGRAM):   REGDR1: *** Residuals;
658045    +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
658046    +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
658047    +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
658048    +end;
MPRINT(EM_DIAGRAM):   end;
658049    +else do;
MPRINT(EM_DIAGRAM):   else do;
658050    +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
658051    +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
658052    +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
658053    +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
658054    +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
658055    +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
658056    +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
658057    +   end;
MPRINT(EM_DIAGRAM):   end;
658058    +end;
MPRINT(EM_DIAGRAM):   end;
658059    +
658060    +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
658061    +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
658062    +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
658063    +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
658064    +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
658065    +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
658066    +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
658067    +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
658068    +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
658069    +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
658070    +end;
MPRINT(EM_DIAGRAM):   end;
658071    +I_DepVar = REGDRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REGDRF[_IY];
658072    +U_DepVar = REGDRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REGDRU[_IY];
658073    +
658074    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
658075    +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
658076    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
658077    +* Renaming variables for Reg;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg;
658078    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
658079    +* Renaming Posterior variables for Reg;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg;
658080    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
658081    +drop Reg_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg_P_DepVar1;
658082    +Reg_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg_P_DepVar1 = P_DepVar1;
658083    +drop Reg_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg_P_DepVar0;
658084    +Reg_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg_P_DepVar0 = P_DepVar0;
658085    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
658086    +* Renaming _WARN_ variable for Reg;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg;
658087    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
658088    +length Reg_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg_WARN_ $4;
658089    +drop Reg_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg_WARN_;
658090    +Reg_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg_WARN_ = _WARN_;
658091    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
658092    +* Ensmbl: Scoring Code of model 2 of 9;
MPRINT(EM_DIAGRAM):   * Ensmbl: Scoring Code of model 2 of 9;
658093    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
658094    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
658095    +* TOOL: Decision Tree;
MPRINT(EM_DIAGRAM):   * TOOL: Decision Tree;
658096    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
658097    +* NODE: Tree;
MPRINT(EM_DIAGRAM):   * NODE: Tree;
658098    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
658099    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
658100    +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
658101    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
658102    +
658103    +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
658104    +LENGTH F_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH F_DepVar $ 12;
658105    +LENGTH I_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH I_DepVar $ 12;
658106    +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
658107    +
658108    +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
658109    +LABEL _NODE_  = 'Node' ;
MPRINT(EM_DIAGRAM):   LABEL _NODE_ = 'Node' ;
658110    +LABEL _LEAF_  = 'Leaf' ;
MPRINT(EM_DIAGRAM):   LABEL _LEAF_ = 'Leaf' ;
658111    +LABEL P_DepVar0  = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar0 = 'Predicted: DepVar=0' ;
658112    +LABEL P_DepVar1  = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar1 = 'Predicted: DepVar=1' ;
658113    +LABEL Q_DepVar0  = 'Unadjusted P: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
658114    +LABEL Q_DepVar1  = 'Unadjusted P: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
658115    +LABEL V_DepVar0  = 'Validated: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar0 = 'Validated: DepVar=0' ;
658116    +LABEL V_DepVar1  = 'Validated: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar1 = 'Validated: DepVar=1' ;
658117    +LABEL R_DepVar0  = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL R_DepVar0 = 'Residual: DepVar=0' ;
658118    +LABEL R_DepVar1  = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL R_DepVar1 = 'Residual: DepVar=1' ;
658119    +LABEL F_DepVar  = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL F_DepVar = 'From: DepVar' ;
658120    +LABEL I_DepVar  = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL I_DepVar = 'Into: DepVar' ;
658121    +LABEL U_DepVar  = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL U_DepVar = 'Unnormalized Into: DepVar' ;
658122    +LABEL _WARN_  = 'Warnings' ;
MPRINT(EM_DIAGRAM):   LABEL _WARN_ = 'Warnings' ;
658123    +
658124    +
658125    +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
658126    +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
658127    +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
658128    +LENGTH _ARBFMT_8 $      8; DROP _ARBFMT_8;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_8 $ 8;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_8;
658129    +_ARBFMT_8 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_8 = ' ';
658130    +
658131    +
658132    +_ARBFMT_12 = PUT( DepVar , BEST.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( DepVar , BEST.);
658133    + %DMNORMCP( _ARBFMT_12, F_DepVar );
MPRINT(DMNORMCP):   F_DepVar=dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
658134    +
658135    +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
658136    +IF  NOT MISSING(AcceptedCmpTotal ) AND
658137    +                   0.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 0.5 <= AcceptedCmpTotal THEN DO;
658138    +  IF  NOT MISSING(Recency ) AND
658139    +    Recency  <                 38.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Recency ) AND Recency < 38.5 THEN DO;
658140    +    IF  NOT MISSING(AcceptedCmpTotal ) AND
658141    +                       1.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 1.5 <= AcceptedCmpTotal THEN DO;
658142    +      _NODE_  =                   13;
MPRINT(EM_DIAGRAM):   _NODE_ = 13;
658143    +      _LEAF_  =                   16;
MPRINT(EM_DIAGRAM):   _LEAF_ = 16;
658144    +      P_DepVar0  =     0.05263157894736;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.05263157894736;
658145    +      P_DepVar1  =     0.94736842105263;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.94736842105263;
658146    +      Q_DepVar0  =     0.05263157894736;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.05263157894736;
658147    +      Q_DepVar1  =     0.94736842105263;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.94736842105263;
658148    +      V_DepVar0  =                    0;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0;
658149    +      V_DepVar1  =                    1;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 1;
658150    +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
658151    +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
658152    +      END;
MPRINT(EM_DIAGRAM):   END;
658153    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
658154    +      _ARBFMT_8 = PUT( Marital_Status , $8.);
MPRINT(EM_DIAGRAM):   _ARBFMT_8 = PUT( Marital_Status , $8.);
658155    +       %DMNORMIP( _ARBFMT_8);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
658156    +      IF _ARBFMT_8 IN ('WIDOW' ,'DIVORCED' ,'SINGLE' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_8 IN ('WIDOW' ,'DIVORCED' ,'SINGLE' ) THEN DO;
658157    +        _NODE_  =                   23;
MPRINT(EM_DIAGRAM):   _NODE_ = 23;
658158    +        _LEAF_  =                   15;
MPRINT(EM_DIAGRAM):   _LEAF_ = 15;
658159    +        P_DepVar0  =      0.2258064516129;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.2258064516129;
658160    +        P_DepVar1  =     0.77419354838709;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.77419354838709;
658161    +        Q_DepVar0  =      0.2258064516129;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.2258064516129;
658162    +        Q_DepVar1  =     0.77419354838709;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.77419354838709;
658163    +        V_DepVar0  =     0.41935483870967;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.41935483870967;
658164    +        V_DepVar1  =     0.58064516129032;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.58064516129032;
658165    +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
658166    +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
658167    +        END;
MPRINT(EM_DIAGRAM):   END;
658168    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
658169    +        IF  NOT MISSING(NumStorePurchases ) AND
658170    +          NumStorePurchases  <                  6.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumStorePurchases ) AND NumStorePurchases < 6.5 THEN DO;
658171    +          IF  NOT MISSING(NumWebVisitsMonth ) AND
658172    +            NumWebVisitsMonth  <                  5.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumWebVisitsMonth ) AND NumWebVisitsMonth < 5.5 THEN DO;
658173    +            _NODE_  =                   56;
MPRINT(EM_DIAGRAM):   _NODE_ = 56;
658174    +            _LEAF_  =                   12;
MPRINT(EM_DIAGRAM):   _LEAF_ = 12;
658175    +            P_DepVar0  =     0.61111111111111;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.61111111111111;
658176    +            P_DepVar1  =     0.38888888888888;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.38888888888888;
658177    +            Q_DepVar0  =     0.61111111111111;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.61111111111111;
658178    +            Q_DepVar1  =     0.38888888888888;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.38888888888888;
658179    +            V_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.66666666666666;
658180    +            V_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.33333333333333;
658181    +            I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
658182    +            U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
658183    +            END;
MPRINT(EM_DIAGRAM):   END;
658184    +          ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
658185    +            _NODE_  =                   57;
MPRINT(EM_DIAGRAM):   _NODE_ = 57;
658186    +            _LEAF_  =                   13;
MPRINT(EM_DIAGRAM):   _LEAF_ = 13;
658187    +            P_DepVar0  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.14285714285714;
658188    +            P_DepVar1  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.85714285714285;
658189    +            Q_DepVar0  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.14285714285714;
658190    +            Q_DepVar1  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.85714285714285;
658191    +            V_DepVar0  =      0.3076923076923;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.3076923076923;
658192    +            V_DepVar1  =     0.69230769230769;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.69230769230769;
658193    +            I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
658194    +            U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
658195    +            END;
MPRINT(EM_DIAGRAM):   END;
658196    +          END;
MPRINT(EM_DIAGRAM):   END;
658197    +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
658198    +          _NODE_  =                   41;
MPRINT(EM_DIAGRAM):   _NODE_ = 41;
658199    +          _LEAF_  =                   14;
MPRINT(EM_DIAGRAM):   _LEAF_ = 14;
658200    +          P_DepVar0  =     0.74545454545454;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.74545454545454;
658201    +          P_DepVar1  =     0.25454545454545;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.25454545454545;
658202    +          Q_DepVar0  =     0.74545454545454;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.74545454545454;
658203    +          Q_DepVar1  =     0.25454545454545;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.25454545454545;
658204    +          V_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.66666666666666;
658205    +          V_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.33333333333333;
658206    +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
658207    +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
658208    +          END;
MPRINT(EM_DIAGRAM):   END;
658209    +        END;
MPRINT(EM_DIAGRAM):   END;
658210    +      END;
MPRINT(EM_DIAGRAM):   END;
658211    +    END;
MPRINT(EM_DIAGRAM):   END;
658212    +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
658213    +    IF  NOT MISSING(AcceptedCmpTotal ) AND
658214    +                       2.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 2.5 <= AcceptedCmpTotal THEN DO;
658215    +      _NODE_  =                   15;
MPRINT(EM_DIAGRAM):   _NODE_ = 15;
658216    +      _LEAF_  =                   18;
MPRINT(EM_DIAGRAM):   _LEAF_ = 18;
658217    +      P_DepVar0  =      0.3103448275862;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.3103448275862;
658218    +      P_DepVar1  =     0.68965517241379;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.68965517241379;
658219    +      Q_DepVar0  =      0.3103448275862;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.3103448275862;
658220    +      Q_DepVar1  =     0.68965517241379;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.68965517241379;
658221    +      V_DepVar0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.33333333333333;
658222    +      V_DepVar1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.66666666666666;
658223    +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
658224    +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
658225    +      END;
MPRINT(EM_DIAGRAM):   END;
658226    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
658227    +      _NODE_  =                   14;
MPRINT(EM_DIAGRAM):   _NODE_ = 14;
658228    +      _LEAF_  =                   17;
MPRINT(EM_DIAGRAM):   _LEAF_ = 17;
658229    +      P_DepVar0  =     0.82562277580071;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.82562277580071;
658230    +      P_DepVar1  =     0.17437722419928;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.17437722419928;
658231    +      Q_DepVar0  =     0.82562277580071;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.82562277580071;
658232    +      Q_DepVar1  =     0.17437722419928;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.17437722419928;
658233    +      V_DepVar0  =     0.81818181818181;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.81818181818181;
658234    +      V_DepVar1  =     0.18181818181818;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.18181818181818;
658235    +      I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
658236    +      U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
658237    +      END;
MPRINT(EM_DIAGRAM):   END;
658238    +    END;
MPRINT(EM_DIAGRAM):   END;
658239    +  END;
MPRINT(EM_DIAGRAM):   END;
658240    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
658241    +  IF  NOT MISSING(Recency ) AND
658242    +    Recency  <                 32.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Recency ) AND Recency < 32.5 THEN DO;
658243    +    IF  NOT MISSING(NumCatalogPurchases ) AND
658244    +                       5.5 <= NumCatalogPurchases  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumCatalogPurchases ) AND 5.5 <= NumCatalogPurchases THEN 
DO;
658245    +      IF  NOT MISSING(NumStorePurchases ) AND
658246    +                         7.5 <= NumStorePurchases  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumStorePurchases ) AND 7.5 <= NumStorePurchases THEN DO;
658247    +        IF  NOT MISSING(RFMstat ) AND
658248    +              1964.32692307692 <= RFMstat  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RFMstat ) AND 1964.32692307692 <= RFMstat THEN DO;
658249    +          _NODE_  =                   37;
MPRINT(EM_DIAGRAM):   _NODE_ = 37;
658250    +          _LEAF_  =                   10;
MPRINT(EM_DIAGRAM):   _LEAF_ = 10;
658251    +          P_DepVar0  =     0.42857142857142;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.42857142857142;
658252    +          P_DepVar1  =     0.57142857142857;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.57142857142857;
658253    +          Q_DepVar0  =     0.42857142857142;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.42857142857142;
658254    +          Q_DepVar1  =     0.57142857142857;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.57142857142857;
658255    +          V_DepVar0  =     0.44444444444444;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.44444444444444;
658256    +          V_DepVar1  =     0.55555555555555;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.55555555555555;
658257    +          I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
658258    +          U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
658259    +          END;
MPRINT(EM_DIAGRAM):   END;
658260    +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
658261    +          _NODE_  =                   36;
MPRINT(EM_DIAGRAM):   _NODE_ = 36;
658262    +          _LEAF_  =                    9;
MPRINT(EM_DIAGRAM):   _LEAF_ = 9;
658263    +          P_DepVar0  =                    1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 1;
658264    +          P_DepVar1  =                    0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0;
658265    +          Q_DepVar0  =                    1;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 1;
658266    +          Q_DepVar1  =                    0;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0;
658267    +          V_DepVar0  =     0.69230769230769;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.69230769230769;
658268    +          V_DepVar1  =      0.3076923076923;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.3076923076923;
658269    +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
658270    +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
658271    +          END;
MPRINT(EM_DIAGRAM):   END;
658272    +        END;
MPRINT(EM_DIAGRAM):   END;
658273    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
658274    +        IF  NOT MISSING(MntFishProducts ) AND
658275    +          MntFishProducts  <                   26 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntFishProducts ) AND MntFishProducts < 26 THEN DO;
658276    +          _NODE_  =                   34;
MPRINT(EM_DIAGRAM):   _NODE_ = 34;
658277    +          _LEAF_  =                    7;
MPRINT(EM_DIAGRAM):   _LEAF_ = 7;
658278    +          P_DepVar0  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.71428571428571;
658279    +          P_DepVar1  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.28571428571428;
658280    +          Q_DepVar0  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.71428571428571;
658281    +          Q_DepVar1  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.28571428571428;
658282    +          V_DepVar0  =                  0.8;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.8;
658283    +          V_DepVar1  =                  0.2;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.2;
658284    +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
658285    +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
658286    +          END;
MPRINT(EM_DIAGRAM):   END;
658287    +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
658288    +          _NODE_  =                   35;
MPRINT(EM_DIAGRAM):   _NODE_ = 35;
658289    +          _LEAF_  =                    8;
MPRINT(EM_DIAGRAM):   _LEAF_ = 8;
658290    +          P_DepVar0  =     0.13793103448275;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.13793103448275;
658291    +          P_DepVar1  =     0.86206896551724;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.86206896551724;
658292    +          Q_DepVar0  =     0.13793103448275;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.13793103448275;
658293    +          Q_DepVar1  =     0.86206896551724;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.86206896551724;
658294    +          V_DepVar0  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.14285714285714;
658295    +          V_DepVar1  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.85714285714285;
658296    +          I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
658297    +          U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
658298    +          END;
MPRINT(EM_DIAGRAM):   END;
658299    +        END;
MPRINT(EM_DIAGRAM):   END;
658300    +      END;
MPRINT(EM_DIAGRAM):   END;
658301    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
658302    +      IF  NOT MISSING(NumWebVisitsMonth ) AND
658303    +                         7.5 <= NumWebVisitsMonth  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumWebVisitsMonth ) AND 7.5 <= NumWebVisitsMonth THEN DO;
658304    +        IF  NOT MISSING(NumCatalogPurchases ) AND
658305    +                           0.5 <= NumCatalogPurchases  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumCatalogPurchases ) AND 0.5 <= NumCatalogPurchases THEN 
DO;
658306    +          IF  NOT MISSING(Kidhome ) AND
658307    +            Kidhome  <                  0.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Kidhome ) AND Kidhome < 0.5 THEN DO;
658308    +            _NODE_  =                   52;
MPRINT(EM_DIAGRAM):   _NODE_ = 52;
658309    +            _LEAF_  =                    5;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
658310    +            P_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.66666666666666;
658311    +            P_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.33333333333333;
658312    +            Q_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.66666666666666;
658313    +            Q_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.33333333333333;
658314    +            V_DepVar0  =                  0.6;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.6;
658315    +            V_DepVar1  =                  0.4;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.4;
658316    +            I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
658317    +            U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
658318    +            END;
MPRINT(EM_DIAGRAM):   END;
658319    +          ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
658320    +            _NODE_  =                   53;
MPRINT(EM_DIAGRAM):   _NODE_ = 53;
658321    +            _LEAF_  =                    6;
MPRINT(EM_DIAGRAM):   _LEAF_ = 6;
658322    +            P_DepVar0  =     0.26470588235294;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.26470588235294;
658323    +            P_DepVar1  =     0.73529411764705;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.73529411764705;
658324    +            Q_DepVar0  =     0.26470588235294;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.26470588235294;
658325    +            Q_DepVar1  =     0.73529411764705;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.73529411764705;
658326    +            V_DepVar0  =     0.21428571428571;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.21428571428571;
658327    +            V_DepVar1  =     0.78571428571428;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.78571428571428;
658328    +            I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
658329    +            U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
658330    +            END;
MPRINT(EM_DIAGRAM):   END;
658331    +          END;
MPRINT(EM_DIAGRAM):   END;
658332    +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
658333    +          _NODE_  =                   32;
MPRINT(EM_DIAGRAM):   _NODE_ = 32;
658334    +          _LEAF_  =                    4;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
658335    +          P_DepVar0  =     0.81428571428571;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.81428571428571;
658336    +          P_DepVar1  =     0.18571428571428;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.18571428571428;
658337    +          Q_DepVar0  =     0.81428571428571;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.81428571428571;
658338    +          Q_DepVar1  =     0.18571428571428;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.18571428571428;
658339    +          V_DepVar0  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.71428571428571;
658340    +          V_DepVar1  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.28571428571428;
658341    +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
658342    +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
658343    +          END;
MPRINT(EM_DIAGRAM):   END;
658344    +        END;
MPRINT(EM_DIAGRAM):   END;
658345    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
658346    +        IF  NOT MISSING(NumDealsPurchases ) AND
658347    +                           5.5 <= NumDealsPurchases  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumDealsPurchases ) AND 5.5 <= NumDealsPurchases THEN DO;
658348    +          IF  NOT MISSING(NumStorePurchases ) AND
658349    +            NumStorePurchases  <                  6.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumStorePurchases ) AND NumStorePurchases < 6.5 THEN DO;
658350    +            _NODE_  =                   50;
MPRINT(EM_DIAGRAM):   _NODE_ = 50;
658351    +            _LEAF_  =                    2;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
658352    +            P_DepVar0  =     0.22222222222222;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.22222222222222;
658353    +            P_DepVar1  =     0.77777777777777;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.77777777777777;
658354    +            Q_DepVar0  =     0.22222222222222;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.22222222222222;
658355    +            Q_DepVar1  =     0.77777777777777;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.77777777777777;
658356    +            V_DepVar0  =                    0;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0;
658357    +            V_DepVar1  =                    1;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 1;
658358    +            I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
658359    +            U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
658360    +            END;
MPRINT(EM_DIAGRAM):   END;
658361    +          ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
658362    +            _NODE_  =                   51;
MPRINT(EM_DIAGRAM):   _NODE_ = 51;
658363    +            _LEAF_  =                    3;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
658364    +            P_DepVar0  =     0.91666666666666;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.91666666666666;
658365    +            P_DepVar1  =     0.08333333333333;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.08333333333333;
658366    +            Q_DepVar0  =     0.91666666666666;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.91666666666666;
658367    +            Q_DepVar1  =     0.08333333333333;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.08333333333333;
658368    +            V_DepVar0  =                  0.5;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.5;
658369    +            V_DepVar1  =                  0.5;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.5;
658370    +            I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
658371    +            U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
658372    +            END;
MPRINT(EM_DIAGRAM):   END;
658373    +          END;
MPRINT(EM_DIAGRAM):   END;
658374    +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
658375    +          _NODE_  =                   30;
MPRINT(EM_DIAGRAM):   _NODE_ = 30;
658376    +          _LEAF_  =                    1;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
658377    +          P_DepVar0  =     0.91545893719806;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.91545893719806;
658378    +          P_DepVar1  =     0.08454106280193;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.08454106280193;
658379    +          Q_DepVar0  =     0.91545893719806;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.91545893719806;
658380    +          Q_DepVar1  =     0.08454106280193;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.08454106280193;
658381    +          V_DepVar0  =     0.90217391304347;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.90217391304347;
658382    +          V_DepVar1  =     0.09782608695652;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.09782608695652;
658383    +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
658384    +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
658385    +          END;
MPRINT(EM_DIAGRAM):   END;
658386    +        END;
MPRINT(EM_DIAGRAM):   END;
658387    +      END;
MPRINT(EM_DIAGRAM):   END;
658388    +    END;
MPRINT(EM_DIAGRAM):   END;
658389    +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
658390    +    _NODE_  =                    5;
MPRINT(EM_DIAGRAM):   _NODE_ = 5;
658391    +    _LEAF_  =                   11;
MPRINT(EM_DIAGRAM):   _LEAF_ = 11;
658392    +    P_DepVar0  =     0.98042414355628;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.98042414355628;
658393    +    P_DepVar1  =     0.01957585644371;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.01957585644371;
658394    +    Q_DepVar0  =     0.98042414355628;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.98042414355628;
658395    +    Q_DepVar1  =     0.01957585644371;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.01957585644371;
658396    +    V_DepVar0  =     0.98795180722891;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.98795180722891;
658397    +    V_DepVar1  =     0.01204819277108;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.01204819277108;
658398    +    I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
658399    +    U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
658400    +    END;
MPRINT(EM_DIAGRAM):   END;
658401    +  END;
MPRINT(EM_DIAGRAM):   END;
658402    +
658403    +*****  RESIDUALS R_ *************;
MPRINT(EM_DIAGRAM):   ***** RESIDUALS R_ *************;
658404    +IF  F_DepVar  NE '0'
658405    +AND F_DepVar  NE '1'  THEN DO;
MPRINT(EM_DIAGRAM):   IF F_DepVar NE '0' AND F_DepVar NE '1' THEN DO;
658406    +        R_DepVar0  = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
658407    +        R_DepVar1  = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
658408    + END;
MPRINT(EM_DIAGRAM):   END;
658409    + ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
658410    +       R_DepVar0  =  -P_DepVar0 ;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0 ;
658411    +       R_DepVar1  =  -P_DepVar1 ;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1 ;
658412    +       SELECT( F_DepVar  );
MPRINT(EM_DIAGRAM):   SELECT( F_DepVar );
658413    +          WHEN( '0'  ) R_DepVar0  = R_DepVar0  +1;
MPRINT(EM_DIAGRAM):   WHEN( '0' ) R_DepVar0 = R_DepVar0 +1;
658414    +          WHEN( '1'  ) R_DepVar1  = R_DepVar1  +1;
MPRINT(EM_DIAGRAM):   WHEN( '1' ) R_DepVar1 = R_DepVar1 +1;
658415    +       END;
MPRINT(EM_DIAGRAM):   END;
658416    + END;
MPRINT(EM_DIAGRAM):   END;
658417    +
658418    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
658419    +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
658420    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
658421    +drop _LEAF_;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
658422    +* Renaming variables for Tree;
MPRINT(EM_DIAGRAM):   * Renaming variables for Tree;
658423    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
658424    +* Renaming Posterior variables for Tree;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Tree;
658425    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
658426    +drop Tree_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Tree_P_DepVar1;
658427    +Tree_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Tree_P_DepVar1 = P_DepVar1;
658428    +drop Tree_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Tree_P_DepVar0;
658429    +Tree_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Tree_P_DepVar0 = P_DepVar0;
658430    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
658431    +* Renaming _WARN_ variable for Tree;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Tree;
658432    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
658433    +length Tree_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Tree_WARN_ $4;
658434    +drop Tree_WARN_;
MPRINT(EM_DIAGRAM):   drop Tree_WARN_;
658435    +Tree_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Tree_WARN_ = _WARN_;
658436    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
658437    +* Ensmbl: Scoring Code of model 3 of 9;
MPRINT(EM_DIAGRAM):   * Ensmbl: Scoring Code of model 3 of 9;
658438    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
658439    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
658440    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
658441    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
658442    +* NODE: Neural4;
MPRINT(EM_DIAGRAM):   * NODE: Neural4;
658443    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
658444    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
658445    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
658446    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
658447    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
658448    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
658449    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
658450    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
658451    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
658452    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
658453    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
658454    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
658455    +LENGTH _WARN_ $4
658456    +      F_DepVar  $ 12
658457    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
658458    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
658459    +
658460    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
658461    +
658462    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
658463    +
658464    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
658465    +
658466    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
658467    +
658468    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
658469    +
658470    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
658471    +
658472    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
658473    +
658474    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
658475    +
658476    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
658477    +
658478    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
658479    +
658480    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
658481    +
658482    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
658483    +
658484    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
658485    +
658486    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
658487    +
658488    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
658489    +
658490    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
658491    +
658492    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
658493    +
658494    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
658495    +
658496    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
658497    +
658498    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
658499    +
658500    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
658501    +
658502    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
658503    +
658504    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
658505    +
658506    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
658507    +
658508    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
658509    +
658510    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
658511    +
658512    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
658513    +
658514    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
658515    +
658516    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
658517    +
658518    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
658519    +
658520    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
658521    +
658522    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
658523    +
658524    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
658525    +
658526    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
658527    +
658528    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
658529    +
658530    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
658531    +
658532    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
658533    +
658534    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
658535    +
658536    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
658537    +
658538    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
658539    +
658540    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
658541    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
658542    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
658543    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
658544    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
658545    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
658546    +end;
MPRINT(EM_DIAGRAM):   end;
658547    +else do;
MPRINT(EM_DIAGRAM):   else do;
658548    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
658549    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
658550    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
658551    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
658552    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
658553    +   end;
MPRINT(EM_DIAGRAM):   end;
658554    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
658555    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
658556    +   end;
MPRINT(EM_DIAGRAM):   end;
658557    +   else do;
MPRINT(EM_DIAGRAM):   else do;
658558    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
658559    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
658560    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
658561    +   end;
MPRINT(EM_DIAGRAM):   end;
658562    +end;
MPRINT(EM_DIAGRAM):   end;
658563    +
658564    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
658565    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
658566    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
658567    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
658568    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
658569    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
658570    +end;
MPRINT(EM_DIAGRAM):   end;
658571    +else do;
MPRINT(EM_DIAGRAM):   else do;
658572    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
658573    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
658574    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
658575    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
658576    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
658577    +   end;
MPRINT(EM_DIAGRAM):   end;
658578    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
658579    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
658580    +   end;
MPRINT(EM_DIAGRAM):   end;
658581    +   else do;
MPRINT(EM_DIAGRAM):   else do;
658582    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
658583    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
658584    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
658585    +   end;
MPRINT(EM_DIAGRAM):   end;
658586    +end;
MPRINT(EM_DIAGRAM):   end;
658587    +
658588    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
658589    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
658590    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
658591    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
658592    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
658593    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
658594    +end;
MPRINT(EM_DIAGRAM):   end;
658595    +else do;
MPRINT(EM_DIAGRAM):   else do;
658596    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
658597    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
658598    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
658599    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
658600    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
658601    +   end;
MPRINT(EM_DIAGRAM):   end;
658602    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
658603    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
658604    +   end;
MPRINT(EM_DIAGRAM):   end;
658605    +   else do;
MPRINT(EM_DIAGRAM):   else do;
658606    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
658607    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
658608    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
658609    +   end;
MPRINT(EM_DIAGRAM):   end;
658610    +end;
MPRINT(EM_DIAGRAM):   end;
658611    +
658612    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
658613    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
658614    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
658615    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
658616    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
658617    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
658618    +end;
MPRINT(EM_DIAGRAM):   end;
658619    +else do;
MPRINT(EM_DIAGRAM):   else do;
658620    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
658621    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
658622    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
658623    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
658624    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
658625    +   end;
MPRINT(EM_DIAGRAM):   end;
658626    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
658627    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
658628    +   end;
MPRINT(EM_DIAGRAM):   end;
658629    +   else do;
MPRINT(EM_DIAGRAM):   else do;
658630    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
658631    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
658632    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
658633    +   end;
MPRINT(EM_DIAGRAM):   end;
658634    +end;
MPRINT(EM_DIAGRAM):   end;
658635    +
658636    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
658637    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
658638    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
658639    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
658640    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
658641    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
658642    +end;
MPRINT(EM_DIAGRAM):   end;
658643    +else do;
MPRINT(EM_DIAGRAM):   else do;
658644    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
658645    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
658646    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
658647    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
658648    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
658649    +   end;
MPRINT(EM_DIAGRAM):   end;
658650    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
658651    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
658652    +   end;
MPRINT(EM_DIAGRAM):   end;
658653    +   else do;
MPRINT(EM_DIAGRAM):   else do;
658654    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
658655    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
658656    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
658657    +   end;
MPRINT(EM_DIAGRAM):   end;
658658    +end;
MPRINT(EM_DIAGRAM):   end;
658659    +
658660    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
658661    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
658662    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
658663    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
658664    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
658665    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
658666    +end;
MPRINT(EM_DIAGRAM):   end;
658667    +else do;
MPRINT(EM_DIAGRAM):   else do;
658668    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
658669    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
658670    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
658671    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
658672    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
658673    +   end;
MPRINT(EM_DIAGRAM):   end;
658674    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
658675    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
658676    +   end;
MPRINT(EM_DIAGRAM):   end;
658677    +   else do;
MPRINT(EM_DIAGRAM):   else do;
658678    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
658679    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
658680    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
658681    +   end;
MPRINT(EM_DIAGRAM):   end;
658682    +end;
MPRINT(EM_DIAGRAM):   end;
658683    +
658684    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
658685    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
658686    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
658687    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
658688    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
658689    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
658690    +end;
MPRINT(EM_DIAGRAM):   end;
658691    +else do;
MPRINT(EM_DIAGRAM):   else do;
658692    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
658693    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
658694    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
658695    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
658696    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
658697    +   end;
MPRINT(EM_DIAGRAM):   end;
658698    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
658699    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
658700    +   end;
MPRINT(EM_DIAGRAM):   end;
658701    +   else do;
MPRINT(EM_DIAGRAM):   else do;
658702    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
658703    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
658704    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
658705    +   end;
MPRINT(EM_DIAGRAM):   end;
658706    +end;
MPRINT(EM_DIAGRAM):   end;
658707    +
658708    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
658709    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
658710    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
658711    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
658712    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
658713    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
658714    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
658715    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
658716    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
658717    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
658718    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
658719    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
658720    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
658721    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
658722    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
658723    +end;
MPRINT(EM_DIAGRAM):   end;
658724    +else do;
MPRINT(EM_DIAGRAM):   else do;
658725    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
658726    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
658727    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
658728    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
658729    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
658730    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
658731    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
658732    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
658733    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
658734    +         end;
MPRINT(EM_DIAGRAM):   end;
658735    +         else do;
MPRINT(EM_DIAGRAM):   else do;
658736    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
658737    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
658738    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
658739    +            end;
MPRINT(EM_DIAGRAM):   end;
658740    +         end;
MPRINT(EM_DIAGRAM):   end;
658741    +      end;
MPRINT(EM_DIAGRAM):   end;
658742    +      else do;
MPRINT(EM_DIAGRAM):   else do;
658743    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
658744    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
658745    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
658746    +         end;
MPRINT(EM_DIAGRAM):   end;
658747    +      end;
MPRINT(EM_DIAGRAM):   end;
658748    +   end;
MPRINT(EM_DIAGRAM):   end;
658749    +   else do;
MPRINT(EM_DIAGRAM):   else do;
658750    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
658751    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
658752    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
658753    +      end;
MPRINT(EM_DIAGRAM):   end;
658754    +      else do;
MPRINT(EM_DIAGRAM):   else do;
658755    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
658756    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
658757    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
658758    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
658759    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
658760    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
658761    +         end;
MPRINT(EM_DIAGRAM):   end;
658762    +      end;
MPRINT(EM_DIAGRAM):   end;
658763    +   end;
MPRINT(EM_DIAGRAM):   end;
658764    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
658765    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
658766    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
658767    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
658768    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
658769    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
658770    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
658771    +   end;
MPRINT(EM_DIAGRAM):   end;
658772    +end;
MPRINT(EM_DIAGRAM):   end;
658773    +
658774    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
658775    +*** Checking missing input Interval
658776    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
658777    +
658778    +IF NMISS(
658779    +   AcceptedCmpTotal ,
658780    +   Kidhome ,
658781    +   Mnt ,
658782    +   MntFishProducts ,
658783    +   MntFruits ,
658784    +   MntGoldProds ,
658785    +   MntMeatProducts ,
658786    +   MntSweetProducts ,
658787    +   MntWines ,
658788    +   NumCatalogPurchases ,
658789    +   NumDealsPurchases ,
658790    +   NumDistPurchases ,
658791    +   NumStorePurchases ,
658792    +   NumWebPurchases ,
658793    +   NumWebVisitsMonth ,
658794    +   RFMstat ,
658795    +   Recency ,
658796    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Kidhome , Mnt , MntFishProducts , MntFruits 
, MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , 
NumDealsPurchases , NumDistPurchases , NumStorePurchases , NumWebPurchases , NumWebVisitsMonth 
, RFMstat , Recency , Teenhome ) THEN DO;
658797    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
658798    +
658799    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
658800    +END;
MPRINT(EM_DIAGRAM):   END;
658801    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
658802    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
658803    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
658804    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
658805    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
658806    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
658807    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
658808    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
658809    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
658810    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
658811    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
658812    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
658813    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
658814    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
658815    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
658816    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
658817    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
658818    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
658819    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
658820    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
658821    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
658822    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
658823    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
658824    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
658825    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
658826    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
658827    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
658828    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
658829    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
658830    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
658831    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
658832    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
658833    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
658834    +END;
MPRINT(EM_DIAGRAM):   END;
658835    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
658836    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
658837    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
658838    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
658839    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
658840    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
658841    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
658842    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
658843    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
658844    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
658845    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
658846    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
658847    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
658848    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
658849    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
658850    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
658851    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
658852    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
658853    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
658854    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
658855    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
658856    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
658857    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
658858    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
658859    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
658860    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
658861    +   ELSE S_NumCatalogPurchases
658862    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
658863    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
658864    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
658865    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
658866    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
658867    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
658868    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
658869    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
658870    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
658871    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
658872    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
658873    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
658874    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
658875    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
658876    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
658877    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
658878    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
658879    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
658880    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
658881    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
658882    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
658883    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
658884    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
658885    +END;
MPRINT(EM_DIAGRAM):   END;
658886    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
658887    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
658888    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
658889    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
658890    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
658891    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
658892    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
658893    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
658894    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
658895    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
658896    +   H11  =     -0.8246180954871 * S_AcceptedCmpTotal  +    -0.26046792683156 *
658897    +        S_Kidhome  +    -0.20961567748735 * S_Mnt  +     0.26654542653658 *
658898    +        S_MntFishProducts  +    -0.30951775122613 * S_MntFruits
658899    +          +     0.09051491444093 * S_MntGoldProds  +    -1.64328058678717 *
658900    +        S_MntMeatProducts  +    -0.19366895196568 * S_MntSweetProducts
658901    +          +     0.38603773876569 * S_MntWines  +    -0.25551176610235 *
658902    +        S_NumCatalogPurchases  +    -0.10625029852107 * S_NumDealsPurchases
658903    +          +     0.19912219980931 * S_NumDistPurchases
658904    +          +     0.18110016198301 * S_NumStorePurchases
658905    +          +     0.84844988279844 * S_NumWebPurchases
658906    +          +    -0.18450776402283 * S_NumWebVisitsMonth
658907    +          +    -0.50884714303231 * S_RFMstat  +     0.19244941768129 *
658908    +        S_Recency  +    -0.18130850769076 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.8246180954871 * S_AcceptedCmpTotal + -0.26046792683156 * 
S_Kidhome + -0.20961567748735 * S_Mnt + 0.26654542653658 * S_MntFishProducts + 
-0.30951775122613 * S_MntFruits + 0.09051491444093 * S_MntGoldProds + -1.64328058678717 * 
S_MntMeatProducts + -0.19366895196568 * S_MntSweetProducts + 0.38603773876569 * S_MntWines + 
-0.25551176610235 * S_NumCatalogPurchases + -0.10625029852107 * S_NumDealsPurchases + 
0.19912219980931 * S_NumDistPurchases + 0.18110016198301 * S_NumStorePurchases + 
0.84844988279844 * S_NumWebPurchases + -0.18450776402283 * S_NumWebVisitsMonth + 
-0.50884714303231 * S_RFMstat + 0.19244941768129 * S_Recency + -0.18130850769076 * S_Teenhome ;
658909    +   H12  =     0.59683104990369 * S_AcceptedCmpTotal  +     0.36552928900705 *
658910    +        S_Kidhome  +      0.5173309469318 * S_Mnt  +    -0.43538154644347 *
658911    +        S_MntFishProducts  +    -0.21779050605401 * S_MntFruits
658912    +          +     0.19689161190877 * S_MntGoldProds  +      1.9153507069603 *
658913    +        S_MntMeatProducts  +     0.21257962213904 * S_MntSweetProducts
658914    +          +    -0.49835209765306 * S_MntWines  +     1.47489768672818 *
658915    +        S_NumCatalogPurchases  +     0.68023375677638 * S_NumDealsPurchases
658916    +          +     0.28904827738676 * S_NumDistPurchases
658917    +          +    -0.77789592957647 * S_NumStorePurchases
658918    +          +    -0.72822660183607 * S_NumWebPurchases
658919    +          +     0.38372224856027 * S_NumWebVisitsMonth
658920    +          +       0.255547398028 * S_RFMstat  +    -0.45525472850351 *
658921    +        S_Recency  +     0.10036435252662 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.59683104990369 * S_AcceptedCmpTotal + 0.36552928900705 * 
S_Kidhome + 0.5173309469318 * S_Mnt + -0.43538154644347 * S_MntFishProducts + 
-0.21779050605401 * S_MntFruits + 0.19689161190877 * S_MntGoldProds + 1.9153507069603 * 
S_MntMeatProducts + 0.21257962213904 * S_MntSweetProducts + -0.49835209765306 * S_MntWines + 
1.47489768672818 * S_NumCatalogPurchases + 0.68023375677638 * S_NumDealsPurchases + 
0.28904827738676 * S_NumDistPurchases + -0.77789592957647 * S_NumStorePurchases + 
-0.72822660183607 * S_NumWebPurchases + 0.38372224856027 * S_NumWebVisitsMonth + 
0.255547398028 * S_RFMstat + -0.45525472850351 * S_Recency + 0.10036435252662 * S_Teenhome ;
658922    +   H13  =     -0.5325626665587 * S_AcceptedCmpTotal  +     0.71160037572862 *
658923    +        S_Kidhome  +    -0.00359855229002 * S_Mnt  +     0.19705637237968 *
658924    +        S_MntFishProducts  +     0.09889116807812 * S_MntFruits
658925    +          +     0.12320565911743 * S_MntGoldProds  +    -0.61569836083387 *
658926    +        S_MntMeatProducts  +      0.1217025461924 * S_MntSweetProducts
658927    +          +     0.46869304908218 * S_MntWines  +    -0.47274920452333 *
658928    +        S_NumCatalogPurchases  +     -0.4082953904163 * S_NumDealsPurchases
658929    +          +     0.19800897399715 * S_NumDistPurchases
658930    +          +     0.59071719241145 * S_NumStorePurchases
658931    +          +      0.3381501904539 * S_NumWebPurchases
658932    +          +    -1.28883338112011 * S_NumWebVisitsMonth
658933    +          +     0.00400055495022 * S_RFMstat  +     1.08206529730608 *
658934    +        S_Recency  +     0.35657275245743 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.5325626665587 * S_AcceptedCmpTotal + 0.71160037572862 * 
S_Kidhome + -0.00359855229002 * S_Mnt + 0.19705637237968 * S_MntFishProducts + 
0.09889116807812 * S_MntFruits + 0.12320565911743 * S_MntGoldProds + -0.61569836083387 * 
S_MntMeatProducts + 0.1217025461924 * S_MntSweetProducts + 0.46869304908218 * S_MntWines + 
-0.47274920452333 * S_NumCatalogPurchases + -0.4082953904163 * S_NumDealsPurchases + 
0.19800897399715 * S_NumDistPurchases + 0.59071719241145 * S_NumStorePurchases + 
0.3381501904539 * S_NumWebPurchases + -1.28883338112011 * S_NumWebVisitsMonth + 
0.00400055495022 * S_RFMstat + 1.08206529730608 * S_Recency + 0.35657275245743 * S_Teenhome ;
658935    +   H14  =    -0.33036484145041 * S_AcceptedCmpTotal  +     0.10011415505573 *
658936    +        S_Kidhome  +    -0.00759070944812 * S_Mnt  +     0.05305726956194 *
658937    +        S_MntFishProducts  +     0.08083584431458 * S_MntFruits
658938    +          +    -0.08731108181089 * S_MntGoldProds  +    -0.64750431537028 *
658939    +        S_MntMeatProducts  +     0.12864735236133 * S_MntSweetProducts
658940    +          +     0.61392673917624 * S_MntWines  +    -0.64142881303629 *
658941    +        S_NumCatalogPurchases  +    -0.05548488425681 * S_NumDealsPurchases
658942    +          +    -0.14288173902466 * S_NumDistPurchases
658943    +          +     0.19601348567287 * S_NumStorePurchases
658944    +          +    -0.08044033043411 * S_NumWebPurchases
658945    +          +    -0.39713255047568 * S_NumWebVisitsMonth
658946    +          +    -0.04913287368072 * S_RFMstat  +     1.19829042792592 *
658947    +        S_Recency  +     0.43457954748035 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.33036484145041 * S_AcceptedCmpTotal + 0.10011415505573 * 
S_Kidhome + -0.00759070944812 * S_Mnt + 0.05305726956194 * S_MntFishProducts + 
0.08083584431458 * S_MntFruits + -0.08731108181089 * S_MntGoldProds + -0.64750431537028 * 
S_MntMeatProducts + 0.12864735236133 * S_MntSweetProducts + 0.61392673917624 * S_MntWines + 
-0.64142881303629 * S_NumCatalogPurchases + -0.05548488425681 * S_NumDealsPurchases + 
-0.14288173902466 * S_NumDistPurchases + 0.19601348567287 * S_NumStorePurchases + 
-0.08044033043411 * S_NumWebPurchases + -0.39713255047568 * S_NumWebVisitsMonth + 
-0.04913287368072 * S_RFMstat + 1.19829042792592 * S_Recency + 0.43457954748035 * S_Teenhome ;
658948    +   H11  = H11  +     0.00533685725345 * AcceptedCmp10
658949    +          +      0.0179370757261 * AcceptedCmp20  +    -0.41410060470313 *
658950    +        AcceptedCmp30  +     0.07645376869498 * AcceptedCmp40
658951    +          +      0.5492727191786 * AcceptedCmp50  +    -0.05028898116052 *
658952    +        Complain0  +    -0.17001742563016 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.00533685725345 * AcceptedCmp10 + 0.0179370757261 * 
AcceptedCmp20 + -0.41410060470313 * AcceptedCmp30 + 0.07645376869498 * AcceptedCmp40 + 
0.5492727191786 * AcceptedCmp50 + -0.05028898116052 * Complain0 + -0.17001742563016 * 
HigherEducationBinary0 ;
658953    +   H12  = H12  +    -0.05469008468492 * AcceptedCmp10
658954    +          +     0.21812430064959 * AcceptedCmp20  +     0.26338110557539 *
658955    +        AcceptedCmp30  +     0.33060548335742 * AcceptedCmp40
658956    +          +    -0.36020558841261 * AcceptedCmp50  +    -0.15370297603958 *
658957    +        Complain0  +    -0.30675348901275 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.05469008468492 * AcceptedCmp10 + 0.21812430064959 * 
AcceptedCmp20 + 0.26338110557539 * AcceptedCmp30 + 0.33060548335742 * AcceptedCmp40 + 
-0.36020558841261 * AcceptedCmp50 + -0.15370297603958 * Complain0 + -0.30675348901275 * 
HigherEducationBinary0 ;
658958    +   H13  = H13  +     0.08685748229764 * AcceptedCmp10
658959    +          +     0.07844617220165 * AcceptedCmp20  +     0.31067826076463 *
658960    +        AcceptedCmp30  +     0.04677289598333 * AcceptedCmp40
658961    +          +    -0.02262539182663 * AcceptedCmp50  +    -0.09187679949493 *
658962    +        Complain0  +    -0.01445092200886 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.08685748229764 * AcceptedCmp10 + 0.07844617220165 * 
AcceptedCmp20 + 0.31067826076463 * AcceptedCmp30 + 0.04677289598333 * AcceptedCmp40 + 
-0.02262539182663 * AcceptedCmp50 + -0.09187679949493 * Complain0 + -0.01445092200886 * 
HigherEducationBinary0 ;
658963    +   H14  = H14  +     0.23256857638539 * AcceptedCmp10
658964    +          +     0.49380464365655 * AcceptedCmp20  +      0.1564578964027 *
658965    +        AcceptedCmp30  +     0.27321024493692 * AcceptedCmp40
658966    +          +     0.52468244186776 * AcceptedCmp50  +    -0.00211673076991 *
658967    +        Complain0  +     0.05471438087898 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.23256857638539 * AcceptedCmp10 + 0.49380464365655 * 
AcceptedCmp20 + 0.1564578964027 * AcceptedCmp30 + 0.27321024493692 * AcceptedCmp40 + 
0.52468244186776 * AcceptedCmp50 + -0.00211673076991 * Complain0 + 0.05471438087898 * 
HigherEducationBinary0 ;
658968    +   H11  = H11  +    -0.04076816270663 * Marital_StatusDivorced
658969    +          +    -0.67847600465626 * Marital_StatusMarried
658970    +          +     0.54591305323233 * Marital_StatusSingle
658971    +          +    -0.32687043798373 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.04076816270663 * Marital_StatusDivorced + 
-0.67847600465626 * Marital_StatusMarried + 0.54591305323233 * Marital_StatusSingle + 
-0.32687043798373 * Marital_StatusTogether ;
658972    +   H12  = H12  +    -0.12115659474027 * Marital_StatusDivorced
658973    +          +     0.46392772017888 * Marital_StatusMarried
658974    +          +    -0.17314180037873 * Marital_StatusSingle
658975    +          +     0.53644907440751 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.12115659474027 * Marital_StatusDivorced + 
0.46392772017888 * Marital_StatusMarried + -0.17314180037873 * Marital_StatusSingle + 
0.53644907440751 * Marital_StatusTogether ;
658976    +   H13  = H13  +    -0.54658256529903 * Marital_StatusDivorced
658977    +          +     0.30725483889925 * Marital_StatusMarried
658978    +          +    -0.68483370266906 * Marital_StatusSingle
658979    +          +     0.27621335641244 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.54658256529903 * Marital_StatusDivorced + 
0.30725483889925 * Marital_StatusMarried + -0.68483370266906 * Marital_StatusSingle + 
0.27621335641244 * Marital_StatusTogether ;
658980    +   H14  = H14  +    -0.38188288053916 * Marital_StatusDivorced
658981    +          +     1.16505115927327 * Marital_StatusMarried
658982    +          +     -0.8294279027913 * Marital_StatusSingle
658983    +          +     1.27240761581762 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.38188288053916 * Marital_StatusDivorced + 
1.16505115927327 * Marital_StatusMarried + -0.8294279027913 * Marital_StatusSingle + 
1.27240761581762 * Marital_StatusTogether ;
658984    +   H11  =     -1.1404178523108 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.1404178523108 + H11 ;
658985    +   H12  =    -0.13870893584871 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.13870893584871 + H12 ;
658986    +   H13  =       0.548122343891 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.548122343891 + H13 ;
658987    +   H14  =     1.07479952425856 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.07479952425856 + H14 ;
658988    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
658989    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
658990    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
658991    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
658992    +END;
MPRINT(EM_DIAGRAM):   END;
658993    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
658994    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
658995    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
658996    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
658997    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
658998    +END;
MPRINT(EM_DIAGRAM):   END;
658999    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
659000    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
659001    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
659002    +
659003    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
659004    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
659005    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
659006    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
659007    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
659008    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
659009    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
659010    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
659011    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
659012    +end;
MPRINT(EM_DIAGRAM):   end;
659013    +else do;
MPRINT(EM_DIAGRAM):   else do;
659014    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
659015    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
659016    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
659017    +   end;
MPRINT(EM_DIAGRAM):   end;
659018    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
659019    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
659020    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
659021    +   end;
MPRINT(EM_DIAGRAM):   end;
659022    +   else do;
MPRINT(EM_DIAGRAM):   else do;
659023    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
659024    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
659025    +   end;
MPRINT(EM_DIAGRAM):   end;
659026    +end;
MPRINT(EM_DIAGRAM):   end;
659027    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
659028    +   P_DepVar1  =    -2.05486530281327 * H11  +     3.33946880396656 * H12
659029    +          +      -3.559477956484 * H13  +    -4.19177056173878 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.05486530281327 * H11 + 3.33946880396656 * H12 + 
-3.559477956484 * H13 + -4.19177056173878 * H14 ;
659030    +   P_DepVar1  =     -2.0040107893081 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.0040107893081 + P_DepVar1 ;
659031    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
659032    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
659033    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
659034    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
659035    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
659036    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
659037    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
659038    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
659039    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
659040    +END;
MPRINT(EM_DIAGRAM):   END;
659041    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
659042    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
659043    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
659044    +END;
MPRINT(EM_DIAGRAM):   END;
659045    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
659046    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
659047    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
659048    +END;
MPRINT(EM_DIAGRAM):   END;
659049    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
659050    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
659051    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
659052    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
659053    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
659054    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
659055    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
659056    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
659057    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
659058    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
659059    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
659060    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
659061    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
659062    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
659063    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
659064    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
659065    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
659066    +END;
MPRINT(EM_DIAGRAM):   END;
659067    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
659068    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
659069    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
659070    +drop
659071    +H11
659072    +H12
659073    +H13
659074    +H14
659075    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
659076    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
659077    +* Renaming variables for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural4;
659078    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
659079    +* Renaming Posterior variables for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural4;
659080    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
659081    +drop Neural4_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural4_P_DepVar1;
659082    +Neural4_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural4_P_DepVar1 = P_DepVar1;
659083    +drop Neural4_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural4_P_DepVar0;
659084    +Neural4_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural4_P_DepVar0 = P_DepVar0;
659085    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
659086    +* Renaming _WARN_ variable for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural4;
659087    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
659088    +length Neural4_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural4_WARN_ $4;
659089    +drop Neural4_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural4_WARN_;
659090    +Neural4_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural4_WARN_ = _WARN_;
659091    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
659092    +* Ensmbl: Scoring Code of model 4 of 9;
MPRINT(EM_DIAGRAM):   * Ensmbl: Scoring Code of model 4 of 9;
659093    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
659094    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
659095    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
659096    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
659097    +* NODE: Neural;
MPRINT(EM_DIAGRAM):   * NODE: Neural;
659098    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
659099    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
659100    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
659101    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
659102    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
659103    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
659104    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
659105    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
659106    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
659107    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
659108    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
659109    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
659110    +LENGTH _WARN_ $4
659111    +      F_DepVar  $ 12
659112    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
659113    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
659114    +
659115    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
659116    +
659117    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
659118    +
659119    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
659120    +
659121    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
659122    +
659123    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
659124    +
659125    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
659126    +
659127    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
659128    +
659129    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
659130    +
659131    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
659132    +
659133    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
659134    +
659135    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
659136    +
659137    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
659138    +
659139    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
659140    +
659141    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
659142    +
659143    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
659144    +
659145    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
659146    +
659147    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
659148    +
659149    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
659150    +
659151    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
659152    +
659153    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
659154    +
659155    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
659156    +
659157    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
659158    +
659159    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
659160    +
659161    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
659162    +
659163    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
659164    +
659165    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
659166    +
659167    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
659168    +
659169    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
659170    +
659171    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
659172    +
659173    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
659174    +
659175    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
659176    +
659177    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
659178    +
659179    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
659180    +
659181    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
659182    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
659183    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
659184    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
659185    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
659186    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
659187    +end;
MPRINT(EM_DIAGRAM):   end;
659188    +else do;
MPRINT(EM_DIAGRAM):   else do;
659189    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
659190    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
659191    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
659192    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
659193    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
659194    +   end;
MPRINT(EM_DIAGRAM):   end;
659195    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
659196    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
659197    +   end;
MPRINT(EM_DIAGRAM):   end;
659198    +   else do;
MPRINT(EM_DIAGRAM):   else do;
659199    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
659200    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
659201    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
659202    +   end;
MPRINT(EM_DIAGRAM):   end;
659203    +end;
MPRINT(EM_DIAGRAM):   end;
659204    +
659205    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
659206    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
659207    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
659208    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
659209    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
659210    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
659211    +end;
MPRINT(EM_DIAGRAM):   end;
659212    +else do;
MPRINT(EM_DIAGRAM):   else do;
659213    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
659214    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
659215    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
659216    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
659217    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
659218    +   end;
MPRINT(EM_DIAGRAM):   end;
659219    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
659220    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
659221    +   end;
MPRINT(EM_DIAGRAM):   end;
659222    +   else do;
MPRINT(EM_DIAGRAM):   else do;
659223    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
659224    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
659225    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
659226    +   end;
MPRINT(EM_DIAGRAM):   end;
659227    +end;
MPRINT(EM_DIAGRAM):   end;
659228    +
659229    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
659230    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
659231    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
659232    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
659233    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
659234    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
659235    +end;
MPRINT(EM_DIAGRAM):   end;
659236    +else do;
MPRINT(EM_DIAGRAM):   else do;
659237    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
659238    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
659239    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
659240    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
659241    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
659242    +   end;
MPRINT(EM_DIAGRAM):   end;
659243    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
659244    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
659245    +   end;
MPRINT(EM_DIAGRAM):   end;
659246    +   else do;
MPRINT(EM_DIAGRAM):   else do;
659247    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
659248    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
659249    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
659250    +   end;
MPRINT(EM_DIAGRAM):   end;
659251    +end;
MPRINT(EM_DIAGRAM):   end;
659252    +
659253    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
659254    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
659255    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
659256    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
659257    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
659258    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
659259    +end;
MPRINT(EM_DIAGRAM):   end;
659260    +else do;
MPRINT(EM_DIAGRAM):   else do;
659261    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
659262    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
659263    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
659264    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
659265    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
659266    +   end;
MPRINT(EM_DIAGRAM):   end;
659267    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
659268    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
659269    +   end;
MPRINT(EM_DIAGRAM):   end;
659270    +   else do;
MPRINT(EM_DIAGRAM):   else do;
659271    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
659272    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
659273    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
659274    +   end;
MPRINT(EM_DIAGRAM):   end;
659275    +end;
MPRINT(EM_DIAGRAM):   end;
659276    +
659277    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
659278    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
659279    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
659280    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
659281    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
659282    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
659283    +end;
MPRINT(EM_DIAGRAM):   end;
659284    +else do;
MPRINT(EM_DIAGRAM):   else do;
659285    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
659286    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
659287    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
659288    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
659289    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
659290    +   end;
MPRINT(EM_DIAGRAM):   end;
659291    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
659292    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
659293    +   end;
MPRINT(EM_DIAGRAM):   end;
659294    +   else do;
MPRINT(EM_DIAGRAM):   else do;
659295    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
659296    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
659297    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
659298    +   end;
MPRINT(EM_DIAGRAM):   end;
659299    +end;
MPRINT(EM_DIAGRAM):   end;
659300    +
659301    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
659302    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
659303    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
659304    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
659305    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
659306    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
659307    +end;
MPRINT(EM_DIAGRAM):   end;
659308    +else do;
MPRINT(EM_DIAGRAM):   else do;
659309    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
659310    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
659311    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
659312    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
659313    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
659314    +   end;
MPRINT(EM_DIAGRAM):   end;
659315    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
659316    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
659317    +   end;
MPRINT(EM_DIAGRAM):   end;
659318    +   else do;
MPRINT(EM_DIAGRAM):   else do;
659319    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
659320    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
659321    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
659322    +   end;
MPRINT(EM_DIAGRAM):   end;
659323    +end;
MPRINT(EM_DIAGRAM):   end;
659324    +
659325    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
659326    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
659327    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
659328    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
659329    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
659330    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
659331    +end;
MPRINT(EM_DIAGRAM):   end;
659332    +else do;
MPRINT(EM_DIAGRAM):   else do;
659333    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
659334    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
659335    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
659336    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
659337    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
659338    +   end;
MPRINT(EM_DIAGRAM):   end;
659339    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
659340    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
659341    +   end;
MPRINT(EM_DIAGRAM):   end;
659342    +   else do;
MPRINT(EM_DIAGRAM):   else do;
659343    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
659344    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
659345    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
659346    +   end;
MPRINT(EM_DIAGRAM):   end;
659347    +end;
MPRINT(EM_DIAGRAM):   end;
659348    +
659349    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
659350    +*** Checking missing input Interval
659351    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
659352    +
659353    +IF NMISS(
659354    +   AcceptedCmpTotal ,
659355    +   Kidhome ,
659356    +   Mnt ,
659357    +   MntFishProducts ,
659358    +   MntFruits ,
659359    +   MntGoldProds ,
659360    +   MntMeatProducts ,
659361    +   MntSweetProducts ,
659362    +   MntWines ,
659363    +   NumCatalogPurchases ,
659364    +   NumDealsPurchases ,
659365    +   NumDistPurchases ,
659366    +   NumStorePurchases ,
659367    +   NumWebPurchases ,
659368    +   NumWebVisitsMonth ,
659369    +   RFMstat ,
659370    +   Recency ,
659371    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Kidhome , Mnt , MntFishProducts , MntFruits 
, MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , 
NumDealsPurchases , NumDistPurchases , NumStorePurchases , NumWebPurchases , NumWebVisitsMonth 
, RFMstat , Recency , Teenhome ) THEN DO;
659372    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
659373    +
659374    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
659375    +END;
MPRINT(EM_DIAGRAM):   END;
659376    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
659377    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
659378    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
659379    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
659380    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
659381    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
659382    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
659383    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
659384    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
659385    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
659386    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
659387    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
659388    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
659389    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
659390    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
659391    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
659392    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
659393    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
659394    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
659395    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
659396    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
659397    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
659398    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
659399    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
659400    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
659401    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
659402    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
659403    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
659404    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
659405    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
659406    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
659407    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
659408    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
659409    +END;
MPRINT(EM_DIAGRAM):   END;
659410    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
659411    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
659412    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
659413    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
659414    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
659415    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
659416    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
659417    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
659418    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
659419    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
659420    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
659421    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
659422    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
659423    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
659424    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
659425    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
659426    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
659427    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
659428    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
659429    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
659430    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
659431    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
659432    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
659433    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
659434    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
659435    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
659436    +   ELSE S_NumCatalogPurchases
659437    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
659438    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
659439    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
659440    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
659441    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
659442    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
659443    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
659444    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
659445    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
659446    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
659447    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
659448    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
659449    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
659450    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
659451    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
659452    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
659453    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
659454    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
659455    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
659456    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
659457    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
659458    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
659459    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
659460    +END;
MPRINT(EM_DIAGRAM):   END;
659461    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
659462    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
659463    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
659464    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
659465    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
659466    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
659467    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
659468    +   H11  =     0.05683042207498 * S_AcceptedCmpTotal  +     0.01103749863785 *
659469    +        S_Kidhome  +      0.0668028452714 * S_Mnt  +     0.02967520347091 *
659470    +        S_MntFishProducts  +     0.01858045039368 * S_MntFruits
659471    +          +    -0.02635078317954 * S_MntGoldProds  +    -0.25780271539024 *
659472    +        S_MntMeatProducts  +     0.01453133061011 * S_MntSweetProducts
659473    +          +     0.07702251699374 * S_MntWines  +    -0.28646346184321 *
659474    +        S_NumCatalogPurchases  +    -0.12552585628838 * S_NumDealsPurchases
659475    +          +     0.09149172977308 * S_NumDistPurchases
659476    +          +      0.1286379510771 * S_NumStorePurchases
659477    +          +     0.04601789983748 * S_NumWebPurchases
659478    +          +    -0.21551517718316 * S_NumWebVisitsMonth
659479    +          +    -0.05297005877428 * S_RFMstat  +     0.30037503125852 *
659480    +        S_Recency  +     0.04585774296716 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.05683042207498 * S_AcceptedCmpTotal + 0.01103749863785 * 
S_Kidhome + 0.0668028452714 * S_Mnt + 0.02967520347091 * S_MntFishProducts + 0.01858045039368 
* S_MntFruits + -0.02635078317954 * S_MntGoldProds + -0.25780271539024 * S_MntMeatProducts + 
0.01453133061011 * S_MntSweetProducts + 0.07702251699374 * S_MntWines + -0.28646346184321 * 
S_NumCatalogPurchases + -0.12552585628838 * S_NumDealsPurchases + 0.09149172977308 * 
S_NumDistPurchases + 0.1286379510771 * S_NumStorePurchases + 0.04601789983748 * 
S_NumWebPurchases + -0.21551517718316 * S_NumWebVisitsMonth + -0.05297005877428 * S_RFMstat + 
0.30037503125852 * S_Recency + 0.04585774296716 * S_Teenhome ;
659481    +   H11  = H11  +     0.19703919058259 * AcceptedCmp10
659482    +          +     0.17114050759001 * AcceptedCmp20  +     0.20648038431009 *
659483    +        AcceptedCmp30  +     0.19476699920944 * AcceptedCmp40
659484    +          +     0.26437935662252 * AcceptedCmp50  +    -0.03285342631116 *
659485    +        Complain0  +     0.02557620526354 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.19703919058259 * AcceptedCmp10 + 0.17114050759001 * 
AcceptedCmp20 + 0.20648038431009 * AcceptedCmp30 + 0.19476699920944 * AcceptedCmp40 + 
0.26437935662252 * AcceptedCmp50 + -0.03285342631116 * Complain0 + 0.02557620526354 * 
HigherEducationBinary0 ;
659486    +   H11  =    -0.45597910153862 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.45597910153862 + H11 ;
659487    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
659488    +END;
MPRINT(EM_DIAGRAM):   END;
659489    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
659490    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
659491    +END;
MPRINT(EM_DIAGRAM):   END;
659492    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
659493    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
659494    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
659495    +
659496    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
659497    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
659498    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
659499    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
659500    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
659501    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
659502    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
659503    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
659504    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
659505    +end;
MPRINT(EM_DIAGRAM):   end;
659506    +else do;
MPRINT(EM_DIAGRAM):   else do;
659507    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
659508    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
659509    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
659510    +   end;
MPRINT(EM_DIAGRAM):   end;
659511    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
659512    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
659513    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
659514    +   end;
MPRINT(EM_DIAGRAM):   end;
659515    +   else do;
MPRINT(EM_DIAGRAM):   else do;
659516    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
659517    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
659518    +   end;
MPRINT(EM_DIAGRAM):   end;
659519    +end;
MPRINT(EM_DIAGRAM):   end;
659520    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
659521    +   P_DepVar1  =    -8.59083580950057 * H11 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -8.59083580950057 * H11 ;
659522    +   P_DepVar1  =    -1.22832072210597 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.22832072210597 + P_DepVar1 ;
659523    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
659524    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
659525    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
659526    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
659527    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
659528    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
659529    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
659530    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
659531    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
659532    +END;
MPRINT(EM_DIAGRAM):   END;
659533    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
659534    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
659535    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
659536    +END;
MPRINT(EM_DIAGRAM):   END;
659537    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
659538    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
659539    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
659540    +END;
MPRINT(EM_DIAGRAM):   END;
659541    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
659542    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
659543    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
659544    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
659545    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
659546    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
659547    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
659548    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
659549    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
659550    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
659551    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
659552    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
659553    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
659554    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
659555    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
659556    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
659557    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
659558    +END;
MPRINT(EM_DIAGRAM):   END;
659559    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
659560    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
659561    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
659562    +drop
659563    +H11
659564    +;
MPRINT(EM_DIAGRAM):   drop H11 ;
659565    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
659566    +* Renaming variables for Neural;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural;
659567    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
659568    +* Renaming Posterior variables for Neural;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural;
659569    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
659570    +drop Neural_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural_P_DepVar1;
659571    +Neural_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural_P_DepVar1 = P_DepVar1;
659572    +drop Neural_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural_P_DepVar0;
659573    +Neural_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural_P_DepVar0 = P_DepVar0;
659574    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
659575    +* Renaming _WARN_ variable for Neural;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural;
659576    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
659577    +length Neural_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural_WARN_ $4;
659578    +drop Neural_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural_WARN_;
659579    +Neural_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural_WARN_ = _WARN_;
659580    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
659581    +* Ensmbl: Scoring Code of model 5 of 9;
MPRINT(EM_DIAGRAM):   * Ensmbl: Scoring Code of model 5 of 9;
659582    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
659583    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
659584    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
659585    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
659586    +* NODE: Neural2;
MPRINT(EM_DIAGRAM):   * NODE: Neural2;
659587    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
659588    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
659589    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
659590    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
659591    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
659592    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
659593    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
659594    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
659595    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
659596    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
659597    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
659598    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
659599    +LENGTH _WARN_ $4
659600    +      F_DepVar  $ 12
659601    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
659602    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
659603    +
659604    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
659605    +
659606    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
659607    +
659608    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
659609    +
659610    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
659611    +
659612    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
659613    +
659614    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
659615    +
659616    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
659617    +
659618    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
659619    +
659620    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
659621    +
659622    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
659623    +
659624    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
659625    +
659626    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
659627    +
659628    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
659629    +
659630    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
659631    +
659632    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
659633    +
659634    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
659635    +
659636    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
659637    +
659638    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
659639    +
659640    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
659641    +
659642    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
659643    +
659644    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
659645    +
659646    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
659647    +
659648    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
659649    +
659650    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
659651    +
659652    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
659653    +
659654    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
659655    +
659656    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
659657    +
659658    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
659659    +
659660    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
659661    +
659662    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
659663    +
659664    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
659665    +
659666    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
659667    +
659668    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
659669    +
659670    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
659671    +
659672    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
659673    +
659674    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
659675    +
659676    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
659677    +
659678    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
659679    +
659680    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
659681    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
659682    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
659683    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
659684    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
659685    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
659686    +end;
MPRINT(EM_DIAGRAM):   end;
659687    +else do;
MPRINT(EM_DIAGRAM):   else do;
659688    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
659689    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
659690    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
659691    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
659692    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
659693    +   end;
MPRINT(EM_DIAGRAM):   end;
659694    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
659695    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
659696    +   end;
MPRINT(EM_DIAGRAM):   end;
659697    +   else do;
MPRINT(EM_DIAGRAM):   else do;
659698    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
659699    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
659700    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
659701    +   end;
MPRINT(EM_DIAGRAM):   end;
659702    +end;
MPRINT(EM_DIAGRAM):   end;
659703    +
659704    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
659705    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
659706    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
659707    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
659708    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
659709    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
659710    +end;
MPRINT(EM_DIAGRAM):   end;
659711    +else do;
MPRINT(EM_DIAGRAM):   else do;
659712    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
659713    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
659714    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
659715    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
659716    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
659717    +   end;
MPRINT(EM_DIAGRAM):   end;
659718    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
659719    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
659720    +   end;
MPRINT(EM_DIAGRAM):   end;
659721    +   else do;
MPRINT(EM_DIAGRAM):   else do;
659722    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
659723    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
659724    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
659725    +   end;
MPRINT(EM_DIAGRAM):   end;
659726    +end;
MPRINT(EM_DIAGRAM):   end;
659727    +
659728    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
659729    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
659730    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
659731    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
659732    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
659733    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
659734    +end;
MPRINT(EM_DIAGRAM):   end;
659735    +else do;
MPRINT(EM_DIAGRAM):   else do;
659736    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
659737    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
659738    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
659739    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
659740    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
659741    +   end;
MPRINT(EM_DIAGRAM):   end;
659742    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
659743    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
659744    +   end;
MPRINT(EM_DIAGRAM):   end;
659745    +   else do;
MPRINT(EM_DIAGRAM):   else do;
659746    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
659747    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
659748    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
659749    +   end;
MPRINT(EM_DIAGRAM):   end;
659750    +end;
MPRINT(EM_DIAGRAM):   end;
659751    +
659752    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
659753    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
659754    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
659755    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
659756    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
659757    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
659758    +end;
MPRINT(EM_DIAGRAM):   end;
659759    +else do;
MPRINT(EM_DIAGRAM):   else do;
659760    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
659761    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
659762    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
659763    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
659764    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
659765    +   end;
MPRINT(EM_DIAGRAM):   end;
659766    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
659767    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
659768    +   end;
MPRINT(EM_DIAGRAM):   end;
659769    +   else do;
MPRINT(EM_DIAGRAM):   else do;
659770    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
659771    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
659772    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
659773    +   end;
MPRINT(EM_DIAGRAM):   end;
659774    +end;
MPRINT(EM_DIAGRAM):   end;
659775    +
659776    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
659777    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
659778    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
659779    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
659780    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
659781    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
659782    +end;
MPRINT(EM_DIAGRAM):   end;
659783    +else do;
MPRINT(EM_DIAGRAM):   else do;
659784    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
659785    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
659786    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
659787    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
659788    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
659789    +   end;
MPRINT(EM_DIAGRAM):   end;
659790    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
659791    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
659792    +   end;
MPRINT(EM_DIAGRAM):   end;
659793    +   else do;
MPRINT(EM_DIAGRAM):   else do;
659794    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
659795    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
659796    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
659797    +   end;
MPRINT(EM_DIAGRAM):   end;
659798    +end;
MPRINT(EM_DIAGRAM):   end;
659799    +
659800    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
659801    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
659802    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
659803    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
659804    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
659805    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
659806    +end;
MPRINT(EM_DIAGRAM):   end;
659807    +else do;
MPRINT(EM_DIAGRAM):   else do;
659808    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
659809    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
659810    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
659811    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
659812    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
659813    +   end;
MPRINT(EM_DIAGRAM):   end;
659814    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
659815    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
659816    +   end;
MPRINT(EM_DIAGRAM):   end;
659817    +   else do;
MPRINT(EM_DIAGRAM):   else do;
659818    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
659819    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
659820    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
659821    +   end;
MPRINT(EM_DIAGRAM):   end;
659822    +end;
MPRINT(EM_DIAGRAM):   end;
659823    +
659824    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
659825    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
659826    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
659827    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
659828    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
659829    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
659830    +end;
MPRINT(EM_DIAGRAM):   end;
659831    +else do;
MPRINT(EM_DIAGRAM):   else do;
659832    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
659833    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
659834    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
659835    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
659836    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
659837    +   end;
MPRINT(EM_DIAGRAM):   end;
659838    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
659839    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
659840    +   end;
MPRINT(EM_DIAGRAM):   end;
659841    +   else do;
MPRINT(EM_DIAGRAM):   else do;
659842    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
659843    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
659844    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
659845    +   end;
MPRINT(EM_DIAGRAM):   end;
659846    +end;
MPRINT(EM_DIAGRAM):   end;
659847    +
659848    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
659849    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
659850    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
659851    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
659852    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
659853    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
659854    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
659855    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
659856    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
659857    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
659858    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
659859    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
659860    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
659861    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
659862    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
659863    +end;
MPRINT(EM_DIAGRAM):   end;
659864    +else do;
MPRINT(EM_DIAGRAM):   else do;
659865    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
659866    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
659867    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
659868    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
659869    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
659870    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
659871    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
659872    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
659873    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
659874    +         end;
MPRINT(EM_DIAGRAM):   end;
659875    +         else do;
MPRINT(EM_DIAGRAM):   else do;
659876    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
659877    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
659878    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
659879    +            end;
MPRINT(EM_DIAGRAM):   end;
659880    +         end;
MPRINT(EM_DIAGRAM):   end;
659881    +      end;
MPRINT(EM_DIAGRAM):   end;
659882    +      else do;
MPRINT(EM_DIAGRAM):   else do;
659883    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
659884    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
659885    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
659886    +         end;
MPRINT(EM_DIAGRAM):   end;
659887    +      end;
MPRINT(EM_DIAGRAM):   end;
659888    +   end;
MPRINT(EM_DIAGRAM):   end;
659889    +   else do;
MPRINT(EM_DIAGRAM):   else do;
659890    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
659891    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
659892    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
659893    +      end;
MPRINT(EM_DIAGRAM):   end;
659894    +      else do;
MPRINT(EM_DIAGRAM):   else do;
659895    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
659896    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
659897    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
659898    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
659899    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
659900    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
659901    +         end;
MPRINT(EM_DIAGRAM):   end;
659902    +      end;
MPRINT(EM_DIAGRAM):   end;
659903    +   end;
MPRINT(EM_DIAGRAM):   end;
659904    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
659905    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
659906    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
659907    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
659908    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
659909    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
659910    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
659911    +   end;
MPRINT(EM_DIAGRAM):   end;
659912    +end;
MPRINT(EM_DIAGRAM):   end;
659913    +
659914    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
659915    +*** Checking missing input Interval
659916    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
659917    +
659918    +IF NMISS(
659919    +   AcceptedCmpTotal ,
659920    +   Kidhome ,
659921    +   Mnt ,
659922    +   MntFishProducts ,
659923    +   MntFruits ,
659924    +   MntGoldProds ,
659925    +   MntMeatProducts ,
659926    +   MntSweetProducts ,
659927    +   MntWines ,
659928    +   NumCatalogPurchases ,
659929    +   NumDealsPurchases ,
659930    +   NumDistPurchases ,
659931    +   NumStorePurchases ,
659932    +   NumWebPurchases ,
659933    +   NumWebVisitsMonth ,
659934    +   RFMstat ,
659935    +   Recency ,
659936    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Kidhome , Mnt , MntFishProducts , MntFruits 
, MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , 
NumDealsPurchases , NumDistPurchases , NumStorePurchases , NumWebPurchases , NumWebVisitsMonth 
, RFMstat , Recency , Teenhome ) THEN DO;
659937    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
659938    +
659939    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
659940    +END;
MPRINT(EM_DIAGRAM):   END;
659941    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
659942    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
659943    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
659944    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
659945    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
659946    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
659947    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
659948    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
659949    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
659950    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
659951    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
659952    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
659953    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
659954    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
659955    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
659956    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
659957    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
659958    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
659959    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
659960    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
659961    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
659962    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
659963    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
659964    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
659965    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
659966    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
659967    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
659968    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
659969    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
659970    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
659971    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
659972    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
659973    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
659974    +END;
MPRINT(EM_DIAGRAM):   END;
659975    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
659976    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
659977    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
659978    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
659979    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
659980    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
659981    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
659982    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
659983    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
659984    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
659985    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
659986    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
659987    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
659988    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
659989    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
659990    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
659991    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
659992    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
659993    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
659994    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
659995    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
659996    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
659997    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
659998    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
659999    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
660000    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
660001    +   ELSE S_NumCatalogPurchases
660002    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
660003    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
660004    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
660005    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
660006    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
660007    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
660008    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
660009    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
660010    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
660011    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
660012    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
660013    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
660014    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
660015    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
660016    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
660017    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
660018    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
660019    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
660020    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
660021    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
660022    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
660023    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
660024    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
660025    +END;
MPRINT(EM_DIAGRAM):   END;
660026    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
660027    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
660028    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
660029    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
660030    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
660031    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
660032    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
660033    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
660034    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
660035    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
660036    +   H11  =     1.01101276887315 * S_AcceptedCmpTotal  +     0.13088206386642 *
660037    +        S_Kidhome  +     0.44144124105344 * S_Mnt  +    -0.68904392437475 *
660038    +        S_MntFishProducts  +    -0.17121585659716 * S_MntFruits
660039    +          +     0.11335785908498 * S_MntGoldProds  +      2.7693787644231 *
660040    +        S_MntMeatProducts  +     0.05508921126989 * S_MntSweetProducts
660041    +          +    -0.84963149161721 * S_MntWines  +     0.93831643366323 *
660042    +        S_NumCatalogPurchases  +     0.61100213741284 * S_NumDealsPurchases
660043    +          +     0.02505564750154 * S_NumDistPurchases
660044    +          +    -0.68813734794561 * S_NumStorePurchases
660045    +          +    -0.70997870192497 * S_NumWebPurchases
660046    +          +     0.29587693128027 * S_NumWebVisitsMonth
660047    +          +     0.78508541462113 * S_RFMstat  +     -0.3308883600476 *
660048    +        S_Recency  +    -0.00325917604837 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 1.01101276887315 * S_AcceptedCmpTotal + 0.13088206386642 * 
S_Kidhome + 0.44144124105344 * S_Mnt + -0.68904392437475 * S_MntFishProducts + 
-0.17121585659716 * S_MntFruits + 0.11335785908498 * S_MntGoldProds + 2.7693787644231 * 
S_MntMeatProducts + 0.05508921126989 * S_MntSweetProducts + -0.84963149161721 * S_MntWines + 
0.93831643366323 * S_NumCatalogPurchases + 0.61100213741284 * S_NumDealsPurchases + 
0.02505564750154 * S_NumDistPurchases + -0.68813734794561 * S_NumStorePurchases + 
-0.70997870192497 * S_NumWebPurchases + 0.29587693128027 * S_NumWebVisitsMonth + 
0.78508541462113 * S_RFMstat + -0.3308883600476 * S_Recency + -0.00325917604837 * S_Teenhome ;
660049    +   H12  =    -0.52436299608191 * S_AcceptedCmpTotal  +     0.27198236309079 *
660050    +        S_Kidhome  +     0.16271772923493 * S_Mnt  +     0.09777129448709 *
660051    +        S_MntFishProducts  +     0.08286856142975 * S_MntFruits
660052    +          +     0.01382699665825 * S_MntGoldProds  +    -0.64717980145363 *
660053    +        S_MntMeatProducts  +     0.05864522802919 * S_MntSweetProducts
660054    +          +     0.48084041085358 * S_MntWines  +    -0.54710128323244 *
660055    +        S_NumCatalogPurchases  +    -0.13512538901701 * S_NumDealsPurchases
660056    +          +     0.06434299218856 * S_NumDistPurchases
660057    +          +     0.42712319617209 * S_NumStorePurchases
660058    +          +     0.31123207604233 * S_NumWebPurchases
660059    +          +    -1.01860201337102 * S_NumWebVisitsMonth
660060    +          +    -0.03004351543086 * S_RFMstat  +      1.1539132835032 *
660061    +        S_Recency  +     0.26483130659279 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.52436299608191 * S_AcceptedCmpTotal + 0.27198236309079 * 
S_Kidhome + 0.16271772923493 * S_Mnt + 0.09777129448709 * S_MntFishProducts + 0.08286856142975 
* S_MntFruits + 0.01382699665825 * S_MntGoldProds + -0.64717980145363 * S_MntMeatProducts + 
0.05864522802919 * S_MntSweetProducts + 0.48084041085358 * S_MntWines + -0.54710128323244 * 
S_NumCatalogPurchases + -0.13512538901701 * S_NumDealsPurchases + 0.06434299218856 * 
S_NumDistPurchases + 0.42712319617209 * S_NumStorePurchases + 0.31123207604233 * 
S_NumWebPurchases + -1.01860201337102 * S_NumWebVisitsMonth + -0.03004351543086 * S_RFMstat + 
1.1539132835032 * S_Recency + 0.26483130659279 * S_Teenhome ;
660062    +   H11  = H11  +    -0.30089946733563 * AcceptedCmp10
660063    +          +     0.33352940500449 * AcceptedCmp20  +     0.57640754092947 *
660064    +        AcceptedCmp30  +     0.43007791062186 * AcceptedCmp40
660065    +          +    -0.97559596081103 * AcceptedCmp50  +      -0.156153798165 *
660066    +        Complain0  +    -0.08163020130832 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.30089946733563 * AcceptedCmp10 + 0.33352940500449 * 
AcceptedCmp20 + 0.57640754092947 * AcceptedCmp30 + 0.43007791062186 * AcceptedCmp40 + 
-0.97559596081103 * AcceptedCmp50 + -0.156153798165 * Complain0 + -0.08163020130832 * 
HigherEducationBinary0 ;
660067    +   H12  = H12  +     0.08049893192691 * AcceptedCmp10
660068    +          +     0.08395178819383 * AcceptedCmp20  +     0.11982414653687 *
660069    +        AcceptedCmp30  +     0.13126623447029 * AcceptedCmp40
660070    +          +      0.3326649980497 * AcceptedCmp50  +    -0.03185471588077 *
660071    +        Complain0  +     0.08220343686165 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.08049893192691 * AcceptedCmp10 + 0.08395178819383 * 
AcceptedCmp20 + 0.11982414653687 * AcceptedCmp30 + 0.13126623447029 * AcceptedCmp40 + 
0.3326649980497 * AcceptedCmp50 + -0.03185471588077 * Complain0 + 0.08220343686165 * 
HigherEducationBinary0 ;
660072    +   H11  = H11  +    -0.24837156257202 * Marital_StatusDivorced
660073    +          +     0.31380389607446 * Marital_StatusMarried
660074    +          +    -0.11994840163803 * Marital_StatusSingle
660075    +          +     0.30069256789445 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.24837156257202 * Marital_StatusDivorced + 
0.31380389607446 * Marital_StatusMarried + -0.11994840163803 * Marital_StatusSingle + 
0.30069256789445 * Marital_StatusTogether ;
660076    +   H12  = H12  +    -0.41749658642963 * Marital_StatusDivorced
660077    +          +     0.72506125430191 * Marital_StatusMarried
660078    +          +    -0.54747054981285 * Marital_StatusSingle
660079    +          +     0.89421218316246 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.41749658642963 * Marital_StatusDivorced + 
0.72506125430191 * Marital_StatusMarried + -0.54747054981285 * Marital_StatusSingle + 
0.89421218316246 * Marital_StatusTogether ;
660080    +   H11  =     0.50192687520529 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.50192687520529 + H11 ;
660081    +   H12  =     0.17708947264117 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.17708947264117 + H12 ;
660082    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
660083    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
660084    +END;
MPRINT(EM_DIAGRAM):   END;
660085    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
660086    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
660087    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
660088    +END;
MPRINT(EM_DIAGRAM):   END;
660089    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
660090    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
660091    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
660092    +
660093    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
660094    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
660095    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
660096    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
660097    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
660098    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
660099    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
660100    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
660101    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
660102    +end;
MPRINT(EM_DIAGRAM):   end;
660103    +else do;
MPRINT(EM_DIAGRAM):   else do;
660104    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
660105    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
660106    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
660107    +   end;
MPRINT(EM_DIAGRAM):   end;
660108    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
660109    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
660110    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
660111    +   end;
MPRINT(EM_DIAGRAM):   end;
660112    +   else do;
MPRINT(EM_DIAGRAM):   else do;
660113    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
660114    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
660115    +   end;
MPRINT(EM_DIAGRAM):   end;
660116    +end;
MPRINT(EM_DIAGRAM):   end;
660117    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
660118    +   P_DepVar1  =     4.38180289637299 * H11  +    -4.42967128560878 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.38180289637299 * H11 + -4.42967128560878 * H12 ;
660119    +   P_DepVar1  =    -3.75681581527016 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.75681581527016 + P_DepVar1 ;
660120    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
660121    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
660122    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
660123    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
660124    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
660125    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
660126    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
660127    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
660128    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
660129    +END;
MPRINT(EM_DIAGRAM):   END;
660130    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
660131    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
660132    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
660133    +END;
MPRINT(EM_DIAGRAM):   END;
660134    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
660135    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
660136    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
660137    +END;
MPRINT(EM_DIAGRAM):   END;
660138    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
660139    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
660140    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
660141    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
660142    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
660143    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
660144    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
660145    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
660146    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
660147    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
660148    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
660149    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
660150    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
660151    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
660152    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
660153    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
660154    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
660155    +END;
MPRINT(EM_DIAGRAM):   END;
660156    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
660157    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
660158    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
660159    +drop
660160    +H11
660161    +H12
660162    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
660163    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
660164    +* Renaming variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural2;
660165    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
660166    +* Renaming Posterior variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural2;
660167    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
660168    +drop Neural2_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar1;
660169    +Neural2_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar1 = P_DepVar1;
660170    +drop Neural2_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar0;
660171    +Neural2_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar0 = P_DepVar0;
660172    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
660173    +* Renaming _WARN_ variable for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural2;
660174    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
660175    +length Neural2_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural2_WARN_ $4;
660176    +drop Neural2_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural2_WARN_;
660177    +Neural2_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural2_WARN_ = _WARN_;
660178    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
660179    +* Ensmbl: Scoring Code of model 6 of 9;
MPRINT(EM_DIAGRAM):   * Ensmbl: Scoring Code of model 6 of 9;
660180    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
660181    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
660182    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
660183    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
660184    +* NODE: Neural3;
MPRINT(EM_DIAGRAM):   * NODE: Neural3;
660185    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
660186    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
660187    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
660188    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
660189    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
660190    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
660191    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
660192    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
660193    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
660194    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
660195    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
660196    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
660197    +LENGTH _WARN_ $4
660198    +      F_DepVar  $ 12
660199    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
660200    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
660201    +
660202    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
660203    +
660204    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
660205    +
660206    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
660207    +
660208    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
660209    +
660210    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
660211    +
660212    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
660213    +
660214    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
660215    +
660216    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
660217    +
660218    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
660219    +
660220    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
660221    +
660222    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
660223    +
660224    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
660225    +
660226    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
660227    +
660228    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
660229    +
660230    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
660231    +
660232    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
660233    +
660234    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
660235    +
660236    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
660237    +
660238    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
660239    +
660240    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
660241    +
660242    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
660243    +
660244    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
660245    +
660246    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
660247    +
660248    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
660249    +
660250    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
660251    +
660252    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
660253    +
660254    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
660255    +
660256    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
660257    +
660258    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
660259    +
660260    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
660261    +
660262    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
660263    +
660264    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
660265    +
660266    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
660267    +
660268    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
660269    +
660270    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
660271    +
660272    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
660273    +
660274    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
660275    +
660276    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
660277    +
660278    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
660279    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
660280    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
660281    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
660282    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
660283    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
660284    +end;
MPRINT(EM_DIAGRAM):   end;
660285    +else do;
MPRINT(EM_DIAGRAM):   else do;
660286    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
660287    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
660288    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
660289    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
660290    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
660291    +   end;
MPRINT(EM_DIAGRAM):   end;
660292    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
660293    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
660294    +   end;
MPRINT(EM_DIAGRAM):   end;
660295    +   else do;
MPRINT(EM_DIAGRAM):   else do;
660296    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
660297    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
660298    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
660299    +   end;
MPRINT(EM_DIAGRAM):   end;
660300    +end;
MPRINT(EM_DIAGRAM):   end;
660301    +
660302    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
660303    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
660304    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
660305    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
660306    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
660307    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
660308    +end;
MPRINT(EM_DIAGRAM):   end;
660309    +else do;
MPRINT(EM_DIAGRAM):   else do;
660310    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
660311    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
660312    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
660313    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
660314    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
660315    +   end;
MPRINT(EM_DIAGRAM):   end;
660316    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
660317    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
660318    +   end;
MPRINT(EM_DIAGRAM):   end;
660319    +   else do;
MPRINT(EM_DIAGRAM):   else do;
660320    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
660321    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
660322    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
660323    +   end;
MPRINT(EM_DIAGRAM):   end;
660324    +end;
MPRINT(EM_DIAGRAM):   end;
660325    +
660326    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
660327    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
660328    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
660329    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
660330    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
660331    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
660332    +end;
MPRINT(EM_DIAGRAM):   end;
660333    +else do;
MPRINT(EM_DIAGRAM):   else do;
660334    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
660335    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
660336    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
660337    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
660338    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
660339    +   end;
MPRINT(EM_DIAGRAM):   end;
660340    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
660341    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
660342    +   end;
MPRINT(EM_DIAGRAM):   end;
660343    +   else do;
MPRINT(EM_DIAGRAM):   else do;
660344    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
660345    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
660346    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
660347    +   end;
MPRINT(EM_DIAGRAM):   end;
660348    +end;
MPRINT(EM_DIAGRAM):   end;
660349    +
660350    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
660351    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
660352    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
660353    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
660354    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
660355    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
660356    +end;
MPRINT(EM_DIAGRAM):   end;
660357    +else do;
MPRINT(EM_DIAGRAM):   else do;
660358    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
660359    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
660360    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
660361    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
660362    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
660363    +   end;
MPRINT(EM_DIAGRAM):   end;
660364    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
660365    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
660366    +   end;
MPRINT(EM_DIAGRAM):   end;
660367    +   else do;
MPRINT(EM_DIAGRAM):   else do;
660368    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
660369    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
660370    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
660371    +   end;
MPRINT(EM_DIAGRAM):   end;
660372    +end;
MPRINT(EM_DIAGRAM):   end;
660373    +
660374    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
660375    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
660376    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
660377    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
660378    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
660379    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
660380    +end;
MPRINT(EM_DIAGRAM):   end;
660381    +else do;
MPRINT(EM_DIAGRAM):   else do;
660382    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
660383    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
660384    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
660385    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
660386    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
660387    +   end;
MPRINT(EM_DIAGRAM):   end;
660388    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
660389    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
660390    +   end;
MPRINT(EM_DIAGRAM):   end;
660391    +   else do;
MPRINT(EM_DIAGRAM):   else do;
660392    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
660393    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
660394    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
660395    +   end;
MPRINT(EM_DIAGRAM):   end;
660396    +end;
MPRINT(EM_DIAGRAM):   end;
660397    +
660398    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
660399    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
660400    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
660401    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
660402    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
660403    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
660404    +end;
MPRINT(EM_DIAGRAM):   end;
660405    +else do;
MPRINT(EM_DIAGRAM):   else do;
660406    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
660407    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
660408    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
660409    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
660410    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
660411    +   end;
MPRINT(EM_DIAGRAM):   end;
660412    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
660413    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
660414    +   end;
MPRINT(EM_DIAGRAM):   end;
660415    +   else do;
MPRINT(EM_DIAGRAM):   else do;
660416    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
660417    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
660418    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
660419    +   end;
MPRINT(EM_DIAGRAM):   end;
660420    +end;
MPRINT(EM_DIAGRAM):   end;
660421    +
660422    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
660423    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
660424    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
660425    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
660426    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
660427    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
660428    +end;
MPRINT(EM_DIAGRAM):   end;
660429    +else do;
MPRINT(EM_DIAGRAM):   else do;
660430    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
660431    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
660432    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
660433    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
660434    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
660435    +   end;
MPRINT(EM_DIAGRAM):   end;
660436    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
660437    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
660438    +   end;
MPRINT(EM_DIAGRAM):   end;
660439    +   else do;
MPRINT(EM_DIAGRAM):   else do;
660440    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
660441    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
660442    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
660443    +   end;
MPRINT(EM_DIAGRAM):   end;
660444    +end;
MPRINT(EM_DIAGRAM):   end;
660445    +
660446    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
660447    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
660448    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
660449    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
660450    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
660451    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
660452    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
660453    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
660454    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
660455    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
660456    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
660457    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
660458    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
660459    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
660460    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
660461    +end;
MPRINT(EM_DIAGRAM):   end;
660462    +else do;
MPRINT(EM_DIAGRAM):   else do;
660463    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
660464    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
660465    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
660466    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
660467    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
660468    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
660469    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
660470    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
660471    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
660472    +         end;
MPRINT(EM_DIAGRAM):   end;
660473    +         else do;
MPRINT(EM_DIAGRAM):   else do;
660474    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
660475    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
660476    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
660477    +            end;
MPRINT(EM_DIAGRAM):   end;
660478    +         end;
MPRINT(EM_DIAGRAM):   end;
660479    +      end;
MPRINT(EM_DIAGRAM):   end;
660480    +      else do;
MPRINT(EM_DIAGRAM):   else do;
660481    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
660482    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
660483    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
660484    +         end;
MPRINT(EM_DIAGRAM):   end;
660485    +      end;
MPRINT(EM_DIAGRAM):   end;
660486    +   end;
MPRINT(EM_DIAGRAM):   end;
660487    +   else do;
MPRINT(EM_DIAGRAM):   else do;
660488    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
660489    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
660490    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
660491    +      end;
MPRINT(EM_DIAGRAM):   end;
660492    +      else do;
MPRINT(EM_DIAGRAM):   else do;
660493    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
660494    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
660495    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
660496    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
660497    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
660498    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
660499    +         end;
MPRINT(EM_DIAGRAM):   end;
660500    +      end;
MPRINT(EM_DIAGRAM):   end;
660501    +   end;
MPRINT(EM_DIAGRAM):   end;
660502    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
660503    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
660504    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
660505    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
660506    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
660507    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
660508    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
660509    +   end;
MPRINT(EM_DIAGRAM):   end;
660510    +end;
MPRINT(EM_DIAGRAM):   end;
660511    +
660512    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
660513    +*** Checking missing input Interval
660514    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
660515    +
660516    +IF NMISS(
660517    +   AcceptedCmpTotal ,
660518    +   Kidhome ,
660519    +   Mnt ,
660520    +   MntFishProducts ,
660521    +   MntFruits ,
660522    +   MntGoldProds ,
660523    +   MntMeatProducts ,
660524    +   MntSweetProducts ,
660525    +   MntWines ,
660526    +   NumCatalogPurchases ,
660527    +   NumDealsPurchases ,
660528    +   NumDistPurchases ,
660529    +   NumStorePurchases ,
660530    +   NumWebPurchases ,
660531    +   NumWebVisitsMonth ,
660532    +   RFMstat ,
660533    +   Recency ,
660534    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Kidhome , Mnt , MntFishProducts , MntFruits 
, MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , 
NumDealsPurchases , NumDistPurchases , NumStorePurchases , NumWebPurchases , NumWebVisitsMonth 
, RFMstat , Recency , Teenhome ) THEN DO;
660535    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
660536    +
660537    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
660538    +END;
MPRINT(EM_DIAGRAM):   END;
660539    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
660540    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
660541    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
660542    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
660543    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
660544    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
660545    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
660546    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
660547    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
660548    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
660549    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
660550    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
660551    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
660552    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
660553    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
660554    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
660555    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
660556    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
660557    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
660558    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
660559    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
660560    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
660561    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
660562    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
660563    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
660564    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
660565    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
660566    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
660567    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
660568    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
660569    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
660570    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
660571    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
660572    +END;
MPRINT(EM_DIAGRAM):   END;
660573    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
660574    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
660575    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
660576    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
660577    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
660578    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
660579    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
660580    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
660581    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
660582    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
660583    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
660584    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
660585    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
660586    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
660587    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
660588    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
660589    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
660590    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
660591    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
660592    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
660593    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
660594    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
660595    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
660596    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
660597    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
660598    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
660599    +   ELSE S_NumCatalogPurchases
660600    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
660601    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
660602    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
660603    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
660604    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
660605    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
660606    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
660607    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
660608    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
660609    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
660610    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
660611    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
660612    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
660613    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
660614    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
660615    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
660616    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
660617    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
660618    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
660619    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
660620    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
660621    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
660622    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
660623    +END;
MPRINT(EM_DIAGRAM):   END;
660624    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
660625    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
660626    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
660627    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
660628    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
660629    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
660630    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
660631    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
660632    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
660633    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
660634    +   H11  =     1.01101276887315 * S_AcceptedCmpTotal  +     0.13088206386642 *
660635    +        S_Kidhome  +     0.44144124105344 * S_Mnt  +    -0.68904392437475 *
660636    +        S_MntFishProducts  +    -0.17121585659716 * S_MntFruits
660637    +          +     0.11335785908498 * S_MntGoldProds  +      2.7693787644231 *
660638    +        S_MntMeatProducts  +     0.05508921126989 * S_MntSweetProducts
660639    +          +    -0.84963149161721 * S_MntWines  +     0.93831643366323 *
660640    +        S_NumCatalogPurchases  +     0.61100213741284 * S_NumDealsPurchases
660641    +          +     0.02505564750154 * S_NumDistPurchases
660642    +          +    -0.68813734794561 * S_NumStorePurchases
660643    +          +    -0.70997870192497 * S_NumWebPurchases
660644    +          +     0.29587693128027 * S_NumWebVisitsMonth
660645    +          +     0.78508541462113 * S_RFMstat  +     -0.3308883600476 *
660646    +        S_Recency  +    -0.00325917604837 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 1.01101276887315 * S_AcceptedCmpTotal + 0.13088206386642 * 
S_Kidhome + 0.44144124105344 * S_Mnt + -0.68904392437475 * S_MntFishProducts + 
-0.17121585659716 * S_MntFruits + 0.11335785908498 * S_MntGoldProds + 2.7693787644231 * 
S_MntMeatProducts + 0.05508921126989 * S_MntSweetProducts + -0.84963149161721 * S_MntWines + 
0.93831643366323 * S_NumCatalogPurchases + 0.61100213741284 * S_NumDealsPurchases + 
0.02505564750154 * S_NumDistPurchases + -0.68813734794561 * S_NumStorePurchases + 
-0.70997870192497 * S_NumWebPurchases + 0.29587693128027 * S_NumWebVisitsMonth + 
0.78508541462113 * S_RFMstat + -0.3308883600476 * S_Recency + -0.00325917604837 * S_Teenhome ;
660647    +   H12  =    -0.52436299608191 * S_AcceptedCmpTotal  +     0.27198236309079 *
660648    +        S_Kidhome  +     0.16271772923493 * S_Mnt  +     0.09777129448709 *
660649    +        S_MntFishProducts  +     0.08286856142975 * S_MntFruits
660650    +          +     0.01382699665825 * S_MntGoldProds  +    -0.64717980145363 *
660651    +        S_MntMeatProducts  +     0.05864522802919 * S_MntSweetProducts
660652    +          +     0.48084041085358 * S_MntWines  +    -0.54710128323244 *
660653    +        S_NumCatalogPurchases  +    -0.13512538901701 * S_NumDealsPurchases
660654    +          +     0.06434299218856 * S_NumDistPurchases
660655    +          +     0.42712319617209 * S_NumStorePurchases
660656    +          +     0.31123207604233 * S_NumWebPurchases
660657    +          +    -1.01860201337102 * S_NumWebVisitsMonth
660658    +          +    -0.03004351543086 * S_RFMstat  +      1.1539132835032 *
660659    +        S_Recency  +     0.26483130659279 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.52436299608191 * S_AcceptedCmpTotal + 0.27198236309079 * 
S_Kidhome + 0.16271772923493 * S_Mnt + 0.09777129448709 * S_MntFishProducts + 0.08286856142975 
* S_MntFruits + 0.01382699665825 * S_MntGoldProds + -0.64717980145363 * S_MntMeatProducts + 
0.05864522802919 * S_MntSweetProducts + 0.48084041085358 * S_MntWines + -0.54710128323244 * 
S_NumCatalogPurchases + -0.13512538901701 * S_NumDealsPurchases + 0.06434299218856 * 
S_NumDistPurchases + 0.42712319617209 * S_NumStorePurchases + 0.31123207604233 * 
S_NumWebPurchases + -1.01860201337102 * S_NumWebVisitsMonth + -0.03004351543086 * S_RFMstat + 
1.1539132835032 * S_Recency + 0.26483130659279 * S_Teenhome ;
660660    +   H11  = H11  +    -0.30089946733563 * AcceptedCmp10
660661    +          +     0.33352940500449 * AcceptedCmp20  +     0.57640754092947 *
660662    +        AcceptedCmp30  +     0.43007791062186 * AcceptedCmp40
660663    +          +    -0.97559596081103 * AcceptedCmp50  +      -0.156153798165 *
660664    +        Complain0  +    -0.08163020130832 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.30089946733563 * AcceptedCmp10 + 0.33352940500449 * 
AcceptedCmp20 + 0.57640754092947 * AcceptedCmp30 + 0.43007791062186 * AcceptedCmp40 + 
-0.97559596081103 * AcceptedCmp50 + -0.156153798165 * Complain0 + -0.08163020130832 * 
HigherEducationBinary0 ;
660665    +   H12  = H12  +     0.08049893192691 * AcceptedCmp10
660666    +          +     0.08395178819383 * AcceptedCmp20  +     0.11982414653687 *
660667    +        AcceptedCmp30  +     0.13126623447029 * AcceptedCmp40
660668    +          +      0.3326649980497 * AcceptedCmp50  +    -0.03185471588077 *
660669    +        Complain0  +     0.08220343686165 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.08049893192691 * AcceptedCmp10 + 0.08395178819383 * 
AcceptedCmp20 + 0.11982414653687 * AcceptedCmp30 + 0.13126623447029 * AcceptedCmp40 + 
0.3326649980497 * AcceptedCmp50 + -0.03185471588077 * Complain0 + 0.08220343686165 * 
HigherEducationBinary0 ;
660670    +   H11  = H11  +    -0.24837156257202 * Marital_StatusDivorced
660671    +          +     0.31380389607446 * Marital_StatusMarried
660672    +          +    -0.11994840163803 * Marital_StatusSingle
660673    +          +     0.30069256789445 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.24837156257202 * Marital_StatusDivorced + 
0.31380389607446 * Marital_StatusMarried + -0.11994840163803 * Marital_StatusSingle + 
0.30069256789445 * Marital_StatusTogether ;
660674    +   H12  = H12  +    -0.41749658642963 * Marital_StatusDivorced
660675    +          +     0.72506125430191 * Marital_StatusMarried
660676    +          +    -0.54747054981285 * Marital_StatusSingle
660677    +          +     0.89421218316246 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.41749658642963 * Marital_StatusDivorced + 
0.72506125430191 * Marital_StatusMarried + -0.54747054981285 * Marital_StatusSingle + 
0.89421218316246 * Marital_StatusTogether ;
660678    +   H11  =     0.50192687520529 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.50192687520529 + H11 ;
660679    +   H12  =     0.17708947264117 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.17708947264117 + H12 ;
660680    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
660681    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
660682    +END;
MPRINT(EM_DIAGRAM):   END;
660683    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
660684    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
660685    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
660686    +END;
MPRINT(EM_DIAGRAM):   END;
660687    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
660688    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
660689    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
660690    +
660691    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
660692    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
660693    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
660694    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
660695    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
660696    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
660697    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
660698    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
660699    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
660700    +end;
MPRINT(EM_DIAGRAM):   end;
660701    +else do;
MPRINT(EM_DIAGRAM):   else do;
660702    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
660703    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
660704    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
660705    +   end;
MPRINT(EM_DIAGRAM):   end;
660706    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
660707    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
660708    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
660709    +   end;
MPRINT(EM_DIAGRAM):   end;
660710    +   else do;
MPRINT(EM_DIAGRAM):   else do;
660711    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
660712    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
660713    +   end;
MPRINT(EM_DIAGRAM):   end;
660714    +end;
MPRINT(EM_DIAGRAM):   end;
660715    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
660716    +   P_DepVar1  =     4.38180289637299 * H11  +    -4.42967128560878 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.38180289637299 * H11 + -4.42967128560878 * H12 ;
660717    +   P_DepVar1  =    -3.75681581527016 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.75681581527016 + P_DepVar1 ;
660718    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
660719    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
660720    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
660721    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
660722    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
660723    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
660724    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
660725    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
660726    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
660727    +END;
MPRINT(EM_DIAGRAM):   END;
660728    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
660729    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
660730    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
660731    +END;
MPRINT(EM_DIAGRAM):   END;
660732    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
660733    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
660734    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
660735    +END;
MPRINT(EM_DIAGRAM):   END;
660736    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
660737    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
660738    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
660739    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
660740    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
660741    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
660742    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
660743    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
660744    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
660745    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
660746    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
660747    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
660748    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
660749    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
660750    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
660751    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
660752    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
660753    +END;
MPRINT(EM_DIAGRAM):   END;
660754    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
660755    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
660756    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
660757    +drop
660758    +H11
660759    +H12
660760    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
660761    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
660762    +* Renaming variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural3;
660763    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
660764    +* Renaming Posterior variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural3;
660765    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
660766    +drop Neural3_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar1;
660767    +Neural3_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar1 = P_DepVar1;
660768    +drop Neural3_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar0;
660769    +Neural3_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar0 = P_DepVar0;
660770    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
660771    +* Renaming _WARN_ variable for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural3;
660772    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
660773    +length Neural3_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural3_WARN_ $4;
660774    +drop Neural3_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural3_WARN_;
660775    +Neural3_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural3_WARN_ = _WARN_;
660776    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
660777    +* Ensmbl: Scoring Code of model 7 of 9;
MPRINT(EM_DIAGRAM):   * Ensmbl: Scoring Code of model 7 of 9;
660778    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
660779    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
660780    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
660781    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
660782    +* NODE: Neural7;
MPRINT(EM_DIAGRAM):   * NODE: Neural7;
660783    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
660784    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
660785    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
660786    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
660787    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
660788    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
660789    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
660790    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
660791    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
660792    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
660793    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
660794    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
660795    +LENGTH _WARN_ $4
660796    +      F_DepVar  $ 12
660797    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
660798    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
660799    +
660800    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
660801    +
660802    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
660803    +
660804    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
660805    +
660806    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
660807    +
660808    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
660809    +
660810    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
660811    +
660812    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
660813    +
660814    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
660815    +
660816    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
660817    +
660818    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
660819    +
660820    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
660821    +
660822    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
660823    +
660824    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
660825    +
660826    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
660827    +
660828    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
660829    +
660830    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
660831    +
660832    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
660833    +
660834    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
660835    +
660836    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
660837    +
660838    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
660839    +
660840    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
660841    +
660842    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
660843    +
660844    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
660845    +
660846    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
660847    +
660848    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
660849    +
660850    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
660851    +
660852    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
660853    +
660854    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
660855    +
660856    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
660857    +
660858    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
660859    +
660860    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
660861    +
660862    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
660863    +
660864    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
660865    +
660866    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
660867    +
660868    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
660869    +
660870    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
660871    +
660872    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
660873    +
660874    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
660875    +
660876    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
660877    +
660878    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
660879    +
660880    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
660881    +
660882    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
660883    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
660884    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
660885    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
660886    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
660887    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
660888    +end;
MPRINT(EM_DIAGRAM):   end;
660889    +else do;
MPRINT(EM_DIAGRAM):   else do;
660890    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
660891    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
660892    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
660893    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
660894    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
660895    +   end;
MPRINT(EM_DIAGRAM):   end;
660896    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
660897    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
660898    +   end;
MPRINT(EM_DIAGRAM):   end;
660899    +   else do;
MPRINT(EM_DIAGRAM):   else do;
660900    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
660901    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
660902    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
660903    +   end;
MPRINT(EM_DIAGRAM):   end;
660904    +end;
MPRINT(EM_DIAGRAM):   end;
660905    +
660906    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
660907    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
660908    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
660909    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
660910    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
660911    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
660912    +end;
MPRINT(EM_DIAGRAM):   end;
660913    +else do;
MPRINT(EM_DIAGRAM):   else do;
660914    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
660915    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
660916    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
660917    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
660918    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
660919    +   end;
MPRINT(EM_DIAGRAM):   end;
660920    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
660921    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
660922    +   end;
MPRINT(EM_DIAGRAM):   end;
660923    +   else do;
MPRINT(EM_DIAGRAM):   else do;
660924    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
660925    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
660926    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
660927    +   end;
MPRINT(EM_DIAGRAM):   end;
660928    +end;
MPRINT(EM_DIAGRAM):   end;
660929    +
660930    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
660931    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
660932    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
660933    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
660934    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
660935    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
660936    +end;
MPRINT(EM_DIAGRAM):   end;
660937    +else do;
MPRINT(EM_DIAGRAM):   else do;
660938    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
660939    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
660940    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
660941    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
660942    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
660943    +   end;
MPRINT(EM_DIAGRAM):   end;
660944    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
660945    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
660946    +   end;
MPRINT(EM_DIAGRAM):   end;
660947    +   else do;
MPRINT(EM_DIAGRAM):   else do;
660948    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
660949    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
660950    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
660951    +   end;
MPRINT(EM_DIAGRAM):   end;
660952    +end;
MPRINT(EM_DIAGRAM):   end;
660953    +
660954    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
660955    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
660956    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
660957    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
660958    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
660959    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
660960    +end;
MPRINT(EM_DIAGRAM):   end;
660961    +else do;
MPRINT(EM_DIAGRAM):   else do;
660962    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
660963    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
660964    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
660965    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
660966    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
660967    +   end;
MPRINT(EM_DIAGRAM):   end;
660968    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
660969    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
660970    +   end;
MPRINT(EM_DIAGRAM):   end;
660971    +   else do;
MPRINT(EM_DIAGRAM):   else do;
660972    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
660973    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
660974    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
660975    +   end;
MPRINT(EM_DIAGRAM):   end;
660976    +end;
MPRINT(EM_DIAGRAM):   end;
660977    +
660978    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
660979    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
660980    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
660981    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
660982    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
660983    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
660984    +end;
MPRINT(EM_DIAGRAM):   end;
660985    +else do;
MPRINT(EM_DIAGRAM):   else do;
660986    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
660987    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
660988    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
660989    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
660990    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
660991    +   end;
MPRINT(EM_DIAGRAM):   end;
660992    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
660993    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
660994    +   end;
MPRINT(EM_DIAGRAM):   end;
660995    +   else do;
MPRINT(EM_DIAGRAM):   else do;
660996    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
660997    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
660998    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
660999    +   end;
MPRINT(EM_DIAGRAM):   end;
661000    +end;
MPRINT(EM_DIAGRAM):   end;
661001    +
661002    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
661003    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
661004    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
661005    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
661006    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
661007    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
661008    +end;
MPRINT(EM_DIAGRAM):   end;
661009    +else do;
MPRINT(EM_DIAGRAM):   else do;
661010    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
661011    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
661012    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
661013    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
661014    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
661015    +   end;
MPRINT(EM_DIAGRAM):   end;
661016    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
661017    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
661018    +   end;
MPRINT(EM_DIAGRAM):   end;
661019    +   else do;
MPRINT(EM_DIAGRAM):   else do;
661020    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
661021    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
661022    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
661023    +   end;
MPRINT(EM_DIAGRAM):   end;
661024    +end;
MPRINT(EM_DIAGRAM):   end;
661025    +
661026    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
661027    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
661028    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
661029    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
661030    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
661031    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
661032    +end;
MPRINT(EM_DIAGRAM):   end;
661033    +else do;
MPRINT(EM_DIAGRAM):   else do;
661034    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
661035    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
661036    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
661037    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
661038    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
661039    +   end;
MPRINT(EM_DIAGRAM):   end;
661040    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
661041    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
661042    +   end;
MPRINT(EM_DIAGRAM):   end;
661043    +   else do;
MPRINT(EM_DIAGRAM):   else do;
661044    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
661045    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
661046    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
661047    +   end;
MPRINT(EM_DIAGRAM):   end;
661048    +end;
MPRINT(EM_DIAGRAM):   end;
661049    +
661050    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
661051    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
661052    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
661053    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
661054    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
661055    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
661056    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
661057    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
661058    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
661059    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
661060    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
661061    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
661062    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
661063    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
661064    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
661065    +end;
MPRINT(EM_DIAGRAM):   end;
661066    +else do;
MPRINT(EM_DIAGRAM):   else do;
661067    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
661068    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
661069    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
661070    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
661071    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
661072    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
661073    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
661074    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
661075    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
661076    +         end;
MPRINT(EM_DIAGRAM):   end;
661077    +         else do;
MPRINT(EM_DIAGRAM):   else do;
661078    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
661079    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
661080    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
661081    +            end;
MPRINT(EM_DIAGRAM):   end;
661082    +         end;
MPRINT(EM_DIAGRAM):   end;
661083    +      end;
MPRINT(EM_DIAGRAM):   end;
661084    +      else do;
MPRINT(EM_DIAGRAM):   else do;
661085    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
661086    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
661087    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
661088    +         end;
MPRINT(EM_DIAGRAM):   end;
661089    +      end;
MPRINT(EM_DIAGRAM):   end;
661090    +   end;
MPRINT(EM_DIAGRAM):   end;
661091    +   else do;
MPRINT(EM_DIAGRAM):   else do;
661092    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
661093    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
661094    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
661095    +      end;
MPRINT(EM_DIAGRAM):   end;
661096    +      else do;
MPRINT(EM_DIAGRAM):   else do;
661097    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
661098    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
661099    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
661100    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
661101    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
661102    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
661103    +         end;
MPRINT(EM_DIAGRAM):   end;
661104    +      end;
MPRINT(EM_DIAGRAM):   end;
661105    +   end;
MPRINT(EM_DIAGRAM):   end;
661106    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
661107    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
661108    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
661109    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
661110    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
661111    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
661112    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
661113    +   end;
MPRINT(EM_DIAGRAM):   end;
661114    +end;
MPRINT(EM_DIAGRAM):   end;
661115    +
661116    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
661117    +*** Checking missing input Interval
661118    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
661119    +
661120    +IF NMISS(
661121    +   AcceptedCmpTotal ,
661122    +   Kidhome ,
661123    +   Mnt ,
661124    +   MntFishProducts ,
661125    +   MntFruits ,
661126    +   MntGoldProds ,
661127    +   MntMeatProducts ,
661128    +   MntSweetProducts ,
661129    +   MntWines ,
661130    +   NumCatalogPurchases ,
661131    +   NumDealsPurchases ,
661132    +   NumDistPurchases ,
661133    +   NumStorePurchases ,
661134    +   NumWebPurchases ,
661135    +   NumWebVisitsMonth ,
661136    +   RFMstat ,
661137    +   Recency ,
661138    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Kidhome , Mnt , MntFishProducts , MntFruits 
, MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , 
NumDealsPurchases , NumDistPurchases , NumStorePurchases , NumWebPurchases , NumWebVisitsMonth 
, RFMstat , Recency , Teenhome ) THEN DO;
661139    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
661140    +
661141    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
661142    +END;
MPRINT(EM_DIAGRAM):   END;
661143    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
661144    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
661145    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
661146    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
661147    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
661148    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
661149    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
661150    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
661151    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
661152    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
661153    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
661154    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
661155    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
661156    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
661157    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
661158    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
661159    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
661160    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
661161    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
661162    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
661163    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
661164    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
661165    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
661166    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
661167    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
661168    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
661169    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
661170    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
661171    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
661172    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
661173    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
661174    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
661175    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
661176    +END;
MPRINT(EM_DIAGRAM):   END;
661177    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
661178    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
661179    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
661180    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
661181    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
661182    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
661183    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
661184    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
661185    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
661186    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
661187    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
661188    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
661189    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
661190    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
661191    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
661192    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
661193    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
661194    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
661195    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
661196    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
661197    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
661198    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
661199    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
661200    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
661201    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
661202    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
661203    +   ELSE S_NumCatalogPurchases
661204    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
661205    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
661206    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
661207    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
661208    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
661209    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
661210    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
661211    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
661212    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
661213    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
661214    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
661215    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
661216    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
661217    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
661218    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
661219    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
661220    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
661221    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
661222    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
661223    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
661224    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
661225    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
661226    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
661227    +END;
MPRINT(EM_DIAGRAM):   END;
661228    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
661229    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
661230    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
661231    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
661232    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
661233    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
661234    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
661235    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
661236    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
661237    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
661238    +   H11  =    -0.31336975179768 * S_AcceptedCmpTotal  +     0.55217606948262 *
661239    +        S_Kidhome  +     0.30934248519275 * S_Mnt  +     0.21704081651602 *
661240    +        S_MntFishProducts  +      0.0286842970037 * S_MntFruits
661241    +          +     -0.0428936614026 * S_MntGoldProds  +     0.04106839234795 *
661242    +        S_MntMeatProducts  +     -0.2219223463878 * S_MntSweetProducts
661243    +          +     0.07714161131062 * S_MntWines  +    -0.47043004421243 *
661244    +        S_NumCatalogPurchases  +    -0.34552756945236 * S_NumDealsPurchases
661245    +          +    -0.08565162229542 * S_NumDistPurchases
661246    +          +      0.2498966077742 * S_NumStorePurchases
661247    +          +    -0.03810974523517 * S_NumWebPurchases
661248    +          +     0.50983692369041 * S_NumWebVisitsMonth
661249    +          +     0.08815778320903 * S_RFMstat  +     0.09119895780804 *
661250    +        S_Recency  +     0.13511958264343 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.31336975179768 * S_AcceptedCmpTotal + 0.55217606948262 * 
S_Kidhome + 0.30934248519275 * S_Mnt + 0.21704081651602 * S_MntFishProducts + 0.0286842970037 
* S_MntFruits + -0.0428936614026 * S_MntGoldProds + 0.04106839234795 * S_MntMeatProducts + 
-0.2219223463878 * S_MntSweetProducts + 0.07714161131062 * S_MntWines + -0.47043004421243 * 
S_NumCatalogPurchases + -0.34552756945236 * S_NumDealsPurchases + -0.08565162229542 * 
S_NumDistPurchases + 0.2498966077742 * S_NumStorePurchases + -0.03810974523517 * 
S_NumWebPurchases + 0.50983692369041 * S_NumWebVisitsMonth + 0.08815778320903 * S_RFMstat + 
0.09119895780804 * S_Recency + 0.13511958264343 * S_Teenhome ;
661251    +   H12  =    -0.24937709830237 * S_AcceptedCmpTotal  +    -0.24749428309219 *
661252    +        S_Kidhome  +    -0.12930178120586 * S_Mnt  +     0.13546025995573 *
661253    +        S_MntFishProducts  +     0.28360186554431 * S_MntFruits
661254    +          +    -0.05241802314535 * S_MntGoldProds  +    -0.66941662270923 *
661255    +        S_MntMeatProducts  +     0.15336628351126 * S_MntSweetProducts
661256    +          +      0.4032078630799 * S_MntWines  +    -0.56890394617047 *
661257    +        S_NumCatalogPurchases  +    -0.64950384504567 * S_NumDealsPurchases
661258    +          +     0.23154666595931 * S_NumDistPurchases
661259    +          +     0.54534387610808 * S_NumStorePurchases
661260    +          +     0.41139490970672 * S_NumWebPurchases
661261    +          +    -0.55413387763351 * S_NumWebVisitsMonth
661262    +          +    -0.26075003734578 * S_RFMstat  +     0.49052010543197 *
661263    +        S_Recency  +     -0.0404801860777 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.24937709830237 * S_AcceptedCmpTotal + -0.24749428309219 * 
S_Kidhome + -0.12930178120586 * S_Mnt + 0.13546025995573 * S_MntFishProducts + 
0.28360186554431 * S_MntFruits + -0.05241802314535 * S_MntGoldProds + -0.66941662270923 * 
S_MntMeatProducts + 0.15336628351126 * S_MntSweetProducts + 0.4032078630799 * S_MntWines + 
-0.56890394617047 * S_NumCatalogPurchases + -0.64950384504567 * S_NumDealsPurchases + 
0.23154666595931 * S_NumDistPurchases + 0.54534387610808 * S_NumStorePurchases + 
0.41139490970672 * S_NumWebPurchases + -0.55413387763351 * S_NumWebVisitsMonth + 
-0.26075003734578 * S_RFMstat + 0.49052010543197 * S_Recency + -0.0404801860777 * S_Teenhome ;
661264    +   H13  =     0.21315421089843 * S_AcceptedCmpTotal  +    -0.40934954273162 *
661265    +        S_Kidhome  +    -0.14257980270562 * S_Mnt  +    -0.02326723710858 *
661266    +        S_MntFishProducts  +     0.03093571619826 * S_MntFruits
661267    +          +    -0.09540637054036 * S_MntGoldProds  +       0.216562837751 *
661268    +        S_MntMeatProducts  +    -0.06578520743957 * S_MntSweetProducts
661269    +          +    -0.45983147514787 * S_MntWines  +     0.28991677967619 *
661270    +        S_NumCatalogPurchases  +     -0.0581811780876 * S_NumDealsPurchases
661271    +          +     0.05120135471729 * S_NumDistPurchases
661272    +          +    -0.26556926910649 * S_NumStorePurchases
661273    +          +    -0.44351155109785 * S_NumWebPurchases
661274    +          +     0.88609841670248 * S_NumWebVisitsMonth
661275    +          +    -0.05355058809893 * S_RFMstat  +    -0.73370046845716 *
661276    +        S_Recency  +    -0.20220070524982 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.21315421089843 * S_AcceptedCmpTotal + -0.40934954273162 * 
S_Kidhome + -0.14257980270562 * S_Mnt + -0.02326723710858 * S_MntFishProducts + 
0.03093571619826 * S_MntFruits + -0.09540637054036 * S_MntGoldProds + 0.216562837751 * 
S_MntMeatProducts + -0.06578520743957 * S_MntSweetProducts + -0.45983147514787 * S_MntWines + 
0.28991677967619 * S_NumCatalogPurchases + -0.0581811780876 * S_NumDealsPurchases + 
0.05120135471729 * S_NumDistPurchases + -0.26556926910649 * S_NumStorePurchases + 
-0.44351155109785 * S_NumWebPurchases + 0.88609841670248 * S_NumWebVisitsMonth + 
-0.05355058809893 * S_RFMstat + -0.73370046845716 * S_Recency + -0.20220070524982 * S_Teenhome 
;
661277    +   H14  =     0.39698224199543 * S_AcceptedCmpTotal  +    -0.20120366596375 *
661278    +        S_Kidhome  +      0.3167228298887 * S_Mnt  +     0.01157053818495 *
661279    +        S_MntFishProducts  +    -0.01328592356982 * S_MntFruits
661280    +          +     0.00886948034365 * S_MntGoldProds  +     1.21666314524043 *
661281    +        S_MntMeatProducts  +    -0.09283019720022 * S_MntSweetProducts
661282    +          +    -0.09586722258183 * S_MntWines  +    -0.01785512232978 *
661283    +        S_NumCatalogPurchases  +    -0.21291958246407 * S_NumDealsPurchases
661284    +          +     0.39404855135103 * S_NumDistPurchases
661285    +          +    -0.07248752877179 * S_NumStorePurchases
661286    +          +    -0.10123700375349 * S_NumWebPurchases
661287    +          +     0.42450276314027 * S_NumWebVisitsMonth
661288    +          +     0.24279716857154 * S_RFMstat  +    -0.58955338934321 *
661289    +        S_Recency  +    -0.30629869350731 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.39698224199543 * S_AcceptedCmpTotal + -0.20120366596375 * 
S_Kidhome + 0.3167228298887 * S_Mnt + 0.01157053818495 * S_MntFishProducts + -0.01328592356982 
* S_MntFruits + 0.00886948034365 * S_MntGoldProds + 1.21666314524043 * S_MntMeatProducts + 
-0.09283019720022 * S_MntSweetProducts + -0.09586722258183 * S_MntWines + -0.01785512232978 * 
S_NumCatalogPurchases + -0.21291958246407 * S_NumDealsPurchases + 0.39404855135103 * 
S_NumDistPurchases + -0.07248752877179 * S_NumStorePurchases + -0.10123700375349 * 
S_NumWebPurchases + 0.42450276314027 * S_NumWebVisitsMonth + 0.24279716857154 * S_RFMstat + 
-0.58955338934321 * S_Recency + -0.30629869350731 * S_Teenhome ;
661290    +   H15  =     0.30758619083232 * S_AcceptedCmpTotal  +     -0.0124289721914 *
661291    +        S_Kidhome  +    -0.05376010749039 * S_Mnt  +    -0.00466013129163 *
661292    +        S_MntFishProducts  +     -0.0128351925647 * S_MntFruits
661293    +          +       0.418369814853 * S_MntGoldProds  +    -0.44302877451838 *
661294    +        S_MntMeatProducts  +     0.10514229364725 * S_MntSweetProducts
661295    +          +     0.34164846881132 * S_MntWines  +    -0.02137843790281 *
661296    +        S_NumCatalogPurchases  +     -0.0656649517507 * S_NumDealsPurchases
661297    +          +     0.27175946433967 * S_NumDistPurchases
661298    +          +     0.16942067472984 * S_NumStorePurchases
661299    +          +     0.16250565660711 * S_NumWebPurchases
661300    +          +    -0.20203561703211 * S_NumWebVisitsMonth
661301    +          +     0.14491189794214 * S_RFMstat  +    -0.22675112064568 *
661302    +        S_Recency  +      0.1811664309815 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.30758619083232 * S_AcceptedCmpTotal + -0.0124289721914 * 
S_Kidhome + -0.05376010749039 * S_Mnt + -0.00466013129163 * S_MntFishProducts + 
-0.0128351925647 * S_MntFruits + 0.418369814853 * S_MntGoldProds + -0.44302877451838 * 
S_MntMeatProducts + 0.10514229364725 * S_MntSweetProducts + 0.34164846881132 * S_MntWines + 
-0.02137843790281 * S_NumCatalogPurchases + -0.0656649517507 * S_NumDealsPurchases + 
0.27175946433967 * S_NumDistPurchases + 0.16942067472984 * S_NumStorePurchases + 
0.16250565660711 * S_NumWebPurchases + -0.20203561703211 * S_NumWebVisitsMonth + 
0.14491189794214 * S_RFMstat + -0.22675112064568 * S_Recency + 0.1811664309815 * S_Teenhome ;
661303    +   H11  = H11  +    -0.26538416697651 * AcceptedCmp10
661304    +          +    -0.28983118331232 * AcceptedCmp20  +    -0.32322818178704 *
661305    +        AcceptedCmp30  +    -0.03993661807643 * AcceptedCmp40
661306    +          +     0.06994002730973 * AcceptedCmp50  +    -0.07716774247605 *
661307    +        Complain0  +      0.2585392734779 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.26538416697651 * AcceptedCmp10 + -0.28983118331232 * 
AcceptedCmp20 + -0.32322818178704 * AcceptedCmp30 + -0.03993661807643 * AcceptedCmp40 + 
0.06994002730973 * AcceptedCmp50 + -0.07716774247605 * Complain0 + 0.2585392734779 * 
HigherEducationBinary0 ;
661308    +   H12  = H12  +     0.26018307810736 * AcceptedCmp10
661309    +          +     0.04049534355706 * AcceptedCmp20  +     0.11270892132762 *
661310    +        AcceptedCmp30  +     0.11221187249984 * AcceptedCmp40
661311    +          +     0.17472976197603 * AcceptedCmp50  +     0.15606486866287 *
661312    +        Complain0  +     0.08065554959159 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.26018307810736 * AcceptedCmp10 + 0.04049534355706 * 
AcceptedCmp20 + 0.11270892132762 * AcceptedCmp30 + 0.11221187249984 * AcceptedCmp40 + 
0.17472976197603 * AcceptedCmp50 + 0.15606486866287 * Complain0 + 0.08065554959159 * 
HigherEducationBinary0 ;
661313    +   H13  = H13  +     0.02279534546007 * AcceptedCmp10
661314    +          +    -0.27459928968957 * AcceptedCmp20  +    -0.15207279864055 *
661315    +        AcceptedCmp30  +    -0.07324517817975 * AcceptedCmp40
661316    +          +     -0.4186492052078 * AcceptedCmp50  +     0.22766105161511 *
661317    +        Complain0  +    -0.00716085865509 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02279534546007 * AcceptedCmp10 + -0.27459928968957 * 
AcceptedCmp20 + -0.15207279864055 * AcceptedCmp30 + -0.07324517817975 * AcceptedCmp40 + 
-0.4186492052078 * AcceptedCmp50 + 0.22766105161511 * Complain0 + -0.00716085865509 * 
HigherEducationBinary0 ;
661318    +   H14  = H14  +    -0.30447666177293 * AcceptedCmp10
661319    +          +     0.07907637737546 * AcceptedCmp20  +    -0.01358906665622 *
661320    +        AcceptedCmp30  +     0.04426640297686 * AcceptedCmp40
661321    +          +     0.00911097068478 * AcceptedCmp50  +    -0.10112384137038 *
661322    +        Complain0  +     0.05359674201133 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.30447666177293 * AcceptedCmp10 + 0.07907637737546 * 
AcceptedCmp20 + -0.01358906665622 * AcceptedCmp30 + 0.04426640297686 * AcceptedCmp40 + 
0.00911097068478 * AcceptedCmp50 + -0.10112384137038 * Complain0 + 0.05359674201133 * 
HigherEducationBinary0 ;
661323    +   H15  = H15  +    -0.31560065228661 * AcceptedCmp10
661324    +          +     0.17796753054999 * AcceptedCmp20  +    -0.30736861931223 *
661325    +        AcceptedCmp30  +    -0.26334867599652 * AcceptedCmp40
661326    +          +    -0.19775668628356 * AcceptedCmp50  +     0.09156081270418 *
661327    +        Complain0  +     0.16300151411284 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.31560065228661 * AcceptedCmp10 + 0.17796753054999 * 
AcceptedCmp20 + -0.30736861931223 * AcceptedCmp30 + -0.26334867599652 * AcceptedCmp40 + 
-0.19775668628356 * AcceptedCmp50 + 0.09156081270418 * Complain0 + 0.16300151411284 * 
HigherEducationBinary0 ;
661328    +   H11  = H11  +     0.17457297183466 * Marital_StatusDivorced
661329    +          +    -0.18709572120712 * Marital_StatusMarried
661330    +          +    -0.17856903026629 * Marital_StatusSingle
661331    +          +     0.13783214631264 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.17457297183466 * Marital_StatusDivorced + 
-0.18709572120712 * Marital_StatusMarried + -0.17856903026629 * Marital_StatusSingle + 
0.13783214631264 * Marital_StatusTogether ;
661332    +   H12  = H12  +    -0.00304373365465 * Marital_StatusDivorced
661333    +          +    -0.16741351681675 * Marital_StatusMarried
661334    +          +      0.0768369461222 * Marital_StatusSingle
661335    +          +    -0.24741602840563 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.00304373365465 * Marital_StatusDivorced + 
-0.16741351681675 * Marital_StatusMarried + 0.0768369461222 * Marital_StatusSingle + 
-0.24741602840563 * Marital_StatusTogether ;
661336    +   H13  = H13  +     0.30534805329266 * Marital_StatusDivorced
661337    +          +    -0.85130030031409 * Marital_StatusMarried
661338    +          +     0.57365531089483 * Marital_StatusSingle
661339    +          +    -0.94902600797801 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.30534805329266 * Marital_StatusDivorced + 
-0.85130030031409 * Marital_StatusMarried + 0.57365531089483 * Marital_StatusSingle + 
-0.94902600797801 * Marital_StatusTogether ;
661340    +   H14  = H14  +     0.13923025215159 * Marital_StatusDivorced
661341    +          +    -0.10273688858818 * Marital_StatusMarried
661342    +          +     0.37267011958223 * Marital_StatusSingle
661343    +          +    -0.03704936024152 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.13923025215159 * Marital_StatusDivorced + 
-0.10273688858818 * Marital_StatusMarried + 0.37267011958223 * Marital_StatusSingle + 
-0.03704936024152 * Marital_StatusTogether ;
661344    +   H15  = H15  +     -0.1497917828097 * Marital_StatusDivorced
661345    +          +    -0.12309472866952 * Marital_StatusMarried
661346    +          +      0.0895004316905 * Marital_StatusSingle
661347    +          +    -0.06693333133964 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.1497917828097 * Marital_StatusDivorced + 
-0.12309472866952 * Marital_StatusMarried + 0.0895004316905 * Marital_StatusSingle + 
-0.06693333133964 * Marital_StatusTogether ;
661348    +   H11  =    -0.25731444426672 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.25731444426672 + H11 ;
661349    +   H12  =     0.87003179402118 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.87003179402118 + H12 ;
661350    +   H13  =     0.90055724527443 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.90055724527443 + H13 ;
661351    +   H14  =    -0.88878585940926 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.88878585940926 + H14 ;
661352    +   H15  =    -1.06135597773699 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -1.06135597773699 + H15 ;
661353    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
661354    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
661355    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
661356    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
661357    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
661358    +END;
MPRINT(EM_DIAGRAM):   END;
661359    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
661360    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
661361    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
661362    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
661363    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
661364    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
661365    +END;
MPRINT(EM_DIAGRAM):   END;
661366    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
661367    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
661368    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
661369    +
661370    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
661371    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
661372    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
661373    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
661374    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
661375    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
661376    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
661377    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
661378    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
661379    +end;
MPRINT(EM_DIAGRAM):   end;
661380    +else do;
MPRINT(EM_DIAGRAM):   else do;
661381    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
661382    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
661383    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
661384    +   end;
MPRINT(EM_DIAGRAM):   end;
661385    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
661386    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
661387    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
661388    +   end;
MPRINT(EM_DIAGRAM):   end;
661389    +   else do;
MPRINT(EM_DIAGRAM):   else do;
661390    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
661391    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
661392    +   end;
MPRINT(EM_DIAGRAM):   end;
661393    +end;
MPRINT(EM_DIAGRAM):   end;
661394    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
661395    +   P_DepVar1  =    -2.23627327600133 * H11  +    -5.23001272777429 * H12
661396    +          +     3.61561162996052 * H13  +     4.27940030557467 * H14
661397    +          +     0.95777699944459 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.23627327600133 * H11 + -5.23001272777429 * H12 + 
3.61561162996052 * H13 + 4.27940030557467 * H14 + 0.95777699944459 * H15 ;
661398    +   P_DepVar1  =    -1.37696256001086 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.37696256001086 + P_DepVar1 ;
661399    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
661400    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
661401    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
661402    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
661403    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
661404    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
661405    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
661406    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
661407    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
661408    +END;
MPRINT(EM_DIAGRAM):   END;
661409    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
661410    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
661411    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
661412    +END;
MPRINT(EM_DIAGRAM):   END;
661413    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
661414    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
661415    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
661416    +END;
MPRINT(EM_DIAGRAM):   END;
661417    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
661418    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
661419    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
661420    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
661421    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
661422    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
661423    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
661424    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
661425    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
661426    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
661427    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
661428    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
661429    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
661430    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
661431    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
661432    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
661433    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
661434    +END;
MPRINT(EM_DIAGRAM):   END;
661435    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
661436    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
661437    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
661438    +drop
661439    +H11
661440    +H12
661441    +H13
661442    +H14
661443    +H15
661444    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
661445    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
661446    +* Renaming variables for Neural7;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural7;
661447    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
661448    +* Renaming Posterior variables for Neural7;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural7;
661449    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
661450    +drop Neural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural7_P_DepVar1;
661451    +Neural7_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural7_P_DepVar1 = P_DepVar1;
661452    +drop Neural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural7_P_DepVar0;
661453    +Neural7_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural7_P_DepVar0 = P_DepVar0;
661454    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
661455    +* Renaming _WARN_ variable for Neural7;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural7;
661456    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
661457    +length Neural7_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural7_WARN_ $4;
661458    +drop Neural7_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural7_WARN_;
661459    +Neural7_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural7_WARN_ = _WARN_;
661460    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
661461    +* Ensmbl: Scoring Code of model 8 of 9;
MPRINT(EM_DIAGRAM):   * Ensmbl: Scoring Code of model 8 of 9;
661462    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
661463    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
661464    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
661465    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
661466    +* NODE: Neural9;
MPRINT(EM_DIAGRAM):   * NODE: Neural9;
661467    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
661468    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
661469    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
661470    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
661471    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
661472    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
661473    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
661474    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
661475    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
661476    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
661477    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
661478    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
661479    +LENGTH _WARN_ $4
661480    +      F_DepVar  $ 12
661481    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
661482    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
661483    +
661484    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
661485    +
661486    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
661487    +
661488    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
661489    +
661490    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
661491    +
661492    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
661493    +
661494    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
661495    +
661496    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
661497    +
661498    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
661499    +
661500    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
661501    +
661502    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
661503    +
661504    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
661505    +
661506    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
661507    +
661508    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
661509    +
661510    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
661511    +
661512    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
661513    +
661514    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
661515    +
661516    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
661517    +
661518    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
661519    +
661520    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
661521    +
661522    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
661523    +
661524    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
661525    +
661526    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
661527    +
661528    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
661529    +
661530    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
661531    +
661532    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
661533    +
661534    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
661535    +
661536    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
661537    +
661538    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
661539    +
661540    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
661541    +
661542    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
661543    +
661544    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
661545    +
661546    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
661547    +
661548    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
661549    +
661550    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
661551    +
661552    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
661553    +
661554    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
661555    +
661556    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
661557    +
661558    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
661559    +
661560    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
661561    +
661562    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
661563    +
661564    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
661565    +
661566    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
661567    +
661568    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
661569    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
661570    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
661571    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
661572    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
661573    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
661574    +end;
MPRINT(EM_DIAGRAM):   end;
661575    +else do;
MPRINT(EM_DIAGRAM):   else do;
661576    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
661577    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
661578    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
661579    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
661580    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
661581    +   end;
MPRINT(EM_DIAGRAM):   end;
661582    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
661583    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
661584    +   end;
MPRINT(EM_DIAGRAM):   end;
661585    +   else do;
MPRINT(EM_DIAGRAM):   else do;
661586    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
661587    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
661588    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
661589    +   end;
MPRINT(EM_DIAGRAM):   end;
661590    +end;
MPRINT(EM_DIAGRAM):   end;
661591    +
661592    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
661593    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
661594    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
661595    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
661596    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
661597    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
661598    +end;
MPRINT(EM_DIAGRAM):   end;
661599    +else do;
MPRINT(EM_DIAGRAM):   else do;
661600    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
661601    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
661602    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
661603    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
661604    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
661605    +   end;
MPRINT(EM_DIAGRAM):   end;
661606    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
661607    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
661608    +   end;
MPRINT(EM_DIAGRAM):   end;
661609    +   else do;
MPRINT(EM_DIAGRAM):   else do;
661610    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
661611    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
661612    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
661613    +   end;
MPRINT(EM_DIAGRAM):   end;
661614    +end;
MPRINT(EM_DIAGRAM):   end;
661615    +
661616    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
661617    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
661618    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
661619    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
661620    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
661621    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
661622    +end;
MPRINT(EM_DIAGRAM):   end;
661623    +else do;
MPRINT(EM_DIAGRAM):   else do;
661624    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
661625    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
661626    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
661627    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
661628    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
661629    +   end;
MPRINT(EM_DIAGRAM):   end;
661630    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
661631    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
661632    +   end;
MPRINT(EM_DIAGRAM):   end;
661633    +   else do;
MPRINT(EM_DIAGRAM):   else do;
661634    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
661635    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
661636    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
661637    +   end;
MPRINT(EM_DIAGRAM):   end;
661638    +end;
MPRINT(EM_DIAGRAM):   end;
661639    +
661640    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
661641    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
661642    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
661643    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
661644    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
661645    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
661646    +end;
MPRINT(EM_DIAGRAM):   end;
661647    +else do;
MPRINT(EM_DIAGRAM):   else do;
661648    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
661649    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
661650    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
661651    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
661652    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
661653    +   end;
MPRINT(EM_DIAGRAM):   end;
661654    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
661655    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
661656    +   end;
MPRINT(EM_DIAGRAM):   end;
661657    +   else do;
MPRINT(EM_DIAGRAM):   else do;
661658    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
661659    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
661660    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
661661    +   end;
MPRINT(EM_DIAGRAM):   end;
661662    +end;
MPRINT(EM_DIAGRAM):   end;
661663    +
661664    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
661665    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
661666    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
661667    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
661668    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
661669    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
661670    +end;
MPRINT(EM_DIAGRAM):   end;
661671    +else do;
MPRINT(EM_DIAGRAM):   else do;
661672    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
661673    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
661674    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
661675    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
661676    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
661677    +   end;
MPRINT(EM_DIAGRAM):   end;
661678    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
661679    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
661680    +   end;
MPRINT(EM_DIAGRAM):   end;
661681    +   else do;
MPRINT(EM_DIAGRAM):   else do;
661682    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
661683    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
661684    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
661685    +   end;
MPRINT(EM_DIAGRAM):   end;
661686    +end;
MPRINT(EM_DIAGRAM):   end;
661687    +
661688    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
661689    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
661690    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
661691    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
661692    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
661693    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
661694    +end;
MPRINT(EM_DIAGRAM):   end;
661695    +else do;
MPRINT(EM_DIAGRAM):   else do;
661696    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
661697    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
661698    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
661699    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
661700    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
661701    +   end;
MPRINT(EM_DIAGRAM):   end;
661702    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
661703    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
661704    +   end;
MPRINT(EM_DIAGRAM):   end;
661705    +   else do;
MPRINT(EM_DIAGRAM):   else do;
661706    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
661707    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
661708    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
661709    +   end;
MPRINT(EM_DIAGRAM):   end;
661710    +end;
MPRINT(EM_DIAGRAM):   end;
661711    +
661712    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
661713    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
661714    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
661715    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
661716    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
661717    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
661718    +end;
MPRINT(EM_DIAGRAM):   end;
661719    +else do;
MPRINT(EM_DIAGRAM):   else do;
661720    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
661721    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
661722    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
661723    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
661724    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
661725    +   end;
MPRINT(EM_DIAGRAM):   end;
661726    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
661727    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
661728    +   end;
MPRINT(EM_DIAGRAM):   end;
661729    +   else do;
MPRINT(EM_DIAGRAM):   else do;
661730    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
661731    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
661732    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
661733    +   end;
MPRINT(EM_DIAGRAM):   end;
661734    +end;
MPRINT(EM_DIAGRAM):   end;
661735    +
661736    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
661737    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
661738    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
661739    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
661740    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
661741    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
661742    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
661743    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
661744    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
661745    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
661746    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
661747    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
661748    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
661749    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
661750    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
661751    +end;
MPRINT(EM_DIAGRAM):   end;
661752    +else do;
MPRINT(EM_DIAGRAM):   else do;
661753    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
661754    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
661755    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
661756    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
661757    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
661758    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
661759    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
661760    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
661761    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
661762    +         end;
MPRINT(EM_DIAGRAM):   end;
661763    +         else do;
MPRINT(EM_DIAGRAM):   else do;
661764    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
661765    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
661766    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
661767    +            end;
MPRINT(EM_DIAGRAM):   end;
661768    +         end;
MPRINT(EM_DIAGRAM):   end;
661769    +      end;
MPRINT(EM_DIAGRAM):   end;
661770    +      else do;
MPRINT(EM_DIAGRAM):   else do;
661771    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
661772    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
661773    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
661774    +         end;
MPRINT(EM_DIAGRAM):   end;
661775    +      end;
MPRINT(EM_DIAGRAM):   end;
661776    +   end;
MPRINT(EM_DIAGRAM):   end;
661777    +   else do;
MPRINT(EM_DIAGRAM):   else do;
661778    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
661779    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
661780    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
661781    +      end;
MPRINT(EM_DIAGRAM):   end;
661782    +      else do;
MPRINT(EM_DIAGRAM):   else do;
661783    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
661784    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
661785    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
661786    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
661787    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
661788    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
661789    +         end;
MPRINT(EM_DIAGRAM):   end;
661790    +      end;
MPRINT(EM_DIAGRAM):   end;
661791    +   end;
MPRINT(EM_DIAGRAM):   end;
661792    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
661793    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
661794    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
661795    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
661796    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
661797    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
661798    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
661799    +   end;
MPRINT(EM_DIAGRAM):   end;
661800    +end;
MPRINT(EM_DIAGRAM):   end;
661801    +
661802    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
661803    +*** Checking missing input Interval
661804    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
661805    +
661806    +IF NMISS(
661807    +   AcceptedCmpTotal ,
661808    +   Kidhome ,
661809    +   Mnt ,
661810    +   MntFishProducts ,
661811    +   MntFruits ,
661812    +   MntGoldProds ,
661813    +   MntMeatProducts ,
661814    +   MntSweetProducts ,
661815    +   MntWines ,
661816    +   NumCatalogPurchases ,
661817    +   NumDealsPurchases ,
661818    +   NumDistPurchases ,
661819    +   NumStorePurchases ,
661820    +   NumWebPurchases ,
661821    +   NumWebVisitsMonth ,
661822    +   RFMstat ,
661823    +   Recency ,
661824    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Kidhome , Mnt , MntFishProducts , MntFruits 
, MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , 
NumDealsPurchases , NumDistPurchases , NumStorePurchases , NumWebPurchases , NumWebVisitsMonth 
, RFMstat , Recency , Teenhome ) THEN DO;
661825    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
661826    +
661827    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
661828    +END;
MPRINT(EM_DIAGRAM):   END;
661829    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
661830    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
661831    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
661832    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
661833    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
661834    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
661835    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
661836    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
661837    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
661838    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
661839    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
661840    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
661841    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
661842    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
661843    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
661844    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
661845    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
661846    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
661847    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
661848    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
661849    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
661850    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
661851    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
661852    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
661853    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
661854    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
661855    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
661856    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
661857    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
661858    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
661859    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
661860    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
661861    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
661862    +END;
MPRINT(EM_DIAGRAM):   END;
661863    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
661864    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
661865    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
661866    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
661867    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
661868    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
661869    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
661870    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
661871    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
661872    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
661873    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
661874    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
661875    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
661876    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
661877    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
661878    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
661879    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
661880    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
661881    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
661882    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
661883    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
661884    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
661885    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
661886    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
661887    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
661888    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
661889    +   ELSE S_NumCatalogPurchases
661890    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
661891    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
661892    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
661893    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
661894    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
661895    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
661896    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
661897    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
661898    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
661899    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
661900    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
661901    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
661902    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
661903    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
661904    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
661905    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
661906    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
661907    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
661908    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
661909    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
661910    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
661911    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
661912    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
661913    +END;
MPRINT(EM_DIAGRAM):   END;
661914    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
661915    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
661916    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
661917    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
661918    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
661919    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
661920    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
661921    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
661922    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
661923    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
661924    +   H11  =     0.43912775344039 * S_AcceptedCmpTotal  +     0.15324285507227 *
661925    +        S_Kidhome  +     0.02569219772928 * S_Mnt  +     0.22132183806169 *
661926    +        S_MntFishProducts  +    -0.06337563896219 * S_MntFruits
661927    +          +      0.0657331004553 * S_MntGoldProds  +     0.80090124687167 *
661928    +        S_MntMeatProducts  +     0.09182621620999 * S_MntSweetProducts
661929    +          +    -0.41629315832186 * S_MntWines  +     0.39665915225092 *
661930    +        S_NumCatalogPurchases  +     0.35456089035071 * S_NumDealsPurchases
661931    +          +     0.24337801999461 * S_NumDistPurchases
661932    +          +    -0.81198839661616 * S_NumStorePurchases
661933    +          +    -0.41689687433747 * S_NumWebPurchases
661934    +          +     0.48849235469028 * S_NumWebVisitsMonth
661935    +          +     0.27825597215948 * S_RFMstat  +    -0.88374261044519 *
661936    +        S_Recency  +    -0.02773716219523 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.43912775344039 * S_AcceptedCmpTotal + 0.15324285507227 * 
S_Kidhome + 0.02569219772928 * S_Mnt + 0.22132183806169 * S_MntFishProducts + 
-0.06337563896219 * S_MntFruits + 0.0657331004553 * S_MntGoldProds + 0.80090124687167 * 
S_MntMeatProducts + 0.09182621620999 * S_MntSweetProducts + -0.41629315832186 * S_MntWines + 
0.39665915225092 * S_NumCatalogPurchases + 0.35456089035071 * S_NumDealsPurchases + 
0.24337801999461 * S_NumDistPurchases + -0.81198839661616 * S_NumStorePurchases + 
-0.41689687433747 * S_NumWebPurchases + 0.48849235469028 * S_NumWebVisitsMonth + 
0.27825597215948 * S_RFMstat + -0.88374261044519 * S_Recency + -0.02773716219523 * S_Teenhome ;
661937    +   H12  =     0.07434104162353 * S_AcceptedCmpTotal  +    -0.03195098726594 *
661938    +        S_Kidhome  +     0.01543386863542 * S_Mnt  +     0.12485525017443 *
661939    +        S_MntFishProducts  +    -0.30946247800427 * S_MntFruits
661940    +          +    -0.01203402973786 * S_MntGoldProds  +     0.63100948725324 *
661941    +        S_MntMeatProducts  +    -0.22236382332547 * S_MntSweetProducts
661942    +          +    -0.34774748026941 * S_MntWines  +     0.44473136951588 *
661943    +        S_NumCatalogPurchases  +     0.62678568949617 * S_NumDealsPurchases
661944    +          +    -0.31385132988744 * S_NumDistPurchases
661945    +          +    -0.40280836861804 * S_NumStorePurchases
661946    +          +    -0.48794669697044 * S_NumWebPurchases
661947    +          +     0.72338984901279 * S_NumWebVisitsMonth
661948    +          +     0.23547214976166 * S_RFMstat  +     -0.6164747614748 *
661949    +        S_Recency  +     0.04790780856477 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.07434104162353 * S_AcceptedCmpTotal + -0.03195098726594 * 
S_Kidhome + 0.01543386863542 * S_Mnt + 0.12485525017443 * S_MntFishProducts + 
-0.30946247800427 * S_MntFruits + -0.01203402973786 * S_MntGoldProds + 0.63100948725324 * 
S_MntMeatProducts + -0.22236382332547 * S_MntSweetProducts + -0.34774748026941 * S_MntWines + 
0.44473136951588 * S_NumCatalogPurchases + 0.62678568949617 * S_NumDealsPurchases + 
-0.31385132988744 * S_NumDistPurchases + -0.40280836861804 * S_NumStorePurchases + 
-0.48794669697044 * S_NumWebPurchases + 0.72338984901279 * S_NumWebVisitsMonth + 
0.23547214976166 * S_RFMstat + -0.6164747614748 * S_Recency + 0.04790780856477 * S_Teenhome ;
661950    +   H13  =    -0.63820214578159 * S_AcceptedCmpTotal  +     0.49904086064338 *
661951    +        S_Kidhome  +     0.13139593987479 * S_Mnt  +     0.18642565416238 *
661952    +        S_MntFishProducts  +     0.14097505415753 * S_MntFruits
661953    +          +    -0.06937869906897 * S_MntGoldProds  +    -0.44490405662638 *
661954    +        S_MntMeatProducts  +     0.03747875754721 * S_MntSweetProducts
661955    +          +     0.61023960214888 * S_MntWines  +    -0.66633431715473 *
661956    +        S_NumCatalogPurchases  +    -0.17986683579301 * S_NumDealsPurchases
661957    +          +    -0.22919354561837 * S_NumDistPurchases
661958    +          +     0.48900512750371 * S_NumStorePurchases
661959    +          +     0.63563236542104 * S_NumWebPurchases
661960    +          +    -1.24241302949211 * S_NumWebVisitsMonth
661961    +          +    -0.04477686111233 * S_RFMstat  +      1.2888939271922 *
661962    +        S_Recency  +      0.4139068327639 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.63820214578159 * S_AcceptedCmpTotal + 0.49904086064338 * 
S_Kidhome + 0.13139593987479 * S_Mnt + 0.18642565416238 * S_MntFishProducts + 0.14097505415753 
* S_MntFruits + -0.06937869906897 * S_MntGoldProds + -0.44490405662638 * S_MntMeatProducts + 
0.03747875754721 * S_MntSweetProducts + 0.61023960214888 * S_MntWines + -0.66633431715473 * 
S_NumCatalogPurchases + -0.17986683579301 * S_NumDealsPurchases + -0.22919354561837 * 
S_NumDistPurchases + 0.48900512750371 * S_NumStorePurchases + 0.63563236542104 * 
S_NumWebPurchases + -1.24241302949211 * S_NumWebVisitsMonth + -0.04477686111233 * S_RFMstat + 
1.2888939271922 * S_Recency + 0.4139068327639 * S_Teenhome ;
661963    +   H14  =     0.48105826056294 * S_AcceptedCmpTotal  +    -0.42248585066001 *
661964    +        S_Kidhome  +    -0.07174155418099 * S_Mnt  +    -0.42778960343462 *
661965    +        S_MntFishProducts  +     0.09779975165182 * S_MntFruits
661966    +          +     0.02450574144035 * S_MntGoldProds  +     0.84681198347991 *
661967    +        S_MntMeatProducts  +    -0.23934138256418 * S_MntSweetProducts
661968    +          +     0.10825550313301 * S_MntWines  +     0.13496669006169 *
661969    +        S_NumCatalogPurchases  +    -0.07641504001178 * S_NumDealsPurchases
661970    +          +     0.57486886714013 * S_NumDistPurchases
661971    +          +    -0.01439167006681 * S_NumStorePurchases
661972    +          +    -0.22502024795489 * S_NumWebPurchases
661973    +          +     0.31403814101947 * S_NumWebVisitsMonth
661974    +          +     0.06121982713427 * S_RFMstat  +    -0.66476823891241 *
661975    +        S_Recency  +     -0.4404721787316 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.48105826056294 * S_AcceptedCmpTotal + -0.42248585066001 * 
S_Kidhome + -0.07174155418099 * S_Mnt + -0.42778960343462 * S_MntFishProducts + 
0.09779975165182 * S_MntFruits + 0.02450574144035 * S_MntGoldProds + 0.84681198347991 * 
S_MntMeatProducts + -0.23934138256418 * S_MntSweetProducts + 0.10825550313301 * S_MntWines + 
0.13496669006169 * S_NumCatalogPurchases + -0.07641504001178 * S_NumDealsPurchases + 
0.57486886714013 * S_NumDistPurchases + -0.01439167006681 * S_NumStorePurchases + 
-0.22502024795489 * S_NumWebPurchases + 0.31403814101947 * S_NumWebVisitsMonth + 
0.06121982713427 * S_RFMstat + -0.66476823891241 * S_Recency + -0.4404721787316 * S_Teenhome ;
661976    +   H15  =    -0.01000128129385 * S_AcceptedCmpTotal  +     0.06375204613433 *
661977    +        S_Kidhome  +    -0.05376216682906 * S_Mnt  +    -0.08473670073828 *
661978    +        S_MntFishProducts  +     0.13371751007328 * S_MntFruits
661979    +          +     0.11259736161219 * S_MntGoldProds  +     0.03735647266983 *
661980    +        S_MntMeatProducts  +    -0.12544959729848 * S_MntSweetProducts
661981    +          +     0.17571980400351 * S_MntWines  +    -0.09289650416254 *
661982    +        S_NumCatalogPurchases  +    -0.13579396915412 * S_NumDealsPurchases
661983    +          +    -0.18997260805501 * S_NumDistPurchases
661984    +          +     0.29468211427777 * S_NumStorePurchases
661985    +          +     0.17132038178189 * S_NumWebPurchases
661986    +          +    -0.19708361532263 * S_NumWebVisitsMonth
661987    +          +     0.38006918721363 * S_RFMstat  +     0.23377164556017 *
661988    +        S_Recency  +    -0.00205417580177 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.01000128129385 * S_AcceptedCmpTotal + 0.06375204613433 * 
S_Kidhome + -0.05376216682906 * S_Mnt + -0.08473670073828 * S_MntFishProducts + 
0.13371751007328 * S_MntFruits + 0.11259736161219 * S_MntGoldProds + 0.03735647266983 * 
S_MntMeatProducts + -0.12544959729848 * S_MntSweetProducts + 0.17571980400351 * S_MntWines + 
-0.09289650416254 * S_NumCatalogPurchases + -0.13579396915412 * S_NumDealsPurchases + 
-0.18997260805501 * S_NumDistPurchases + 0.29468211427777 * S_NumStorePurchases + 
0.17132038178189 * S_NumWebPurchases + -0.19708361532263 * S_NumWebVisitsMonth + 
0.38006918721363 * S_RFMstat + 0.23377164556017 * S_Recency + -0.00205417580177 * S_Teenhome ;
661989    +   H16  =     0.17294085934065 * S_AcceptedCmpTotal  +    -0.39698389286699 *
661990    +        S_Kidhome  +    -0.13545797896515 * S_Mnt  +    -0.12002803153381 *
661991    +        S_MntFishProducts  +    -0.11507127001045 * S_MntFruits
661992    +          +    -0.12266840134948 * S_MntGoldProds  +    -0.45452045159312 *
661993    +        S_MntMeatProducts  +     0.00553267509866 * S_MntSweetProducts
661994    +          +    -0.15768353487074 * S_MntWines  +    -0.72223742588038 *
661995    +        S_NumCatalogPurchases  +    -0.42741922123767 * S_NumDealsPurchases
661996    +          +    -0.74097227246314 * S_NumDistPurchases
661997    +          +     0.06550389451608 * S_NumStorePurchases
661998    +          +     0.23777098322244 * S_NumWebPurchases
661999    +          +    -0.14585163604726 * S_NumWebVisitsMonth
662000    +          +    -0.39028525061866 * S_RFMstat  +     0.07130869316282 *
662001    +        S_Recency  +    -0.00401659472541 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = 0.17294085934065 * S_AcceptedCmpTotal + -0.39698389286699 * 
S_Kidhome + -0.13545797896515 * S_Mnt + -0.12002803153381 * S_MntFishProducts + 
-0.11507127001045 * S_MntFruits + -0.12266840134948 * S_MntGoldProds + -0.45452045159312 * 
S_MntMeatProducts + 0.00553267509866 * S_MntSweetProducts + -0.15768353487074 * S_MntWines + 
-0.72223742588038 * S_NumCatalogPurchases + -0.42741922123767 * S_NumDealsPurchases + 
-0.74097227246314 * S_NumDistPurchases + 0.06550389451608 * S_NumStorePurchases + 
0.23777098322244 * S_NumWebPurchases + -0.14585163604726 * S_NumWebVisitsMonth + 
-0.39028525061866 * S_RFMstat + 0.07130869316282 * S_Recency + -0.00401659472541 * S_Teenhome ;
662002    +   H11  = H11  +    -0.02007476396722 * AcceptedCmp10
662003    +          +     0.09720288796707 * AcceptedCmp20  +     0.11205658872251 *
662004    +        AcceptedCmp30  +    -0.13511778770753 * AcceptedCmp40
662005    +          +    -0.26504356137187 * AcceptedCmp50  +     0.03201227673285 *
662006    +        Complain0  +    -0.15566647786045 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.02007476396722 * AcceptedCmp10 + 0.09720288796707 * 
AcceptedCmp20 + 0.11205658872251 * AcceptedCmp30 + -0.13511778770753 * AcceptedCmp40 + 
-0.26504356137187 * AcceptedCmp50 + 0.03201227673285 * Complain0 + -0.15566647786045 * 
HigherEducationBinary0 ;
662007    +   H12  = H12  +    -0.52595746088087 * AcceptedCmp10
662008    +          +    -0.15041757209085 * AcceptedCmp20  +    -0.48938205246808 *
662009    +        AcceptedCmp30  +     -0.1982121209098 * AcceptedCmp40
662010    +          +    -0.45745206981227 * AcceptedCmp50  +    -0.24421059586296 *
662011    +        Complain0  +     -0.0372485515029 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.52595746088087 * AcceptedCmp10 + -0.15041757209085 * 
AcceptedCmp20 + -0.48938205246808 * AcceptedCmp30 + -0.1982121209098 * AcceptedCmp40 + 
-0.45745206981227 * AcceptedCmp50 + -0.24421059586296 * Complain0 + -0.0372485515029 * 
HigherEducationBinary0 ;
662012    +   H13  = H13  +    -0.02992554536875 * AcceptedCmp10
662013    +          +     0.20420421321169 * AcceptedCmp20  +     0.17676273529469 *
662014    +        AcceptedCmp30  +     -0.1875050368358 * AcceptedCmp40
662015    +          +     0.44580716573032 * AcceptedCmp50  +     -0.3702812451724 *
662016    +        Complain0  +     0.07192397780717 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.02992554536875 * AcceptedCmp10 + 0.20420421321169 * 
AcceptedCmp20 + 0.17676273529469 * AcceptedCmp30 + -0.1875050368358 * AcceptedCmp40 + 
0.44580716573032 * AcceptedCmp50 + -0.3702812451724 * Complain0 + 0.07192397780717 * 
HigherEducationBinary0 ;
662017    +   H14  = H14  +    -0.24903976363288 * AcceptedCmp10
662018    +          +    -0.33252849654907 * AcceptedCmp20  +    -0.01800268234049 *
662019    +        AcceptedCmp30  +    -0.24627514089072 * AcceptedCmp40
662020    +          +    -0.00915156624914 * AcceptedCmp50  +    -0.05033360712883 *
662021    +        Complain0  +      0.3339375399643 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.24903976363288 * AcceptedCmp10 + -0.33252849654907 * 
AcceptedCmp20 + -0.01800268234049 * AcceptedCmp30 + -0.24627514089072 * AcceptedCmp40 + 
-0.00915156624914 * AcceptedCmp50 + -0.05033360712883 * Complain0 + 0.3339375399643 * 
HigherEducationBinary0 ;
662022    +   H15  = H15  +    -0.27519938462786 * AcceptedCmp10
662023    +          +     0.07731721526247 * AcceptedCmp20  +     0.14906574971325 *
662024    +        AcceptedCmp30  +     0.13255042650483 * AcceptedCmp40
662025    +          +    -0.02940483359408 * AcceptedCmp50  +     0.13352278200648 *
662026    +        Complain0  +     0.08170186393964 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.27519938462786 * AcceptedCmp10 + 0.07731721526247 * 
AcceptedCmp20 + 0.14906574971325 * AcceptedCmp30 + 0.13255042650483 * AcceptedCmp40 + 
-0.02940483359408 * AcceptedCmp50 + 0.13352278200648 * Complain0 + 0.08170186393964 * 
HigherEducationBinary0 ;
662027    +   H16  = H16  +     0.10529304585202 * AcceptedCmp10
662028    +          +     0.31213134788133 * AcceptedCmp20  +     0.30084869783987 *
662029    +        AcceptedCmp30  +    -0.01118871464539 * AcceptedCmp40
662030    +          +    -0.04086250638732 * AcceptedCmp50  +    -0.07837727874375 *
662031    +        Complain0  +     0.12138365487453 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.10529304585202 * AcceptedCmp10 + 0.31213134788133 * 
AcceptedCmp20 + 0.30084869783987 * AcceptedCmp30 + -0.01118871464539 * AcceptedCmp40 + 
-0.04086250638732 * AcceptedCmp50 + -0.07837727874375 * Complain0 + 0.12138365487453 * 
HigherEducationBinary0 ;
662032    +   H11  = H11  +     0.37637396661146 * Marital_StatusDivorced
662033    +          +    -0.26467919055845 * Marital_StatusMarried
662034    +          +     -0.0147004493608 * Marital_StatusSingle
662035    +          +    -0.34554452729743 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.37637396661146 * Marital_StatusDivorced + 
-0.26467919055845 * Marital_StatusMarried + -0.0147004493608 * Marital_StatusSingle + 
-0.34554452729743 * Marital_StatusTogether ;
662036    +   H12  = H12  +    -0.02293194383383 * Marital_StatusDivorced
662037    +          +     0.22656143769796 * Marital_StatusMarried
662038    +          +     -0.2497880429053 * Marital_StatusSingle
662039    +          +     0.00744194900473 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.02293194383383 * Marital_StatusDivorced + 
0.22656143769796 * Marital_StatusMarried + -0.2497880429053 * Marital_StatusSingle + 
0.00744194900473 * Marital_StatusTogether ;
662040    +   H13  = H13  +    -0.08040527368027 * Marital_StatusDivorced
662041    +          +     0.70834351124371 * Marital_StatusMarried
662042    +          +    -0.79585819567656 * Marital_StatusSingle
662043    +          +     0.83850839024957 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.08040527368027 * Marital_StatusDivorced + 
0.70834351124371 * Marital_StatusMarried + -0.79585819567656 * Marital_StatusSingle + 
0.83850839024957 * Marital_StatusTogether ;
662044    +   H14  = H14  +     0.05889234585558 * Marital_StatusDivorced
662045    +          +    -0.94141743088603 * Marital_StatusMarried
662046    +          +     0.86423540784285 * Marital_StatusSingle
662047    +          +     -0.6260719130207 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.05889234585558 * Marital_StatusDivorced + 
-0.94141743088603 * Marital_StatusMarried + 0.86423540784285 * Marital_StatusSingle + 
-0.6260719130207 * Marital_StatusTogether ;
662048    +   H15  = H15  +     0.19106392110706 * Marital_StatusDivorced
662049    +          +    -0.18189885719847 * Marital_StatusMarried
662050    +          +     0.36145162549083 * Marital_StatusSingle
662051    +          +    -0.26654643410008 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.19106392110706 * Marital_StatusDivorced + 
-0.18189885719847 * Marital_StatusMarried + 0.36145162549083 * Marital_StatusSingle + 
-0.26654643410008 * Marital_StatusTogether ;
662052    +   H16  = H16  +     0.08265128366103 * Marital_StatusDivorced
662053    +          +    -0.52831758614523 * Marital_StatusMarried
662054    +          +    -0.12671844940828 * Marital_StatusSingle
662055    +          +    -0.43605855534313 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.08265128366103 * Marital_StatusDivorced + 
-0.52831758614523 * Marital_StatusMarried + -0.12671844940828 * Marital_StatusSingle + 
-0.43605855534313 * Marital_StatusTogether ;
662056    +   H11  =     -1.3276216013071 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.3276216013071 + H11 ;
662057    +   H12  =    -0.00525373429217 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.00525373429217 + H12 ;
662058    +   H13  =     0.30688582916965 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.30688582916965 + H13 ;
662059    +   H14  =    -1.32677970876573 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -1.32677970876573 + H14 ;
662060    +   H15  =      0.7399814373424 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.7399814373424 + H15 ;
662061    +   H16  =    -1.64568358786672 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.64568358786672 + H16 ;
662062    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
662063    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
662064    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
662065    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
662066    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
662067    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
662068    +END;
MPRINT(EM_DIAGRAM):   END;
662069    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
662070    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
662071    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
662072    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
662073    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
662074    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
662075    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
662076    +END;
MPRINT(EM_DIAGRAM):   END;
662077    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
662078    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
662079    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
662080    +
662081    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
662082    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
662083    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
662084    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
662085    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
662086    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
662087    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
662088    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
662089    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
662090    +end;
MPRINT(EM_DIAGRAM):   end;
662091    +else do;
MPRINT(EM_DIAGRAM):   else do;
662092    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
662093    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
662094    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
662095    +   end;
MPRINT(EM_DIAGRAM):   end;
662096    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
662097    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
662098    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
662099    +   end;
MPRINT(EM_DIAGRAM):   end;
662100    +   else do;
MPRINT(EM_DIAGRAM):   else do;
662101    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
662102    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
662103    +   end;
MPRINT(EM_DIAGRAM):   end;
662104    +end;
MPRINT(EM_DIAGRAM):   end;
662105    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
662106    +   P_DepVar1  =     1.40410400811948 * H11  +      1.6065080260622 * H12
662107    +          +    -2.28029439254425 * H13  +     2.12025707381767 * H14
662108    +          +    -0.28698895635258 * H15  +    -1.55666643166016 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.40410400811948 * H11 + 1.6065080260622 * H12 + 
-2.28029439254425 * H13 + 2.12025707381767 * H14 + -0.28698895635258 * H15 + -1.55666643166016 
* H16 ;
662109    +   P_DepVar1  =    -1.08867940823404 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.08867940823404 + P_DepVar1 ;
662110    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
662111    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
662112    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
662113    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
662114    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
662115    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
662116    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
662117    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
662118    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
662119    +END;
MPRINT(EM_DIAGRAM):   END;
662120    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
662121    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
662122    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
662123    +END;
MPRINT(EM_DIAGRAM):   END;
662124    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
662125    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
662126    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
662127    +END;
MPRINT(EM_DIAGRAM):   END;
662128    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
662129    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
662130    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
662131    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
662132    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
662133    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
662134    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
662135    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
662136    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
662137    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
662138    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
662139    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
662140    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
662141    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
662142    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
662143    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
662144    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
662145    +END;
MPRINT(EM_DIAGRAM):   END;
662146    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
662147    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
662148    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
662149    +drop
662150    +H11
662151    +H12
662152    +H13
662153    +H14
662154    +H15
662155    +H16
662156    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
662157    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
662158    +* Renaming variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural9;
662159    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
662160    +* Renaming Posterior variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural9;
662161    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
662162    +drop Neural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar1;
662163    +Neural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar1 = P_DepVar1;
662164    +drop Neural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar0;
662165    +Neural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar0 = P_DepVar0;
662166    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
662167    +* Renaming _WARN_ variable for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural9;
662168    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
662169    +length Neural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural9_WARN_ $4;
662170    +drop Neural9_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural9_WARN_;
662171    +Neural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural9_WARN_ = _WARN_;
662172    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
662173    +* Ensmbl: Scoring Code of model 9 of 9;
MPRINT(EM_DIAGRAM):   * Ensmbl: Scoring Code of model 9 of 9;
662174    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
662175    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
662176    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
662177    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
662178    +* NODE: Neural10;
MPRINT(EM_DIAGRAM):   * NODE: Neural10;
662179    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
662180    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
662181    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
662182    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
662183    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
662184    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
662185    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
662186    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
662187    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
662188    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
662189    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
662190    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
662191    +LENGTH _WARN_ $4
662192    +      F_DepVar  $ 12
662193    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
662194    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
662195    +
662196    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
662197    +
662198    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
662199    +
662200    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
662201    +
662202    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
662203    +
662204    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
662205    +
662206    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
662207    +
662208    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
662209    +
662210    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
662211    +
662212    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
662213    +
662214    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
662215    +
662216    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
662217    +
662218    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
662219    +
662220    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
662221    +
662222    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
662223    +
662224    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
662225    +
662226    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
662227    +
662228    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
662229    +
662230    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
662231    +
662232    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
662233    +
662234    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
662235    +
662236    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
662237    +
662238    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
662239    +
662240    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
662241    +
662242    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
662243    +
662244    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
662245    +
662246    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
662247    +
662248    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
662249    +
662250    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
662251    +
662252    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
662253    +
662254    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
662255    +
662256    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
662257    +
662258    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
662259    +
662260    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
662261    +
662262    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
662263    +
662264    +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
662265    +
662266    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
662267    +
662268    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
662269    +
662270    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
662271    +
662272    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
662273    +
662274    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
662275    +
662276    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
662277    +
662278    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
662279    +
662280    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
662281    +
662282    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
662283    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
662284    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
662285    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
662286    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
662287    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
662288    +end;
MPRINT(EM_DIAGRAM):   end;
662289    +else do;
MPRINT(EM_DIAGRAM):   else do;
662290    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
662291    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
662292    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
662293    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
662294    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
662295    +   end;
MPRINT(EM_DIAGRAM):   end;
662296    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
662297    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
662298    +   end;
MPRINT(EM_DIAGRAM):   end;
662299    +   else do;
MPRINT(EM_DIAGRAM):   else do;
662300    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
662301    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
662302    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
662303    +   end;
MPRINT(EM_DIAGRAM):   end;
662304    +end;
MPRINT(EM_DIAGRAM):   end;
662305    +
662306    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
662307    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
662308    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
662309    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
662310    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
662311    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
662312    +end;
MPRINT(EM_DIAGRAM):   end;
662313    +else do;
MPRINT(EM_DIAGRAM):   else do;
662314    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
662315    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
662316    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
662317    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
662318    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
662319    +   end;
MPRINT(EM_DIAGRAM):   end;
662320    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
662321    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
662322    +   end;
MPRINT(EM_DIAGRAM):   end;
662323    +   else do;
MPRINT(EM_DIAGRAM):   else do;
662324    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
662325    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
662326    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
662327    +   end;
MPRINT(EM_DIAGRAM):   end;
662328    +end;
MPRINT(EM_DIAGRAM):   end;
662329    +
662330    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
662331    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
662332    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
662333    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
662334    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
662335    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
662336    +end;
MPRINT(EM_DIAGRAM):   end;
662337    +else do;
MPRINT(EM_DIAGRAM):   else do;
662338    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
662339    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
662340    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
662341    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
662342    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
662343    +   end;
MPRINT(EM_DIAGRAM):   end;
662344    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
662345    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
662346    +   end;
MPRINT(EM_DIAGRAM):   end;
662347    +   else do;
MPRINT(EM_DIAGRAM):   else do;
662348    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
662349    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
662350    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
662351    +   end;
MPRINT(EM_DIAGRAM):   end;
662352    +end;
MPRINT(EM_DIAGRAM):   end;
662353    +
662354    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
662355    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
662356    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
662357    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
662358    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
662359    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
662360    +end;
MPRINT(EM_DIAGRAM):   end;
662361    +else do;
MPRINT(EM_DIAGRAM):   else do;
662362    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
662363    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
662364    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
662365    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
662366    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
662367    +   end;
MPRINT(EM_DIAGRAM):   end;
662368    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
662369    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
662370    +   end;
MPRINT(EM_DIAGRAM):   end;
662371    +   else do;
MPRINT(EM_DIAGRAM):   else do;
662372    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
662373    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
662374    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
662375    +   end;
MPRINT(EM_DIAGRAM):   end;
662376    +end;
MPRINT(EM_DIAGRAM):   end;
662377    +
662378    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
662379    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
662380    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
662381    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
662382    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
662383    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
662384    +end;
MPRINT(EM_DIAGRAM):   end;
662385    +else do;
MPRINT(EM_DIAGRAM):   else do;
662386    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
662387    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
662388    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
662389    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
662390    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
662391    +   end;
MPRINT(EM_DIAGRAM):   end;
662392    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
662393    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
662394    +   end;
MPRINT(EM_DIAGRAM):   end;
662395    +   else do;
MPRINT(EM_DIAGRAM):   else do;
662396    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
662397    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
662398    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
662399    +   end;
MPRINT(EM_DIAGRAM):   end;
662400    +end;
MPRINT(EM_DIAGRAM):   end;
662401    +
662402    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
662403    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
662404    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
662405    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
662406    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
662407    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
662408    +end;
MPRINT(EM_DIAGRAM):   end;
662409    +else do;
MPRINT(EM_DIAGRAM):   else do;
662410    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
662411    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
662412    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
662413    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
662414    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
662415    +   end;
MPRINT(EM_DIAGRAM):   end;
662416    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
662417    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
662418    +   end;
MPRINT(EM_DIAGRAM):   end;
662419    +   else do;
MPRINT(EM_DIAGRAM):   else do;
662420    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
662421    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
662422    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
662423    +   end;
MPRINT(EM_DIAGRAM):   end;
662424    +end;
MPRINT(EM_DIAGRAM):   end;
662425    +
662426    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
662427    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
662428    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
662429    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
662430    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
662431    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
662432    +end;
MPRINT(EM_DIAGRAM):   end;
662433    +else do;
MPRINT(EM_DIAGRAM):   else do;
662434    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
662435    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
662436    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
662437    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
662438    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
662439    +   end;
MPRINT(EM_DIAGRAM):   end;
662440    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
662441    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
662442    +   end;
MPRINT(EM_DIAGRAM):   end;
662443    +   else do;
MPRINT(EM_DIAGRAM):   else do;
662444    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
662445    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
662446    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
662447    +   end;
MPRINT(EM_DIAGRAM):   end;
662448    +end;
MPRINT(EM_DIAGRAM):   end;
662449    +
662450    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
662451    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
662452    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
662453    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
662454    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
662455    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
662456    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
662457    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
662458    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
662459    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
662460    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
662461    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
662462    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
662463    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
662464    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
662465    +end;
MPRINT(EM_DIAGRAM):   end;
662466    +else do;
MPRINT(EM_DIAGRAM):   else do;
662467    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
662468    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
662469    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
662470    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
662471    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
662472    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
662473    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
662474    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
662475    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
662476    +         end;
MPRINT(EM_DIAGRAM):   end;
662477    +         else do;
MPRINT(EM_DIAGRAM):   else do;
662478    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
662479    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
662480    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
662481    +            end;
MPRINT(EM_DIAGRAM):   end;
662482    +         end;
MPRINT(EM_DIAGRAM):   end;
662483    +      end;
MPRINT(EM_DIAGRAM):   end;
662484    +      else do;
MPRINT(EM_DIAGRAM):   else do;
662485    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
662486    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
662487    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
662488    +         end;
MPRINT(EM_DIAGRAM):   end;
662489    +      end;
MPRINT(EM_DIAGRAM):   end;
662490    +   end;
MPRINT(EM_DIAGRAM):   end;
662491    +   else do;
MPRINT(EM_DIAGRAM):   else do;
662492    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
662493    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
662494    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
662495    +      end;
MPRINT(EM_DIAGRAM):   end;
662496    +      else do;
MPRINT(EM_DIAGRAM):   else do;
662497    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
662498    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
662499    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
662500    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
662501    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
662502    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
662503    +         end;
MPRINT(EM_DIAGRAM):   end;
662504    +      end;
MPRINT(EM_DIAGRAM):   end;
662505    +   end;
MPRINT(EM_DIAGRAM):   end;
662506    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
662507    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
662508    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
662509    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
662510    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
662511    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
662512    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
662513    +   end;
MPRINT(EM_DIAGRAM):   end;
662514    +end;
MPRINT(EM_DIAGRAM):   end;
662515    +
662516    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
662517    +*** Checking missing input Interval
662518    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
662519    +
662520    +IF NMISS(
662521    +   AcceptedCmpTotal ,
662522    +   Kidhome ,
662523    +   Mnt ,
662524    +   MntFishProducts ,
662525    +   MntFruits ,
662526    +   MntGoldProds ,
662527    +   MntMeatProducts ,
662528    +   MntSweetProducts ,
662529    +   MntWines ,
662530    +   NumCatalogPurchases ,
662531    +   NumDealsPurchases ,
662532    +   NumDistPurchases ,
662533    +   NumStorePurchases ,
662534    +   NumWebPurchases ,
662535    +   NumWebVisitsMonth ,
662536    +   RFMstat ,
662537    +   Recency ,
662538    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Kidhome , Mnt , MntFishProducts , MntFruits 
, MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , 
NumDealsPurchases , NumDistPurchases , NumStorePurchases , NumWebPurchases , NumWebVisitsMonth 
, RFMstat , Recency , Teenhome ) THEN DO;
662539    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
662540    +
662541    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
662542    +END;
MPRINT(EM_DIAGRAM):   END;
662543    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
662544    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
662545    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
662546    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
662547    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
662548    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
662549    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
662550    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
662551    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
662552    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
662553    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
662554    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
662555    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
662556    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
662557    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
662558    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
662559    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
662560    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
662561    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
662562    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
662563    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
662564    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
662565    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
662566    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
662567    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
662568    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
662569    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
662570    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
662571    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
662572    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
662573    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
662574    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
662575    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
662576    +END;
MPRINT(EM_DIAGRAM):   END;
662577    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
662578    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
662579    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
662580    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
662581    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
662582    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
662583    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
662584    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
662585    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
662586    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
662587    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
662588    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
662589    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
662590    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
662591    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
662592    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
662593    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
662594    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
662595    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
662596    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
662597    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
662598    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
662599    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
662600    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
662601    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
662602    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
662603    +   ELSE S_NumCatalogPurchases
662604    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
662605    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
662606    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
662607    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
662608    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
662609    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
662610    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
662611    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
662612    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
662613    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
662614    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
662615    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
662616    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
662617    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
662618    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
662619    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
662620    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
662621    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
662622    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
662623    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
662624    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
662625    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
662626    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
662627    +END;
MPRINT(EM_DIAGRAM):   END;
662628    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
662629    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
662630    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
662631    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
662632    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
662633    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
662634    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
662635    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
662636    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
662637    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
662638    +   H11  =    -0.05593591984236 * S_AcceptedCmpTotal  +    -0.15222591404968 *
662639    +        S_Kidhome  +    -0.14333543557998 * S_Mnt  +    -0.15248110960637 *
662640    +        S_MntFishProducts  +     0.21423389210826 * S_MntFruits
662641    +          +     0.27583997827488 * S_MntGoldProds  +     0.33906941857334 *
662642    +        S_MntMeatProducts  +    -0.18189684051157 * S_MntSweetProducts
662643    +          +    -0.14699487046336 * S_MntWines  +     0.12279108001012 *
662644    +        S_NumCatalogPurchases  +    -0.13784967978035 * S_NumDealsPurchases
662645    +          +     0.31907604696327 * S_NumDistPurchases
662646    +          +    -0.02337643350225 * S_NumStorePurchases
662647    +          +    -0.03710870748613 * S_NumWebPurchases
662648    +          +    -0.09050794174833 * S_NumWebVisitsMonth
662649    +          +    -0.03038236905639 * S_RFMstat  +     -0.1425750250249 *
662650    +        S_Recency  +     0.28728724059371 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.05593591984236 * S_AcceptedCmpTotal + -0.15222591404968 * 
S_Kidhome + -0.14333543557998 * S_Mnt + -0.15248110960637 * S_MntFishProducts + 
0.21423389210826 * S_MntFruits + 0.27583997827488 * S_MntGoldProds + 0.33906941857334 * 
S_MntMeatProducts + -0.18189684051157 * S_MntSweetProducts + -0.14699487046336 * S_MntWines + 
0.12279108001012 * S_NumCatalogPurchases + -0.13784967978035 * S_NumDealsPurchases + 
0.31907604696327 * S_NumDistPurchases + -0.02337643350225 * S_NumStorePurchases + 
-0.03710870748613 * S_NumWebPurchases + -0.09050794174833 * S_NumWebVisitsMonth + 
-0.03038236905639 * S_RFMstat + -0.1425750250249 * S_Recency + 0.28728724059371 * S_Teenhome ;
662651    +   H12  =     0.02658934126333 * S_AcceptedCmpTotal  +     0.00729222523123 *
662652    +        S_Kidhome  +    -0.16054040072952 * S_Mnt  +     0.21368744829668 *
662653    +        S_MntFishProducts  +    -0.38567748679786 * S_MntFruits
662654    +          +     0.01538770837896 * S_MntGoldProds  +     0.26799837156516 *
662655    +        S_MntMeatProducts  +    -0.03227992228949 * S_MntSweetProducts
662656    +          +    -0.05332837299227 * S_MntWines  +    -0.59456078768767 *
662657    +        S_NumCatalogPurchases  +    -0.30459286527334 * S_NumDealsPurchases
662658    +          +     0.09101667200647 * S_NumDistPurchases
662659    +          +     0.15756950151025 * S_NumStorePurchases
662660    +          +    -0.25413468685639 * S_NumWebPurchases
662661    +          +     0.05860616268336 * S_NumWebVisitsMonth
662662    +          +     0.15733068754241 * S_RFMstat  +    -0.45821943962804 *
662663    +        S_Recency  +    -0.27642512764036 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.02658934126333 * S_AcceptedCmpTotal + 0.00729222523123 * 
S_Kidhome + -0.16054040072952 * S_Mnt + 0.21368744829668 * S_MntFishProducts + 
-0.38567748679786 * S_MntFruits + 0.01538770837896 * S_MntGoldProds + 0.26799837156516 * 
S_MntMeatProducts + -0.03227992228949 * S_MntSweetProducts + -0.05332837299227 * S_MntWines + 
-0.59456078768767 * S_NumCatalogPurchases + -0.30459286527334 * S_NumDealsPurchases + 
0.09101667200647 * S_NumDistPurchases + 0.15756950151025 * S_NumStorePurchases + 
-0.25413468685639 * S_NumWebPurchases + 0.05860616268336 * S_NumWebVisitsMonth + 
0.15733068754241 * S_RFMstat + -0.45821943962804 * S_Recency + -0.27642512764036 * S_Teenhome ;
662664    +   H13  =     0.16918999382902 * S_AcceptedCmpTotal  +     -0.4012305600884 *
662665    +        S_Kidhome  +     0.26493497259127 * S_Mnt  +     0.04728975645729 *
662666    +        S_MntFishProducts  +      0.0315247200365 * S_MntFruits
662667    +          +    -0.04096342555085 * S_MntGoldProds  +     0.56434077264537 *
662668    +        S_MntMeatProducts  +    -0.09161669649727 * S_MntSweetProducts
662669    +          +    -0.39043511079678 * S_MntWines  +     0.54393711558115 *
662670    +        S_NumCatalogPurchases  +    -0.01184328299667 * S_NumDealsPurchases
662671    +          +      0.3986742546267 * S_NumDistPurchases
662672    +          +     0.01771277995324 * S_NumStorePurchases
662673    +          +    -0.01959916713409 * S_NumWebPurchases
662674    +          +     0.60679036120713 * S_NumWebVisitsMonth
662675    +          +     0.08435948584344 * S_RFMstat  +    -0.95524595397707 *
662676    +        S_Recency  +    -0.25065878895323 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.16918999382902 * S_AcceptedCmpTotal + -0.4012305600884 * 
S_Kidhome + 0.26493497259127 * S_Mnt + 0.04728975645729 * S_MntFishProducts + 0.0315247200365 
* S_MntFruits + -0.04096342555085 * S_MntGoldProds + 0.56434077264537 * S_MntMeatProducts + 
-0.09161669649727 * S_MntSweetProducts + -0.39043511079678 * S_MntWines + 0.54393711558115 * 
S_NumCatalogPurchases + -0.01184328299667 * S_NumDealsPurchases + 0.3986742546267 * 
S_NumDistPurchases + 0.01771277995324 * S_NumStorePurchases + -0.01959916713409 * 
S_NumWebPurchases + 0.60679036120713 * S_NumWebVisitsMonth + 0.08435948584344 * S_RFMstat + 
-0.95524595397707 * S_Recency + -0.25065878895323 * S_Teenhome ;
662677    +   H14  =    -0.16659499847061 * S_AcceptedCmpTotal  +     0.02357084658349 *
662678    +        S_Kidhome  +     0.05388140126658 * S_Mnt  +    -0.05810927736046 *
662679    +        S_MntFishProducts  +    -0.15826458235953 * S_MntFruits
662680    +          +    -0.41850090574896 * S_MntGoldProds  +    -0.26401541533988 *
662681    +        S_MntMeatProducts  +     0.04480310739087 * S_MntSweetProducts
662682    +          +      0.1225741493226 * S_MntWines  +    -0.56748657856846 *
662683    +        S_NumCatalogPurchases  +    -0.69394311075706 * S_NumDealsPurchases
662684    +          +    -0.56367315288861 * S_NumDistPurchases
662685    +          +     0.22181323985263 * S_NumStorePurchases
662686    +          +    -0.06232830057869 * S_NumWebPurchases
662687    +          +    -0.16027390604517 * S_NumWebVisitsMonth
662688    +          +    -0.09981217676274 * S_RFMstat  +    -0.04262244153265 *
662689    +        S_Recency  +    -0.17321366891816 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.16659499847061 * S_AcceptedCmpTotal + 0.02357084658349 * 
S_Kidhome + 0.05388140126658 * S_Mnt + -0.05810927736046 * S_MntFishProducts + 
-0.15826458235953 * S_MntFruits + -0.41850090574896 * S_MntGoldProds + -0.26401541533988 * 
S_MntMeatProducts + 0.04480310739087 * S_MntSweetProducts + 0.1225741493226 * S_MntWines + 
-0.56748657856846 * S_NumCatalogPurchases + -0.69394311075706 * S_NumDealsPurchases + 
-0.56367315288861 * S_NumDistPurchases + 0.22181323985263 * S_NumStorePurchases + 
-0.06232830057869 * S_NumWebPurchases + -0.16027390604517 * S_NumWebVisitsMonth + 
-0.09981217676274 * S_RFMstat + -0.04262244153265 * S_Recency + -0.17321366891816 * S_Teenhome 
;
662690    +   H15  =    -0.03881766208476 * S_AcceptedCmpTotal  +      0.3555777614453 *
662691    +        S_Kidhome  +     0.15023474562078 * S_Mnt  +    -0.28470673338867 *
662692    +        S_MntFishProducts  +    -0.16436807986852 * S_MntFruits
662693    +          +     0.15942617624256 * S_MntGoldProds  +     1.26624544782503 *
662694    +        S_MntMeatProducts  +      0.0500748594942 * S_MntSweetProducts
662695    +          +      0.1213695191802 * S_MntWines  +     1.23017810696609 *
662696    +        S_NumCatalogPurchases  +     0.26589246063072 * S_NumDealsPurchases
662697    +          +      0.2955712939881 * S_NumDistPurchases
662698    +          +     -0.5433445349483 * S_NumStorePurchases
662699    +          +    -0.59265227511161 * S_NumWebPurchases
662700    +          +     0.00366326444932 * S_NumWebVisitsMonth
662701    +          +     0.25124432206112 * S_RFMstat  +    -0.08596429987285 *
662702    +        S_Recency  +    -0.19264562465751 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.03881766208476 * S_AcceptedCmpTotal + 0.3555777614453 * 
S_Kidhome + 0.15023474562078 * S_Mnt + -0.28470673338867 * S_MntFishProducts + 
-0.16436807986852 * S_MntFruits + 0.15942617624256 * S_MntGoldProds + 1.26624544782503 * 
S_MntMeatProducts + 0.0500748594942 * S_MntSweetProducts + 0.1213695191802 * S_MntWines + 
1.23017810696609 * S_NumCatalogPurchases + 0.26589246063072 * S_NumDealsPurchases + 
0.2955712939881 * S_NumDistPurchases + -0.5433445349483 * S_NumStorePurchases + 
-0.59265227511161 * S_NumWebPurchases + 0.00366326444932 * S_NumWebVisitsMonth + 
0.25124432206112 * S_RFMstat + -0.08596429987285 * S_Recency + -0.19264562465751 * S_Teenhome ;
662703    +   H16  =      0.4256391916459 * S_AcceptedCmpTotal  +    -0.14933442450857 *
662704    +        S_Kidhome  +     0.11321190053106 * S_Mnt  +    -0.08228540664731 *
662705    +        S_MntFishProducts  +    -0.44605772880289 * S_MntFruits
662706    +          +     0.02398042304084 * S_MntGoldProds  +     1.02247698844519 *
662707    +        S_MntMeatProducts  +    -0.29299854989186 * S_MntSweetProducts
662708    +          +    -0.55069644292933 * S_MntWines  +      0.6692377268179 *
662709    +        S_NumCatalogPurchases  +     0.70282032902203 * S_NumDealsPurchases
662710    +          +    -0.42166207183939 * S_NumDistPurchases
662711    +          +    -0.74339843972857 * S_NumStorePurchases
662712    +          +    -0.61598427613968 * S_NumWebPurchases
662713    +          +     0.88769400454452 * S_NumWebVisitsMonth
662714    +          +     0.45864975080775 * S_RFMstat  +    -1.00498331113421 *
662715    +        S_Recency  +    -0.06157944188263 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = 0.4256391916459 * S_AcceptedCmpTotal + -0.14933442450857 * 
S_Kidhome + 0.11321190053106 * S_Mnt + -0.08228540664731 * S_MntFishProducts + 
-0.44605772880289 * S_MntFruits + 0.02398042304084 * S_MntGoldProds + 1.02247698844519 * 
S_MntMeatProducts + -0.29299854989186 * S_MntSweetProducts + -0.55069644292933 * S_MntWines + 
0.6692377268179 * S_NumCatalogPurchases + 0.70282032902203 * S_NumDealsPurchases + 
-0.42166207183939 * S_NumDistPurchases + -0.74339843972857 * S_NumStorePurchases + 
-0.61598427613968 * S_NumWebPurchases + 0.88769400454452 * S_NumWebVisitsMonth + 
0.45864975080775 * S_RFMstat + -1.00498331113421 * S_Recency + -0.06157944188263 * S_Teenhome ;
662716    +   H17  =     0.63900672999082 * S_AcceptedCmpTotal  +    -0.30964832179168 *
662717    +        S_Kidhome  +    -0.32513653413684 * S_Mnt  +    -0.24581000667509 *
662718    +        S_MntFishProducts  +     0.02617694172605 * S_MntFruits
662719    +          +     0.00781760579393 * S_MntGoldProds  +     0.29104948109042 *
662720    +        S_MntMeatProducts  +    -0.02316001924491 * S_MntSweetProducts
662721    +          +    -0.36691071804931 * S_MntWines  +     0.32387184925622 *
662722    +        S_NumCatalogPurchases  +    -0.02259558698489 * S_NumDealsPurchases
662723    +          +    -0.05302323558282 * S_NumDistPurchases
662724    +          +    -0.61057201236183 * S_NumStorePurchases
662725    +          +    -0.43675839485699 * S_NumWebPurchases
662726    +          +      0.9068485509802 * S_NumWebVisitsMonth
662727    +          +    -0.10589439992168 * S_RFMstat  +    -1.04488846978483 *
662728    +        S_Recency  +    -0.22850227275517 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = 0.63900672999082 * S_AcceptedCmpTotal + -0.30964832179168 * 
S_Kidhome + -0.32513653413684 * S_Mnt + -0.24581000667509 * S_MntFishProducts + 
0.02617694172605 * S_MntFruits + 0.00781760579393 * S_MntGoldProds + 0.29104948109042 * 
S_MntMeatProducts + -0.02316001924491 * S_MntSweetProducts + -0.36691071804931 * S_MntWines + 
0.32387184925622 * S_NumCatalogPurchases + -0.02259558698489 * S_NumDealsPurchases + 
-0.05302323558282 * S_NumDistPurchases + -0.61057201236183 * S_NumStorePurchases + 
-0.43675839485699 * S_NumWebPurchases + 0.9068485509802 * S_NumWebVisitsMonth + 
-0.10589439992168 * S_RFMstat + -1.04488846978483 * S_Recency + -0.22850227275517 * S_Teenhome 
;
662729    +   H11  = H11  +     0.18111603256896 * AcceptedCmp10
662730    +          +     0.22509521803356 * AcceptedCmp20  +    -0.04654046313147 *
662731    +        AcceptedCmp30  +      0.3384111516657 * AcceptedCmp40
662732    +          +     0.32627827523963 * AcceptedCmp50  +    -0.01568279175973 *
662733    +        Complain0  +    -0.55252517176272 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.18111603256896 * AcceptedCmp10 + 0.22509521803356 * 
AcceptedCmp20 + -0.04654046313147 * AcceptedCmp30 + 0.3384111516657 * AcceptedCmp40 + 
0.32627827523963 * AcceptedCmp50 + -0.01568279175973 * Complain0 + -0.55252517176272 * 
HigherEducationBinary0 ;
662734    +   H12  = H12  +     0.11443639158645 * AcceptedCmp10
662735    +          +    -0.07848565251064 * AcceptedCmp20  +     0.12149050142183 *
662736    +        AcceptedCmp30  +     0.16124218246786 * AcceptedCmp40
662737    +          +     0.08002037216673 * AcceptedCmp50  +     0.19507760774174 *
662738    +        Complain0  +     0.11914737027935 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.11443639158645 * AcceptedCmp10 + -0.07848565251064 * 
AcceptedCmp20 + 0.12149050142183 * AcceptedCmp30 + 0.16124218246786 * AcceptedCmp40 + 
0.08002037216673 * AcceptedCmp50 + 0.19507760774174 * Complain0 + 0.11914737027935 * 
HigherEducationBinary0 ;
662739    +   H13  = H13  +    -0.10931311385786 * AcceptedCmp10
662740    +          +    -0.35789040073328 * AcceptedCmp20  +    -0.38944306116716 *
662741    +        AcceptedCmp30  +    -0.40889901167624 * AcceptedCmp40
662742    +          +    -0.24329354019242 * AcceptedCmp50  +    -0.35456353492115 *
662743    +        Complain0  +     0.13555715311919 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.10931311385786 * AcceptedCmp10 + -0.35789040073328 * 
AcceptedCmp20 + -0.38944306116716 * AcceptedCmp30 + -0.40889901167624 * AcceptedCmp40 + 
-0.24329354019242 * AcceptedCmp50 + -0.35456353492115 * Complain0 + 0.13555715311919 * 
HigherEducationBinary0 ;
662744    +   H14  = H14  +      0.2188684433023 * AcceptedCmp10
662745    +          +    -0.29615454952167 * AcceptedCmp20  +    -0.22271127437354 *
662746    +        AcceptedCmp30  +     0.20823945988265 * AcceptedCmp40
662747    +          +    -0.21625430481282 * AcceptedCmp50  +    -0.18295367581943 *
662748    +        Complain0  +     0.46325732026927 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.2188684433023 * AcceptedCmp10 + -0.29615454952167 * 
AcceptedCmp20 + -0.22271127437354 * AcceptedCmp30 + 0.20823945988265 * AcceptedCmp40 + 
-0.21625430481282 * AcceptedCmp50 + -0.18295367581943 * Complain0 + 0.46325732026927 * 
HigherEducationBinary0 ;
662749    +   H15  = H15  +     0.30998447993837 * AcceptedCmp10
662750    +          +     0.12767836835052 * AcceptedCmp20  +    -0.06080337916302 *
662751    +        AcceptedCmp30  +     0.01251586968598 * AcceptedCmp40
662752    +          +    -0.23770263910732 * AcceptedCmp50  +     0.25109546472381 *
662753    +        Complain0  +    -0.02175844243112 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.30998447993837 * AcceptedCmp10 + 0.12767836835052 * 
AcceptedCmp20 + -0.06080337916302 * AcceptedCmp30 + 0.01251586968598 * AcceptedCmp40 + 
-0.23770263910732 * AcceptedCmp50 + 0.25109546472381 * Complain0 + -0.02175844243112 * 
HigherEducationBinary0 ;
662754    +   H16  = H16  +    -0.62091932539163 * AcceptedCmp10
662755    +          +    -0.51271562673252 * AcceptedCmp20  +    -0.11342469632318 *
662756    +        AcceptedCmp30  +    -0.16507397007692 * AcceptedCmp40
662757    +          +    -0.30784693811801 * AcceptedCmp50  +    -0.25537137844726 *
662758    +        Complain0  +    -0.10971155214877 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.62091932539163 * AcceptedCmp10 + -0.51271562673252 * 
AcceptedCmp20 + -0.11342469632318 * AcceptedCmp30 + -0.16507397007692 * AcceptedCmp40 + 
-0.30784693811801 * AcceptedCmp50 + -0.25537137844726 * Complain0 + -0.10971155214877 * 
HigherEducationBinary0 ;
662759    +   H17  = H17  +    -0.05412380892781 * AcceptedCmp10
662760    +          +    -0.01109263229825 * AcceptedCmp20  +     -0.2110615452485 *
662761    +        AcceptedCmp30  +     0.00965424319008 * AcceptedCmp40
662762    +          +     -0.4258810591025 * AcceptedCmp50  +     0.27308424287361 *
662763    +        Complain0  +      0.0268240614027 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.05412380892781 * AcceptedCmp10 + -0.01109263229825 * 
AcceptedCmp20 + -0.2110615452485 * AcceptedCmp30 + 0.00965424319008 * AcceptedCmp40 + 
-0.4258810591025 * AcceptedCmp50 + 0.27308424287361 * Complain0 + 0.0268240614027 * 
HigherEducationBinary0 ;
662764    +   H11  = H11  +    -0.33757847459033 * Marital_StatusDivorced
662765    +          +     0.00302217414126 * Marital_StatusMarried
662766    +          +      0.2152123397616 * Marital_StatusSingle
662767    +          +    -0.13520964902373 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.33757847459033 * Marital_StatusDivorced + 
0.00302217414126 * Marital_StatusMarried + 0.2152123397616 * Marital_StatusSingle + 
-0.13520964902373 * Marital_StatusTogether ;
662768    +   H12  = H12  +     0.00194872690496 * Marital_StatusDivorced
662769    +          +     0.03439335682344 * Marital_StatusMarried
662770    +          +     0.05021548127829 * Marital_StatusSingle
662771    +          +    -0.21404927960644 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.00194872690496 * Marital_StatusDivorced + 0.03439335682344 
* Marital_StatusMarried + 0.05021548127829 * Marital_StatusSingle + -0.21404927960644 * 
Marital_StatusTogether ;
662772    +   H13  = H13  +     0.48013325378484 * Marital_StatusDivorced
662773    +          +    -0.98905242808423 * Marital_StatusMarried
662774    +          +     0.71786420090726 * Marital_StatusSingle
662775    +          +    -0.99548524974998 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.48013325378484 * Marital_StatusDivorced + 
-0.98905242808423 * Marital_StatusMarried + 0.71786420090726 * Marital_StatusSingle + 
-0.99548524974998 * Marital_StatusTogether ;
662776    +   H14  = H14  +    -0.10242951736314 * Marital_StatusDivorced
662777    +          +       0.050581701391 * Marital_StatusMarried
662778    +          +     0.02970444912382 * Marital_StatusSingle
662779    +          +    -0.31932441367684 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.10242951736314 * Marital_StatusDivorced + 0.050581701391 
* Marital_StatusMarried + 0.02970444912382 * Marital_StatusSingle + -0.31932441367684 * 
Marital_StatusTogether ;
662780    +   H15  = H15  +    -0.15638584915255 * Marital_StatusDivorced
662781    +          +     0.24057441973108 * Marital_StatusMarried
662782    +          +    -0.25555699216503 * Marital_StatusSingle
662783    +          +     0.42413452422729 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.15638584915255 * Marital_StatusDivorced + 
0.24057441973108 * Marital_StatusMarried + -0.25555699216503 * Marital_StatusSingle + 
0.42413452422729 * Marital_StatusTogether ;
662784    +   H16  = H16  +     0.21905536295614 * Marital_StatusDivorced
662785    +          +     0.05764012832482 * Marital_StatusMarried
662786    +          +     0.09900502198755 * Marital_StatusSingle
662787    +          +    -0.29296987558734 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.21905536295614 * Marital_StatusDivorced + 0.05764012832482 
* Marital_StatusMarried + 0.09900502198755 * Marital_StatusSingle + -0.29296987558734 * 
Marital_StatusTogether ;
662788    +   H17  = H17  +    -0.10338488336034 * Marital_StatusDivorced
662789    +          +    -0.91005475926987 * Marital_StatusMarried
662790    +          +     0.69014529167411 * Marital_StatusSingle
662791    +          +    -0.54713111008177 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.10338488336034 * Marital_StatusDivorced + 
-0.91005475926987 * Marital_StatusMarried + 0.69014529167411 * Marital_StatusSingle + 
-0.54713111008177 * Marital_StatusTogether ;
662792    +   H11  =     0.41764308857177 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.41764308857177 + H11 ;
662793    +   H12  =     0.52419261709948 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.52419261709948 + H12 ;
662794    +   H13  =    -0.81831247743605 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.81831247743605 + H13 ;
662795    +   H14  =    -0.81516752423378 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.81516752423378 + H14 ;
662796    +   H15  =     0.07454870495209 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.07454870495209 + H15 ;
662797    +   H16  =    -0.59819903707625 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.59819903707625 + H16 ;
662798    +   H17  =     0.67503972430369 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = 0.67503972430369 + H17 ;
662799    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
662800    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
662801    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
662802    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
662803    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
662804    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
662805    +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
662806    +END;
MPRINT(EM_DIAGRAM):   END;
662807    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
662808    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
662809    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
662810    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
662811    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
662812    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
662813    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
662814    +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
662815    +END;
MPRINT(EM_DIAGRAM):   END;
662816    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
662817    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
662818    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
662819    +
662820    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
662821    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
662822    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
662823    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
662824    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
662825    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
662826    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
662827    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
662828    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
662829    +end;
MPRINT(EM_DIAGRAM):   end;
662830    +else do;
MPRINT(EM_DIAGRAM):   else do;
662831    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
662832    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
662833    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
662834    +   end;
MPRINT(EM_DIAGRAM):   end;
662835    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
662836    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
662837    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
662838    +   end;
MPRINT(EM_DIAGRAM):   end;
662839    +   else do;
MPRINT(EM_DIAGRAM):   else do;
662840    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
662841    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
662842    +   end;
MPRINT(EM_DIAGRAM):   end;
662843    +end;
MPRINT(EM_DIAGRAM):   end;
662844    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
662845    +   P_DepVar1  =    -0.00227674838385 * H11  +     0.58155599175904 * H12
662846    +          +     2.88143779402566 * H13  +    -1.63691423838644 * H14
662847    +          +     2.39141643331858 * H15  +     3.17879887277365 * H16
662848    +          +     2.23901808700024 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.00227674838385 * H11 + 0.58155599175904 * H12 + 
2.88143779402566 * H13 + -1.63691423838644 * H14 + 2.39141643331858 * H15 + 3.17879887277365 * 
H16 + 2.23901808700024 * H17 ;
662849    +   P_DepVar1  =     -1.5295367762329 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.5295367762329 + P_DepVar1 ;
662850    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
662851    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
662852    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
662853    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
662854    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
662855    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
662856    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
662857    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
662858    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
662859    +END;
MPRINT(EM_DIAGRAM):   END;
662860    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
662861    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
662862    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
662863    +END;
MPRINT(EM_DIAGRAM):   END;
662864    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
662865    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
662866    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
662867    +END;
MPRINT(EM_DIAGRAM):   END;
662868    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
662869    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
662870    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
662871    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
662872    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
662873    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
662874    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
662875    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
662876    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
662877    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
662878    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
662879    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
662880    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
662881    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
662882    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
662883    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
662884    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
662885    +END;
MPRINT(EM_DIAGRAM):   END;
662886    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
662887    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
662888    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
662889    +drop
662890    +H11
662891    +H12
662892    +H13
662893    +H14
662894    +H15
662895    +H16
662896    +H17
662897    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
662898    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
662899    +* Renaming variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural10;
662900    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
662901    +* Renaming Posterior variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural10;
662902    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
662903    +drop Neural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural10_P_DepVar1;
662904    +Neural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural10_P_DepVar1 = P_DepVar1;
662905    +drop Neural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural10_P_DepVar0;
662906    +Neural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural10_P_DepVar0 = P_DepVar0;
662907    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
662908    +* Renaming _WARN_ variable for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural10;
662909    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
662910    +length Neural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural10_WARN_ $4;
662911    +drop Neural10_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural10_WARN_;
662912    +Neural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural10_WARN_ = _WARN_;
662913    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
662914    +* Ensmbl: Average Posteriors of 9 models;
MPRINT(EM_DIAGRAM):   * Ensmbl: Average Posteriors of 9 models;
662915    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
662916    +P_DepVar1 = (
662917    +Reg_P_DepVar1 +
662918    +Tree_P_DepVar1 +
662919    +Neural4_P_DepVar1 +
662920    +Neural_P_DepVar1 +
662921    +Neural2_P_DepVar1 +
662922    +Neural3_P_DepVar1 +
662923    +Neural7_P_DepVar1 +
662924    +Neural9_P_DepVar1 +
662925    +Neural10_P_DepVar1
662926    +)/9;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( Reg_P_DepVar1 + Tree_P_DepVar1 + Neural4_P_DepVar1 + 
Neural_P_DepVar1 + Neural2_P_DepVar1 + Neural3_P_DepVar1 + Neural7_P_DepVar1 + 
Neural9_P_DepVar1 + Neural10_P_DepVar1 )/9;
662927    +P_DepVar0 = (
662928    +Reg_P_DepVar0 +
662929    +Tree_P_DepVar0 +
662930    +Neural4_P_DepVar0 +
662931    +Neural_P_DepVar0 +
662932    +Neural2_P_DepVar0 +
662933    +Neural3_P_DepVar0 +
662934    +Neural7_P_DepVar0 +
662935    +Neural9_P_DepVar0 +
662936    +Neural10_P_DepVar0
662937    +)/9;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( Reg_P_DepVar0 + Tree_P_DepVar0 + Neural4_P_DepVar0 + 
Neural_P_DepVar0 + Neural2_P_DepVar0 + Neural3_P_DepVar0 + Neural7_P_DepVar0 + 
Neural9_P_DepVar0 + Neural10_P_DepVar0 )/9;
662938    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
662939    +* Ensmbl: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl: Computing Classification Vars;
662940    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
662941    +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
662942    +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
662943    +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
662944    +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
662945    +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
662946    +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
662947    +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
662948    +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
662949    +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
662950    +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
662951    +end;
MPRINT(EM_DIAGRAM):   end;
662952    +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
662953    +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
662954    +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
662955    +end;
MPRINT(EM_DIAGRAM):   end;
662956    +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
662957    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
662958    +* Ensmbl: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl: Producing Unformatted variable;
662959    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
662960    +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
662961    +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
662962    +else
662963    +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
662964    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
662965    +* Ensmbl: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl: Computing _WARN_ Variable;
662966    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
662967    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
662968    +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
662969    +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
662970    +if index(REG_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 
1) ='M';
662971    +if index(REG_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 
1) ='U';
662972    +if index(REG_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 
1) ='P';
662973    +if index(REG_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 
1) ='C';
662974    +if index(TREE_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(TREE_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 
1) ='M';
662975    +if index(TREE_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(TREE_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 
1) ='U';
662976    +if index(TREE_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(TREE_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 
1) ='P';
662977    +if index(TREE_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(TREE_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 
1) ='C';
662978    +if index(NEURAL4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
662979    +if index(NEURAL4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
662980    +if index(NEURAL4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
662981    +if index(NEURAL4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
662982    +if index(NEURAL_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
662983    +if index(NEURAL_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
662984    +if index(NEURAL_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
662985    +if index(NEURAL_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
662986    +if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
662987    +if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
662988    +if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
662989    +if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
662990    +if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
662991    +if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
662992    +if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
662993    +if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
662994    +if index(NEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
662995    +if index(NEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
662996    +if index(NEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
662997    +if index(NEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
662998    +if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
662999    +if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
663000    +if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
663001    +if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
663002    +if index(NEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
663002   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
663003    +if index(NEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
663003   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
663004    +if index(NEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
663004   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
663005    +if index(NEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
663005   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
663006    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
663007    +* Ensmbl: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl: Computing Residual Vars;
663008    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
663009    +if
663010    +F_DepVar NE '1'
663011    +AND F_DepVar NE '0'
663012    +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
663013    +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
663014    +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
663015    +end;
MPRINT(EM_DIAGRAM):   end;
663016    +else do;
MPRINT(EM_DIAGRAM):   else do;
663017    +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
663018    +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
663019    +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
663020    +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
663021    +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
663022    +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
663023    +END;
MPRINT(EM_DIAGRAM):   END;
663024    +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
663025     run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.REG_TRAIN.VIEW used (Total process time):
      real time           0.18 seconds
      cpu time            0.18 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.19 seconds
      cpu time            0.20 seconds
      

MPRINT(EM_DIAGRAM):   quit;
663026     quit;
663027     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
663028     filename emflow
663028   ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl\EMFLOWSCORE.sas";
The SAS System

MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl: Scoring REG_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
663029     *------------------------------------------------------------*;
663030     * Ensmbl: Scoring REG_VALIDATE data;
663031     *------------------------------------------------------------*;
663032     data EMWS8.Ensmbl_VALIDATE
663033     / view=EMWS8.Ensmbl_VALIDATE
663034     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl_VALIDATE / view=EMWS8.Ensmbl_VALIDATE ;
663035     set EMWS8.Reg_VALIDATE
663036     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg_VALIDATE ;
663037     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl\EMFLOWSCORE.sas.
663038    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
663039    +* Ensmbl: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl: Combine model for DepVar;
663040    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
663041    +* Ensmbl: Scoring Code of model 1 of 9;
MPRINT(EM_DIAGRAM):   * Ensmbl: Scoring Code of model 1 of 9;
663042    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
663043    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
663044    +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
663045    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
663046    +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
663047    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
663048    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
663049    +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
663050    +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
663051    +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
663052    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
663053    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
663054    +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
663055    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
663056    +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
663057    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
663058    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
663059    +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
663060    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
663061    +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
663062    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
663063    +
663064    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
663065    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
663065   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
663066    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
663067    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
663068    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
663069    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
663070    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
663071    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
663072    +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
663073    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
663074    +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
663075    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
663076    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
663077    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
663078    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
663079    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
663080    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
663081    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
663082    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
663083    +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
663084    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
663085    +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
663086    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
663087    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
663088    +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
663089    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
663090    +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
663091    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
663092    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
663093    +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
663094    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
663095    +* NODE: Reg;
MPRINT(EM_DIAGRAM):   * NODE: Reg;
663096    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
663097    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
663098    +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
663099    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
663100    +
663101    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
663102    +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
663103    +
663104    +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
663105    +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
663106    +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
663107    +array REGDRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REGDRF [2] $12 _temporary_ ('1' '0' );
663108    +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
663109    +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
663110    +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
663111    +ARRAY REGDRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REGDRU[2] _TEMPORARY_ (1 0);
663112    +
663113    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
663114    +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
663115    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
663116    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
663117    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
663118    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
663119    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
663120    +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
663121    +end;
MPRINT(EM_DIAGRAM):   end;
663122    +else do;
MPRINT(EM_DIAGRAM):   else do;
663123    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
663124    +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
663125    +   end;
MPRINT(EM_DIAGRAM):   end;
663126    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
663127    +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
663128    +   end;
MPRINT(EM_DIAGRAM):   end;
663129    +   else do;
MPRINT(EM_DIAGRAM):   else do;
663130    +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
663131    +   end;
MPRINT(EM_DIAGRAM):   end;
663132    +end;
MPRINT(EM_DIAGRAM):   end;
663133    +
663134    +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
663135    +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
663136    +
663137    +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
663138    +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
663139    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
663140    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
663141    +end;
MPRINT(EM_DIAGRAM):   end;
663142    +
663143    +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
663144    +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
663145    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
663146    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
663147    +end;
MPRINT(EM_DIAGRAM):   end;
663148    +
663149    +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
663150    +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
663151    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
663152    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
663153    +end;
MPRINT(EM_DIAGRAM):   end;
663154    +
663155    +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
663156    +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
663157    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
663158    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
663159    +end;
MPRINT(EM_DIAGRAM):   end;
663160    +
663161    +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
663162    +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
663163    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
663164    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
663165    +end;
MPRINT(EM_DIAGRAM):   end;
663166    +
663167    +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
663168    +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
663169    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
663170    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
663171    +end;
MPRINT(EM_DIAGRAM):   end;
663172    +
663173    +*** Check NumDistPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDistPurchases for missing values ;
663174    +if missing( NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDistPurchases ) then do;
663175    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
663176    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
663177    +end;
MPRINT(EM_DIAGRAM):   end;
663178    +
663179    +*** Check NumStorePurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumStorePurchases for missing values ;
663180    +if missing( NumStorePurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumStorePurchases ) then do;
663181    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
663182    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
663183    +end;
MPRINT(EM_DIAGRAM):   end;
663184    +
663185    +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
663186    +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
663187    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
663188    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
663189    +end;
MPRINT(EM_DIAGRAM):   end;
663190    +
663191    +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
663192    +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
663193    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
663194    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
663195    +end;
MPRINT(EM_DIAGRAM):   end;
663196    +
663197    +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
663198    +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
663199    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
663200    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
663201    +end;
MPRINT(EM_DIAGRAM):   end;
663202    +
663203    +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
663204    +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
663205    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
663206    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
663207    +end;
MPRINT(EM_DIAGRAM):   end;
663208    +
663209    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
663210    +drop _5_0 ;
MPRINT(EM_DIAGRAM):   drop _5_0 ;
663211    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
663212    +   _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
663213    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
663214    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
663215    +end;
MPRINT(EM_DIAGRAM):   end;
663216    +else do;
MPRINT(EM_DIAGRAM):   else do;
663217    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
663218    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
663219    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
663220    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
663221    +      _5_0 = 1;
MPRINT(EM_DIAGRAM):   _5_0 = 1;
663222    +   end;
MPRINT(EM_DIAGRAM):   end;
663223    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
663224    +      _5_0 = -1;
MPRINT(EM_DIAGRAM):   _5_0 = -1;
663225    +   end;
MPRINT(EM_DIAGRAM):   end;
663226    +   else do;
MPRINT(EM_DIAGRAM):   else do;
663227    +      _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
663228    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
663229    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
663230    +   end;
MPRINT(EM_DIAGRAM):   end;
663231    +end;
MPRINT(EM_DIAGRAM):   end;
663232    +
663233    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
663234    +drop _8_0 _8_1 _8_2 _8_3 ;
MPRINT(EM_DIAGRAM):   drop _8_0 _8_1 _8_2 _8_3 ;
663235    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
663236    +_8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
663237    +_8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
663238    +_8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
663239    +_8_3 = 0;
MPRINT(EM_DIAGRAM):   _8_3 = 0;
663240    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
663241    +   _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
663242    +   _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
663243    +   _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
663244    +   _8_3 = .;
MPRINT(EM_DIAGRAM):   _8_3 = .;
663245    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
663246    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
663247    +end;
MPRINT(EM_DIAGRAM):   end;
663248    +else do;
MPRINT(EM_DIAGRAM):   else do;
663249    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
663250    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
663251    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
663252    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
663253    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
663254    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
663255    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
663256    +            _8_0 = 1;
MPRINT(EM_DIAGRAM):   _8_0 = 1;
663257    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
663258    +         end;
MPRINT(EM_DIAGRAM):   end;
663259    +         else do;
MPRINT(EM_DIAGRAM):   else do;
663260    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
663261    +               _8_1 = 1;
MPRINT(EM_DIAGRAM):   _8_1 = 1;
663262    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
663263    +            end;
MPRINT(EM_DIAGRAM):   end;
663264    +         end;
MPRINT(EM_DIAGRAM):   end;
663265    +      end;
MPRINT(EM_DIAGRAM):   end;
663266    +      else do;
MPRINT(EM_DIAGRAM):   else do;
663267    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
663268    +            _8_2 = 1;
MPRINT(EM_DIAGRAM):   _8_2 = 1;
663269    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
663270    +         end;
MPRINT(EM_DIAGRAM):   end;
663271    +      end;
MPRINT(EM_DIAGRAM):   end;
663272    +   end;
MPRINT(EM_DIAGRAM):   end;
663273    +   else do;
MPRINT(EM_DIAGRAM):   else do;
663274    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
663275    +         _8_3 = 1;
MPRINT(EM_DIAGRAM):   _8_3 = 1;
663276    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
663277    +      end;
MPRINT(EM_DIAGRAM):   end;
663278    +      else do;
MPRINT(EM_DIAGRAM):   else do;
663279    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
663280    +            _8_0 = -1;
MPRINT(EM_DIAGRAM):   _8_0 = -1;
663281    +            _8_1 = -1;
MPRINT(EM_DIAGRAM):   _8_1 = -1;
663282    +            _8_2 = -1;
MPRINT(EM_DIAGRAM):   _8_2 = -1;
663283    +            _8_3 = -1;
MPRINT(EM_DIAGRAM):   _8_3 = -1;
663284    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
663285    +         end;
MPRINT(EM_DIAGRAM):   end;
663286    +      end;
MPRINT(EM_DIAGRAM):   end;
663287    +   end;
MPRINT(EM_DIAGRAM):   end;
663288    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
663289    +      _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
663290    +      _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
663291    +      _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
663292    +      _8_3 = .;
MPRINT(EM_DIAGRAM):   _8_3 = .;
663293    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
663294    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
663295    +   end;
MPRINT(EM_DIAGRAM):   end;
663296    +end;
MPRINT(EM_DIAGRAM):   end;
663297    +
663298    +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
663299    +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
663300    +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
663301    +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
663302    +   goto REGDR1;
MPRINT(EM_DIAGRAM):   goto REGDR1;
663303    +end;
MPRINT(EM_DIAGRAM):   end;
663304    +
663305    +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
663306    +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
663307    +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
663308    +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
663309    +
663310    +***  Effect: AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp5 ;
663311    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
663312    +_LP0 = _LP0 + (   -0.56028520837373) * _TEMP * _5_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.56028520837373) * _TEMP * _5_0;
663313    +
663314    +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
663315    +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
663316    +_LP0 = _LP0 + (    2.79239159186379 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.79239159186379 * _TEMP);
663317    +
663318    +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
663319    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
663320    +_LP0 = _LP0 + (     0.2275252741727) * _TEMP * _8_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.2275252741727) * _TEMP * _8_0;
663321    +_LP0 = _LP0 + (   -0.91116218011236) * _TEMP * _8_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.91116218011236) * _TEMP * _8_1;
663322    +_LP0 = _LP0 + (    0.79946068413138) * _TEMP * _8_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.79946068413138) * _TEMP * _8_2;
663323    +_LP0 = _LP0 + (   -0.98989949139857) * _TEMP * _8_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.98989949139857) * _TEMP * _8_3;
663324    +
663325    +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
663326    +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
663327    +_LP0 = _LP0 + (   -0.00335712586387 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00335712586387 * _TEMP);
663328    +
663329    +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
663330    +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
663331    +_LP0 = _LP0 + (    0.00629742829089 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00629742829089 * _TEMP);
663332    +
663333    +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
663334    +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
663335    +_LP0 = _LP0 + (    0.01279646348912 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.01279646348912 * _TEMP);
663336    +
663337    +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
663338    +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
663339    +_LP0 = _LP0 + (    1.04928237490658 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.04928237490658 * _TEMP);
663340    +
663341    +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
663342    +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
663343    +_LP0 = _LP0 + (    0.63552663903891 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.63552663903891 * _TEMP);
663344    +
663345    +***  Effect: NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDistPurchases ;
663346    +_TEMP = NumDistPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDistPurchases ;
663347    +_LP0 = _LP0 + (   -0.30009214663172 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.30009214663172 * _TEMP);
663348    +
663349    +***  Effect: NumStorePurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumStorePurchases ;
663350    +_TEMP = NumStorePurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumStorePurchases ;
663351    +_LP0 = _LP0 + (   -0.35266748733964 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.35266748733964 * _TEMP);
663352    +
663353    +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
663354    +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
663355    +_LP0 = _LP0 + (    0.81352797289677 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.81352797289677 * _TEMP);
663356    +
663357    +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
663358    +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
663359    +_LP0 = _LP0 + (    0.00030864821595 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00030864821595 * _TEMP);
663360    +
663361    +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
663362    +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
663363    +_LP0 = _LP0 + (    -0.0914537880502 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.0914537880502 * _TEMP);
663364    +
663365    +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
663366    +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
663367    +_LP0 = _LP0 + (   -0.66398866776766 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.66398866776766 * _TEMP);
663368    +
663369    +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
663370    +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
663371    +_TEMP =    -5.00123691079588 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -5.00123691079588 + _LP0;
663372    +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
663373    +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
663374    +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
663375    +end;
MPRINT(EM_DIAGRAM):   end;
663376    +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
663377    +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
663378    +
663379    +REGDR1:
663380    +
663381    +*** Residuals;
MPRINT(EM_DIAGRAM):   REGDR1: *** Residuals;
663382    +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
663383    +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
663384    +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
663385    +end;
MPRINT(EM_DIAGRAM):   end;
663386    +else do;
MPRINT(EM_DIAGRAM):   else do;
663387    +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
663388    +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
663389    +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
663390    +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
663391    +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
663392    +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
663393    +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
663394    +   end;
MPRINT(EM_DIAGRAM):   end;
663395    +end;
MPRINT(EM_DIAGRAM):   end;
663396    +
663397    +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
663398    +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
663399    +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
663400    +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
663401    +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
663402    +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
663403    +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
663404    +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
663405    +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
663406    +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
663407    +end;
MPRINT(EM_DIAGRAM):   end;
663408    +I_DepVar = REGDRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REGDRF[_IY];
663409    +U_DepVar = REGDRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REGDRU[_IY];
663410    +
663411    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
663412    +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
663413    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
663414    +* Renaming variables for Reg;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg;
663415    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
663416    +* Renaming Posterior variables for Reg;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg;
663417    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
663418    +drop Reg_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg_P_DepVar1;
663419    +Reg_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg_P_DepVar1 = P_DepVar1;
663420    +drop Reg_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg_P_DepVar0;
663421    +Reg_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg_P_DepVar0 = P_DepVar0;
663422    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
663423    +* Renaming _WARN_ variable for Reg;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg;
663424    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
663425    +length Reg_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg_WARN_ $4;
663426    +drop Reg_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg_WARN_;
663427    +Reg_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg_WARN_ = _WARN_;
663428    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
663429    +* Ensmbl: Scoring Code of model 2 of 9;
MPRINT(EM_DIAGRAM):   * Ensmbl: Scoring Code of model 2 of 9;
663430    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
663431    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
663432    +* TOOL: Decision Tree;
MPRINT(EM_DIAGRAM):   * TOOL: Decision Tree;
663433    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
663434    +* NODE: Tree;
MPRINT(EM_DIAGRAM):   * NODE: Tree;
663435    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
663436    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
663437    +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
663438    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
663439    +
663440    +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
663441    +LENGTH F_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH F_DepVar $ 12;
663442    +LENGTH I_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH I_DepVar $ 12;
663443    +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
663444    +
663445    +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
663446    +LABEL _NODE_  = 'Node' ;
MPRINT(EM_DIAGRAM):   LABEL _NODE_ = 'Node' ;
663447    +LABEL _LEAF_  = 'Leaf' ;
MPRINT(EM_DIAGRAM):   LABEL _LEAF_ = 'Leaf' ;
663448    +LABEL P_DepVar0  = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar0 = 'Predicted: DepVar=0' ;
663449    +LABEL P_DepVar1  = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar1 = 'Predicted: DepVar=1' ;
663450    +LABEL Q_DepVar0  = 'Unadjusted P: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
663451    +LABEL Q_DepVar1  = 'Unadjusted P: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
663452    +LABEL V_DepVar0  = 'Validated: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar0 = 'Validated: DepVar=0' ;
663453    +LABEL V_DepVar1  = 'Validated: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar1 = 'Validated: DepVar=1' ;
663454    +LABEL R_DepVar0  = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL R_DepVar0 = 'Residual: DepVar=0' ;
663455    +LABEL R_DepVar1  = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL R_DepVar1 = 'Residual: DepVar=1' ;
663456    +LABEL F_DepVar  = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL F_DepVar = 'From: DepVar' ;
663457    +LABEL I_DepVar  = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL I_DepVar = 'Into: DepVar' ;
663458    +LABEL U_DepVar  = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL U_DepVar = 'Unnormalized Into: DepVar' ;
663459    +LABEL _WARN_  = 'Warnings' ;
MPRINT(EM_DIAGRAM):   LABEL _WARN_ = 'Warnings' ;
663460    +
663461    +
663462    +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
663463    +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
663464    +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
663465    +LENGTH _ARBFMT_8 $      8; DROP _ARBFMT_8;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_8 $ 8;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_8;
663466    +_ARBFMT_8 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_8 = ' ';
663467    +
663468    +
663469    +_ARBFMT_12 = PUT( DepVar , BEST.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( DepVar , BEST.);
663470    + %DMNORMCP( _ARBFMT_12, F_DepVar );
MPRINT(DMNORMCP):   F_DepVar=dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
663471    +
663472    +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
663473    +IF  NOT MISSING(AcceptedCmpTotal ) AND
663474    +                   0.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 0.5 <= AcceptedCmpTotal THEN DO;
663475    +  IF  NOT MISSING(Recency ) AND
663476    +    Recency  <                 38.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Recency ) AND Recency < 38.5 THEN DO;
663477    +    IF  NOT MISSING(AcceptedCmpTotal ) AND
663478    +                       1.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 1.5 <= AcceptedCmpTotal THEN DO;
663479    +      _NODE_  =                   13;
MPRINT(EM_DIAGRAM):   _NODE_ = 13;
663480    +      _LEAF_  =                   16;
MPRINT(EM_DIAGRAM):   _LEAF_ = 16;
663481    +      P_DepVar0  =     0.05263157894736;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.05263157894736;
663482    +      P_DepVar1  =     0.94736842105263;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.94736842105263;
663483    +      Q_DepVar0  =     0.05263157894736;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.05263157894736;
663484    +      Q_DepVar1  =     0.94736842105263;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.94736842105263;
663485    +      V_DepVar0  =                    0;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0;
663486    +      V_DepVar1  =                    1;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 1;
663487    +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
663488    +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
663489    +      END;
MPRINT(EM_DIAGRAM):   END;
663490    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
663491    +      _ARBFMT_8 = PUT( Marital_Status , $8.);
MPRINT(EM_DIAGRAM):   _ARBFMT_8 = PUT( Marital_Status , $8.);
663492    +       %DMNORMIP( _ARBFMT_8);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
663493    +      IF _ARBFMT_8 IN ('WIDOW' ,'DIVORCED' ,'SINGLE' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_8 IN ('WIDOW' ,'DIVORCED' ,'SINGLE' ) THEN DO;
663494    +        _NODE_  =                   23;
MPRINT(EM_DIAGRAM):   _NODE_ = 23;
663495    +        _LEAF_  =                   15;
MPRINT(EM_DIAGRAM):   _LEAF_ = 15;
663496    +        P_DepVar0  =      0.2258064516129;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.2258064516129;
663497    +        P_DepVar1  =     0.77419354838709;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.77419354838709;
663498    +        Q_DepVar0  =      0.2258064516129;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.2258064516129;
663499    +        Q_DepVar1  =     0.77419354838709;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.77419354838709;
663500    +        V_DepVar0  =     0.41935483870967;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.41935483870967;
663501    +        V_DepVar1  =     0.58064516129032;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.58064516129032;
663502    +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
663503    +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
663504    +        END;
MPRINT(EM_DIAGRAM):   END;
663505    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
663506    +        IF  NOT MISSING(NumStorePurchases ) AND
663507    +          NumStorePurchases  <                  6.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumStorePurchases ) AND NumStorePurchases < 6.5 THEN DO;
663508    +          IF  NOT MISSING(NumWebVisitsMonth ) AND
663509    +            NumWebVisitsMonth  <                  5.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumWebVisitsMonth ) AND NumWebVisitsMonth < 5.5 THEN DO;
663510    +            _NODE_  =                   56;
MPRINT(EM_DIAGRAM):   _NODE_ = 56;
663511    +            _LEAF_  =                   12;
MPRINT(EM_DIAGRAM):   _LEAF_ = 12;
663512    +            P_DepVar0  =     0.61111111111111;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.61111111111111;
663513    +            P_DepVar1  =     0.38888888888888;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.38888888888888;
663514    +            Q_DepVar0  =     0.61111111111111;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.61111111111111;
663515    +            Q_DepVar1  =     0.38888888888888;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.38888888888888;
663516    +            V_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.66666666666666;
663517    +            V_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.33333333333333;
663518    +            I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
663519    +            U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
663520    +            END;
MPRINT(EM_DIAGRAM):   END;
663521    +          ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
663522    +            _NODE_  =                   57;
MPRINT(EM_DIAGRAM):   _NODE_ = 57;
663523    +            _LEAF_  =                   13;
MPRINT(EM_DIAGRAM):   _LEAF_ = 13;
663524    +            P_DepVar0  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.14285714285714;
663525    +            P_DepVar1  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.85714285714285;
663526    +            Q_DepVar0  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.14285714285714;
663527    +            Q_DepVar1  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.85714285714285;
663528    +            V_DepVar0  =      0.3076923076923;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.3076923076923;
663529    +            V_DepVar1  =     0.69230769230769;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.69230769230769;
663530    +            I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
663531    +            U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
663532    +            END;
MPRINT(EM_DIAGRAM):   END;
663533    +          END;
MPRINT(EM_DIAGRAM):   END;
663534    +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
663535    +          _NODE_  =                   41;
MPRINT(EM_DIAGRAM):   _NODE_ = 41;
663536    +          _LEAF_  =                   14;
MPRINT(EM_DIAGRAM):   _LEAF_ = 14;
663537    +          P_DepVar0  =     0.74545454545454;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.74545454545454;
663538    +          P_DepVar1  =     0.25454545454545;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.25454545454545;
663539    +          Q_DepVar0  =     0.74545454545454;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.74545454545454;
663540    +          Q_DepVar1  =     0.25454545454545;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.25454545454545;
663541    +          V_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.66666666666666;
663542    +          V_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.33333333333333;
663543    +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
663544    +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
663545    +          END;
MPRINT(EM_DIAGRAM):   END;
663546    +        END;
MPRINT(EM_DIAGRAM):   END;
663547    +      END;
MPRINT(EM_DIAGRAM):   END;
663548    +    END;
MPRINT(EM_DIAGRAM):   END;
663549    +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
663550    +    IF  NOT MISSING(AcceptedCmpTotal ) AND
663551    +                       2.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 2.5 <= AcceptedCmpTotal THEN DO;
663552    +      _NODE_  =                   15;
MPRINT(EM_DIAGRAM):   _NODE_ = 15;
663553    +      _LEAF_  =                   18;
MPRINT(EM_DIAGRAM):   _LEAF_ = 18;
663554    +      P_DepVar0  =      0.3103448275862;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.3103448275862;
663555    +      P_DepVar1  =     0.68965517241379;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.68965517241379;
663556    +      Q_DepVar0  =      0.3103448275862;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.3103448275862;
663557    +      Q_DepVar1  =     0.68965517241379;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.68965517241379;
663558    +      V_DepVar0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.33333333333333;
663559    +      V_DepVar1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.66666666666666;
663560    +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
663561    +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
663562    +      END;
MPRINT(EM_DIAGRAM):   END;
663563    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
663564    +      _NODE_  =                   14;
MPRINT(EM_DIAGRAM):   _NODE_ = 14;
663565    +      _LEAF_  =                   17;
MPRINT(EM_DIAGRAM):   _LEAF_ = 17;
663566    +      P_DepVar0  =     0.82562277580071;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.82562277580071;
663567    +      P_DepVar1  =     0.17437722419928;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.17437722419928;
663568    +      Q_DepVar0  =     0.82562277580071;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.82562277580071;
663569    +      Q_DepVar1  =     0.17437722419928;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.17437722419928;
663570    +      V_DepVar0  =     0.81818181818181;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.81818181818181;
663571    +      V_DepVar1  =     0.18181818181818;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.18181818181818;
663572    +      I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
663573    +      U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
663574    +      END;
MPRINT(EM_DIAGRAM):   END;
663575    +    END;
MPRINT(EM_DIAGRAM):   END;
663576    +  END;
MPRINT(EM_DIAGRAM):   END;
663577    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
663578    +  IF  NOT MISSING(Recency ) AND
663579    +    Recency  <                 32.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Recency ) AND Recency < 32.5 THEN DO;
663580    +    IF  NOT MISSING(NumCatalogPurchases ) AND
663581    +                       5.5 <= NumCatalogPurchases  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumCatalogPurchases ) AND 5.5 <= NumCatalogPurchases THEN 
DO;
663582    +      IF  NOT MISSING(NumStorePurchases ) AND
663583    +                         7.5 <= NumStorePurchases  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumStorePurchases ) AND 7.5 <= NumStorePurchases THEN DO;
663584    +        IF  NOT MISSING(RFMstat ) AND
663585    +              1964.32692307692 <= RFMstat  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RFMstat ) AND 1964.32692307692 <= RFMstat THEN DO;
663586    +          _NODE_  =                   37;
MPRINT(EM_DIAGRAM):   _NODE_ = 37;
663587    +          _LEAF_  =                   10;
MPRINT(EM_DIAGRAM):   _LEAF_ = 10;
663588    +          P_DepVar0  =     0.42857142857142;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.42857142857142;
663589    +          P_DepVar1  =     0.57142857142857;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.57142857142857;
663590    +          Q_DepVar0  =     0.42857142857142;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.42857142857142;
663591    +          Q_DepVar1  =     0.57142857142857;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.57142857142857;
663592    +          V_DepVar0  =     0.44444444444444;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.44444444444444;
663593    +          V_DepVar1  =     0.55555555555555;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.55555555555555;
663594    +          I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
663595    +          U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
663596    +          END;
MPRINT(EM_DIAGRAM):   END;
663597    +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
663598    +          _NODE_  =                   36;
MPRINT(EM_DIAGRAM):   _NODE_ = 36;
663599    +          _LEAF_  =                    9;
MPRINT(EM_DIAGRAM):   _LEAF_ = 9;
663600    +          P_DepVar0  =                    1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 1;
663601    +          P_DepVar1  =                    0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0;
663602    +          Q_DepVar0  =                    1;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 1;
663603    +          Q_DepVar1  =                    0;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0;
663604    +          V_DepVar0  =     0.69230769230769;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.69230769230769;
663605    +          V_DepVar1  =      0.3076923076923;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.3076923076923;
663606    +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
663607    +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
663608    +          END;
MPRINT(EM_DIAGRAM):   END;
663609    +        END;
MPRINT(EM_DIAGRAM):   END;
663610    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
663611    +        IF  NOT MISSING(MntFishProducts ) AND
663612    +          MntFishProducts  <                   26 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntFishProducts ) AND MntFishProducts < 26 THEN DO;
663613    +          _NODE_  =                   34;
MPRINT(EM_DIAGRAM):   _NODE_ = 34;
663614    +          _LEAF_  =                    7;
MPRINT(EM_DIAGRAM):   _LEAF_ = 7;
663615    +          P_DepVar0  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.71428571428571;
663616    +          P_DepVar1  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.28571428571428;
663617    +          Q_DepVar0  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.71428571428571;
663618    +          Q_DepVar1  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.28571428571428;
663619    +          V_DepVar0  =                  0.8;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.8;
663620    +          V_DepVar1  =                  0.2;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.2;
663621    +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
663622    +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
663623    +          END;
MPRINT(EM_DIAGRAM):   END;
663624    +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
663625    +          _NODE_  =                   35;
MPRINT(EM_DIAGRAM):   _NODE_ = 35;
663626    +          _LEAF_  =                    8;
MPRINT(EM_DIAGRAM):   _LEAF_ = 8;
663627    +          P_DepVar0  =     0.13793103448275;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.13793103448275;
663628    +          P_DepVar1  =     0.86206896551724;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.86206896551724;
663629    +          Q_DepVar0  =     0.13793103448275;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.13793103448275;
663630    +          Q_DepVar1  =     0.86206896551724;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.86206896551724;
663631    +          V_DepVar0  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.14285714285714;
663632    +          V_DepVar1  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.85714285714285;
663633    +          I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
663634    +          U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
663635    +          END;
MPRINT(EM_DIAGRAM):   END;
663636    +        END;
MPRINT(EM_DIAGRAM):   END;
663637    +      END;
MPRINT(EM_DIAGRAM):   END;
663638    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
663639    +      IF  NOT MISSING(NumWebVisitsMonth ) AND
663640    +                         7.5 <= NumWebVisitsMonth  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumWebVisitsMonth ) AND 7.5 <= NumWebVisitsMonth THEN DO;
663641    +        IF  NOT MISSING(NumCatalogPurchases ) AND
663642    +                           0.5 <= NumCatalogPurchases  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumCatalogPurchases ) AND 0.5 <= NumCatalogPurchases THEN 
DO;
663643    +          IF  NOT MISSING(Kidhome ) AND
663644    +            Kidhome  <                  0.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Kidhome ) AND Kidhome < 0.5 THEN DO;
663645    +            _NODE_  =                   52;
MPRINT(EM_DIAGRAM):   _NODE_ = 52;
663646    +            _LEAF_  =                    5;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
663647    +            P_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.66666666666666;
663648    +            P_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.33333333333333;
663649    +            Q_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.66666666666666;
663650    +            Q_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.33333333333333;
663651    +            V_DepVar0  =                  0.6;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.6;
663652    +            V_DepVar1  =                  0.4;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.4;
663653    +            I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
663654    +            U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
663655    +            END;
MPRINT(EM_DIAGRAM):   END;
663656    +          ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
663657    +            _NODE_  =                   53;
MPRINT(EM_DIAGRAM):   _NODE_ = 53;
663658    +            _LEAF_  =                    6;
MPRINT(EM_DIAGRAM):   _LEAF_ = 6;
663659    +            P_DepVar0  =     0.26470588235294;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.26470588235294;
663660    +            P_DepVar1  =     0.73529411764705;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.73529411764705;
663661    +            Q_DepVar0  =     0.26470588235294;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.26470588235294;
663662    +            Q_DepVar1  =     0.73529411764705;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.73529411764705;
663663    +            V_DepVar0  =     0.21428571428571;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.21428571428571;
663664    +            V_DepVar1  =     0.78571428571428;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.78571428571428;
663665    +            I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
663666    +            U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
663667    +            END;
MPRINT(EM_DIAGRAM):   END;
663668    +          END;
MPRINT(EM_DIAGRAM):   END;
663669    +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
663670    +          _NODE_  =                   32;
MPRINT(EM_DIAGRAM):   _NODE_ = 32;
663671    +          _LEAF_  =                    4;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
663672    +          P_DepVar0  =     0.81428571428571;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.81428571428571;
663673    +          P_DepVar1  =     0.18571428571428;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.18571428571428;
663674    +          Q_DepVar0  =     0.81428571428571;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.81428571428571;
663675    +          Q_DepVar1  =     0.18571428571428;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.18571428571428;
663676    +          V_DepVar0  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.71428571428571;
663677    +          V_DepVar1  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.28571428571428;
663678    +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
663679    +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
663680    +          END;
MPRINT(EM_DIAGRAM):   END;
663681    +        END;
MPRINT(EM_DIAGRAM):   END;
663682    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
663683    +        IF  NOT MISSING(NumDealsPurchases ) AND
663684    +                           5.5 <= NumDealsPurchases  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumDealsPurchases ) AND 5.5 <= NumDealsPurchases THEN DO;
663685    +          IF  NOT MISSING(NumStorePurchases ) AND
663686    +            NumStorePurchases  <                  6.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumStorePurchases ) AND NumStorePurchases < 6.5 THEN DO;
663687    +            _NODE_  =                   50;
MPRINT(EM_DIAGRAM):   _NODE_ = 50;
663688    +            _LEAF_  =                    2;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
663689    +            P_DepVar0  =     0.22222222222222;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.22222222222222;
663690    +            P_DepVar1  =     0.77777777777777;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.77777777777777;
663691    +            Q_DepVar0  =     0.22222222222222;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.22222222222222;
663692    +            Q_DepVar1  =     0.77777777777777;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.77777777777777;
663693    +            V_DepVar0  =                    0;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0;
663694    +            V_DepVar1  =                    1;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 1;
663695    +            I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
663696    +            U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
663697    +            END;
MPRINT(EM_DIAGRAM):   END;
663698    +          ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
663699    +            _NODE_  =                   51;
MPRINT(EM_DIAGRAM):   _NODE_ = 51;
663700    +            _LEAF_  =                    3;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
663701    +            P_DepVar0  =     0.91666666666666;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.91666666666666;
663702    +            P_DepVar1  =     0.08333333333333;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.08333333333333;
663703    +            Q_DepVar0  =     0.91666666666666;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.91666666666666;
663704    +            Q_DepVar1  =     0.08333333333333;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.08333333333333;
663705    +            V_DepVar0  =                  0.5;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.5;
663706    +            V_DepVar1  =                  0.5;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.5;
663707    +            I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
663708    +            U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
663709    +            END;
MPRINT(EM_DIAGRAM):   END;
663710    +          END;
MPRINT(EM_DIAGRAM):   END;
663711    +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
663712    +          _NODE_  =                   30;
MPRINT(EM_DIAGRAM):   _NODE_ = 30;
663713    +          _LEAF_  =                    1;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
663714    +          P_DepVar0  =     0.91545893719806;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.91545893719806;
663715    +          P_DepVar1  =     0.08454106280193;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.08454106280193;
663716    +          Q_DepVar0  =     0.91545893719806;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.91545893719806;
663717    +          Q_DepVar1  =     0.08454106280193;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.08454106280193;
663718    +          V_DepVar0  =     0.90217391304347;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.90217391304347;
663719    +          V_DepVar1  =     0.09782608695652;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.09782608695652;
663720    +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
663721    +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
663722    +          END;
MPRINT(EM_DIAGRAM):   END;
663723    +        END;
MPRINT(EM_DIAGRAM):   END;
663724    +      END;
MPRINT(EM_DIAGRAM):   END;
663725    +    END;
MPRINT(EM_DIAGRAM):   END;
663726    +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
663727    +    _NODE_  =                    5;
MPRINT(EM_DIAGRAM):   _NODE_ = 5;
663728    +    _LEAF_  =                   11;
MPRINT(EM_DIAGRAM):   _LEAF_ = 11;
663729    +    P_DepVar0  =     0.98042414355628;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.98042414355628;
663730    +    P_DepVar1  =     0.01957585644371;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.01957585644371;
663731    +    Q_DepVar0  =     0.98042414355628;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.98042414355628;
663732    +    Q_DepVar1  =     0.01957585644371;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.01957585644371;
663733    +    V_DepVar0  =     0.98795180722891;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.98795180722891;
663734    +    V_DepVar1  =     0.01204819277108;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.01204819277108;
663735    +    I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
663736    +    U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
663737    +    END;
MPRINT(EM_DIAGRAM):   END;
663738    +  END;
MPRINT(EM_DIAGRAM):   END;
663739    +
663740    +*****  RESIDUALS R_ *************;
MPRINT(EM_DIAGRAM):   ***** RESIDUALS R_ *************;
663741    +IF  F_DepVar  NE '0'
663742    +AND F_DepVar  NE '1'  THEN DO;
MPRINT(EM_DIAGRAM):   IF F_DepVar NE '0' AND F_DepVar NE '1' THEN DO;
663743    +        R_DepVar0  = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
663744    +        R_DepVar1  = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
663745    + END;
MPRINT(EM_DIAGRAM):   END;
663746    + ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
663747    +       R_DepVar0  =  -P_DepVar0 ;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0 ;
663748    +       R_DepVar1  =  -P_DepVar1 ;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1 ;
663749    +       SELECT( F_DepVar  );
MPRINT(EM_DIAGRAM):   SELECT( F_DepVar );
663750    +          WHEN( '0'  ) R_DepVar0  = R_DepVar0  +1;
MPRINT(EM_DIAGRAM):   WHEN( '0' ) R_DepVar0 = R_DepVar0 +1;
663751    +          WHEN( '1'  ) R_DepVar1  = R_DepVar1  +1;
MPRINT(EM_DIAGRAM):   WHEN( '1' ) R_DepVar1 = R_DepVar1 +1;
663752    +       END;
MPRINT(EM_DIAGRAM):   END;
663753    + END;
MPRINT(EM_DIAGRAM):   END;
663754    +
663755    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
663756    +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
663757    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
663758    +drop _LEAF_;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
663759    +* Renaming variables for Tree;
MPRINT(EM_DIAGRAM):   * Renaming variables for Tree;
663760    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
663761    +* Renaming Posterior variables for Tree;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Tree;
663762    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
663763    +drop Tree_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Tree_P_DepVar1;
663764    +Tree_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Tree_P_DepVar1 = P_DepVar1;
663765    +drop Tree_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Tree_P_DepVar0;
663766    +Tree_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Tree_P_DepVar0 = P_DepVar0;
663767    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
663768    +* Renaming _WARN_ variable for Tree;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Tree;
663769    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
663770    +length Tree_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Tree_WARN_ $4;
663771    +drop Tree_WARN_;
MPRINT(EM_DIAGRAM):   drop Tree_WARN_;
663772    +Tree_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Tree_WARN_ = _WARN_;
663773    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
663774    +* Ensmbl: Scoring Code of model 3 of 9;
MPRINT(EM_DIAGRAM):   * Ensmbl: Scoring Code of model 3 of 9;
663775    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
663776    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
663777    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
663778    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
663779    +* NODE: Neural4;
MPRINT(EM_DIAGRAM):   * NODE: Neural4;
663780    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
663781    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
663782    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
663783    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
663784    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
663785    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
663786    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
663787    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
663788    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
663789    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
663790    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
663791    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
663792    +LENGTH _WARN_ $4
663793    +      F_DepVar  $ 12
663794    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
663795    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
663796    +
663797    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
663798    +
663799    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
663800    +
663801    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
663802    +
663803    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
663804    +
663805    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
663806    +
663807    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
663808    +
663809    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
663810    +
663811    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
663812    +
663813    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
663814    +
663815    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
663816    +
663817    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
663818    +
663819    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
663820    +
663821    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
663822    +
663823    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
663824    +
663825    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
663826    +
663827    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
663828    +
663829    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
663830    +
663831    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
663832    +
663833    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
663834    +
663835    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
663836    +
663837    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
663838    +
663839    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
663840    +
663841    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
663842    +
663843    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
663844    +
663845    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
663846    +
663847    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
663848    +
663849    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
663850    +
663851    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
663852    +
663853    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
663854    +
663855    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
663856    +
663857    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
663858    +
663859    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
663860    +
663861    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
663862    +
663863    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
663864    +
663865    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
663866    +
663867    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
663868    +
663869    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
663870    +
663871    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
663872    +
663873    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
663874    +
663875    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
663876    +
663877    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
663878    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
663879    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
663880    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
663881    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
663882    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
663883    +end;
MPRINT(EM_DIAGRAM):   end;
663884    +else do;
MPRINT(EM_DIAGRAM):   else do;
663885    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
663886    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
663887    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
663888    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
663889    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
663890    +   end;
MPRINT(EM_DIAGRAM):   end;
663891    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
663892    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
663893    +   end;
MPRINT(EM_DIAGRAM):   end;
663894    +   else do;
MPRINT(EM_DIAGRAM):   else do;
663895    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
663896    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
663897    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
663898    +   end;
MPRINT(EM_DIAGRAM):   end;
663899    +end;
MPRINT(EM_DIAGRAM):   end;
663900    +
663901    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
663902    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
663903    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
663904    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
663905    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
663906    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
663907    +end;
MPRINT(EM_DIAGRAM):   end;
663908    +else do;
MPRINT(EM_DIAGRAM):   else do;
663909    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
663910    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
663911    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
663912    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
663913    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
663914    +   end;
MPRINT(EM_DIAGRAM):   end;
663915    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
663916    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
663917    +   end;
MPRINT(EM_DIAGRAM):   end;
663918    +   else do;
MPRINT(EM_DIAGRAM):   else do;
663919    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
663920    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
663921    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
663922    +   end;
MPRINT(EM_DIAGRAM):   end;
663923    +end;
MPRINT(EM_DIAGRAM):   end;
663924    +
663925    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
663926    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
663927    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
663928    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
663929    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
663930    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
663931    +end;
MPRINT(EM_DIAGRAM):   end;
663932    +else do;
MPRINT(EM_DIAGRAM):   else do;
663933    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
663934    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
663935    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
663936    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
663937    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
663938    +   end;
MPRINT(EM_DIAGRAM):   end;
663939    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
663940    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
663941    +   end;
MPRINT(EM_DIAGRAM):   end;
663942    +   else do;
MPRINT(EM_DIAGRAM):   else do;
663943    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
663944    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
663945    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
663946    +   end;
MPRINT(EM_DIAGRAM):   end;
663947    +end;
MPRINT(EM_DIAGRAM):   end;
663948    +
663949    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
663950    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
663951    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
663952    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
663953    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
663954    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
663955    +end;
MPRINT(EM_DIAGRAM):   end;
663956    +else do;
MPRINT(EM_DIAGRAM):   else do;
663957    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
663958    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
663959    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
663960    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
663961    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
663962    +   end;
MPRINT(EM_DIAGRAM):   end;
663963    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
663964    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
663965    +   end;
MPRINT(EM_DIAGRAM):   end;
663966    +   else do;
MPRINT(EM_DIAGRAM):   else do;
663967    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
663968    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
663969    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
663970    +   end;
MPRINT(EM_DIAGRAM):   end;
663971    +end;
MPRINT(EM_DIAGRAM):   end;
663972    +
663973    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
663974    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
663975    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
663976    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
663977    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
663978    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
663979    +end;
MPRINT(EM_DIAGRAM):   end;
663980    +else do;
MPRINT(EM_DIAGRAM):   else do;
663981    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
663982    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
663983    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
663984    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
663985    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
663986    +   end;
MPRINT(EM_DIAGRAM):   end;
663987    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
663988    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
663989    +   end;
MPRINT(EM_DIAGRAM):   end;
663990    +   else do;
MPRINT(EM_DIAGRAM):   else do;
663991    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
663992    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
663993    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
663994    +   end;
MPRINT(EM_DIAGRAM):   end;
663995    +end;
MPRINT(EM_DIAGRAM):   end;
663996    +
663997    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
663998    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
663999    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
664000    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
664001    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
664002    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
664003    +end;
MPRINT(EM_DIAGRAM):   end;
664004    +else do;
MPRINT(EM_DIAGRAM):   else do;
664005    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
664006    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
664007    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
664008    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
664009    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
664010    +   end;
MPRINT(EM_DIAGRAM):   end;
664011    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
664012    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
664013    +   end;
MPRINT(EM_DIAGRAM):   end;
664014    +   else do;
MPRINT(EM_DIAGRAM):   else do;
664015    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
664016    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
664017    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
664018    +   end;
MPRINT(EM_DIAGRAM):   end;
664019    +end;
MPRINT(EM_DIAGRAM):   end;
664020    +
664021    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
664022    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
664023    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
664024    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
664025    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
664026    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
664027    +end;
MPRINT(EM_DIAGRAM):   end;
664028    +else do;
MPRINT(EM_DIAGRAM):   else do;
664029    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
664030    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
664031    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
664032    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
664033    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
664034    +   end;
MPRINT(EM_DIAGRAM):   end;
664035    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
664036    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
664037    +   end;
MPRINT(EM_DIAGRAM):   end;
664038    +   else do;
MPRINT(EM_DIAGRAM):   else do;
664039    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
664040    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
664041    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
664042    +   end;
MPRINT(EM_DIAGRAM):   end;
664043    +end;
MPRINT(EM_DIAGRAM):   end;
664044    +
664045    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
664046    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
664047    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
664048    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
664049    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
664050    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
664051    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
664052    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
664053    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
664054    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
664055    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
664056    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
664057    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
664058    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
664059    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
664060    +end;
MPRINT(EM_DIAGRAM):   end;
664061    +else do;
MPRINT(EM_DIAGRAM):   else do;
664062    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
664063    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
664064    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
664065    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
664066    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
664067    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
664068    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
664069    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
664070    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
664071    +         end;
MPRINT(EM_DIAGRAM):   end;
664072    +         else do;
MPRINT(EM_DIAGRAM):   else do;
664073    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
664074    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
664075    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
664076    +            end;
MPRINT(EM_DIAGRAM):   end;
664077    +         end;
MPRINT(EM_DIAGRAM):   end;
664078    +      end;
MPRINT(EM_DIAGRAM):   end;
664079    +      else do;
MPRINT(EM_DIAGRAM):   else do;
664080    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
664081    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
664082    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
664083    +         end;
MPRINT(EM_DIAGRAM):   end;
664084    +      end;
MPRINT(EM_DIAGRAM):   end;
664085    +   end;
MPRINT(EM_DIAGRAM):   end;
664086    +   else do;
MPRINT(EM_DIAGRAM):   else do;
664087    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
664088    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
664089    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
664090    +      end;
MPRINT(EM_DIAGRAM):   end;
664091    +      else do;
MPRINT(EM_DIAGRAM):   else do;
664092    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
664093    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
664094    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
664095    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
664096    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
664097    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
664098    +         end;
MPRINT(EM_DIAGRAM):   end;
664099    +      end;
MPRINT(EM_DIAGRAM):   end;
664100    +   end;
MPRINT(EM_DIAGRAM):   end;
664101    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
664102    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
664103    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
664104    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
664105    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
664106    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
664107    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
664108    +   end;
MPRINT(EM_DIAGRAM):   end;
664109    +end;
MPRINT(EM_DIAGRAM):   end;
664110    +
664111    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
664112    +*** Checking missing input Interval
664113    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
664114    +
664115    +IF NMISS(
664116    +   AcceptedCmpTotal ,
664117    +   Kidhome ,
664118    +   Mnt ,
664119    +   MntFishProducts ,
664120    +   MntFruits ,
664121    +   MntGoldProds ,
664122    +   MntMeatProducts ,
664123    +   MntSweetProducts ,
664124    +   MntWines ,
664125    +   NumCatalogPurchases ,
664126    +   NumDealsPurchases ,
664127    +   NumDistPurchases ,
664128    +   NumStorePurchases ,
664129    +   NumWebPurchases ,
664130    +   NumWebVisitsMonth ,
664131    +   RFMstat ,
664132    +   Recency ,
664133    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Kidhome , Mnt , MntFishProducts , MntFruits 
, MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , 
NumDealsPurchases , NumDistPurchases , NumStorePurchases , NumWebPurchases , NumWebVisitsMonth 
, RFMstat , Recency , Teenhome ) THEN DO;
664134    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
664135    +
664136    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
664137    +END;
MPRINT(EM_DIAGRAM):   END;
664138    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
664139    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
664140    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
664141    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
664142    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
664143    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
664144    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
664145    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
664146    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
664147    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
664148    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
664149    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
664150    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
664151    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
664152    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
664153    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
664154    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
664155    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
664156    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
664157    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
664158    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
664159    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
664160    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
664161    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
664162    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
664163    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
664164    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
664165    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
664166    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
664167    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
664168    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
664169    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
664170    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
664171    +END;
MPRINT(EM_DIAGRAM):   END;
664172    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
664173    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
664174    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
664175    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
664176    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
664177    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
664178    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
664179    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
664180    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
664181    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
664182    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
664183    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
664184    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
664185    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
664186    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
664187    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
664188    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
664189    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
664190    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
664191    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
664192    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
664193    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
664194    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
664195    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
664196    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
664197    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
664198    +   ELSE S_NumCatalogPurchases
664199    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
664200    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
664201    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
664202    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
664203    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
664204    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
664205    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
664206    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
664207    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
664208    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
664209    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
664210    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
664211    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
664212    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
664213    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
664214    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
664215    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
664216    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
664217    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
664218    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
664219    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
664220    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
664221    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
664222    +END;
MPRINT(EM_DIAGRAM):   END;
664223    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
664224    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
664225    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
664226    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
664227    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
664228    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
664229    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
664230    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
664231    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
664232    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
664233    +   H11  =     -0.8246180954871 * S_AcceptedCmpTotal  +    -0.26046792683156 *
664234    +        S_Kidhome  +    -0.20961567748735 * S_Mnt  +     0.26654542653658 *
664235    +        S_MntFishProducts  +    -0.30951775122613 * S_MntFruits
664236    +          +     0.09051491444093 * S_MntGoldProds  +    -1.64328058678717 *
664237    +        S_MntMeatProducts  +    -0.19366895196568 * S_MntSweetProducts
664238    +          +     0.38603773876569 * S_MntWines  +    -0.25551176610235 *
664239    +        S_NumCatalogPurchases  +    -0.10625029852107 * S_NumDealsPurchases
664240    +          +     0.19912219980931 * S_NumDistPurchases
664241    +          +     0.18110016198301 * S_NumStorePurchases
664242    +          +     0.84844988279844 * S_NumWebPurchases
664243    +          +    -0.18450776402283 * S_NumWebVisitsMonth
664244    +          +    -0.50884714303231 * S_RFMstat  +     0.19244941768129 *
664245    +        S_Recency  +    -0.18130850769076 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.8246180954871 * S_AcceptedCmpTotal + -0.26046792683156 * 
S_Kidhome + -0.20961567748735 * S_Mnt + 0.26654542653658 * S_MntFishProducts + 
-0.30951775122613 * S_MntFruits + 0.09051491444093 * S_MntGoldProds + -1.64328058678717 * 
S_MntMeatProducts + -0.19366895196568 * S_MntSweetProducts + 0.38603773876569 * S_MntWines + 
-0.25551176610235 * S_NumCatalogPurchases + -0.10625029852107 * S_NumDealsPurchases + 
0.19912219980931 * S_NumDistPurchases + 0.18110016198301 * S_NumStorePurchases + 
0.84844988279844 * S_NumWebPurchases + -0.18450776402283 * S_NumWebVisitsMonth + 
-0.50884714303231 * S_RFMstat + 0.19244941768129 * S_Recency + -0.18130850769076 * S_Teenhome ;
664246    +   H12  =     0.59683104990369 * S_AcceptedCmpTotal  +     0.36552928900705 *
664247    +        S_Kidhome  +      0.5173309469318 * S_Mnt  +    -0.43538154644347 *
664248    +        S_MntFishProducts  +    -0.21779050605401 * S_MntFruits
664249    +          +     0.19689161190877 * S_MntGoldProds  +      1.9153507069603 *
664250    +        S_MntMeatProducts  +     0.21257962213904 * S_MntSweetProducts
664251    +          +    -0.49835209765306 * S_MntWines  +     1.47489768672818 *
664252    +        S_NumCatalogPurchases  +     0.68023375677638 * S_NumDealsPurchases
664253    +          +     0.28904827738676 * S_NumDistPurchases
664254    +          +    -0.77789592957647 * S_NumStorePurchases
664255    +          +    -0.72822660183607 * S_NumWebPurchases
664256    +          +     0.38372224856027 * S_NumWebVisitsMonth
664257    +          +       0.255547398028 * S_RFMstat  +    -0.45525472850351 *
664258    +        S_Recency  +     0.10036435252662 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.59683104990369 * S_AcceptedCmpTotal + 0.36552928900705 * 
S_Kidhome + 0.5173309469318 * S_Mnt + -0.43538154644347 * S_MntFishProducts + 
-0.21779050605401 * S_MntFruits + 0.19689161190877 * S_MntGoldProds + 1.9153507069603 * 
S_MntMeatProducts + 0.21257962213904 * S_MntSweetProducts + -0.49835209765306 * S_MntWines + 
1.47489768672818 * S_NumCatalogPurchases + 0.68023375677638 * S_NumDealsPurchases + 
0.28904827738676 * S_NumDistPurchases + -0.77789592957647 * S_NumStorePurchases + 
-0.72822660183607 * S_NumWebPurchases + 0.38372224856027 * S_NumWebVisitsMonth + 
0.255547398028 * S_RFMstat + -0.45525472850351 * S_Recency + 0.10036435252662 * S_Teenhome ;
664259    +   H13  =     -0.5325626665587 * S_AcceptedCmpTotal  +     0.71160037572862 *
664260    +        S_Kidhome  +    -0.00359855229002 * S_Mnt  +     0.19705637237968 *
664261    +        S_MntFishProducts  +     0.09889116807812 * S_MntFruits
664262    +          +     0.12320565911743 * S_MntGoldProds  +    -0.61569836083387 *
664263    +        S_MntMeatProducts  +      0.1217025461924 * S_MntSweetProducts
664264    +          +     0.46869304908218 * S_MntWines  +    -0.47274920452333 *
664265    +        S_NumCatalogPurchases  +     -0.4082953904163 * S_NumDealsPurchases
664266    +          +     0.19800897399715 * S_NumDistPurchases
664267    +          +     0.59071719241145 * S_NumStorePurchases
664268    +          +      0.3381501904539 * S_NumWebPurchases
664269    +          +    -1.28883338112011 * S_NumWebVisitsMonth
664270    +          +     0.00400055495022 * S_RFMstat  +     1.08206529730608 *
664271    +        S_Recency  +     0.35657275245743 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.5325626665587 * S_AcceptedCmpTotal + 0.71160037572862 * 
S_Kidhome + -0.00359855229002 * S_Mnt + 0.19705637237968 * S_MntFishProducts + 
0.09889116807812 * S_MntFruits + 0.12320565911743 * S_MntGoldProds + -0.61569836083387 * 
S_MntMeatProducts + 0.1217025461924 * S_MntSweetProducts + 0.46869304908218 * S_MntWines + 
-0.47274920452333 * S_NumCatalogPurchases + -0.4082953904163 * S_NumDealsPurchases + 
0.19800897399715 * S_NumDistPurchases + 0.59071719241145 * S_NumStorePurchases + 
0.3381501904539 * S_NumWebPurchases + -1.28883338112011 * S_NumWebVisitsMonth + 
0.00400055495022 * S_RFMstat + 1.08206529730608 * S_Recency + 0.35657275245743 * S_Teenhome ;
664272    +   H14  =    -0.33036484145041 * S_AcceptedCmpTotal  +     0.10011415505573 *
664273    +        S_Kidhome  +    -0.00759070944812 * S_Mnt  +     0.05305726956194 *
664274    +        S_MntFishProducts  +     0.08083584431458 * S_MntFruits
664275    +          +    -0.08731108181089 * S_MntGoldProds  +    -0.64750431537028 *
664276    +        S_MntMeatProducts  +     0.12864735236133 * S_MntSweetProducts
664277    +          +     0.61392673917624 * S_MntWines  +    -0.64142881303629 *
664278    +        S_NumCatalogPurchases  +    -0.05548488425681 * S_NumDealsPurchases
664279    +          +    -0.14288173902466 * S_NumDistPurchases
664280    +          +     0.19601348567287 * S_NumStorePurchases
664281    +          +    -0.08044033043411 * S_NumWebPurchases
664282    +          +    -0.39713255047568 * S_NumWebVisitsMonth
664283    +          +    -0.04913287368072 * S_RFMstat  +     1.19829042792592 *
664284    +        S_Recency  +     0.43457954748035 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.33036484145041 * S_AcceptedCmpTotal + 0.10011415505573 * 
S_Kidhome + -0.00759070944812 * S_Mnt + 0.05305726956194 * S_MntFishProducts + 
0.08083584431458 * S_MntFruits + -0.08731108181089 * S_MntGoldProds + -0.64750431537028 * 
S_MntMeatProducts + 0.12864735236133 * S_MntSweetProducts + 0.61392673917624 * S_MntWines + 
-0.64142881303629 * S_NumCatalogPurchases + -0.05548488425681 * S_NumDealsPurchases + 
-0.14288173902466 * S_NumDistPurchases + 0.19601348567287 * S_NumStorePurchases + 
-0.08044033043411 * S_NumWebPurchases + -0.39713255047568 * S_NumWebVisitsMonth + 
-0.04913287368072 * S_RFMstat + 1.19829042792592 * S_Recency + 0.43457954748035 * S_Teenhome ;
664285    +   H11  = H11  +     0.00533685725345 * AcceptedCmp10
664286    +          +      0.0179370757261 * AcceptedCmp20  +    -0.41410060470313 *
664287    +        AcceptedCmp30  +     0.07645376869498 * AcceptedCmp40
664288    +          +      0.5492727191786 * AcceptedCmp50  +    -0.05028898116052 *
664289    +        Complain0  +    -0.17001742563016 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.00533685725345 * AcceptedCmp10 + 0.0179370757261 * 
AcceptedCmp20 + -0.41410060470313 * AcceptedCmp30 + 0.07645376869498 * AcceptedCmp40 + 
0.5492727191786 * AcceptedCmp50 + -0.05028898116052 * Complain0 + -0.17001742563016 * 
HigherEducationBinary0 ;
664290    +   H12  = H12  +    -0.05469008468492 * AcceptedCmp10
664291    +          +     0.21812430064959 * AcceptedCmp20  +     0.26338110557539 *
664292    +        AcceptedCmp30  +     0.33060548335742 * AcceptedCmp40
664293    +          +    -0.36020558841261 * AcceptedCmp50  +    -0.15370297603958 *
664294    +        Complain0  +    -0.30675348901275 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.05469008468492 * AcceptedCmp10 + 0.21812430064959 * 
AcceptedCmp20 + 0.26338110557539 * AcceptedCmp30 + 0.33060548335742 * AcceptedCmp40 + 
-0.36020558841261 * AcceptedCmp50 + -0.15370297603958 * Complain0 + -0.30675348901275 * 
HigherEducationBinary0 ;
664295    +   H13  = H13  +     0.08685748229764 * AcceptedCmp10
664296    +          +     0.07844617220165 * AcceptedCmp20  +     0.31067826076463 *
664297    +        AcceptedCmp30  +     0.04677289598333 * AcceptedCmp40
664298    +          +    -0.02262539182663 * AcceptedCmp50  +    -0.09187679949493 *
664299    +        Complain0  +    -0.01445092200886 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.08685748229764 * AcceptedCmp10 + 0.07844617220165 * 
AcceptedCmp20 + 0.31067826076463 * AcceptedCmp30 + 0.04677289598333 * AcceptedCmp40 + 
-0.02262539182663 * AcceptedCmp50 + -0.09187679949493 * Complain0 + -0.01445092200886 * 
HigherEducationBinary0 ;
664300    +   H14  = H14  +     0.23256857638539 * AcceptedCmp10
664301    +          +     0.49380464365655 * AcceptedCmp20  +      0.1564578964027 *
664302    +        AcceptedCmp30  +     0.27321024493692 * AcceptedCmp40
664303    +          +     0.52468244186776 * AcceptedCmp50  +    -0.00211673076991 *
664304    +        Complain0  +     0.05471438087898 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.23256857638539 * AcceptedCmp10 + 0.49380464365655 * 
AcceptedCmp20 + 0.1564578964027 * AcceptedCmp30 + 0.27321024493692 * AcceptedCmp40 + 
0.52468244186776 * AcceptedCmp50 + -0.00211673076991 * Complain0 + 0.05471438087898 * 
HigherEducationBinary0 ;
664305    +   H11  = H11  +    -0.04076816270663 * Marital_StatusDivorced
664306    +          +    -0.67847600465626 * Marital_StatusMarried
664307    +          +     0.54591305323233 * Marital_StatusSingle
664308    +          +    -0.32687043798373 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.04076816270663 * Marital_StatusDivorced + 
-0.67847600465626 * Marital_StatusMarried + 0.54591305323233 * Marital_StatusSingle + 
-0.32687043798373 * Marital_StatusTogether ;
664309    +   H12  = H12  +    -0.12115659474027 * Marital_StatusDivorced
664310    +          +     0.46392772017888 * Marital_StatusMarried
664311    +          +    -0.17314180037873 * Marital_StatusSingle
664312    +          +     0.53644907440751 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.12115659474027 * Marital_StatusDivorced + 
0.46392772017888 * Marital_StatusMarried + -0.17314180037873 * Marital_StatusSingle + 
0.53644907440751 * Marital_StatusTogether ;
664313    +   H13  = H13  +    -0.54658256529903 * Marital_StatusDivorced
664314    +          +     0.30725483889925 * Marital_StatusMarried
664315    +          +    -0.68483370266906 * Marital_StatusSingle
664316    +          +     0.27621335641244 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.54658256529903 * Marital_StatusDivorced + 
0.30725483889925 * Marital_StatusMarried + -0.68483370266906 * Marital_StatusSingle + 
0.27621335641244 * Marital_StatusTogether ;
664317    +   H14  = H14  +    -0.38188288053916 * Marital_StatusDivorced
664318    +          +     1.16505115927327 * Marital_StatusMarried
664319    +          +     -0.8294279027913 * Marital_StatusSingle
664320    +          +     1.27240761581762 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.38188288053916 * Marital_StatusDivorced + 
1.16505115927327 * Marital_StatusMarried + -0.8294279027913 * Marital_StatusSingle + 
1.27240761581762 * Marital_StatusTogether ;
664321    +   H11  =     -1.1404178523108 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.1404178523108 + H11 ;
664322    +   H12  =    -0.13870893584871 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.13870893584871 + H12 ;
664323    +   H13  =       0.548122343891 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.548122343891 + H13 ;
664324    +   H14  =     1.07479952425856 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.07479952425856 + H14 ;
664325    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
664326    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
664327    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
664328    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
664329    +END;
MPRINT(EM_DIAGRAM):   END;
664330    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
664331    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
664332    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
664333    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
664334    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
664335    +END;
MPRINT(EM_DIAGRAM):   END;
664336    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
664337    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
664338    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
664339    +
664340    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
664341    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
664342    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
664343    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
664344    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
664345    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
664346    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
664347    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
664348    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
664349    +end;
MPRINT(EM_DIAGRAM):   end;
664350    +else do;
MPRINT(EM_DIAGRAM):   else do;
664351    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
664352    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
664353    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
664354    +   end;
MPRINT(EM_DIAGRAM):   end;
664355    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
664356    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
664357    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
664358    +   end;
MPRINT(EM_DIAGRAM):   end;
664359    +   else do;
MPRINT(EM_DIAGRAM):   else do;
664360    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
664361    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
664362    +   end;
MPRINT(EM_DIAGRAM):   end;
664363    +end;
MPRINT(EM_DIAGRAM):   end;
664364    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
664365    +   P_DepVar1  =    -2.05486530281327 * H11  +     3.33946880396656 * H12
664366    +          +      -3.559477956484 * H13  +    -4.19177056173878 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.05486530281327 * H11 + 3.33946880396656 * H12 + 
-3.559477956484 * H13 + -4.19177056173878 * H14 ;
664367    +   P_DepVar1  =     -2.0040107893081 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.0040107893081 + P_DepVar1 ;
664368    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
664369    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
664370    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
664371    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
664372    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
664373    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
664374    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
664375    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
664376    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
664377    +END;
MPRINT(EM_DIAGRAM):   END;
664378    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
664379    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
664380    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
664381    +END;
MPRINT(EM_DIAGRAM):   END;
664382    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
664383    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
664384    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
664385    +END;
MPRINT(EM_DIAGRAM):   END;
664386    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
664387    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
664388    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
664389    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
664390    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
664391    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
664392    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
664393    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
664394    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
664395    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
664396    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
664397    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
664398    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
664399    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
664400    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
664401    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
664402    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
664403    +END;
MPRINT(EM_DIAGRAM):   END;
664404    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
664405    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
664406    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
664407    +drop
664408    +H11
664409    +H12
664410    +H13
664411    +H14
664412    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
664413    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
664414    +* Renaming variables for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural4;
664415    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
664416    +* Renaming Posterior variables for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural4;
664417    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
664418    +drop Neural4_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural4_P_DepVar1;
664419    +Neural4_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural4_P_DepVar1 = P_DepVar1;
664420    +drop Neural4_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural4_P_DepVar0;
664421    +Neural4_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural4_P_DepVar0 = P_DepVar0;
664422    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
664423    +* Renaming _WARN_ variable for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural4;
664424    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
664425    +length Neural4_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural4_WARN_ $4;
664426    +drop Neural4_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural4_WARN_;
664427    +Neural4_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural4_WARN_ = _WARN_;
664428    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
664429    +* Ensmbl: Scoring Code of model 4 of 9;
MPRINT(EM_DIAGRAM):   * Ensmbl: Scoring Code of model 4 of 9;
664430    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
664431    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
664432    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
664433    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
664434    +* NODE: Neural;
MPRINT(EM_DIAGRAM):   * NODE: Neural;
664435    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
664436    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
664437    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
664438    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
664439    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
664440    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
664441    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
664442    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
664443    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
664444    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
664445    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
664446    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
664447    +LENGTH _WARN_ $4
664448    +      F_DepVar  $ 12
664449    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
664450    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
664451    +
664452    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
664453    +
664454    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
664455    +
664456    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
664457    +
664458    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
664459    +
664460    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
664461    +
664462    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
664463    +
664464    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
664465    +
664466    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
664467    +
664468    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
664469    +
664470    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
664471    +
664472    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
664473    +
664474    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
664475    +
664476    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
664477    +
664478    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
664479    +
664480    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
664481    +
664482    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
664483    +
664484    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
664485    +
664486    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
664487    +
664488    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
664489    +
664490    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
664491    +
664492    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
664493    +
664494    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
664495    +
664496    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
664497    +
664498    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
664499    +
664500    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
664501    +
664502    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
664503    +
664504    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
664505    +
664506    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
664507    +
664508    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
664509    +
664510    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
664511    +
664512    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
664513    +
664514    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
664515    +
664516    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
664517    +
664518    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
664519    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
664520    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
664521    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
664522    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
664523    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
664524    +end;
MPRINT(EM_DIAGRAM):   end;
664525    +else do;
MPRINT(EM_DIAGRAM):   else do;
664526    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
664527    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
664528    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
664529    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
664530    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
664531    +   end;
MPRINT(EM_DIAGRAM):   end;
664532    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
664533    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
664534    +   end;
MPRINT(EM_DIAGRAM):   end;
664535    +   else do;
MPRINT(EM_DIAGRAM):   else do;
664536    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
664537    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
664538    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
664539    +   end;
MPRINT(EM_DIAGRAM):   end;
664540    +end;
MPRINT(EM_DIAGRAM):   end;
664541    +
664542    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
664543    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
664544    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
664545    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
664546    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
664547    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
664548    +end;
MPRINT(EM_DIAGRAM):   end;
664549    +else do;
MPRINT(EM_DIAGRAM):   else do;
664550    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
664551    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
664552    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
664553    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
664554    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
664555    +   end;
MPRINT(EM_DIAGRAM):   end;
664556    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
664557    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
664558    +   end;
MPRINT(EM_DIAGRAM):   end;
664559    +   else do;
MPRINT(EM_DIAGRAM):   else do;
664560    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
664561    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
664562    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
664563    +   end;
MPRINT(EM_DIAGRAM):   end;
664564    +end;
MPRINT(EM_DIAGRAM):   end;
664565    +
664566    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
664567    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
664568    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
664569    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
664570    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
664571    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
664572    +end;
MPRINT(EM_DIAGRAM):   end;
664573    +else do;
MPRINT(EM_DIAGRAM):   else do;
664574    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
664575    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
664576    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
664577    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
664578    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
664579    +   end;
MPRINT(EM_DIAGRAM):   end;
664580    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
664581    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
664582    +   end;
MPRINT(EM_DIAGRAM):   end;
664583    +   else do;
MPRINT(EM_DIAGRAM):   else do;
664584    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
664585    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
664586    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
664587    +   end;
MPRINT(EM_DIAGRAM):   end;
664588    +end;
MPRINT(EM_DIAGRAM):   end;
664589    +
664590    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
664591    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
664592    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
664593    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
664594    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
664595    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
664596    +end;
MPRINT(EM_DIAGRAM):   end;
664597    +else do;
MPRINT(EM_DIAGRAM):   else do;
664598    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
664599    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
664600    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
664601    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
664602    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
664603    +   end;
MPRINT(EM_DIAGRAM):   end;
664604    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
664605    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
664606    +   end;
MPRINT(EM_DIAGRAM):   end;
664607    +   else do;
MPRINT(EM_DIAGRAM):   else do;
664608    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
664609    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
664610    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
664611    +   end;
MPRINT(EM_DIAGRAM):   end;
664612    +end;
MPRINT(EM_DIAGRAM):   end;
664613    +
664614    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
664615    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
664616    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
664617    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
664618    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
664619    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
664620    +end;
MPRINT(EM_DIAGRAM):   end;
664621    +else do;
MPRINT(EM_DIAGRAM):   else do;
664622    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
664623    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
664624    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
664625    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
664626    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
664627    +   end;
MPRINT(EM_DIAGRAM):   end;
664628    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
664629    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
664630    +   end;
MPRINT(EM_DIAGRAM):   end;
664631    +   else do;
MPRINT(EM_DIAGRAM):   else do;
664632    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
664633    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
664634    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
664635    +   end;
MPRINT(EM_DIAGRAM):   end;
664636    +end;
MPRINT(EM_DIAGRAM):   end;
664637    +
664638    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
664639    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
664640    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
664641    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
664642    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
664643    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
664644    +end;
MPRINT(EM_DIAGRAM):   end;
664645    +else do;
MPRINT(EM_DIAGRAM):   else do;
664646    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
664647    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
664648    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
664649    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
664650    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
664651    +   end;
MPRINT(EM_DIAGRAM):   end;
664652    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
664653    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
664654    +   end;
MPRINT(EM_DIAGRAM):   end;
664655    +   else do;
MPRINT(EM_DIAGRAM):   else do;
664656    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
664657    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
664658    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
664659    +   end;
MPRINT(EM_DIAGRAM):   end;
664660    +end;
MPRINT(EM_DIAGRAM):   end;
664661    +
664662    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
664663    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
664664    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
664665    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
664666    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
664667    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
664668    +end;
MPRINT(EM_DIAGRAM):   end;
664669    +else do;
MPRINT(EM_DIAGRAM):   else do;
664670    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
664671    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
664672    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
664673    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
664674    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
664675    +   end;
MPRINT(EM_DIAGRAM):   end;
664676    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
664677    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
664678    +   end;
MPRINT(EM_DIAGRAM):   end;
664679    +   else do;
MPRINT(EM_DIAGRAM):   else do;
664680    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
664681    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
664682    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
664683    +   end;
MPRINT(EM_DIAGRAM):   end;
664684    +end;
MPRINT(EM_DIAGRAM):   end;
664685    +
664686    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
664687    +*** Checking missing input Interval
664688    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
664689    +
664690    +IF NMISS(
664691    +   AcceptedCmpTotal ,
664692    +   Kidhome ,
664693    +   Mnt ,
664694    +   MntFishProducts ,
664695    +   MntFruits ,
664696    +   MntGoldProds ,
664697    +   MntMeatProducts ,
664698    +   MntSweetProducts ,
664699    +   MntWines ,
664700    +   NumCatalogPurchases ,
664701    +   NumDealsPurchases ,
664702    +   NumDistPurchases ,
664703    +   NumStorePurchases ,
664704    +   NumWebPurchases ,
664705    +   NumWebVisitsMonth ,
664706    +   RFMstat ,
664707    +   Recency ,
664708    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Kidhome , Mnt , MntFishProducts , MntFruits 
, MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , 
NumDealsPurchases , NumDistPurchases , NumStorePurchases , NumWebPurchases , NumWebVisitsMonth 
, RFMstat , Recency , Teenhome ) THEN DO;
664709    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
664710    +
664711    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
664712    +END;
MPRINT(EM_DIAGRAM):   END;
664713    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
664714    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
664715    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
664716    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
664717    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
664718    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
664719    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
664720    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
664721    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
664722    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
664723    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
664724    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
664725    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
664726    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
664727    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
664728    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
664729    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
664730    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
664731    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
664732    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
664733    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
664734    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
664735    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
664736    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
664737    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
664738    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
664739    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
664740    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
664741    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
664742    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
664743    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
664744    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
664745    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
664746    +END;
MPRINT(EM_DIAGRAM):   END;
664747    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
664748    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
664749    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
664750    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
664751    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
664752    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
664753    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
664754    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
664755    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
664756    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
664757    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
664758    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
664759    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
664760    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
664761    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
664762    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
664763    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
664764    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
664765    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
664766    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
664767    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
664768    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
664769    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
664770    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
664771    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
664772    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
664773    +   ELSE S_NumCatalogPurchases
664774    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
664775    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
664776    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
664777    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
664778    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
664779    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
664780    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
664781    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
664782    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
664783    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
664784    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
664785    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
664786    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
664787    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
664788    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
664789    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
664790    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
664791    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
664792    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
664793    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
664794    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
664795    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
664796    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
664797    +END;
MPRINT(EM_DIAGRAM):   END;
664798    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
664799    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
664800    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
664801    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
664802    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
664803    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
664804    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
664805    +   H11  =     0.05683042207498 * S_AcceptedCmpTotal  +     0.01103749863785 *
664806    +        S_Kidhome  +      0.0668028452714 * S_Mnt  +     0.02967520347091 *
664807    +        S_MntFishProducts  +     0.01858045039368 * S_MntFruits
664808    +          +    -0.02635078317954 * S_MntGoldProds  +    -0.25780271539024 *
664809    +        S_MntMeatProducts  +     0.01453133061011 * S_MntSweetProducts
664810    +          +     0.07702251699374 * S_MntWines  +    -0.28646346184321 *
664811    +        S_NumCatalogPurchases  +    -0.12552585628838 * S_NumDealsPurchases
664812    +          +     0.09149172977308 * S_NumDistPurchases
664813    +          +      0.1286379510771 * S_NumStorePurchases
664814    +          +     0.04601789983748 * S_NumWebPurchases
664815    +          +    -0.21551517718316 * S_NumWebVisitsMonth
664816    +          +    -0.05297005877428 * S_RFMstat  +     0.30037503125852 *
664817    +        S_Recency  +     0.04585774296716 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.05683042207498 * S_AcceptedCmpTotal + 0.01103749863785 * 
S_Kidhome + 0.0668028452714 * S_Mnt + 0.02967520347091 * S_MntFishProducts + 0.01858045039368 
* S_MntFruits + -0.02635078317954 * S_MntGoldProds + -0.25780271539024 * S_MntMeatProducts + 
0.01453133061011 * S_MntSweetProducts + 0.07702251699374 * S_MntWines + -0.28646346184321 * 
S_NumCatalogPurchases + -0.12552585628838 * S_NumDealsPurchases + 0.09149172977308 * 
S_NumDistPurchases + 0.1286379510771 * S_NumStorePurchases + 0.04601789983748 * 
S_NumWebPurchases + -0.21551517718316 * S_NumWebVisitsMonth + -0.05297005877428 * S_RFMstat + 
0.30037503125852 * S_Recency + 0.04585774296716 * S_Teenhome ;
664818    +   H11  = H11  +     0.19703919058259 * AcceptedCmp10
664819    +          +     0.17114050759001 * AcceptedCmp20  +     0.20648038431009 *
664820    +        AcceptedCmp30  +     0.19476699920944 * AcceptedCmp40
664821    +          +     0.26437935662252 * AcceptedCmp50  +    -0.03285342631116 *
664822    +        Complain0  +     0.02557620526354 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.19703919058259 * AcceptedCmp10 + 0.17114050759001 * 
AcceptedCmp20 + 0.20648038431009 * AcceptedCmp30 + 0.19476699920944 * AcceptedCmp40 + 
0.26437935662252 * AcceptedCmp50 + -0.03285342631116 * Complain0 + 0.02557620526354 * 
HigherEducationBinary0 ;
664823    +   H11  =    -0.45597910153862 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.45597910153862 + H11 ;
664824    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
664825    +END;
MPRINT(EM_DIAGRAM):   END;
664826    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
664827    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
664828    +END;
MPRINT(EM_DIAGRAM):   END;
664829    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
664830    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
664831    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
664832    +
664833    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
664834    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
664835    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
664836    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
664837    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
664838    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
664839    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
664840    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
664841    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
664842    +end;
MPRINT(EM_DIAGRAM):   end;
664843    +else do;
MPRINT(EM_DIAGRAM):   else do;
664844    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
664845    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
664846    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
664847    +   end;
MPRINT(EM_DIAGRAM):   end;
664848    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
664849    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
664850    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
664851    +   end;
MPRINT(EM_DIAGRAM):   end;
664852    +   else do;
MPRINT(EM_DIAGRAM):   else do;
664853    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
664854    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
664855    +   end;
MPRINT(EM_DIAGRAM):   end;
664856    +end;
MPRINT(EM_DIAGRAM):   end;
664857    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
664858    +   P_DepVar1  =    -8.59083580950057 * H11 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -8.59083580950057 * H11 ;
664859    +   P_DepVar1  =    -1.22832072210597 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.22832072210597 + P_DepVar1 ;
664860    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
664861    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
664862    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
664863    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
664864    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
664865    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
664866    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
664867    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
664868    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
664869    +END;
MPRINT(EM_DIAGRAM):   END;
664870    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
664871    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
664872    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
664873    +END;
MPRINT(EM_DIAGRAM):   END;
664874    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
664875    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
664876    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
664877    +END;
MPRINT(EM_DIAGRAM):   END;
664878    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
664879    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
664880    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
664881    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
664882    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
664883    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
664884    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
664885    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
664886    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
664887    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
664888    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
664889    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
664890    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
664891    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
664892    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
664893    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
664894    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
664895    +END;
MPRINT(EM_DIAGRAM):   END;
664896    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
664897    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
664898    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
664899    +drop
664900    +H11
664901    +;
MPRINT(EM_DIAGRAM):   drop H11 ;
664902    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
664903    +* Renaming variables for Neural;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural;
664904    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
664905    +* Renaming Posterior variables for Neural;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural;
664906    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
664907    +drop Neural_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural_P_DepVar1;
664908    +Neural_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural_P_DepVar1 = P_DepVar1;
664909    +drop Neural_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural_P_DepVar0;
664910    +Neural_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural_P_DepVar0 = P_DepVar0;
664911    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
664912    +* Renaming _WARN_ variable for Neural;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural;
664913    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
664914    +length Neural_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural_WARN_ $4;
664915    +drop Neural_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural_WARN_;
664916    +Neural_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural_WARN_ = _WARN_;
664917    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
664918    +* Ensmbl: Scoring Code of model 5 of 9;
MPRINT(EM_DIAGRAM):   * Ensmbl: Scoring Code of model 5 of 9;
664919    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
664920    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
664921    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
664922    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
664923    +* NODE: Neural2;
MPRINT(EM_DIAGRAM):   * NODE: Neural2;
664924    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
664925    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
664926    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
664927    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
664928    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
664929    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
664930    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
664931    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
664932    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
664933    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
664934    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
664935    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
664936    +LENGTH _WARN_ $4
664937    +      F_DepVar  $ 12
664938    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
664939    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
664940    +
664941    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
664942    +
664943    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
664944    +
664945    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
664946    +
664947    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
664948    +
664949    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
664950    +
664951    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
664952    +
664953    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
664954    +
664955    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
664956    +
664957    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
664958    +
664959    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
664960    +
664961    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
664962    +
664963    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
664964    +
664965    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
664966    +
664967    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
664968    +
664969    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
664970    +
664971    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
664972    +
664973    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
664974    +
664975    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
664976    +
664977    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
664978    +
664979    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
664980    +
664981    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
664982    +
664983    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
664984    +
664985    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
664986    +
664987    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
664988    +
664989    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
664990    +
664991    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
664992    +
664993    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
664994    +
664995    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
664996    +
664997    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
664998    +
664999    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
665000    +
665001    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
665002    +
665003    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
665004    +
665005    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
665006    +
665007    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
665008    +
665009    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
665010    +
665011    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
665012    +
665013    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
665014    +
665015    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
665016    +
665017    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
665018    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
665019    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
665020    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
665021    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
665022    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
665023    +end;
MPRINT(EM_DIAGRAM):   end;
665024    +else do;
MPRINT(EM_DIAGRAM):   else do;
665025    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
665026    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
665027    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
665028    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
665029    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
665030    +   end;
MPRINT(EM_DIAGRAM):   end;
665031    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
665032    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
665033    +   end;
MPRINT(EM_DIAGRAM):   end;
665034    +   else do;
MPRINT(EM_DIAGRAM):   else do;
665035    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
665036    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
665037    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
665038    +   end;
MPRINT(EM_DIAGRAM):   end;
665039    +end;
MPRINT(EM_DIAGRAM):   end;
665040    +
665041    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
665042    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
665043    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
665044    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
665045    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
665046    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
665047    +end;
MPRINT(EM_DIAGRAM):   end;
665048    +else do;
MPRINT(EM_DIAGRAM):   else do;
665049    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
665050    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
665051    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
665052    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
665053    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
665054    +   end;
MPRINT(EM_DIAGRAM):   end;
665055    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
665056    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
665057    +   end;
MPRINT(EM_DIAGRAM):   end;
665058    +   else do;
MPRINT(EM_DIAGRAM):   else do;
665059    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
665060    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
665061    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
665062    +   end;
MPRINT(EM_DIAGRAM):   end;
665063    +end;
MPRINT(EM_DIAGRAM):   end;
665064    +
665065    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
665066    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
665067    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
665068    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
665069    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
665070    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
665071    +end;
MPRINT(EM_DIAGRAM):   end;
665072    +else do;
MPRINT(EM_DIAGRAM):   else do;
665073    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
665074    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
665075    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
665076    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
665077    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
665078    +   end;
MPRINT(EM_DIAGRAM):   end;
665079    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
665080    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
665081    +   end;
MPRINT(EM_DIAGRAM):   end;
665082    +   else do;
MPRINT(EM_DIAGRAM):   else do;
665083    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
665084    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
665085    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
665086    +   end;
MPRINT(EM_DIAGRAM):   end;
665087    +end;
MPRINT(EM_DIAGRAM):   end;
665088    +
665089    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
665090    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
665091    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
665092    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
665093    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
665094    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
665095    +end;
MPRINT(EM_DIAGRAM):   end;
665096    +else do;
MPRINT(EM_DIAGRAM):   else do;
665097    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
665098    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
665099    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
665100    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
665101    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
665102    +   end;
MPRINT(EM_DIAGRAM):   end;
665103    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
665104    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
665105    +   end;
MPRINT(EM_DIAGRAM):   end;
665106    +   else do;
MPRINT(EM_DIAGRAM):   else do;
665107    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
665108    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
665109    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
665110    +   end;
MPRINT(EM_DIAGRAM):   end;
665111    +end;
MPRINT(EM_DIAGRAM):   end;
665112    +
665113    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
665114    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
665115    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
665116    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
665117    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
665118    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
665119    +end;
MPRINT(EM_DIAGRAM):   end;
665120    +else do;
MPRINT(EM_DIAGRAM):   else do;
665121    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
665122    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
665123    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
665124    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
665125    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
665126    +   end;
MPRINT(EM_DIAGRAM):   end;
665127    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
665128    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
665129    +   end;
MPRINT(EM_DIAGRAM):   end;
665130    +   else do;
MPRINT(EM_DIAGRAM):   else do;
665131    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
665132    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
665133    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
665134    +   end;
MPRINT(EM_DIAGRAM):   end;
665135    +end;
MPRINT(EM_DIAGRAM):   end;
665136    +
665137    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
665138    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
665139    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
665140    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
665141    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
665142    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
665143    +end;
MPRINT(EM_DIAGRAM):   end;
665144    +else do;
MPRINT(EM_DIAGRAM):   else do;
665145    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
665146    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
665147    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
665148    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
665149    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
665150    +   end;
MPRINT(EM_DIAGRAM):   end;
665151    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
665152    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
665153    +   end;
MPRINT(EM_DIAGRAM):   end;
665154    +   else do;
MPRINT(EM_DIAGRAM):   else do;
665155    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
665156    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
665157    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
665158    +   end;
MPRINT(EM_DIAGRAM):   end;
665159    +end;
MPRINT(EM_DIAGRAM):   end;
665160    +
665161    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
665162    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
665163    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
665164    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
665165    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
665166    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
665167    +end;
MPRINT(EM_DIAGRAM):   end;
665168    +else do;
MPRINT(EM_DIAGRAM):   else do;
665169    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
665170    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
665171    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
665172    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
665173    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
665174    +   end;
MPRINT(EM_DIAGRAM):   end;
665175    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
665176    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
665177    +   end;
MPRINT(EM_DIAGRAM):   end;
665178    +   else do;
MPRINT(EM_DIAGRAM):   else do;
665179    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
665180    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
665181    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
665182    +   end;
MPRINT(EM_DIAGRAM):   end;
665183    +end;
MPRINT(EM_DIAGRAM):   end;
665184    +
665185    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
665186    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
665187    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
665188    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
665189    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
665190    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
665191    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
665192    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
665193    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
665194    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
665195    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
665196    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
665197    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
665198    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
665199    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
665200    +end;
MPRINT(EM_DIAGRAM):   end;
665201    +else do;
MPRINT(EM_DIAGRAM):   else do;
665202    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
665203    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
665204    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
665205    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
665206    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
665207    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
665208    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
665209    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
665210    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
665211    +         end;
MPRINT(EM_DIAGRAM):   end;
665212    +         else do;
MPRINT(EM_DIAGRAM):   else do;
665213    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
665214    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
665215    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
665216    +            end;
MPRINT(EM_DIAGRAM):   end;
665217    +         end;
MPRINT(EM_DIAGRAM):   end;
665218    +      end;
MPRINT(EM_DIAGRAM):   end;
665219    +      else do;
MPRINT(EM_DIAGRAM):   else do;
665220    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
665221    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
665222    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
665223    +         end;
MPRINT(EM_DIAGRAM):   end;
665224    +      end;
MPRINT(EM_DIAGRAM):   end;
665225    +   end;
MPRINT(EM_DIAGRAM):   end;
665226    +   else do;
MPRINT(EM_DIAGRAM):   else do;
665227    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
665228    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
665229    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
665230    +      end;
MPRINT(EM_DIAGRAM):   end;
665231    +      else do;
MPRINT(EM_DIAGRAM):   else do;
665232    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
665233    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
665234    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
665235    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
665236    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
665237    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
665238    +         end;
MPRINT(EM_DIAGRAM):   end;
665239    +      end;
MPRINT(EM_DIAGRAM):   end;
665240    +   end;
MPRINT(EM_DIAGRAM):   end;
665241    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
665242    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
665243    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
665244    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
665245    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
665246    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
665247    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
665248    +   end;
MPRINT(EM_DIAGRAM):   end;
665249    +end;
MPRINT(EM_DIAGRAM):   end;
665250    +
665251    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
665252    +*** Checking missing input Interval
665253    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
665254    +
665255    +IF NMISS(
665256    +   AcceptedCmpTotal ,
665257    +   Kidhome ,
665258    +   Mnt ,
665259    +   MntFishProducts ,
665260    +   MntFruits ,
665261    +   MntGoldProds ,
665262    +   MntMeatProducts ,
665263    +   MntSweetProducts ,
665264    +   MntWines ,
665265    +   NumCatalogPurchases ,
665266    +   NumDealsPurchases ,
665267    +   NumDistPurchases ,
665268    +   NumStorePurchases ,
665269    +   NumWebPurchases ,
665270    +   NumWebVisitsMonth ,
665271    +   RFMstat ,
665272    +   Recency ,
665273    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Kidhome , Mnt , MntFishProducts , MntFruits 
, MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , 
NumDealsPurchases , NumDistPurchases , NumStorePurchases , NumWebPurchases , NumWebVisitsMonth 
, RFMstat , Recency , Teenhome ) THEN DO;
665274    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
665275    +
665276    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
665277    +END;
MPRINT(EM_DIAGRAM):   END;
665278    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
665279    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
665280    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
665281    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
665282    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
665283    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
665284    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
665285    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
665286    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
665287    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
665288    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
665289    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
665290    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
665291    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
665292    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
665293    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
665294    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
665295    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
665296    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
665297    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
665298    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
665299    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
665300    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
665301    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
665302    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
665303    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
665304    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
665305    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
665306    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
665307    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
665308    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
665309    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
665310    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
665311    +END;
MPRINT(EM_DIAGRAM):   END;
665312    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
665313    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
665314    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
665315    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
665316    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
665317    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
665318    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
665319    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
665320    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
665321    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
665322    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
665323    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
665324    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
665325    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
665326    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
665327    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
665328    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
665329    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
665330    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
665331    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
665332    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
665333    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
665334    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
665335    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
665336    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
665337    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
665338    +   ELSE S_NumCatalogPurchases
665339    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
665340    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
665341    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
665342    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
665343    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
665344    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
665345    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
665346    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
665347    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
665348    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
665349    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
665350    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
665351    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
665352    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
665353    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
665354    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
665355    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
665356    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
665357    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
665358    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
665359    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
665360    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
665361    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
665362    +END;
MPRINT(EM_DIAGRAM):   END;
665363    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
665364    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
665365    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
665366    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
665367    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
665368    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
665369    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
665370    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
665371    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
665372    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
665373    +   H11  =     1.01101276887315 * S_AcceptedCmpTotal  +     0.13088206386642 *
665374    +        S_Kidhome  +     0.44144124105344 * S_Mnt  +    -0.68904392437475 *
665375    +        S_MntFishProducts  +    -0.17121585659716 * S_MntFruits
665376    +          +     0.11335785908498 * S_MntGoldProds  +      2.7693787644231 *
665377    +        S_MntMeatProducts  +     0.05508921126989 * S_MntSweetProducts
665378    +          +    -0.84963149161721 * S_MntWines  +     0.93831643366323 *
665379    +        S_NumCatalogPurchases  +     0.61100213741284 * S_NumDealsPurchases
665380    +          +     0.02505564750154 * S_NumDistPurchases
665381    +          +    -0.68813734794561 * S_NumStorePurchases
665382    +          +    -0.70997870192497 * S_NumWebPurchases
665383    +          +     0.29587693128027 * S_NumWebVisitsMonth
665384    +          +     0.78508541462113 * S_RFMstat  +     -0.3308883600476 *
665385    +        S_Recency  +    -0.00325917604837 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 1.01101276887315 * S_AcceptedCmpTotal + 0.13088206386642 * 
S_Kidhome + 0.44144124105344 * S_Mnt + -0.68904392437475 * S_MntFishProducts + 
-0.17121585659716 * S_MntFruits + 0.11335785908498 * S_MntGoldProds + 2.7693787644231 * 
S_MntMeatProducts + 0.05508921126989 * S_MntSweetProducts + -0.84963149161721 * S_MntWines + 
0.93831643366323 * S_NumCatalogPurchases + 0.61100213741284 * S_NumDealsPurchases + 
0.02505564750154 * S_NumDistPurchases + -0.68813734794561 * S_NumStorePurchases + 
-0.70997870192497 * S_NumWebPurchases + 0.29587693128027 * S_NumWebVisitsMonth + 
0.78508541462113 * S_RFMstat + -0.3308883600476 * S_Recency + -0.00325917604837 * S_Teenhome ;
665386    +   H12  =    -0.52436299608191 * S_AcceptedCmpTotal  +     0.27198236309079 *
665387    +        S_Kidhome  +     0.16271772923493 * S_Mnt  +     0.09777129448709 *
665388    +        S_MntFishProducts  +     0.08286856142975 * S_MntFruits
665389    +          +     0.01382699665825 * S_MntGoldProds  +    -0.64717980145363 *
665390    +        S_MntMeatProducts  +     0.05864522802919 * S_MntSweetProducts
665391    +          +     0.48084041085358 * S_MntWines  +    -0.54710128323244 *
665392    +        S_NumCatalogPurchases  +    -0.13512538901701 * S_NumDealsPurchases
665393    +          +     0.06434299218856 * S_NumDistPurchases
665394    +          +     0.42712319617209 * S_NumStorePurchases
665395    +          +     0.31123207604233 * S_NumWebPurchases
665396    +          +    -1.01860201337102 * S_NumWebVisitsMonth
665397    +          +    -0.03004351543086 * S_RFMstat  +      1.1539132835032 *
665398    +        S_Recency  +     0.26483130659279 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.52436299608191 * S_AcceptedCmpTotal + 0.27198236309079 * 
S_Kidhome + 0.16271772923493 * S_Mnt + 0.09777129448709 * S_MntFishProducts + 0.08286856142975 
* S_MntFruits + 0.01382699665825 * S_MntGoldProds + -0.64717980145363 * S_MntMeatProducts + 
0.05864522802919 * S_MntSweetProducts + 0.48084041085358 * S_MntWines + -0.54710128323244 * 
S_NumCatalogPurchases + -0.13512538901701 * S_NumDealsPurchases + 0.06434299218856 * 
S_NumDistPurchases + 0.42712319617209 * S_NumStorePurchases + 0.31123207604233 * 
S_NumWebPurchases + -1.01860201337102 * S_NumWebVisitsMonth + -0.03004351543086 * S_RFMstat + 
1.1539132835032 * S_Recency + 0.26483130659279 * S_Teenhome ;
665399    +   H11  = H11  +    -0.30089946733563 * AcceptedCmp10
665400    +          +     0.33352940500449 * AcceptedCmp20  +     0.57640754092947 *
665401    +        AcceptedCmp30  +     0.43007791062186 * AcceptedCmp40
665402    +          +    -0.97559596081103 * AcceptedCmp50  +      -0.156153798165 *
665403    +        Complain0  +    -0.08163020130832 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.30089946733563 * AcceptedCmp10 + 0.33352940500449 * 
AcceptedCmp20 + 0.57640754092947 * AcceptedCmp30 + 0.43007791062186 * AcceptedCmp40 + 
-0.97559596081103 * AcceptedCmp50 + -0.156153798165 * Complain0 + -0.08163020130832 * 
HigherEducationBinary0 ;
665404    +   H12  = H12  +     0.08049893192691 * AcceptedCmp10
665405    +          +     0.08395178819383 * AcceptedCmp20  +     0.11982414653687 *
665406    +        AcceptedCmp30  +     0.13126623447029 * AcceptedCmp40
665407    +          +      0.3326649980497 * AcceptedCmp50  +    -0.03185471588077 *
665408    +        Complain0  +     0.08220343686165 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.08049893192691 * AcceptedCmp10 + 0.08395178819383 * 
AcceptedCmp20 + 0.11982414653687 * AcceptedCmp30 + 0.13126623447029 * AcceptedCmp40 + 
0.3326649980497 * AcceptedCmp50 + -0.03185471588077 * Complain0 + 0.08220343686165 * 
HigherEducationBinary0 ;
665409    +   H11  = H11  +    -0.24837156257202 * Marital_StatusDivorced
665410    +          +     0.31380389607446 * Marital_StatusMarried
665411    +          +    -0.11994840163803 * Marital_StatusSingle
665412    +          +     0.30069256789445 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.24837156257202 * Marital_StatusDivorced + 
0.31380389607446 * Marital_StatusMarried + -0.11994840163803 * Marital_StatusSingle + 
0.30069256789445 * Marital_StatusTogether ;
665413    +   H12  = H12  +    -0.41749658642963 * Marital_StatusDivorced
665414    +          +     0.72506125430191 * Marital_StatusMarried
665415    +          +    -0.54747054981285 * Marital_StatusSingle
665416    +          +     0.89421218316246 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.41749658642963 * Marital_StatusDivorced + 
0.72506125430191 * Marital_StatusMarried + -0.54747054981285 * Marital_StatusSingle + 
0.89421218316246 * Marital_StatusTogether ;
665417    +   H11  =     0.50192687520529 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.50192687520529 + H11 ;
665418    +   H12  =     0.17708947264117 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.17708947264117 + H12 ;
665419    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
665420    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
665421    +END;
MPRINT(EM_DIAGRAM):   END;
665422    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
665423    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
665424    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
665425    +END;
MPRINT(EM_DIAGRAM):   END;
665426    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
665427    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
665428    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
665429    +
665430    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
665431    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
665432    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
665433    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
665434    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
665435    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
665436    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
665437    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
665438    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
665439    +end;
MPRINT(EM_DIAGRAM):   end;
665440    +else do;
MPRINT(EM_DIAGRAM):   else do;
665441    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
665442    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
665443    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
665444    +   end;
MPRINT(EM_DIAGRAM):   end;
665445    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
665446    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
665447    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
665448    +   end;
MPRINT(EM_DIAGRAM):   end;
665449    +   else do;
MPRINT(EM_DIAGRAM):   else do;
665450    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
665451    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
665452    +   end;
MPRINT(EM_DIAGRAM):   end;
665453    +end;
MPRINT(EM_DIAGRAM):   end;
665454    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
665455    +   P_DepVar1  =     4.38180289637299 * H11  +    -4.42967128560878 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.38180289637299 * H11 + -4.42967128560878 * H12 ;
665456    +   P_DepVar1  =    -3.75681581527016 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.75681581527016 + P_DepVar1 ;
665457    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
665458    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
665459    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
665460    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
665461    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
665462    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
665463    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
665464    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
665465    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
665466    +END;
MPRINT(EM_DIAGRAM):   END;
665467    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
665468    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
665469    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
665470    +END;
MPRINT(EM_DIAGRAM):   END;
665471    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
665472    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
665473    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
665474    +END;
MPRINT(EM_DIAGRAM):   END;
665475    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
665476    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
665477    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
665478    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
665479    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
665480    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
665481    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
665482    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
665483    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
665484    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
665485    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
665486    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
665487    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
665488    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
665489    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
665490    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
665491    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
665492    +END;
MPRINT(EM_DIAGRAM):   END;
665493    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
665494    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
665495    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
665496    +drop
665497    +H11
665498    +H12
665499    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
665500    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
665501    +* Renaming variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural2;
665502    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
665503    +* Renaming Posterior variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural2;
665504    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
665505    +drop Neural2_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar1;
665506    +Neural2_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar1 = P_DepVar1;
665507    +drop Neural2_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar0;
665508    +Neural2_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar0 = P_DepVar0;
665509    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
665510    +* Renaming _WARN_ variable for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural2;
665511    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
665512    +length Neural2_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural2_WARN_ $4;
665513    +drop Neural2_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural2_WARN_;
665514    +Neural2_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural2_WARN_ = _WARN_;
665515    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
665516    +* Ensmbl: Scoring Code of model 6 of 9;
MPRINT(EM_DIAGRAM):   * Ensmbl: Scoring Code of model 6 of 9;
665517    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
665518    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
665519    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
665520    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
665521    +* NODE: Neural3;
MPRINT(EM_DIAGRAM):   * NODE: Neural3;
665522    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
665523    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
665524    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
665525    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
665526    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
665527    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
665528    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
665529    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
665530    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
665531    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
665532    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
665533    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
665534    +LENGTH _WARN_ $4
665535    +      F_DepVar  $ 12
665536    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
665537    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
665538    +
665539    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
665540    +
665541    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
665542    +
665543    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
665544    +
665545    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
665546    +
665547    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
665548    +
665549    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
665550    +
665551    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
665552    +
665553    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
665554    +
665555    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
665556    +
665557    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
665558    +
665559    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
665560    +
665561    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
665562    +
665563    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
665564    +
665565    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
665566    +
665567    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
665568    +
665569    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
665570    +
665571    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
665572    +
665573    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
665574    +
665575    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
665576    +
665577    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
665578    +
665579    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
665580    +
665581    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
665582    +
665583    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
665584    +
665585    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
665586    +
665587    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
665588    +
665589    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
665590    +
665591    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
665592    +
665593    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
665594    +
665595    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
665596    +
665597    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
665598    +
665599    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
665600    +
665601    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
665602    +
665603    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
665604    +
665605    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
665606    +
665607    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
665608    +
665609    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
665610    +
665611    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
665612    +
665613    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
665614    +
665615    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
665616    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
665617    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
665618    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
665619    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
665620    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
665621    +end;
MPRINT(EM_DIAGRAM):   end;
665622    +else do;
MPRINT(EM_DIAGRAM):   else do;
665623    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
665624    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
665625    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
665626    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
665627    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
665628    +   end;
MPRINT(EM_DIAGRAM):   end;
665629    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
665630    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
665631    +   end;
MPRINT(EM_DIAGRAM):   end;
665632    +   else do;
MPRINT(EM_DIAGRAM):   else do;
665633    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
665634    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
665635    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
665636    +   end;
MPRINT(EM_DIAGRAM):   end;
665637    +end;
MPRINT(EM_DIAGRAM):   end;
665638    +
665639    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
665640    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
665641    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
665642    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
665643    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
665644    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
665645    +end;
MPRINT(EM_DIAGRAM):   end;
665646    +else do;
MPRINT(EM_DIAGRAM):   else do;
665647    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
665648    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
665649    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
665650    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
665651    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
665652    +   end;
MPRINT(EM_DIAGRAM):   end;
665653    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
665654    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
665655    +   end;
MPRINT(EM_DIAGRAM):   end;
665656    +   else do;
MPRINT(EM_DIAGRAM):   else do;
665657    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
665658    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
665659    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
665660    +   end;
MPRINT(EM_DIAGRAM):   end;
665661    +end;
MPRINT(EM_DIAGRAM):   end;
665662    +
665663    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
665664    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
665665    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
665666    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
665667    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
665668    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
665669    +end;
MPRINT(EM_DIAGRAM):   end;
665670    +else do;
MPRINT(EM_DIAGRAM):   else do;
665671    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
665672    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
665673    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
665674    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
665675    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
665676    +   end;
MPRINT(EM_DIAGRAM):   end;
665677    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
665678    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
665679    +   end;
MPRINT(EM_DIAGRAM):   end;
665680    +   else do;
MPRINT(EM_DIAGRAM):   else do;
665681    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
665682    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
665683    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
665684    +   end;
MPRINT(EM_DIAGRAM):   end;
665685    +end;
MPRINT(EM_DIAGRAM):   end;
665686    +
665687    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
665688    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
665689    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
665690    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
665691    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
665692    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
665693    +end;
MPRINT(EM_DIAGRAM):   end;
665694    +else do;
MPRINT(EM_DIAGRAM):   else do;
665695    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
665696    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
665697    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
665698    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
665699    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
665700    +   end;
MPRINT(EM_DIAGRAM):   end;
665701    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
665702    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
665703    +   end;
MPRINT(EM_DIAGRAM):   end;
665704    +   else do;
MPRINT(EM_DIAGRAM):   else do;
665705    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
665706    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
665707    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
665708    +   end;
MPRINT(EM_DIAGRAM):   end;
665709    +end;
MPRINT(EM_DIAGRAM):   end;
665710    +
665711    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
665712    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
665713    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
665714    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
665715    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
665716    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
665717    +end;
MPRINT(EM_DIAGRAM):   end;
665718    +else do;
MPRINT(EM_DIAGRAM):   else do;
665719    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
665720    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
665721    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
665722    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
665723    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
665724    +   end;
MPRINT(EM_DIAGRAM):   end;
665725    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
665726    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
665727    +   end;
MPRINT(EM_DIAGRAM):   end;
665728    +   else do;
MPRINT(EM_DIAGRAM):   else do;
665729    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
665730    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
665731    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
665732    +   end;
MPRINT(EM_DIAGRAM):   end;
665733    +end;
MPRINT(EM_DIAGRAM):   end;
665734    +
665735    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
665736    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
665737    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
665738    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
665739    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
665740    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
665741    +end;
MPRINT(EM_DIAGRAM):   end;
665742    +else do;
MPRINT(EM_DIAGRAM):   else do;
665743    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
665744    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
665745    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
665746    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
665747    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
665748    +   end;
MPRINT(EM_DIAGRAM):   end;
665749    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
665750    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
665751    +   end;
MPRINT(EM_DIAGRAM):   end;
665752    +   else do;
MPRINT(EM_DIAGRAM):   else do;
665753    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
665754    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
665755    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
665756    +   end;
MPRINT(EM_DIAGRAM):   end;
665757    +end;
MPRINT(EM_DIAGRAM):   end;
665758    +
665759    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
665760    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
665761    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
665762    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
665763    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
665764    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
665765    +end;
MPRINT(EM_DIAGRAM):   end;
665766    +else do;
MPRINT(EM_DIAGRAM):   else do;
665767    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
665768    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
665769    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
665770    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
665771    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
665772    +   end;
MPRINT(EM_DIAGRAM):   end;
665773    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
665774    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
665775    +   end;
MPRINT(EM_DIAGRAM):   end;
665776    +   else do;
MPRINT(EM_DIAGRAM):   else do;
665777    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
665778    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
665779    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
665780    +   end;
MPRINT(EM_DIAGRAM):   end;
665781    +end;
MPRINT(EM_DIAGRAM):   end;
665782    +
665783    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
665784    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
665785    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
665786    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
665787    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
665788    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
665789    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
665790    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
665791    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
665792    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
665793    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
665794    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
665795    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
665796    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
665797    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
665798    +end;
MPRINT(EM_DIAGRAM):   end;
665799    +else do;
MPRINT(EM_DIAGRAM):   else do;
665800    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
665801    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
665802    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
665803    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
665804    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
665805    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
665806    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
665807    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
665808    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
665809    +         end;
MPRINT(EM_DIAGRAM):   end;
665810    +         else do;
MPRINT(EM_DIAGRAM):   else do;
665811    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
665812    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
665813    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
665814    +            end;
MPRINT(EM_DIAGRAM):   end;
665815    +         end;
MPRINT(EM_DIAGRAM):   end;
665816    +      end;
MPRINT(EM_DIAGRAM):   end;
665817    +      else do;
MPRINT(EM_DIAGRAM):   else do;
665818    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
665819    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
665820    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
665821    +         end;
MPRINT(EM_DIAGRAM):   end;
665822    +      end;
MPRINT(EM_DIAGRAM):   end;
665823    +   end;
MPRINT(EM_DIAGRAM):   end;
665824    +   else do;
MPRINT(EM_DIAGRAM):   else do;
665825    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
665826    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
665827    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
665828    +      end;
MPRINT(EM_DIAGRAM):   end;
665829    +      else do;
MPRINT(EM_DIAGRAM):   else do;
665830    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
665831    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
665832    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
665833    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
665834    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
665835    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
665836    +         end;
MPRINT(EM_DIAGRAM):   end;
665837    +      end;
MPRINT(EM_DIAGRAM):   end;
665838    +   end;
MPRINT(EM_DIAGRAM):   end;
665839    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
665840    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
665841    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
665842    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
665843    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
665844    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
665845    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
665846    +   end;
MPRINT(EM_DIAGRAM):   end;
665847    +end;
MPRINT(EM_DIAGRAM):   end;
665848    +
665849    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
665850    +*** Checking missing input Interval
665851    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
665852    +
665853    +IF NMISS(
665854    +   AcceptedCmpTotal ,
665855    +   Kidhome ,
665856    +   Mnt ,
665857    +   MntFishProducts ,
665858    +   MntFruits ,
665859    +   MntGoldProds ,
665860    +   MntMeatProducts ,
665861    +   MntSweetProducts ,
665862    +   MntWines ,
665863    +   NumCatalogPurchases ,
665864    +   NumDealsPurchases ,
665865    +   NumDistPurchases ,
665866    +   NumStorePurchases ,
665867    +   NumWebPurchases ,
665868    +   NumWebVisitsMonth ,
665869    +   RFMstat ,
665870    +   Recency ,
665871    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Kidhome , Mnt , MntFishProducts , MntFruits 
, MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , 
NumDealsPurchases , NumDistPurchases , NumStorePurchases , NumWebPurchases , NumWebVisitsMonth 
, RFMstat , Recency , Teenhome ) THEN DO;
665872    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
665873    +
665874    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
665875    +END;
MPRINT(EM_DIAGRAM):   END;
665876    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
665877    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
665878    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
665879    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
665880    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
665881    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
665882    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
665883    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
665884    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
665885    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
665886    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
665887    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
665888    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
665889    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
665890    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
665891    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
665892    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
665893    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
665894    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
665895    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
665896    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
665897    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
665898    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
665899    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
665900    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
665901    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
665902    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
665903    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
665904    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
665905    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
665906    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
665907    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
665908    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
665909    +END;
MPRINT(EM_DIAGRAM):   END;
665910    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
665911    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
665912    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
665913    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
665914    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
665915    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
665916    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
665917    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
665918    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
665919    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
665920    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
665921    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
665922    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
665923    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
665924    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
665925    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
665926    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
665927    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
665928    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
665929    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
665930    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
665931    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
665932    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
665933    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
665934    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
665935    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
665936    +   ELSE S_NumCatalogPurchases
665937    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
665938    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
665939    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
665940    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
665941    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
665942    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
665943    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
665944    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
665945    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
665946    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
665947    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
665948    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
665949    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
665950    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
665951    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
665952    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
665953    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
665954    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
665955    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
665956    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
665957    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
665958    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
665959    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
665960    +END;
MPRINT(EM_DIAGRAM):   END;
665961    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
665962    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
665963    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
665964    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
665965    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
665966    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
665967    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
665968    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
665969    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
665970    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
665971    +   H11  =     1.01101276887315 * S_AcceptedCmpTotal  +     0.13088206386642 *
665972    +        S_Kidhome  +     0.44144124105344 * S_Mnt  +    -0.68904392437475 *
665973    +        S_MntFishProducts  +    -0.17121585659716 * S_MntFruits
665974    +          +     0.11335785908498 * S_MntGoldProds  +      2.7693787644231 *
665975    +        S_MntMeatProducts  +     0.05508921126989 * S_MntSweetProducts
665976    +          +    -0.84963149161721 * S_MntWines  +     0.93831643366323 *
665977    +        S_NumCatalogPurchases  +     0.61100213741284 * S_NumDealsPurchases
665978    +          +     0.02505564750154 * S_NumDistPurchases
665979    +          +    -0.68813734794561 * S_NumStorePurchases
665980    +          +    -0.70997870192497 * S_NumWebPurchases
665981    +          +     0.29587693128027 * S_NumWebVisitsMonth
665982    +          +     0.78508541462113 * S_RFMstat  +     -0.3308883600476 *
665983    +        S_Recency  +    -0.00325917604837 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 1.01101276887315 * S_AcceptedCmpTotal + 0.13088206386642 * 
S_Kidhome + 0.44144124105344 * S_Mnt + -0.68904392437475 * S_MntFishProducts + 
-0.17121585659716 * S_MntFruits + 0.11335785908498 * S_MntGoldProds + 2.7693787644231 * 
S_MntMeatProducts + 0.05508921126989 * S_MntSweetProducts + -0.84963149161721 * S_MntWines + 
0.93831643366323 * S_NumCatalogPurchases + 0.61100213741284 * S_NumDealsPurchases + 
0.02505564750154 * S_NumDistPurchases + -0.68813734794561 * S_NumStorePurchases + 
-0.70997870192497 * S_NumWebPurchases + 0.29587693128027 * S_NumWebVisitsMonth + 
0.78508541462113 * S_RFMstat + -0.3308883600476 * S_Recency + -0.00325917604837 * S_Teenhome ;
665984    +   H12  =    -0.52436299608191 * S_AcceptedCmpTotal  +     0.27198236309079 *
665985    +        S_Kidhome  +     0.16271772923493 * S_Mnt  +     0.09777129448709 *
665986    +        S_MntFishProducts  +     0.08286856142975 * S_MntFruits
665987    +          +     0.01382699665825 * S_MntGoldProds  +    -0.64717980145363 *
665988    +        S_MntMeatProducts  +     0.05864522802919 * S_MntSweetProducts
665989    +          +     0.48084041085358 * S_MntWines  +    -0.54710128323244 *
665990    +        S_NumCatalogPurchases  +    -0.13512538901701 * S_NumDealsPurchases
665991    +          +     0.06434299218856 * S_NumDistPurchases
665992    +          +     0.42712319617209 * S_NumStorePurchases
665993    +          +     0.31123207604233 * S_NumWebPurchases
665994    +          +    -1.01860201337102 * S_NumWebVisitsMonth
665995    +          +    -0.03004351543086 * S_RFMstat  +      1.1539132835032 *
665996    +        S_Recency  +     0.26483130659279 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.52436299608191 * S_AcceptedCmpTotal + 0.27198236309079 * 
S_Kidhome + 0.16271772923493 * S_Mnt + 0.09777129448709 * S_MntFishProducts + 0.08286856142975 
* S_MntFruits + 0.01382699665825 * S_MntGoldProds + -0.64717980145363 * S_MntMeatProducts + 
0.05864522802919 * S_MntSweetProducts + 0.48084041085358 * S_MntWines + -0.54710128323244 * 
S_NumCatalogPurchases + -0.13512538901701 * S_NumDealsPurchases + 0.06434299218856 * 
S_NumDistPurchases + 0.42712319617209 * S_NumStorePurchases + 0.31123207604233 * 
S_NumWebPurchases + -1.01860201337102 * S_NumWebVisitsMonth + -0.03004351543086 * S_RFMstat + 
1.1539132835032 * S_Recency + 0.26483130659279 * S_Teenhome ;
665997    +   H11  = H11  +    -0.30089946733563 * AcceptedCmp10
665998    +          +     0.33352940500449 * AcceptedCmp20  +     0.57640754092947 *
665999    +        AcceptedCmp30  +     0.43007791062186 * AcceptedCmp40
666000    +          +    -0.97559596081103 * AcceptedCmp50  +      -0.156153798165 *
666001    +        Complain0  +    -0.08163020130832 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.30089946733563 * AcceptedCmp10 + 0.33352940500449 * 
AcceptedCmp20 + 0.57640754092947 * AcceptedCmp30 + 0.43007791062186 * AcceptedCmp40 + 
-0.97559596081103 * AcceptedCmp50 + -0.156153798165 * Complain0 + -0.08163020130832 * 
HigherEducationBinary0 ;
666002    +   H12  = H12  +     0.08049893192691 * AcceptedCmp10
666003    +          +     0.08395178819383 * AcceptedCmp20  +     0.11982414653687 *
666004    +        AcceptedCmp30  +     0.13126623447029 * AcceptedCmp40
666005    +          +      0.3326649980497 * AcceptedCmp50  +    -0.03185471588077 *
666006    +        Complain0  +     0.08220343686165 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.08049893192691 * AcceptedCmp10 + 0.08395178819383 * 
AcceptedCmp20 + 0.11982414653687 * AcceptedCmp30 + 0.13126623447029 * AcceptedCmp40 + 
0.3326649980497 * AcceptedCmp50 + -0.03185471588077 * Complain0 + 0.08220343686165 * 
HigherEducationBinary0 ;
666007    +   H11  = H11  +    -0.24837156257202 * Marital_StatusDivorced
666008    +          +     0.31380389607446 * Marital_StatusMarried
666009    +          +    -0.11994840163803 * Marital_StatusSingle
666010    +          +     0.30069256789445 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.24837156257202 * Marital_StatusDivorced + 
0.31380389607446 * Marital_StatusMarried + -0.11994840163803 * Marital_StatusSingle + 
0.30069256789445 * Marital_StatusTogether ;
666011    +   H12  = H12  +    -0.41749658642963 * Marital_StatusDivorced
666012    +          +     0.72506125430191 * Marital_StatusMarried
666013    +          +    -0.54747054981285 * Marital_StatusSingle
666014    +          +     0.89421218316246 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.41749658642963 * Marital_StatusDivorced + 
0.72506125430191 * Marital_StatusMarried + -0.54747054981285 * Marital_StatusSingle + 
0.89421218316246 * Marital_StatusTogether ;
666015    +   H11  =     0.50192687520529 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.50192687520529 + H11 ;
666016    +   H12  =     0.17708947264117 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.17708947264117 + H12 ;
666017    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
666018    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
666019    +END;
MPRINT(EM_DIAGRAM):   END;
666020    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
666021    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
666022    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
666023    +END;
MPRINT(EM_DIAGRAM):   END;
666024    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
666025    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
666026    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
666027    +
666028    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
666029    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
666030    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
666031    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
666032    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
666033    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
666034    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
666035    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
666036    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
666037    +end;
MPRINT(EM_DIAGRAM):   end;
666038    +else do;
MPRINT(EM_DIAGRAM):   else do;
666039    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
666040    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
666041    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
666042    +   end;
MPRINT(EM_DIAGRAM):   end;
666043    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
666044    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
666045    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
666046    +   end;
MPRINT(EM_DIAGRAM):   end;
666047    +   else do;
MPRINT(EM_DIAGRAM):   else do;
666048    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
666049    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
666050    +   end;
MPRINT(EM_DIAGRAM):   end;
666051    +end;
MPRINT(EM_DIAGRAM):   end;
666052    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
666053    +   P_DepVar1  =     4.38180289637299 * H11  +    -4.42967128560878 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.38180289637299 * H11 + -4.42967128560878 * H12 ;
666054    +   P_DepVar1  =    -3.75681581527016 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.75681581527016 + P_DepVar1 ;
666055    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
666056    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
666057    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
666058    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
666059    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
666060    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
666061    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
666062    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
666063    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
666064    +END;
MPRINT(EM_DIAGRAM):   END;
666065    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
666066    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
666067    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
666068    +END;
MPRINT(EM_DIAGRAM):   END;
666069    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
666070    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
666071    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
666072    +END;
MPRINT(EM_DIAGRAM):   END;
666073    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
666074    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
666075    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
666076    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
666077    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
666078    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
666079    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
666080    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
666081    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
666082    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
666083    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
666084    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
666085    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
666086    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
666087    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
666088    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
666089    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
666090    +END;
MPRINT(EM_DIAGRAM):   END;
666091    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
666092    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
666093    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
666094    +drop
666095    +H11
666096    +H12
666097    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
666098    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
666099    +* Renaming variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural3;
666100    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
666101    +* Renaming Posterior variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural3;
666102    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
666103    +drop Neural3_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar1;
666104    +Neural3_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar1 = P_DepVar1;
666105    +drop Neural3_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar0;
666106    +Neural3_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar0 = P_DepVar0;
666107    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
666108    +* Renaming _WARN_ variable for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural3;
666109    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
666110    +length Neural3_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural3_WARN_ $4;
666111    +drop Neural3_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural3_WARN_;
666112    +Neural3_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural3_WARN_ = _WARN_;
666113    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
666114    +* Ensmbl: Scoring Code of model 7 of 9;
MPRINT(EM_DIAGRAM):   * Ensmbl: Scoring Code of model 7 of 9;
666115    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
666116    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
666117    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
666118    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
666119    +* NODE: Neural7;
MPRINT(EM_DIAGRAM):   * NODE: Neural7;
666120    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
666121    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
666122    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
666123    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
666124    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
666125    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
666126    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
666127    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
666128    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
666129    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
666130    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
666131    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
666132    +LENGTH _WARN_ $4
666133    +      F_DepVar  $ 12
666134    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
666135    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
666136    +
666137    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
666138    +
666139    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
666140    +
666141    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
666142    +
666143    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
666144    +
666145    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
666146    +
666147    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
666148    +
666149    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
666150    +
666151    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
666152    +
666153    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
666154    +
666155    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
666156    +
666157    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
666158    +
666159    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
666160    +
666161    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
666162    +
666163    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
666164    +
666165    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
666166    +
666167    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
666168    +
666169    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
666170    +
666171    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
666172    +
666173    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
666174    +
666175    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
666176    +
666177    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
666178    +
666179    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
666180    +
666181    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
666182    +
666183    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
666184    +
666185    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
666186    +
666187    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
666188    +
666189    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
666190    +
666191    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
666192    +
666193    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
666194    +
666195    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
666196    +
666197    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
666198    +
666199    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
666200    +
666201    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
666202    +
666203    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
666204    +
666205    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
666206    +
666207    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
666208    +
666209    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
666210    +
666211    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
666212    +
666213    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
666214    +
666215    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
666216    +
666217    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
666218    +
666219    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
666220    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
666221    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
666222    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
666223    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
666224    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
666225    +end;
MPRINT(EM_DIAGRAM):   end;
666226    +else do;
MPRINT(EM_DIAGRAM):   else do;
666227    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
666228    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
666229    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
666230    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
666231    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
666232    +   end;
MPRINT(EM_DIAGRAM):   end;
666233    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
666234    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
666235    +   end;
MPRINT(EM_DIAGRAM):   end;
666236    +   else do;
MPRINT(EM_DIAGRAM):   else do;
666237    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
666238    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
666239    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
666240    +   end;
MPRINT(EM_DIAGRAM):   end;
666241    +end;
MPRINT(EM_DIAGRAM):   end;
666242    +
666243    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
666244    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
666245    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
666246    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
666247    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
666248    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
666249    +end;
MPRINT(EM_DIAGRAM):   end;
666250    +else do;
MPRINT(EM_DIAGRAM):   else do;
666251    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
666252    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
666253    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
666254    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
666255    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
666256    +   end;
MPRINT(EM_DIAGRAM):   end;
666257    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
666258    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
666259    +   end;
MPRINT(EM_DIAGRAM):   end;
666260    +   else do;
MPRINT(EM_DIAGRAM):   else do;
666261    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
666262    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
666263    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
666264    +   end;
MPRINT(EM_DIAGRAM):   end;
666265    +end;
MPRINT(EM_DIAGRAM):   end;
666266    +
666267    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
666268    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
666269    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
666270    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
666271    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
666272    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
666273    +end;
MPRINT(EM_DIAGRAM):   end;
666274    +else do;
MPRINT(EM_DIAGRAM):   else do;
666275    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
666276    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
666277    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
666278    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
666279    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
666280    +   end;
MPRINT(EM_DIAGRAM):   end;
666281    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
666282    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
666283    +   end;
MPRINT(EM_DIAGRAM):   end;
666284    +   else do;
MPRINT(EM_DIAGRAM):   else do;
666285    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
666286    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
666287    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
666288    +   end;
MPRINT(EM_DIAGRAM):   end;
666289    +end;
MPRINT(EM_DIAGRAM):   end;
666290    +
666291    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
666292    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
666293    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
666294    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
666295    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
666296    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
666297    +end;
MPRINT(EM_DIAGRAM):   end;
666298    +else do;
MPRINT(EM_DIAGRAM):   else do;
666299    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
666300    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
666301    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
666302    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
666303    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
666304    +   end;
MPRINT(EM_DIAGRAM):   end;
666305    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
666306    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
666307    +   end;
MPRINT(EM_DIAGRAM):   end;
666308    +   else do;
MPRINT(EM_DIAGRAM):   else do;
666309    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
666310    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
666311    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
666312    +   end;
MPRINT(EM_DIAGRAM):   end;
666313    +end;
MPRINT(EM_DIAGRAM):   end;
666314    +
666315    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
666316    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
666317    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
666318    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
666319    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
666320    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
666321    +end;
MPRINT(EM_DIAGRAM):   end;
666322    +else do;
MPRINT(EM_DIAGRAM):   else do;
666323    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
666324    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
666325    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
666326    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
666327    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
666328    +   end;
MPRINT(EM_DIAGRAM):   end;
666329    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
666330    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
666331    +   end;
MPRINT(EM_DIAGRAM):   end;
666332    +   else do;
MPRINT(EM_DIAGRAM):   else do;
666333    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
666334    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
666335    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
666336    +   end;
MPRINT(EM_DIAGRAM):   end;
666337    +end;
MPRINT(EM_DIAGRAM):   end;
666338    +
666339    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
666340    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
666341    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
666342    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
666343    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
666344    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
666345    +end;
MPRINT(EM_DIAGRAM):   end;
666346    +else do;
MPRINT(EM_DIAGRAM):   else do;
666347    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
666348    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
666349    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
666350    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
666351    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
666352    +   end;
MPRINT(EM_DIAGRAM):   end;
666353    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
666354    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
666355    +   end;
MPRINT(EM_DIAGRAM):   end;
666356    +   else do;
MPRINT(EM_DIAGRAM):   else do;
666357    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
666358    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
666359    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
666360    +   end;
MPRINT(EM_DIAGRAM):   end;
666361    +end;
MPRINT(EM_DIAGRAM):   end;
666362    +
666363    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
666364    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
666365    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
666366    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
666367    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
666368    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
666369    +end;
MPRINT(EM_DIAGRAM):   end;
666370    +else do;
MPRINT(EM_DIAGRAM):   else do;
666371    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
666372    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
666373    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
666374    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
666375    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
666376    +   end;
MPRINT(EM_DIAGRAM):   end;
666377    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
666378    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
666379    +   end;
MPRINT(EM_DIAGRAM):   end;
666380    +   else do;
MPRINT(EM_DIAGRAM):   else do;
666381    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
666382    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
666383    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
666384    +   end;
MPRINT(EM_DIAGRAM):   end;
666385    +end;
MPRINT(EM_DIAGRAM):   end;
666386    +
666387    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
666388    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
666389    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
666390    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
666391    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
666392    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
666393    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
666394    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
666395    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
666396    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
666397    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
666398    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
666399    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
666400    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
666401    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
666402    +end;
MPRINT(EM_DIAGRAM):   end;
666403    +else do;
MPRINT(EM_DIAGRAM):   else do;
666404    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
666405    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
666406    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
666407    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
666408    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
666409    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
666410    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
666411    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
666412    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
666413    +         end;
MPRINT(EM_DIAGRAM):   end;
666414    +         else do;
MPRINT(EM_DIAGRAM):   else do;
666415    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
666416    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
666417    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
666418    +            end;
MPRINT(EM_DIAGRAM):   end;
666419    +         end;
MPRINT(EM_DIAGRAM):   end;
666420    +      end;
MPRINT(EM_DIAGRAM):   end;
666421    +      else do;
MPRINT(EM_DIAGRAM):   else do;
666422    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
666423    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
666424    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
666425    +         end;
MPRINT(EM_DIAGRAM):   end;
666426    +      end;
MPRINT(EM_DIAGRAM):   end;
666427    +   end;
MPRINT(EM_DIAGRAM):   end;
666428    +   else do;
MPRINT(EM_DIAGRAM):   else do;
666429    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
666430    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
666431    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
666432    +      end;
MPRINT(EM_DIAGRAM):   end;
666433    +      else do;
MPRINT(EM_DIAGRAM):   else do;
666434    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
666435    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
666436    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
666437    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
666438    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
666439    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
666440    +         end;
MPRINT(EM_DIAGRAM):   end;
666441    +      end;
MPRINT(EM_DIAGRAM):   end;
666442    +   end;
MPRINT(EM_DIAGRAM):   end;
666443    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
666444    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
666445    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
666446    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
666447    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
666448    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
666449    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
666450    +   end;
MPRINT(EM_DIAGRAM):   end;
666451    +end;
MPRINT(EM_DIAGRAM):   end;
666452    +
666453    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
666454    +*** Checking missing input Interval
666455    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
666456    +
666457    +IF NMISS(
666458    +   AcceptedCmpTotal ,
666459    +   Kidhome ,
666460    +   Mnt ,
666461    +   MntFishProducts ,
666462    +   MntFruits ,
666463    +   MntGoldProds ,
666464    +   MntMeatProducts ,
666465    +   MntSweetProducts ,
666466    +   MntWines ,
666467    +   NumCatalogPurchases ,
666468    +   NumDealsPurchases ,
666469    +   NumDistPurchases ,
666470    +   NumStorePurchases ,
666471    +   NumWebPurchases ,
666472    +   NumWebVisitsMonth ,
666473    +   RFMstat ,
666474    +   Recency ,
666475    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Kidhome , Mnt , MntFishProducts , MntFruits 
, MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , 
NumDealsPurchases , NumDistPurchases , NumStorePurchases , NumWebPurchases , NumWebVisitsMonth 
, RFMstat , Recency , Teenhome ) THEN DO;
666476    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
666477    +
666478    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
666479    +END;
MPRINT(EM_DIAGRAM):   END;
666480    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
666481    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
666482    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
666483    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
666484    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
666485    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
666486    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
666487    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
666488    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
666489    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
666490    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
666491    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
666492    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
666493    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
666494    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
666495    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
666496    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
666497    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
666498    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
666499    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
666500    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
666501    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
666502    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
666503    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
666504    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
666505    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
666506    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
666507    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
666508    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
666509    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
666510    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
666511    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
666512    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
666513    +END;
MPRINT(EM_DIAGRAM):   END;
666514    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
666515    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
666516    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
666517    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
666518    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
666519    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
666520    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
666521    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
666522    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
666523    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
666524    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
666525    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
666526    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
666527    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
666528    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
666529    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
666530    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
666531    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
666532    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
666533    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
666534    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
666535    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
666536    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
666537    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
666538    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
666539    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
666540    +   ELSE S_NumCatalogPurchases
666541    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
666542    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
666543    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
666544    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
666545    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
666546    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
666547    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
666548    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
666549    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
666550    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
666551    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
666552    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
666553    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
666554    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
666555    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
666556    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
666557    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
666558    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
666559    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
666560    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
666561    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
666562    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
666563    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
666564    +END;
MPRINT(EM_DIAGRAM):   END;
666565    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
666566    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
666567    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
666568    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
666569    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
666570    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
666571    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
666572    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
666573    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
666574    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
666575    +   H11  =    -0.31336975179768 * S_AcceptedCmpTotal  +     0.55217606948262 *
666576    +        S_Kidhome  +     0.30934248519275 * S_Mnt  +     0.21704081651602 *
666577    +        S_MntFishProducts  +      0.0286842970037 * S_MntFruits
666578    +          +     -0.0428936614026 * S_MntGoldProds  +     0.04106839234795 *
666579    +        S_MntMeatProducts  +     -0.2219223463878 * S_MntSweetProducts
666580    +          +     0.07714161131062 * S_MntWines  +    -0.47043004421243 *
666581    +        S_NumCatalogPurchases  +    -0.34552756945236 * S_NumDealsPurchases
666582    +          +    -0.08565162229542 * S_NumDistPurchases
666583    +          +      0.2498966077742 * S_NumStorePurchases
666584    +          +    -0.03810974523517 * S_NumWebPurchases
666585    +          +     0.50983692369041 * S_NumWebVisitsMonth
666586    +          +     0.08815778320903 * S_RFMstat  +     0.09119895780804 *
666587    +        S_Recency  +     0.13511958264343 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.31336975179768 * S_AcceptedCmpTotal + 0.55217606948262 * 
S_Kidhome + 0.30934248519275 * S_Mnt + 0.21704081651602 * S_MntFishProducts + 0.0286842970037 
* S_MntFruits + -0.0428936614026 * S_MntGoldProds + 0.04106839234795 * S_MntMeatProducts + 
-0.2219223463878 * S_MntSweetProducts + 0.07714161131062 * S_MntWines + -0.47043004421243 * 
S_NumCatalogPurchases + -0.34552756945236 * S_NumDealsPurchases + -0.08565162229542 * 
S_NumDistPurchases + 0.2498966077742 * S_NumStorePurchases + -0.03810974523517 * 
S_NumWebPurchases + 0.50983692369041 * S_NumWebVisitsMonth + 0.08815778320903 * S_RFMstat + 
0.09119895780804 * S_Recency + 0.13511958264343 * S_Teenhome ;
666588    +   H12  =    -0.24937709830237 * S_AcceptedCmpTotal  +    -0.24749428309219 *
666589    +        S_Kidhome  +    -0.12930178120586 * S_Mnt  +     0.13546025995573 *
666590    +        S_MntFishProducts  +     0.28360186554431 * S_MntFruits
666591    +          +    -0.05241802314535 * S_MntGoldProds  +    -0.66941662270923 *
666592    +        S_MntMeatProducts  +     0.15336628351126 * S_MntSweetProducts
666593    +          +      0.4032078630799 * S_MntWines  +    -0.56890394617047 *
666594    +        S_NumCatalogPurchases  +    -0.64950384504567 * S_NumDealsPurchases
666595    +          +     0.23154666595931 * S_NumDistPurchases
666596    +          +     0.54534387610808 * S_NumStorePurchases
666597    +          +     0.41139490970672 * S_NumWebPurchases
666598    +          +    -0.55413387763351 * S_NumWebVisitsMonth
666599    +          +    -0.26075003734578 * S_RFMstat  +     0.49052010543197 *
666600    +        S_Recency  +     -0.0404801860777 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.24937709830237 * S_AcceptedCmpTotal + -0.24749428309219 * 
S_Kidhome + -0.12930178120586 * S_Mnt + 0.13546025995573 * S_MntFishProducts + 
0.28360186554431 * S_MntFruits + -0.05241802314535 * S_MntGoldProds + -0.66941662270923 * 
S_MntMeatProducts + 0.15336628351126 * S_MntSweetProducts + 0.4032078630799 * S_MntWines + 
-0.56890394617047 * S_NumCatalogPurchases + -0.64950384504567 * S_NumDealsPurchases + 
0.23154666595931 * S_NumDistPurchases + 0.54534387610808 * S_NumStorePurchases + 
0.41139490970672 * S_NumWebPurchases + -0.55413387763351 * S_NumWebVisitsMonth + 
-0.26075003734578 * S_RFMstat + 0.49052010543197 * S_Recency + -0.0404801860777 * S_Teenhome ;
666601    +   H13  =     0.21315421089843 * S_AcceptedCmpTotal  +    -0.40934954273162 *
666602    +        S_Kidhome  +    -0.14257980270562 * S_Mnt  +    -0.02326723710858 *
666603    +        S_MntFishProducts  +     0.03093571619826 * S_MntFruits
666604    +          +    -0.09540637054036 * S_MntGoldProds  +       0.216562837751 *
666605    +        S_MntMeatProducts  +    -0.06578520743957 * S_MntSweetProducts
666606    +          +    -0.45983147514787 * S_MntWines  +     0.28991677967619 *
666607    +        S_NumCatalogPurchases  +     -0.0581811780876 * S_NumDealsPurchases
666608    +          +     0.05120135471729 * S_NumDistPurchases
666609    +          +    -0.26556926910649 * S_NumStorePurchases
666610    +          +    -0.44351155109785 * S_NumWebPurchases
666611    +          +     0.88609841670248 * S_NumWebVisitsMonth
666612    +          +    -0.05355058809893 * S_RFMstat  +    -0.73370046845716 *
666613    +        S_Recency  +    -0.20220070524982 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.21315421089843 * S_AcceptedCmpTotal + -0.40934954273162 * 
S_Kidhome + -0.14257980270562 * S_Mnt + -0.02326723710858 * S_MntFishProducts + 
0.03093571619826 * S_MntFruits + -0.09540637054036 * S_MntGoldProds + 0.216562837751 * 
S_MntMeatProducts + -0.06578520743957 * S_MntSweetProducts + -0.45983147514787 * S_MntWines + 
0.28991677967619 * S_NumCatalogPurchases + -0.0581811780876 * S_NumDealsPurchases + 
0.05120135471729 * S_NumDistPurchases + -0.26556926910649 * S_NumStorePurchases + 
-0.44351155109785 * S_NumWebPurchases + 0.88609841670248 * S_NumWebVisitsMonth + 
-0.05355058809893 * S_RFMstat + -0.73370046845716 * S_Recency + -0.20220070524982 * S_Teenhome 
;
666614    +   H14  =     0.39698224199543 * S_AcceptedCmpTotal  +    -0.20120366596375 *
666615    +        S_Kidhome  +      0.3167228298887 * S_Mnt  +     0.01157053818495 *
666616    +        S_MntFishProducts  +    -0.01328592356982 * S_MntFruits
666617    +          +     0.00886948034365 * S_MntGoldProds  +     1.21666314524043 *
666618    +        S_MntMeatProducts  +    -0.09283019720022 * S_MntSweetProducts
666619    +          +    -0.09586722258183 * S_MntWines  +    -0.01785512232978 *
666620    +        S_NumCatalogPurchases  +    -0.21291958246407 * S_NumDealsPurchases
666621    +          +     0.39404855135103 * S_NumDistPurchases
666622    +          +    -0.07248752877179 * S_NumStorePurchases
666623    +          +    -0.10123700375349 * S_NumWebPurchases
666624    +          +     0.42450276314027 * S_NumWebVisitsMonth
666625    +          +     0.24279716857154 * S_RFMstat  +    -0.58955338934321 *
666626    +        S_Recency  +    -0.30629869350731 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.39698224199543 * S_AcceptedCmpTotal + -0.20120366596375 * 
S_Kidhome + 0.3167228298887 * S_Mnt + 0.01157053818495 * S_MntFishProducts + -0.01328592356982 
* S_MntFruits + 0.00886948034365 * S_MntGoldProds + 1.21666314524043 * S_MntMeatProducts + 
-0.09283019720022 * S_MntSweetProducts + -0.09586722258183 * S_MntWines + -0.01785512232978 * 
S_NumCatalogPurchases + -0.21291958246407 * S_NumDealsPurchases + 0.39404855135103 * 
S_NumDistPurchases + -0.07248752877179 * S_NumStorePurchases + -0.10123700375349 * 
S_NumWebPurchases + 0.42450276314027 * S_NumWebVisitsMonth + 0.24279716857154 * S_RFMstat + 
-0.58955338934321 * S_Recency + -0.30629869350731 * S_Teenhome ;
666627    +   H15  =     0.30758619083232 * S_AcceptedCmpTotal  +     -0.0124289721914 *
666628    +        S_Kidhome  +    -0.05376010749039 * S_Mnt  +    -0.00466013129163 *
666629    +        S_MntFishProducts  +     -0.0128351925647 * S_MntFruits
666630    +          +       0.418369814853 * S_MntGoldProds  +    -0.44302877451838 *
666631    +        S_MntMeatProducts  +     0.10514229364725 * S_MntSweetProducts
666632    +          +     0.34164846881132 * S_MntWines  +    -0.02137843790281 *
666633    +        S_NumCatalogPurchases  +     -0.0656649517507 * S_NumDealsPurchases
666634    +          +     0.27175946433967 * S_NumDistPurchases
666635    +          +     0.16942067472984 * S_NumStorePurchases
666636    +          +     0.16250565660711 * S_NumWebPurchases
666637    +          +    -0.20203561703211 * S_NumWebVisitsMonth
666638    +          +     0.14491189794214 * S_RFMstat  +    -0.22675112064568 *
666639    +        S_Recency  +      0.1811664309815 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.30758619083232 * S_AcceptedCmpTotal + -0.0124289721914 * 
S_Kidhome + -0.05376010749039 * S_Mnt + -0.00466013129163 * S_MntFishProducts + 
-0.0128351925647 * S_MntFruits + 0.418369814853 * S_MntGoldProds + -0.44302877451838 * 
S_MntMeatProducts + 0.10514229364725 * S_MntSweetProducts + 0.34164846881132 * S_MntWines + 
-0.02137843790281 * S_NumCatalogPurchases + -0.0656649517507 * S_NumDealsPurchases + 
0.27175946433967 * S_NumDistPurchases + 0.16942067472984 * S_NumStorePurchases + 
0.16250565660711 * S_NumWebPurchases + -0.20203561703211 * S_NumWebVisitsMonth + 
0.14491189794214 * S_RFMstat + -0.22675112064568 * S_Recency + 0.1811664309815 * S_Teenhome ;
666640    +   H11  = H11  +    -0.26538416697651 * AcceptedCmp10
666641    +          +    -0.28983118331232 * AcceptedCmp20  +    -0.32322818178704 *
666642    +        AcceptedCmp30  +    -0.03993661807643 * AcceptedCmp40
666643    +          +     0.06994002730973 * AcceptedCmp50  +    -0.07716774247605 *
666644    +        Complain0  +      0.2585392734779 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.26538416697651 * AcceptedCmp10 + -0.28983118331232 * 
AcceptedCmp20 + -0.32322818178704 * AcceptedCmp30 + -0.03993661807643 * AcceptedCmp40 + 
0.06994002730973 * AcceptedCmp50 + -0.07716774247605 * Complain0 + 0.2585392734779 * 
HigherEducationBinary0 ;
666645    +   H12  = H12  +     0.26018307810736 * AcceptedCmp10
666646    +          +     0.04049534355706 * AcceptedCmp20  +     0.11270892132762 *
666647    +        AcceptedCmp30  +     0.11221187249984 * AcceptedCmp40
666648    +          +     0.17472976197603 * AcceptedCmp50  +     0.15606486866287 *
666649    +        Complain0  +     0.08065554959159 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.26018307810736 * AcceptedCmp10 + 0.04049534355706 * 
AcceptedCmp20 + 0.11270892132762 * AcceptedCmp30 + 0.11221187249984 * AcceptedCmp40 + 
0.17472976197603 * AcceptedCmp50 + 0.15606486866287 * Complain0 + 0.08065554959159 * 
HigherEducationBinary0 ;
666650    +   H13  = H13  +     0.02279534546007 * AcceptedCmp10
666651    +          +    -0.27459928968957 * AcceptedCmp20  +    -0.15207279864055 *
666652    +        AcceptedCmp30  +    -0.07324517817975 * AcceptedCmp40
666653    +          +     -0.4186492052078 * AcceptedCmp50  +     0.22766105161511 *
666654    +        Complain0  +    -0.00716085865509 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02279534546007 * AcceptedCmp10 + -0.27459928968957 * 
AcceptedCmp20 + -0.15207279864055 * AcceptedCmp30 + -0.07324517817975 * AcceptedCmp40 + 
-0.4186492052078 * AcceptedCmp50 + 0.22766105161511 * Complain0 + -0.00716085865509 * 
HigherEducationBinary0 ;
666655    +   H14  = H14  +    -0.30447666177293 * AcceptedCmp10
666656    +          +     0.07907637737546 * AcceptedCmp20  +    -0.01358906665622 *
666657    +        AcceptedCmp30  +     0.04426640297686 * AcceptedCmp40
666658    +          +     0.00911097068478 * AcceptedCmp50  +    -0.10112384137038 *
666659    +        Complain0  +     0.05359674201133 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.30447666177293 * AcceptedCmp10 + 0.07907637737546 * 
AcceptedCmp20 + -0.01358906665622 * AcceptedCmp30 + 0.04426640297686 * AcceptedCmp40 + 
0.00911097068478 * AcceptedCmp50 + -0.10112384137038 * Complain0 + 0.05359674201133 * 
HigherEducationBinary0 ;
666660    +   H15  = H15  +    -0.31560065228661 * AcceptedCmp10
666661    +          +     0.17796753054999 * AcceptedCmp20  +    -0.30736861931223 *
666662    +        AcceptedCmp30  +    -0.26334867599652 * AcceptedCmp40
666663    +          +    -0.19775668628356 * AcceptedCmp50  +     0.09156081270418 *
666664    +        Complain0  +     0.16300151411284 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.31560065228661 * AcceptedCmp10 + 0.17796753054999 * 
AcceptedCmp20 + -0.30736861931223 * AcceptedCmp30 + -0.26334867599652 * AcceptedCmp40 + 
-0.19775668628356 * AcceptedCmp50 + 0.09156081270418 * Complain0 + 0.16300151411284 * 
HigherEducationBinary0 ;
666665    +   H11  = H11  +     0.17457297183466 * Marital_StatusDivorced
666666    +          +    -0.18709572120712 * Marital_StatusMarried
666667    +          +    -0.17856903026629 * Marital_StatusSingle
666668    +          +     0.13783214631264 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.17457297183466 * Marital_StatusDivorced + 
-0.18709572120712 * Marital_StatusMarried + -0.17856903026629 * Marital_StatusSingle + 
0.13783214631264 * Marital_StatusTogether ;
666669    +   H12  = H12  +    -0.00304373365465 * Marital_StatusDivorced
666670    +          +    -0.16741351681675 * Marital_StatusMarried
666671    +          +      0.0768369461222 * Marital_StatusSingle
666672    +          +    -0.24741602840563 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.00304373365465 * Marital_StatusDivorced + 
-0.16741351681675 * Marital_StatusMarried + 0.0768369461222 * Marital_StatusSingle + 
-0.24741602840563 * Marital_StatusTogether ;
666673    +   H13  = H13  +     0.30534805329266 * Marital_StatusDivorced
666674    +          +    -0.85130030031409 * Marital_StatusMarried
666675    +          +     0.57365531089483 * Marital_StatusSingle
666676    +          +    -0.94902600797801 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.30534805329266 * Marital_StatusDivorced + 
-0.85130030031409 * Marital_StatusMarried + 0.57365531089483 * Marital_StatusSingle + 
-0.94902600797801 * Marital_StatusTogether ;
666677    +   H14  = H14  +     0.13923025215159 * Marital_StatusDivorced
666678    +          +    -0.10273688858818 * Marital_StatusMarried
666679    +          +     0.37267011958223 * Marital_StatusSingle
666680    +          +    -0.03704936024152 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.13923025215159 * Marital_StatusDivorced + 
-0.10273688858818 * Marital_StatusMarried + 0.37267011958223 * Marital_StatusSingle + 
-0.03704936024152 * Marital_StatusTogether ;
666681    +   H15  = H15  +     -0.1497917828097 * Marital_StatusDivorced
666682    +          +    -0.12309472866952 * Marital_StatusMarried
666683    +          +      0.0895004316905 * Marital_StatusSingle
666684    +          +    -0.06693333133964 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.1497917828097 * Marital_StatusDivorced + 
-0.12309472866952 * Marital_StatusMarried + 0.0895004316905 * Marital_StatusSingle + 
-0.06693333133964 * Marital_StatusTogether ;
666685    +   H11  =    -0.25731444426672 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.25731444426672 + H11 ;
666686    +   H12  =     0.87003179402118 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.87003179402118 + H12 ;
666687    +   H13  =     0.90055724527443 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.90055724527443 + H13 ;
666688    +   H14  =    -0.88878585940926 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.88878585940926 + H14 ;
666689    +   H15  =    -1.06135597773699 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -1.06135597773699 + H15 ;
666690    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
666691    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
666692    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
666693    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
666694    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
666695    +END;
MPRINT(EM_DIAGRAM):   END;
666696    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
666697    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
666698    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
666699    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
666700    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
666701    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
666702    +END;
MPRINT(EM_DIAGRAM):   END;
666703    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
666704    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
666705    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
666706    +
666707    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
666708    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
666709    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
666710    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
666711    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
666712    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
666713    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
666714    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
666715    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
666716    +end;
MPRINT(EM_DIAGRAM):   end;
666717    +else do;
MPRINT(EM_DIAGRAM):   else do;
666718    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
666719    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
666720    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
666721    +   end;
MPRINT(EM_DIAGRAM):   end;
666722    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
666723    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
666724    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
666725    +   end;
MPRINT(EM_DIAGRAM):   end;
666726    +   else do;
MPRINT(EM_DIAGRAM):   else do;
666727    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
666728    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
666729    +   end;
MPRINT(EM_DIAGRAM):   end;
666730    +end;
MPRINT(EM_DIAGRAM):   end;
666731    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
666732    +   P_DepVar1  =    -2.23627327600133 * H11  +    -5.23001272777429 * H12
666733    +          +     3.61561162996052 * H13  +     4.27940030557467 * H14
666734    +          +     0.95777699944459 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.23627327600133 * H11 + -5.23001272777429 * H12 + 
3.61561162996052 * H13 + 4.27940030557467 * H14 + 0.95777699944459 * H15 ;
666735    +   P_DepVar1  =    -1.37696256001086 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.37696256001086 + P_DepVar1 ;
666736    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
666737    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
666738    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
666739    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
666740    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
666741    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
666742    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
666743    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
666744    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
666745    +END;
MPRINT(EM_DIAGRAM):   END;
666746    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
666747    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
666748    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
666749    +END;
MPRINT(EM_DIAGRAM):   END;
666750    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
666751    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
666752    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
666753    +END;
MPRINT(EM_DIAGRAM):   END;
666754    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
666755    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
666756    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
666757    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
666758    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
666759    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
666760    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
666761    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
666762    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
666763    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
666764    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
666765    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
666766    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
666767    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
666768    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
666769    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
666770    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
666771    +END;
MPRINT(EM_DIAGRAM):   END;
666772    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
666773    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
666774    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
666775    +drop
666776    +H11
666777    +H12
666778    +H13
666779    +H14
666780    +H15
666781    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
666782    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
666783    +* Renaming variables for Neural7;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural7;
666784    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
666785    +* Renaming Posterior variables for Neural7;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural7;
666786    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
666787    +drop Neural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural7_P_DepVar1;
666788    +Neural7_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural7_P_DepVar1 = P_DepVar1;
666789    +drop Neural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural7_P_DepVar0;
666790    +Neural7_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural7_P_DepVar0 = P_DepVar0;
666791    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
666792    +* Renaming _WARN_ variable for Neural7;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural7;
666793    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
666794    +length Neural7_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural7_WARN_ $4;
666795    +drop Neural7_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural7_WARN_;
666796    +Neural7_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural7_WARN_ = _WARN_;
666797    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
666798    +* Ensmbl: Scoring Code of model 8 of 9;
MPRINT(EM_DIAGRAM):   * Ensmbl: Scoring Code of model 8 of 9;
666799    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
666800    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
666801    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
666802    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
666803    +* NODE: Neural9;
MPRINT(EM_DIAGRAM):   * NODE: Neural9;
666804    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
666805    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
666806    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
666807    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
666808    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
666809    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
666810    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
666811    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
666812    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
666813    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
666814    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
666815    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
666816    +LENGTH _WARN_ $4
666817    +      F_DepVar  $ 12
666818    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
666819    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
666820    +
666821    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
666822    +
666823    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
666824    +
666825    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
666826    +
666827    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
666828    +
666829    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
666830    +
666831    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
666832    +
666833    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
666834    +
666835    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
666836    +
666837    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
666838    +
666839    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
666840    +
666841    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
666842    +
666843    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
666844    +
666845    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
666846    +
666847    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
666848    +
666849    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
666850    +
666851    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
666852    +
666853    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
666854    +
666855    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
666856    +
666857    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
666858    +
666859    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
666860    +
666861    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
666862    +
666863    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
666864    +
666865    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
666866    +
666867    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
666868    +
666869    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
666870    +
666871    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
666872    +
666873    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
666874    +
666875    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
666876    +
666877    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
666878    +
666879    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
666880    +
666881    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
666882    +
666883    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
666884    +
666885    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
666886    +
666887    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
666888    +
666889    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
666890    +
666891    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
666892    +
666893    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
666894    +
666895    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
666896    +
666897    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
666898    +
666899    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
666900    +
666901    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
666902    +
666903    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
666904    +
666905    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
666906    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
666907    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
666908    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
666909    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
666910    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
666911    +end;
MPRINT(EM_DIAGRAM):   end;
666912    +else do;
MPRINT(EM_DIAGRAM):   else do;
666913    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
666914    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
666915    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
666916    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
666917    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
666918    +   end;
MPRINT(EM_DIAGRAM):   end;
666919    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
666920    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
666921    +   end;
MPRINT(EM_DIAGRAM):   end;
666922    +   else do;
MPRINT(EM_DIAGRAM):   else do;
666923    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
666924    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
666925    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
666926    +   end;
MPRINT(EM_DIAGRAM):   end;
666927    +end;
MPRINT(EM_DIAGRAM):   end;
666928    +
666929    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
666930    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
666931    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
666932    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
666933    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
666934    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
666935    +end;
MPRINT(EM_DIAGRAM):   end;
666936    +else do;
MPRINT(EM_DIAGRAM):   else do;
666937    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
666938    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
666939    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
666940    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
666941    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
666942    +   end;
MPRINT(EM_DIAGRAM):   end;
666943    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
666944    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
666945    +   end;
MPRINT(EM_DIAGRAM):   end;
666946    +   else do;
MPRINT(EM_DIAGRAM):   else do;
666947    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
666948    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
666949    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
666950    +   end;
MPRINT(EM_DIAGRAM):   end;
666951    +end;
MPRINT(EM_DIAGRAM):   end;
666952    +
666953    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
666954    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
666955    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
666956    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
666957    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
666958    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
666959    +end;
MPRINT(EM_DIAGRAM):   end;
666960    +else do;
MPRINT(EM_DIAGRAM):   else do;
666961    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
666962    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
666963    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
666964    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
666965    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
666966    +   end;
MPRINT(EM_DIAGRAM):   end;
666967    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
666968    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
666969    +   end;
MPRINT(EM_DIAGRAM):   end;
666970    +   else do;
MPRINT(EM_DIAGRAM):   else do;
666971    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
666972    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
666973    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
666974    +   end;
MPRINT(EM_DIAGRAM):   end;
666975    +end;
MPRINT(EM_DIAGRAM):   end;
666976    +
666977    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
666978    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
666979    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
666980    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
666981    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
666982    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
666983    +end;
MPRINT(EM_DIAGRAM):   end;
666984    +else do;
MPRINT(EM_DIAGRAM):   else do;
666985    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
666986    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
666987    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
666988    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
666989    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
666990    +   end;
MPRINT(EM_DIAGRAM):   end;
666991    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
666992    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
666993    +   end;
MPRINT(EM_DIAGRAM):   end;
666994    +   else do;
MPRINT(EM_DIAGRAM):   else do;
666995    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
666996    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
666997    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
666998    +   end;
MPRINT(EM_DIAGRAM):   end;
666999    +end;
MPRINT(EM_DIAGRAM):   end;
667000    +
667001    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
667002    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
667003    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
667004    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
667005    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
667006    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
667007    +end;
MPRINT(EM_DIAGRAM):   end;
667008    +else do;
MPRINT(EM_DIAGRAM):   else do;
667009    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
667010    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
667011    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
667012    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
667013    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
667014    +   end;
MPRINT(EM_DIAGRAM):   end;
667015    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
667016    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
667017    +   end;
MPRINT(EM_DIAGRAM):   end;
667018    +   else do;
MPRINT(EM_DIAGRAM):   else do;
667019    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
667020    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
667021    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
667022    +   end;
MPRINT(EM_DIAGRAM):   end;
667023    +end;
MPRINT(EM_DIAGRAM):   end;
667024    +
667025    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
667026    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
667027    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
667028    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
667029    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
667030    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
667031    +end;
MPRINT(EM_DIAGRAM):   end;
667032    +else do;
MPRINT(EM_DIAGRAM):   else do;
667033    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
667034    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
667035    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
667036    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
667037    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
667038    +   end;
MPRINT(EM_DIAGRAM):   end;
667039    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
667040    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
667041    +   end;
MPRINT(EM_DIAGRAM):   end;
667042    +   else do;
MPRINT(EM_DIAGRAM):   else do;
667043    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
667044    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
667045    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
667046    +   end;
MPRINT(EM_DIAGRAM):   end;
667047    +end;
MPRINT(EM_DIAGRAM):   end;
667048    +
667049    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
667050    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
667051    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
667052    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
667053    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
667054    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
667055    +end;
MPRINT(EM_DIAGRAM):   end;
667056    +else do;
MPRINT(EM_DIAGRAM):   else do;
667057    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
667058    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
667059    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
667060    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
667061    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
667062    +   end;
MPRINT(EM_DIAGRAM):   end;
667063    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
667064    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
667065    +   end;
MPRINT(EM_DIAGRAM):   end;
667066    +   else do;
MPRINT(EM_DIAGRAM):   else do;
667067    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
667068    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
667069    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
667070    +   end;
MPRINT(EM_DIAGRAM):   end;
667071    +end;
MPRINT(EM_DIAGRAM):   end;
667072    +
667073    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
667074    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
667075    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
667076    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
667077    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
667078    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
667079    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
667080    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
667081    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
667082    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
667083    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
667084    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
667085    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
667086    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
667087    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
667088    +end;
MPRINT(EM_DIAGRAM):   end;
667089    +else do;
MPRINT(EM_DIAGRAM):   else do;
667090    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
667091    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
667092    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
667093    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
667094    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
667095    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
667096    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
667097    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
667098    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
667099    +         end;
MPRINT(EM_DIAGRAM):   end;
667100    +         else do;
MPRINT(EM_DIAGRAM):   else do;
667101    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
667102    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
667103    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
667104    +            end;
MPRINT(EM_DIAGRAM):   end;
667105    +         end;
MPRINT(EM_DIAGRAM):   end;
667106    +      end;
MPRINT(EM_DIAGRAM):   end;
667107    +      else do;
MPRINT(EM_DIAGRAM):   else do;
667108    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
667109    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
667110    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
667111    +         end;
MPRINT(EM_DIAGRAM):   end;
667112    +      end;
MPRINT(EM_DIAGRAM):   end;
667113    +   end;
MPRINT(EM_DIAGRAM):   end;
667114    +   else do;
MPRINT(EM_DIAGRAM):   else do;
667115    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
667116    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
667117    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
667118    +      end;
MPRINT(EM_DIAGRAM):   end;
667119    +      else do;
MPRINT(EM_DIAGRAM):   else do;
667120    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
667121    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
667122    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
667123    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
667124    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
667125    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
667126    +         end;
MPRINT(EM_DIAGRAM):   end;
667127    +      end;
MPRINT(EM_DIAGRAM):   end;
667128    +   end;
MPRINT(EM_DIAGRAM):   end;
667129    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
667130    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
667131    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
667132    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
667133    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
667134    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
667135    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
667136    +   end;
MPRINT(EM_DIAGRAM):   end;
667137    +end;
MPRINT(EM_DIAGRAM):   end;
667138    +
667139    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
667140    +*** Checking missing input Interval
667141    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
667142    +
667143    +IF NMISS(
667144    +   AcceptedCmpTotal ,
667145    +   Kidhome ,
667146    +   Mnt ,
667147    +   MntFishProducts ,
667148    +   MntFruits ,
667149    +   MntGoldProds ,
667150    +   MntMeatProducts ,
667151    +   MntSweetProducts ,
667152    +   MntWines ,
667153    +   NumCatalogPurchases ,
667154    +   NumDealsPurchases ,
667155    +   NumDistPurchases ,
667156    +   NumStorePurchases ,
667157    +   NumWebPurchases ,
667158    +   NumWebVisitsMonth ,
667159    +   RFMstat ,
667160    +   Recency ,
667161    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Kidhome , Mnt , MntFishProducts , MntFruits 
, MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , 
NumDealsPurchases , NumDistPurchases , NumStorePurchases , NumWebPurchases , NumWebVisitsMonth 
, RFMstat , Recency , Teenhome ) THEN DO;
667162    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
667163    +
667164    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
667165    +END;
MPRINT(EM_DIAGRAM):   END;
667166    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
667167    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
667168    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
667169    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
667170    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
667171    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
667172    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
667173    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
667174    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
667175    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
667176    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
667177    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
667178    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
667179    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
667180    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
667181    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
667182    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
667183    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
667184    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
667185    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
667186    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
667187    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
667188    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
667189    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
667190    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
667191    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
667192    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
667193    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
667194    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
667195    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
667196    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
667197    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
667198    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
667199    +END;
MPRINT(EM_DIAGRAM):   END;
667200    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
667201    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
667202    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
667203    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
667204    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
667205    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
667206    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
667207    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
667208    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
667209    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
667210    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
667211    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
667212    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
667213    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
667214    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
667215    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
667216    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
667217    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
667218    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
667219    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
667220    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
667221    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
667222    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
667223    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
667224    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
667225    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
667226    +   ELSE S_NumCatalogPurchases
667227    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
667228    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
667229    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
667230    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
667231    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
667232    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
667233    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
667234    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
667235    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
667236    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
667237    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
667238    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
667239    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
667240    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
667241    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
667242    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
667243    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
667244    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
667245    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
667246    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
667247    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
667248    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
667249    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
667250    +END;
MPRINT(EM_DIAGRAM):   END;
667251    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
667252    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
667253    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
667254    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
667255    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
667256    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
667257    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
667258    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
667259    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
667260    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
667261    +   H11  =     0.43912775344039 * S_AcceptedCmpTotal  +     0.15324285507227 *
667262    +        S_Kidhome  +     0.02569219772928 * S_Mnt  +     0.22132183806169 *
667263    +        S_MntFishProducts  +    -0.06337563896219 * S_MntFruits
667264    +          +      0.0657331004553 * S_MntGoldProds  +     0.80090124687167 *
667265    +        S_MntMeatProducts  +     0.09182621620999 * S_MntSweetProducts
667266    +          +    -0.41629315832186 * S_MntWines  +     0.39665915225092 *
667267    +        S_NumCatalogPurchases  +     0.35456089035071 * S_NumDealsPurchases
667268    +          +     0.24337801999461 * S_NumDistPurchases
667269    +          +    -0.81198839661616 * S_NumStorePurchases
667270    +          +    -0.41689687433747 * S_NumWebPurchases
667271    +          +     0.48849235469028 * S_NumWebVisitsMonth
667272    +          +     0.27825597215948 * S_RFMstat  +    -0.88374261044519 *
667273    +        S_Recency  +    -0.02773716219523 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.43912775344039 * S_AcceptedCmpTotal + 0.15324285507227 * 
S_Kidhome + 0.02569219772928 * S_Mnt + 0.22132183806169 * S_MntFishProducts + 
-0.06337563896219 * S_MntFruits + 0.0657331004553 * S_MntGoldProds + 0.80090124687167 * 
S_MntMeatProducts + 0.09182621620999 * S_MntSweetProducts + -0.41629315832186 * S_MntWines + 
0.39665915225092 * S_NumCatalogPurchases + 0.35456089035071 * S_NumDealsPurchases + 
0.24337801999461 * S_NumDistPurchases + -0.81198839661616 * S_NumStorePurchases + 
-0.41689687433747 * S_NumWebPurchases + 0.48849235469028 * S_NumWebVisitsMonth + 
0.27825597215948 * S_RFMstat + -0.88374261044519 * S_Recency + -0.02773716219523 * S_Teenhome ;
667274    +   H12  =     0.07434104162353 * S_AcceptedCmpTotal  +    -0.03195098726594 *
667275    +        S_Kidhome  +     0.01543386863542 * S_Mnt  +     0.12485525017443 *
667276    +        S_MntFishProducts  +    -0.30946247800427 * S_MntFruits
667277    +          +    -0.01203402973786 * S_MntGoldProds  +     0.63100948725324 *
667278    +        S_MntMeatProducts  +    -0.22236382332547 * S_MntSweetProducts
667279    +          +    -0.34774748026941 * S_MntWines  +     0.44473136951588 *
667280    +        S_NumCatalogPurchases  +     0.62678568949617 * S_NumDealsPurchases
667281    +          +    -0.31385132988744 * S_NumDistPurchases
667282    +          +    -0.40280836861804 * S_NumStorePurchases
667283    +          +    -0.48794669697044 * S_NumWebPurchases
667284    +          +     0.72338984901279 * S_NumWebVisitsMonth
667285    +          +     0.23547214976166 * S_RFMstat  +     -0.6164747614748 *
667286    +        S_Recency  +     0.04790780856477 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.07434104162353 * S_AcceptedCmpTotal + -0.03195098726594 * 
S_Kidhome + 0.01543386863542 * S_Mnt + 0.12485525017443 * S_MntFishProducts + 
-0.30946247800427 * S_MntFruits + -0.01203402973786 * S_MntGoldProds + 0.63100948725324 * 
S_MntMeatProducts + -0.22236382332547 * S_MntSweetProducts + -0.34774748026941 * S_MntWines + 
0.44473136951588 * S_NumCatalogPurchases + 0.62678568949617 * S_NumDealsPurchases + 
-0.31385132988744 * S_NumDistPurchases + -0.40280836861804 * S_NumStorePurchases + 
-0.48794669697044 * S_NumWebPurchases + 0.72338984901279 * S_NumWebVisitsMonth + 
0.23547214976166 * S_RFMstat + -0.6164747614748 * S_Recency + 0.04790780856477 * S_Teenhome ;
667287    +   H13  =    -0.63820214578159 * S_AcceptedCmpTotal  +     0.49904086064338 *
667288    +        S_Kidhome  +     0.13139593987479 * S_Mnt  +     0.18642565416238 *
667289    +        S_MntFishProducts  +     0.14097505415753 * S_MntFruits
667290    +          +    -0.06937869906897 * S_MntGoldProds  +    -0.44490405662638 *
667291    +        S_MntMeatProducts  +     0.03747875754721 * S_MntSweetProducts
667292    +          +     0.61023960214888 * S_MntWines  +    -0.66633431715473 *
667293    +        S_NumCatalogPurchases  +    -0.17986683579301 * S_NumDealsPurchases
667294    +          +    -0.22919354561837 * S_NumDistPurchases
667295    +          +     0.48900512750371 * S_NumStorePurchases
667296    +          +     0.63563236542104 * S_NumWebPurchases
667297    +          +    -1.24241302949211 * S_NumWebVisitsMonth
667298    +          +    -0.04477686111233 * S_RFMstat  +      1.2888939271922 *
667299    +        S_Recency  +      0.4139068327639 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.63820214578159 * S_AcceptedCmpTotal + 0.49904086064338 * 
S_Kidhome + 0.13139593987479 * S_Mnt + 0.18642565416238 * S_MntFishProducts + 0.14097505415753 
* S_MntFruits + -0.06937869906897 * S_MntGoldProds + -0.44490405662638 * S_MntMeatProducts + 
0.03747875754721 * S_MntSweetProducts + 0.61023960214888 * S_MntWines + -0.66633431715473 * 
S_NumCatalogPurchases + -0.17986683579301 * S_NumDealsPurchases + -0.22919354561837 * 
S_NumDistPurchases + 0.48900512750371 * S_NumStorePurchases + 0.63563236542104 * 
S_NumWebPurchases + -1.24241302949211 * S_NumWebVisitsMonth + -0.04477686111233 * S_RFMstat + 
1.2888939271922 * S_Recency + 0.4139068327639 * S_Teenhome ;
667300    +   H14  =     0.48105826056294 * S_AcceptedCmpTotal  +    -0.42248585066001 *
667301    +        S_Kidhome  +    -0.07174155418099 * S_Mnt  +    -0.42778960343462 *
667302    +        S_MntFishProducts  +     0.09779975165182 * S_MntFruits
667303    +          +     0.02450574144035 * S_MntGoldProds  +     0.84681198347991 *
667304    +        S_MntMeatProducts  +    -0.23934138256418 * S_MntSweetProducts
667305    +          +     0.10825550313301 * S_MntWines  +     0.13496669006169 *
667306    +        S_NumCatalogPurchases  +    -0.07641504001178 * S_NumDealsPurchases
667307    +          +     0.57486886714013 * S_NumDistPurchases
667308    +          +    -0.01439167006681 * S_NumStorePurchases
667309    +          +    -0.22502024795489 * S_NumWebPurchases
667310    +          +     0.31403814101947 * S_NumWebVisitsMonth
667311    +          +     0.06121982713427 * S_RFMstat  +    -0.66476823891241 *
667312    +        S_Recency  +     -0.4404721787316 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.48105826056294 * S_AcceptedCmpTotal + -0.42248585066001 * 
S_Kidhome + -0.07174155418099 * S_Mnt + -0.42778960343462 * S_MntFishProducts + 
0.09779975165182 * S_MntFruits + 0.02450574144035 * S_MntGoldProds + 0.84681198347991 * 
S_MntMeatProducts + -0.23934138256418 * S_MntSweetProducts + 0.10825550313301 * S_MntWines + 
0.13496669006169 * S_NumCatalogPurchases + -0.07641504001178 * S_NumDealsPurchases + 
0.57486886714013 * S_NumDistPurchases + -0.01439167006681 * S_NumStorePurchases + 
-0.22502024795489 * S_NumWebPurchases + 0.31403814101947 * S_NumWebVisitsMonth + 
0.06121982713427 * S_RFMstat + -0.66476823891241 * S_Recency + -0.4404721787316 * S_Teenhome ;
667313    +   H15  =    -0.01000128129385 * S_AcceptedCmpTotal  +     0.06375204613433 *
667314    +        S_Kidhome  +    -0.05376216682906 * S_Mnt  +    -0.08473670073828 *
667315    +        S_MntFishProducts  +     0.13371751007328 * S_MntFruits
667316    +          +     0.11259736161219 * S_MntGoldProds  +     0.03735647266983 *
667317    +        S_MntMeatProducts  +    -0.12544959729848 * S_MntSweetProducts
667318    +          +     0.17571980400351 * S_MntWines  +    -0.09289650416254 *
667319    +        S_NumCatalogPurchases  +    -0.13579396915412 * S_NumDealsPurchases
667320    +          +    -0.18997260805501 * S_NumDistPurchases
667321    +          +     0.29468211427777 * S_NumStorePurchases
667322    +          +     0.17132038178189 * S_NumWebPurchases
667323    +          +    -0.19708361532263 * S_NumWebVisitsMonth
667324    +          +     0.38006918721363 * S_RFMstat  +     0.23377164556017 *
667325    +        S_Recency  +    -0.00205417580177 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.01000128129385 * S_AcceptedCmpTotal + 0.06375204613433 * 
S_Kidhome + -0.05376216682906 * S_Mnt + -0.08473670073828 * S_MntFishProducts + 
0.13371751007328 * S_MntFruits + 0.11259736161219 * S_MntGoldProds + 0.03735647266983 * 
S_MntMeatProducts + -0.12544959729848 * S_MntSweetProducts + 0.17571980400351 * S_MntWines + 
-0.09289650416254 * S_NumCatalogPurchases + -0.13579396915412 * S_NumDealsPurchases + 
-0.18997260805501 * S_NumDistPurchases + 0.29468211427777 * S_NumStorePurchases + 
0.17132038178189 * S_NumWebPurchases + -0.19708361532263 * S_NumWebVisitsMonth + 
0.38006918721363 * S_RFMstat + 0.23377164556017 * S_Recency + -0.00205417580177 * S_Teenhome ;
667326    +   H16  =     0.17294085934065 * S_AcceptedCmpTotal  +    -0.39698389286699 *
667327    +        S_Kidhome  +    -0.13545797896515 * S_Mnt  +    -0.12002803153381 *
667328    +        S_MntFishProducts  +    -0.11507127001045 * S_MntFruits
667329    +          +    -0.12266840134948 * S_MntGoldProds  +    -0.45452045159312 *
667330    +        S_MntMeatProducts  +     0.00553267509866 * S_MntSweetProducts
667331    +          +    -0.15768353487074 * S_MntWines  +    -0.72223742588038 *
667332    +        S_NumCatalogPurchases  +    -0.42741922123767 * S_NumDealsPurchases
667333    +          +    -0.74097227246314 * S_NumDistPurchases
667334    +          +     0.06550389451608 * S_NumStorePurchases
667335    +          +     0.23777098322244 * S_NumWebPurchases
667336    +          +    -0.14585163604726 * S_NumWebVisitsMonth
667337    +          +    -0.39028525061866 * S_RFMstat  +     0.07130869316282 *
667338    +        S_Recency  +    -0.00401659472541 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = 0.17294085934065 * S_AcceptedCmpTotal + -0.39698389286699 * 
S_Kidhome + -0.13545797896515 * S_Mnt + -0.12002803153381 * S_MntFishProducts + 
-0.11507127001045 * S_MntFruits + -0.12266840134948 * S_MntGoldProds + -0.45452045159312 * 
S_MntMeatProducts + 0.00553267509866 * S_MntSweetProducts + -0.15768353487074 * S_MntWines + 
-0.72223742588038 * S_NumCatalogPurchases + -0.42741922123767 * S_NumDealsPurchases + 
-0.74097227246314 * S_NumDistPurchases + 0.06550389451608 * S_NumStorePurchases + 
0.23777098322244 * S_NumWebPurchases + -0.14585163604726 * S_NumWebVisitsMonth + 
-0.39028525061866 * S_RFMstat + 0.07130869316282 * S_Recency + -0.00401659472541 * S_Teenhome ;
667339    +   H11  = H11  +    -0.02007476396722 * AcceptedCmp10
667340    +          +     0.09720288796707 * AcceptedCmp20  +     0.11205658872251 *
667341    +        AcceptedCmp30  +    -0.13511778770753 * AcceptedCmp40
667342    +          +    -0.26504356137187 * AcceptedCmp50  +     0.03201227673285 *
667343    +        Complain0  +    -0.15566647786045 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.02007476396722 * AcceptedCmp10 + 0.09720288796707 * 
AcceptedCmp20 + 0.11205658872251 * AcceptedCmp30 + -0.13511778770753 * AcceptedCmp40 + 
-0.26504356137187 * AcceptedCmp50 + 0.03201227673285 * Complain0 + -0.15566647786045 * 
HigherEducationBinary0 ;
667344    +   H12  = H12  +    -0.52595746088087 * AcceptedCmp10
667345    +          +    -0.15041757209085 * AcceptedCmp20  +    -0.48938205246808 *
667346    +        AcceptedCmp30  +     -0.1982121209098 * AcceptedCmp40
667347    +          +    -0.45745206981227 * AcceptedCmp50  +    -0.24421059586296 *
667348    +        Complain0  +     -0.0372485515029 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.52595746088087 * AcceptedCmp10 + -0.15041757209085 * 
AcceptedCmp20 + -0.48938205246808 * AcceptedCmp30 + -0.1982121209098 * AcceptedCmp40 + 
-0.45745206981227 * AcceptedCmp50 + -0.24421059586296 * Complain0 + -0.0372485515029 * 
HigherEducationBinary0 ;
667349    +   H13  = H13  +    -0.02992554536875 * AcceptedCmp10
667350    +          +     0.20420421321169 * AcceptedCmp20  +     0.17676273529469 *
667351    +        AcceptedCmp30  +     -0.1875050368358 * AcceptedCmp40
667352    +          +     0.44580716573032 * AcceptedCmp50  +     -0.3702812451724 *
667353    +        Complain0  +     0.07192397780717 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.02992554536875 * AcceptedCmp10 + 0.20420421321169 * 
AcceptedCmp20 + 0.17676273529469 * AcceptedCmp30 + -0.1875050368358 * AcceptedCmp40 + 
0.44580716573032 * AcceptedCmp50 + -0.3702812451724 * Complain0 + 0.07192397780717 * 
HigherEducationBinary0 ;
667354    +   H14  = H14  +    -0.24903976363288 * AcceptedCmp10
667355    +          +    -0.33252849654907 * AcceptedCmp20  +    -0.01800268234049 *
667356    +        AcceptedCmp30  +    -0.24627514089072 * AcceptedCmp40
667357    +          +    -0.00915156624914 * AcceptedCmp50  +    -0.05033360712883 *
667358    +        Complain0  +      0.3339375399643 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.24903976363288 * AcceptedCmp10 + -0.33252849654907 * 
AcceptedCmp20 + -0.01800268234049 * AcceptedCmp30 + -0.24627514089072 * AcceptedCmp40 + 
-0.00915156624914 * AcceptedCmp50 + -0.05033360712883 * Complain0 + 0.3339375399643 * 
HigherEducationBinary0 ;
667359    +   H15  = H15  +    -0.27519938462786 * AcceptedCmp10
667360    +          +     0.07731721526247 * AcceptedCmp20  +     0.14906574971325 *
667361    +        AcceptedCmp30  +     0.13255042650483 * AcceptedCmp40
667362    +          +    -0.02940483359408 * AcceptedCmp50  +     0.13352278200648 *
667363    +        Complain0  +     0.08170186393964 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.27519938462786 * AcceptedCmp10 + 0.07731721526247 * 
AcceptedCmp20 + 0.14906574971325 * AcceptedCmp30 + 0.13255042650483 * AcceptedCmp40 + 
-0.02940483359408 * AcceptedCmp50 + 0.13352278200648 * Complain0 + 0.08170186393964 * 
HigherEducationBinary0 ;
667364    +   H16  = H16  +     0.10529304585202 * AcceptedCmp10
667365    +          +     0.31213134788133 * AcceptedCmp20  +     0.30084869783987 *
667366    +        AcceptedCmp30  +    -0.01118871464539 * AcceptedCmp40
667367    +          +    -0.04086250638732 * AcceptedCmp50  +    -0.07837727874375 *
667368    +        Complain0  +     0.12138365487453 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.10529304585202 * AcceptedCmp10 + 0.31213134788133 * 
AcceptedCmp20 + 0.30084869783987 * AcceptedCmp30 + -0.01118871464539 * AcceptedCmp40 + 
-0.04086250638732 * AcceptedCmp50 + -0.07837727874375 * Complain0 + 0.12138365487453 * 
HigherEducationBinary0 ;
667369    +   H11  = H11  +     0.37637396661146 * Marital_StatusDivorced
667370    +          +    -0.26467919055845 * Marital_StatusMarried
667371    +          +     -0.0147004493608 * Marital_StatusSingle
667372    +          +    -0.34554452729743 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.37637396661146 * Marital_StatusDivorced + 
-0.26467919055845 * Marital_StatusMarried + -0.0147004493608 * Marital_StatusSingle + 
-0.34554452729743 * Marital_StatusTogether ;
667373    +   H12  = H12  +    -0.02293194383383 * Marital_StatusDivorced
667374    +          +     0.22656143769796 * Marital_StatusMarried
667375    +          +     -0.2497880429053 * Marital_StatusSingle
667376    +          +     0.00744194900473 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.02293194383383 * Marital_StatusDivorced + 
0.22656143769796 * Marital_StatusMarried + -0.2497880429053 * Marital_StatusSingle + 
0.00744194900473 * Marital_StatusTogether ;
667377    +   H13  = H13  +    -0.08040527368027 * Marital_StatusDivorced
667378    +          +     0.70834351124371 * Marital_StatusMarried
667379    +          +    -0.79585819567656 * Marital_StatusSingle
667380    +          +     0.83850839024957 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.08040527368027 * Marital_StatusDivorced + 
0.70834351124371 * Marital_StatusMarried + -0.79585819567656 * Marital_StatusSingle + 
0.83850839024957 * Marital_StatusTogether ;
667381    +   H14  = H14  +     0.05889234585558 * Marital_StatusDivorced
667382    +          +    -0.94141743088603 * Marital_StatusMarried
667383    +          +     0.86423540784285 * Marital_StatusSingle
667384    +          +     -0.6260719130207 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.05889234585558 * Marital_StatusDivorced + 
-0.94141743088603 * Marital_StatusMarried + 0.86423540784285 * Marital_StatusSingle + 
-0.6260719130207 * Marital_StatusTogether ;
667385    +   H15  = H15  +     0.19106392110706 * Marital_StatusDivorced
667386    +          +    -0.18189885719847 * Marital_StatusMarried
667387    +          +     0.36145162549083 * Marital_StatusSingle
667388    +          +    -0.26654643410008 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.19106392110706 * Marital_StatusDivorced + 
-0.18189885719847 * Marital_StatusMarried + 0.36145162549083 * Marital_StatusSingle + 
-0.26654643410008 * Marital_StatusTogether ;
667389    +   H16  = H16  +     0.08265128366103 * Marital_StatusDivorced
667390    +          +    -0.52831758614523 * Marital_StatusMarried
667391    +          +    -0.12671844940828 * Marital_StatusSingle
667392    +          +    -0.43605855534313 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.08265128366103 * Marital_StatusDivorced + 
-0.52831758614523 * Marital_StatusMarried + -0.12671844940828 * Marital_StatusSingle + 
-0.43605855534313 * Marital_StatusTogether ;
667393    +   H11  =     -1.3276216013071 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.3276216013071 + H11 ;
667394    +   H12  =    -0.00525373429217 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.00525373429217 + H12 ;
667395    +   H13  =     0.30688582916965 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.30688582916965 + H13 ;
667396    +   H14  =    -1.32677970876573 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -1.32677970876573 + H14 ;
667397    +   H15  =      0.7399814373424 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.7399814373424 + H15 ;
667398    +   H16  =    -1.64568358786672 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.64568358786672 + H16 ;
667399    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
667400    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
667401    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
667402    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
667403    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
667404    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
667405    +END;
MPRINT(EM_DIAGRAM):   END;
667406    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
667407    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
667408    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
667409    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
667410    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
667411    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
667412    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
667413    +END;
MPRINT(EM_DIAGRAM):   END;
667414    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
667415    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
667416    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
667417    +
667418    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
667419    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
667420    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
667421    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
667422    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
667423    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
667424    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
667425    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
667426    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
667427    +end;
MPRINT(EM_DIAGRAM):   end;
667428    +else do;
MPRINT(EM_DIAGRAM):   else do;
667429    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
667430    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
667431    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
667432    +   end;
MPRINT(EM_DIAGRAM):   end;
667433    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
667434    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
667435    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
667436    +   end;
MPRINT(EM_DIAGRAM):   end;
667437    +   else do;
MPRINT(EM_DIAGRAM):   else do;
667438    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
667439    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
667440    +   end;
MPRINT(EM_DIAGRAM):   end;
667441    +end;
MPRINT(EM_DIAGRAM):   end;
667442    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
667443    +   P_DepVar1  =     1.40410400811948 * H11  +      1.6065080260622 * H12
667444    +          +    -2.28029439254425 * H13  +     2.12025707381767 * H14
667445    +          +    -0.28698895635258 * H15  +    -1.55666643166016 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.40410400811948 * H11 + 1.6065080260622 * H12 + 
-2.28029439254425 * H13 + 2.12025707381767 * H14 + -0.28698895635258 * H15 + -1.55666643166016 
* H16 ;
667446    +   P_DepVar1  =    -1.08867940823404 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.08867940823404 + P_DepVar1 ;
667447    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
667448    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
667449    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
667450    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
667451    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
667452    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
667453    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
667454    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
667455    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
667456    +END;
MPRINT(EM_DIAGRAM):   END;
667457    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
667458    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
667459    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
667460    +END;
MPRINT(EM_DIAGRAM):   END;
667461    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
667462    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
667463    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
667464    +END;
MPRINT(EM_DIAGRAM):   END;
667465    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
667466    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
667467    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
667468    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
667469    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
667470    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
667471    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
667472    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
667473    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
667474    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
667475    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
667476    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
667477    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
667478    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
667479    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
667480    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
667481    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
667482    +END;
MPRINT(EM_DIAGRAM):   END;
667483    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
667484    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
667485    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
667486    +drop
667487    +H11
667488    +H12
667489    +H13
667490    +H14
667491    +H15
667492    +H16
667493    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
667494    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
667495    +* Renaming variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural9;
667496    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
667497    +* Renaming Posterior variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural9;
667498    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
667499    +drop Neural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar1;
667500    +Neural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar1 = P_DepVar1;
667501    +drop Neural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar0;
667502    +Neural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar0 = P_DepVar0;
667503    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
667504    +* Renaming _WARN_ variable for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural9;
667505    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
667506    +length Neural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural9_WARN_ $4;
667507    +drop Neural9_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural9_WARN_;
667508    +Neural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural9_WARN_ = _WARN_;
667509    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
667510    +* Ensmbl: Scoring Code of model 9 of 9;
MPRINT(EM_DIAGRAM):   * Ensmbl: Scoring Code of model 9 of 9;
667511    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
667512    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
667513    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
667514    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
667515    +* NODE: Neural10;
MPRINT(EM_DIAGRAM):   * NODE: Neural10;
667516    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
667517    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
667518    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
667519    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
667520    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
667521    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
667522    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
667523    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
667524    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
667525    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
667526    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
667527    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
667528    +LENGTH _WARN_ $4
667529    +      F_DepVar  $ 12
667530    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
667531    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
667532    +
667533    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
667534    +
667535    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
667536    +
667537    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
667538    +
667539    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
667540    +
667541    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
667542    +
667543    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
667544    +
667545    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
667546    +
667547    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
667548    +
667549    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
667550    +
667551    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
667552    +
667553    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
667554    +
667555    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
667556    +
667557    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
667558    +
667559    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
667560    +
667561    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
667562    +
667563    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
667564    +
667565    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
667566    +
667567    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
667568    +
667569    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
667570    +
667571    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
667572    +
667573    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
667574    +
667575    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
667576    +
667577    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
667578    +
667579    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
667580    +
667581    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
667582    +
667583    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
667584    +
667585    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
667586    +
667587    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
667588    +
667589    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
667590    +
667591    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
667592    +
667593    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
667594    +
667595    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
667596    +
667597    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
667598    +
667599    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
667600    +
667601    +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
667602    +
667603    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
667604    +
667605    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
667606    +
667607    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
667608    +
667609    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
667610    +
667611    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
667612    +
667613    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
667614    +
667615    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
667616    +
667617    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
667618    +
667619    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
667620    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
667621    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
667622    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
667623    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
667624    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
667625    +end;
MPRINT(EM_DIAGRAM):   end;
667626    +else do;
MPRINT(EM_DIAGRAM):   else do;
667627    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
667628    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
667629    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
667630    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
667631    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
667632    +   end;
MPRINT(EM_DIAGRAM):   end;
667633    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
667634    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
667635    +   end;
MPRINT(EM_DIAGRAM):   end;
667636    +   else do;
MPRINT(EM_DIAGRAM):   else do;
667637    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
667638    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
667639    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
667640    +   end;
MPRINT(EM_DIAGRAM):   end;
667641    +end;
MPRINT(EM_DIAGRAM):   end;
667642    +
667643    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
667644    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
667645    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
667646    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
667647    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
667648    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
667649    +end;
MPRINT(EM_DIAGRAM):   end;
667650    +else do;
MPRINT(EM_DIAGRAM):   else do;
667651    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
667652    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
667653    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
667654    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
667655    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
667656    +   end;
MPRINT(EM_DIAGRAM):   end;
667657    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
667658    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
667659    +   end;
MPRINT(EM_DIAGRAM):   end;
667660    +   else do;
MPRINT(EM_DIAGRAM):   else do;
667661    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
667662    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
667663    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
667664    +   end;
MPRINT(EM_DIAGRAM):   end;
667665    +end;
MPRINT(EM_DIAGRAM):   end;
667666    +
667667    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
667668    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
667669    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
667670    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
667671    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
667672    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
667673    +end;
MPRINT(EM_DIAGRAM):   end;
667674    +else do;
MPRINT(EM_DIAGRAM):   else do;
667675    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
667676    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
667677    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
667678    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
667679    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
667680    +   end;
MPRINT(EM_DIAGRAM):   end;
667681    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
667682    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
667683    +   end;
MPRINT(EM_DIAGRAM):   end;
667684    +   else do;
MPRINT(EM_DIAGRAM):   else do;
667685    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
667686    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
667687    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
667688    +   end;
MPRINT(EM_DIAGRAM):   end;
667689    +end;
MPRINT(EM_DIAGRAM):   end;
667690    +
667691    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
667692    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
667693    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
667694    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
667695    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
667696    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
667697    +end;
MPRINT(EM_DIAGRAM):   end;
667698    +else do;
MPRINT(EM_DIAGRAM):   else do;
667699    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
667700    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
667701    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
667702    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
667703    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
667704    +   end;
MPRINT(EM_DIAGRAM):   end;
667705    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
667706    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
667707    +   end;
MPRINT(EM_DIAGRAM):   end;
667708    +   else do;
MPRINT(EM_DIAGRAM):   else do;
667709    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
667710    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
667711    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
667712    +   end;
MPRINT(EM_DIAGRAM):   end;
667713    +end;
MPRINT(EM_DIAGRAM):   end;
667714    +
667715    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
667716    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
667717    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
667718    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
667719    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
667720    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
667721    +end;
MPRINT(EM_DIAGRAM):   end;
667722    +else do;
MPRINT(EM_DIAGRAM):   else do;
667723    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
667724    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
667725    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
667726    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
667727    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
667728    +   end;
MPRINT(EM_DIAGRAM):   end;
667729    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
667730    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
667731    +   end;
MPRINT(EM_DIAGRAM):   end;
667732    +   else do;
MPRINT(EM_DIAGRAM):   else do;
667733    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
667734    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
667735    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
667736    +   end;
MPRINT(EM_DIAGRAM):   end;
667737    +end;
MPRINT(EM_DIAGRAM):   end;
667738    +
667739    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
667740    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
667741    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
667742    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
667743    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
667744    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
667745    +end;
MPRINT(EM_DIAGRAM):   end;
667746    +else do;
MPRINT(EM_DIAGRAM):   else do;
667747    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
667748    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
667749    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
667750    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
667751    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
667752    +   end;
MPRINT(EM_DIAGRAM):   end;
667753    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
667754    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
667755    +   end;
MPRINT(EM_DIAGRAM):   end;
667756    +   else do;
MPRINT(EM_DIAGRAM):   else do;
667757    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
667758    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
667759    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
667760    +   end;
MPRINT(EM_DIAGRAM):   end;
667761    +end;
MPRINT(EM_DIAGRAM):   end;
667762    +
667763    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
667764    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
667765    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
667766    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
667767    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
667768    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
667769    +end;
MPRINT(EM_DIAGRAM):   end;
667770    +else do;
MPRINT(EM_DIAGRAM):   else do;
667771    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
667772    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
667773    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
667774    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
667775    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
667776    +   end;
MPRINT(EM_DIAGRAM):   end;
667777    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
667778    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
667779    +   end;
MPRINT(EM_DIAGRAM):   end;
667780    +   else do;
MPRINT(EM_DIAGRAM):   else do;
667781    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
667782    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
667783    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
667784    +   end;
MPRINT(EM_DIAGRAM):   end;
667785    +end;
MPRINT(EM_DIAGRAM):   end;
667786    +
667787    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
667788    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
667789    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
667790    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
667791    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
667792    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
667793    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
667794    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
667795    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
667796    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
667797    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
667798    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
667799    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
667800    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
667801    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
667802    +end;
MPRINT(EM_DIAGRAM):   end;
667803    +else do;
MPRINT(EM_DIAGRAM):   else do;
667804    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
667805    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
667806    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
667807    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
667808    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
667809    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
667810    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
667811    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
667812    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
667813    +         end;
MPRINT(EM_DIAGRAM):   end;
667814    +         else do;
MPRINT(EM_DIAGRAM):   else do;
667815    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
667816    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
667817    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
667818    +            end;
MPRINT(EM_DIAGRAM):   end;
667819    +         end;
MPRINT(EM_DIAGRAM):   end;
667820    +      end;
MPRINT(EM_DIAGRAM):   end;
667821    +      else do;
MPRINT(EM_DIAGRAM):   else do;
667822    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
667823    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
667824    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
667825    +         end;
MPRINT(EM_DIAGRAM):   end;
667826    +      end;
MPRINT(EM_DIAGRAM):   end;
667827    +   end;
MPRINT(EM_DIAGRAM):   end;
667828    +   else do;
MPRINT(EM_DIAGRAM):   else do;
667829    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
667830    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
667831    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
667832    +      end;
MPRINT(EM_DIAGRAM):   end;
667833    +      else do;
MPRINT(EM_DIAGRAM):   else do;
667834    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
667835    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
667836    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
667837    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
667838    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
667839    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
667840    +         end;
MPRINT(EM_DIAGRAM):   end;
667841    +      end;
MPRINT(EM_DIAGRAM):   end;
667842    +   end;
MPRINT(EM_DIAGRAM):   end;
667843    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
667844    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
667845    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
667846    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
667847    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
667848    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
667849    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
667850    +   end;
MPRINT(EM_DIAGRAM):   end;
667851    +end;
MPRINT(EM_DIAGRAM):   end;
667852    +
667853    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
667854    +*** Checking missing input Interval
667855    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
667856    +
667857    +IF NMISS(
667858    +   AcceptedCmpTotal ,
667859    +   Kidhome ,
667860    +   Mnt ,
667861    +   MntFishProducts ,
667862    +   MntFruits ,
667863    +   MntGoldProds ,
667864    +   MntMeatProducts ,
667865    +   MntSweetProducts ,
667866    +   MntWines ,
667867    +   NumCatalogPurchases ,
667868    +   NumDealsPurchases ,
667869    +   NumDistPurchases ,
667870    +   NumStorePurchases ,
667871    +   NumWebPurchases ,
667872    +   NumWebVisitsMonth ,
667873    +   RFMstat ,
667874    +   Recency ,
667875    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Kidhome , Mnt , MntFishProducts , MntFruits 
, MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , 
NumDealsPurchases , NumDistPurchases , NumStorePurchases , NumWebPurchases , NumWebVisitsMonth 
, RFMstat , Recency , Teenhome ) THEN DO;
667876    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
667877    +
667878    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
667879    +END;
MPRINT(EM_DIAGRAM):   END;
667880    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
667881    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
667882    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
667883    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
667884    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
667885    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
667886    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
667887    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
667888    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
667889    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
667890    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
667891    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
667892    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
667893    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
667894    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
667895    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
667896    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
667897    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
667898    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
667899    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
667900    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
667901    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
667902    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
667903    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
667904    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
667905    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
667906    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
667907    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
667908    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
667909    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
667910    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
667911    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
667912    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
667913    +END;
MPRINT(EM_DIAGRAM):   END;
667914    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
667915    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
667916    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
667917    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
667918    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
667919    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
667920    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
667921    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
667922    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
667923    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
667924    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
667925    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
667926    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
667927    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
667928    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
667929    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
667930    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
667931    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
667932    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
667933    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
667934    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
667935    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
667936    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
667937    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
667938    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
667939    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
667940    +   ELSE S_NumCatalogPurchases
667941    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
667942    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
667943    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
667944    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
667945    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
667946    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
667947    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
667948    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
667949    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
667950    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
667951    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
667952    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
667953    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
667954    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
667955    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
667956    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
667957    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
667958    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
667959    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
667960    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
667961    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
667962    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
667963    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
667964    +END;
MPRINT(EM_DIAGRAM):   END;
667965    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
667966    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
667967    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
667968    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
667969    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
667970    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
667971    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
667972    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
667973    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
667974    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
667975    +   H11  =    -0.05593591984236 * S_AcceptedCmpTotal  +    -0.15222591404968 *
667976    +        S_Kidhome  +    -0.14333543557998 * S_Mnt  +    -0.15248110960637 *
667977    +        S_MntFishProducts  +     0.21423389210826 * S_MntFruits
667978    +          +     0.27583997827488 * S_MntGoldProds  +     0.33906941857334 *
667979    +        S_MntMeatProducts  +    -0.18189684051157 * S_MntSweetProducts
667980    +          +    -0.14699487046336 * S_MntWines  +     0.12279108001012 *
667981    +        S_NumCatalogPurchases  +    -0.13784967978035 * S_NumDealsPurchases
667982    +          +     0.31907604696327 * S_NumDistPurchases
667983    +          +    -0.02337643350225 * S_NumStorePurchases
667984    +          +    -0.03710870748613 * S_NumWebPurchases
667985    +          +    -0.09050794174833 * S_NumWebVisitsMonth
667986    +          +    -0.03038236905639 * S_RFMstat  +     -0.1425750250249 *
667987    +        S_Recency  +     0.28728724059371 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.05593591984236 * S_AcceptedCmpTotal + -0.15222591404968 * 
S_Kidhome + -0.14333543557998 * S_Mnt + -0.15248110960637 * S_MntFishProducts + 
0.21423389210826 * S_MntFruits + 0.27583997827488 * S_MntGoldProds + 0.33906941857334 * 
S_MntMeatProducts + -0.18189684051157 * S_MntSweetProducts + -0.14699487046336 * S_MntWines + 
0.12279108001012 * S_NumCatalogPurchases + -0.13784967978035 * S_NumDealsPurchases + 
0.31907604696327 * S_NumDistPurchases + -0.02337643350225 * S_NumStorePurchases + 
-0.03710870748613 * S_NumWebPurchases + -0.09050794174833 * S_NumWebVisitsMonth + 
-0.03038236905639 * S_RFMstat + -0.1425750250249 * S_Recency + 0.28728724059371 * S_Teenhome ;
667988    +   H12  =     0.02658934126333 * S_AcceptedCmpTotal  +     0.00729222523123 *
667989    +        S_Kidhome  +    -0.16054040072952 * S_Mnt  +     0.21368744829668 *
667990    +        S_MntFishProducts  +    -0.38567748679786 * S_MntFruits
667991    +          +     0.01538770837896 * S_MntGoldProds  +     0.26799837156516 *
667992    +        S_MntMeatProducts  +    -0.03227992228949 * S_MntSweetProducts
667993    +          +    -0.05332837299227 * S_MntWines  +    -0.59456078768767 *
667994    +        S_NumCatalogPurchases  +    -0.30459286527334 * S_NumDealsPurchases
667995    +          +     0.09101667200647 * S_NumDistPurchases
667996    +          +     0.15756950151025 * S_NumStorePurchases
667997    +          +    -0.25413468685639 * S_NumWebPurchases
667998    +          +     0.05860616268336 * S_NumWebVisitsMonth
667999    +          +     0.15733068754241 * S_RFMstat  +    -0.45821943962804 *
668000    +        S_Recency  +    -0.27642512764036 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.02658934126333 * S_AcceptedCmpTotal + 0.00729222523123 * 
S_Kidhome + -0.16054040072952 * S_Mnt + 0.21368744829668 * S_MntFishProducts + 
-0.38567748679786 * S_MntFruits + 0.01538770837896 * S_MntGoldProds + 0.26799837156516 * 
S_MntMeatProducts + -0.03227992228949 * S_MntSweetProducts + -0.05332837299227 * S_MntWines + 
-0.59456078768767 * S_NumCatalogPurchases + -0.30459286527334 * S_NumDealsPurchases + 
0.09101667200647 * S_NumDistPurchases + 0.15756950151025 * S_NumStorePurchases + 
-0.25413468685639 * S_NumWebPurchases + 0.05860616268336 * S_NumWebVisitsMonth + 
0.15733068754241 * S_RFMstat + -0.45821943962804 * S_Recency + -0.27642512764036 * S_Teenhome ;
668001    +   H13  =     0.16918999382902 * S_AcceptedCmpTotal  +     -0.4012305600884 *
668002    +        S_Kidhome  +     0.26493497259127 * S_Mnt  +     0.04728975645729 *
668003    +        S_MntFishProducts  +      0.0315247200365 * S_MntFruits
668004    +          +    -0.04096342555085 * S_MntGoldProds  +     0.56434077264537 *
668005    +        S_MntMeatProducts  +    -0.09161669649727 * S_MntSweetProducts
668006    +          +    -0.39043511079678 * S_MntWines  +     0.54393711558115 *
668007    +        S_NumCatalogPurchases  +    -0.01184328299667 * S_NumDealsPurchases
668008    +          +      0.3986742546267 * S_NumDistPurchases
668009    +          +     0.01771277995324 * S_NumStorePurchases
668010    +          +    -0.01959916713409 * S_NumWebPurchases
668011    +          +     0.60679036120713 * S_NumWebVisitsMonth
668012    +          +     0.08435948584344 * S_RFMstat  +    -0.95524595397707 *
668013    +        S_Recency  +    -0.25065878895323 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.16918999382902 * S_AcceptedCmpTotal + -0.4012305600884 * 
S_Kidhome + 0.26493497259127 * S_Mnt + 0.04728975645729 * S_MntFishProducts + 0.0315247200365 
* S_MntFruits + -0.04096342555085 * S_MntGoldProds + 0.56434077264537 * S_MntMeatProducts + 
-0.09161669649727 * S_MntSweetProducts + -0.39043511079678 * S_MntWines + 0.54393711558115 * 
S_NumCatalogPurchases + -0.01184328299667 * S_NumDealsPurchases + 0.3986742546267 * 
S_NumDistPurchases + 0.01771277995324 * S_NumStorePurchases + -0.01959916713409 * 
S_NumWebPurchases + 0.60679036120713 * S_NumWebVisitsMonth + 0.08435948584344 * S_RFMstat + 
-0.95524595397707 * S_Recency + -0.25065878895323 * S_Teenhome ;
668014    +   H14  =    -0.16659499847061 * S_AcceptedCmpTotal  +     0.02357084658349 *
668015    +        S_Kidhome  +     0.05388140126658 * S_Mnt  +    -0.05810927736046 *
668016    +        S_MntFishProducts  +    -0.15826458235953 * S_MntFruits
668017    +          +    -0.41850090574896 * S_MntGoldProds  +    -0.26401541533988 *
668018    +        S_MntMeatProducts  +     0.04480310739087 * S_MntSweetProducts
668019    +          +      0.1225741493226 * S_MntWines  +    -0.56748657856846 *
668020    +        S_NumCatalogPurchases  +    -0.69394311075706 * S_NumDealsPurchases
668021    +          +    -0.56367315288861 * S_NumDistPurchases
668022    +          +     0.22181323985263 * S_NumStorePurchases
668023    +          +    -0.06232830057869 * S_NumWebPurchases
668024    +          +    -0.16027390604517 * S_NumWebVisitsMonth
668025    +          +    -0.09981217676274 * S_RFMstat  +    -0.04262244153265 *
668026    +        S_Recency  +    -0.17321366891816 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.16659499847061 * S_AcceptedCmpTotal + 0.02357084658349 * 
S_Kidhome + 0.05388140126658 * S_Mnt + -0.05810927736046 * S_MntFishProducts + 
-0.15826458235953 * S_MntFruits + -0.41850090574896 * S_MntGoldProds + -0.26401541533988 * 
S_MntMeatProducts + 0.04480310739087 * S_MntSweetProducts + 0.1225741493226 * S_MntWines + 
-0.56748657856846 * S_NumCatalogPurchases + -0.69394311075706 * S_NumDealsPurchases + 
-0.56367315288861 * S_NumDistPurchases + 0.22181323985263 * S_NumStorePurchases + 
-0.06232830057869 * S_NumWebPurchases + -0.16027390604517 * S_NumWebVisitsMonth + 
-0.09981217676274 * S_RFMstat + -0.04262244153265 * S_Recency + -0.17321366891816 * S_Teenhome 
;
668027    +   H15  =    -0.03881766208476 * S_AcceptedCmpTotal  +      0.3555777614453 *
668028    +        S_Kidhome  +     0.15023474562078 * S_Mnt  +    -0.28470673338867 *
668029    +        S_MntFishProducts  +    -0.16436807986852 * S_MntFruits
668030    +          +     0.15942617624256 * S_MntGoldProds  +     1.26624544782503 *
668031    +        S_MntMeatProducts  +      0.0500748594942 * S_MntSweetProducts
668032    +          +      0.1213695191802 * S_MntWines  +     1.23017810696609 *
668033    +        S_NumCatalogPurchases  +     0.26589246063072 * S_NumDealsPurchases
668034    +          +      0.2955712939881 * S_NumDistPurchases
668035    +          +     -0.5433445349483 * S_NumStorePurchases
668036    +          +    -0.59265227511161 * S_NumWebPurchases
668037    +          +     0.00366326444932 * S_NumWebVisitsMonth
668038    +          +     0.25124432206112 * S_RFMstat  +    -0.08596429987285 *
668039    +        S_Recency  +    -0.19264562465751 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.03881766208476 * S_AcceptedCmpTotal + 0.3555777614453 * 
S_Kidhome + 0.15023474562078 * S_Mnt + -0.28470673338867 * S_MntFishProducts + 
-0.16436807986852 * S_MntFruits + 0.15942617624256 * S_MntGoldProds + 1.26624544782503 * 
S_MntMeatProducts + 0.0500748594942 * S_MntSweetProducts + 0.1213695191802 * S_MntWines + 
1.23017810696609 * S_NumCatalogPurchases + 0.26589246063072 * S_NumDealsPurchases + 
0.2955712939881 * S_NumDistPurchases + -0.5433445349483 * S_NumStorePurchases + 
-0.59265227511161 * S_NumWebPurchases + 0.00366326444932 * S_NumWebVisitsMonth + 
0.25124432206112 * S_RFMstat + -0.08596429987285 * S_Recency + -0.19264562465751 * S_Teenhome ;
668040    +   H16  =      0.4256391916459 * S_AcceptedCmpTotal  +    -0.14933442450857 *
668041    +        S_Kidhome  +     0.11321190053106 * S_Mnt  +    -0.08228540664731 *
668042    +        S_MntFishProducts  +    -0.44605772880289 * S_MntFruits
668043    +          +     0.02398042304084 * S_MntGoldProds  +     1.02247698844519 *
668044    +        S_MntMeatProducts  +    -0.29299854989186 * S_MntSweetProducts
668045    +          +    -0.55069644292933 * S_MntWines  +      0.6692377268179 *
668046    +        S_NumCatalogPurchases  +     0.70282032902203 * S_NumDealsPurchases
668047    +          +    -0.42166207183939 * S_NumDistPurchases
668048    +          +    -0.74339843972857 * S_NumStorePurchases
668049    +          +    -0.61598427613968 * S_NumWebPurchases
668050    +          +     0.88769400454452 * S_NumWebVisitsMonth
668051    +          +     0.45864975080775 * S_RFMstat  +    -1.00498331113421 *
668052    +        S_Recency  +    -0.06157944188263 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = 0.4256391916459 * S_AcceptedCmpTotal + -0.14933442450857 * 
S_Kidhome + 0.11321190053106 * S_Mnt + -0.08228540664731 * S_MntFishProducts + 
-0.44605772880289 * S_MntFruits + 0.02398042304084 * S_MntGoldProds + 1.02247698844519 * 
S_MntMeatProducts + -0.29299854989186 * S_MntSweetProducts + -0.55069644292933 * S_MntWines + 
0.6692377268179 * S_NumCatalogPurchases + 0.70282032902203 * S_NumDealsPurchases + 
-0.42166207183939 * S_NumDistPurchases + -0.74339843972857 * S_NumStorePurchases + 
-0.61598427613968 * S_NumWebPurchases + 0.88769400454452 * S_NumWebVisitsMonth + 
0.45864975080775 * S_RFMstat + -1.00498331113421 * S_Recency + -0.06157944188263 * S_Teenhome ;
668053    +   H17  =     0.63900672999082 * S_AcceptedCmpTotal  +    -0.30964832179168 *
668054    +        S_Kidhome  +    -0.32513653413684 * S_Mnt  +    -0.24581000667509 *
668055    +        S_MntFishProducts  +     0.02617694172605 * S_MntFruits
668056    +          +     0.00781760579393 * S_MntGoldProds  +     0.29104948109042 *
668057    +        S_MntMeatProducts  +    -0.02316001924491 * S_MntSweetProducts
668058    +          +    -0.36691071804931 * S_MntWines  +     0.32387184925622 *
668059    +        S_NumCatalogPurchases  +    -0.02259558698489 * S_NumDealsPurchases
668060    +          +    -0.05302323558282 * S_NumDistPurchases
668061    +          +    -0.61057201236183 * S_NumStorePurchases
668062    +          +    -0.43675839485699 * S_NumWebPurchases
668063    +          +      0.9068485509802 * S_NumWebVisitsMonth
668064    +          +    -0.10589439992168 * S_RFMstat  +    -1.04488846978483 *
668065    +        S_Recency  +    -0.22850227275517 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = 0.63900672999082 * S_AcceptedCmpTotal + -0.30964832179168 * 
S_Kidhome + -0.32513653413684 * S_Mnt + -0.24581000667509 * S_MntFishProducts + 
0.02617694172605 * S_MntFruits + 0.00781760579393 * S_MntGoldProds + 0.29104948109042 * 
S_MntMeatProducts + -0.02316001924491 * S_MntSweetProducts + -0.36691071804931 * S_MntWines + 
0.32387184925622 * S_NumCatalogPurchases + -0.02259558698489 * S_NumDealsPurchases + 
-0.05302323558282 * S_NumDistPurchases + -0.61057201236183 * S_NumStorePurchases + 
-0.43675839485699 * S_NumWebPurchases + 0.9068485509802 * S_NumWebVisitsMonth + 
-0.10589439992168 * S_RFMstat + -1.04488846978483 * S_Recency + -0.22850227275517 * S_Teenhome 
;
668066    +   H11  = H11  +     0.18111603256896 * AcceptedCmp10
668067    +          +     0.22509521803356 * AcceptedCmp20  +    -0.04654046313147 *
668068    +        AcceptedCmp30  +      0.3384111516657 * AcceptedCmp40
668069    +          +     0.32627827523963 * AcceptedCmp50  +    -0.01568279175973 *
668070    +        Complain0  +    -0.55252517176272 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.18111603256896 * AcceptedCmp10 + 0.22509521803356 * 
AcceptedCmp20 + -0.04654046313147 * AcceptedCmp30 + 0.3384111516657 * AcceptedCmp40 + 
0.32627827523963 * AcceptedCmp50 + -0.01568279175973 * Complain0 + -0.55252517176272 * 
HigherEducationBinary0 ;
668071    +   H12  = H12  +     0.11443639158645 * AcceptedCmp10
668072    +          +    -0.07848565251064 * AcceptedCmp20  +     0.12149050142183 *
668073    +        AcceptedCmp30  +     0.16124218246786 * AcceptedCmp40
668074    +          +     0.08002037216673 * AcceptedCmp50  +     0.19507760774174 *
668075    +        Complain0  +     0.11914737027935 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.11443639158645 * AcceptedCmp10 + -0.07848565251064 * 
AcceptedCmp20 + 0.12149050142183 * AcceptedCmp30 + 0.16124218246786 * AcceptedCmp40 + 
0.08002037216673 * AcceptedCmp50 + 0.19507760774174 * Complain0 + 0.11914737027935 * 
HigherEducationBinary0 ;
668076    +   H13  = H13  +    -0.10931311385786 * AcceptedCmp10
668077    +          +    -0.35789040073328 * AcceptedCmp20  +    -0.38944306116716 *
668078    +        AcceptedCmp30  +    -0.40889901167624 * AcceptedCmp40
668079    +          +    -0.24329354019242 * AcceptedCmp50  +    -0.35456353492115 *
668080    +        Complain0  +     0.13555715311919 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.10931311385786 * AcceptedCmp10 + -0.35789040073328 * 
AcceptedCmp20 + -0.38944306116716 * AcceptedCmp30 + -0.40889901167624 * AcceptedCmp40 + 
-0.24329354019242 * AcceptedCmp50 + -0.35456353492115 * Complain0 + 0.13555715311919 * 
HigherEducationBinary0 ;
668081    +   H14  = H14  +      0.2188684433023 * AcceptedCmp10
668082    +          +    -0.29615454952167 * AcceptedCmp20  +    -0.22271127437354 *
668083    +        AcceptedCmp30  +     0.20823945988265 * AcceptedCmp40
668084    +          +    -0.21625430481282 * AcceptedCmp50  +    -0.18295367581943 *
668085    +        Complain0  +     0.46325732026927 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.2188684433023 * AcceptedCmp10 + -0.29615454952167 * 
AcceptedCmp20 + -0.22271127437354 * AcceptedCmp30 + 0.20823945988265 * AcceptedCmp40 + 
-0.21625430481282 * AcceptedCmp50 + -0.18295367581943 * Complain0 + 0.46325732026927 * 
HigherEducationBinary0 ;
668086    +   H15  = H15  +     0.30998447993837 * AcceptedCmp10
668087    +          +     0.12767836835052 * AcceptedCmp20  +    -0.06080337916302 *
668088    +        AcceptedCmp30  +     0.01251586968598 * AcceptedCmp40
668089    +          +    -0.23770263910732 * AcceptedCmp50  +     0.25109546472381 *
668090    +        Complain0  +    -0.02175844243112 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.30998447993837 * AcceptedCmp10 + 0.12767836835052 * 
AcceptedCmp20 + -0.06080337916302 * AcceptedCmp30 + 0.01251586968598 * AcceptedCmp40 + 
-0.23770263910732 * AcceptedCmp50 + 0.25109546472381 * Complain0 + -0.02175844243112 * 
HigherEducationBinary0 ;
668091    +   H16  = H16  +    -0.62091932539163 * AcceptedCmp10
668092    +          +    -0.51271562673252 * AcceptedCmp20  +    -0.11342469632318 *
668093    +        AcceptedCmp30  +    -0.16507397007692 * AcceptedCmp40
668094    +          +    -0.30784693811801 * AcceptedCmp50  +    -0.25537137844726 *
668095    +        Complain0  +    -0.10971155214877 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.62091932539163 * AcceptedCmp10 + -0.51271562673252 * 
AcceptedCmp20 + -0.11342469632318 * AcceptedCmp30 + -0.16507397007692 * AcceptedCmp40 + 
-0.30784693811801 * AcceptedCmp50 + -0.25537137844726 * Complain0 + -0.10971155214877 * 
HigherEducationBinary0 ;
668096    +   H17  = H17  +    -0.05412380892781 * AcceptedCmp10
668097    +          +    -0.01109263229825 * AcceptedCmp20  +     -0.2110615452485 *
668098    +        AcceptedCmp30  +     0.00965424319008 * AcceptedCmp40
668099    +          +     -0.4258810591025 * AcceptedCmp50  +     0.27308424287361 *
668100    +        Complain0  +      0.0268240614027 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.05412380892781 * AcceptedCmp10 + -0.01109263229825 * 
AcceptedCmp20 + -0.2110615452485 * AcceptedCmp30 + 0.00965424319008 * AcceptedCmp40 + 
-0.4258810591025 * AcceptedCmp50 + 0.27308424287361 * Complain0 + 0.0268240614027 * 
HigherEducationBinary0 ;
668101    +   H11  = H11  +    -0.33757847459033 * Marital_StatusDivorced
668102    +          +     0.00302217414126 * Marital_StatusMarried
668103    +          +      0.2152123397616 * Marital_StatusSingle
668104    +          +    -0.13520964902373 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.33757847459033 * Marital_StatusDivorced + 
0.00302217414126 * Marital_StatusMarried + 0.2152123397616 * Marital_StatusSingle + 
-0.13520964902373 * Marital_StatusTogether ;
668105    +   H12  = H12  +     0.00194872690496 * Marital_StatusDivorced
668106    +          +     0.03439335682344 * Marital_StatusMarried
668107    +          +     0.05021548127829 * Marital_StatusSingle
668108    +          +    -0.21404927960644 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.00194872690496 * Marital_StatusDivorced + 0.03439335682344 
* Marital_StatusMarried + 0.05021548127829 * Marital_StatusSingle + -0.21404927960644 * 
Marital_StatusTogether ;
668109    +   H13  = H13  +     0.48013325378484 * Marital_StatusDivorced
668110    +          +    -0.98905242808423 * Marital_StatusMarried
668111    +          +     0.71786420090726 * Marital_StatusSingle
668112    +          +    -0.99548524974998 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.48013325378484 * Marital_StatusDivorced + 
-0.98905242808423 * Marital_StatusMarried + 0.71786420090726 * Marital_StatusSingle + 
-0.99548524974998 * Marital_StatusTogether ;
668113    +   H14  = H14  +    -0.10242951736314 * Marital_StatusDivorced
668114    +          +       0.050581701391 * Marital_StatusMarried
668115    +          +     0.02970444912382 * Marital_StatusSingle
668116    +          +    -0.31932441367684 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.10242951736314 * Marital_StatusDivorced + 0.050581701391 
* Marital_StatusMarried + 0.02970444912382 * Marital_StatusSingle + -0.31932441367684 * 
Marital_StatusTogether ;
668117    +   H15  = H15  +    -0.15638584915255 * Marital_StatusDivorced
668118    +          +     0.24057441973108 * Marital_StatusMarried
668119    +          +    -0.25555699216503 * Marital_StatusSingle
668120    +          +     0.42413452422729 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.15638584915255 * Marital_StatusDivorced + 
0.24057441973108 * Marital_StatusMarried + -0.25555699216503 * Marital_StatusSingle + 
0.42413452422729 * Marital_StatusTogether ;
668121    +   H16  = H16  +     0.21905536295614 * Marital_StatusDivorced
668122    +          +     0.05764012832482 * Marital_StatusMarried
668123    +          +     0.09900502198755 * Marital_StatusSingle
668124    +          +    -0.29296987558734 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.21905536295614 * Marital_StatusDivorced + 0.05764012832482 
* Marital_StatusMarried + 0.09900502198755 * Marital_StatusSingle + -0.29296987558734 * 
Marital_StatusTogether ;
668125    +   H17  = H17  +    -0.10338488336034 * Marital_StatusDivorced
668126    +          +    -0.91005475926987 * Marital_StatusMarried
668127    +          +     0.69014529167411 * Marital_StatusSingle
668128    +          +    -0.54713111008177 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.10338488336034 * Marital_StatusDivorced + 
-0.91005475926987 * Marital_StatusMarried + 0.69014529167411 * Marital_StatusSingle + 
-0.54713111008177 * Marital_StatusTogether ;
668129    +   H11  =     0.41764308857177 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.41764308857177 + H11 ;
668130    +   H12  =     0.52419261709948 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.52419261709948 + H12 ;
668131    +   H13  =    -0.81831247743605 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.81831247743605 + H13 ;
668132    +   H14  =    -0.81516752423378 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.81516752423378 + H14 ;
668133    +   H15  =     0.07454870495209 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.07454870495209 + H15 ;
668134    +   H16  =    -0.59819903707625 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.59819903707625 + H16 ;
668135    +   H17  =     0.67503972430369 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = 0.67503972430369 + H17 ;
668136    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
668137    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
668138    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
668139    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
668140    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
668141    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
668142    +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
668143    +END;
MPRINT(EM_DIAGRAM):   END;
668144    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
668145    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
668146    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
668147    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
668148    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
668149    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
668150    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
668151    +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
668152    +END;
MPRINT(EM_DIAGRAM):   END;
668153    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
668154    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
668155    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
668156    +
668157    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
668158    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
668159    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
668160    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
668161    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
668162    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
668163    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
668164    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
668165    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
668166    +end;
MPRINT(EM_DIAGRAM):   end;
668167    +else do;
MPRINT(EM_DIAGRAM):   else do;
668168    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
668169    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
668170    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
668171    +   end;
MPRINT(EM_DIAGRAM):   end;
668172    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
668173    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
668174    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
668175    +   end;
MPRINT(EM_DIAGRAM):   end;
668176    +   else do;
MPRINT(EM_DIAGRAM):   else do;
668177    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
668178    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
668179    +   end;
MPRINT(EM_DIAGRAM):   end;
668180    +end;
MPRINT(EM_DIAGRAM):   end;
668181    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
668182    +   P_DepVar1  =    -0.00227674838385 * H11  +     0.58155599175904 * H12
668183    +          +     2.88143779402566 * H13  +    -1.63691423838644 * H14
668184    +          +     2.39141643331858 * H15  +     3.17879887277365 * H16
668185    +          +     2.23901808700024 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.00227674838385 * H11 + 0.58155599175904 * H12 + 
2.88143779402566 * H13 + -1.63691423838644 * H14 + 2.39141643331858 * H15 + 3.17879887277365 * 
H16 + 2.23901808700024 * H17 ;
668186    +   P_DepVar1  =     -1.5295367762329 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.5295367762329 + P_DepVar1 ;
668187    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
668188    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
668189    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
668190    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
668191    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
668192    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
668193    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
668194    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
668195    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
668196    +END;
MPRINT(EM_DIAGRAM):   END;
668197    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
668198    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
668199    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
668200    +END;
MPRINT(EM_DIAGRAM):   END;
668201    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
668202    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
668203    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
668204    +END;
MPRINT(EM_DIAGRAM):   END;
668205    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
668206    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
668207    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
668208    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
668209    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
668210    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
668211    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
668212    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
668213    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
668214    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
668215    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
668216    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
668217    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
668218    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
668219    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
668220    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
668221    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
668222    +END;
MPRINT(EM_DIAGRAM):   END;
668223    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
668224    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
668225    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
668226    +drop
668227    +H11
668228    +H12
668229    +H13
668230    +H14
668231    +H15
668232    +H16
668233    +H17
668234    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
668235    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
668236    +* Renaming variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural10;
668237    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
668238    +* Renaming Posterior variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural10;
668239    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
668240    +drop Neural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural10_P_DepVar1;
668241    +Neural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural10_P_DepVar1 = P_DepVar1;
668242    +drop Neural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural10_P_DepVar0;
668243    +Neural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural10_P_DepVar0 = P_DepVar0;
668244    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
668245    +* Renaming _WARN_ variable for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural10;
668246    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
668247    +length Neural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural10_WARN_ $4;
668248    +drop Neural10_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural10_WARN_;
668249    +Neural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural10_WARN_ = _WARN_;
668250    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
668251    +* Ensmbl: Average Posteriors of 9 models;
MPRINT(EM_DIAGRAM):   * Ensmbl: Average Posteriors of 9 models;
668252    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
668253    +P_DepVar1 = (
668254    +Reg_P_DepVar1 +
668255    +Tree_P_DepVar1 +
668256    +Neural4_P_DepVar1 +
668257    +Neural_P_DepVar1 +
668258    +Neural2_P_DepVar1 +
668259    +Neural3_P_DepVar1 +
668260    +Neural7_P_DepVar1 +
668261    +Neural9_P_DepVar1 +
668262    +Neural10_P_DepVar1
668263    +)/9;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( Reg_P_DepVar1 + Tree_P_DepVar1 + Neural4_P_DepVar1 + 
Neural_P_DepVar1 + Neural2_P_DepVar1 + Neural3_P_DepVar1 + Neural7_P_DepVar1 + 
Neural9_P_DepVar1 + Neural10_P_DepVar1 )/9;
668264    +P_DepVar0 = (
668265    +Reg_P_DepVar0 +
668266    +Tree_P_DepVar0 +
668267    +Neural4_P_DepVar0 +
668268    +Neural_P_DepVar0 +
668269    +Neural2_P_DepVar0 +
668270    +Neural3_P_DepVar0 +
668271    +Neural7_P_DepVar0 +
668272    +Neural9_P_DepVar0 +
668273    +Neural10_P_DepVar0
668274    +)/9;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( Reg_P_DepVar0 + Tree_P_DepVar0 + Neural4_P_DepVar0 + 
Neural_P_DepVar0 + Neural2_P_DepVar0 + Neural3_P_DepVar0 + Neural7_P_DepVar0 + 
Neural9_P_DepVar0 + Neural10_P_DepVar0 )/9;
668275    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
668276    +* Ensmbl: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl: Computing Classification Vars;
668277    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
668278    +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
668279    +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
668280    +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
668281    +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
668282    +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
668283    +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
668284    +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
668285    +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
668286    +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
668287    +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
668288    +end;
MPRINT(EM_DIAGRAM):   end;
668289    +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
668290    +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
668291    +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
668292    +end;
MPRINT(EM_DIAGRAM):   end;
668293    +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
668294    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
668295    +* Ensmbl: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl: Producing Unformatted variable;
668296    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
668297    +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
668298    +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
668299    +else
668300    +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
668301    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
668302    +* Ensmbl: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl: Computing _WARN_ Variable;
668303    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
668304    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
668305    +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
668306    +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
668307    +if index(REG_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 
1) ='M';
668308    +if index(REG_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 
1) ='U';
668309    +if index(REG_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 
1) ='P';
668310    +if index(REG_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 
1) ='C';
668311    +if index(TREE_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(TREE_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 
1) ='M';
668312    +if index(TREE_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(TREE_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 
1) ='U';
668313    +if index(TREE_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(TREE_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 
1) ='P';
668314    +if index(TREE_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(TREE_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 
1) ='C';
668315    +if index(NEURAL4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
668316    +if index(NEURAL4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
668317    +if index(NEURAL4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
668318    +if index(NEURAL4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
668319    +if index(NEURAL_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
668320    +if index(NEURAL_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
The SAS System

2, 1) ='U';
668321    +if index(NEURAL_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
668322    +if index(NEURAL_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
668323    +if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
668324    +if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
668325    +if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
668326    +if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
668327    +if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
668328    +if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
668329    +if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
668330    +if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
668331    +if index(NEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
668332    +if index(NEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
668333    +if index(NEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
668334    +if index(NEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
668335    +if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
668336    +if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
668337    +if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
668338    +if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
668339    +if index(NEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
668339   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
668340    +if index(NEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
668340   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
668341    +if index(NEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
668341   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
668342    +if index(NEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
668342   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
668343    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
668344    +* Ensmbl: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl: Computing Residual Vars;
668345    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
668346    +if
668347    +F_DepVar NE '1'
668348    +AND F_DepVar NE '0'
668349    +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
668350    +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
668351    +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
668352    +end;
MPRINT(EM_DIAGRAM):   end;
668353    +else do;
MPRINT(EM_DIAGRAM):   else do;
668354    +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
668355    +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
668356    +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
668357    +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
668358    +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
668359    +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
668360    +END;
MPRINT(EM_DIAGRAM):   END;
668361    +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
668362     run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.REG_VALIDATE.VIEW used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.19 seconds
      cpu time            0.18 seconds
      

MPRINT(EM_DIAGRAM):   quit;
668363     quit;
668364     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of 
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error" 
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_= 
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train: 
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of 
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error" 
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_= 
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid: 
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
668424     filename _pref
668424   ! "C:\\predictive-models-project\Workspaces\EMWS8\Reg\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Reg\EMPUBLISHSCORE.sas";
668425     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
668426     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Reg\EMPUBLISHSCORE.sas.
668427    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
668428    +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
668429    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
668430    +
668431    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
668432    +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
668433    +
668434    +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
668435    +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
668436    +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
668437    +array REGDRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REGDRF [2] $12 _temporary_ ('1' '0' );
668438    +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
668439    +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
668440    +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
668441    +ARRAY REGDRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REGDRU[2] _TEMPORARY_ (1 0);
668442    +
668443    +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
668444    +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
668445    +
668446    +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
668447    +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
668448    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
668449    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
668450    +end;
MPRINT(EM_DIAGRAM):   end;
668451    +
668452    +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
668453    +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
668454    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
668455    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
668456    +end;
MPRINT(EM_DIAGRAM):   end;
668457    +
668458    +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
668459    +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
668460    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
668461    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
668462    +end;
MPRINT(EM_DIAGRAM):   end;
668463    +
668464    +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
668465    +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
668466    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
668467    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
668468    +end;
MPRINT(EM_DIAGRAM):   end;
668469    +
668470    +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
668471    +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
668472    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
668473    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
668474    +end;
MPRINT(EM_DIAGRAM):   end;
668475    +
668476    +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
668477    +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
668478    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
668479    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
668480    +end;
MPRINT(EM_DIAGRAM):   end;
668481    +
668482    +*** Check NumDistPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDistPurchases for missing values ;
668483    +if missing( NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDistPurchases ) then do;
668484    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
668485    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
668486    +end;
MPRINT(EM_DIAGRAM):   end;
668487    +
668488    +*** Check NumStorePurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumStorePurchases for missing values ;
668489    +if missing( NumStorePurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumStorePurchases ) then do;
668490    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
668491    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
668492    +end;
MPRINT(EM_DIAGRAM):   end;
668493    +
668494    +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
668495    +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
668496    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
668497    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
668498    +end;
MPRINT(EM_DIAGRAM):   end;
668499    +
668500    +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
668501    +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
668502    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
668503    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
668504    +end;
MPRINT(EM_DIAGRAM):   end;
668505    +
668506    +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
668507    +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
668508    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
668509    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
668510    +end;
MPRINT(EM_DIAGRAM):   end;
668511    +
668512    +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
668513    +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
668514    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
668515    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
668516    +end;
MPRINT(EM_DIAGRAM):   end;
668517    +
668518    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
668519    +drop _5_0 ;
MPRINT(EM_DIAGRAM):   drop _5_0 ;
668520    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
668521    +   _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
668522    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
668523    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
668524    +end;
MPRINT(EM_DIAGRAM):   end;
668525    +else do;
MPRINT(EM_DIAGRAM):   else do;
668526    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
668527    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
668528    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
668529    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
668530    +      _5_0 = 1;
MPRINT(EM_DIAGRAM):   _5_0 = 1;
668531    +   end;
MPRINT(EM_DIAGRAM):   end;
668532    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
668533    +      _5_0 = -1;
MPRINT(EM_DIAGRAM):   _5_0 = -1;
668534    +   end;
MPRINT(EM_DIAGRAM):   end;
668535    +   else do;
MPRINT(EM_DIAGRAM):   else do;
668536    +      _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
668537    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
668538    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
668539    +   end;
MPRINT(EM_DIAGRAM):   end;
668540    +end;
MPRINT(EM_DIAGRAM):   end;
668541    +
668542    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
668543    +drop _8_0 _8_1 _8_2 _8_3 ;
MPRINT(EM_DIAGRAM):   drop _8_0 _8_1 _8_2 _8_3 ;
668544    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
668545    +_8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
668546    +_8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
668547    +_8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
668548    +_8_3 = 0;
MPRINT(EM_DIAGRAM):   _8_3 = 0;
668549    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
668550    +   _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
668551    +   _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
668552    +   _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
668553    +   _8_3 = .;
MPRINT(EM_DIAGRAM):   _8_3 = .;
668554    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
668555    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
668556    +end;
MPRINT(EM_DIAGRAM):   end;
668557    +else do;
MPRINT(EM_DIAGRAM):   else do;
668558    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
668559    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
668560    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
668561    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
668562    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
668563    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
668564    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
668565    +            _8_0 = 1;
MPRINT(EM_DIAGRAM):   _8_0 = 1;
668566    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
668567    +         end;
MPRINT(EM_DIAGRAM):   end;
668568    +         else do;
MPRINT(EM_DIAGRAM):   else do;
668569    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
668570    +               _8_1 = 1;
MPRINT(EM_DIAGRAM):   _8_1 = 1;
668571    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
668572    +            end;
MPRINT(EM_DIAGRAM):   end;
668573    +         end;
MPRINT(EM_DIAGRAM):   end;
668574    +      end;
MPRINT(EM_DIAGRAM):   end;
668575    +      else do;
MPRINT(EM_DIAGRAM):   else do;
668576    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
668577    +            _8_2 = 1;
MPRINT(EM_DIAGRAM):   _8_2 = 1;
668578    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
668579    +         end;
MPRINT(EM_DIAGRAM):   end;
668580    +      end;
MPRINT(EM_DIAGRAM):   end;
668581    +   end;
MPRINT(EM_DIAGRAM):   end;
668582    +   else do;
MPRINT(EM_DIAGRAM):   else do;
668583    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
668584    +         _8_3 = 1;
MPRINT(EM_DIAGRAM):   _8_3 = 1;
668585    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
668586    +      end;
MPRINT(EM_DIAGRAM):   end;
668587    +      else do;
MPRINT(EM_DIAGRAM):   else do;
668588    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
668589    +            _8_0 = -1;
MPRINT(EM_DIAGRAM):   _8_0 = -1;
668590    +            _8_1 = -1;
MPRINT(EM_DIAGRAM):   _8_1 = -1;
668591    +            _8_2 = -1;
MPRINT(EM_DIAGRAM):   _8_2 = -1;
668592    +            _8_3 = -1;
MPRINT(EM_DIAGRAM):   _8_3 = -1;
668593    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
668594    +         end;
MPRINT(EM_DIAGRAM):   end;
668595    +      end;
MPRINT(EM_DIAGRAM):   end;
668596    +   end;
MPRINT(EM_DIAGRAM):   end;
668597    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
668598    +      _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
668599    +      _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
668600    +      _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
668601    +      _8_3 = .;
MPRINT(EM_DIAGRAM):   _8_3 = .;
668602    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
668603    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
668604    +   end;
MPRINT(EM_DIAGRAM):   end;
668605    +end;
MPRINT(EM_DIAGRAM):   end;
668606    +
668607    +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
668608    +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
668609    +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
668610    +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
668611    +   goto REGDR1;
MPRINT(EM_DIAGRAM):   goto REGDR1;
668612    +end;
MPRINT(EM_DIAGRAM):   end;
668613    +
668614    +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
668615    +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
668616    +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
668617    +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
668618    +
668619    +***  Effect: AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp5 ;
668620    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
668621    +_LP0 = _LP0 + (   -0.56028520837373) * _TEMP * _5_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.56028520837373) * _TEMP * _5_0;
668622    +
668623    +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
668624    +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
668625    +_LP0 = _LP0 + (    2.79239159186379 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.79239159186379 * _TEMP);
668626    +
668627    +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
668628    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
668629    +_LP0 = _LP0 + (     0.2275252741727) * _TEMP * _8_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.2275252741727) * _TEMP * _8_0;
668630    +_LP0 = _LP0 + (   -0.91116218011236) * _TEMP * _8_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.91116218011236) * _TEMP * _8_1;
668631    +_LP0 = _LP0 + (    0.79946068413138) * _TEMP * _8_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.79946068413138) * _TEMP * _8_2;
668632    +_LP0 = _LP0 + (   -0.98989949139857) * _TEMP * _8_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.98989949139857) * _TEMP * _8_3;
668633    +
668634    +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
668635    +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
668636    +_LP0 = _LP0 + (   -0.00335712586387 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00335712586387 * _TEMP);
668637    +
668638    +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
668639    +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
668640    +_LP0 = _LP0 + (    0.00629742829089 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00629742829089 * _TEMP);
668641    +
668642    +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
668643    +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
668644    +_LP0 = _LP0 + (    0.01279646348912 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.01279646348912 * _TEMP);
668645    +
668646    +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
668647    +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
668648    +_LP0 = _LP0 + (    1.04928237490658 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.04928237490658 * _TEMP);
668649    +
668650    +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
668651    +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
668652    +_LP0 = _LP0 + (    0.63552663903891 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.63552663903891 * _TEMP);
668653    +
668654    +***  Effect: NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDistPurchases ;
668655    +_TEMP = NumDistPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDistPurchases ;
668656    +_LP0 = _LP0 + (   -0.30009214663172 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.30009214663172 * _TEMP);
668657    +
668658    +***  Effect: NumStorePurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumStorePurchases ;
668659    +_TEMP = NumStorePurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumStorePurchases ;
668660    +_LP0 = _LP0 + (   -0.35266748733964 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.35266748733964 * _TEMP);
668661    +
668662    +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
668663    +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
668664    +_LP0 = _LP0 + (    0.81352797289677 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.81352797289677 * _TEMP);
668665    +
668666    +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
668667    +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
668668    +_LP0 = _LP0 + (    0.00030864821595 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00030864821595 * _TEMP);
668669    +
668670    +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
668671    +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
668672    +_LP0 = _LP0 + (    -0.0914537880502 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.0914537880502 * _TEMP);
668673    +
668674    +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
668675    +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
668676    +_LP0 = _LP0 + (   -0.66398866776766 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.66398866776766 * _TEMP);
668677    +
668678    +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
668679    +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
668680    +_TEMP =    -5.00123691079588 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -5.00123691079588 + _LP0;
668681    +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
668682    +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
668683    +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
668684    +end;
MPRINT(EM_DIAGRAM):   end;
668685    +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
668686    +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
668687    +
668688    +REGDR1:
668689    +
668690    +
668691    +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   REGDR1: *** Posterior Probabilities and Predicted Level;
668692    +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
668693    +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
668694    +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
668695    +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
668696    +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
668697    +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
668698    +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
668699    +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
668700    +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
668701    +end;
MPRINT(EM_DIAGRAM):   end;
668702    +I_DepVar = REGDRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REGDRF[_IY];
668703    +U_DepVar = REGDRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REGDRU[_IY];
668704    +
668705    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
668706    +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
668707    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
668708     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
668709     quit;
668710     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
668711     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
668712     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
668713     retain ID 2 Node "Reg";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Reg";
668714     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
668715     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 391 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 391 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

668716     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
668717     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
668718     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 391 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 391 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

668719     proc sort data=EMWS8.Reg_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Reg_variableset out=_temp2(keep=NAME CREATOR);
668720     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
668721     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.REG_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

668722     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
668723     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
668724     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
668725     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

668726     proc contents data=EMWS8.Reg_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Reg_train out=_meta(keep=NAME) noprint;
668727     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

668728     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
668729     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
668730     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

668731     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
668732     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
668733     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
668734     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

668735     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
668736     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
668736   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 204 rows and 5 columns.

668737     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

668738     proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
668739     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 204 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL_FCMP has 204 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

668740     filename _pref
668740   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
668741     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
668742     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
668743    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
668744    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
668745    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
668746    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
668747    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
668748    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
668749     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
668750     quit;
668751     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
668752     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
668753     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
668754     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
668755     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
668756     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

668757     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
668758     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
668759     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

668760     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
668761     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
668762     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

668763     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
668764     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
668765     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
668766     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

668767     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
668768     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

668769     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
668770     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
668771     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

668772     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
668773     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
668774     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
668775     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

668776     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
668777     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
668777   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

668778     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

668779     proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
668780     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL_FCMP has 208 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

668781     filename _pref
668781   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
668782     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
668783     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
668784    +
668785    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
668786    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
668786   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
668787    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
668788    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
668789    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
668790    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
668791    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
668792     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
668793     quit;
668794     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
668795     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
668796     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
668797     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
668798     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
668799     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

668800     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
668801     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
668802     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

668803     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
668804     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
668805     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

668806     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
668807     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
668808     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
668809     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

668810     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
668811     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

668812     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
668813     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
668814     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

668815     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
668816     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
668817     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
668818     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

668819     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
668820     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
668820   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

668821     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

668822     proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
668823     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL_FCMP has 247 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

668824     filename _pref
668824   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
668825     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
668826     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
668827    +
668828    +
668829    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
668830    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
668831    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
668832    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
668833    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
668834    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
668835    +
668836    +
668837    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
668838    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
668839    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
668840    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
668841    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
668842    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
668843    +
668844    +
668845    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
668846    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
668847    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
668848    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
668849    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
668850    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
668851    +
668852    +
668853    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
668854    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
668855    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
668856    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
668857    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
668858    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
668859    +
668860    +
668861    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
668862    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
668863    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
668864    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
668865    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
668866    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
668867    +
668868    +
668869    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
668870    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
668871    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
668872    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
668873    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
668874    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
668875    +
668876    +
668877    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
668878    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
668879    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
668880    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
668881    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
668882    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
668883    +
668884    +
668885    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
668886    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
668887    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
668888    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
668889    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
668890    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
668891    +if
668892    +_FILTERNORM1 not in ( '.')
668893    + and
668894    +_FILTERNORM2 not in ( '.')
668895    + and
668896    +_FILTERNORM3 not in ( '.')
668897    + and
668898    +_FILTERNORM4 not in ( '.')
668899    + and
668900    +_FILTERNORM5 not in ( '.')
668901    + and
668902    +_FILTERNORM6 not in ( '.')
668903    + and
668904    +_FILTERNORM7 not in ( ' ')
668905    + and
668906    +_FILTERNORM8 not in ( ' ')
668907    +and
668908    +( Dt_Customer ne .)
668909    +and ( Income ne . and (Income<=107000))
668910    +and ( Kidhome ne .)
668911    +and ( MntFishProducts ne .)
668912    +and ( MntFruits ne .)
668913    +and ( MntGoldProds ne .)
668914    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
668915    +and ( MntSweetProducts ne .)
668916    +and ( MntWines ne .)
668917    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
668918    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
668919    +and ( NumStorePurchases ne .)
668920    +and ( NumWebPurchases ne .)
668921    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
668922    +and ( Recency ne .)
668923    +and ( Teenhome ne .)
668924    +and ( Year_Birth ne .)
668925    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
668926    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
668927    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
668928    +end;
MPRINT(EM_DIAGRAM):   end;
668929    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
668930    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
668931     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
668932     quit;
668933     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
668934     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
668935     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
668936     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
668937     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
668938     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

668939     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
668940     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
668941     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

668942     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
668943     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
668944     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

668945     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
668946     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
668947     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
668948     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

668949     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
668950     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.28 seconds
      cpu time            0.01 seconds
      

668951     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
668952     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
668953     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

668954     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
668955     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
668956     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
668957     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

668958     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
668959     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
668959   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

668960     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

668961     proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
668962     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL_FCMP has 313 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

668963     %macro varDept(fcmpdata=,id=);
668964     %global nobs&id scoreFlag&id;
668965     %let scoreFlag&id = 0;
668966     %if &id=1 or ^&fcmpStart %then %do;
668967     proc sort data=&fcmpdata out=_temp&id nodupkey;
668968     by NAME;
668969     where id=&id and LHS in( %let j=1;
668970     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
668971     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
668972     "&var" %let j = %eval(&j+1);
668973     %end;
668974     );
668975     run;
668976     %let dsid = %sysfunc(open(_temp&id));
668977     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
668978     %let dsid = %sysfunc(close(&dsid));
668979     %if &&nobs&id %then %do;
668980     %let scoreFlag&id = 1;
668981     %let fcmpStart = 1;
668982     %end;
668983     %else %let fcmpStart = 0;
668984     %end;
668985     %else %do;
668986     proc sort data=&fcmpdata out=_tempid;
668987     where id=&id;
668988     by LHS;
668989     run;
668990     %let dsid = %sysfunc(open(_tempid));
668991     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
668992     %let dsid = %sysfunc(close(&dsid));
668993     %if ^&&nobs&id %then %do;
668994     proc datasets lib=work nolist;
668995     delete _tempid;
668996     run;
668997     quit;
668998     %end;
668999     %else %do;
669000     data _tempAll;
669001     set %let j=%eval(&id-1);
669002     %do x=1 %to &j;
669003     %if &&nobs&x %then %do;
669004     _temp&x %end;
669005     %end;
669006     ;
669007     run;
669008     proc sql;
669009     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
669009   ! work._tempid p2 where p.name=p2.lhs;
669010     quit;
669011     data _temp&id;
669012     set _temp&id;
669013     where LHS ne '' and NAME ne '' and Node ne '';
669014     run;
669015     proc datasets lib=work nolist;
669016     delete _tempAll;
669017     run;
669018     %let dsid = %sysfunc(open(_temp&id));
669019     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
669020     %let dsid = %sysfunc(close(&dsid));
669021     %if ^&&nobs&id %then %do;
669022     proc datasets lib=work nolist;
669023     delete _temp&id;
669024     run;
669025     quit;
669026     %end;
669027     %else %do;
669028     %let scoreFlag&id = 1;
669029     data _temp&id;
669030     set _temp&id;
669031     where LHS ne NAME and node ne '';
669032     run;
669033     %let dsid = %sysfunc(open(_temp&id));
669034     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
669035     %let dsid = %sysfunc(close(&dsid));
669036     %if ^&&nobs&id %then %do;
669037     proc datasets lib=work nolist;
669038     delete _temp&id;
669039     run;
669040     quit;
669041     %end;
669042     %else %do;
669043     proc sort data=_temp&id nodupkey;
669044     by LHS NAME;
669045     run;
669046     %end;
669047     %end;
669048     %end;
669049     %end;
669050     %mend varDept;
669051     %macro optCode(outdata=fcmpdata);
669052     %global fcmpStart;
669053     %let fcmpStart = 0;
669054     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
669055     %let NumNodes=9;
669056     %do k=1 %to &NumNodes;
669057     %vardept(fcmpdata=&outdata, id=&k);
669058     %end;
669059     %mend optCode;
669060     %optcode(outData=EMWS8.Ensmbl_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 56 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 42 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 14 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 14 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 16 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 23 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 23 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 23 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 23 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 23 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 23 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 23 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 23 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 39 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

669061     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
669062     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
669063     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
669064     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

669065     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
669066     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
669067     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
669068     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

669069     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
669070     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
669070   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

669071     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

669072     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
669073     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
669074     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

669075     filename _pref
669075   ! "C:\\predictive-models-project\Workspaces\EMWS8\Tree\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Tree\EMPUBLISHSCORE.sas";
669076     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
669077     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Tree\EMPUBLISHSCORE.sas.
669078    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
669079    +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
669080    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
669081    +
669082    +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
669083    +LENGTH I_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH I_DepVar $ 12;
669084    +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
669085    +
669086    +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
669087    +LABEL _NODE_  = 'Node' ;
MPRINT(EM_DIAGRAM):   LABEL _NODE_ = 'Node' ;
669088    +LABEL _LEAF_  = 'Leaf' ;
MPRINT(EM_DIAGRAM):   LABEL _LEAF_ = 'Leaf' ;
669089    +LABEL P_DepVar0  = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar0 = 'Predicted: DepVar=0' ;
669090    +LABEL P_DepVar1  = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar1 = 'Predicted: DepVar=1' ;
669091    +LABEL Q_DepVar0  = 'Unadjusted P: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
669092    +LABEL Q_DepVar1  = 'Unadjusted P: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
669093    +LABEL V_DepVar0  = 'Validated: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar0 = 'Validated: DepVar=0' ;
669094    +LABEL V_DepVar1  = 'Validated: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar1 = 'Validated: DepVar=1' ;
669095    +LABEL I_DepVar  = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL I_DepVar = 'Into: DepVar' ;
669096    +LABEL U_DepVar  = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL U_DepVar = 'Unnormalized Into: DepVar' ;
669097    +LABEL _WARN_  = 'Warnings' ;
MPRINT(EM_DIAGRAM):   LABEL _WARN_ = 'Warnings' ;
669098    +
669099    +
669100    +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
669101    +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
669102    +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
669103    +LENGTH _ARBFMT_8 $      8; DROP _ARBFMT_8;
MPRINT(EM_DIAGRAM):   /* Initialize to avoid warning. */ LENGTH _ARBFMT_8 $ 8;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_8;
669104    +_ARBFMT_8 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_8 = ' ';
669105    +
669106    +
669107    +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(EM_DIAGRAM):   /* Initialize to avoid warning. */ ****** ASSIGN OBSERVATION TO NODE 
******;
669108    +IF  NOT MISSING(AcceptedCmpTotal ) AND
669109    +                   0.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 0.5 <= AcceptedCmpTotal THEN DO;
669110    +  IF  NOT MISSING(Recency ) AND
669111    +    Recency  <                 38.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Recency ) AND Recency < 38.5 THEN DO;
669112    +    IF  NOT MISSING(AcceptedCmpTotal ) AND
669113    +                       1.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 1.5 <= AcceptedCmpTotal THEN DO;
669114    +      _NODE_  =                   13;
MPRINT(EM_DIAGRAM):   _NODE_ = 13;
669115    +      _LEAF_  =                   16;
MPRINT(EM_DIAGRAM):   _LEAF_ = 16;
669116    +      P_DepVar0  =     0.05263157894736;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.05263157894736;
669117    +      P_DepVar1  =     0.94736842105263;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.94736842105263;
669118    +      Q_DepVar0  =     0.05263157894736;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.05263157894736;
669119    +      Q_DepVar1  =     0.94736842105263;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.94736842105263;
669120    +      V_DepVar0  =                    0;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0;
669121    +      V_DepVar1  =                    1;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 1;
669122    +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
669123    +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
669124    +      END;
MPRINT(EM_DIAGRAM):   END;
669125    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
669126    +      _ARBFMT_8 = PUT( Marital_Status , $8.);
MPRINT(EM_DIAGRAM):   _ARBFMT_8 = PUT( Marital_Status , $8.);
669127    +       %DMNORMIP( _ARBFMT_8);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
669128    +      IF _ARBFMT_8 IN ('WIDOW' ,'DIVORCED' ,'SINGLE' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_8 IN ('WIDOW' ,'DIVORCED' ,'SINGLE' ) THEN DO;
669129    +        _NODE_  =                   23;
MPRINT(EM_DIAGRAM):   _NODE_ = 23;
669130    +        _LEAF_  =                   15;
MPRINT(EM_DIAGRAM):   _LEAF_ = 15;
669131    +        P_DepVar0  =      0.2258064516129;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.2258064516129;
669132    +        P_DepVar1  =     0.77419354838709;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.77419354838709;
669133    +        Q_DepVar0  =      0.2258064516129;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.2258064516129;
669134    +        Q_DepVar1  =     0.77419354838709;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.77419354838709;
669135    +        V_DepVar0  =     0.41935483870967;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.41935483870967;
669136    +        V_DepVar1  =     0.58064516129032;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.58064516129032;
669137    +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
669138    +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
669139    +        END;
MPRINT(EM_DIAGRAM):   END;
669140    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
669141    +        IF  NOT MISSING(NumStorePurchases ) AND
669142    +          NumStorePurchases  <                  6.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumStorePurchases ) AND NumStorePurchases < 6.5 THEN DO;
669143    +          IF  NOT MISSING(NumWebVisitsMonth ) AND
669144    +            NumWebVisitsMonth  <                  5.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumWebVisitsMonth ) AND NumWebVisitsMonth < 5.5 THEN DO;
669145    +            _NODE_  =                   56;
MPRINT(EM_DIAGRAM):   _NODE_ = 56;
669146    +            _LEAF_  =                   12;
MPRINT(EM_DIAGRAM):   _LEAF_ = 12;
669147    +            P_DepVar0  =     0.61111111111111;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.61111111111111;
669148    +            P_DepVar1  =     0.38888888888888;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.38888888888888;
669149    +            Q_DepVar0  =     0.61111111111111;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.61111111111111;
669150    +            Q_DepVar1  =     0.38888888888888;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.38888888888888;
669151    +            V_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.66666666666666;
669152    +            V_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.33333333333333;
669153    +            I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
669154    +            U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
669155    +            END;
MPRINT(EM_DIAGRAM):   END;
669156    +          ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
669157    +            _NODE_  =                   57;
MPRINT(EM_DIAGRAM):   _NODE_ = 57;
669158    +            _LEAF_  =                   13;
MPRINT(EM_DIAGRAM):   _LEAF_ = 13;
669159    +            P_DepVar0  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.14285714285714;
669160    +            P_DepVar1  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.85714285714285;
669161    +            Q_DepVar0  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.14285714285714;
669162    +            Q_DepVar1  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.85714285714285;
669163    +            V_DepVar0  =      0.3076923076923;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.3076923076923;
669164    +            V_DepVar1  =     0.69230769230769;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.69230769230769;
669165    +            I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
669166    +            U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
669167    +            END;
MPRINT(EM_DIAGRAM):   END;
669168    +          END;
MPRINT(EM_DIAGRAM):   END;
669169    +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
669170    +          _NODE_  =                   41;
MPRINT(EM_DIAGRAM):   _NODE_ = 41;
669171    +          _LEAF_  =                   14;
MPRINT(EM_DIAGRAM):   _LEAF_ = 14;
669172    +          P_DepVar0  =     0.74545454545454;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.74545454545454;
669173    +          P_DepVar1  =     0.25454545454545;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.25454545454545;
669174    +          Q_DepVar0  =     0.74545454545454;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.74545454545454;
669175    +          Q_DepVar1  =     0.25454545454545;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.25454545454545;
669176    +          V_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.66666666666666;
669177    +          V_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.33333333333333;
669178    +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
669179    +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
669180    +          END;
MPRINT(EM_DIAGRAM):   END;
669181    +        END;
MPRINT(EM_DIAGRAM):   END;
669182    +      END;
MPRINT(EM_DIAGRAM):   END;
669183    +    END;
MPRINT(EM_DIAGRAM):   END;
669184    +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
669185    +    IF  NOT MISSING(AcceptedCmpTotal ) AND
669186    +                       2.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 2.5 <= AcceptedCmpTotal THEN DO;
669187    +      _NODE_  =                   15;
MPRINT(EM_DIAGRAM):   _NODE_ = 15;
669188    +      _LEAF_  =                   18;
MPRINT(EM_DIAGRAM):   _LEAF_ = 18;
669189    +      P_DepVar0  =      0.3103448275862;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.3103448275862;
669190    +      P_DepVar1  =     0.68965517241379;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.68965517241379;
669191    +      Q_DepVar0  =      0.3103448275862;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.3103448275862;
669192    +      Q_DepVar1  =     0.68965517241379;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.68965517241379;
669193    +      V_DepVar0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.33333333333333;
669194    +      V_DepVar1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.66666666666666;
669195    +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
669196    +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
669197    +      END;
MPRINT(EM_DIAGRAM):   END;
669198    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
669199    +      _NODE_  =                   14;
MPRINT(EM_DIAGRAM):   _NODE_ = 14;
669200    +      _LEAF_  =                   17;
MPRINT(EM_DIAGRAM):   _LEAF_ = 17;
669201    +      P_DepVar0  =     0.82562277580071;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.82562277580071;
669202    +      P_DepVar1  =     0.17437722419928;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.17437722419928;
669203    +      Q_DepVar0  =     0.82562277580071;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.82562277580071;
669204    +      Q_DepVar1  =     0.17437722419928;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.17437722419928;
669205    +      V_DepVar0  =     0.81818181818181;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.81818181818181;
669206    +      V_DepVar1  =     0.18181818181818;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.18181818181818;
669207    +      I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
669208    +      U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
669209    +      END;
MPRINT(EM_DIAGRAM):   END;
669210    +    END;
MPRINT(EM_DIAGRAM):   END;
669211    +  END;
MPRINT(EM_DIAGRAM):   END;
669212    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
669213    +  IF  NOT MISSING(Recency ) AND
669214    +    Recency  <                 32.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Recency ) AND Recency < 32.5 THEN DO;
669215    +    IF  NOT MISSING(NumCatalogPurchases ) AND
669216    +                       5.5 <= NumCatalogPurchases  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumCatalogPurchases ) AND 5.5 <= NumCatalogPurchases THEN 
DO;
669217    +      IF  NOT MISSING(NumStorePurchases ) AND
669218    +                         7.5 <= NumStorePurchases  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumStorePurchases ) AND 7.5 <= NumStorePurchases THEN DO;
669219    +        IF  NOT MISSING(RFMstat ) AND
669220    +              1964.32692307692 <= RFMstat  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RFMstat ) AND 1964.32692307692 <= RFMstat THEN DO;
669221    +          _NODE_  =                   37;
MPRINT(EM_DIAGRAM):   _NODE_ = 37;
669222    +          _LEAF_  =                   10;
MPRINT(EM_DIAGRAM):   _LEAF_ = 10;
669223    +          P_DepVar0  =     0.42857142857142;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.42857142857142;
669224    +          P_DepVar1  =     0.57142857142857;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.57142857142857;
669225    +          Q_DepVar0  =     0.42857142857142;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.42857142857142;
669226    +          Q_DepVar1  =     0.57142857142857;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.57142857142857;
669227    +          V_DepVar0  =     0.44444444444444;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.44444444444444;
669228    +          V_DepVar1  =     0.55555555555555;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.55555555555555;
669229    +          I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
669230    +          U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
669231    +          END;
MPRINT(EM_DIAGRAM):   END;
669232    +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
669233    +          _NODE_  =                   36;
MPRINT(EM_DIAGRAM):   _NODE_ = 36;
669234    +          _LEAF_  =                    9;
MPRINT(EM_DIAGRAM):   _LEAF_ = 9;
669235    +          P_DepVar0  =                    1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 1;
669236    +          P_DepVar1  =                    0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0;
669237    +          Q_DepVar0  =                    1;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 1;
669238    +          Q_DepVar1  =                    0;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0;
669239    +          V_DepVar0  =     0.69230769230769;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.69230769230769;
669240    +          V_DepVar1  =      0.3076923076923;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.3076923076923;
669241    +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
669242    +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
669243    +          END;
MPRINT(EM_DIAGRAM):   END;
669244    +        END;
MPRINT(EM_DIAGRAM):   END;
669245    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
669246    +        IF  NOT MISSING(MntFishProducts ) AND
669247    +          MntFishProducts  <                   26 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntFishProducts ) AND MntFishProducts < 26 THEN DO;
669248    +          _NODE_  =                   34;
MPRINT(EM_DIAGRAM):   _NODE_ = 34;
669249    +          _LEAF_  =                    7;
MPRINT(EM_DIAGRAM):   _LEAF_ = 7;
669250    +          P_DepVar0  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.71428571428571;
669251    +          P_DepVar1  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.28571428571428;
669252    +          Q_DepVar0  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.71428571428571;
669253    +          Q_DepVar1  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.28571428571428;
669254    +          V_DepVar0  =                  0.8;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.8;
669255    +          V_DepVar1  =                  0.2;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.2;
669256    +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
669257    +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
669258    +          END;
MPRINT(EM_DIAGRAM):   END;
669259    +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
669260    +          _NODE_  =                   35;
MPRINT(EM_DIAGRAM):   _NODE_ = 35;
669261    +          _LEAF_  =                    8;
MPRINT(EM_DIAGRAM):   _LEAF_ = 8;
669262    +          P_DepVar0  =     0.13793103448275;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.13793103448275;
669263    +          P_DepVar1  =     0.86206896551724;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.86206896551724;
669264    +          Q_DepVar0  =     0.13793103448275;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.13793103448275;
669265    +          Q_DepVar1  =     0.86206896551724;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.86206896551724;
669266    +          V_DepVar0  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.14285714285714;
669267    +          V_DepVar1  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.85714285714285;
669268    +          I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
669269    +          U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
669270    +          END;
MPRINT(EM_DIAGRAM):   END;
669271    +        END;
MPRINT(EM_DIAGRAM):   END;
669272    +      END;
MPRINT(EM_DIAGRAM):   END;
669273    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
669274    +      IF  NOT MISSING(NumWebVisitsMonth ) AND
669275    +                         7.5 <= NumWebVisitsMonth  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumWebVisitsMonth ) AND 7.5 <= NumWebVisitsMonth THEN DO;
669276    +        IF  NOT MISSING(NumCatalogPurchases ) AND
669277    +                           0.5 <= NumCatalogPurchases  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumCatalogPurchases ) AND 0.5 <= NumCatalogPurchases THEN 
DO;
669278    +          IF  NOT MISSING(Kidhome ) AND
669279    +            Kidhome  <                  0.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Kidhome ) AND Kidhome < 0.5 THEN DO;
669280    +            _NODE_  =                   52;
MPRINT(EM_DIAGRAM):   _NODE_ = 52;
669281    +            _LEAF_  =                    5;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
669282    +            P_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.66666666666666;
669283    +            P_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.33333333333333;
669284    +            Q_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.66666666666666;
669285    +            Q_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.33333333333333;
669286    +            V_DepVar0  =                  0.6;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.6;
669287    +            V_DepVar1  =                  0.4;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.4;
669288    +            I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
669289    +            U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
669290    +            END;
MPRINT(EM_DIAGRAM):   END;
669291    +          ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
669292    +            _NODE_  =                   53;
MPRINT(EM_DIAGRAM):   _NODE_ = 53;
669293    +            _LEAF_  =                    6;
MPRINT(EM_DIAGRAM):   _LEAF_ = 6;
669294    +            P_DepVar0  =     0.26470588235294;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.26470588235294;
669295    +            P_DepVar1  =     0.73529411764705;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.73529411764705;
669296    +            Q_DepVar0  =     0.26470588235294;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.26470588235294;
669297    +            Q_DepVar1  =     0.73529411764705;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.73529411764705;
669298    +            V_DepVar0  =     0.21428571428571;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.21428571428571;
669299    +            V_DepVar1  =     0.78571428571428;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.78571428571428;
669300    +            I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
669301    +            U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
669302    +            END;
MPRINT(EM_DIAGRAM):   END;
669303    +          END;
MPRINT(EM_DIAGRAM):   END;
669304    +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
669305    +          _NODE_  =                   32;
MPRINT(EM_DIAGRAM):   _NODE_ = 32;
669306    +          _LEAF_  =                    4;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
669307    +          P_DepVar0  =     0.81428571428571;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.81428571428571;
669308    +          P_DepVar1  =     0.18571428571428;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.18571428571428;
669309    +          Q_DepVar0  =     0.81428571428571;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.81428571428571;
669310    +          Q_DepVar1  =     0.18571428571428;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.18571428571428;
669311    +          V_DepVar0  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.71428571428571;
669312    +          V_DepVar1  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.28571428571428;
669313    +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
669314    +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
669315    +          END;
MPRINT(EM_DIAGRAM):   END;
669316    +        END;
MPRINT(EM_DIAGRAM):   END;
669317    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
669318    +        IF  NOT MISSING(NumDealsPurchases ) AND
669319    +                           5.5 <= NumDealsPurchases  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumDealsPurchases ) AND 5.5 <= NumDealsPurchases THEN DO;
669320    +          IF  NOT MISSING(NumStorePurchases ) AND
669321    +            NumStorePurchases  <                  6.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumStorePurchases ) AND NumStorePurchases < 6.5 THEN DO;
669322    +            _NODE_  =                   50;
MPRINT(EM_DIAGRAM):   _NODE_ = 50;
669323    +            _LEAF_  =                    2;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
669324    +            P_DepVar0  =     0.22222222222222;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.22222222222222;
669325    +            P_DepVar1  =     0.77777777777777;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.77777777777777;
669326    +            Q_DepVar0  =     0.22222222222222;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.22222222222222;
669327    +            Q_DepVar1  =     0.77777777777777;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.77777777777777;
669328    +            V_DepVar0  =                    0;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0;
669329    +            V_DepVar1  =                    1;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 1;
669330    +            I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
669331    +            U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
669332    +            END;
MPRINT(EM_DIAGRAM):   END;
669333    +          ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
669334    +            _NODE_  =                   51;
MPRINT(EM_DIAGRAM):   _NODE_ = 51;
669335    +            _LEAF_  =                    3;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
669336    +            P_DepVar0  =     0.91666666666666;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.91666666666666;
669337    +            P_DepVar1  =     0.08333333333333;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.08333333333333;
669338    +            Q_DepVar0  =     0.91666666666666;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.91666666666666;
669339    +            Q_DepVar1  =     0.08333333333333;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.08333333333333;
669340    +            V_DepVar0  =                  0.5;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.5;
669341    +            V_DepVar1  =                  0.5;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.5;
669342    +            I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
669343    +            U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
669344    +            END;
MPRINT(EM_DIAGRAM):   END;
669345    +          END;
MPRINT(EM_DIAGRAM):   END;
669346    +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
669347    +          _NODE_  =                   30;
MPRINT(EM_DIAGRAM):   _NODE_ = 30;
669348    +          _LEAF_  =                    1;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
669349    +          P_DepVar0  =     0.91545893719806;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.91545893719806;
669350    +          P_DepVar1  =     0.08454106280193;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.08454106280193;
669351    +          Q_DepVar0  =     0.91545893719806;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.91545893719806;
669352    +          Q_DepVar1  =     0.08454106280193;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.08454106280193;
669353    +          V_DepVar0  =     0.90217391304347;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.90217391304347;
669354    +          V_DepVar1  =     0.09782608695652;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.09782608695652;
669355    +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
669356    +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
669357    +          END;
MPRINT(EM_DIAGRAM):   END;
669358    +        END;
MPRINT(EM_DIAGRAM):   END;
669359    +      END;
MPRINT(EM_DIAGRAM):   END;
669360    +    END;
MPRINT(EM_DIAGRAM):   END;
669361    +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
669362    +    _NODE_  =                    5;
MPRINT(EM_DIAGRAM):   _NODE_ = 5;
669363    +    _LEAF_  =                   11;
MPRINT(EM_DIAGRAM):   _LEAF_ = 11;
669364    +    P_DepVar0  =     0.98042414355628;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.98042414355628;
669365    +    P_DepVar1  =     0.01957585644371;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.01957585644371;
669366    +    Q_DepVar0  =     0.98042414355628;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.98042414355628;
669367    +    Q_DepVar1  =     0.01957585644371;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.01957585644371;
669368    +    V_DepVar0  =     0.98795180722891;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.98795180722891;
669369    +    V_DepVar1  =     0.01204819277108;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.01204819277108;
669370    +    I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
669371    +    U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
669372    +    END;
MPRINT(EM_DIAGRAM):   END;
669373    +  END;
MPRINT(EM_DIAGRAM):   END;
669374    +
669375    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
669376    +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
669377    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
669378    +drop _LEAF_;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
669379     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
669380     quit;
669381     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
669382     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
669383     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
669384     retain ID 2 Node "Tree";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Tree";
669385     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
669386     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 113 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 113 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

669387     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
669388     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
669389     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 113 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 113 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

669390     proc sort data=EMWS8.Tree_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Tree_variableset out=_temp2(keep=NAME CREATOR);
669391     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
669392     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.TREE_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

669393     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
669394     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
669395     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
669396     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

669397     proc contents data=EMWS8.Tree_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Tree_train out=_meta(keep=NAME) noprint;
669398     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 58 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

669399     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
669400     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
669401     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 58 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 58 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

669402     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
669403     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
669404     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
669405     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 58 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 58 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

669406     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
669407     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
669407   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 103 rows and 5 columns.

669408     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

669409     proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
669410     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 103 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL_FCMP has 103 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

669411     filename _pref
669411   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
669412     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
669413     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
669414    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
669415    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
669416    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
669417    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
669418    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
669419    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
669420     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
669421     quit;
669422     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
669423     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
669424     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
669425     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
669426     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
669427     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

669428     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
669429     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
669430     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

669431     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
669432     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
669433     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

669434     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
669435     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
669436     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
669437     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

669438     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
669439     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

669440     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
669441     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
669442     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

669443     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
669444     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
669445     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
669446     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

669447     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
669448     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
669448   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

669449     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

669450     proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
669451     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL_FCMP has 107 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

669452     filename _pref
669452   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
669453     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
669454     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
669455    +
669456    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
669457    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
669457   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
669458    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
669459    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
669460    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
669461    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
669462    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
669463     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
669464     quit;
669465     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
669466     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
669467     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
669468     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
669469     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
669470     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

669471     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
669472     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
669473     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

669474     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
669475     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
669476     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

669477     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
669478     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
669479     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
669480     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

669481     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
669482     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

669483     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
669484     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
669485     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

669486     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
669487     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
669488     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
669489     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

669490     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
669491     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
669491   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

669492     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

669493     proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
669494     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL_FCMP has 146 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

669495     filename _pref
669495   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
669496     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
669497     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
669498    +
669499    +
669500    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
669501    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
669502    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
669503    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
669504    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
669505    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
669506    +
669507    +
669508    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
669509    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
669510    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
669511    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
669512    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
669513    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
669514    +
669515    +
669516    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
669517    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
669518    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
669519    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
669520    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
669521    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
669522    +
669523    +
669524    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
669525    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
669526    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
669527    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
669528    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
669529    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
669530    +
669531    +
669532    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
669533    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
669534    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
669535    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
669536    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
669537    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
669538    +
669539    +
669540    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
669541    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
669542    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
669543    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
669544    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
669545    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
669546    +
669547    +
669548    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
669549    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
669550    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
669551    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
669552    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
669553    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
669554    +
669555    +
669556    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
669557    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
669558    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
669559    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
669560    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
669561    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
669562    +if
669563    +_FILTERNORM1 not in ( '.')
669564    + and
669565    +_FILTERNORM2 not in ( '.')
669566    + and
669567    +_FILTERNORM3 not in ( '.')
669568    + and
669569    +_FILTERNORM4 not in ( '.')
669570    + and
669571    +_FILTERNORM5 not in ( '.')
669572    + and
669573    +_FILTERNORM6 not in ( '.')
669574    + and
669575    +_FILTERNORM7 not in ( ' ')
669576    + and
669577    +_FILTERNORM8 not in ( ' ')
669578    +and
669579    +( Dt_Customer ne .)
669580    +and ( Income ne . and (Income<=107000))
669581    +and ( Kidhome ne .)
669582    +and ( MntFishProducts ne .)
669583    +and ( MntFruits ne .)
669584    +and ( MntGoldProds ne .)
669585    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
669586    +and ( MntSweetProducts ne .)
669587    +and ( MntWines ne .)
669588    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
669589    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
669590    +and ( NumStorePurchases ne .)
669591    +and ( NumWebPurchases ne .)
669592    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
669593    +and ( Recency ne .)
669594    +and ( Teenhome ne .)
669595    +and ( Year_Birth ne .)
669596    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
669597    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
669598    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
669599    +end;
MPRINT(EM_DIAGRAM):   end;
669600    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
669601    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
669602     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
669603     quit;
669604     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
669605     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
669606     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
669607     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
669608     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
669609     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

669610     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
669611     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
669612     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

669613     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
669614     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
669615     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

669616     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
669617     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
669618     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
669619     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

669620     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
669621     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

669622     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
669623     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
669624     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

669625     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
669626     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
669627     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
669628     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

669629     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
669630     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
669630   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

669631     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

669632     proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
669633     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL_FCMP has 212 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

669634     %macro varDept(fcmpdata=,id=);
669635     %global nobs&id scoreFlag&id;
669636     %let scoreFlag&id = 0;
669637     %if &id=1 or ^&fcmpStart %then %do;
669638     proc sort data=&fcmpdata out=_temp&id nodupkey;
669639     by NAME;
669640     where id=&id and LHS in( %let j=1;
669641     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
669642     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
669643     "&var" %let j = %eval(&j+1);
669644     %end;
669645     );
669646     run;
669647     %let dsid = %sysfunc(open(_temp&id));
669648     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
669649     %let dsid = %sysfunc(close(&dsid));
669650     %if &&nobs&id %then %do;
669651     %let scoreFlag&id = 1;
669652     %let fcmpStart = 1;
669653     %end;
669654     %else %let fcmpStart = 0;
669655     %end;
669656     %else %do;
669657     proc sort data=&fcmpdata out=_tempid;
669658     where id=&id;
669659     by LHS;
669660     run;
669661     %let dsid = %sysfunc(open(_tempid));
669662     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
669663     %let dsid = %sysfunc(close(&dsid));
669664     %if ^&&nobs&id %then %do;
669665     proc datasets lib=work nolist;
669666     delete _tempid;
669667     run;
669668     quit;
669669     %end;
669670     %else %do;
669671     data _tempAll;
669672     set %let j=%eval(&id-1);
669673     %do x=1 %to &j;
669674     %if &&nobs&x %then %do;
669675     _temp&x %end;
669676     %end;
669677     ;
669678     run;
669679     proc sql;
669680     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
669680   ! work._tempid p2 where p.name=p2.lhs;
669681     quit;
669682     data _temp&id;
669683     set _temp&id;
669684     where LHS ne '' and NAME ne '' and Node ne '';
669685     run;
669686     proc datasets lib=work nolist;
669687     delete _tempAll;
669688     run;
669689     %let dsid = %sysfunc(open(_temp&id));
669690     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
669691     %let dsid = %sysfunc(close(&dsid));
669692     %if ^&&nobs&id %then %do;
669693     proc datasets lib=work nolist;
669694     delete _temp&id;
669695     run;
669696     quit;
669697     %end;
669698     %else %do;
669699     %let scoreFlag&id = 1;
669700     data _temp&id;
669701     set _temp&id;
669702     where LHS ne NAME and node ne '';
669703     run;
669704     %let dsid = %sysfunc(open(_temp&id));
669705     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
669706     %let dsid = %sysfunc(close(&dsid));
669707     %if ^&&nobs&id %then %do;
669708     proc datasets lib=work nolist;
669709     delete _temp&id;
669710     run;
669711     quit;
669712     %end;
669713     %else %do;
669714     proc sort data=_temp&id nodupkey;
669715     by LHS NAME;
669716     run;
669717     %end;
669718     %end;
669719     %end;
669720     %end;
669721     %mend varDept;
669722     %macro optCode(outdata=fcmpdata);
669723     %global fcmpStart;
669724     %let fcmpStart = 0;
669725     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
669726     %let NumNodes=9;
669727     %do k=1 %to &NumNodes;
669728     %vardept(fcmpdata=&outdata, id=&k);
669729     %end;
669730     %mend optCode;
669731     %optcode(outData=EMWS8.Ensmbl_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 30 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 20 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 10 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 10 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 10 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 10 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 10 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 17 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 17 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 17 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 17 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 17 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 17 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 17 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 10 observations read from the data set WORK._TEMP2.
NOTE: There were 17 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 27 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

669732     filename _pref
669732   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural4\EMPUBLISHSCORE.sas";
669733     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
669734     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural4\EMPUBLISHSCORE.sas.
669735    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
669736    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
669737    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
669738    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
669739    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
669740    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
669741    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
669742    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
669743    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
669744    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
669745    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
669746    +LENGTH _WARN_ $4
669747    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
669748    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
669749    +
669750    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
669751    +
669752    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
669753    +
669754    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
669755    +
669756    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
669757    +
669758    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
669759    +
669760    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
669761    +
669762    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
669763    +
669764    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
669765    +
669766    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
669767    +
669768    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
669769    +
669770    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
669771    +
669772    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
669773    +
669774    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
669775    +
669776    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
669777    +
669778    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
669779    +
669780    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
669781    +
669782    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
669783    +
669784    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
669785    +
669786    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
669787    +
669788    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
669789    +
669790    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
669791    +
669792    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
669793    +
669794    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
669795    +
669796    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
669797    +
669798    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
669799    +
669800    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
669801    +
669802    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
669803    +
669804    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
669805    +
669806    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
669807    +
669808    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
669809    +
669810    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
669811    +
669812    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
669813    +
669814    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
669815    +
669816    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
669817    +
669818    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
669819    +
669820    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
669821    +
669822    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
669823    +
669824    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
669825    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
669826    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
669827    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
669828    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
669829    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
669830    +end;
MPRINT(EM_DIAGRAM):   end;
669831    +else do;
MPRINT(EM_DIAGRAM):   else do;
669832    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
669833    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
669834    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
669835    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
669836    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
669837    +   end;
MPRINT(EM_DIAGRAM):   end;
669838    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
669839    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
669840    +   end;
MPRINT(EM_DIAGRAM):   end;
669841    +   else do;
MPRINT(EM_DIAGRAM):   else do;
669842    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
669843    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
669844    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
669845    +   end;
MPRINT(EM_DIAGRAM):   end;
669846    +end;
MPRINT(EM_DIAGRAM):   end;
669847    +
669848    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
669849    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
669850    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
669851    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
669852    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
669853    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
669854    +end;
MPRINT(EM_DIAGRAM):   end;
669855    +else do;
MPRINT(EM_DIAGRAM):   else do;
669856    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
669857    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
669858    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
669859    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
669860    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
669861    +   end;
MPRINT(EM_DIAGRAM):   end;
669862    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
669863    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
669864    +   end;
MPRINT(EM_DIAGRAM):   end;
669865    +   else do;
MPRINT(EM_DIAGRAM):   else do;
669866    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
669867    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
669868    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
669869    +   end;
MPRINT(EM_DIAGRAM):   end;
669870    +end;
MPRINT(EM_DIAGRAM):   end;
669871    +
669872    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
669873    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
669874    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
669875    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
669876    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
669877    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
669878    +end;
MPRINT(EM_DIAGRAM):   end;
669879    +else do;
MPRINT(EM_DIAGRAM):   else do;
669880    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
669881    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
669882    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
669883    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
669884    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
669885    +   end;
MPRINT(EM_DIAGRAM):   end;
669886    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
669887    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
669888    +   end;
MPRINT(EM_DIAGRAM):   end;
669889    +   else do;
MPRINT(EM_DIAGRAM):   else do;
669890    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
669891    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
669892    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
669893    +   end;
MPRINT(EM_DIAGRAM):   end;
669894    +end;
MPRINT(EM_DIAGRAM):   end;
669895    +
669896    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
669897    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
669898    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
669899    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
669900    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
669901    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
669902    +end;
MPRINT(EM_DIAGRAM):   end;
669903    +else do;
MPRINT(EM_DIAGRAM):   else do;
669904    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
669905    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
669906    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
669907    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
669908    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
669909    +   end;
MPRINT(EM_DIAGRAM):   end;
669910    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
669911    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
669912    +   end;
MPRINT(EM_DIAGRAM):   end;
669913    +   else do;
MPRINT(EM_DIAGRAM):   else do;
669914    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
669915    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
669916    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
669917    +   end;
MPRINT(EM_DIAGRAM):   end;
669918    +end;
MPRINT(EM_DIAGRAM):   end;
669919    +
669920    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
669921    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
669922    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
669923    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
669924    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
669925    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
669926    +end;
MPRINT(EM_DIAGRAM):   end;
669927    +else do;
MPRINT(EM_DIAGRAM):   else do;
669928    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
669929    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
669930    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
669931    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
669932    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
669933    +   end;
MPRINT(EM_DIAGRAM):   end;
669934    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
669935    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
669936    +   end;
MPRINT(EM_DIAGRAM):   end;
669937    +   else do;
MPRINT(EM_DIAGRAM):   else do;
669938    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
669939    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
669940    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
669941    +   end;
MPRINT(EM_DIAGRAM):   end;
669942    +end;
MPRINT(EM_DIAGRAM):   end;
669943    +
669944    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
669945    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
669946    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
669947    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
669948    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
669949    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
669950    +end;
MPRINT(EM_DIAGRAM):   end;
669951    +else do;
MPRINT(EM_DIAGRAM):   else do;
669952    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
669953    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
669954    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
669955    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
669956    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
669957    +   end;
MPRINT(EM_DIAGRAM):   end;
669958    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
669959    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
669960    +   end;
MPRINT(EM_DIAGRAM):   end;
669961    +   else do;
MPRINT(EM_DIAGRAM):   else do;
669962    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
669963    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
669964    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
669965    +   end;
MPRINT(EM_DIAGRAM):   end;
669966    +end;
MPRINT(EM_DIAGRAM):   end;
669967    +
669968    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
669969    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
669970    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
669971    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
669972    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
669973    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
669974    +end;
MPRINT(EM_DIAGRAM):   end;
669975    +else do;
MPRINT(EM_DIAGRAM):   else do;
669976    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
669977    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
669978    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
669979    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
669980    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
669981    +   end;
MPRINT(EM_DIAGRAM):   end;
669982    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
669983    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
669984    +   end;
MPRINT(EM_DIAGRAM):   end;
669985    +   else do;
MPRINT(EM_DIAGRAM):   else do;
669986    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
669987    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
669988    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
669989    +   end;
MPRINT(EM_DIAGRAM):   end;
669990    +end;
MPRINT(EM_DIAGRAM):   end;
669991    +
669992    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
669993    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
669994    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
669995    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
669996    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
669997    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
669998    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
669999    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
670000    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
670001    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
670002    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
670003    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
670004    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
670005    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
670006    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
670007    +end;
MPRINT(EM_DIAGRAM):   end;
670008    +else do;
MPRINT(EM_DIAGRAM):   else do;
670009    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
670010    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
670011    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
670012    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
670013    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
670014    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
670015    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
670016    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
670017    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
670018    +         end;
MPRINT(EM_DIAGRAM):   end;
670019    +         else do;
MPRINT(EM_DIAGRAM):   else do;
670020    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
670021    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
670022    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
670023    +            end;
MPRINT(EM_DIAGRAM):   end;
670024    +         end;
MPRINT(EM_DIAGRAM):   end;
670025    +      end;
MPRINT(EM_DIAGRAM):   end;
670026    +      else do;
MPRINT(EM_DIAGRAM):   else do;
670027    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
670028    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
670029    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
670030    +         end;
MPRINT(EM_DIAGRAM):   end;
670031    +      end;
MPRINT(EM_DIAGRAM):   end;
670032    +   end;
MPRINT(EM_DIAGRAM):   end;
670033    +   else do;
MPRINT(EM_DIAGRAM):   else do;
670034    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
670035    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
670036    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
670037    +      end;
MPRINT(EM_DIAGRAM):   end;
670038    +      else do;
MPRINT(EM_DIAGRAM):   else do;
670039    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
670040    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
670041    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
670042    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
670043    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
670044    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
670045    +         end;
MPRINT(EM_DIAGRAM):   end;
670046    +      end;
MPRINT(EM_DIAGRAM):   end;
670047    +   end;
MPRINT(EM_DIAGRAM):   end;
670048    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
670049    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
670050    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
670051    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
670052    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
670053    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
670054    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
670055    +   end;
MPRINT(EM_DIAGRAM):   end;
670056    +end;
MPRINT(EM_DIAGRAM):   end;
670057    +
670058    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
670059    +*** Checking missing input Interval
670060    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
670061    +
670062    +IF NMISS(
670063    +   AcceptedCmpTotal ,
670064    +   Kidhome ,
670065    +   Mnt ,
670066    +   MntFishProducts ,
670067    +   MntFruits ,
670068    +   MntGoldProds ,
670069    +   MntMeatProducts ,
670070    +   MntSweetProducts ,
670071    +   MntWines ,
670072    +   NumCatalogPurchases ,
670073    +   NumDealsPurchases ,
670074    +   NumDistPurchases ,
670075    +   NumStorePurchases ,
670076    +   NumWebPurchases ,
670077    +   NumWebVisitsMonth ,
670078    +   RFMstat ,
670079    +   Recency ,
670080    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Kidhome , Mnt , MntFishProducts , MntFruits 
, MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , 
NumDealsPurchases , NumDistPurchases , NumStorePurchases , NumWebPurchases , NumWebVisitsMonth 
, RFMstat , Recency , Teenhome ) THEN DO;
670081    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
670082    +
670083    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
670084    +END;
MPRINT(EM_DIAGRAM):   END;
670085    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
670086    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
670087    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
670088    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
670089    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
670090    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
670091    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
670092    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
670093    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
670094    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
670095    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
670096    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
670097    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
670098    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
670099    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
670100    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
670101    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
670102    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
670103    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
670104    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
670105    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
670106    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
670107    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
670108    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
670109    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
670110    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
670111    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
670112    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
670113    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
670114    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
670115    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
670116    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
670117    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
670118    +END;
MPRINT(EM_DIAGRAM):   END;
670119    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
670120    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
670121    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
670122    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
670123    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
670124    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
670125    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
670126    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
670127    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
670128    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
670129    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
670130    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
670131    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
670132    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
670133    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
670134    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
670135    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
670136    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
670137    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
670138    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
670139    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
670140    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
670141    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
670142    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
670143    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
670144    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
670145    +   ELSE S_NumCatalogPurchases
670146    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
670147    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
670148    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
670149    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
670150    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
670151    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
670152    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
670153    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
670154    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
670155    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
670156    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
670157    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
670158    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
670159    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
670160    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
670161    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
670162    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
670163    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
670164    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
670165    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
670166    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
670167    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
670168    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
670169    +END;
MPRINT(EM_DIAGRAM):   END;
670170    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
670171    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
670172    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
670173    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
670174    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
670175    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
670176    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
670177    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
670178    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
670179    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
670180    +   H11  =     -0.8246180954871 * S_AcceptedCmpTotal  +    -0.26046792683156 *
670181    +        S_Kidhome  +    -0.20961567748735 * S_Mnt  +     0.26654542653658 *
670182    +        S_MntFishProducts  +    -0.30951775122613 * S_MntFruits
670183    +          +     0.09051491444093 * S_MntGoldProds  +    -1.64328058678717 *
670184    +        S_MntMeatProducts  +    -0.19366895196568 * S_MntSweetProducts
670185    +          +     0.38603773876569 * S_MntWines  +    -0.25551176610235 *
670186    +        S_NumCatalogPurchases  +    -0.10625029852107 * S_NumDealsPurchases
670187    +          +     0.19912219980931 * S_NumDistPurchases
670188    +          +     0.18110016198301 * S_NumStorePurchases
670189    +          +     0.84844988279844 * S_NumWebPurchases
670190    +          +    -0.18450776402283 * S_NumWebVisitsMonth
670191    +          +    -0.50884714303231 * S_RFMstat  +     0.19244941768129 *
670192    +        S_Recency  +    -0.18130850769076 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.8246180954871 * S_AcceptedCmpTotal + -0.26046792683156 * 
S_Kidhome + -0.20961567748735 * S_Mnt + 0.26654542653658 * S_MntFishProducts + 
-0.30951775122613 * S_MntFruits + 0.09051491444093 * S_MntGoldProds + -1.64328058678717 * 
S_MntMeatProducts + -0.19366895196568 * S_MntSweetProducts + 0.38603773876569 * S_MntWines + 
-0.25551176610235 * S_NumCatalogPurchases + -0.10625029852107 * S_NumDealsPurchases + 
0.19912219980931 * S_NumDistPurchases + 0.18110016198301 * S_NumStorePurchases + 
0.84844988279844 * S_NumWebPurchases + -0.18450776402283 * S_NumWebVisitsMonth + 
-0.50884714303231 * S_RFMstat + 0.19244941768129 * S_Recency + -0.18130850769076 * S_Teenhome ;
670193    +   H12  =     0.59683104990369 * S_AcceptedCmpTotal  +     0.36552928900705 *
670194    +        S_Kidhome  +      0.5173309469318 * S_Mnt  +    -0.43538154644347 *
670195    +        S_MntFishProducts  +    -0.21779050605401 * S_MntFruits
670196    +          +     0.19689161190877 * S_MntGoldProds  +      1.9153507069603 *
670197    +        S_MntMeatProducts  +     0.21257962213904 * S_MntSweetProducts
670198    +          +    -0.49835209765306 * S_MntWines  +     1.47489768672818 *
670199    +        S_NumCatalogPurchases  +     0.68023375677638 * S_NumDealsPurchases
670200    +          +     0.28904827738676 * S_NumDistPurchases
670201    +          +    -0.77789592957647 * S_NumStorePurchases
670202    +          +    -0.72822660183607 * S_NumWebPurchases
670203    +          +     0.38372224856027 * S_NumWebVisitsMonth
670204    +          +       0.255547398028 * S_RFMstat  +    -0.45525472850351 *
670205    +        S_Recency  +     0.10036435252662 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.59683104990369 * S_AcceptedCmpTotal + 0.36552928900705 * 
S_Kidhome + 0.5173309469318 * S_Mnt + -0.43538154644347 * S_MntFishProducts + 
-0.21779050605401 * S_MntFruits + 0.19689161190877 * S_MntGoldProds + 1.9153507069603 * 
S_MntMeatProducts + 0.21257962213904 * S_MntSweetProducts + -0.49835209765306 * S_MntWines + 
1.47489768672818 * S_NumCatalogPurchases + 0.68023375677638 * S_NumDealsPurchases + 
0.28904827738676 * S_NumDistPurchases + -0.77789592957647 * S_NumStorePurchases + 
-0.72822660183607 * S_NumWebPurchases + 0.38372224856027 * S_NumWebVisitsMonth + 
0.255547398028 * S_RFMstat + -0.45525472850351 * S_Recency + 0.10036435252662 * S_Teenhome ;
670206    +   H13  =     -0.5325626665587 * S_AcceptedCmpTotal  +     0.71160037572862 *
670207    +        S_Kidhome  +    -0.00359855229002 * S_Mnt  +     0.19705637237968 *
670208    +        S_MntFishProducts  +     0.09889116807812 * S_MntFruits
670209    +          +     0.12320565911743 * S_MntGoldProds  +    -0.61569836083387 *
670210    +        S_MntMeatProducts  +      0.1217025461924 * S_MntSweetProducts
670211    +          +     0.46869304908218 * S_MntWines  +    -0.47274920452333 *
670212    +        S_NumCatalogPurchases  +     -0.4082953904163 * S_NumDealsPurchases
670213    +          +     0.19800897399715 * S_NumDistPurchases
670214    +          +     0.59071719241145 * S_NumStorePurchases
670215    +          +      0.3381501904539 * S_NumWebPurchases
670216    +          +    -1.28883338112011 * S_NumWebVisitsMonth
670217    +          +     0.00400055495022 * S_RFMstat  +     1.08206529730608 *
670218    +        S_Recency  +     0.35657275245743 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.5325626665587 * S_AcceptedCmpTotal + 0.71160037572862 * 
S_Kidhome + -0.00359855229002 * S_Mnt + 0.19705637237968 * S_MntFishProducts + 
0.09889116807812 * S_MntFruits + 0.12320565911743 * S_MntGoldProds + -0.61569836083387 * 
S_MntMeatProducts + 0.1217025461924 * S_MntSweetProducts + 0.46869304908218 * S_MntWines + 
-0.47274920452333 * S_NumCatalogPurchases + -0.4082953904163 * S_NumDealsPurchases + 
0.19800897399715 * S_NumDistPurchases + 0.59071719241145 * S_NumStorePurchases + 
0.3381501904539 * S_NumWebPurchases + -1.28883338112011 * S_NumWebVisitsMonth + 
0.00400055495022 * S_RFMstat + 1.08206529730608 * S_Recency + 0.35657275245743 * S_Teenhome ;
670219    +   H14  =    -0.33036484145041 * S_AcceptedCmpTotal  +     0.10011415505573 *
670220    +        S_Kidhome  +    -0.00759070944812 * S_Mnt  +     0.05305726956194 *
670221    +        S_MntFishProducts  +     0.08083584431458 * S_MntFruits
670222    +          +    -0.08731108181089 * S_MntGoldProds  +    -0.64750431537028 *
670223    +        S_MntMeatProducts  +     0.12864735236133 * S_MntSweetProducts
670224    +          +     0.61392673917624 * S_MntWines  +    -0.64142881303629 *
670225    +        S_NumCatalogPurchases  +    -0.05548488425681 * S_NumDealsPurchases
670226    +          +    -0.14288173902466 * S_NumDistPurchases
670227    +          +     0.19601348567287 * S_NumStorePurchases
670228    +          +    -0.08044033043411 * S_NumWebPurchases
670229    +          +    -0.39713255047568 * S_NumWebVisitsMonth
670230    +          +    -0.04913287368072 * S_RFMstat  +     1.19829042792592 *
670231    +        S_Recency  +     0.43457954748035 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.33036484145041 * S_AcceptedCmpTotal + 0.10011415505573 * 
S_Kidhome + -0.00759070944812 * S_Mnt + 0.05305726956194 * S_MntFishProducts + 
0.08083584431458 * S_MntFruits + -0.08731108181089 * S_MntGoldProds + -0.64750431537028 * 
S_MntMeatProducts + 0.12864735236133 * S_MntSweetProducts + 0.61392673917624 * S_MntWines + 
-0.64142881303629 * S_NumCatalogPurchases + -0.05548488425681 * S_NumDealsPurchases + 
-0.14288173902466 * S_NumDistPurchases + 0.19601348567287 * S_NumStorePurchases + 
-0.08044033043411 * S_NumWebPurchases + -0.39713255047568 * S_NumWebVisitsMonth + 
-0.04913287368072 * S_RFMstat + 1.19829042792592 * S_Recency + 0.43457954748035 * S_Teenhome ;
670232    +   H11  = H11  +     0.00533685725345 * AcceptedCmp10
670233    +          +      0.0179370757261 * AcceptedCmp20  +    -0.41410060470313 *
670234    +        AcceptedCmp30  +     0.07645376869498 * AcceptedCmp40
670235    +          +      0.5492727191786 * AcceptedCmp50  +    -0.05028898116052 *
670236    +        Complain0  +    -0.17001742563016 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.00533685725345 * AcceptedCmp10 + 0.0179370757261 * 
AcceptedCmp20 + -0.41410060470313 * AcceptedCmp30 + 0.07645376869498 * AcceptedCmp40 + 
0.5492727191786 * AcceptedCmp50 + -0.05028898116052 * Complain0 + -0.17001742563016 * 
HigherEducationBinary0 ;
670237    +   H12  = H12  +    -0.05469008468492 * AcceptedCmp10
670238    +          +     0.21812430064959 * AcceptedCmp20  +     0.26338110557539 *
670239    +        AcceptedCmp30  +     0.33060548335742 * AcceptedCmp40
670240    +          +    -0.36020558841261 * AcceptedCmp50  +    -0.15370297603958 *
670241    +        Complain0  +    -0.30675348901275 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.05469008468492 * AcceptedCmp10 + 0.21812430064959 * 
AcceptedCmp20 + 0.26338110557539 * AcceptedCmp30 + 0.33060548335742 * AcceptedCmp40 + 
-0.36020558841261 * AcceptedCmp50 + -0.15370297603958 * Complain0 + -0.30675348901275 * 
HigherEducationBinary0 ;
670242    +   H13  = H13  +     0.08685748229764 * AcceptedCmp10
670243    +          +     0.07844617220165 * AcceptedCmp20  +     0.31067826076463 *
670244    +        AcceptedCmp30  +     0.04677289598333 * AcceptedCmp40
670245    +          +    -0.02262539182663 * AcceptedCmp50  +    -0.09187679949493 *
670246    +        Complain0  +    -0.01445092200886 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.08685748229764 * AcceptedCmp10 + 0.07844617220165 * 
AcceptedCmp20 + 0.31067826076463 * AcceptedCmp30 + 0.04677289598333 * AcceptedCmp40 + 
-0.02262539182663 * AcceptedCmp50 + -0.09187679949493 * Complain0 + -0.01445092200886 * 
HigherEducationBinary0 ;
670247    +   H14  = H14  +     0.23256857638539 * AcceptedCmp10
670248    +          +     0.49380464365655 * AcceptedCmp20  +      0.1564578964027 *
670249    +        AcceptedCmp30  +     0.27321024493692 * AcceptedCmp40
670250    +          +     0.52468244186776 * AcceptedCmp50  +    -0.00211673076991 *
670251    +        Complain0  +     0.05471438087898 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.23256857638539 * AcceptedCmp10 + 0.49380464365655 * 
AcceptedCmp20 + 0.1564578964027 * AcceptedCmp30 + 0.27321024493692 * AcceptedCmp40 + 
0.52468244186776 * AcceptedCmp50 + -0.00211673076991 * Complain0 + 0.05471438087898 * 
HigherEducationBinary0 ;
670252    +   H11  = H11  +    -0.04076816270663 * Marital_StatusDivorced
670253    +          +    -0.67847600465626 * Marital_StatusMarried
670254    +          +     0.54591305323233 * Marital_StatusSingle
670255    +          +    -0.32687043798373 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.04076816270663 * Marital_StatusDivorced + 
-0.67847600465626 * Marital_StatusMarried + 0.54591305323233 * Marital_StatusSingle + 
-0.32687043798373 * Marital_StatusTogether ;
670256    +   H12  = H12  +    -0.12115659474027 * Marital_StatusDivorced
670257    +          +     0.46392772017888 * Marital_StatusMarried
670258    +          +    -0.17314180037873 * Marital_StatusSingle
670259    +          +     0.53644907440751 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.12115659474027 * Marital_StatusDivorced + 
0.46392772017888 * Marital_StatusMarried + -0.17314180037873 * Marital_StatusSingle + 
0.53644907440751 * Marital_StatusTogether ;
670260    +   H13  = H13  +    -0.54658256529903 * Marital_StatusDivorced
670261    +          +     0.30725483889925 * Marital_StatusMarried
670262    +          +    -0.68483370266906 * Marital_StatusSingle
670263    +          +     0.27621335641244 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.54658256529903 * Marital_StatusDivorced + 
0.30725483889925 * Marital_StatusMarried + -0.68483370266906 * Marital_StatusSingle + 
0.27621335641244 * Marital_StatusTogether ;
670264    +   H14  = H14  +    -0.38188288053916 * Marital_StatusDivorced
670265    +          +     1.16505115927327 * Marital_StatusMarried
670266    +          +     -0.8294279027913 * Marital_StatusSingle
670267    +          +     1.27240761581762 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.38188288053916 * Marital_StatusDivorced + 
1.16505115927327 * Marital_StatusMarried + -0.8294279027913 * Marital_StatusSingle + 
1.27240761581762 * Marital_StatusTogether ;
670268    +   H11  =     -1.1404178523108 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.1404178523108 + H11 ;
670269    +   H12  =    -0.13870893584871 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.13870893584871 + H12 ;
670270    +   H13  =       0.548122343891 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.548122343891 + H13 ;
670271    +   H14  =     1.07479952425856 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.07479952425856 + H14 ;
670272    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
670273    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
670274    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
670275    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
670276    +END;
MPRINT(EM_DIAGRAM):   END;
670277    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
670278    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
670279    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
670280    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
670281    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
670282    +END;
MPRINT(EM_DIAGRAM):   END;
670283    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
670284    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
670285    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
670286    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
670287    +   P_DepVar1  =    -2.05486530281327 * H11  +     3.33946880396656 * H12
670288    +          +      -3.559477956484 * H13  +    -4.19177056173878 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.05486530281327 * H11 + 3.33946880396656 * H12 + 
-3.559477956484 * H13 + -4.19177056173878 * H14 ;
670289    +   P_DepVar1  =     -2.0040107893081 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.0040107893081 + P_DepVar1 ;
670290    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
670291    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
670292    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
670293    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
670294    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
670295    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
670296    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
670297    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
670298    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
670299    +END;
MPRINT(EM_DIAGRAM):   END;
670300    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
670301    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
670302    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
670303    +END;
MPRINT(EM_DIAGRAM):   END;
670304    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
670305    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
670306    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
670307    +END;
MPRINT(EM_DIAGRAM):   END;
670308    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
670309    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
670310    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
670311    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
670312    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
670313    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
670314    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
670315    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
670316    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
670317    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
670318    +END;
MPRINT(EM_DIAGRAM):   END;
670319    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
670320    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
670321    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
670322    +drop
670323    +H11
670324    +H12
670325    +H13
670326    +H14
670327    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
670328    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
670329     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
670330     quit;
670331     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
670332     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
670333     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
670334     retain ID 2 Node "Neural4";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural4";
670335     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
670336     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1906 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1906 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

670337     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
670338     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
670339     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1906 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1906 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

670340     proc sort data=EMWS8.Neural4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural4_variableset out=_temp2(keep=NAME CREATOR);
670341     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
670342     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.NEURAL4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

670343     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
670344     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
670345     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
670346     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

670347     proc contents data=EMWS8.Neural4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural4_train out=_meta(keep=NAME) noprint;
670348     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

670349     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
670350     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
670351     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

670352     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
670353     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
670354     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
670355     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

670356     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
670357     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
670357   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1070 rows and 5 columns.

670358     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

670359     proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
670360     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1070 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL_FCMP has 1070 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

670361     filename _pref
670361   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
670362     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
670363     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
670364    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
670365    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
670366    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
670367    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
670368    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
670369    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
670370     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
670371     quit;
670372     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
670373     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
670374     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
670375     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
670376     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
670377     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

670378     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
670379     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
670380     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

670381     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
670382     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
670383     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

670384     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
670385     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
670386     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
670387     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

670388     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
670389     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

670390     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
670391     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
670392     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

670393     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
670394     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
670395     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
670396     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

670397     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
670398     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
670398   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

670399     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

670400     proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
670401     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL_FCMP has 1074 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

670402     filename _pref
670402   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
670403     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
670404     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
670405    +
670406    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
670407    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
670407   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
670408    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
670409    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
670410    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
670411    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
670412    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
670413     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
670414     quit;
670415     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
670416     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
670417     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
670418     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
670419     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
670420     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

670421     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
670422     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
670423     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

670424     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
670425     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
670426     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

670427     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
670428     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
670429     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
670430     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

670431     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
670432     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

670433     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
670434     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
670435     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

670436     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
670437     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
670438     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
670439     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

670440     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
670441     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
670441   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

670442     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

670443     proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
670444     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL_FCMP has 1113 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

670445     filename _pref
670445   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
670446     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
670447     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
670448    +
670449    +
670450    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
670451    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
670452    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
670453    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
670454    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
670455    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
670456    +
670457    +
670458    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
670459    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
670460    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
670461    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
670462    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
670463    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
670464    +
670465    +
670466    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
670467    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
670468    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
670469    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
670470    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
670471    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
670472    +
670473    +
670474    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
670475    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
670476    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
670477    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
670478    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
670479    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
670480    +
670481    +
670482    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
670483    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
670484    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
670485    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
670486    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
670487    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
670488    +
670489    +
670490    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
670491    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
670492    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
670493    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
670494    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
670495    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
670496    +
670497    +
670498    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
670499    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
670500    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
670501    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
670502    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
670503    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
670504    +
670505    +
670506    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
670507    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
670508    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
670509    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
670510    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
670511    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
670512    +if
670513    +_FILTERNORM1 not in ( '.')
670514    + and
670515    +_FILTERNORM2 not in ( '.')
670516    + and
670517    +_FILTERNORM3 not in ( '.')
670518    + and
670519    +_FILTERNORM4 not in ( '.')
670520    + and
670521    +_FILTERNORM5 not in ( '.')
670522    + and
670523    +_FILTERNORM6 not in ( '.')
670524    + and
670525    +_FILTERNORM7 not in ( ' ')
670526    + and
670527    +_FILTERNORM8 not in ( ' ')
670528    +and
670529    +( Dt_Customer ne .)
670530    +and ( Income ne . and (Income<=107000))
670531    +and ( Kidhome ne .)
670532    +and ( MntFishProducts ne .)
670533    +and ( MntFruits ne .)
670534    +and ( MntGoldProds ne .)
670535    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
670536    +and ( MntSweetProducts ne .)
670537    +and ( MntWines ne .)
670538    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
670539    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
670540    +and ( NumStorePurchases ne .)
670541    +and ( NumWebPurchases ne .)
670542    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
670543    +and ( Recency ne .)
670544    +and ( Teenhome ne .)
670545    +and ( Year_Birth ne .)
670546    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
670547    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
670548    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
670549    +end;
MPRINT(EM_DIAGRAM):   end;
670550    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
670551    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
670552     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
670553     quit;
670554     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
670555     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
670556     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
670557     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
670558     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
670559     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

670560     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
670561     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
670562     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

670563     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
670564     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
670565     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

670566     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
670567     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
670568     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
670569     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

670570     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
670571     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

670572     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
670573     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
670574     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

670575     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
670576     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
670577     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
670578     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

670579     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
670580     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
670580   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

670581     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

670582     proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
670583     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL_FCMP has 1179 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

670584     %macro varDept(fcmpdata=,id=);
670585     %global nobs&id scoreFlag&id;
670586     %let scoreFlag&id = 0;
670587     %if &id=1 or ^&fcmpStart %then %do;
670588     proc sort data=&fcmpdata out=_temp&id nodupkey;
670589     by NAME;
670590     where id=&id and LHS in( %let j=1;
670591     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
670592     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
670593     "&var" %let j = %eval(&j+1);
670594     %end;
670595     );
670596     run;
670597     %let dsid = %sysfunc(open(_temp&id));
670598     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
670599     %let dsid = %sysfunc(close(&dsid));
670600     %if &&nobs&id %then %do;
670601     %let scoreFlag&id = 1;
670602     %let fcmpStart = 1;
670603     %end;
670604     %else %let fcmpStart = 0;
670605     %end;
670606     %else %do;
670607     proc sort data=&fcmpdata out=_tempid;
670608     where id=&id;
670609     by LHS;
670610     run;
670611     %let dsid = %sysfunc(open(_tempid));
670612     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
670613     %let dsid = %sysfunc(close(&dsid));
670614     %if ^&&nobs&id %then %do;
670615     proc datasets lib=work nolist;
670616     delete _tempid;
670617     run;
670618     quit;
670619     %end;
670620     %else %do;
670621     data _tempAll;
670622     set %let j=%eval(&id-1);
670623     %do x=1 %to &j;
670624     %if &&nobs&x %then %do;
670625     _temp&x %end;
670626     %end;
670627     ;
670628     run;
670629     proc sql;
670630     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
670630   ! work._tempid p2 where p.name=p2.lhs;
670631     quit;
670632     data _temp&id;
670633     set _temp&id;
670634     where LHS ne '' and NAME ne '' and Node ne '';
670635     run;
670636     proc datasets lib=work nolist;
670637     delete _tempAll;
670638     run;
670639     %let dsid = %sysfunc(open(_temp&id));
670640     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
670641     %let dsid = %sysfunc(close(&dsid));
670642     %if ^&&nobs&id %then %do;
670643     proc datasets lib=work nolist;
670644     delete _temp&id;
670645     run;
670646     quit;
670647     %end;
670648     %else %do;
670649     %let scoreFlag&id = 1;
670650     data _temp&id;
670651     set _temp&id;
670652     where LHS ne NAME and node ne '';
670653     run;
670654     %let dsid = %sysfunc(open(_temp&id));
670655     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
670656     %let dsid = %sysfunc(close(&dsid));
670657     %if ^&&nobs&id %then %do;
670658     proc datasets lib=work nolist;
670659     delete _temp&id;
670660     run;
670661     quit;
670662     %end;
670663     %else %do;
670664     proc sort data=_temp&id nodupkey;
670665     by LHS NAME;
670666     run;
670667     %end;
670668     %end;
670669     %end;
670670     %end;
670671     %mend varDept;
670672     %macro optCode(outdata=fcmpdata);
670673     %global fcmpStart;
670674     %let fcmpStart = 0;
670675     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
670676     %let NumNodes=9;
670677     %do k=1 %to &NumNodes;
670678     %vardept(fcmpdata=&outdata, id=&k);
670679     %end;
670680     %mend optCode;
670681     %optcode(outData=EMWS8.Ensmbl_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 110 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 82 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 28 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 28 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 28 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 3 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 3 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 3 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 3 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 28 observations read from the data set WORK._TEMP2.
NOTE: There were 3 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 24 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 24 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 24 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 24 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 24 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 24 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 24 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 28 observations read from the data set WORK._TEMP2.
NOTE: There were 3 observations read from the data set WORK._TEMP5.
NOTE: There were 24 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 55 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

670682     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
670683     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
670684     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
670685     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

670686     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
670687     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
670688     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
670689     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

670690     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
670691     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
670691   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 3 rows and 3 columns.

670692     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

670693     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
670694     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
670695     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 3 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 3 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

670696     filename _pref
670696   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural\EMPUBLISHSCORE.sas";
670697     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
670698     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural\EMPUBLISHSCORE.sas.
670699    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
670700    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
670701    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
670702    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
670703    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
670704    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
670705    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
670706    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
670707    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
670708    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
670709    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
670710    +LENGTH _WARN_ $4
670711    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
670712    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
670713    +
670714    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
670715    +
670716    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
670717    +
670718    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
670719    +
670720    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
670721    +
670722    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
670723    +
670724    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
670725    +
670726    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
670727    +
670728    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
670729    +
670730    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
670731    +
670732    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
670733    +
670734    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
670735    +
670736    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
670737    +
670738    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
670739    +
670740    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
670741    +
670742    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
670743    +
670744    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
670745    +
670746    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
670747    +
670748    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
670749    +
670750    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
670751    +
670752    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
670753    +
670754    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
670755    +
670756    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
670757    +
670758    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
670759    +
670760    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
670761    +
670762    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
670763    +
670764    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
670765    +
670766    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
670767    +
670768    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
670769    +
670770    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
670771    +
670772    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
670773    +
670774    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
670775    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
670776    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
670777    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
670778    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
670779    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
670780    +end;
MPRINT(EM_DIAGRAM):   end;
670781    +else do;
MPRINT(EM_DIAGRAM):   else do;
670782    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
670783    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
670784    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
670785    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
670786    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
670787    +   end;
MPRINT(EM_DIAGRAM):   end;
670788    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
670789    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
670790    +   end;
MPRINT(EM_DIAGRAM):   end;
670791    +   else do;
MPRINT(EM_DIAGRAM):   else do;
670792    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
670793    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
670794    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
670795    +   end;
MPRINT(EM_DIAGRAM):   end;
670796    +end;
MPRINT(EM_DIAGRAM):   end;
670797    +
670798    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
670799    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
670800    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
670801    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
670802    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
670803    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
670804    +end;
MPRINT(EM_DIAGRAM):   end;
670805    +else do;
MPRINT(EM_DIAGRAM):   else do;
670806    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
670807    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
670808    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
670809    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
670810    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
670811    +   end;
MPRINT(EM_DIAGRAM):   end;
670812    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
670813    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
670814    +   end;
MPRINT(EM_DIAGRAM):   end;
670815    +   else do;
MPRINT(EM_DIAGRAM):   else do;
670816    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
670817    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
670818    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
670819    +   end;
MPRINT(EM_DIAGRAM):   end;
670820    +end;
MPRINT(EM_DIAGRAM):   end;
670821    +
670822    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
670823    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
670824    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
670825    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
670826    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
670827    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
670828    +end;
MPRINT(EM_DIAGRAM):   end;
670829    +else do;
MPRINT(EM_DIAGRAM):   else do;
670830    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
670831    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
670832    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
670833    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
670834    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
670835    +   end;
MPRINT(EM_DIAGRAM):   end;
670836    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
670837    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
670838    +   end;
MPRINT(EM_DIAGRAM):   end;
670839    +   else do;
MPRINT(EM_DIAGRAM):   else do;
670840    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
670841    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
670842    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
670843    +   end;
MPRINT(EM_DIAGRAM):   end;
670844    +end;
MPRINT(EM_DIAGRAM):   end;
670845    +
670846    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
670847    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
670848    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
670849    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
670850    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
670851    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
670852    +end;
MPRINT(EM_DIAGRAM):   end;
670853    +else do;
MPRINT(EM_DIAGRAM):   else do;
670854    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
670855    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
670856    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
670857    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
670858    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
670859    +   end;
MPRINT(EM_DIAGRAM):   end;
670860    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
670861    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
670862    +   end;
MPRINT(EM_DIAGRAM):   end;
670863    +   else do;
MPRINT(EM_DIAGRAM):   else do;
670864    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
670865    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
670866    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
670867    +   end;
MPRINT(EM_DIAGRAM):   end;
670868    +end;
MPRINT(EM_DIAGRAM):   end;
670869    +
670870    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
670871    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
670872    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
670873    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
670874    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
670875    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
670876    +end;
MPRINT(EM_DIAGRAM):   end;
670877    +else do;
MPRINT(EM_DIAGRAM):   else do;
670878    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
670879    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
670880    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
670881    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
670882    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
670883    +   end;
MPRINT(EM_DIAGRAM):   end;
670884    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
670885    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
670886    +   end;
MPRINT(EM_DIAGRAM):   end;
670887    +   else do;
MPRINT(EM_DIAGRAM):   else do;
670888    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
670889    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
670890    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
670891    +   end;
MPRINT(EM_DIAGRAM):   end;
670892    +end;
MPRINT(EM_DIAGRAM):   end;
670893    +
670894    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
670895    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
670896    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
670897    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
670898    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
670899    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
670900    +end;
MPRINT(EM_DIAGRAM):   end;
670901    +else do;
MPRINT(EM_DIAGRAM):   else do;
670902    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
670903    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
670904    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
670905    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
670906    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
670907    +   end;
MPRINT(EM_DIAGRAM):   end;
670908    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
670909    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
670910    +   end;
MPRINT(EM_DIAGRAM):   end;
670911    +   else do;
MPRINT(EM_DIAGRAM):   else do;
670912    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
670913    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
670914    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
670915    +   end;
MPRINT(EM_DIAGRAM):   end;
670916    +end;
MPRINT(EM_DIAGRAM):   end;
670917    +
670918    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
670919    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
670920    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
670921    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
670922    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
670923    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
670924    +end;
MPRINT(EM_DIAGRAM):   end;
670925    +else do;
MPRINT(EM_DIAGRAM):   else do;
670926    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
670927    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
670928    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
670929    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
670930    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
670931    +   end;
MPRINT(EM_DIAGRAM):   end;
670932    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
670933    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
670934    +   end;
MPRINT(EM_DIAGRAM):   end;
670935    +   else do;
MPRINT(EM_DIAGRAM):   else do;
670936    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
670937    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
670938    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
670939    +   end;
MPRINT(EM_DIAGRAM):   end;
670940    +end;
MPRINT(EM_DIAGRAM):   end;
670941    +
670942    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
670943    +*** Checking missing input Interval
670944    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
670945    +
670946    +IF NMISS(
670947    +   AcceptedCmpTotal ,
670948    +   Kidhome ,
670949    +   Mnt ,
670950    +   MntFishProducts ,
670951    +   MntFruits ,
670952    +   MntGoldProds ,
670953    +   MntMeatProducts ,
670954    +   MntSweetProducts ,
670955    +   MntWines ,
670956    +   NumCatalogPurchases ,
670957    +   NumDealsPurchases ,
670958    +   NumDistPurchases ,
670959    +   NumStorePurchases ,
670960    +   NumWebPurchases ,
670961    +   NumWebVisitsMonth ,
670962    +   RFMstat ,
670963    +   Recency ,
670964    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Kidhome , Mnt , MntFishProducts , MntFruits 
, MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , 
NumDealsPurchases , NumDistPurchases , NumStorePurchases , NumWebPurchases , NumWebVisitsMonth 
, RFMstat , Recency , Teenhome ) THEN DO;
670965    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
670966    +
670967    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
670968    +END;
MPRINT(EM_DIAGRAM):   END;
670969    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
670970    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
670971    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
670972    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
670973    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
670974    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
670975    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
670976    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
670977    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
670978    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
670979    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
670980    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
670981    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
670982    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
670983    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
670984    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
670985    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
670986    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
670987    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
670988    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
670989    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
670990    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
670991    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
670992    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
670993    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
670994    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
670995    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
670996    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
670997    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
670998    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
670999    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
671000    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
671001    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
671002    +END;
MPRINT(EM_DIAGRAM):   END;
671003    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
671004    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
671005    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
671006    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
671007    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
671008    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
671009    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
671010    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
671011    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
671012    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
671013    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
671014    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
671015    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
671016    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
671017    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
671018    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
671019    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
671020    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
671021    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
671022    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
671023    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
671024    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
671025    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
671026    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
671027    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
671028    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
671029    +   ELSE S_NumCatalogPurchases
671030    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
671031    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
671032    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
671033    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
671034    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
671035    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
671036    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
671037    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
671038    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
671039    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
671040    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
671041    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
671042    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
671043    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
671044    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
671045    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
671046    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
671047    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
671048    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
671049    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
671050    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
671051    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
671052    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
671053    +END;
MPRINT(EM_DIAGRAM):   END;
671054    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
671055    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
671056    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
671057    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
671058    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
671059    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
671060    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
671061    +   H11  =     0.05683042207498 * S_AcceptedCmpTotal  +     0.01103749863785 *
671062    +        S_Kidhome  +      0.0668028452714 * S_Mnt  +     0.02967520347091 *
671063    +        S_MntFishProducts  +     0.01858045039368 * S_MntFruits
671064    +          +    -0.02635078317954 * S_MntGoldProds  +    -0.25780271539024 *
671065    +        S_MntMeatProducts  +     0.01453133061011 * S_MntSweetProducts
671066    +          +     0.07702251699374 * S_MntWines  +    -0.28646346184321 *
671067    +        S_NumCatalogPurchases  +    -0.12552585628838 * S_NumDealsPurchases
671068    +          +     0.09149172977308 * S_NumDistPurchases
671069    +          +      0.1286379510771 * S_NumStorePurchases
671070    +          +     0.04601789983748 * S_NumWebPurchases
671071    +          +    -0.21551517718316 * S_NumWebVisitsMonth
671072    +          +    -0.05297005877428 * S_RFMstat  +     0.30037503125852 *
671073    +        S_Recency  +     0.04585774296716 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.05683042207498 * S_AcceptedCmpTotal + 0.01103749863785 * 
S_Kidhome + 0.0668028452714 * S_Mnt + 0.02967520347091 * S_MntFishProducts + 0.01858045039368 
* S_MntFruits + -0.02635078317954 * S_MntGoldProds + -0.25780271539024 * S_MntMeatProducts + 
0.01453133061011 * S_MntSweetProducts + 0.07702251699374 * S_MntWines + -0.28646346184321 * 
S_NumCatalogPurchases + -0.12552585628838 * S_NumDealsPurchases + 0.09149172977308 * 
S_NumDistPurchases + 0.1286379510771 * S_NumStorePurchases + 0.04601789983748 * 
S_NumWebPurchases + -0.21551517718316 * S_NumWebVisitsMonth + -0.05297005877428 * S_RFMstat + 
0.30037503125852 * S_Recency + 0.04585774296716 * S_Teenhome ;
671074    +   H11  = H11  +     0.19703919058259 * AcceptedCmp10
671075    +          +     0.17114050759001 * AcceptedCmp20  +     0.20648038431009 *
671076    +        AcceptedCmp30  +     0.19476699920944 * AcceptedCmp40
671077    +          +     0.26437935662252 * AcceptedCmp50  +    -0.03285342631116 *
671078    +        Complain0  +     0.02557620526354 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.19703919058259 * AcceptedCmp10 + 0.17114050759001 * 
AcceptedCmp20 + 0.20648038431009 * AcceptedCmp30 + 0.19476699920944 * AcceptedCmp40 + 
0.26437935662252 * AcceptedCmp50 + -0.03285342631116 * Complain0 + 0.02557620526354 * 
HigherEducationBinary0 ;
671079    +   H11  =    -0.45597910153862 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.45597910153862 + H11 ;
671080    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
671081    +END;
MPRINT(EM_DIAGRAM):   END;
671082    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
671083    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
671084    +END;
MPRINT(EM_DIAGRAM):   END;
671085    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
671086    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
671087    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
671088    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
671089    +   P_DepVar1  =    -8.59083580950057 * H11 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -8.59083580950057 * H11 ;
671090    +   P_DepVar1  =    -1.22832072210597 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.22832072210597 + P_DepVar1 ;
671091    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
671092    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
671093    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
671094    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
671095    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
671096    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
671097    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
671098    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
671099    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
671100    +END;
MPRINT(EM_DIAGRAM):   END;
671101    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
671102    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
671103    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
671104    +END;
MPRINT(EM_DIAGRAM):   END;
671105    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
671106    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
671107    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
671108    +END;
MPRINT(EM_DIAGRAM):   END;
671109    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
671110    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
671111    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
671112    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
671113    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
671114    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
671115    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
671116    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
671117    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
671118    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
671119    +END;
MPRINT(EM_DIAGRAM):   END;
671120    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
671121    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
671122    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
671123    +drop
671124    +H11
671125    +;
MPRINT(EM_DIAGRAM):   drop H11 ;
671126    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
671127     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
671128     quit;
671129     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
671130     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
671131     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
671132     retain ID 2 Node "Neural";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural";
671133     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
671134     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1321 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1321 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

671135     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
671136     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
671137     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1321 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1321 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

671138     proc sort data=EMWS8.Neural_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural_variableset out=_temp2(keep=NAME CREATOR);
671139     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
671140     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.NEURAL_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

671141     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
671142     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
671143     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
671144     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

671145     proc contents data=EMWS8.Neural_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural_train out=_meta(keep=NAME) noprint;
671146     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

671147     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
671148     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
671149     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

671150     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
671151     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
671152     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
671153     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

671154     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
671155     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
671155   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 876 rows and 5 columns.

671156     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

671157     proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
671158     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 876 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL_FCMP has 876 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

671159     filename _pref
671159   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
671160     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
671161     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
671162    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
671163    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
671164    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
671165    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
671166    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
671167    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
671168     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
671169     quit;
671170     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
671171     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
671172     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
671173     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
671174     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
671175     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

671176     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
671177     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
671178     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

671179     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
671180     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
671181     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

671182     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
671183     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
671184     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
671185     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

671186     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
671187     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

671188     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
671189     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
671190     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

671191     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
671192     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
671193     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
671194     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

671195     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
671196     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
671196   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

671197     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

671198     proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
671199     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL_FCMP has 880 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

671200     filename _pref
671200   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
671201     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
671202     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
671203    +
671204    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
671205    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
671205   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
671206    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
671207    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
671208    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
671209    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
671210    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
671211     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
671212     quit;
671213     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
671214     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
671215     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
671216     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
671217     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
671218     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

671219     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
671220     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
671221     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

671222     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
671223     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
671224     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

671225     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
671226     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
671227     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
671228     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

671229     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
671230     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

671231     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
671232     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
671233     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

671234     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
671235     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
671236     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
671237     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

671238     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
671239     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
671239   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

671240     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

671241     proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
671242     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL_FCMP has 919 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

671243     filename _pref
671243   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
671244     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
671245     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
671246    +
671247    +
671248    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
671249    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
671250    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
671251    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
671252    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
671253    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
671254    +
671255    +
671256    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
671257    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
671258    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
671259    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
671260    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
671261    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
671262    +
671263    +
671264    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
671265    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
671266    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
671267    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
671268    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
671269    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
671270    +
671271    +
671272    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
671273    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
671274    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
671275    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
671276    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
671277    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
671278    +
671279    +
671280    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
671281    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
671282    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
671283    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
671284    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
671285    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
671286    +
671287    +
671288    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
671289    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
671290    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
671291    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
671292    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
671293    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
671294    +
671295    +
671296    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
671297    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
671298    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
671299    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
671300    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
671301    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
671302    +
671303    +
671304    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
671305    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
671306    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
671307    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
671308    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
671309    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
671310    +if
671311    +_FILTERNORM1 not in ( '.')
671312    + and
671313    +_FILTERNORM2 not in ( '.')
671314    + and
671315    +_FILTERNORM3 not in ( '.')
671316    + and
671317    +_FILTERNORM4 not in ( '.')
671318    + and
671319    +_FILTERNORM5 not in ( '.')
671320    + and
671321    +_FILTERNORM6 not in ( '.')
671322    + and
671323    +_FILTERNORM7 not in ( ' ')
671324    + and
671325    +_FILTERNORM8 not in ( ' ')
671326    +and
671327    +( Dt_Customer ne .)
671328    +and ( Income ne . and (Income<=107000))
671329    +and ( Kidhome ne .)
671330    +and ( MntFishProducts ne .)
671331    +and ( MntFruits ne .)
671332    +and ( MntGoldProds ne .)
671333    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
671334    +and ( MntSweetProducts ne .)
671335    +and ( MntWines ne .)
671336    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
671337    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
671338    +and ( NumStorePurchases ne .)
671339    +and ( NumWebPurchases ne .)
671340    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
671341    +and ( Recency ne .)
671342    +and ( Teenhome ne .)
671343    +and ( Year_Birth ne .)
671344    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
671345    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
671346    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
671347    +end;
MPRINT(EM_DIAGRAM):   end;
671348    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
671349    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
671350     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
671351     quit;
671352     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
671353     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
671354     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
671355     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
671356     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
671357     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

671358     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
671359     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
671360     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

671361     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
671362     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
671363     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

671364     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
671365     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
671366     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
671367     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

671368     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
671369     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

671370     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
671371     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
671372     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

671373     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
671374     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
671375     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
671376     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

671377     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
671378     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
671378   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

671379     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

671380     proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
671381     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL_FCMP has 985 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

671382     %macro varDept(fcmpdata=,id=);
671383     %global nobs&id scoreFlag&id;
671384     %let scoreFlag&id = 0;
671385     %if &id=1 or ^&fcmpStart %then %do;
671386     proc sort data=&fcmpdata out=_temp&id nodupkey;
671387     by NAME;
671388     where id=&id and LHS in( %let j=1;
671389     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
671390     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
671391     "&var" %let j = %eval(&j+1);
671392     %end;
671393     );
671394     run;
671395     %let dsid = %sysfunc(open(_temp&id));
671396     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
671397     %let dsid = %sysfunc(close(&dsid));
671398     %if &&nobs&id %then %do;
671399     %let scoreFlag&id = 1;
671400     %let fcmpStart = 1;
671401     %end;
671402     %else %let fcmpStart = 0;
671403     %end;
671404     %else %do;
671405     proc sort data=&fcmpdata out=_tempid;
671406     where id=&id;
671407     by LHS;
671408     run;
671409     %let dsid = %sysfunc(open(_tempid));
671410     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
671411     %let dsid = %sysfunc(close(&dsid));
671412     %if ^&&nobs&id %then %do;
671413     proc datasets lib=work nolist;
671414     delete _tempid;
671415     run;
671416     quit;
671417     %end;
671418     %else %do;
671419     data _tempAll;
671420     set %let j=%eval(&id-1);
671421     %do x=1 %to &j;
671422     %if &&nobs&x %then %do;
671423     _temp&x %end;
671424     %end;
671425     ;
671426     run;
671427     proc sql;
671428     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
671428   ! work._tempid p2 where p.name=p2.lhs;
671429     quit;
671430     data _temp&id;
671431     set _temp&id;
671432     where LHS ne '' and NAME ne '' and Node ne '';
671433     run;
671434     proc datasets lib=work nolist;
671435     delete _tempAll;
671436     run;
671437     %let dsid = %sysfunc(open(_temp&id));
671438     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
671439     %let dsid = %sysfunc(close(&dsid));
671440     %if ^&&nobs&id %then %do;
671441     proc datasets lib=work nolist;
671442     delete _temp&id;
671443     run;
671444     quit;
671445     %end;
671446     %else %do;
671447     %let scoreFlag&id = 1;
671448     data _temp&id;
671449     set _temp&id;
671450     where LHS ne NAME and node ne '';
671451     run;
671452     %let dsid = %sysfunc(open(_temp&id));
671453     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
671454     %let dsid = %sysfunc(close(&dsid));
671455     %if ^&&nobs&id %then %do;
671456     proc datasets lib=work nolist;
671457     delete _temp&id;
671458     run;
671459     quit;
671460     %end;
671461     %else %do;
671462     proc sort data=_temp&id nodupkey;
671463     by LHS NAME;
671464     run;
671465     %end;
671466     %end;
671467     %end;
671468     %end;
671469     %mend varDept;
671470     %macro optCode(outdata=fcmpdata);
671471     %global fcmpStart;
671472     %let fcmpStart = 0;
671473     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
671474     %let NumNodes=9;
671475     %do k=1 %to &NumNodes;
671476     %vardept(fcmpdata=&outdata, id=&k);
671477     %end;
671478     %mend optCode;
671479     %optcode(outData=EMWS8.Ensmbl_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 106 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 79 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 27 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 27 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 3 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 3 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 3 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 3 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 3 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 30 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 24 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 24 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 24 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 24 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 24 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 24 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 24 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 3 observations read from the data set WORK._TEMP5.
NOTE: There were 24 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 54 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

671480     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
671481     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
671482     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
671483     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

671484     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
671485     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
671486     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
671487     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

671488     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
671489     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
671489   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 3 rows and 3 columns.

671490     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

671491     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
671492     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
671493     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 3 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 3 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

671494     filename _pref
671494   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural2\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural2\EMPUBLISHSCORE.sas";
671495     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
671496     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural2\EMPUBLISHSCORE.sas.
671497    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
671498    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
671499    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
671500    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
671501    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
671502    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
671503    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
671504    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
671505    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
671506    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
671507    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
671508    +LENGTH _WARN_ $4
671509    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
671510    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
671511    +
671512    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
671513    +
671514    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
671515    +
671516    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
671517    +
671518    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
671519    +
671520    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
671521    +
671522    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
671523    +
671524    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
671525    +
671526    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
671527    +
671528    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
671529    +
671530    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
671531    +
671532    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
671533    +
671534    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
671535    +
671536    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
671537    +
671538    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
671539    +
671540    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
671541    +
671542    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
671543    +
671544    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
671545    +
671546    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
671547    +
671548    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
671549    +
671550    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
671551    +
671552    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
671553    +
671554    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
671555    +
671556    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
671557    +
671558    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
671559    +
671560    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
671561    +
671562    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
671563    +
671564    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
671565    +
671566    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
671567    +
671568    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
671569    +
671570    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
671571    +
671572    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
671573    +
671574    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
671575    +
671576    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
671577    +
671578    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
671579    +
671580    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
671581    +
671582    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
671583    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
671584    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
671585    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
671586    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
671587    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
671588    +end;
MPRINT(EM_DIAGRAM):   end;
671589    +else do;
MPRINT(EM_DIAGRAM):   else do;
671590    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
671591    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
671592    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
671593    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
671594    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
671595    +   end;
MPRINT(EM_DIAGRAM):   end;
671596    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
671597    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
671598    +   end;
MPRINT(EM_DIAGRAM):   end;
671599    +   else do;
MPRINT(EM_DIAGRAM):   else do;
671600    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
671601    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
671602    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
671603    +   end;
MPRINT(EM_DIAGRAM):   end;
671604    +end;
MPRINT(EM_DIAGRAM):   end;
671605    +
671606    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
671607    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
671608    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
671609    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
671610    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
671611    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
671612    +end;
MPRINT(EM_DIAGRAM):   end;
671613    +else do;
MPRINT(EM_DIAGRAM):   else do;
671614    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
671615    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
671616    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
671617    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
671618    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
671619    +   end;
MPRINT(EM_DIAGRAM):   end;
671620    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
671621    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
671622    +   end;
MPRINT(EM_DIAGRAM):   end;
671623    +   else do;
MPRINT(EM_DIAGRAM):   else do;
671624    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
671625    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
671626    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
671627    +   end;
MPRINT(EM_DIAGRAM):   end;
671628    +end;
MPRINT(EM_DIAGRAM):   end;
671629    +
671630    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
671631    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
671632    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
671633    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
671634    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
671635    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
671636    +end;
MPRINT(EM_DIAGRAM):   end;
671637    +else do;
MPRINT(EM_DIAGRAM):   else do;
671638    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
671639    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
671640    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
671641    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
671642    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
671643    +   end;
MPRINT(EM_DIAGRAM):   end;
671644    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
671645    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
671646    +   end;
MPRINT(EM_DIAGRAM):   end;
671647    +   else do;
MPRINT(EM_DIAGRAM):   else do;
671648    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
671649    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
671650    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
671651    +   end;
MPRINT(EM_DIAGRAM):   end;
671652    +end;
MPRINT(EM_DIAGRAM):   end;
671653    +
671654    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
671655    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
671656    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
671657    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
671658    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
671659    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
671660    +end;
MPRINT(EM_DIAGRAM):   end;
671661    +else do;
MPRINT(EM_DIAGRAM):   else do;
671662    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
671663    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
671664    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
671665    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
671666    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
671667    +   end;
MPRINT(EM_DIAGRAM):   end;
671668    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
671669    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
671670    +   end;
MPRINT(EM_DIAGRAM):   end;
671671    +   else do;
MPRINT(EM_DIAGRAM):   else do;
671672    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
671673    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
671674    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
671675    +   end;
MPRINT(EM_DIAGRAM):   end;
671676    +end;
MPRINT(EM_DIAGRAM):   end;
671677    +
671678    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
671679    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
671680    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
671681    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
671682    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
671683    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
671684    +end;
MPRINT(EM_DIAGRAM):   end;
671685    +else do;
MPRINT(EM_DIAGRAM):   else do;
671686    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
671687    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
671688    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
671689    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
671690    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
671691    +   end;
MPRINT(EM_DIAGRAM):   end;
671692    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
671693    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
671694    +   end;
MPRINT(EM_DIAGRAM):   end;
671695    +   else do;
MPRINT(EM_DIAGRAM):   else do;
671696    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
671697    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
671698    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
671699    +   end;
MPRINT(EM_DIAGRAM):   end;
671700    +end;
MPRINT(EM_DIAGRAM):   end;
671701    +
671702    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
671703    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
671704    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
671705    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
671706    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
671707    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
671708    +end;
MPRINT(EM_DIAGRAM):   end;
671709    +else do;
MPRINT(EM_DIAGRAM):   else do;
671710    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
671711    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
671712    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
671713    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
671714    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
671715    +   end;
MPRINT(EM_DIAGRAM):   end;
671716    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
671717    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
671718    +   end;
MPRINT(EM_DIAGRAM):   end;
671719    +   else do;
MPRINT(EM_DIAGRAM):   else do;
671720    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
671721    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
671722    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
671723    +   end;
MPRINT(EM_DIAGRAM):   end;
671724    +end;
MPRINT(EM_DIAGRAM):   end;
671725    +
671726    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
671727    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
671728    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
671729    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
671730    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
671731    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
671732    +end;
MPRINT(EM_DIAGRAM):   end;
671733    +else do;
MPRINT(EM_DIAGRAM):   else do;
671734    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
671735    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
671736    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
671737    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
671738    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
671739    +   end;
MPRINT(EM_DIAGRAM):   end;
671740    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
671741    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
671742    +   end;
MPRINT(EM_DIAGRAM):   end;
671743    +   else do;
MPRINT(EM_DIAGRAM):   else do;
671744    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
671745    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
671746    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
671747    +   end;
MPRINT(EM_DIAGRAM):   end;
671748    +end;
MPRINT(EM_DIAGRAM):   end;
671749    +
671750    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
671751    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
671752    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
671753    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
671754    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
671755    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
671756    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
671757    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
671758    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
671759    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
671760    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
671761    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
671762    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
671763    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
671764    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
671765    +end;
MPRINT(EM_DIAGRAM):   end;
671766    +else do;
MPRINT(EM_DIAGRAM):   else do;
671767    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
671768    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
671769    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
671770    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
671771    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
671772    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
671773    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
671774    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
671775    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
671776    +         end;
MPRINT(EM_DIAGRAM):   end;
671777    +         else do;
MPRINT(EM_DIAGRAM):   else do;
671778    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
671779    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
671780    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
671781    +            end;
MPRINT(EM_DIAGRAM):   end;
671782    +         end;
MPRINT(EM_DIAGRAM):   end;
671783    +      end;
MPRINT(EM_DIAGRAM):   end;
671784    +      else do;
MPRINT(EM_DIAGRAM):   else do;
671785    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
671786    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
671787    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
671788    +         end;
MPRINT(EM_DIAGRAM):   end;
671789    +      end;
MPRINT(EM_DIAGRAM):   end;
671790    +   end;
MPRINT(EM_DIAGRAM):   end;
671791    +   else do;
MPRINT(EM_DIAGRAM):   else do;
671792    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
671793    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
671794    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
671795    +      end;
MPRINT(EM_DIAGRAM):   end;
671796    +      else do;
MPRINT(EM_DIAGRAM):   else do;
671797    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
671798    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
671799    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
671800    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
671801    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
671802    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
671803    +         end;
MPRINT(EM_DIAGRAM):   end;
671804    +      end;
MPRINT(EM_DIAGRAM):   end;
671805    +   end;
MPRINT(EM_DIAGRAM):   end;
671806    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
671807    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
671808    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
671809    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
671810    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
671811    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
671812    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
671813    +   end;
MPRINT(EM_DIAGRAM):   end;
671814    +end;
MPRINT(EM_DIAGRAM):   end;
671815    +
671816    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
671817    +*** Checking missing input Interval
671818    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
671819    +
671820    +IF NMISS(
671821    +   AcceptedCmpTotal ,
671822    +   Kidhome ,
671823    +   Mnt ,
671824    +   MntFishProducts ,
671825    +   MntFruits ,
671826    +   MntGoldProds ,
671827    +   MntMeatProducts ,
671828    +   MntSweetProducts ,
671829    +   MntWines ,
671830    +   NumCatalogPurchases ,
671831    +   NumDealsPurchases ,
671832    +   NumDistPurchases ,
671833    +   NumStorePurchases ,
671834    +   NumWebPurchases ,
671835    +   NumWebVisitsMonth ,
671836    +   RFMstat ,
671837    +   Recency ,
671838    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Kidhome , Mnt , MntFishProducts , MntFruits 
, MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , 
NumDealsPurchases , NumDistPurchases , NumStorePurchases , NumWebPurchases , NumWebVisitsMonth 
, RFMstat , Recency , Teenhome ) THEN DO;
671839    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
671840    +
671841    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
671842    +END;
MPRINT(EM_DIAGRAM):   END;
671843    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
671844    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
671845    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
671846    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
671847    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
671848    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
671849    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
671850    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
671851    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
671852    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
671853    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
671854    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
671855    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
671856    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
671857    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
671858    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
671859    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
671860    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
671861    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
671862    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
671863    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
671864    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
671865    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
671866    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
671867    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
671868    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
671869    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
671870    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
671871    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
671872    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
671873    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
671874    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
671875    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
671876    +END;
MPRINT(EM_DIAGRAM):   END;
671877    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
671878    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
671879    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
671880    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
671881    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
671882    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
671883    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
671884    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
671885    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
671886    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
671887    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
671888    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
671889    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
671890    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
671891    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
671892    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
671893    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
671894    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
671895    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
671896    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
671897    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
671898    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
671899    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
671900    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
671901    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
671902    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
671903    +   ELSE S_NumCatalogPurchases
671904    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
671905    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
671906    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
671907    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
671908    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
671909    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
671910    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
671911    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
671912    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
671913    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
671914    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
671915    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
671916    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
671917    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
671918    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
671919    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
671920    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
671921    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
671922    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
671923    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
671924    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
671925    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
671926    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
671927    +END;
MPRINT(EM_DIAGRAM):   END;
671928    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
671929    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
671930    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
671931    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
671932    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
671933    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
671934    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
671935    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
671936    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
671937    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
671938    +   H11  =     1.01101276887315 * S_AcceptedCmpTotal  +     0.13088206386642 *
671939    +        S_Kidhome  +     0.44144124105344 * S_Mnt  +    -0.68904392437475 *
671940    +        S_MntFishProducts  +    -0.17121585659716 * S_MntFruits
671941    +          +     0.11335785908498 * S_MntGoldProds  +      2.7693787644231 *
671942    +        S_MntMeatProducts  +     0.05508921126989 * S_MntSweetProducts
671943    +          +    -0.84963149161721 * S_MntWines  +     0.93831643366323 *
671944    +        S_NumCatalogPurchases  +     0.61100213741284 * S_NumDealsPurchases
671945    +          +     0.02505564750154 * S_NumDistPurchases
671946    +          +    -0.68813734794561 * S_NumStorePurchases
671947    +          +    -0.70997870192497 * S_NumWebPurchases
671948    +          +     0.29587693128027 * S_NumWebVisitsMonth
671949    +          +     0.78508541462113 * S_RFMstat  +     -0.3308883600476 *
671950    +        S_Recency  +    -0.00325917604837 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 1.01101276887315 * S_AcceptedCmpTotal + 0.13088206386642 * 
S_Kidhome + 0.44144124105344 * S_Mnt + -0.68904392437475 * S_MntFishProducts + 
-0.17121585659716 * S_MntFruits + 0.11335785908498 * S_MntGoldProds + 2.7693787644231 * 
S_MntMeatProducts + 0.05508921126989 * S_MntSweetProducts + -0.84963149161721 * S_MntWines + 
0.93831643366323 * S_NumCatalogPurchases + 0.61100213741284 * S_NumDealsPurchases + 
0.02505564750154 * S_NumDistPurchases + -0.68813734794561 * S_NumStorePurchases + 
-0.70997870192497 * S_NumWebPurchases + 0.29587693128027 * S_NumWebVisitsMonth + 
0.78508541462113 * S_RFMstat + -0.3308883600476 * S_Recency + -0.00325917604837 * S_Teenhome ;
671951    +   H12  =    -0.52436299608191 * S_AcceptedCmpTotal  +     0.27198236309079 *
671952    +        S_Kidhome  +     0.16271772923493 * S_Mnt  +     0.09777129448709 *
671953    +        S_MntFishProducts  +     0.08286856142975 * S_MntFruits
671954    +          +     0.01382699665825 * S_MntGoldProds  +    -0.64717980145363 *
671955    +        S_MntMeatProducts  +     0.05864522802919 * S_MntSweetProducts
671956    +          +     0.48084041085358 * S_MntWines  +    -0.54710128323244 *
671957    +        S_NumCatalogPurchases  +    -0.13512538901701 * S_NumDealsPurchases
671958    +          +     0.06434299218856 * S_NumDistPurchases
671959    +          +     0.42712319617209 * S_NumStorePurchases
671960    +          +     0.31123207604233 * S_NumWebPurchases
671961    +          +    -1.01860201337102 * S_NumWebVisitsMonth
671962    +          +    -0.03004351543086 * S_RFMstat  +      1.1539132835032 *
671963    +        S_Recency  +     0.26483130659279 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.52436299608191 * S_AcceptedCmpTotal + 0.27198236309079 * 
S_Kidhome + 0.16271772923493 * S_Mnt + 0.09777129448709 * S_MntFishProducts + 0.08286856142975 
* S_MntFruits + 0.01382699665825 * S_MntGoldProds + -0.64717980145363 * S_MntMeatProducts + 
0.05864522802919 * S_MntSweetProducts + 0.48084041085358 * S_MntWines + -0.54710128323244 * 
S_NumCatalogPurchases + -0.13512538901701 * S_NumDealsPurchases + 0.06434299218856 * 
S_NumDistPurchases + 0.42712319617209 * S_NumStorePurchases + 0.31123207604233 * 
S_NumWebPurchases + -1.01860201337102 * S_NumWebVisitsMonth + -0.03004351543086 * S_RFMstat + 
1.1539132835032 * S_Recency + 0.26483130659279 * S_Teenhome ;
671964    +   H11  = H11  +    -0.30089946733563 * AcceptedCmp10
671965    +          +     0.33352940500449 * AcceptedCmp20  +     0.57640754092947 *
671966    +        AcceptedCmp30  +     0.43007791062186 * AcceptedCmp40
671967    +          +    -0.97559596081103 * AcceptedCmp50  +      -0.156153798165 *
671968    +        Complain0  +    -0.08163020130832 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.30089946733563 * AcceptedCmp10 + 0.33352940500449 * 
AcceptedCmp20 + 0.57640754092947 * AcceptedCmp30 + 0.43007791062186 * AcceptedCmp40 + 
-0.97559596081103 * AcceptedCmp50 + -0.156153798165 * Complain0 + -0.08163020130832 * 
HigherEducationBinary0 ;
671969    +   H12  = H12  +     0.08049893192691 * AcceptedCmp10
671970    +          +     0.08395178819383 * AcceptedCmp20  +     0.11982414653687 *
671971    +        AcceptedCmp30  +     0.13126623447029 * AcceptedCmp40
671972    +          +      0.3326649980497 * AcceptedCmp50  +    -0.03185471588077 *
671973    +        Complain0  +     0.08220343686165 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.08049893192691 * AcceptedCmp10 + 0.08395178819383 * 
AcceptedCmp20 + 0.11982414653687 * AcceptedCmp30 + 0.13126623447029 * AcceptedCmp40 + 
0.3326649980497 * AcceptedCmp50 + -0.03185471588077 * Complain0 + 0.08220343686165 * 
HigherEducationBinary0 ;
671974    +   H11  = H11  +    -0.24837156257202 * Marital_StatusDivorced
671975    +          +     0.31380389607446 * Marital_StatusMarried
671976    +          +    -0.11994840163803 * Marital_StatusSingle
671977    +          +     0.30069256789445 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.24837156257202 * Marital_StatusDivorced + 
0.31380389607446 * Marital_StatusMarried + -0.11994840163803 * Marital_StatusSingle + 
0.30069256789445 * Marital_StatusTogether ;
671978    +   H12  = H12  +    -0.41749658642963 * Marital_StatusDivorced
671979    +          +     0.72506125430191 * Marital_StatusMarried
671980    +          +    -0.54747054981285 * Marital_StatusSingle
671981    +          +     0.89421218316246 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.41749658642963 * Marital_StatusDivorced + 
0.72506125430191 * Marital_StatusMarried + -0.54747054981285 * Marital_StatusSingle + 
0.89421218316246 * Marital_StatusTogether ;
671982    +   H11  =     0.50192687520529 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.50192687520529 + H11 ;
671983    +   H12  =     0.17708947264117 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.17708947264117 + H12 ;
671984    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
671985    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
671986    +END;
MPRINT(EM_DIAGRAM):   END;
671987    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
671988    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
671989    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
671990    +END;
MPRINT(EM_DIAGRAM):   END;
671991    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
671992    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
671993    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
671994    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
671995    +   P_DepVar1  =     4.38180289637299 * H11  +    -4.42967128560878 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.38180289637299 * H11 + -4.42967128560878 * H12 ;
671996    +   P_DepVar1  =    -3.75681581527016 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.75681581527016 + P_DepVar1 ;
671997    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
671998    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
671999    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
672000    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
672001    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
672002    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
672003    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
672004    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
672005    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
672006    +END;
MPRINT(EM_DIAGRAM):   END;
672007    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
672008    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
672009    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
672010    +END;
MPRINT(EM_DIAGRAM):   END;
672011    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
672012    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
672013    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
672014    +END;
MPRINT(EM_DIAGRAM):   END;
672015    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
672016    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
672017    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
672018    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
672019    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
672020    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
672021    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
672022    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
672023    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
672024    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
672025    +END;
MPRINT(EM_DIAGRAM):   END;
672026    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
672027    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
672028    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
672029    +drop
672030    +H11
672031    +H12
672032    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
672033    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
672034     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
672035     quit;
672036     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
672037     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
672038     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
672039     retain ID 2 Node "Neural2";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural2";
672040     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
672041     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1622 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1622 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

672042     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
672043     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
672044     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1622 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1622 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

672045     proc sort data=EMWS8.Neural2_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural2_variableset out=_temp2(keep=NAME CREATOR);
672046     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
672047     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.NEURAL2_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

672048     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
672049     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
672050     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
672051     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

672052     proc contents data=EMWS8.Neural2_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural2_train out=_meta(keep=NAME) noprint;
672053     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

672054     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
672055     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
672056     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

672057     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
672058     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
672059     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
672060     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

672061     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
672062     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
672062   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 966 rows and 5 columns.

672063     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

672064     proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
672065     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 966 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL_FCMP has 966 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

672066     filename _pref
672066   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
672067     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
The SAS System

MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
672068     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
672069    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
672070    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
672071    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
672072    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
672073    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
672074    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
672075     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
672076     quit;
672077     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
672078     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
672079     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
672080     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
672081     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
672082     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

672083     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
672084     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
672085     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

672086     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
672087     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
672088     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

672089     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
672090     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
672091     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
672092     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

672093     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
672094     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

672095     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
672096     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
672097     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

672098     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
672099     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
672100     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
672101     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

672102     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
672103     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
672103   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

672104     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

672105     proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
672106     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL_FCMP has 970 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

672107     filename _pref
672107   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
672108     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
672109     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
672110    +
672111    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
672112    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
672112   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
672113    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
672114    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
672115    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
672116    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
672117    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
672118     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
672119     quit;
672120     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
672121     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
672122     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
672123     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
672124     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
672125     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

672126     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
672127     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
672128     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

672129     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
672130     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
672131     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

672132     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
672133     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
672134     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
672135     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

672136     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
672137     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

672138     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
672139     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
672140     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

672141     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
672142     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
672143     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
672144     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

672145     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
672146     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
672146   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

672147     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

672148     proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
672149     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL_FCMP has 1009 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

672150     filename _pref
672150   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
672151     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
672152     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
672153    +
672154    +
672155    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
672156    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
672157    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
672158    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
672159    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
672160    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
672161    +
672162    +
672163    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
672164    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
672165    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
672166    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
672167    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
672168    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
672169    +
672170    +
672171    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
672172    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
672173    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
672174    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
672175    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
672176    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
672177    +
672178    +
672179    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
672180    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
672181    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
672182    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
672183    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
672184    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
672185    +
672186    +
672187    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
672188    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
672189    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
672190    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
672191    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
672192    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
672193    +
672194    +
672195    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
672196    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
672197    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
672198    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
672199    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
672200    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
672201    +
672202    +
672203    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
672204    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
672205    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
672206    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
672207    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
672208    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
672209    +
672210    +
672211    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
672212    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
672213    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
672214    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
672215    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
672216    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
672217    +if
672218    +_FILTERNORM1 not in ( '.')
672219    + and
672220    +_FILTERNORM2 not in ( '.')
672221    + and
672222    +_FILTERNORM3 not in ( '.')
672223    + and
672224    +_FILTERNORM4 not in ( '.')
672225    + and
672226    +_FILTERNORM5 not in ( '.')
672227    + and
672228    +_FILTERNORM6 not in ( '.')
672229    + and
672230    +_FILTERNORM7 not in ( ' ')
672231    + and
672232    +_FILTERNORM8 not in ( ' ')
672233    +and
672234    +( Dt_Customer ne .)
672235    +and ( Income ne . and (Income<=107000))
672236    +and ( Kidhome ne .)
672237    +and ( MntFishProducts ne .)
672238    +and ( MntFruits ne .)
672239    +and ( MntGoldProds ne .)
672240    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
672241    +and ( MntSweetProducts ne .)
672242    +and ( MntWines ne .)
672243    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
672244    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
672245    +and ( NumStorePurchases ne .)
672246    +and ( NumWebPurchases ne .)
672247    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
672248    +and ( Recency ne .)
672249    +and ( Teenhome ne .)
672250    +and ( Year_Birth ne .)
672251    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
672252    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
672253    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
672254    +end;
MPRINT(EM_DIAGRAM):   end;
672255    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
672256    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
672257     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
672258     quit;
672259     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
672260     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
672261     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
672262     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
672263     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
672264     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

672265     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
672266     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
672267     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

672268     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
672269     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
672270     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

672271     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
672272     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
672273     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
672274     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

672275     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
672276     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

672277     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
672278     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
672279     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

672280     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
672281     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
672282     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
672283     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

672284     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
672285     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
672285   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

672286     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

672287     proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
672288     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL_FCMP has 1075 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

672289     %macro varDept(fcmpdata=,id=);
672290     %global nobs&id scoreFlag&id;
672291     %let scoreFlag&id = 0;
672292     %if &id=1 or ^&fcmpStart %then %do;
672293     proc sort data=&fcmpdata out=_temp&id nodupkey;
672294     by NAME;
672295     where id=&id and LHS in( %let j=1;
672296     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
672297     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
672298     "&var" %let j = %eval(&j+1);
672299     %end;
672300     );
672301     run;
672302     %let dsid = %sysfunc(open(_temp&id));
672303     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
672304     %let dsid = %sysfunc(close(&dsid));
672305     %if &&nobs&id %then %do;
672306     %let scoreFlag&id = 1;
672307     %let fcmpStart = 1;
672308     %end;
672309     %else %let fcmpStart = 0;
672310     %end;
672311     %else %do;
672312     proc sort data=&fcmpdata out=_tempid;
672313     where id=&id;
672314     by LHS;
672315     run;
672316     %let dsid = %sysfunc(open(_tempid));
672317     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
672318     %let dsid = %sysfunc(close(&dsid));
672319     %if ^&&nobs&id %then %do;
672320     proc datasets lib=work nolist;
672321     delete _tempid;
672322     run;
672323     quit;
672324     %end;
672325     %else %do;
672326     data _tempAll;
672327     set %let j=%eval(&id-1);
672328     %do x=1 %to &j;
672329     %if &&nobs&x %then %do;
672330     _temp&x %end;
672331     %end;
672332     ;
672333     run;
672334     proc sql;
672335     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
672335   ! work._tempid p2 where p.name=p2.lhs;
672336     quit;
672337     data _temp&id;
672338     set _temp&id;
672339     where LHS ne '' and NAME ne '' and Node ne '';
672340     run;
672341     proc datasets lib=work nolist;
672342     delete _tempAll;
672343     run;
672344     %let dsid = %sysfunc(open(_temp&id));
672345     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
672346     %let dsid = %sysfunc(close(&dsid));
672347     %if ^&&nobs&id %then %do;
672348     proc datasets lib=work nolist;
672349     delete _temp&id;
672350     run;
672351     quit;
672352     %end;
672353     %else %do;
672354     %let scoreFlag&id = 1;
672355     data _temp&id;
672356     set _temp&id;
672357     where LHS ne NAME and node ne '';
672358     run;
672359     %let dsid = %sysfunc(open(_temp&id));
672360     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
672361     %let dsid = %sysfunc(close(&dsid));
672362     %if ^&&nobs&id %then %do;
672363     proc datasets lib=work nolist;
672364     delete _temp&id;
672365     run;
672366     quit;
672367     %end;
672368     %else %do;
672369     proc sort data=_temp&id nodupkey;
672370     by LHS NAME;
672371     run;
672372     %end;
672373     %end;
672374     %end;
672375     %end;
672376     %mend varDept;
672377     %macro optCode(outdata=fcmpdata);
672378     %global fcmpStart;
672379     %let fcmpStart = 0;
672380     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
672381     %let NumNodes=9;
672382     %do k=1 %to &NumNodes;
672383     %vardept(fcmpdata=&outdata, id=&k);
672384     %end;
672385     %mend optCode;
672386     %optcode(outData=EMWS8.Ensmbl_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 110 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 82 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 28 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 28 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 28 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 3 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 3 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 3 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 3 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 28 observations read from the data set WORK._TEMP2.
NOTE: There were 3 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 24 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 24 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 24 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 24 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 24 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 24 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 24 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 28 observations read from the data set WORK._TEMP2.
NOTE: There were 3 observations read from the data set WORK._TEMP5.
NOTE: There were 24 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 55 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

672387     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
672388     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
672389     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
672390     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

672391     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
672392     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
672393     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
672394     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

672395     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
672396     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
672396   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 3 rows and 3 columns.

672397     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

672398     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
672399     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
672400     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 3 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 3 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

672401     filename _pref
672401   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMPUBLISHSCORE.sas";
672402     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
672403     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMPUBLISHSCORE.sas.
672404    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
672405    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
672406    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
672407    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
672408    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
672409    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
672410    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
672411    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
672412    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
672413    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
672414    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
672415    +LENGTH _WARN_ $4
672416    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
672417    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
672418    +
672419    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
672420    +
672421    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
672422    +
672423    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
672424    +
672425    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
672426    +
672427    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
672428    +
672429    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
672430    +
672431    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
672432    +
672433    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
672434    +
672435    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
672436    +
672437    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
672438    +
672439    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
672440    +
672441    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
672442    +
672443    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
672444    +
672445    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
672446    +
672447    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
672448    +
672449    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
672450    +
672451    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
672452    +
672453    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
672454    +
672455    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
672456    +
672457    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
672458    +
672459    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
672460    +
672461    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
672462    +
672463    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
672464    +
672465    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
672466    +
672467    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
672468    +
672469    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
672470    +
672471    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
672472    +
672473    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
672474    +
672475    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
672476    +
672477    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
672478    +
672479    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
672480    +
672481    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
672482    +
672483    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
672484    +
672485    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
672486    +
672487    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
672488    +
672489    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
672490    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
672491    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
672492    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
672493    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
672494    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
672495    +end;
MPRINT(EM_DIAGRAM):   end;
672496    +else do;
MPRINT(EM_DIAGRAM):   else do;
672497    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
672498    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
672499    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
672500    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
672501    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
672502    +   end;
MPRINT(EM_DIAGRAM):   end;
672503    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
672504    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
672505    +   end;
MPRINT(EM_DIAGRAM):   end;
672506    +   else do;
MPRINT(EM_DIAGRAM):   else do;
672507    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
672508    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
672509    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
672510    +   end;
MPRINT(EM_DIAGRAM):   end;
672511    +end;
MPRINT(EM_DIAGRAM):   end;
672512    +
672513    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
672514    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
672515    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
672516    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
672517    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
672518    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
672519    +end;
MPRINT(EM_DIAGRAM):   end;
672520    +else do;
MPRINT(EM_DIAGRAM):   else do;
672521    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
672522    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
672523    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
672524    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
672525    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
672526    +   end;
MPRINT(EM_DIAGRAM):   end;
672527    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
672528    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
672529    +   end;
MPRINT(EM_DIAGRAM):   end;
672530    +   else do;
MPRINT(EM_DIAGRAM):   else do;
672531    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
672532    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
672533    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
672534    +   end;
MPRINT(EM_DIAGRAM):   end;
672535    +end;
MPRINT(EM_DIAGRAM):   end;
672536    +
672537    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
672538    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
672539    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
672540    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
672541    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
672542    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
672543    +end;
MPRINT(EM_DIAGRAM):   end;
672544    +else do;
MPRINT(EM_DIAGRAM):   else do;
672545    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
672546    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
672547    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
672548    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
672549    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
672550    +   end;
MPRINT(EM_DIAGRAM):   end;
672551    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
672552    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
672553    +   end;
MPRINT(EM_DIAGRAM):   end;
672554    +   else do;
MPRINT(EM_DIAGRAM):   else do;
672555    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
672556    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
672557    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
672558    +   end;
MPRINT(EM_DIAGRAM):   end;
672559    +end;
MPRINT(EM_DIAGRAM):   end;
672560    +
672561    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
672562    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
672563    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
672564    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
672565    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
672566    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
672567    +end;
MPRINT(EM_DIAGRAM):   end;
672568    +else do;
MPRINT(EM_DIAGRAM):   else do;
672569    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
672570    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
672571    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
672572    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
672573    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
672574    +   end;
MPRINT(EM_DIAGRAM):   end;
672575    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
672576    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
672577    +   end;
MPRINT(EM_DIAGRAM):   end;
672578    +   else do;
MPRINT(EM_DIAGRAM):   else do;
672579    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
672580    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
672581    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
672582    +   end;
MPRINT(EM_DIAGRAM):   end;
672583    +end;
MPRINT(EM_DIAGRAM):   end;
672584    +
672585    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
672586    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
672587    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
672588    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
672589    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
672590    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
672591    +end;
MPRINT(EM_DIAGRAM):   end;
672592    +else do;
MPRINT(EM_DIAGRAM):   else do;
672593    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
672594    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
672595    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
672596    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
672597    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
672598    +   end;
MPRINT(EM_DIAGRAM):   end;
672599    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
672600    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
672601    +   end;
MPRINT(EM_DIAGRAM):   end;
672602    +   else do;
MPRINT(EM_DIAGRAM):   else do;
672603    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
672604    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
672605    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
672606    +   end;
MPRINT(EM_DIAGRAM):   end;
672607    +end;
MPRINT(EM_DIAGRAM):   end;
672608    +
672609    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
672610    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
672611    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
672612    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
672613    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
672614    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
672615    +end;
MPRINT(EM_DIAGRAM):   end;
672616    +else do;
MPRINT(EM_DIAGRAM):   else do;
672617    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
672618    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
672619    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
672620    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
672621    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
672622    +   end;
MPRINT(EM_DIAGRAM):   end;
672623    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
672624    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
672625    +   end;
MPRINT(EM_DIAGRAM):   end;
672626    +   else do;
MPRINT(EM_DIAGRAM):   else do;
672627    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
672628    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
672629    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
672630    +   end;
MPRINT(EM_DIAGRAM):   end;
672631    +end;
MPRINT(EM_DIAGRAM):   end;
672632    +
672633    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
672634    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
672635    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
672636    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
672637    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
672638    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
672639    +end;
MPRINT(EM_DIAGRAM):   end;
672640    +else do;
MPRINT(EM_DIAGRAM):   else do;
672641    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
672642    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
672643    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
672644    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
672645    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
672646    +   end;
MPRINT(EM_DIAGRAM):   end;
672647    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
672648    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
672649    +   end;
MPRINT(EM_DIAGRAM):   end;
672650    +   else do;
MPRINT(EM_DIAGRAM):   else do;
672651    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
672652    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
672653    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
672654    +   end;
MPRINT(EM_DIAGRAM):   end;
672655    +end;
MPRINT(EM_DIAGRAM):   end;
672656    +
672657    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
672658    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
672659    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
672660    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
672661    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
672662    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
672663    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
672664    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
672665    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
672666    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
672667    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
672668    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
672669    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
672670    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
672671    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
672672    +end;
MPRINT(EM_DIAGRAM):   end;
672673    +else do;
MPRINT(EM_DIAGRAM):   else do;
672674    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
672675    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
672676    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
672677    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
672678    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
672679    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
672680    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
672681    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
672682    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
672683    +         end;
MPRINT(EM_DIAGRAM):   end;
672684    +         else do;
MPRINT(EM_DIAGRAM):   else do;
672685    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
672686    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
672687    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
672688    +            end;
MPRINT(EM_DIAGRAM):   end;
672689    +         end;
MPRINT(EM_DIAGRAM):   end;
672690    +      end;
MPRINT(EM_DIAGRAM):   end;
672691    +      else do;
MPRINT(EM_DIAGRAM):   else do;
672692    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
672693    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
672694    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
672695    +         end;
MPRINT(EM_DIAGRAM):   end;
672696    +      end;
MPRINT(EM_DIAGRAM):   end;
672697    +   end;
MPRINT(EM_DIAGRAM):   end;
672698    +   else do;
MPRINT(EM_DIAGRAM):   else do;
672699    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
672700    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
672701    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
672702    +      end;
MPRINT(EM_DIAGRAM):   end;
672703    +      else do;
MPRINT(EM_DIAGRAM):   else do;
672704    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
672705    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
672706    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
672707    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
672708    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
672709    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
672710    +         end;
MPRINT(EM_DIAGRAM):   end;
672711    +      end;
MPRINT(EM_DIAGRAM):   end;
672712    +   end;
MPRINT(EM_DIAGRAM):   end;
672713    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
672714    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
672715    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
672716    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
672717    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
672718    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
672719    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
672720    +   end;
MPRINT(EM_DIAGRAM):   end;
672721    +end;
MPRINT(EM_DIAGRAM):   end;
672722    +
672723    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
672724    +*** Checking missing input Interval
672725    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
672726    +
672727    +IF NMISS(
672728    +   AcceptedCmpTotal ,
672729    +   Kidhome ,
672730    +   Mnt ,
672731    +   MntFishProducts ,
672732    +   MntFruits ,
672733    +   MntGoldProds ,
672734    +   MntMeatProducts ,
672735    +   MntSweetProducts ,
672736    +   MntWines ,
672737    +   NumCatalogPurchases ,
672738    +   NumDealsPurchases ,
672739    +   NumDistPurchases ,
672740    +   NumStorePurchases ,
672741    +   NumWebPurchases ,
672742    +   NumWebVisitsMonth ,
672743    +   RFMstat ,
672744    +   Recency ,
672745    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Kidhome , Mnt , MntFishProducts , MntFruits 
, MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , 
NumDealsPurchases , NumDistPurchases , NumStorePurchases , NumWebPurchases , NumWebVisitsMonth 
, RFMstat , Recency , Teenhome ) THEN DO;
672746    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
672747    +
672748    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
672749    +END;
MPRINT(EM_DIAGRAM):   END;
672750    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
672751    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
672752    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
672753    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
672754    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
672755    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
672756    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
672757    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
672758    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
672759    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
672760    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
672761    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
672762    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
672763    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
672764    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
672765    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
672766    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
672767    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
672768    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
672769    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
672770    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
672771    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
672772    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
672773    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
672774    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
672775    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
672776    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
672777    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
672778    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
672779    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
672780    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
672781    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
672782    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
672783    +END;
MPRINT(EM_DIAGRAM):   END;
672784    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
672785    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
672786    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
672787    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
672788    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
672789    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
672790    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
672791    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
672792    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
672793    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
672794    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
672795    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
672796    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
672797    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
672798    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
672799    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
672800    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
672801    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
672802    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
672803    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
672804    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
672805    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
672806    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
672807    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
672808    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
672809    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
672810    +   ELSE S_NumCatalogPurchases
672811    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
672812    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
672813    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
672814    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
672815    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
672816    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
672817    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
672818    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
672819    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
672820    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
672821    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
672822    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
672823    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
672824    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
672825    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
672826    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
672827    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
672828    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
672829    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
672830    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
672831    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
672832    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
672833    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
672834    +END;
MPRINT(EM_DIAGRAM):   END;
672835    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
672836    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
672837    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
672838    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
672839    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
672840    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
672841    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
672842    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
672843    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
672844    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
672845    +   H11  =     1.01101276887315 * S_AcceptedCmpTotal  +     0.13088206386642 *
672846    +        S_Kidhome  +     0.44144124105344 * S_Mnt  +    -0.68904392437475 *
672847    +        S_MntFishProducts  +    -0.17121585659716 * S_MntFruits
672848    +          +     0.11335785908498 * S_MntGoldProds  +      2.7693787644231 *
672849    +        S_MntMeatProducts  +     0.05508921126989 * S_MntSweetProducts
672850    +          +    -0.84963149161721 * S_MntWines  +     0.93831643366323 *
672851    +        S_NumCatalogPurchases  +     0.61100213741284 * S_NumDealsPurchases
672852    +          +     0.02505564750154 * S_NumDistPurchases
672853    +          +    -0.68813734794561 * S_NumStorePurchases
672854    +          +    -0.70997870192497 * S_NumWebPurchases
672855    +          +     0.29587693128027 * S_NumWebVisitsMonth
672856    +          +     0.78508541462113 * S_RFMstat  +     -0.3308883600476 *
672857    +        S_Recency  +    -0.00325917604837 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 1.01101276887315 * S_AcceptedCmpTotal + 0.13088206386642 * 
S_Kidhome + 0.44144124105344 * S_Mnt + -0.68904392437475 * S_MntFishProducts + 
-0.17121585659716 * S_MntFruits + 0.11335785908498 * S_MntGoldProds + 2.7693787644231 * 
S_MntMeatProducts + 0.05508921126989 * S_MntSweetProducts + -0.84963149161721 * S_MntWines + 
0.93831643366323 * S_NumCatalogPurchases + 0.61100213741284 * S_NumDealsPurchases + 
0.02505564750154 * S_NumDistPurchases + -0.68813734794561 * S_NumStorePurchases + 
-0.70997870192497 * S_NumWebPurchases + 0.29587693128027 * S_NumWebVisitsMonth + 
0.78508541462113 * S_RFMstat + -0.3308883600476 * S_Recency + -0.00325917604837 * S_Teenhome ;
672858    +   H12  =    -0.52436299608191 * S_AcceptedCmpTotal  +     0.27198236309079 *
672859    +        S_Kidhome  +     0.16271772923493 * S_Mnt  +     0.09777129448709 *
672860    +        S_MntFishProducts  +     0.08286856142975 * S_MntFruits
672861    +          +     0.01382699665825 * S_MntGoldProds  +    -0.64717980145363 *
672862    +        S_MntMeatProducts  +     0.05864522802919 * S_MntSweetProducts
672863    +          +     0.48084041085358 * S_MntWines  +    -0.54710128323244 *
672864    +        S_NumCatalogPurchases  +    -0.13512538901701 * S_NumDealsPurchases
672865    +          +     0.06434299218856 * S_NumDistPurchases
672866    +          +     0.42712319617209 * S_NumStorePurchases
672867    +          +     0.31123207604233 * S_NumWebPurchases
672868    +          +    -1.01860201337102 * S_NumWebVisitsMonth
672869    +          +    -0.03004351543086 * S_RFMstat  +      1.1539132835032 *
672870    +        S_Recency  +     0.26483130659279 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.52436299608191 * S_AcceptedCmpTotal + 0.27198236309079 * 
S_Kidhome + 0.16271772923493 * S_Mnt + 0.09777129448709 * S_MntFishProducts + 0.08286856142975 
* S_MntFruits + 0.01382699665825 * S_MntGoldProds + -0.64717980145363 * S_MntMeatProducts + 
0.05864522802919 * S_MntSweetProducts + 0.48084041085358 * S_MntWines + -0.54710128323244 * 
S_NumCatalogPurchases + -0.13512538901701 * S_NumDealsPurchases + 0.06434299218856 * 
S_NumDistPurchases + 0.42712319617209 * S_NumStorePurchases + 0.31123207604233 * 
S_NumWebPurchases + -1.01860201337102 * S_NumWebVisitsMonth + -0.03004351543086 * S_RFMstat + 
1.1539132835032 * S_Recency + 0.26483130659279 * S_Teenhome ;
672871    +   H11  = H11  +    -0.30089946733563 * AcceptedCmp10
672872    +          +     0.33352940500449 * AcceptedCmp20  +     0.57640754092947 *
672873    +        AcceptedCmp30  +     0.43007791062186 * AcceptedCmp40
672874    +          +    -0.97559596081103 * AcceptedCmp50  +      -0.156153798165 *
672875    +        Complain0  +    -0.08163020130832 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.30089946733563 * AcceptedCmp10 + 0.33352940500449 * 
AcceptedCmp20 + 0.57640754092947 * AcceptedCmp30 + 0.43007791062186 * AcceptedCmp40 + 
-0.97559596081103 * AcceptedCmp50 + -0.156153798165 * Complain0 + -0.08163020130832 * 
HigherEducationBinary0 ;
672876    +   H12  = H12  +     0.08049893192691 * AcceptedCmp10
672877    +          +     0.08395178819383 * AcceptedCmp20  +     0.11982414653687 *
672878    +        AcceptedCmp30  +     0.13126623447029 * AcceptedCmp40
672879    +          +      0.3326649980497 * AcceptedCmp50  +    -0.03185471588077 *
672880    +        Complain0  +     0.08220343686165 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.08049893192691 * AcceptedCmp10 + 0.08395178819383 * 
AcceptedCmp20 + 0.11982414653687 * AcceptedCmp30 + 0.13126623447029 * AcceptedCmp40 + 
0.3326649980497 * AcceptedCmp50 + -0.03185471588077 * Complain0 + 0.08220343686165 * 
HigherEducationBinary0 ;
672881    +   H11  = H11  +    -0.24837156257202 * Marital_StatusDivorced
672882    +          +     0.31380389607446 * Marital_StatusMarried
672883    +          +    -0.11994840163803 * Marital_StatusSingle
672884    +          +     0.30069256789445 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.24837156257202 * Marital_StatusDivorced + 
0.31380389607446 * Marital_StatusMarried + -0.11994840163803 * Marital_StatusSingle + 
0.30069256789445 * Marital_StatusTogether ;
672885    +   H12  = H12  +    -0.41749658642963 * Marital_StatusDivorced
672886    +          +     0.72506125430191 * Marital_StatusMarried
672887    +          +    -0.54747054981285 * Marital_StatusSingle
672888    +          +     0.89421218316246 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.41749658642963 * Marital_StatusDivorced + 
0.72506125430191 * Marital_StatusMarried + -0.54747054981285 * Marital_StatusSingle + 
0.89421218316246 * Marital_StatusTogether ;
672889    +   H11  =     0.50192687520529 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.50192687520529 + H11 ;
672890    +   H12  =     0.17708947264117 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.17708947264117 + H12 ;
672891    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
672892    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
672893    +END;
MPRINT(EM_DIAGRAM):   END;
672894    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
672895    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
672896    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
672897    +END;
MPRINT(EM_DIAGRAM):   END;
672898    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
672899    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
672900    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
672901    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
672902    +   P_DepVar1  =     4.38180289637299 * H11  +    -4.42967128560878 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.38180289637299 * H11 + -4.42967128560878 * H12 ;
672903    +   P_DepVar1  =    -3.75681581527016 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.75681581527016 + P_DepVar1 ;
672904    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
672905    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
672906    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
672907    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
672908    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
672909    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
672910    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
672911    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
672912    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
672913    +END;
MPRINT(EM_DIAGRAM):   END;
672914    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
672915    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
672916    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
672917    +END;
MPRINT(EM_DIAGRAM):   END;
672918    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
672919    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
672920    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
672921    +END;
MPRINT(EM_DIAGRAM):   END;
672922    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
672923    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
672924    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
672925    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
672926    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
672927    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
672928    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
672929    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
672930    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
672931    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
672932    +END;
MPRINT(EM_DIAGRAM):   END;
672933    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
672934    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
672935    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
672936    +drop
672937    +H11
672938    +H12
672939    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
672940    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
672941     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
672942     quit;
672943     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
672944     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
672945     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
672946     retain ID 2 Node "Neural3";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural3";
672947     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
672948     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1622 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1622 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

672949     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
672950     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
672951     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1622 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1622 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

672952     proc sort data=EMWS8.Neural3_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural3_variableset out=_temp2(keep=NAME CREATOR);
672953     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
672954     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.NEURAL3_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

672955     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
672956     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
672957     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
672958     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

672959     proc contents data=EMWS8.Neural3_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural3_train out=_meta(keep=NAME) noprint;
672960     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

672961     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
672962     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
672963     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

672964     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
672965     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
672966     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
672967     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

672968     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
672969     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
672969   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 966 rows and 5 columns.

672970     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

672971     proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
672972     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 966 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL_FCMP has 966 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

672973     filename _pref
672973   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
672974     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
672975     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
672976    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
672977    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
672978    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
672979    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
672980    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
672981    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
672982     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
672983     quit;
672984     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
672985     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
672986     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
672987     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
672988     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
672989     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

672990     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
672991     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
672992     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

672993     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
672994     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
672995     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

672996     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
672997     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
672998     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
672999     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

673000     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
673001     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

673002     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
673003     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
673004     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

673005     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
673006     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
673007     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
673008     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

673009     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
673010     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
673010   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

673011     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

673012     proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
673013     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL_FCMP has 970 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

673014     filename _pref
673014   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
673015     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
673016     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
673017    +
673018    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
673019    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
673019   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
673020    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
673021    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
673022    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
673023    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
673024    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
673025     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
673026     quit;
673027     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
673028     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
673029     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
673030     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
673031     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
673032     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

673033     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
673034     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
673035     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

673036     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
673037     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
673038     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

673039     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
673040     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
673041     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
673042     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

673043     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
673044     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

673045     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
673046     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
673047     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

673048     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
673049     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
673050     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
673051     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

673052     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
673053     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
673053   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

673054     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

673055     proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
673056     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL_FCMP has 1009 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

673057     filename _pref
673057   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
673058     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
673059     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
673060    +
673061    +
673062    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
673063    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
673064    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
673065    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
673066    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
673067    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
673068    +
673069    +
673070    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
673071    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
673072    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
673073    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
673074    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
673075    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
673076    +
673077    +
673078    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
673079    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
673080    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
673081    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
673082    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
673083    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
673084    +
673085    +
673086    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
673087    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
673088    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
673089    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
673090    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
673091    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
673092    +
673093    +
673094    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
673095    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
673096    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
673097    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
673098    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
673099    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
673100    +
673101    +
673102    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
673103    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
673104    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
673105    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
673106    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
673107    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
673108    +
673109    +
673110    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
673111    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
673112    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
673113    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
673114    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
673115    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
673116    +
673117    +
673118    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
673119    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
673120    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
673121    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
673122    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
673123    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
673124    +if
673125    +_FILTERNORM1 not in ( '.')
673126    + and
673127    +_FILTERNORM2 not in ( '.')
673128    + and
673129    +_FILTERNORM3 not in ( '.')
673130    + and
673131    +_FILTERNORM4 not in ( '.')
673132    + and
673133    +_FILTERNORM5 not in ( '.')
673134    + and
673135    +_FILTERNORM6 not in ( '.')
673136    + and
673137    +_FILTERNORM7 not in ( ' ')
673138    + and
673139    +_FILTERNORM8 not in ( ' ')
673140    +and
673141    +( Dt_Customer ne .)
673142    +and ( Income ne . and (Income<=107000))
673143    +and ( Kidhome ne .)
673144    +and ( MntFishProducts ne .)
673145    +and ( MntFruits ne .)
673146    +and ( MntGoldProds ne .)
673147    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
673148    +and ( MntSweetProducts ne .)
673149    +and ( MntWines ne .)
673150    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
673151    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
673152    +and ( NumStorePurchases ne .)
673153    +and ( NumWebPurchases ne .)
673154    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
673155    +and ( Recency ne .)
673156    +and ( Teenhome ne .)
673157    +and ( Year_Birth ne .)
673158    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
673159    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
673160    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
673161    +end;
MPRINT(EM_DIAGRAM):   end;
673162    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
673163    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
673164     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
673165     quit;
673166     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
673167     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
673168     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
673169     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
673170     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
673171     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

673172     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
673173     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
673174     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

673175     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
673176     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
673177     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

673178     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
673179     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
673180     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
673181     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

673182     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
673183     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

673184     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
673185     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
673186     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

673187     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
673188     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
673189     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
673190     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

673191     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
673192     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
673192   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

673193     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

673194     proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
673195     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL_FCMP has 1075 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

673196     %macro varDept(fcmpdata=,id=);
673197     %global nobs&id scoreFlag&id;
673198     %let scoreFlag&id = 0;
673199     %if &id=1 or ^&fcmpStart %then %do;
673200     proc sort data=&fcmpdata out=_temp&id nodupkey;
673201     by NAME;
673202     where id=&id and LHS in( %let j=1;
673203     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
673204     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
673205     "&var" %let j = %eval(&j+1);
673206     %end;
673207     );
673208     run;
673209     %let dsid = %sysfunc(open(_temp&id));
673210     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
673211     %let dsid = %sysfunc(close(&dsid));
673212     %if &&nobs&id %then %do;
673213     %let scoreFlag&id = 1;
673214     %let fcmpStart = 1;
673215     %end;
673216     %else %let fcmpStart = 0;
673217     %end;
673218     %else %do;
673219     proc sort data=&fcmpdata out=_tempid;
673220     where id=&id;
673221     by LHS;
673222     run;
673223     %let dsid = %sysfunc(open(_tempid));
673224     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
673225     %let dsid = %sysfunc(close(&dsid));
673226     %if ^&&nobs&id %then %do;
673227     proc datasets lib=work nolist;
673228     delete _tempid;
673229     run;
673230     quit;
673231     %end;
673232     %else %do;
673233     data _tempAll;
673234     set %let j=%eval(&id-1);
673235     %do x=1 %to &j;
673236     %if &&nobs&x %then %do;
673237     _temp&x %end;
673238     %end;
673239     ;
673240     run;
673241     proc sql;
673242     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
673242   ! work._tempid p2 where p.name=p2.lhs;
673243     quit;
673244     data _temp&id;
673245     set _temp&id;
673246     where LHS ne '' and NAME ne '' and Node ne '';
673247     run;
673248     proc datasets lib=work nolist;
673249     delete _tempAll;
673250     run;
673251     %let dsid = %sysfunc(open(_temp&id));
673252     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
673253     %let dsid = %sysfunc(close(&dsid));
673254     %if ^&&nobs&id %then %do;
673255     proc datasets lib=work nolist;
673256     delete _temp&id;
673257     run;
673258     quit;
673259     %end;
673260     %else %do;
673261     %let scoreFlag&id = 1;
673262     data _temp&id;
673263     set _temp&id;
673264     where LHS ne NAME and node ne '';
673265     run;
673266     %let dsid = %sysfunc(open(_temp&id));
673267     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
673268     %let dsid = %sysfunc(close(&dsid));
673269     %if ^&&nobs&id %then %do;
673270     proc datasets lib=work nolist;
673271     delete _temp&id;
673272     run;
673273     quit;
673274     %end;
673275     %else %do;
673276     proc sort data=_temp&id nodupkey;
673277     by LHS NAME;
673278     run;
673279     %end;
673280     %end;
673281     %end;
673282     %end;
673283     %mend varDept;
673284     %macro optCode(outdata=fcmpdata);
673285     %global fcmpStart;
673286     %let fcmpStart = 0;
673287     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
673288     %let NumNodes=9;
673289     %do k=1 %to &NumNodes;
673290     %vardept(fcmpdata=&outdata, id=&k);
673291     %end;
673292     %mend optCode;
673293     %optcode(outData=EMWS8.Ensmbl_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 110 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 82 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 28 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 28 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 28 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 3 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 3 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 3 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 3 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 28 observations read from the data set WORK._TEMP2.
NOTE: There were 3 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 24 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 24 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 24 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 24 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 24 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 24 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 24 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 28 observations read from the data set WORK._TEMP2.
NOTE: There were 3 observations read from the data set WORK._TEMP5.
NOTE: There were 24 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 55 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

673294     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
673295     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
673296     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
673297     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

673298     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
673299     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
673300     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
673301     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

673302     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
673303     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
673303   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 3 rows and 3 columns.

673304     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

673305     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
673306     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
673307     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 3 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 3 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

673308     filename _pref
673308   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural7\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural7\EMPUBLISHSCORE.sas";
673309     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
673310     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural7\EMPUBLISHSCORE.sas.
673311    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
673312    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
673313    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
673314    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
673315    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
673316    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
673317    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
673318    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
673319    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
673320    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
673321    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
673322    +LENGTH _WARN_ $4
673323    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
673324    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
673325    +
673326    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
673327    +
673328    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
673329    +
673330    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
673331    +
673332    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
673333    +
673334    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
673335    +
673336    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
673337    +
673338    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
673339    +
673340    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
673341    +
673342    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
673343    +
673344    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
673345    +
673346    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
673347    +
673348    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
673349    +
673350    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
673351    +
673352    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
673353    +
673354    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
673355    +
673356    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
673357    +
673358    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
673359    +
673360    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
673361    +
673362    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
673363    +
673364    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
673365    +
673366    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
673367    +
673368    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
673369    +
673370    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
673371    +
673372    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
673373    +
673374    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
673375    +
673376    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
673377    +
673378    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
673379    +
673380    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
673381    +
673382    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
673383    +
673384    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
673385    +
673386    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
673387    +
673388    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
673389    +
673390    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
673391    +
673392    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
673393    +
673394    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
673395    +
673396    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
673397    +
673398    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
673399    +
673400    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
673401    +
673402    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
673403    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
673404    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
673405    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
673406    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
673407    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
673408    +end;
MPRINT(EM_DIAGRAM):   end;
673409    +else do;
MPRINT(EM_DIAGRAM):   else do;
673410    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
673411    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
673412    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
673413    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
673414    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
673415    +   end;
MPRINT(EM_DIAGRAM):   end;
673416    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
673417    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
673418    +   end;
MPRINT(EM_DIAGRAM):   end;
673419    +   else do;
MPRINT(EM_DIAGRAM):   else do;
673420    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
673421    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
673422    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
673423    +   end;
MPRINT(EM_DIAGRAM):   end;
673424    +end;
MPRINT(EM_DIAGRAM):   end;
673425    +
673426    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
673427    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
673428    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
673429    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
673430    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
673431    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
673432    +end;
MPRINT(EM_DIAGRAM):   end;
673433    +else do;
MPRINT(EM_DIAGRAM):   else do;
673434    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
673435    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
673436    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
673437    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
673438    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
673439    +   end;
MPRINT(EM_DIAGRAM):   end;
673440    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
673441    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
673442    +   end;
MPRINT(EM_DIAGRAM):   end;
673443    +   else do;
MPRINT(EM_DIAGRAM):   else do;
673444    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
673445    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
673446    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
673447    +   end;
MPRINT(EM_DIAGRAM):   end;
673448    +end;
MPRINT(EM_DIAGRAM):   end;
673449    +
673450    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
673451    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
673452    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
673453    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
673454    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
673455    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
673456    +end;
MPRINT(EM_DIAGRAM):   end;
673457    +else do;
MPRINT(EM_DIAGRAM):   else do;
673458    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
673459    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
673460    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
673461    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
673462    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
673463    +   end;
MPRINT(EM_DIAGRAM):   end;
673464    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
673465    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
673466    +   end;
MPRINT(EM_DIAGRAM):   end;
673467    +   else do;
MPRINT(EM_DIAGRAM):   else do;
673468    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
673469    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
673470    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
673471    +   end;
MPRINT(EM_DIAGRAM):   end;
673472    +end;
MPRINT(EM_DIAGRAM):   end;
673473    +
673474    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
673475    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
673476    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
673477    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
673478    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
673479    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
673480    +end;
MPRINT(EM_DIAGRAM):   end;
673481    +else do;
MPRINT(EM_DIAGRAM):   else do;
673482    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
673483    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
673484    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
673485    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
673486    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
673487    +   end;
MPRINT(EM_DIAGRAM):   end;
673488    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
673489    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
673490    +   end;
MPRINT(EM_DIAGRAM):   end;
673491    +   else do;
MPRINT(EM_DIAGRAM):   else do;
673492    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
673493    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
673494    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
673495    +   end;
MPRINT(EM_DIAGRAM):   end;
673496    +end;
MPRINT(EM_DIAGRAM):   end;
673497    +
673498    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
673499    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
673500    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
673501    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
673502    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
673503    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
673504    +end;
MPRINT(EM_DIAGRAM):   end;
673505    +else do;
MPRINT(EM_DIAGRAM):   else do;
673506    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
673507    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
673508    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
673509    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
673510    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
673511    +   end;
MPRINT(EM_DIAGRAM):   end;
673512    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
673513    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
673514    +   end;
MPRINT(EM_DIAGRAM):   end;
673515    +   else do;
MPRINT(EM_DIAGRAM):   else do;
673516    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
673517    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
673518    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
673519    +   end;
MPRINT(EM_DIAGRAM):   end;
673520    +end;
MPRINT(EM_DIAGRAM):   end;
673521    +
673522    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
673523    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
673524    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
673525    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
673526    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
673527    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
673528    +end;
MPRINT(EM_DIAGRAM):   end;
673529    +else do;
MPRINT(EM_DIAGRAM):   else do;
673530    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
673531    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
673532    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
673533    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
673534    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
673535    +   end;
MPRINT(EM_DIAGRAM):   end;
673536    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
673537    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
673538    +   end;
MPRINT(EM_DIAGRAM):   end;
673539    +   else do;
MPRINT(EM_DIAGRAM):   else do;
673540    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
673541    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
673542    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
673543    +   end;
MPRINT(EM_DIAGRAM):   end;
673544    +end;
MPRINT(EM_DIAGRAM):   end;
673545    +
673546    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
673547    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
673548    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
673549    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
673550    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
673551    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
673552    +end;
MPRINT(EM_DIAGRAM):   end;
673553    +else do;
MPRINT(EM_DIAGRAM):   else do;
673554    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
673555    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
673556    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
673557    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
673558    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
673559    +   end;
MPRINT(EM_DIAGRAM):   end;
673560    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
673561    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
673562    +   end;
MPRINT(EM_DIAGRAM):   end;
673563    +   else do;
MPRINT(EM_DIAGRAM):   else do;
673564    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
673565    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
673566    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
673567    +   end;
MPRINT(EM_DIAGRAM):   end;
673568    +end;
MPRINT(EM_DIAGRAM):   end;
673569    +
673570    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
673571    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
673572    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
673573    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
673574    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
673575    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
673576    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
673577    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
673578    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
673579    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
673580    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
673581    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
673582    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
673583    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
673584    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
673585    +end;
MPRINT(EM_DIAGRAM):   end;
673586    +else do;
MPRINT(EM_DIAGRAM):   else do;
673587    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
673588    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
673589    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
673590    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
673591    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
673592    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
673593    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
673594    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
673595    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
673596    +         end;
MPRINT(EM_DIAGRAM):   end;
673597    +         else do;
MPRINT(EM_DIAGRAM):   else do;
673598    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
673599    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
673600    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
673601    +            end;
MPRINT(EM_DIAGRAM):   end;
673602    +         end;
MPRINT(EM_DIAGRAM):   end;
673603    +      end;
MPRINT(EM_DIAGRAM):   end;
673604    +      else do;
MPRINT(EM_DIAGRAM):   else do;
673605    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
673606    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
673607    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
673608    +         end;
MPRINT(EM_DIAGRAM):   end;
673609    +      end;
MPRINT(EM_DIAGRAM):   end;
673610    +   end;
MPRINT(EM_DIAGRAM):   end;
673611    +   else do;
MPRINT(EM_DIAGRAM):   else do;
673612    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
673613    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
673614    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
673615    +      end;
MPRINT(EM_DIAGRAM):   end;
673616    +      else do;
MPRINT(EM_DIAGRAM):   else do;
673617    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
673618    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
673619    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
673620    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
673621    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
673622    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
673623    +         end;
MPRINT(EM_DIAGRAM):   end;
673624    +      end;
MPRINT(EM_DIAGRAM):   end;
673625    +   end;
MPRINT(EM_DIAGRAM):   end;
673626    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
673627    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
673628    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
673629    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
673630    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
673631    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
673632    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
673633    +   end;
MPRINT(EM_DIAGRAM):   end;
673634    +end;
MPRINT(EM_DIAGRAM):   end;
673635    +
673636    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
673637    +*** Checking missing input Interval
673638    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
673639    +
673640    +IF NMISS(
673641    +   AcceptedCmpTotal ,
673642    +   Kidhome ,
673643    +   Mnt ,
673644    +   MntFishProducts ,
673645    +   MntFruits ,
673646    +   MntGoldProds ,
673647    +   MntMeatProducts ,
673648    +   MntSweetProducts ,
673649    +   MntWines ,
673650    +   NumCatalogPurchases ,
673651    +   NumDealsPurchases ,
673652    +   NumDistPurchases ,
673653    +   NumStorePurchases ,
673654    +   NumWebPurchases ,
673655    +   NumWebVisitsMonth ,
673656    +   RFMstat ,
673657    +   Recency ,
673658    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Kidhome , Mnt , MntFishProducts , MntFruits 
, MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , 
NumDealsPurchases , NumDistPurchases , NumStorePurchases , NumWebPurchases , NumWebVisitsMonth 
, RFMstat , Recency , Teenhome ) THEN DO;
673659    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
673660    +
673661    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
673662    +END;
MPRINT(EM_DIAGRAM):   END;
673663    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
673664    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
673665    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
673666    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
673667    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
673668    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
673669    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
673670    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
673671    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
673672    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
673673    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
673674    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
673675    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
673676    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
673677    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
673678    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
673679    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
673680    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
673681    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
673682    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
673683    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
673684    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
673685    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
673686    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
673687    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
673688    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
673689    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
673690    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
673691    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
673692    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
673693    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
673694    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
673695    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
673696    +END;
MPRINT(EM_DIAGRAM):   END;
673697    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
673698    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
673699    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
673700    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
673701    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
673702    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
673703    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
673704    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
673705    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
673706    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
673707    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
673708    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
673709    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
673710    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
673711    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
673712    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
673713    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
673714    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
673715    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
673716    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
673717    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
673718    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
673719    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
673720    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
673721    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
673722    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
673723    +   ELSE S_NumCatalogPurchases
673724    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
673725    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
673726    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
673727    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
673728    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
673729    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
673730    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
673731    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
673732    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
673733    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
673734    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
673735    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
673736    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
673737    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
673738    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
673739    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
673740    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
673741    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
673742    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
673743    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
673744    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
673745    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
673746    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
673747    +END;
MPRINT(EM_DIAGRAM):   END;
673748    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
673749    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
673750    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
673751    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
673752    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
673753    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
673754    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
673755    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
673756    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
673757    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
673758    +   H11  =    -0.31336975179768 * S_AcceptedCmpTotal  +     0.55217606948262 *
673759    +        S_Kidhome  +     0.30934248519275 * S_Mnt  +     0.21704081651602 *
673760    +        S_MntFishProducts  +      0.0286842970037 * S_MntFruits
673761    +          +     -0.0428936614026 * S_MntGoldProds  +     0.04106839234795 *
673762    +        S_MntMeatProducts  +     -0.2219223463878 * S_MntSweetProducts
673763    +          +     0.07714161131062 * S_MntWines  +    -0.47043004421243 *
673764    +        S_NumCatalogPurchases  +    -0.34552756945236 * S_NumDealsPurchases
673765    +          +    -0.08565162229542 * S_NumDistPurchases
673766    +          +      0.2498966077742 * S_NumStorePurchases
673767    +          +    -0.03810974523517 * S_NumWebPurchases
673768    +          +     0.50983692369041 * S_NumWebVisitsMonth
673769    +          +     0.08815778320903 * S_RFMstat  +     0.09119895780804 *
673770    +        S_Recency  +     0.13511958264343 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.31336975179768 * S_AcceptedCmpTotal + 0.55217606948262 * 
S_Kidhome + 0.30934248519275 * S_Mnt + 0.21704081651602 * S_MntFishProducts + 0.0286842970037 
* S_MntFruits + -0.0428936614026 * S_MntGoldProds + 0.04106839234795 * S_MntMeatProducts + 
-0.2219223463878 * S_MntSweetProducts + 0.07714161131062 * S_MntWines + -0.47043004421243 * 
S_NumCatalogPurchases + -0.34552756945236 * S_NumDealsPurchases + -0.08565162229542 * 
S_NumDistPurchases + 0.2498966077742 * S_NumStorePurchases + -0.03810974523517 * 
S_NumWebPurchases + 0.50983692369041 * S_NumWebVisitsMonth + 0.08815778320903 * S_RFMstat + 
0.09119895780804 * S_Recency + 0.13511958264343 * S_Teenhome ;
673771    +   H12  =    -0.24937709830237 * S_AcceptedCmpTotal  +    -0.24749428309219 *
673772    +        S_Kidhome  +    -0.12930178120586 * S_Mnt  +     0.13546025995573 *
673773    +        S_MntFishProducts  +     0.28360186554431 * S_MntFruits
673774    +          +    -0.05241802314535 * S_MntGoldProds  +    -0.66941662270923 *
673775    +        S_MntMeatProducts  +     0.15336628351126 * S_MntSweetProducts
673776    +          +      0.4032078630799 * S_MntWines  +    -0.56890394617047 *
673777    +        S_NumCatalogPurchases  +    -0.64950384504567 * S_NumDealsPurchases
673778    +          +     0.23154666595931 * S_NumDistPurchases
673779    +          +     0.54534387610808 * S_NumStorePurchases
673780    +          +     0.41139490970672 * S_NumWebPurchases
673781    +          +    -0.55413387763351 * S_NumWebVisitsMonth
673782    +          +    -0.26075003734578 * S_RFMstat  +     0.49052010543197 *
673783    +        S_Recency  +     -0.0404801860777 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.24937709830237 * S_AcceptedCmpTotal + -0.24749428309219 * 
S_Kidhome + -0.12930178120586 * S_Mnt + 0.13546025995573 * S_MntFishProducts + 
0.28360186554431 * S_MntFruits + -0.05241802314535 * S_MntGoldProds + -0.66941662270923 * 
S_MntMeatProducts + 0.15336628351126 * S_MntSweetProducts + 0.4032078630799 * S_MntWines + 
-0.56890394617047 * S_NumCatalogPurchases + -0.64950384504567 * S_NumDealsPurchases + 
0.23154666595931 * S_NumDistPurchases + 0.54534387610808 * S_NumStorePurchases + 
0.41139490970672 * S_NumWebPurchases + -0.55413387763351 * S_NumWebVisitsMonth + 
-0.26075003734578 * S_RFMstat + 0.49052010543197 * S_Recency + -0.0404801860777 * S_Teenhome ;
673784    +   H13  =     0.21315421089843 * S_AcceptedCmpTotal  +    -0.40934954273162 *
673785    +        S_Kidhome  +    -0.14257980270562 * S_Mnt  +    -0.02326723710858 *
673786    +        S_MntFishProducts  +     0.03093571619826 * S_MntFruits
673787    +          +    -0.09540637054036 * S_MntGoldProds  +       0.216562837751 *
673788    +        S_MntMeatProducts  +    -0.06578520743957 * S_MntSweetProducts
673789    +          +    -0.45983147514787 * S_MntWines  +     0.28991677967619 *
673790    +        S_NumCatalogPurchases  +     -0.0581811780876 * S_NumDealsPurchases
673791    +          +     0.05120135471729 * S_NumDistPurchases
673792    +          +    -0.26556926910649 * S_NumStorePurchases
673793    +          +    -0.44351155109785 * S_NumWebPurchases
673794    +          +     0.88609841670248 * S_NumWebVisitsMonth
673795    +          +    -0.05355058809893 * S_RFMstat  +    -0.73370046845716 *
673796    +        S_Recency  +    -0.20220070524982 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.21315421089843 * S_AcceptedCmpTotal + -0.40934954273162 * 
S_Kidhome + -0.14257980270562 * S_Mnt + -0.02326723710858 * S_MntFishProducts + 
0.03093571619826 * S_MntFruits + -0.09540637054036 * S_MntGoldProds + 0.216562837751 * 
S_MntMeatProducts + -0.06578520743957 * S_MntSweetProducts + -0.45983147514787 * S_MntWines + 
0.28991677967619 * S_NumCatalogPurchases + -0.0581811780876 * S_NumDealsPurchases + 
0.05120135471729 * S_NumDistPurchases + -0.26556926910649 * S_NumStorePurchases + 
-0.44351155109785 * S_NumWebPurchases + 0.88609841670248 * S_NumWebVisitsMonth + 
-0.05355058809893 * S_RFMstat + -0.73370046845716 * S_Recency + -0.20220070524982 * S_Teenhome 
;
673797    +   H14  =     0.39698224199543 * S_AcceptedCmpTotal  +    -0.20120366596375 *
673798    +        S_Kidhome  +      0.3167228298887 * S_Mnt  +     0.01157053818495 *
673799    +        S_MntFishProducts  +    -0.01328592356982 * S_MntFruits
673800    +          +     0.00886948034365 * S_MntGoldProds  +     1.21666314524043 *
673801    +        S_MntMeatProducts  +    -0.09283019720022 * S_MntSweetProducts
673802    +          +    -0.09586722258183 * S_MntWines  +    -0.01785512232978 *
673803    +        S_NumCatalogPurchases  +    -0.21291958246407 * S_NumDealsPurchases
673804    +          +     0.39404855135103 * S_NumDistPurchases
673805    +          +    -0.07248752877179 * S_NumStorePurchases
673806    +          +    -0.10123700375349 * S_NumWebPurchases
673807    +          +     0.42450276314027 * S_NumWebVisitsMonth
673808    +          +     0.24279716857154 * S_RFMstat  +    -0.58955338934321 *
673809    +        S_Recency  +    -0.30629869350731 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.39698224199543 * S_AcceptedCmpTotal + -0.20120366596375 * 
S_Kidhome + 0.3167228298887 * S_Mnt + 0.01157053818495 * S_MntFishProducts + -0.01328592356982 
* S_MntFruits + 0.00886948034365 * S_MntGoldProds + 1.21666314524043 * S_MntMeatProducts + 
-0.09283019720022 * S_MntSweetProducts + -0.09586722258183 * S_MntWines + -0.01785512232978 * 
S_NumCatalogPurchases + -0.21291958246407 * S_NumDealsPurchases + 0.39404855135103 * 
S_NumDistPurchases + -0.07248752877179 * S_NumStorePurchases + -0.10123700375349 * 
S_NumWebPurchases + 0.42450276314027 * S_NumWebVisitsMonth + 0.24279716857154 * S_RFMstat + 
-0.58955338934321 * S_Recency + -0.30629869350731 * S_Teenhome ;
673810    +   H15  =     0.30758619083232 * S_AcceptedCmpTotal  +     -0.0124289721914 *
673811    +        S_Kidhome  +    -0.05376010749039 * S_Mnt  +    -0.00466013129163 *
673812    +        S_MntFishProducts  +     -0.0128351925647 * S_MntFruits
673813    +          +       0.418369814853 * S_MntGoldProds  +    -0.44302877451838 *
673814    +        S_MntMeatProducts  +     0.10514229364725 * S_MntSweetProducts
673815    +          +     0.34164846881132 * S_MntWines  +    -0.02137843790281 *
673816    +        S_NumCatalogPurchases  +     -0.0656649517507 * S_NumDealsPurchases
673817    +          +     0.27175946433967 * S_NumDistPurchases
673818    +          +     0.16942067472984 * S_NumStorePurchases
673819    +          +     0.16250565660711 * S_NumWebPurchases
673820    +          +    -0.20203561703211 * S_NumWebVisitsMonth
673821    +          +     0.14491189794214 * S_RFMstat  +    -0.22675112064568 *
673822    +        S_Recency  +      0.1811664309815 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.30758619083232 * S_AcceptedCmpTotal + -0.0124289721914 * 
S_Kidhome + -0.05376010749039 * S_Mnt + -0.00466013129163 * S_MntFishProducts + 
-0.0128351925647 * S_MntFruits + 0.418369814853 * S_MntGoldProds + -0.44302877451838 * 
S_MntMeatProducts + 0.10514229364725 * S_MntSweetProducts + 0.34164846881132 * S_MntWines + 
-0.02137843790281 * S_NumCatalogPurchases + -0.0656649517507 * S_NumDealsPurchases + 
0.27175946433967 * S_NumDistPurchases + 0.16942067472984 * S_NumStorePurchases + 
0.16250565660711 * S_NumWebPurchases + -0.20203561703211 * S_NumWebVisitsMonth + 
0.14491189794214 * S_RFMstat + -0.22675112064568 * S_Recency + 0.1811664309815 * S_Teenhome ;
673823    +   H11  = H11  +    -0.26538416697651 * AcceptedCmp10
673824    +          +    -0.28983118331232 * AcceptedCmp20  +    -0.32322818178704 *
673825    +        AcceptedCmp30  +    -0.03993661807643 * AcceptedCmp40
673826    +          +     0.06994002730973 * AcceptedCmp50  +    -0.07716774247605 *
673827    +        Complain0  +      0.2585392734779 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.26538416697651 * AcceptedCmp10 + -0.28983118331232 * 
AcceptedCmp20 + -0.32322818178704 * AcceptedCmp30 + -0.03993661807643 * AcceptedCmp40 + 
0.06994002730973 * AcceptedCmp50 + -0.07716774247605 * Complain0 + 0.2585392734779 * 
HigherEducationBinary0 ;
673828    +   H12  = H12  +     0.26018307810736 * AcceptedCmp10
673829    +          +     0.04049534355706 * AcceptedCmp20  +     0.11270892132762 *
673830    +        AcceptedCmp30  +     0.11221187249984 * AcceptedCmp40
673831    +          +     0.17472976197603 * AcceptedCmp50  +     0.15606486866287 *
673832    +        Complain0  +     0.08065554959159 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.26018307810736 * AcceptedCmp10 + 0.04049534355706 * 
AcceptedCmp20 + 0.11270892132762 * AcceptedCmp30 + 0.11221187249984 * AcceptedCmp40 + 
0.17472976197603 * AcceptedCmp50 + 0.15606486866287 * Complain0 + 0.08065554959159 * 
HigherEducationBinary0 ;
673833    +   H13  = H13  +     0.02279534546007 * AcceptedCmp10
673834    +          +    -0.27459928968957 * AcceptedCmp20  +    -0.15207279864055 *
673835    +        AcceptedCmp30  +    -0.07324517817975 * AcceptedCmp40
673836    +          +     -0.4186492052078 * AcceptedCmp50  +     0.22766105161511 *
673837    +        Complain0  +    -0.00716085865509 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02279534546007 * AcceptedCmp10 + -0.27459928968957 * 
AcceptedCmp20 + -0.15207279864055 * AcceptedCmp30 + -0.07324517817975 * AcceptedCmp40 + 
-0.4186492052078 * AcceptedCmp50 + 0.22766105161511 * Complain0 + -0.00716085865509 * 
HigherEducationBinary0 ;
673838    +   H14  = H14  +    -0.30447666177293 * AcceptedCmp10
673839    +          +     0.07907637737546 * AcceptedCmp20  +    -0.01358906665622 *
673840    +        AcceptedCmp30  +     0.04426640297686 * AcceptedCmp40
673841    +          +     0.00911097068478 * AcceptedCmp50  +    -0.10112384137038 *
673842    +        Complain0  +     0.05359674201133 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.30447666177293 * AcceptedCmp10 + 0.07907637737546 * 
AcceptedCmp20 + -0.01358906665622 * AcceptedCmp30 + 0.04426640297686 * AcceptedCmp40 + 
0.00911097068478 * AcceptedCmp50 + -0.10112384137038 * Complain0 + 0.05359674201133 * 
HigherEducationBinary0 ;
673843    +   H15  = H15  +    -0.31560065228661 * AcceptedCmp10
673844    +          +     0.17796753054999 * AcceptedCmp20  +    -0.30736861931223 *
673845    +        AcceptedCmp30  +    -0.26334867599652 * AcceptedCmp40
673846    +          +    -0.19775668628356 * AcceptedCmp50  +     0.09156081270418 *
673847    +        Complain0  +     0.16300151411284 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.31560065228661 * AcceptedCmp10 + 0.17796753054999 * 
AcceptedCmp20 + -0.30736861931223 * AcceptedCmp30 + -0.26334867599652 * AcceptedCmp40 + 
-0.19775668628356 * AcceptedCmp50 + 0.09156081270418 * Complain0 + 0.16300151411284 * 
HigherEducationBinary0 ;
673848    +   H11  = H11  +     0.17457297183466 * Marital_StatusDivorced
673849    +          +    -0.18709572120712 * Marital_StatusMarried
673850    +          +    -0.17856903026629 * Marital_StatusSingle
673851    +          +     0.13783214631264 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.17457297183466 * Marital_StatusDivorced + 
-0.18709572120712 * Marital_StatusMarried + -0.17856903026629 * Marital_StatusSingle + 
0.13783214631264 * Marital_StatusTogether ;
673852    +   H12  = H12  +    -0.00304373365465 * Marital_StatusDivorced
673853    +          +    -0.16741351681675 * Marital_StatusMarried
673854    +          +      0.0768369461222 * Marital_StatusSingle
673855    +          +    -0.24741602840563 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.00304373365465 * Marital_StatusDivorced + 
-0.16741351681675 * Marital_StatusMarried + 0.0768369461222 * Marital_StatusSingle + 
-0.24741602840563 * Marital_StatusTogether ;
673856    +   H13  = H13  +     0.30534805329266 * Marital_StatusDivorced
673857    +          +    -0.85130030031409 * Marital_StatusMarried
673858    +          +     0.57365531089483 * Marital_StatusSingle
673859    +          +    -0.94902600797801 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.30534805329266 * Marital_StatusDivorced + 
-0.85130030031409 * Marital_StatusMarried + 0.57365531089483 * Marital_StatusSingle + 
-0.94902600797801 * Marital_StatusTogether ;
673860    +   H14  = H14  +     0.13923025215159 * Marital_StatusDivorced
673861    +          +    -0.10273688858818 * Marital_StatusMarried
673862    +          +     0.37267011958223 * Marital_StatusSingle
673863    +          +    -0.03704936024152 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.13923025215159 * Marital_StatusDivorced + 
-0.10273688858818 * Marital_StatusMarried + 0.37267011958223 * Marital_StatusSingle + 
-0.03704936024152 * Marital_StatusTogether ;
673864    +   H15  = H15  +     -0.1497917828097 * Marital_StatusDivorced
673865    +          +    -0.12309472866952 * Marital_StatusMarried
673866    +          +      0.0895004316905 * Marital_StatusSingle
673867    +          +    -0.06693333133964 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.1497917828097 * Marital_StatusDivorced + 
-0.12309472866952 * Marital_StatusMarried + 0.0895004316905 * Marital_StatusSingle + 
-0.06693333133964 * Marital_StatusTogether ;
673868    +   H11  =    -0.25731444426672 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.25731444426672 + H11 ;
673869    +   H12  =     0.87003179402118 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.87003179402118 + H12 ;
673870    +   H13  =     0.90055724527443 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.90055724527443 + H13 ;
673871    +   H14  =    -0.88878585940926 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.88878585940926 + H14 ;
673872    +   H15  =    -1.06135597773699 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -1.06135597773699 + H15 ;
673873    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
673874    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
673875    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
673876    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
673877    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
673878    +END;
MPRINT(EM_DIAGRAM):   END;
673879    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
673880    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
673881    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
673882    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
673883    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
673884    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
673885    +END;
MPRINT(EM_DIAGRAM):   END;
673886    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
673887    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
673888    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
673889    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
673890    +   P_DepVar1  =    -2.23627327600133 * H11  +    -5.23001272777429 * H12
673891    +          +     3.61561162996052 * H13  +     4.27940030557467 * H14
673892    +          +     0.95777699944459 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.23627327600133 * H11 + -5.23001272777429 * H12 + 
3.61561162996052 * H13 + 4.27940030557467 * H14 + 0.95777699944459 * H15 ;
673893    +   P_DepVar1  =    -1.37696256001086 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.37696256001086 + P_DepVar1 ;
673894    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
673895    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
673896    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
673897    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
673898    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
673899    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
673900    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
673901    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
673902    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
673903    +END;
MPRINT(EM_DIAGRAM):   END;
673904    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
673905    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
673906    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
673907    +END;
MPRINT(EM_DIAGRAM):   END;
673908    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
673909    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
673910    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
673911    +END;
MPRINT(EM_DIAGRAM):   END;
673912    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
673913    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
673914    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
673915    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
673916    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
673917    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
673918    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
673919    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
673920    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
673921    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
673922    +END;
MPRINT(EM_DIAGRAM):   END;
673923    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
673924    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
673925    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
673926    +drop
673927    +H11
673928    +H12
673929    +H13
673930    +H14
673931    +H15
673932    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
673933    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
673934     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
673935     quit;
673936     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
673937     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
673938     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
673939     retain ID 2 Node "Neural7";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural7";
673940     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
673941     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2048 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2048 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

673942     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
673943     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
673944     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2048 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2048 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

673945     proc sort data=EMWS8.Neural7_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural7_variableset out=_temp2(keep=NAME CREATOR);
673946     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
673947     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.NEURAL7_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

673948     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
673949     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
673950     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
673951     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

673952     proc contents data=EMWS8.Neural7_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural7_train out=_meta(keep=NAME) noprint;
673953     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

673954     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
673955     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
673956     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

673957     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
673958     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
673959     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
673960     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

673961     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
673962     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
673962   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1122 rows and 5 columns.

673963     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

673964     proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
673965     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1122 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL_FCMP has 1122 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

673966     filename _pref
673966   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
673967     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
673968     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
673969    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
673970    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
673971    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
673972    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
673973    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
673974    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
673975     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
673976     quit;
673977     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
673978     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
673979     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
673980     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
673981     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
673982     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

673983     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
673984     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
673985     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

673986     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
673987     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
673988     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

673989     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
673990     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
673991     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
673992     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

673993     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
673994     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

673995     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
673996     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
673997     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

673998     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
673999     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
674000     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
674001     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

674002     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
674003     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
674003   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

674004     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

674005     proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
674006     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL_FCMP has 1126 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

674007     filename _pref
674007   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
674008     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
674009     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
674010    +
674011    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
674012    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
674012   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
674013    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
674014    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
674015    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
674016    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
674017    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
674018     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
674019     quit;
674020     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
674021     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
674022     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
674023     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
674024     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
674025     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

674026     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
674027     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
674028     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

674029     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
674030     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
674031     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

674032     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
674033     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
674034     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
674035     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

674036     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
674037     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

674038     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
674039     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
674040     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

674041     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
674042     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
674043     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
674044     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

674045     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
674046     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
674046   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

674047     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

674048     proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
674049     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL_FCMP has 1165 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

674050     filename _pref
674050   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
674051     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
674052     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
674053    +
674054    +
674055    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
674056    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
674057    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
674058    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
674059    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
674060    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
674061    +
674062    +
674063    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
674064    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
674065    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
674066    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
674067    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
674068    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
674069    +
674070    +
674071    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
674072    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
674073    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
674074    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
674075    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
674076    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
674077    +
674078    +
674079    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
674080    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
674081    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
674082    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
674083    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
674084    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
674085    +
674086    +
674087    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
674088    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
674089    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
674090    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
674091    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
674092    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
674093    +
674094    +
674095    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
674096    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
674097    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
674098    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
674099    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
674100    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
674101    +
674102    +
674103    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
674104    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
674105    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
674106    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
674107    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
674108    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
674109    +
674110    +
674111    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
674112    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
674113    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
674114    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
674115    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
674116    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
674117    +if
674118    +_FILTERNORM1 not in ( '.')
674119    + and
674120    +_FILTERNORM2 not in ( '.')
674121    + and
674122    +_FILTERNORM3 not in ( '.')
674123    + and
674124    +_FILTERNORM4 not in ( '.')
674125    + and
674126    +_FILTERNORM5 not in ( '.')
674127    + and
674128    +_FILTERNORM6 not in ( '.')
674129    + and
674130    +_FILTERNORM7 not in ( ' ')
674131    + and
674132    +_FILTERNORM8 not in ( ' ')
674133    +and
674134    +( Dt_Customer ne .)
674135    +and ( Income ne . and (Income<=107000))
674136    +and ( Kidhome ne .)
674137    +and ( MntFishProducts ne .)
674138    +and ( MntFruits ne .)
674139    +and ( MntGoldProds ne .)
674140    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
674141    +and ( MntSweetProducts ne .)
674142    +and ( MntWines ne .)
674143    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
674144    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
674145    +and ( NumStorePurchases ne .)
674146    +and ( NumWebPurchases ne .)
674147    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
674148    +and ( Recency ne .)
674149    +and ( Teenhome ne .)
674150    +and ( Year_Birth ne .)
674151    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
674152    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
674153    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
674154    +end;
MPRINT(EM_DIAGRAM):   end;
674155    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
674156    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
674157     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
674158     quit;
674159     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
674160     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
674161     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
674162     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
674163     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
674164     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

674165     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
674166     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
674167     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

674168     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
674169     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
674170     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

674171     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
674172     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
674173     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
674174     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

674175     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
674176     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

674177     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
674178     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
674179     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

674180     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
674181     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
674182     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
674183     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

674184     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
674185     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
674185   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

674186     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

674187     proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
674188     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL_FCMP has 1231 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

674189     %macro varDept(fcmpdata=,id=);
674190     %global nobs&id scoreFlag&id;
674191     %let scoreFlag&id = 0;
674192     %if &id=1 or ^&fcmpStart %then %do;
674193     proc sort data=&fcmpdata out=_temp&id nodupkey;
674194     by NAME;
674195     where id=&id and LHS in( %let j=1;
674196     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
674197     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
674198     "&var" %let j = %eval(&j+1);
674199     %end;
674200     );
674201     run;
674202     %let dsid = %sysfunc(open(_temp&id));
674203     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
674204     %let dsid = %sysfunc(close(&dsid));
674205     %if &&nobs&id %then %do;
674206     %let scoreFlag&id = 1;
674207     %let fcmpStart = 1;
674208     %end;
674209     %else %let fcmpStart = 0;
674210     %end;
674211     %else %do;
674212     proc sort data=&fcmpdata out=_tempid;
674213     where id=&id;
674214     by LHS;
674215     run;
674216     %let dsid = %sysfunc(open(_tempid));
674217     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
674218     %let dsid = %sysfunc(close(&dsid));
674219     %if ^&&nobs&id %then %do;
674220     proc datasets lib=work nolist;
674221     delete _tempid;
674222     run;
674223     quit;
674224     %end;
674225     %else %do;
674226     data _tempAll;
674227     set %let j=%eval(&id-1);
674228     %do x=1 %to &j;
674229     %if &&nobs&x %then %do;
674230     _temp&x %end;
674231     %end;
674232     ;
674233     run;
674234     proc sql;
674235     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
674235   ! work._tempid p2 where p.name=p2.lhs;
674236     quit;
674237     data _temp&id;
674238     set _temp&id;
674239     where LHS ne '' and NAME ne '' and Node ne '';
674240     run;
674241     proc datasets lib=work nolist;
674242     delete _tempAll;
674243     run;
674244     %let dsid = %sysfunc(open(_temp&id));
674245     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
674246     %let dsid = %sysfunc(close(&dsid));
674247     %if ^&&nobs&id %then %do;
674248     proc datasets lib=work nolist;
674249     delete _temp&id;
674250     run;
674251     quit;
674252     %end;
674253     %else %do;
674254     %let scoreFlag&id = 1;
674255     data _temp&id;
674256     set _temp&id;
674257     where LHS ne NAME and node ne '';
674258     run;
674259     %let dsid = %sysfunc(open(_temp&id));
674260     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
674261     %let dsid = %sysfunc(close(&dsid));
674262     %if ^&&nobs&id %then %do;
674263     proc datasets lib=work nolist;
674264     delete _temp&id;
674265     run;
674266     quit;
674267     %end;
674268     %else %do;
674269     proc sort data=_temp&id nodupkey;
674270     by LHS NAME;
674271     run;
674272     %end;
674273     %end;
674274     %end;
674275     %end;
674276     %mend varDept;
674277     %macro optCode(outdata=fcmpdata);
674278     %global fcmpStart;
674279     %let fcmpStart = 0;
674280     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
674281     %let NumNodes=9;
674282     %do k=1 %to &NumNodes;
674283     %vardept(fcmpdata=&outdata, id=&k);
674284     %end;
674285     %mend optCode;
674286     %optcode(outData=EMWS8.Ensmbl_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 110 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 82 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 28 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 28 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 28 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 3 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 3 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 3 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 3 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 28 observations read from the data set WORK._TEMP2.
NOTE: There were 3 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 24 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 24 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 24 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 24 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 24 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 24 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 24 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 28 observations read from the data set WORK._TEMP2.
NOTE: There were 3 observations read from the data set WORK._TEMP5.
NOTE: There were 24 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 55 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

674287     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
674288     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
674289     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
674290     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

674291     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
674292     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
674293     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
674294     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

674295     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
674296     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
674296   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 3 rows and 3 columns.

674297     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

674298     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
674299     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
674300     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 3 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 3 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

674301     filename _pref
674301   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMPUBLISHSCORE.sas";
674302     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
674303     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMPUBLISHSCORE.sas.
674304    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
674305    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
674306    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
674307    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
674308    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
674309    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
674310    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
674311    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
674312    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
674313    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
674314    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
674315    +LENGTH _WARN_ $4
674316    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
674317    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
674318    +
674319    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
674320    +
674321    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
674322    +
674323    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
674324    +
674325    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
674326    +
674327    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
674328    +
674329    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
674330    +
674331    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
674332    +
674333    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
674334    +
674335    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
674336    +
674337    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
674338    +
674339    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
674340    +
674341    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
674342    +
674343    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
674344    +
674345    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
674346    +
674347    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
674348    +
674349    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
674350    +
674351    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
674352    +
674353    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
674354    +
674355    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
674356    +
674357    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
674358    +
674359    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
674360    +
674361    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
674362    +
674363    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
674364    +
674365    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
674366    +
674367    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
674368    +
674369    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
674370    +
674371    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
674372    +
674373    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
674374    +
674375    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
674376    +
674377    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
674378    +
674379    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
674380    +
674381    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
674382    +
674383    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
674384    +
674385    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
674386    +
674387    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
674388    +
674389    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
674390    +
674391    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
674392    +
674393    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
674394    +
674395    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
674396    +
674397    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
674398    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
674399    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
674400    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
674401    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
674402    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
674403    +end;
MPRINT(EM_DIAGRAM):   end;
674404    +else do;
MPRINT(EM_DIAGRAM):   else do;
674405    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
674406    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
674407    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
674408    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
674409    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
674410    +   end;
MPRINT(EM_DIAGRAM):   end;
674411    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
674412    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
674413    +   end;
MPRINT(EM_DIAGRAM):   end;
674414    +   else do;
MPRINT(EM_DIAGRAM):   else do;
674415    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
674416    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
674417    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
674418    +   end;
MPRINT(EM_DIAGRAM):   end;
674419    +end;
MPRINT(EM_DIAGRAM):   end;
674420    +
674421    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
674422    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
674423    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
674424    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
674425    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
674426    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
674427    +end;
MPRINT(EM_DIAGRAM):   end;
674428    +else do;
MPRINT(EM_DIAGRAM):   else do;
674429    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
674430    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
674431    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
674432    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
674433    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
674434    +   end;
MPRINT(EM_DIAGRAM):   end;
674435    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
674436    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
674437    +   end;
MPRINT(EM_DIAGRAM):   end;
674438    +   else do;
MPRINT(EM_DIAGRAM):   else do;
674439    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
674440    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
674441    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
674442    +   end;
MPRINT(EM_DIAGRAM):   end;
674443    +end;
MPRINT(EM_DIAGRAM):   end;
674444    +
674445    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
674446    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
674447    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
674448    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
674449    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
674450    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
674451    +end;
MPRINT(EM_DIAGRAM):   end;
674452    +else do;
MPRINT(EM_DIAGRAM):   else do;
674453    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
674454    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
674455    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
674456    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
674457    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
674458    +   end;
MPRINT(EM_DIAGRAM):   end;
674459    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
674460    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
674461    +   end;
MPRINT(EM_DIAGRAM):   end;
674462    +   else do;
MPRINT(EM_DIAGRAM):   else do;
674463    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
674464    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
674465    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
674466    +   end;
MPRINT(EM_DIAGRAM):   end;
674467    +end;
MPRINT(EM_DIAGRAM):   end;
674468    +
674469    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
674470    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
674471    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
674472    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
674473    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
674474    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
674475    +end;
MPRINT(EM_DIAGRAM):   end;
674476    +else do;
MPRINT(EM_DIAGRAM):   else do;
674477    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
674478    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
674479    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
674480    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
674481    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
674482    +   end;
MPRINT(EM_DIAGRAM):   end;
674483    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
674484    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
674485    +   end;
MPRINT(EM_DIAGRAM):   end;
674486    +   else do;
MPRINT(EM_DIAGRAM):   else do;
674487    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
674488    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
674489    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
674490    +   end;
MPRINT(EM_DIAGRAM):   end;
674491    +end;
MPRINT(EM_DIAGRAM):   end;
674492    +
674493    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
674494    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
674495    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
674496    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
674497    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
674498    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
674499    +end;
MPRINT(EM_DIAGRAM):   end;
674500    +else do;
MPRINT(EM_DIAGRAM):   else do;
674501    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
674502    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
674503    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
674504    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
674505    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
674506    +   end;
MPRINT(EM_DIAGRAM):   end;
674507    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
674508    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
674509    +   end;
MPRINT(EM_DIAGRAM):   end;
674510    +   else do;
MPRINT(EM_DIAGRAM):   else do;
674511    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
674512    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
674513    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
674514    +   end;
MPRINT(EM_DIAGRAM):   end;
674515    +end;
MPRINT(EM_DIAGRAM):   end;
674516    +
674517    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
674518    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
674519    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
674520    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
674521    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
674522    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
674523    +end;
MPRINT(EM_DIAGRAM):   end;
674524    +else do;
MPRINT(EM_DIAGRAM):   else do;
674525    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
674526    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
674527    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
674528    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
674529    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
674530    +   end;
MPRINT(EM_DIAGRAM):   end;
674531    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
674532    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
674533    +   end;
MPRINT(EM_DIAGRAM):   end;
674534    +   else do;
MPRINT(EM_DIAGRAM):   else do;
674535    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
674536    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
674537    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
674538    +   end;
MPRINT(EM_DIAGRAM):   end;
674539    +end;
MPRINT(EM_DIAGRAM):   end;
674540    +
674541    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
674542    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
674543    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
674544    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
674545    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
674546    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
674547    +end;
MPRINT(EM_DIAGRAM):   end;
674548    +else do;
MPRINT(EM_DIAGRAM):   else do;
674549    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
674550    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
674551    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
674552    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
674553    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
674554    +   end;
MPRINT(EM_DIAGRAM):   end;
674555    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
674556    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
674557    +   end;
MPRINT(EM_DIAGRAM):   end;
674558    +   else do;
MPRINT(EM_DIAGRAM):   else do;
674559    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
674560    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
674561    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
674562    +   end;
MPRINT(EM_DIAGRAM):   end;
674563    +end;
MPRINT(EM_DIAGRAM):   end;
674564    +
674565    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
674566    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
674567    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
674568    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
674569    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
674570    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
674571    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
674572    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
674573    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
674574    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
674575    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
674576    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
674577    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
674578    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
674579    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
674580    +end;
MPRINT(EM_DIAGRAM):   end;
674581    +else do;
MPRINT(EM_DIAGRAM):   else do;
674582    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
674583    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
674584    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
674585    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
674586    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
674587    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
674588    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
674589    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
674590    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
674591    +         end;
MPRINT(EM_DIAGRAM):   end;
674592    +         else do;
MPRINT(EM_DIAGRAM):   else do;
674593    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
674594    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
674595    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
674596    +            end;
MPRINT(EM_DIAGRAM):   end;
674597    +         end;
MPRINT(EM_DIAGRAM):   end;
674598    +      end;
MPRINT(EM_DIAGRAM):   end;
674599    +      else do;
MPRINT(EM_DIAGRAM):   else do;
674600    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
674601    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
674602    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
674603    +         end;
MPRINT(EM_DIAGRAM):   end;
674604    +      end;
MPRINT(EM_DIAGRAM):   end;
674605    +   end;
MPRINT(EM_DIAGRAM):   end;
674606    +   else do;
MPRINT(EM_DIAGRAM):   else do;
674607    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
674608    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
674609    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
674610    +      end;
MPRINT(EM_DIAGRAM):   end;
674611    +      else do;
MPRINT(EM_DIAGRAM):   else do;
674612    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
674613    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
674614    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
674615    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
674616    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
674617    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
674618    +         end;
MPRINT(EM_DIAGRAM):   end;
674619    +      end;
MPRINT(EM_DIAGRAM):   end;
674620    +   end;
MPRINT(EM_DIAGRAM):   end;
674621    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
674622    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
674623    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
674624    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
674625    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
674626    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
674627    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
674628    +   end;
MPRINT(EM_DIAGRAM):   end;
674629    +end;
MPRINT(EM_DIAGRAM):   end;
674630    +
674631    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
674632    +*** Checking missing input Interval
674633    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
674634    +
674635    +IF NMISS(
674636    +   AcceptedCmpTotal ,
674637    +   Kidhome ,
674638    +   Mnt ,
674639    +   MntFishProducts ,
674640    +   MntFruits ,
674641    +   MntGoldProds ,
674642    +   MntMeatProducts ,
674643    +   MntSweetProducts ,
674644    +   MntWines ,
674645    +   NumCatalogPurchases ,
674646    +   NumDealsPurchases ,
674647    +   NumDistPurchases ,
674648    +   NumStorePurchases ,
674649    +   NumWebPurchases ,
674650    +   NumWebVisitsMonth ,
674651    +   RFMstat ,
674652    +   Recency ,
674653    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Kidhome , Mnt , MntFishProducts , MntFruits 
, MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , 
NumDealsPurchases , NumDistPurchases , NumStorePurchases , NumWebPurchases , NumWebVisitsMonth 
, RFMstat , Recency , Teenhome ) THEN DO;
674654    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
674655    +
674656    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
674657    +END;
MPRINT(EM_DIAGRAM):   END;
674658    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
674659    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
674660    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
674661    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
674662    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
674663    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
674664    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
674665    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
674666    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
674667    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
674668    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
674669    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
674670    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
674671    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
674672    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
674673    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
674674    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
674675    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
674676    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
674677    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
674678    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
674679    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
674680    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
674681    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
674682    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
674683    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
674684    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
674685    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
674686    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
674687    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
674688    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
674689    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
674690    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
674691    +END;
MPRINT(EM_DIAGRAM):   END;
674692    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
674693    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
674694    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
674695    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
674696    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
674697    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
674698    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
674699    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
674700    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
674701    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
674702    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
674703    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
674704    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
674705    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
674706    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
674707    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
674708    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
674709    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
674710    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
674711    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
674712    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
674713    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
674714    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
674715    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
674716    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
674717    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
674718    +   ELSE S_NumCatalogPurchases
674719    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
674720    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
674721    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
674722    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
674723    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
674724    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
674725    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
674726    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
674727    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
674728    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
674729    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
674730    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
674731    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
674732    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
674733    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
674734    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
674735    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
674736    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
674737    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
674738    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
674739    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
674740    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
674741    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
674742    +END;
MPRINT(EM_DIAGRAM):   END;
674743    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
674744    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
674745    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
674746    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
674747    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
674748    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
674749    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
674750    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
674751    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
674752    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
674753    +   H11  =     0.43912775344039 * S_AcceptedCmpTotal  +     0.15324285507227 *
674754    +        S_Kidhome  +     0.02569219772928 * S_Mnt  +     0.22132183806169 *
674755    +        S_MntFishProducts  +    -0.06337563896219 * S_MntFruits
674756    +          +      0.0657331004553 * S_MntGoldProds  +     0.80090124687167 *
674757    +        S_MntMeatProducts  +     0.09182621620999 * S_MntSweetProducts
674758    +          +    -0.41629315832186 * S_MntWines  +     0.39665915225092 *
674759    +        S_NumCatalogPurchases  +     0.35456089035071 * S_NumDealsPurchases
674760    +          +     0.24337801999461 * S_NumDistPurchases
674761    +          +    -0.81198839661616 * S_NumStorePurchases
674762    +          +    -0.41689687433747 * S_NumWebPurchases
674763    +          +     0.48849235469028 * S_NumWebVisitsMonth
674764    +          +     0.27825597215948 * S_RFMstat  +    -0.88374261044519 *
674765    +        S_Recency  +    -0.02773716219523 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.43912775344039 * S_AcceptedCmpTotal + 0.15324285507227 * 
S_Kidhome + 0.02569219772928 * S_Mnt + 0.22132183806169 * S_MntFishProducts + 
-0.06337563896219 * S_MntFruits + 0.0657331004553 * S_MntGoldProds + 0.80090124687167 * 
S_MntMeatProducts + 0.09182621620999 * S_MntSweetProducts + -0.41629315832186 * S_MntWines + 
0.39665915225092 * S_NumCatalogPurchases + 0.35456089035071 * S_NumDealsPurchases + 
0.24337801999461 * S_NumDistPurchases + -0.81198839661616 * S_NumStorePurchases + 
-0.41689687433747 * S_NumWebPurchases + 0.48849235469028 * S_NumWebVisitsMonth + 
0.27825597215948 * S_RFMstat + -0.88374261044519 * S_Recency + -0.02773716219523 * S_Teenhome ;
674766    +   H12  =     0.07434104162353 * S_AcceptedCmpTotal  +    -0.03195098726594 *
674767    +        S_Kidhome  +     0.01543386863542 * S_Mnt  +     0.12485525017443 *
674768    +        S_MntFishProducts  +    -0.30946247800427 * S_MntFruits
674769    +          +    -0.01203402973786 * S_MntGoldProds  +     0.63100948725324 *
674770    +        S_MntMeatProducts  +    -0.22236382332547 * S_MntSweetProducts
674771    +          +    -0.34774748026941 * S_MntWines  +     0.44473136951588 *
674772    +        S_NumCatalogPurchases  +     0.62678568949617 * S_NumDealsPurchases
674773    +          +    -0.31385132988744 * S_NumDistPurchases
674774    +          +    -0.40280836861804 * S_NumStorePurchases
674775    +          +    -0.48794669697044 * S_NumWebPurchases
674776    +          +     0.72338984901279 * S_NumWebVisitsMonth
674777    +          +     0.23547214976166 * S_RFMstat  +     -0.6164747614748 *
674778    +        S_Recency  +     0.04790780856477 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.07434104162353 * S_AcceptedCmpTotal + -0.03195098726594 * 
S_Kidhome + 0.01543386863542 * S_Mnt + 0.12485525017443 * S_MntFishProducts + 
-0.30946247800427 * S_MntFruits + -0.01203402973786 * S_MntGoldProds + 0.63100948725324 * 
S_MntMeatProducts + -0.22236382332547 * S_MntSweetProducts + -0.34774748026941 * S_MntWines + 
0.44473136951588 * S_NumCatalogPurchases + 0.62678568949617 * S_NumDealsPurchases + 
-0.31385132988744 * S_NumDistPurchases + -0.40280836861804 * S_NumStorePurchases + 
-0.48794669697044 * S_NumWebPurchases + 0.72338984901279 * S_NumWebVisitsMonth + 
0.23547214976166 * S_RFMstat + -0.6164747614748 * S_Recency + 0.04790780856477 * S_Teenhome ;
674779    +   H13  =    -0.63820214578159 * S_AcceptedCmpTotal  +     0.49904086064338 *
674780    +        S_Kidhome  +     0.13139593987479 * S_Mnt  +     0.18642565416238 *
674781    +        S_MntFishProducts  +     0.14097505415753 * S_MntFruits
674782    +          +    -0.06937869906897 * S_MntGoldProds  +    -0.44490405662638 *
674783    +        S_MntMeatProducts  +     0.03747875754721 * S_MntSweetProducts
674784    +          +     0.61023960214888 * S_MntWines  +    -0.66633431715473 *
674785    +        S_NumCatalogPurchases  +    -0.17986683579301 * S_NumDealsPurchases
674786    +          +    -0.22919354561837 * S_NumDistPurchases
674787    +          +     0.48900512750371 * S_NumStorePurchases
674788    +          +     0.63563236542104 * S_NumWebPurchases
674789    +          +    -1.24241302949211 * S_NumWebVisitsMonth
674790    +          +    -0.04477686111233 * S_RFMstat  +      1.2888939271922 *
674791    +        S_Recency  +      0.4139068327639 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.63820214578159 * S_AcceptedCmpTotal + 0.49904086064338 * 
S_Kidhome + 0.13139593987479 * S_Mnt + 0.18642565416238 * S_MntFishProducts + 0.14097505415753 
* S_MntFruits + -0.06937869906897 * S_MntGoldProds + -0.44490405662638 * S_MntMeatProducts + 
0.03747875754721 * S_MntSweetProducts + 0.61023960214888 * S_MntWines + -0.66633431715473 * 
S_NumCatalogPurchases + -0.17986683579301 * S_NumDealsPurchases + -0.22919354561837 * 
S_NumDistPurchases + 0.48900512750371 * S_NumStorePurchases + 0.63563236542104 * 
S_NumWebPurchases + -1.24241302949211 * S_NumWebVisitsMonth + -0.04477686111233 * S_RFMstat + 
1.2888939271922 * S_Recency + 0.4139068327639 * S_Teenhome ;
674792    +   H14  =     0.48105826056294 * S_AcceptedCmpTotal  +    -0.42248585066001 *
674793    +        S_Kidhome  +    -0.07174155418099 * S_Mnt  +    -0.42778960343462 *
674794    +        S_MntFishProducts  +     0.09779975165182 * S_MntFruits
674795    +          +     0.02450574144035 * S_MntGoldProds  +     0.84681198347991 *
674796    +        S_MntMeatProducts  +    -0.23934138256418 * S_MntSweetProducts
674797    +          +     0.10825550313301 * S_MntWines  +     0.13496669006169 *
674798    +        S_NumCatalogPurchases  +    -0.07641504001178 * S_NumDealsPurchases
674799    +          +     0.57486886714013 * S_NumDistPurchases
674800    +          +    -0.01439167006681 * S_NumStorePurchases
674801    +          +    -0.22502024795489 * S_NumWebPurchases
674802    +          +     0.31403814101947 * S_NumWebVisitsMonth
674803    +          +     0.06121982713427 * S_RFMstat  +    -0.66476823891241 *
674804    +        S_Recency  +     -0.4404721787316 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.48105826056294 * S_AcceptedCmpTotal + -0.42248585066001 * 
S_Kidhome + -0.07174155418099 * S_Mnt + -0.42778960343462 * S_MntFishProducts + 
0.09779975165182 * S_MntFruits + 0.02450574144035 * S_MntGoldProds + 0.84681198347991 * 
S_MntMeatProducts + -0.23934138256418 * S_MntSweetProducts + 0.10825550313301 * S_MntWines + 
0.13496669006169 * S_NumCatalogPurchases + -0.07641504001178 * S_NumDealsPurchases + 
0.57486886714013 * S_NumDistPurchases + -0.01439167006681 * S_NumStorePurchases + 
-0.22502024795489 * S_NumWebPurchases + 0.31403814101947 * S_NumWebVisitsMonth + 
0.06121982713427 * S_RFMstat + -0.66476823891241 * S_Recency + -0.4404721787316 * S_Teenhome ;
674805    +   H15  =    -0.01000128129385 * S_AcceptedCmpTotal  +     0.06375204613433 *
674806    +        S_Kidhome  +    -0.05376216682906 * S_Mnt  +    -0.08473670073828 *
674807    +        S_MntFishProducts  +     0.13371751007328 * S_MntFruits
674808    +          +     0.11259736161219 * S_MntGoldProds  +     0.03735647266983 *
674809    +        S_MntMeatProducts  +    -0.12544959729848 * S_MntSweetProducts
674810    +          +     0.17571980400351 * S_MntWines  +    -0.09289650416254 *
674811    +        S_NumCatalogPurchases  +    -0.13579396915412 * S_NumDealsPurchases
674812    +          +    -0.18997260805501 * S_NumDistPurchases
674813    +          +     0.29468211427777 * S_NumStorePurchases
674814    +          +     0.17132038178189 * S_NumWebPurchases
674815    +          +    -0.19708361532263 * S_NumWebVisitsMonth
674816    +          +     0.38006918721363 * S_RFMstat  +     0.23377164556017 *
674817    +        S_Recency  +    -0.00205417580177 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.01000128129385 * S_AcceptedCmpTotal + 0.06375204613433 * 
S_Kidhome + -0.05376216682906 * S_Mnt + -0.08473670073828 * S_MntFishProducts + 
0.13371751007328 * S_MntFruits + 0.11259736161219 * S_MntGoldProds + 0.03735647266983 * 
S_MntMeatProducts + -0.12544959729848 * S_MntSweetProducts + 0.17571980400351 * S_MntWines + 
-0.09289650416254 * S_NumCatalogPurchases + -0.13579396915412 * S_NumDealsPurchases + 
-0.18997260805501 * S_NumDistPurchases + 0.29468211427777 * S_NumStorePurchases + 
0.17132038178189 * S_NumWebPurchases + -0.19708361532263 * S_NumWebVisitsMonth + 
0.38006918721363 * S_RFMstat + 0.23377164556017 * S_Recency + -0.00205417580177 * S_Teenhome ;
674818    +   H16  =     0.17294085934065 * S_AcceptedCmpTotal  +    -0.39698389286699 *
674819    +        S_Kidhome  +    -0.13545797896515 * S_Mnt  +    -0.12002803153381 *
674820    +        S_MntFishProducts  +    -0.11507127001045 * S_MntFruits
674821    +          +    -0.12266840134948 * S_MntGoldProds  +    -0.45452045159312 *
674822    +        S_MntMeatProducts  +     0.00553267509866 * S_MntSweetProducts
674823    +          +    -0.15768353487074 * S_MntWines  +    -0.72223742588038 *
674824    +        S_NumCatalogPurchases  +    -0.42741922123767 * S_NumDealsPurchases
674825    +          +    -0.74097227246314 * S_NumDistPurchases
674826    +          +     0.06550389451608 * S_NumStorePurchases
674827    +          +     0.23777098322244 * S_NumWebPurchases
674828    +          +    -0.14585163604726 * S_NumWebVisitsMonth
674829    +          +    -0.39028525061866 * S_RFMstat  +     0.07130869316282 *
674830    +        S_Recency  +    -0.00401659472541 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = 0.17294085934065 * S_AcceptedCmpTotal + -0.39698389286699 * 
S_Kidhome + -0.13545797896515 * S_Mnt + -0.12002803153381 * S_MntFishProducts + 
-0.11507127001045 * S_MntFruits + -0.12266840134948 * S_MntGoldProds + -0.45452045159312 * 
S_MntMeatProducts + 0.00553267509866 * S_MntSweetProducts + -0.15768353487074 * S_MntWines + 
-0.72223742588038 * S_NumCatalogPurchases + -0.42741922123767 * S_NumDealsPurchases + 
-0.74097227246314 * S_NumDistPurchases + 0.06550389451608 * S_NumStorePurchases + 
0.23777098322244 * S_NumWebPurchases + -0.14585163604726 * S_NumWebVisitsMonth + 
-0.39028525061866 * S_RFMstat + 0.07130869316282 * S_Recency + -0.00401659472541 * S_Teenhome ;
674831    +   H11  = H11  +    -0.02007476396722 * AcceptedCmp10
674832    +          +     0.09720288796707 * AcceptedCmp20  +     0.11205658872251 *
674833    +        AcceptedCmp30  +    -0.13511778770753 * AcceptedCmp40
674834    +          +    -0.26504356137187 * AcceptedCmp50  +     0.03201227673285 *
674835    +        Complain0  +    -0.15566647786045 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.02007476396722 * AcceptedCmp10 + 0.09720288796707 * 
AcceptedCmp20 + 0.11205658872251 * AcceptedCmp30 + -0.13511778770753 * AcceptedCmp40 + 
-0.26504356137187 * AcceptedCmp50 + 0.03201227673285 * Complain0 + -0.15566647786045 * 
HigherEducationBinary0 ;
674836    +   H12  = H12  +    -0.52595746088087 * AcceptedCmp10
674837    +          +    -0.15041757209085 * AcceptedCmp20  +    -0.48938205246808 *
674838    +        AcceptedCmp30  +     -0.1982121209098 * AcceptedCmp40
674839    +          +    -0.45745206981227 * AcceptedCmp50  +    -0.24421059586296 *
674840    +        Complain0  +     -0.0372485515029 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.52595746088087 * AcceptedCmp10 + -0.15041757209085 * 
AcceptedCmp20 + -0.48938205246808 * AcceptedCmp30 + -0.1982121209098 * AcceptedCmp40 + 
-0.45745206981227 * AcceptedCmp50 + -0.24421059586296 * Complain0 + -0.0372485515029 * 
HigherEducationBinary0 ;
674841    +   H13  = H13  +    -0.02992554536875 * AcceptedCmp10
674842    +          +     0.20420421321169 * AcceptedCmp20  +     0.17676273529469 *
674843    +        AcceptedCmp30  +     -0.1875050368358 * AcceptedCmp40
674844    +          +     0.44580716573032 * AcceptedCmp50  +     -0.3702812451724 *
674845    +        Complain0  +     0.07192397780717 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.02992554536875 * AcceptedCmp10 + 0.20420421321169 * 
AcceptedCmp20 + 0.17676273529469 * AcceptedCmp30 + -0.1875050368358 * AcceptedCmp40 + 
0.44580716573032 * AcceptedCmp50 + -0.3702812451724 * Complain0 + 0.07192397780717 * 
HigherEducationBinary0 ;
674846    +   H14  = H14  +    -0.24903976363288 * AcceptedCmp10
674847    +          +    -0.33252849654907 * AcceptedCmp20  +    -0.01800268234049 *
674848    +        AcceptedCmp30  +    -0.24627514089072 * AcceptedCmp40
674849    +          +    -0.00915156624914 * AcceptedCmp50  +    -0.05033360712883 *
674850    +        Complain0  +      0.3339375399643 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.24903976363288 * AcceptedCmp10 + -0.33252849654907 * 
AcceptedCmp20 + -0.01800268234049 * AcceptedCmp30 + -0.24627514089072 * AcceptedCmp40 + 
-0.00915156624914 * AcceptedCmp50 + -0.05033360712883 * Complain0 + 0.3339375399643 * 
HigherEducationBinary0 ;
674851    +   H15  = H15  +    -0.27519938462786 * AcceptedCmp10
674852    +          +     0.07731721526247 * AcceptedCmp20  +     0.14906574971325 *
674853    +        AcceptedCmp30  +     0.13255042650483 * AcceptedCmp40
674854    +          +    -0.02940483359408 * AcceptedCmp50  +     0.13352278200648 *
674855    +        Complain0  +     0.08170186393964 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.27519938462786 * AcceptedCmp10 + 0.07731721526247 * 
AcceptedCmp20 + 0.14906574971325 * AcceptedCmp30 + 0.13255042650483 * AcceptedCmp40 + 
-0.02940483359408 * AcceptedCmp50 + 0.13352278200648 * Complain0 + 0.08170186393964 * 
HigherEducationBinary0 ;
674856    +   H16  = H16  +     0.10529304585202 * AcceptedCmp10
674857    +          +     0.31213134788133 * AcceptedCmp20  +     0.30084869783987 *
674858    +        AcceptedCmp30  +    -0.01118871464539 * AcceptedCmp40
674859    +          +    -0.04086250638732 * AcceptedCmp50  +    -0.07837727874375 *
674860    +        Complain0  +     0.12138365487453 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.10529304585202 * AcceptedCmp10 + 0.31213134788133 * 
AcceptedCmp20 + 0.30084869783987 * AcceptedCmp30 + -0.01118871464539 * AcceptedCmp40 + 
-0.04086250638732 * AcceptedCmp50 + -0.07837727874375 * Complain0 + 0.12138365487453 * 
HigherEducationBinary0 ;
674861    +   H11  = H11  +     0.37637396661146 * Marital_StatusDivorced
674862    +          +    -0.26467919055845 * Marital_StatusMarried
674863    +          +     -0.0147004493608 * Marital_StatusSingle
674864    +          +    -0.34554452729743 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.37637396661146 * Marital_StatusDivorced + 
-0.26467919055845 * Marital_StatusMarried + -0.0147004493608 * Marital_StatusSingle + 
-0.34554452729743 * Marital_StatusTogether ;
674865    +   H12  = H12  +    -0.02293194383383 * Marital_StatusDivorced
674866    +          +     0.22656143769796 * Marital_StatusMarried
674867    +          +     -0.2497880429053 * Marital_StatusSingle
674868    +          +     0.00744194900473 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.02293194383383 * Marital_StatusDivorced + 
0.22656143769796 * Marital_StatusMarried + -0.2497880429053 * Marital_StatusSingle + 
0.00744194900473 * Marital_StatusTogether ;
674869    +   H13  = H13  +    -0.08040527368027 * Marital_StatusDivorced
674870    +          +     0.70834351124371 * Marital_StatusMarried
674871    +          +    -0.79585819567656 * Marital_StatusSingle
674872    +          +     0.83850839024957 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.08040527368027 * Marital_StatusDivorced + 
0.70834351124371 * Marital_StatusMarried + -0.79585819567656 * Marital_StatusSingle + 
0.83850839024957 * Marital_StatusTogether ;
674873    +   H14  = H14  +     0.05889234585558 * Marital_StatusDivorced
674874    +          +    -0.94141743088603 * Marital_StatusMarried
674875    +          +     0.86423540784285 * Marital_StatusSingle
674876    +          +     -0.6260719130207 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.05889234585558 * Marital_StatusDivorced + 
-0.94141743088603 * Marital_StatusMarried + 0.86423540784285 * Marital_StatusSingle + 
-0.6260719130207 * Marital_StatusTogether ;
674877    +   H15  = H15  +     0.19106392110706 * Marital_StatusDivorced
674878    +          +    -0.18189885719847 * Marital_StatusMarried
674879    +          +     0.36145162549083 * Marital_StatusSingle
674880    +          +    -0.26654643410008 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.19106392110706 * Marital_StatusDivorced + 
-0.18189885719847 * Marital_StatusMarried + 0.36145162549083 * Marital_StatusSingle + 
-0.26654643410008 * Marital_StatusTogether ;
674881    +   H16  = H16  +     0.08265128366103 * Marital_StatusDivorced
674882    +          +    -0.52831758614523 * Marital_StatusMarried
674883    +          +    -0.12671844940828 * Marital_StatusSingle
674884    +          +    -0.43605855534313 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.08265128366103 * Marital_StatusDivorced + 
-0.52831758614523 * Marital_StatusMarried + -0.12671844940828 * Marital_StatusSingle + 
-0.43605855534313 * Marital_StatusTogether ;
674885    +   H11  =     -1.3276216013071 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.3276216013071 + H11 ;
674886    +   H12  =    -0.00525373429217 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.00525373429217 + H12 ;
674887    +   H13  =     0.30688582916965 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.30688582916965 + H13 ;
674888    +   H14  =    -1.32677970876573 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -1.32677970876573 + H14 ;
674889    +   H15  =      0.7399814373424 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.7399814373424 + H15 ;
674890    +   H16  =    -1.64568358786672 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.64568358786672 + H16 ;
674891    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
674892    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
674893    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
674894    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
674895    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
674896    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
674897    +END;
MPRINT(EM_DIAGRAM):   END;
674898    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
674899    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
674900    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
674901    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
674902    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
674903    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
674904    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
674905    +END;
MPRINT(EM_DIAGRAM):   END;
674906    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
674907    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
674908    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
674909    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
674910    +   P_DepVar1  =     1.40410400811948 * H11  +      1.6065080260622 * H12
674911    +          +    -2.28029439254425 * H13  +     2.12025707381767 * H14
674912    +          +    -0.28698895635258 * H15  +    -1.55666643166016 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.40410400811948 * H11 + 1.6065080260622 * H12 + 
-2.28029439254425 * H13 + 2.12025707381767 * H14 + -0.28698895635258 * H15 + -1.55666643166016 
* H16 ;
674913    +   P_DepVar1  =    -1.08867940823404 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.08867940823404 + P_DepVar1 ;
674914    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
674915    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
674916    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
674917    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
674918    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
674919    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
674920    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
674921    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
674922    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
674923    +END;
MPRINT(EM_DIAGRAM):   END;
674924    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
674925    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
674926    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
674927    +END;
MPRINT(EM_DIAGRAM):   END;
674928    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
674929    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
674930    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
674931    +END;
MPRINT(EM_DIAGRAM):   END;
674932    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
674933    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
674934    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
674935    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
674936    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
674937    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
674938    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
674939    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
674940    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
674941    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
674942    +END;
MPRINT(EM_DIAGRAM):   END;
674943    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
674944    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
674945    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
674946    +drop
674947    +H11
674948    +H12
674949    +H13
674950    +H14
674951    +H15
674952    +H16
674953    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
674954    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
674955     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
674956     quit;
674957     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
674958     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
674959     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
674960     retain ID 2 Node "Neural9";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural9";
674961     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
674962     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2190 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2190 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

674963     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
674964     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
674965     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2190 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2190 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

674966     proc sort data=EMWS8.Neural9_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural9_variableset out=_temp2(keep=NAME CREATOR);
674967     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
674968     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.NEURAL9_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

674969     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
674970     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
674971     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
674972     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

674973     proc contents data=EMWS8.Neural9_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural9_train out=_meta(keep=NAME) noprint;
674974     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

674975     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
674976     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
674977     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

674978     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
674979     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
674980     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
674981     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

674982     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
674983     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
674983   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1174 rows and 5 columns.

674984     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

674985     proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
674986     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1174 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL_FCMP has 1174 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

674987     filename _pref
674987   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
674988     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
674989     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
674990    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
674991    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
674992    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
674993    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
674994    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
674995    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
674996     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
674997     quit;
674998     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
674999     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
675000     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
675001     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
675002     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
675003     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

675004     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
675005     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
675006     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

675007     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
675008     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
675009     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

675010     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
675011     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
675012     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
675013     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

675014     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
675015     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.24 seconds
      cpu time            0.01 seconds
      

675016     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
675017     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
675018     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

675019     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
675020     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
675021     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
675022     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

675023     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
675024     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
675024   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

675025     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

675026     proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
675027     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL_FCMP has 1178 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

675028     filename _pref
675028   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
675029     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
675030     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
675031    +
675032    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
675033    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
675033   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
675034    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
675035    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
675036    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
675037    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
675038    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
675039     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
675040     quit;
675041     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
675042     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
675043     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
675044     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
675045     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
675046     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

675047     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
675048     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
675049     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

675050     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
675051     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
675052     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

675053     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
675054     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
675055     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
675056     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

675057     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
675058     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

675059     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
675060     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
675061     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

675062     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
675063     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
675064     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
675065     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

675066     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
675067     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
675067   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

675068     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

675069     proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
675070     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL_FCMP has 1217 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

675071     filename _pref
675071   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
675072     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
675073     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
675074    +
675075    +
675076    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
675077    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
675078    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
675079    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
675080    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
675081    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
675082    +
675083    +
675084    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
675085    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
675086    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
675087    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
675088    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
675089    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
675090    +
675091    +
675092    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
675093    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
675094    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
675095    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
675096    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
675097    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
675098    +
675099    +
675100    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
675101    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
675102    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
675103    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
675104    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
675105    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
675106    +
675107    +
675108    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
675109    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
675110    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
675111    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
675112    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
675113    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
675114    +
675115    +
675116    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
675117    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
675118    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
675119    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
675120    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
675121    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
675122    +
675123    +
675124    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
675125    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
675126    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
675127    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
675128    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
675129    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
675130    +
675131    +
675132    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
675133    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
675134    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
675135    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
675136    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
675137    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
675138    +if
675139    +_FILTERNORM1 not in ( '.')
675140    + and
675141    +_FILTERNORM2 not in ( '.')
675142    + and
675143    +_FILTERNORM3 not in ( '.')
675144    + and
675145    +_FILTERNORM4 not in ( '.')
675146    + and
675147    +_FILTERNORM5 not in ( '.')
675148    + and
675149    +_FILTERNORM6 not in ( '.')
675150    + and
675151    +_FILTERNORM7 not in ( ' ')
675152    + and
675153    +_FILTERNORM8 not in ( ' ')
675154    +and
675155    +( Dt_Customer ne .)
675156    +and ( Income ne . and (Income<=107000))
675157    +and ( Kidhome ne .)
675158    +and ( MntFishProducts ne .)
675159    +and ( MntFruits ne .)
675160    +and ( MntGoldProds ne .)
675161    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
675162    +and ( MntSweetProducts ne .)
675163    +and ( MntWines ne .)
675164    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
675165    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
675166    +and ( NumStorePurchases ne .)
675167    +and ( NumWebPurchases ne .)
675168    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
675169    +and ( Recency ne .)
675170    +and ( Teenhome ne .)
675171    +and ( Year_Birth ne .)
675172    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
675173    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
675174    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
675175    +end;
MPRINT(EM_DIAGRAM):   end;
675176    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
675177    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
675178     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
675179     quit;
675180     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
675181     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
675182     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
675183     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
675184     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
675185     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

675186     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
675187     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
675188     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

675189     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
675190     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
675191     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

675192     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
675193     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
675194     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
675195     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

675196     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
675197     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

675198     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
675199     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
675200     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

675201     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
675202     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
675203     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
675204     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

675205     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
675206     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
675206   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

675207     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

675208     proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
675209     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL_FCMP has 1283 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

675210     %macro varDept(fcmpdata=,id=);
675211     %global nobs&id scoreFlag&id;
675212     %let scoreFlag&id = 0;
675213     %if &id=1 or ^&fcmpStart %then %do;
675214     proc sort data=&fcmpdata out=_temp&id nodupkey;
675215     by NAME;
675216     where id=&id and LHS in( %let j=1;
675217     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
675218     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
675219     "&var" %let j = %eval(&j+1);
675220     %end;
675221     );
675222     run;
675223     %let dsid = %sysfunc(open(_temp&id));
675224     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
675225     %let dsid = %sysfunc(close(&dsid));
675226     %if &&nobs&id %then %do;
675227     %let scoreFlag&id = 1;
675228     %let fcmpStart = 1;
675229     %end;
675230     %else %let fcmpStart = 0;
675231     %end;
675232     %else %do;
675233     proc sort data=&fcmpdata out=_tempid;
675234     where id=&id;
675235     by LHS;
675236     run;
675237     %let dsid = %sysfunc(open(_tempid));
675238     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
675239     %let dsid = %sysfunc(close(&dsid));
675240     %if ^&&nobs&id %then %do;
675241     proc datasets lib=work nolist;
675242     delete _tempid;
675243     run;
675244     quit;
675245     %end;
675246     %else %do;
675247     data _tempAll;
675248     set %let j=%eval(&id-1);
675249     %do x=1 %to &j;
675250     %if &&nobs&x %then %do;
675251     _temp&x %end;
675252     %end;
675253     ;
675254     run;
675255     proc sql;
675256     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
675256   ! work._tempid p2 where p.name=p2.lhs;
675257     quit;
675258     data _temp&id;
675259     set _temp&id;
675260     where LHS ne '' and NAME ne '' and Node ne '';
675261     run;
675262     proc datasets lib=work nolist;
675263     delete _tempAll;
675264     run;
675265     %let dsid = %sysfunc(open(_temp&id));
675266     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
675267     %let dsid = %sysfunc(close(&dsid));
675268     %if ^&&nobs&id %then %do;
675269     proc datasets lib=work nolist;
675270     delete _temp&id;
675271     run;
675272     quit;
675273     %end;
675274     %else %do;
675275     %let scoreFlag&id = 1;
675276     data _temp&id;
675277     set _temp&id;
675278     where LHS ne NAME and node ne '';
675279     run;
675280     %let dsid = %sysfunc(open(_temp&id));
675281     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
675282     %let dsid = %sysfunc(close(&dsid));
675283     %if ^&&nobs&id %then %do;
675284     proc datasets lib=work nolist;
675285     delete _temp&id;
675286     run;
675287     quit;
675288     %end;
675289     %else %do;
675290     proc sort data=_temp&id nodupkey;
675291     by LHS NAME;
675292     run;
675293     %end;
675294     %end;
675295     %end;
675296     %end;
675297     %mend varDept;
675298     %macro optCode(outdata=fcmpdata);
675299     %global fcmpStart;
675300     %let fcmpStart = 0;
675301     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
675302     %let NumNodes=9;
675303     %do k=1 %to &NumNodes;
675304     %vardept(fcmpdata=&outdata, id=&k);
675305     %end;
675306     %mend optCode;
675307     %optcode(outData=EMWS8.Ensmbl_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 110 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 82 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 28 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 28 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 28 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 3 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 3 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 3 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 3 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 28 observations read from the data set WORK._TEMP2.
NOTE: There were 3 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 24 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 24 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 24 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 24 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 24 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 24 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 24 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 28 observations read from the data set WORK._TEMP2.
NOTE: There were 3 observations read from the data set WORK._TEMP5.
NOTE: There were 24 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 55 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

675308     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
675309     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
675310     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
675311     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

675312     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
675313     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
675314     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
675315     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

675316     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
675317     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
675317   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 3 rows and 3 columns.

675318     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

675319     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
675320     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
675321     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 3 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 3 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

675322     filename _pref
675322   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural10\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural10\EMPUBLISHSCORE.sas";
675323     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
675324     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural10\EMPUBLISHSCORE.sas.
675325    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
675326    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
675327    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
675328    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
675329    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
675330    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
675331    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
675332    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
675333    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
675334    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
675335    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
675336    +LENGTH _WARN_ $4
675337    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
675338    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
675339    +
675340    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
675341    +
675342    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
675343    +
675344    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
675345    +
675346    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
675347    +
675348    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
675349    +
675350    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
675351    +
675352    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
675353    +
675354    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
675355    +
675356    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
675357    +
675358    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
675359    +
675360    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
675361    +
675362    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
675363    +
675364    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
675365    +
675366    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
675367    +
675368    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
675369    +
675370    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
675371    +
675372    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
675373    +
675374    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
675375    +
675376    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
675377    +
675378    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
675379    +
675380    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
675381    +
675382    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
675383    +
675384    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
675385    +
675386    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
675387    +
675388    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
675389    +
675390    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
675391    +
675392    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
675393    +
675394    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
675395    +
675396    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
675397    +
675398    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
675399    +
675400    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
675401    +
675402    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
675403    +
675404    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
675405    +
675406    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
675407    +
675408    +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
675409    +
675410    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
675411    +
675412    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
675413    +
675414    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
675415    +
675416    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
675417    +
675418    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
675419    +
675420    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
675421    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
675422    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
675423    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
675424    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
675425    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
675426    +end;
MPRINT(EM_DIAGRAM):   end;
675427    +else do;
MPRINT(EM_DIAGRAM):   else do;
675428    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
675429    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
675430    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
675431    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
675432    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
675433    +   end;
MPRINT(EM_DIAGRAM):   end;
675434    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
675435    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
675436    +   end;
MPRINT(EM_DIAGRAM):   end;
675437    +   else do;
MPRINT(EM_DIAGRAM):   else do;
675438    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
675439    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
675440    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
675441    +   end;
MPRINT(EM_DIAGRAM):   end;
675442    +end;
MPRINT(EM_DIAGRAM):   end;
675443    +
675444    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
675445    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
675446    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
675447    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
675448    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
675449    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
675450    +end;
MPRINT(EM_DIAGRAM):   end;
675451    +else do;
MPRINT(EM_DIAGRAM):   else do;
675452    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
675453    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
675454    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
675455    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
675456    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
675457    +   end;
MPRINT(EM_DIAGRAM):   end;
675458    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
675459    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
675460    +   end;
MPRINT(EM_DIAGRAM):   end;
675461    +   else do;
MPRINT(EM_DIAGRAM):   else do;
675462    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
675463    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
675464    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
675465    +   end;
MPRINT(EM_DIAGRAM):   end;
675466    +end;
MPRINT(EM_DIAGRAM):   end;
675467    +
675468    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
675469    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
675470    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
675471    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
675472    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
675473    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
675474    +end;
MPRINT(EM_DIAGRAM):   end;
675475    +else do;
MPRINT(EM_DIAGRAM):   else do;
675476    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
675477    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
675478    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
675479    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
675480    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
675481    +   end;
MPRINT(EM_DIAGRAM):   end;
675482    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
675483    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
675484    +   end;
MPRINT(EM_DIAGRAM):   end;
675485    +   else do;
MPRINT(EM_DIAGRAM):   else do;
675486    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
675487    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
675488    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
675489    +   end;
MPRINT(EM_DIAGRAM):   end;
675490    +end;
MPRINT(EM_DIAGRAM):   end;
675491    +
675492    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
675493    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
675494    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
675495    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
675496    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
675497    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
675498    +end;
MPRINT(EM_DIAGRAM):   end;
675499    +else do;
MPRINT(EM_DIAGRAM):   else do;
675500    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
675501    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
675502    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
675503    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
675504    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
675505    +   end;
MPRINT(EM_DIAGRAM):   end;
675506    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
675507    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
675508    +   end;
MPRINT(EM_DIAGRAM):   end;
675509    +   else do;
MPRINT(EM_DIAGRAM):   else do;
675510    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
675511    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
675512    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
675513    +   end;
MPRINT(EM_DIAGRAM):   end;
675514    +end;
MPRINT(EM_DIAGRAM):   end;
675515    +
675516    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
675517    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
675518    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
675519    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
675520    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
675521    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
675522    +end;
MPRINT(EM_DIAGRAM):   end;
675523    +else do;
MPRINT(EM_DIAGRAM):   else do;
675524    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
675525    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
675526    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
675527    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
675528    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
675529    +   end;
MPRINT(EM_DIAGRAM):   end;
675530    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
675531    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
675532    +   end;
MPRINT(EM_DIAGRAM):   end;
675533    +   else do;
MPRINT(EM_DIAGRAM):   else do;
675534    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
675535    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
675536    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
675537    +   end;
MPRINT(EM_DIAGRAM):   end;
675538    +end;
MPRINT(EM_DIAGRAM):   end;
675539    +
675540    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
675541    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
675542    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
675543    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
675544    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
675545    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
675546    +end;
MPRINT(EM_DIAGRAM):   end;
675547    +else do;
MPRINT(EM_DIAGRAM):   else do;
675548    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
675549    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
675550    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
675551    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
675552    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
675553    +   end;
MPRINT(EM_DIAGRAM):   end;
675554    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
675555    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
675556    +   end;
MPRINT(EM_DIAGRAM):   end;
675557    +   else do;
MPRINT(EM_DIAGRAM):   else do;
675558    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
675559    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
675560    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
675561    +   end;
MPRINT(EM_DIAGRAM):   end;
675562    +end;
MPRINT(EM_DIAGRAM):   end;
675563    +
675564    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
675565    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
675566    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
675567    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
675568    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
675569    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
675570    +end;
MPRINT(EM_DIAGRAM):   end;
675571    +else do;
MPRINT(EM_DIAGRAM):   else do;
675572    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
675573    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
675574    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
675575    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
675576    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
675577    +   end;
MPRINT(EM_DIAGRAM):   end;
675578    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
675579    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
675580    +   end;
MPRINT(EM_DIAGRAM):   end;
675581    +   else do;
MPRINT(EM_DIAGRAM):   else do;
675582    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
675583    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
675584    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
675585    +   end;
MPRINT(EM_DIAGRAM):   end;
675586    +end;
MPRINT(EM_DIAGRAM):   end;
675587    +
675588    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
675589    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
675590    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
675591    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
675592    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
675593    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
675594    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
675595    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
675596    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
675597    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
675598    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
675599    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
675600    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
675601    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
675602    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
675603    +end;
MPRINT(EM_DIAGRAM):   end;
675604    +else do;
MPRINT(EM_DIAGRAM):   else do;
675605    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
675606    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
675607    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
675608    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
675609    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
675610    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
675611    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
675612    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
675613    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
675614    +         end;
MPRINT(EM_DIAGRAM):   end;
675615    +         else do;
MPRINT(EM_DIAGRAM):   else do;
675616    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
675617    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
675618    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
675619    +            end;
MPRINT(EM_DIAGRAM):   end;
675620    +         end;
MPRINT(EM_DIAGRAM):   end;
675621    +      end;
MPRINT(EM_DIAGRAM):   end;
675622    +      else do;
MPRINT(EM_DIAGRAM):   else do;
675623    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
675624    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
675625    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
675626    +         end;
MPRINT(EM_DIAGRAM):   end;
675627    +      end;
MPRINT(EM_DIAGRAM):   end;
675628    +   end;
MPRINT(EM_DIAGRAM):   end;
675629    +   else do;
MPRINT(EM_DIAGRAM):   else do;
675630    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
675631    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
675632    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
675633    +      end;
MPRINT(EM_DIAGRAM):   end;
675634    +      else do;
MPRINT(EM_DIAGRAM):   else do;
675635    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
675636    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
675637    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
675638    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
675639    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
675640    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
675641    +         end;
MPRINT(EM_DIAGRAM):   end;
675642    +      end;
MPRINT(EM_DIAGRAM):   end;
675643    +   end;
MPRINT(EM_DIAGRAM):   end;
675644    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
675645    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
675646    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
675647    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
675648    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
675649    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
675650    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
675651    +   end;
MPRINT(EM_DIAGRAM):   end;
675652    +end;
MPRINT(EM_DIAGRAM):   end;
675653    +
675654    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
675655    +*** Checking missing input Interval
675656    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
675657    +
675658    +IF NMISS(
675659    +   AcceptedCmpTotal ,
675660    +   Kidhome ,
675661    +   Mnt ,
675662    +   MntFishProducts ,
675663    +   MntFruits ,
675664    +   MntGoldProds ,
675665    +   MntMeatProducts ,
675666    +   MntSweetProducts ,
675667    +   MntWines ,
675668    +   NumCatalogPurchases ,
675669    +   NumDealsPurchases ,
675670    +   NumDistPurchases ,
675671    +   NumStorePurchases ,
675672    +   NumWebPurchases ,
675673    +   NumWebVisitsMonth ,
675674    +   RFMstat ,
675675    +   Recency ,
675676    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Kidhome , Mnt , MntFishProducts , MntFruits 
, MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , 
NumDealsPurchases , NumDistPurchases , NumStorePurchases , NumWebPurchases , NumWebVisitsMonth 
, RFMstat , Recency , Teenhome ) THEN DO;
675677    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
675678    +
675679    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
675680    +END;
MPRINT(EM_DIAGRAM):   END;
675681    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
675682    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
675683    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
675684    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
675685    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
675686    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
675687    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
675688    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
675689    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
675690    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
675691    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
675692    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
675693    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
675694    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
675695    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
675696    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
675697    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
675698    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
675699    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
675700    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
675701    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
675702    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
675703    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
675704    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
675705    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
675706    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
675707    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
675708    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
675709    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
675710    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
675711    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
675712    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
675713    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
675714    +END;
MPRINT(EM_DIAGRAM):   END;
675715    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
675716    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
675717    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
675718    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
675719    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
675720    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
675721    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
675722    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
675723    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
675724    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
675725    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
675726    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
675727    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
675728    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
675729    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
675730    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
675731    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
675732    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
675733    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
675734    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
675735    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
675736    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
675737    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
675738    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
675739    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
675740    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
675741    +   ELSE S_NumCatalogPurchases
675742    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
675743    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
675744    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
675745    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
675746    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
675747    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
675748    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
675749    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
675750    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
675751    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
675752    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
675753    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
675754    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
675755    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
675756    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
675757    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
675758    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
675759    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
675760    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
675761    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
675762    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
675763    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
675764    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
675765    +END;
MPRINT(EM_DIAGRAM):   END;
675766    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
675767    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
675768    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
675769    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
675770    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
675771    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
675772    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
675773    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
675774    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
675775    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
675776    +   H11  =    -0.05593591984236 * S_AcceptedCmpTotal  +    -0.15222591404968 *
675777    +        S_Kidhome  +    -0.14333543557998 * S_Mnt  +    -0.15248110960637 *
675778    +        S_MntFishProducts  +     0.21423389210826 * S_MntFruits
675779    +          +     0.27583997827488 * S_MntGoldProds  +     0.33906941857334 *
675780    +        S_MntMeatProducts  +    -0.18189684051157 * S_MntSweetProducts
675781    +          +    -0.14699487046336 * S_MntWines  +     0.12279108001012 *
675782    +        S_NumCatalogPurchases  +    -0.13784967978035 * S_NumDealsPurchases
675783    +          +     0.31907604696327 * S_NumDistPurchases
675784    +          +    -0.02337643350225 * S_NumStorePurchases
675785    +          +    -0.03710870748613 * S_NumWebPurchases
675786    +          +    -0.09050794174833 * S_NumWebVisitsMonth
675787    +          +    -0.03038236905639 * S_RFMstat  +     -0.1425750250249 *
675788    +        S_Recency  +     0.28728724059371 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.05593591984236 * S_AcceptedCmpTotal + -0.15222591404968 * 
S_Kidhome + -0.14333543557998 * S_Mnt + -0.15248110960637 * S_MntFishProducts + 
0.21423389210826 * S_MntFruits + 0.27583997827488 * S_MntGoldProds + 0.33906941857334 * 
S_MntMeatProducts + -0.18189684051157 * S_MntSweetProducts + -0.14699487046336 * S_MntWines + 
0.12279108001012 * S_NumCatalogPurchases + -0.13784967978035 * S_NumDealsPurchases + 
0.31907604696327 * S_NumDistPurchases + -0.02337643350225 * S_NumStorePurchases + 
-0.03710870748613 * S_NumWebPurchases + -0.09050794174833 * S_NumWebVisitsMonth + 
-0.03038236905639 * S_RFMstat + -0.1425750250249 * S_Recency + 0.28728724059371 * S_Teenhome ;
675789    +   H12  =     0.02658934126333 * S_AcceptedCmpTotal  +     0.00729222523123 *
675790    +        S_Kidhome  +    -0.16054040072952 * S_Mnt  +     0.21368744829668 *
675791    +        S_MntFishProducts  +    -0.38567748679786 * S_MntFruits
675792    +          +     0.01538770837896 * S_MntGoldProds  +     0.26799837156516 *
675793    +        S_MntMeatProducts  +    -0.03227992228949 * S_MntSweetProducts
675794    +          +    -0.05332837299227 * S_MntWines  +    -0.59456078768767 *
675795    +        S_NumCatalogPurchases  +    -0.30459286527334 * S_NumDealsPurchases
675796    +          +     0.09101667200647 * S_NumDistPurchases
675797    +          +     0.15756950151025 * S_NumStorePurchases
675798    +          +    -0.25413468685639 * S_NumWebPurchases
675799    +          +     0.05860616268336 * S_NumWebVisitsMonth
675800    +          +     0.15733068754241 * S_RFMstat  +    -0.45821943962804 *
675801    +        S_Recency  +    -0.27642512764036 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.02658934126333 * S_AcceptedCmpTotal + 0.00729222523123 * 
S_Kidhome + -0.16054040072952 * S_Mnt + 0.21368744829668 * S_MntFishProducts + 
-0.38567748679786 * S_MntFruits + 0.01538770837896 * S_MntGoldProds + 0.26799837156516 * 
S_MntMeatProducts + -0.03227992228949 * S_MntSweetProducts + -0.05332837299227 * S_MntWines + 
-0.59456078768767 * S_NumCatalogPurchases + -0.30459286527334 * S_NumDealsPurchases + 
0.09101667200647 * S_NumDistPurchases + 0.15756950151025 * S_NumStorePurchases + 
-0.25413468685639 * S_NumWebPurchases + 0.05860616268336 * S_NumWebVisitsMonth + 
0.15733068754241 * S_RFMstat + -0.45821943962804 * S_Recency + -0.27642512764036 * S_Teenhome ;
675802    +   H13  =     0.16918999382902 * S_AcceptedCmpTotal  +     -0.4012305600884 *
675803    +        S_Kidhome  +     0.26493497259127 * S_Mnt  +     0.04728975645729 *
675804    +        S_MntFishProducts  +      0.0315247200365 * S_MntFruits
675805    +          +    -0.04096342555085 * S_MntGoldProds  +     0.56434077264537 *
675806    +        S_MntMeatProducts  +    -0.09161669649727 * S_MntSweetProducts
675807    +          +    -0.39043511079678 * S_MntWines  +     0.54393711558115 *
675808    +        S_NumCatalogPurchases  +    -0.01184328299667 * S_NumDealsPurchases
675809    +          +      0.3986742546267 * S_NumDistPurchases
675810    +          +     0.01771277995324 * S_NumStorePurchases
675811    +          +    -0.01959916713409 * S_NumWebPurchases
675812    +          +     0.60679036120713 * S_NumWebVisitsMonth
675813    +          +     0.08435948584344 * S_RFMstat  +    -0.95524595397707 *
675814    +        S_Recency  +    -0.25065878895323 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.16918999382902 * S_AcceptedCmpTotal + -0.4012305600884 * 
S_Kidhome + 0.26493497259127 * S_Mnt + 0.04728975645729 * S_MntFishProducts + 0.0315247200365 
* S_MntFruits + -0.04096342555085 * S_MntGoldProds + 0.56434077264537 * S_MntMeatProducts + 
-0.09161669649727 * S_MntSweetProducts + -0.39043511079678 * S_MntWines + 0.54393711558115 * 
S_NumCatalogPurchases + -0.01184328299667 * S_NumDealsPurchases + 0.3986742546267 * 
S_NumDistPurchases + 0.01771277995324 * S_NumStorePurchases + -0.01959916713409 * 
S_NumWebPurchases + 0.60679036120713 * S_NumWebVisitsMonth + 0.08435948584344 * S_RFMstat + 
-0.95524595397707 * S_Recency + -0.25065878895323 * S_Teenhome ;
675815    +   H14  =    -0.16659499847061 * S_AcceptedCmpTotal  +     0.02357084658349 *
675816    +        S_Kidhome  +     0.05388140126658 * S_Mnt  +    -0.05810927736046 *
675817    +        S_MntFishProducts  +    -0.15826458235953 * S_MntFruits
675818    +          +    -0.41850090574896 * S_MntGoldProds  +    -0.26401541533988 *
675819    +        S_MntMeatProducts  +     0.04480310739087 * S_MntSweetProducts
675820    +          +      0.1225741493226 * S_MntWines  +    -0.56748657856846 *
675821    +        S_NumCatalogPurchases  +    -0.69394311075706 * S_NumDealsPurchases
675822    +          +    -0.56367315288861 * S_NumDistPurchases
675823    +          +     0.22181323985263 * S_NumStorePurchases
675824    +          +    -0.06232830057869 * S_NumWebPurchases
675825    +          +    -0.16027390604517 * S_NumWebVisitsMonth
675826    +          +    -0.09981217676274 * S_RFMstat  +    -0.04262244153265 *
675827    +        S_Recency  +    -0.17321366891816 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.16659499847061 * S_AcceptedCmpTotal + 0.02357084658349 * 
S_Kidhome + 0.05388140126658 * S_Mnt + -0.05810927736046 * S_MntFishProducts + 
-0.15826458235953 * S_MntFruits + -0.41850090574896 * S_MntGoldProds + -0.26401541533988 * 
S_MntMeatProducts + 0.04480310739087 * S_MntSweetProducts + 0.1225741493226 * S_MntWines + 
-0.56748657856846 * S_NumCatalogPurchases + -0.69394311075706 * S_NumDealsPurchases + 
-0.56367315288861 * S_NumDistPurchases + 0.22181323985263 * S_NumStorePurchases + 
-0.06232830057869 * S_NumWebPurchases + -0.16027390604517 * S_NumWebVisitsMonth + 
-0.09981217676274 * S_RFMstat + -0.04262244153265 * S_Recency + -0.17321366891816 * S_Teenhome 
;
675828    +   H15  =    -0.03881766208476 * S_AcceptedCmpTotal  +      0.3555777614453 *
675829    +        S_Kidhome  +     0.15023474562078 * S_Mnt  +    -0.28470673338867 *
675830    +        S_MntFishProducts  +    -0.16436807986852 * S_MntFruits
675831    +          +     0.15942617624256 * S_MntGoldProds  +     1.26624544782503 *
675832    +        S_MntMeatProducts  +      0.0500748594942 * S_MntSweetProducts
675833    +          +      0.1213695191802 * S_MntWines  +     1.23017810696609 *
675834    +        S_NumCatalogPurchases  +     0.26589246063072 * S_NumDealsPurchases
675835    +          +      0.2955712939881 * S_NumDistPurchases
675836    +          +     -0.5433445349483 * S_NumStorePurchases
675837    +          +    -0.59265227511161 * S_NumWebPurchases
675838    +          +     0.00366326444932 * S_NumWebVisitsMonth
675839    +          +     0.25124432206112 * S_RFMstat  +    -0.08596429987285 *
675840    +        S_Recency  +    -0.19264562465751 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.03881766208476 * S_AcceptedCmpTotal + 0.3555777614453 * 
S_Kidhome + 0.15023474562078 * S_Mnt + -0.28470673338867 * S_MntFishProducts + 
-0.16436807986852 * S_MntFruits + 0.15942617624256 * S_MntGoldProds + 1.26624544782503 * 
S_MntMeatProducts + 0.0500748594942 * S_MntSweetProducts + 0.1213695191802 * S_MntWines + 
1.23017810696609 * S_NumCatalogPurchases + 0.26589246063072 * S_NumDealsPurchases + 
0.2955712939881 * S_NumDistPurchases + -0.5433445349483 * S_NumStorePurchases + 
-0.59265227511161 * S_NumWebPurchases + 0.00366326444932 * S_NumWebVisitsMonth + 
0.25124432206112 * S_RFMstat + -0.08596429987285 * S_Recency + -0.19264562465751 * S_Teenhome ;
675841    +   H16  =      0.4256391916459 * S_AcceptedCmpTotal  +    -0.14933442450857 *
675842    +        S_Kidhome  +     0.11321190053106 * S_Mnt  +    -0.08228540664731 *
675843    +        S_MntFishProducts  +    -0.44605772880289 * S_MntFruits
675844    +          +     0.02398042304084 * S_MntGoldProds  +     1.02247698844519 *
675845    +        S_MntMeatProducts  +    -0.29299854989186 * S_MntSweetProducts
675846    +          +    -0.55069644292933 * S_MntWines  +      0.6692377268179 *
675847    +        S_NumCatalogPurchases  +     0.70282032902203 * S_NumDealsPurchases
675848    +          +    -0.42166207183939 * S_NumDistPurchases
675849    +          +    -0.74339843972857 * S_NumStorePurchases
675850    +          +    -0.61598427613968 * S_NumWebPurchases
675851    +          +     0.88769400454452 * S_NumWebVisitsMonth
675852    +          +     0.45864975080775 * S_RFMstat  +    -1.00498331113421 *
675853    +        S_Recency  +    -0.06157944188263 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = 0.4256391916459 * S_AcceptedCmpTotal + -0.14933442450857 * 
S_Kidhome + 0.11321190053106 * S_Mnt + -0.08228540664731 * S_MntFishProducts + 
-0.44605772880289 * S_MntFruits + 0.02398042304084 * S_MntGoldProds + 1.02247698844519 * 
S_MntMeatProducts + -0.29299854989186 * S_MntSweetProducts + -0.55069644292933 * S_MntWines + 
0.6692377268179 * S_NumCatalogPurchases + 0.70282032902203 * S_NumDealsPurchases + 
-0.42166207183939 * S_NumDistPurchases + -0.74339843972857 * S_NumStorePurchases + 
-0.61598427613968 * S_NumWebPurchases + 0.88769400454452 * S_NumWebVisitsMonth + 
0.45864975080775 * S_RFMstat + -1.00498331113421 * S_Recency + -0.06157944188263 * S_Teenhome ;
675854    +   H17  =     0.63900672999082 * S_AcceptedCmpTotal  +    -0.30964832179168 *
675855    +        S_Kidhome  +    -0.32513653413684 * S_Mnt  +    -0.24581000667509 *
675856    +        S_MntFishProducts  +     0.02617694172605 * S_MntFruits
675857    +          +     0.00781760579393 * S_MntGoldProds  +     0.29104948109042 *
675858    +        S_MntMeatProducts  +    -0.02316001924491 * S_MntSweetProducts
675859    +          +    -0.36691071804931 * S_MntWines  +     0.32387184925622 *
675860    +        S_NumCatalogPurchases  +    -0.02259558698489 * S_NumDealsPurchases
675861    +          +    -0.05302323558282 * S_NumDistPurchases
675862    +          +    -0.61057201236183 * S_NumStorePurchases
675863    +          +    -0.43675839485699 * S_NumWebPurchases
675864    +          +      0.9068485509802 * S_NumWebVisitsMonth
675865    +          +    -0.10589439992168 * S_RFMstat  +    -1.04488846978483 *
675866    +        S_Recency  +    -0.22850227275517 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = 0.63900672999082 * S_AcceptedCmpTotal + -0.30964832179168 * 
S_Kidhome + -0.32513653413684 * S_Mnt + -0.24581000667509 * S_MntFishProducts + 
0.02617694172605 * S_MntFruits + 0.00781760579393 * S_MntGoldProds + 0.29104948109042 * 
S_MntMeatProducts + -0.02316001924491 * S_MntSweetProducts + -0.36691071804931 * S_MntWines + 
0.32387184925622 * S_NumCatalogPurchases + -0.02259558698489 * S_NumDealsPurchases + 
-0.05302323558282 * S_NumDistPurchases + -0.61057201236183 * S_NumStorePurchases + 
-0.43675839485699 * S_NumWebPurchases + 0.9068485509802 * S_NumWebVisitsMonth + 
-0.10589439992168 * S_RFMstat + -1.04488846978483 * S_Recency + -0.22850227275517 * S_Teenhome 
;
675867    +   H11  = H11  +     0.18111603256896 * AcceptedCmp10
675868    +          +     0.22509521803356 * AcceptedCmp20  +    -0.04654046313147 *
675869    +        AcceptedCmp30  +      0.3384111516657 * AcceptedCmp40
675870    +          +     0.32627827523963 * AcceptedCmp50  +    -0.01568279175973 *
675871    +        Complain0  +    -0.55252517176272 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.18111603256896 * AcceptedCmp10 + 0.22509521803356 * 
AcceptedCmp20 + -0.04654046313147 * AcceptedCmp30 + 0.3384111516657 * AcceptedCmp40 + 
0.32627827523963 * AcceptedCmp50 + -0.01568279175973 * Complain0 + -0.55252517176272 * 
HigherEducationBinary0 ;
675872    +   H12  = H12  +     0.11443639158645 * AcceptedCmp10
675873    +          +    -0.07848565251064 * AcceptedCmp20  +     0.12149050142183 *
675874    +        AcceptedCmp30  +     0.16124218246786 * AcceptedCmp40
675875    +          +     0.08002037216673 * AcceptedCmp50  +     0.19507760774174 *
675876    +        Complain0  +     0.11914737027935 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.11443639158645 * AcceptedCmp10 + -0.07848565251064 * 
AcceptedCmp20 + 0.12149050142183 * AcceptedCmp30 + 0.16124218246786 * AcceptedCmp40 + 
0.08002037216673 * AcceptedCmp50 + 0.19507760774174 * Complain0 + 0.11914737027935 * 
HigherEducationBinary0 ;
675877    +   H13  = H13  +    -0.10931311385786 * AcceptedCmp10
675878    +          +    -0.35789040073328 * AcceptedCmp20  +    -0.38944306116716 *
675879    +        AcceptedCmp30  +    -0.40889901167624 * AcceptedCmp40
675880    +          +    -0.24329354019242 * AcceptedCmp50  +    -0.35456353492115 *
675881    +        Complain0  +     0.13555715311919 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.10931311385786 * AcceptedCmp10 + -0.35789040073328 * 
AcceptedCmp20 + -0.38944306116716 * AcceptedCmp30 + -0.40889901167624 * AcceptedCmp40 + 
-0.24329354019242 * AcceptedCmp50 + -0.35456353492115 * Complain0 + 0.13555715311919 * 
HigherEducationBinary0 ;
675882    +   H14  = H14  +      0.2188684433023 * AcceptedCmp10
675883    +          +    -0.29615454952167 * AcceptedCmp20  +    -0.22271127437354 *
675884    +        AcceptedCmp30  +     0.20823945988265 * AcceptedCmp40
675885    +          +    -0.21625430481282 * AcceptedCmp50  +    -0.18295367581943 *
675886    +        Complain0  +     0.46325732026927 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.2188684433023 * AcceptedCmp10 + -0.29615454952167 * 
AcceptedCmp20 + -0.22271127437354 * AcceptedCmp30 + 0.20823945988265 * AcceptedCmp40 + 
-0.21625430481282 * AcceptedCmp50 + -0.18295367581943 * Complain0 + 0.46325732026927 * 
HigherEducationBinary0 ;
675887    +   H15  = H15  +     0.30998447993837 * AcceptedCmp10
675888    +          +     0.12767836835052 * AcceptedCmp20  +    -0.06080337916302 *
675889    +        AcceptedCmp30  +     0.01251586968598 * AcceptedCmp40
675890    +          +    -0.23770263910732 * AcceptedCmp50  +     0.25109546472381 *
675891    +        Complain0  +    -0.02175844243112 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.30998447993837 * AcceptedCmp10 + 0.12767836835052 * 
AcceptedCmp20 + -0.06080337916302 * AcceptedCmp30 + 0.01251586968598 * AcceptedCmp40 + 
-0.23770263910732 * AcceptedCmp50 + 0.25109546472381 * Complain0 + -0.02175844243112 * 
HigherEducationBinary0 ;
675892    +   H16  = H16  +    -0.62091932539163 * AcceptedCmp10
675893    +          +    -0.51271562673252 * AcceptedCmp20  +    -0.11342469632318 *
675894    +        AcceptedCmp30  +    -0.16507397007692 * AcceptedCmp40
675895    +          +    -0.30784693811801 * AcceptedCmp50  +    -0.25537137844726 *
675896    +        Complain0  +    -0.10971155214877 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.62091932539163 * AcceptedCmp10 + -0.51271562673252 * 
AcceptedCmp20 + -0.11342469632318 * AcceptedCmp30 + -0.16507397007692 * AcceptedCmp40 + 
-0.30784693811801 * AcceptedCmp50 + -0.25537137844726 * Complain0 + -0.10971155214877 * 
HigherEducationBinary0 ;
675897    +   H17  = H17  +    -0.05412380892781 * AcceptedCmp10
675898    +          +    -0.01109263229825 * AcceptedCmp20  +     -0.2110615452485 *
675899    +        AcceptedCmp30  +     0.00965424319008 * AcceptedCmp40
675900    +          +     -0.4258810591025 * AcceptedCmp50  +     0.27308424287361 *
675901    +        Complain0  +      0.0268240614027 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.05412380892781 * AcceptedCmp10 + -0.01109263229825 * 
AcceptedCmp20 + -0.2110615452485 * AcceptedCmp30 + 0.00965424319008 * AcceptedCmp40 + 
-0.4258810591025 * AcceptedCmp50 + 0.27308424287361 * Complain0 + 0.0268240614027 * 
HigherEducationBinary0 ;
675902    +   H11  = H11  +    -0.33757847459033 * Marital_StatusDivorced
675903    +          +     0.00302217414126 * Marital_StatusMarried
675904    +          +      0.2152123397616 * Marital_StatusSingle
675905    +          +    -0.13520964902373 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.33757847459033 * Marital_StatusDivorced + 
0.00302217414126 * Marital_StatusMarried + 0.2152123397616 * Marital_StatusSingle + 
-0.13520964902373 * Marital_StatusTogether ;
675906    +   H12  = H12  +     0.00194872690496 * Marital_StatusDivorced
675907    +          +     0.03439335682344 * Marital_StatusMarried
675908    +          +     0.05021548127829 * Marital_StatusSingle
675909    +          +    -0.21404927960644 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.00194872690496 * Marital_StatusDivorced + 0.03439335682344 
* Marital_StatusMarried + 0.05021548127829 * Marital_StatusSingle + -0.21404927960644 * 
Marital_StatusTogether ;
675910    +   H13  = H13  +     0.48013325378484 * Marital_StatusDivorced
675911    +          +    -0.98905242808423 * Marital_StatusMarried
675912    +          +     0.71786420090726 * Marital_StatusSingle
675913    +          +    -0.99548524974998 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.48013325378484 * Marital_StatusDivorced + 
-0.98905242808423 * Marital_StatusMarried + 0.71786420090726 * Marital_StatusSingle + 
-0.99548524974998 * Marital_StatusTogether ;
675914    +   H14  = H14  +    -0.10242951736314 * Marital_StatusDivorced
675915    +          +       0.050581701391 * Marital_StatusMarried
675916    +          +     0.02970444912382 * Marital_StatusSingle
675917    +          +    -0.31932441367684 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.10242951736314 * Marital_StatusDivorced + 0.050581701391 
* Marital_StatusMarried + 0.02970444912382 * Marital_StatusSingle + -0.31932441367684 * 
Marital_StatusTogether ;
675918    +   H15  = H15  +    -0.15638584915255 * Marital_StatusDivorced
675919    +          +     0.24057441973108 * Marital_StatusMarried
675920    +          +    -0.25555699216503 * Marital_StatusSingle
675921    +          +     0.42413452422729 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.15638584915255 * Marital_StatusDivorced + 
0.24057441973108 * Marital_StatusMarried + -0.25555699216503 * Marital_StatusSingle + 
0.42413452422729 * Marital_StatusTogether ;
675922    +   H16  = H16  +     0.21905536295614 * Marital_StatusDivorced
675923    +          +     0.05764012832482 * Marital_StatusMarried
675924    +          +     0.09900502198755 * Marital_StatusSingle
675925    +          +    -0.29296987558734 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.21905536295614 * Marital_StatusDivorced + 0.05764012832482 
* Marital_StatusMarried + 0.09900502198755 * Marital_StatusSingle + -0.29296987558734 * 
Marital_StatusTogether ;
675926    +   H17  = H17  +    -0.10338488336034 * Marital_StatusDivorced
675927    +          +    -0.91005475926987 * Marital_StatusMarried
675928    +          +     0.69014529167411 * Marital_StatusSingle
675929    +          +    -0.54713111008177 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.10338488336034 * Marital_StatusDivorced + 
-0.91005475926987 * Marital_StatusMarried + 0.69014529167411 * Marital_StatusSingle + 
-0.54713111008177 * Marital_StatusTogether ;
675930    +   H11  =     0.41764308857177 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.41764308857177 + H11 ;
675931    +   H12  =     0.52419261709948 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.52419261709948 + H12 ;
675932    +   H13  =    -0.81831247743605 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.81831247743605 + H13 ;
675933    +   H14  =    -0.81516752423378 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.81516752423378 + H14 ;
675934    +   H15  =     0.07454870495209 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.07454870495209 + H15 ;
675935    +   H16  =    -0.59819903707625 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.59819903707625 + H16 ;
675936    +   H17  =     0.67503972430369 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = 0.67503972430369 + H17 ;
675937    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
675938    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
675939    +   H13  = TANH(H13 );
The SAS System

MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
675940    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
675941    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
675942    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
675943    +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
675944    +END;
MPRINT(EM_DIAGRAM):   END;
675945    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
675946    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
675947    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
675948    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
675949    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
675950    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
675951    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
675952    +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
675953    +END;
MPRINT(EM_DIAGRAM):   END;
675954    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
675955    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
675956    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
675957    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
675958    +   P_DepVar1  =    -0.00227674838385 * H11  +     0.58155599175904 * H12
675959    +          +     2.88143779402566 * H13  +    -1.63691423838644 * H14
675960    +          +     2.39141643331858 * H15  +     3.17879887277365 * H16
675961    +          +     2.23901808700024 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.00227674838385 * H11 + 0.58155599175904 * H12 + 
2.88143779402566 * H13 + -1.63691423838644 * H14 + 2.39141643331858 * H15 + 3.17879887277365 * 
H16 + 2.23901808700024 * H17 ;
675962    +   P_DepVar1  =     -1.5295367762329 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.5295367762329 + P_DepVar1 ;
675963    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
675964    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
675965    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
675966    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
675967    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
675968    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
675969    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
675970    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
675971    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
675972    +END;
MPRINT(EM_DIAGRAM):   END;
675973    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
675974    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
675975    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
675976    +END;
MPRINT(EM_DIAGRAM):   END;
675977    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
675978    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
675979    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
675980    +END;
MPRINT(EM_DIAGRAM):   END;
675981    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
675982    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
675983    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
675984    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
675985    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
675986    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
675987    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
675988    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
675989    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
675990    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
675991    +END;
MPRINT(EM_DIAGRAM):   END;
675992    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
675993    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
675994    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
675995    +drop
675996    +H11
675997    +H12
675998    +H13
675999    +H14
676000    +H15
676001    +H16
676002    +H17
676003    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
676004    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
676005     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
676006     quit;
676007     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
676008     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
676009     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
676010     retain ID 2 Node "Neural10";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural10";
676011     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
676012     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2332 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2332 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

676013     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
676014     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
676015     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2332 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2332 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

676016     proc sort data=EMWS8.Neural10_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural10_variableset out=_temp2(keep=NAME CREATOR);
676017     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
676018     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.NEURAL10_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

676019     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
676020     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
676021     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
676022     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

676023     proc contents data=EMWS8.Neural10_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural10_train out=_meta(keep=NAME) noprint;
676024     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

676025     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
676026     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
676027     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

676028     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
676029     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
676030     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
676031     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

676032     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
676033     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
676033   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1226 rows and 5 columns.

676034     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

676035     proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
676036     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1226 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL_FCMP has 1226 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

676037     filename _pref
676037   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
676038     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
676039     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
676040    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
676041    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
676042    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
676043    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
676044    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
676045    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
676046     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
676047     quit;
676048     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
676049     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
676050     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
676051     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
676052     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
676053     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

676054     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
676055     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
676056     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

676057     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
676058     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
676059     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

676060     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
676061     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
676062     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
676063     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

676064     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
676065     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

676066     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
676067     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
676068     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

676069     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
676070     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
676071     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
676072     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

676073     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
676074     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
676074   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

676075     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

676076     proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
676077     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL_FCMP has 1230 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

676078     filename _pref
676078   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
676079     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
676080     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
676081    +
676082    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
676083    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
676083   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
676084    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
676085    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
676086    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
676087    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
676088    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
676089     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
676090     quit;
676091     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
676092     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
676093     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
676094     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
676095     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
676096     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

676097     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
676098     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
676099     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

676100     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
676101     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
676102     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

676103     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
676104     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
676105     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
676106     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

676107     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
676108     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

676109     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
676110     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
676111     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

676112     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
676113     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
676114     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
676115     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

676116     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
676117     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
676117   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

676118     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

676119     proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
676120     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL_FCMP has 1269 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

676121     filename _pref
676121   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
676122     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
676123     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
676124    +
676125    +
676126    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
676127    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
676128    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
676129    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
676130    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
676131    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
676132    +
676133    +
676134    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
676135    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
676136    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
676137    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
676138    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
676139    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
676140    +
676141    +
676142    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
676143    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
676144    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
676145    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
676146    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
676147    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
676148    +
676149    +
676150    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
676151    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
676152    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
676153    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
676154    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
676155    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
676156    +
676157    +
676158    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
676159    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
676160    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
676161    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
676162    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
676163    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
676164    +
676165    +
676166    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
676167    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
676168    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
676169    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
676170    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
676171    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
676172    +
676173    +
676174    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
676175    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
676176    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
676177    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
676178    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
676179    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
676180    +
676181    +
676182    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
676183    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
676184    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
676185    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
676186    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
676187    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
676188    +if
676189    +_FILTERNORM1 not in ( '.')
676190    + and
676191    +_FILTERNORM2 not in ( '.')
676192    + and
676193    +_FILTERNORM3 not in ( '.')
676194    + and
676195    +_FILTERNORM4 not in ( '.')
676196    + and
676197    +_FILTERNORM5 not in ( '.')
676198    + and
676199    +_FILTERNORM6 not in ( '.')
676200    + and
676201    +_FILTERNORM7 not in ( ' ')
676202    + and
676203    +_FILTERNORM8 not in ( ' ')
676204    +and
676205    +( Dt_Customer ne .)
676206    +and ( Income ne . and (Income<=107000))
676207    +and ( Kidhome ne .)
676208    +and ( MntFishProducts ne .)
676209    +and ( MntFruits ne .)
676210    +and ( MntGoldProds ne .)
676211    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
676212    +and ( MntSweetProducts ne .)
676213    +and ( MntWines ne .)
676214    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
676215    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
676216    +and ( NumStorePurchases ne .)
676217    +and ( NumWebPurchases ne .)
676218    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
676219    +and ( Recency ne .)
676220    +and ( Teenhome ne .)
676221    +and ( Year_Birth ne .)
676222    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
676223    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
676224    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
676225    +end;
MPRINT(EM_DIAGRAM):   end;
676226    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
676227    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
676228     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
676229     quit;
676230     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
676231     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
676232     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
676233     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
676234     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
676235     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

676236     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
676237     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
676238     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

676239     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
676240     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
676241     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

676242     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
676243     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
676244     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
676245     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

676246     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
676247     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

676248     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
676249     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
676250     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

676251     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
676252     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
676253     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
676254     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

676255     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
676256     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
676256   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

676257     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

676258     proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl_FCMP data=_tempx;
676259     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL_FCMP has 1335 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

676260     %macro varDept(fcmpdata=,id=);
676261     %global nobs&id scoreFlag&id;
676262     %let scoreFlag&id = 0;
676263     %if &id=1 or ^&fcmpStart %then %do;
676264     proc sort data=&fcmpdata out=_temp&id nodupkey;
676265     by NAME;
676266     where id=&id and LHS in( %let j=1;
676267     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
676268     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
676269     "&var" %let j = %eval(&j+1);
676270     %end;
676271     );
676272     run;
676273     %let dsid = %sysfunc(open(_temp&id));
676274     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
676275     %let dsid = %sysfunc(close(&dsid));
676276     %if &&nobs&id %then %do;
676277     %let scoreFlag&id = 1;
676278     %let fcmpStart = 1;
676279     %end;
676280     %else %let fcmpStart = 0;
676281     %end;
676282     %else %do;
676283     proc sort data=&fcmpdata out=_tempid;
676284     where id=&id;
676285     by LHS;
676286     run;
676287     %let dsid = %sysfunc(open(_tempid));
676288     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
676289     %let dsid = %sysfunc(close(&dsid));
676290     %if ^&&nobs&id %then %do;
676291     proc datasets lib=work nolist;
676292     delete _tempid;
676293     run;
676294     quit;
676295     %end;
676296     %else %do;
676297     data _tempAll;
676298     set %let j=%eval(&id-1);
676299     %do x=1 %to &j;
676300     %if &&nobs&x %then %do;
676301     _temp&x %end;
676302     %end;
676303     ;
676304     run;
676305     proc sql;
676306     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
676306   ! work._tempid p2 where p.name=p2.lhs;
676307     quit;
676308     data _temp&id;
676309     set _temp&id;
676310     where LHS ne '' and NAME ne '' and Node ne '';
676311     run;
676312     proc datasets lib=work nolist;
676313     delete _tempAll;
676314     run;
676315     %let dsid = %sysfunc(open(_temp&id));
676316     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
676317     %let dsid = %sysfunc(close(&dsid));
676318     %if ^&&nobs&id %then %do;
676319     proc datasets lib=work nolist;
676320     delete _temp&id;
676321     run;
676322     quit;
676323     %end;
676324     %else %do;
676325     %let scoreFlag&id = 1;
676326     data _temp&id;
676327     set _temp&id;
676328     where LHS ne NAME and node ne '';
676329     run;
676330     %let dsid = %sysfunc(open(_temp&id));
676331     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
676332     %let dsid = %sysfunc(close(&dsid));
676333     %if ^&&nobs&id %then %do;
676334     proc datasets lib=work nolist;
676335     delete _temp&id;
676336     run;
676337     quit;
676338     %end;
676339     %else %do;
676340     proc sort data=_temp&id nodupkey;
676341     by LHS NAME;
676342     run;
676343     %end;
676344     %end;
676345     %end;
676346     %end;
676347     %mend varDept;
676348     %macro optCode(outdata=fcmpdata);
676349     %global fcmpStart;
676350     %let fcmpStart = 0;
676351     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
676352     %let NumNodes=9;
676353     %do k=1 %to &NumNodes;
676354     %vardept(fcmpdata=&outdata, id=&k);
676355     %end;
676356     %mend optCode;
676357     %optcode(outData=EMWS8.Ensmbl_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 110 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 82 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 28 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 28 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 28 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 3 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 3 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 3 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 3 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 28 observations read from the data set WORK._TEMP2.
NOTE: There were 3 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 24 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 24 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 24 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 24 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 24 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 24 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 24 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 28 observations read from the data set WORK._TEMP2.
NOTE: There were 3 observations read from the data set WORK._TEMP5.
NOTE: There were 24 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 55 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

676358     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
676359     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
676360     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
676361     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

676362     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
676363     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
676364     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
676365     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

676366     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
676367     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
676367   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 3 rows and 3 columns.

676368     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

676369     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
676370     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
676371     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 3 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 3 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

676372     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
676373     * Ensmbl: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl: Computing metadata for TRAIN data;
676374     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.ENSMBL_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl_TRAIN out=WORK.M39G7YFO noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M39G7YFO;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M39G7YFO(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M39G7YFO;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M39G7YFO;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2VUBLCD NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2VUBLCD;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M2VUBLCD;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M01O577C(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M2VUBLCD;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2VUBLCD;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M2VUBLCD;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2VUBLCD;
MPRINT(EMADVISECOLUMNS):   set WORK.M2VUBLCD;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Reg_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Reg_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1" 
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
676694     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
676695     set EMWS8.Ensmbl_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl_EMINFO;
676696     where DATA='Ensmbl' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
676697     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.ENSMBL_EMINFO.
      WHERE (DATA='Ensmbl') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

676698     data EMWS8.Ensmbl_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl_EMINFO;
676699     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
676700     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
676701     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.ENSMBL_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
676705     run;
676706     data EMWS8.Ensmbl_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl_EMINFO;
676707     set EMWS8.Ensmbl_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl_EMINFO WORK.MODELTEMP_INFO;
676708     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

676709     proc sort data = EMWS8.Ensmbl_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl_EMINFO NOTHREADS;
676710     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
676711     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL_EMINFO.
NOTE: The data set EMWS8.ENSMBL_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

676712     proc sort data = EMWS8.Reg_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Reg_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
676713     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
676714     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS8.REG_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

676715     proc sort data = EMWS8.Ensmbl_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
676716     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
676717     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

676718     data EMWS8.Ensmbl_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl_EMINFO;
676719     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
676720     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
676721     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

676722     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
676723     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
676724     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
676725     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

NOTE: View EMWS8.ENSMBL_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      
NOTE: View EMWS8.ENSMBL_VALIDATE.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
